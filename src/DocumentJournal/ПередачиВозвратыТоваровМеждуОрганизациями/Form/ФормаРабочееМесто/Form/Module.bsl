////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ОбщегоНазначенияУТ.НастроитьПодключаемоеОборудование(ЭтаФорма);
	
	УстановитьПараметрыДинамическихСписков();
	
	// Подсистема "ЭлектронныеДокументы"
	УстановитьВидимостьДоступность();
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	МенеджерОборудованияКлиент.ПодключитьОборудованиеПриОткрытииФормы(ЭтаФорма, "СканерШтрихкода");
	
КонецПроцедуры

&НаКлиенте
Процедура ПриЗакрытии()
	
	МенеджерОборудованияКлиент.ОтключитьОборудованиеПриЗакрытииФормы(ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	// ПодключаемоеОборудование
	Если Источник = "ПодключаемоеОборудование" И ВводДоступен() Тогда
		Если ИмяСобытия = "ScanData" Тогда
			ОбработатьШтрихкоды(МенеджерОборудованияКлиент.ПреобразоватьДанныеСоСканераВСтруктуру(Параметр));
		КонецЕсли;
	КонецЕсли;
	// Конец ПодключаемоеОборудование
	
	Если ИмяСобытия = "Запись_ПередачаТоваровМеждуОрганизациями"
		Или ИмяСобытия = "Запись_ВозвратТоваровМеждуОрганизациями"
	Тогда
		Элементы.КОформлению.Обновить();
	КонецЕсли;
	
	// Подсистема "ЭлектронныеДокументы"
	Если ИмяСобытия = "ОбновитьСостояниеЭД" ИЛИ ИмяСобытия = "ПолученыНовыеЭД" Тогда
		Элементы.Список.Обновить();
	КонецЕсли;
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ ШАПКИ ФОРМЫ

&НаКлиенте
Процедура ПериодВариантПриИзменении(Элемент)
	УстановитьПараметрыДинамическихСписков();
КонецПроцедуры

&НаКлиенте
Процедура ПериодДатаОкончанияПриИзменении(Элемент)
	УстановитьПараметрыДинамическихСписков();
КонецПроцедуры

&НаКлиенте
Процедура СтраницыПриСменеСтраницы(Элемент, ТекущаяСтраница)
	Если ТекущаяСтраница = Элементы.СтраницаКОформлению Тогда
		Элементы.КОформлению.Обновить();
	КонецЕсли;
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ КОМАНД ФОРМЫ

&НаКлиенте
Процедура СоздатьВозвратПоКомиссии(Команда)
	ХозяйственнаяОперация = ПредопределенноеЗначение("Перечисление.ХозяйственныеОперации.ВозвратПоКомиссииМеждуОрганизациями");
	СтруктураПараметры = Новый Структура("Основание", Новый Структура("ХозяйственнаяОперация", ХозяйственнаяОперация));
	ОткрытьФорму("Документ.ВозвратТоваровМеждуОрганизациями.ФормаОбъекта", СтруктураПараметры, Элементы.Список);
КонецПроцедуры

&НаКлиенте
Процедура СоздатьВозвратТоваров(Команда)
	ОткрытьФорму("Документ.ВозвратТоваровМеждуОрганизациями.ФормаОбъекта", Неопределено, Элементы.Список);
КонецПроцедуры

&НаКлиенте
Процедура СоздатьПередачуНаКомиссию(Команда)
	ХозяйственнаяОперация = ПредопределенноеЗначение("Перечисление.ХозяйственныеОперации.ПередачаНаКомиссиюВДругуюОрганизацию");
	СтруктураПараметры = Новый Структура("Основание", Новый Структура("ХозяйственнаяОперация", ХозяйственнаяОперация));
	ОткрытьФорму("Документ.ПередачаТоваровМеждуОрганизациями.ФормаОбъекта", СтруктураПараметры, Элементы.Список);
КонецПроцедуры

&НаКлиенте
Процедура СоздатьПередачуТоваров(Команда)
	ОткрытьФорму("Документ.ПередачаТоваровМеждуОрганизациями.ФормаОбъекта", Неопределено, Элементы.Список);
КонецПроцедуры

&НаКлиенте
Процедура СоздатьДокумент(Команда)
	Строка = Элементы.КОформлению.ТекущиеДанные;
	Если Строка <> Неопределено Тогда
		СтруктураОснование = Новый Структура("
			|Организация,
			|ОрганизацияПолучатель,
			|Склад,
			|ПередачаПодДеятельность,
			|ТипЗапасов,
			|НачалоПериода,
			|КонецПериода,
			|ЗаполнятьПоСхеме,
			|ХозяйственнаяОперация",
			Строка.Отправитель,
			Строка.Получатель,
			Строка.Склад,
			Строка.ПередачаПодДеятельность,
			Строка.ТипЗапасов,
			Период.ДатаНачала,
			Период.ДатаОкончания,
			Истина,
			Строка.ХозяйственнаяОперация
		);
		СтруктураПараметры = Новый Структура("Основание", СтруктураОснование);
		
		Если Строка.ХозяйственнаяОперация = ПредопределенноеЗначение("Перечисление.ХозяйственныеОперации.ПередачаНаКомиссиюВДругуюОрганизацию")
			Или Строка.ХозяйственнаяОперация = ПредопределенноеЗначение("Перечисление.ХозяйственныеОперации.РеализацияТоваровВДругуюОрганизацию")
		Тогда
			ОткрытьФорму("Документ.ПередачаТоваровМеждуОрганизациями.ФормаОбъекта", СтруктураПараметры, Элементы.Список);
		ИначеЕсли Строка.ХозяйственнаяОперация = ПредопределенноеЗначение("Перечисление.ХозяйственныеОперации.ВозвратТоваровМеждуОрганизациями")
			Или Строка.ХозяйственнаяОперация = ПредопределенноеЗначение("Перечисление.ХозяйственныеОперации.ВозвратПоКомиссииМеждуОрганизациями")
		Тогда
			ОткрытьФорму("Документ.ВозвратТоваровМеждуОрганизациями.ФормаОбъекта", СтруктураПараметры, Элементы.Список);
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

////////////////////////////////////////////////////////////////////////////////
// При изменении реквизитов

&НаСервере
Процедура УстановитьПараметрыДинамическихСписков()
	ДатаОстатков = КонецДня(?(ЗначениеЗаполнено(Период.ДатаОкончания),Период.ДатаОкончания,'39991231'));
	КОформлению.Параметры.УстановитьЗначениеПараметра("Граница",Новый Граница(ДатаОстатков,ВидГраницы.Включая));
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// Штрихкоды и торговое оборудование

&НаКлиенте
Процедура ОбработатьШтрихкоды(Данные)
	
	МассивСсылок = СсылкаНаЭлементСпискаПоШтрихкоду(Данные.Штрихкод);
	Если МассивСсылок.Количество() > 0 Тогда
		
		Ссылка = МассивСсылок[0];
		Элементы.Список.ТекущаяСтрока = Ссылка;
		Элементы.Страницы.ТекущаяСтраница = Элементы.Страницы.ПодчиненныеЭлементы.СтраницаДокументов;
		
		ОткрытьЗначение(Ссылка);
		
	Иначе
		ШтрихкодированиеПечатныхФормКлиент.ОбъектНеНайден(Данные.Штрихкод);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Функция СсылкаНаЭлементСпискаПоШтрихкоду(Штрихкод)
	
	Менеджеры = Новый Массив();
	Менеджеры.Добавить(ПредопределенноеЗначение("Документ.ВозвратТоваровМеждуОрганизациями.ПустаяСсылка"));
	Менеджеры.Добавить(ПредопределенноеЗначение("Документ.ПередачаТоваровМеждуОрганизациями.ПустаяСсылка"));
	Возврат ШтрихкодированиеПечатныхФормКлиент.ПолучитьСсылкуПоШтрихкодуТабличногоДокумента(Штрихкод, Менеджеры);
	
КонецФункции

////////////////////////////////////////////////////////////////////////////////
// Подсистема "ЭлектронныеДокументы"

&НаСервере
Процедура УстановитьВидимостьДоступность()
	
	Если Элементы.Список.ПодчиненныеЭлементы.Найти("СостояниеВерсииЭД") <> Неопределено Тогда
		Элементы.Список.ПодчиненныеЭлементы.СостояниеВерсииЭД.Видимость = ЭлектронныеДокументыПереопределяемый.ПолучитьЗначениеФункциональнойОпции("ИспользоватьОбменЭДМеждуОрганизациями");
	КонецЕсли;
	
КонецПроцедуры