
///////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ОбщегоНазначенияУТ.НастроитьПодключаемоеОборудование(ЭтаФорма);
	
	СтруктураБыстрогоОтбора = Неопределено;
	Параметры.Свойство("СтруктураБыстрогоОтбора", СтруктураБыстрогоОтбора);
	
	Если СтруктураБыстрогоОтбора <> Неопределено Тогда
		Если СтруктураБыстрогоОтбора.Свойство("ВариантПериода") Тогда
			Период.Вариант = СтруктураБыстрогоОтбора.ВариантПериода;
		Иначе
			Период.Вариант = ВариантСтандартногоПериода.ПроизвольныйПериод;
		КонецЕсли;
	КонецЕсли;
	
	УстановитьПараметрыДинамическихСписков();
	
	УстановитьТекущуюСтраницу();
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	МенеджерОборудованияКлиент.ПодключитьОборудованиеПриОткрытииФормы(ЭтаФорма, "СканерШтрихкода");
	
КонецПроцедуры

&НаКлиенте
Процедура ПриЗакрытии()

	МенеджерОборудованияКлиент.ОтключитьОборудованиеПриЗакрытииФормы(ЭтаФорма);

КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	// ПодключаемоеОборудование
	Если Источник = "ПодключаемоеОборудование" И ВводДоступен() Тогда
		Если ИмяСобытия = "ScanData" Тогда
			ОбработатьШтрихкоды(МенеджерОборудованияКлиент.ПреобразоватьДанныеСоСканераВСтруктуру(Параметр));
		КонецЕсли;
	КонецЕсли;
	// Конец ПодключаемоеОборудование
	
	Если ИмяСобытия = "Запись_ОтчетКомиссионера"
	 ИЛИ ИмяСобытия = "Запись_ОтчетКомиссионераОСписании" Тогда
		Элементы.ТоварыПереданные.Обновить();
	КонецЕсли;
	
	Если ИмяСобытия = "ОбновитьСостояниеЭД" Тогда
		Элементы.Список.Обновить();
	КонецЕсли;

КонецПроцедуры

&НаСервере
Процедура ПриЗагрузкеДанныхИзНастроекНаСервере(Настройки)
	
	Если СтруктураБыстрогоОтбора <> Неопределено Тогда
		СтруктураБыстрогоОтбора.Свойство("Комиссионер", Комиссионер);
		
		Если СтруктураБыстрогоОтбора.Свойство("ВариантПериода") Тогда
			Период.Вариант = СтруктураБыстрогоОтбора.ВариантПериода;
		Иначе
			Период.Вариант = ВариантСтандартногоПериода.ПроизвольныйПериод;
		КонецЕсли;
		
		Настройки.Удалить("Комиссионер");
		Настройки.Удалить("Период.Вариант");
	Иначе
		Комиссионер = Настройки.Получить("Комиссионер");
		Вариант = Настройки.Получить("Период.Вариант");
		Если Вариант <> Неопределено Тогда
			Период.Вариант = Вариант;
		КонецЕсли;
	КонецЕсли;
	
	УстановитьОтборДинамическихСписков();
	УстановитьПараметрыДинамическихСписков();
	
КонецПроцедуры

///////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ ШАПКИ ФОРМЫ

&НаКлиенте
Процедура КомиссионерПриИзменении(Элемент)
	
	УстановитьОтборДинамическихСписков();
	
КонецПроцедуры

&НаКлиенте
Процедура ПериодВариантПриИзменении(Элемент)
	
	УстановитьПараметрыДинамическихСписков();
	
КонецПроцедуры

&НаКлиенте
Процедура ПериодДатаОкончанияПриИзменении(Элемент)
	
	УстановитьПараметрыДинамическихСписков();
	
КонецПроцедуры

&НаКлиенте
Процедура СтраницыПриСменеСтраницы(Элемент, ТекущаяСтраница)
	
	Если ТекущаяСтраница = Элементы.СтраницаКомиссионеры Тогда
		Элементы.ТоварыПереданные.Обновить();
	КонецЕсли;
	
КонецПроцедуры

///////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ КОМАНД ФОРМЫ

&НаКлиенте
Процедура СоздатьОтчетКомиссионераОПродажах(Команда)
	
	Строка = Элементы.ТоварыПереданные.ТекущиеДанные;
	Если Строка <> Неопределено Тогда
		СтруктураПараметры = СтруктураПараметровОтчетаКомиссионера(Строка);
		ОткрытьФорму("Документ.ОтчетКомиссионера.ФормаОбъекта", СтруктураПараметры, Элементы.Список);
	Иначе
		Предупреждение(НСтр("ru='Команда не может быть выполнена для указанного объекта.'"));
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура СоздатьОтчетКомиссионераОСписании(Команда)
	
	Строка = Элементы.ТоварыПереданные.ТекущиеДанные;
	Если Строка <> Неопределено Тогда
		СтруктураПараметры = СтруктураПараметровОтчетаКомиссионера(Строка);
		ОткрытьФорму("Документ.ОтчетКомиссионераОСписании.ФормаОбъекта", СтруктураПараметры, Элементы.Список);
	Иначе
		Предупреждение(НСтр("ru='Команда не может быть выполнена для указанного объекта.'"));
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура СоздатьСчетНаОплату(Команда)
	
	Строка = Элементы.Список.ТекущиеДанные;
	Если Строка <> Неопределено Тогда
		
		Если ТипЗнч(Строка.Ссылка) = Тип("ДокументСсылка.ОтчетКомиссионера") Тогда
			ПараметрыФормы = Новый Структура("ДокументОснование", Строка.Ссылка);
			ОткрытьФорму("Документ.СчетНаОплатуКлиенту.Форма.ФормаСозданияСчетовНаОплату", ПараметрыФормы);
			
		ИначеЕсли ТипЗнч(Строка.Ссылка) = Тип("ДокументСсылка.ОтчетКомиссионераОСписании") Тогда
			ПараметрыФормы = Новый Структура("Основание", Строка.Ссылка);
			ОткрытьФорму("Документ.СчетНаОплатуКлиенту.ФормаОбъекта", ПараметрыФормы);
			
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

///////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

///////////////////////////////////////////////////////////////////////////////
// Штрихкоды и торговое оборудование

&НаКлиенте
Функция СсылкаНаЭлементСпискаПоШтрихкоду(Штрихкод)
	
	Менеджеры = Новый Массив();
	Менеджеры.Добавить(ПредопределенноеЗначение("Документ.ОтчетКомиссионера.ПустаяСсылка"));
	Менеджеры.Добавить(ПредопределенноеЗначение("Документ.ОтчетКомиссионераОСписании.ПустаяСсылка"));
	Возврат ШтрихкодированиеПечатныхФормКлиент.ПолучитьСсылкуПоШтрихкодуТабличногоДокумента(Штрихкод, Менеджеры);
	
КонецФункции

&НаКлиенте
Процедура ОбработатьШтрихкоды(Данные)
	
	МассивСсылок = СсылкаНаЭлементСпискаПоШтрихкоду(Данные.Штрихкод);
	Если МассивСсылок.Количество() > 0 Тогда
		Ссылка = МассивСсылок[0];
		Элементы.Список.ТекущаяСтрока = Ссылка;
		ОткрытьЗначение(Ссылка);
	Иначе
		ШтрихкодированиеПечатныхФормКлиент.ОбъектНеНайден(Данные.Штрихкод);
	КонецЕсли;
	
КонецПроцедуры

///////////////////////////////////////////////////////////////////////////////
// Прочее

&НаСервере
Процедура УстановитьПараметрыДинамическихСписков()
	
	ДатаОстатков = ?(ЗначениеЗаполнено(Период.ДатаОкончания), Период.ДатаОкончания, '00010101');
	
	Если ЗначениеЗаполнено(ДатаОстатков) Тогда
		Граница = Новый Граница(КонецДня(ДатаОстатков), ВидГраницы.Включая);
	Иначе
		Граница = ДатаОстатков;
	КонецЕсли;
	
	ТоварыПереданные.Параметры.УстановитьЗначениеПараметра("Граница", Граница);
	
КонецПроцедуры

&НаСервере
Функция МассивДинамическихСписков()

	МассивСписков = Новый Массив;
	МассивСписков.Добавить(Список);
	МассивСписков.Добавить(ТоварыПереданные);
	
	Возврат МассивСписков;

КонецФункции

&НаСервере
Процедура УстановитьОтборДинамическихСписков()
	
	Для Каждого ДинамическийСписок Из МассивДинамическихСписков() Цикл
		ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбора(ДинамическийСписок.Отбор, "Партнер", Комиссионер, ВидСравненияКомпоновкиДанных.Равно,,ЗначениеЗаполнено(Комиссионер));
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Функция СтруктураПараметровОтчетаКомиссионера(Строка)
	
	СтруктураОснование = Новый Структура("Организация, Партнер, Соглашение, НачалоПериода, КонецПериода, ПоРезультатамИнвентаризации, ЗаполнятьПоСоглашению",
		Строка.Организация,
		Строка.Комиссионер,
		Строка.Соглашение,
		Период.ДатаНачала,
		Период.ДатаОкончания,
		Истина, // ПоРезультатамИнвентаризации
		Истина // ЗаполнятьПоСоглашению
	);
	СтруктураПараметры = Новый Структура;
	СтруктураПараметры.Вставить("Основание", СтруктураОснование);
	
	Возврат СтруктураПараметры;
	
КонецФункции

///////////////////////////////////////////////////////////////////////////////
// Управление элементами формы

&НаСервере
Процедура УстановитьТекущуюСтраницу()
	
	ИмяТекущейСтраницы = "";
	
	Если Параметры.Свойство("ИмяТекущейСтраницы", ИмяТекущейСтраницы) Тогда
		Если ЗначениеЗаполнено(ИмяТекущейСтраницы) Тогда
			ТекущийЭлемент = Элементы[ИмяТекущейСтраницы];
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры
