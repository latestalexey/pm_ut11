#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда


////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ

Процедура ПередЗаписью(Отказ, Замещение)

	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;

	Для Каждого Запись Из ЭтотОбъект Цикл

		Если Запись.Заказано >0 Тогда 
			Запись.КЗаказу = - Запись.Заказано;
		КонецЕсли;

		Если Запись.ВидДвижения = ВидДвиженияНакопления.Приход И Запись.Потребность >0 И Запись.НаличиеСоСклада = 0 Тогда 
			Запись.КЗаказу = Запись.Потребность;
		КонецЕсли;

		Если Запись.ВидДвижения = ВидДвиженияНакопления.Расход И Запись.Потребность > 0 Тогда 
			Если Запись.НаличиеПодЗаказ = 0 И Запись.НаличиеСоСклада = 0 Тогда 
				ВызватьИсключение НСтр("ru = 'Неверные движения по регстру обеспечение заказов : уменьшение потребности без списания наличия'");
			КонецЕсли;
		КонецЕсли;

	КонецЦикла;

	Если Не ПроведениеСервер.РассчитыватьИзменения(ДополнительныеСвойства) Тогда
		Возврат;
	КонецЕсли;

	СтруктураВременныеТаблицы = ДополнительныеСвойства.ДляПроведения.СтруктураВременныеТаблицы;
	БлокироватьДляИзменения = Истина;

	// Текущее состояние набора помещается во временную таблицу "ДвиженияТоварыКОтгрузкеПередЗаписью",
	// чтобы при записи получить изменение нового набора относительно текущего.

	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Регистратор", Отбор.Регистратор.Значение);
	Запрос.УстановитьПараметр("ЭтоНовый",    ДополнительныеСвойства.ЭтоНовый);
	Запрос.МенеджерВременныхТаблиц = СтруктураВременныеТаблицы.МенеджерВременныхТаблиц;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	Таблица.Назначение     КАК Назначение,
	|	Таблица.Номенклатура   КАК Номенклатура,
	|	Таблица.Характеристика КАК Характеристика,
	|	Таблица.Склад          КАК Склад,
	|	ВЫБОР КОГДА Таблица.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) ТОГДА
	|			Таблица.Потребность
	|		ИНАЧЕ
	|			-Таблица.Потребность
	|	КОНЕЦ                  КАК ПотребностьПередЗаписью,
	|
	|	ВЫБОР КОГДА Таблица.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) ТОГДА
	|			Таблица.НаличиеПодЗаказ
	|		ИНАЧЕ
	|			-Таблица.НаличиеПодЗаказ
	|	КОНЕЦ                  КАК НаличиеПередЗаписью,
	|
	|	ВЫБОР КОГДА Таблица.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) ТОГДА
	|			Таблица.НаличиеСоСклада
	|		ИНАЧЕ
	|			-Таблица.НаличиеСоСклада
	|	КОНЕЦ                  КАК НаличиеСоСкладаПередЗаписью,
	|
	|	ВЫБОР КОГДА Таблица.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) ТОГДА
	|			Таблица.Заказано
	|		ИНАЧЕ
	|			-Таблица.Заказано
	|	КОНЕЦ                  КАК ЗаказаноПередЗаписью,
	|
	|	ВЫБОР КОГДА Таблица.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) ТОГДА
	|			Таблица.КЗаказу
	|		ИНАЧЕ
	|			-Таблица.КЗаказу
	|	КОНЕЦ                  КАК ЗаказатьПередЗаписью
	|
	|ПОМЕСТИТЬ РезервыТоваровПередЗаписью
	|ИЗ
	|	РегистрНакопления.ОбеспечениеЗаказов КАК Таблица
	|ГДЕ
	|	Таблица.Регистратор = &Регистратор
	|	И НЕ &ЭтоНовый
	|";
	Запрос.Выполнить();

КонецПроцедуры

Процедура ПриЗаписи(Отказ, Замещение)

	Если ОбменДанными.Загрузка Или Не ПроведениеСервер.РассчитыватьИзменения(ДополнительныеСвойства) Тогда
		Возврат;
	КонецЕсли;

	СтруктураВременныеТаблицы = ДополнительныеСвойства.ДляПроведения.СтруктураВременныеТаблицы;
	// Рассчитывается изменение нового набора относительно текущего с учетом накопленных изменений
	// и помещается во временную таблицу.
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Регистратор", Отбор.Регистратор.Значение);
	Запрос.МенеджерВременныхТаблиц = СтруктураВременныеТаблицы.МенеджерВременныхТаблиц;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ТаблицаИзменений.Назначение                      КАК Назначение,
	|	ТаблицаИзменений.Номенклатура                    КАК Номенклатура,
	|	ТаблицаИзменений.Характеристика                  КАК Характеристика,
	|	ТаблицаИзменений.Склад                           КАК Склад,
	|	СУММА(ТаблицаИзменений.НаличиеИзменение)         КАК НаличиеИзменение,
	|	СУММА(ТаблицаИзменений.НаличиеСоСкладаИзменение) КАК НаличиеСоСкладаИзменение,
	|	СУММА(ТаблицаИзменений.ПотребностьИзменение)     КАК ПотребностьИзменение,
	|	СУММА(ТаблицаИзменений.ЗаказаноИзменение)        КАК ЗаказаноИзменение,
	|	СУММА(ТаблицаИзменений.ЗаказатьИзменение)        КАК ЗаказатьИзменение
	|
	|ПОМЕСТИТЬ ОбеспечениеЗаказовИзменение
	|ИЗ
	|	(ВЫБРАТЬ
	|		Таблица.Назначение                  КАК Назначение,
	|		Таблица.Номенклатура                КАК Номенклатура,
	|		Таблица.Характеристика              КАК Характеристика,
	|		Таблица.Склад                       КАК Склад,
	|		Таблица.НаличиеПередЗаписью         КАК НаличиеИзменение,
	|		Таблица.НаличиеСоСкладаПередЗаписью КАК НаличиеСоСкладаИзменение,
	|		Таблица.ПотребностьПередЗаписью     КАК ПотребностьИзменение,
	|		Таблица.ЗаказаноПередЗаписью        КАК ЗаказаноИзменение,
	|		Таблица.ЗаказатьПередЗаписью        КАК ЗаказатьИзменение
	|	ИЗ
	|		РезервыТоваровПередЗаписью КАК Таблица
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		Таблица.Назначение             КАК Назначение,
	|		Таблица.Номенклатура           КАК Номенклатура,
	|		Таблица.Характеристика         КАК Характеристика,
	|		Таблица.Склад                  КАК Склад,
	|		ВЫБОР КОГДА Таблица.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) ТОГДА
	|				-Таблица.НаличиеПодЗаказ
	|			ИНАЧЕ
	|				Таблица.НаличиеПодЗаказ
	|		КОНЕЦ                          КАК НаличиеИзменение,
	|		ВЫБОР КОГДА Таблица.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) ТОГДА
	|				-Таблица.НаличиеСоСклада
	|			ИНАЧЕ
	|				Таблица.НаличиеСоСклада
	|		КОНЕЦ                          КАК НаличиеСоСкладаИзменение,
	|		ВЫБОР КОГДА Таблица.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) ТОГДА
	|				-Таблица.Потребность
	|			ИНАЧЕ
	|				Таблица.Потребность
	|		КОНЕЦ                          КАК ПотребностьИзменение,
	|		ВЫБОР КОГДА Таблица.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) ТОГДА
	|				-Таблица.Заказано
	|			ИНАЧЕ
	|				Таблица.Заказано
	|		КОНЕЦ                          КАК ЗаказаноИзменение,
	|		ВЫБОР КОГДА Таблица.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) ТОГДА
	|				-Таблица.КЗаказу
	|			ИНАЧЕ
	|				Таблица.КЗаказу
	|		КОНЕЦ                          КАК ЗаказатьИзменение
	|	ИЗ
	|		РегистрНакопления.ОбеспечениеЗаказов КАК Таблица
	|	ГДЕ
	|		Таблица.Регистратор = &Регистратор) КАК ТаблицаИзменений
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаИзменений.Назначение,
	|	ТаблицаИзменений.Номенклатура,
	|	ТаблицаИзменений.Характеристика,
	|	ТаблицаИзменений.Склад
	|
	|ИМЕЮЩИЕ
	|	СУММА(ТаблицаИзменений.НаличиеИзменение) > 0 
	|		ИЛИ СУММА(ТаблицаИзменений.НаличиеСоСкладаИзменение) > 0
	|			ИЛИ СУММА(ТаблицаИзменений.ПотребностьИзменение) > 0
	|			ИЛИ СУММА(ТаблицаИзменений.ЗаказаноИзменение) > 0
	|			ИЛИ СУММА(ТаблицаИзменений.ЗаказатьИзменение) > 0
	|;
	|УНИЧТОЖИТЬ РезервыТоваровПередЗаписью
	|";
	Выборка = Запрос.ВыполнитьПакет()[0].Выбрать();
	Выборка.Следующий();
	// Новые изменения были помещены во временную таблицу "ДвиженияТоварыКОтгрузкеИзменение".
	// Добавляется информация о ее существовании и наличии в ней записей об изменении.
	СтруктураВременныеТаблицы.Вставить("ОбеспечениеЗаказовИзменение", Выборка.Количество > 0);

КонецПроцедуры

#КонецЕсли