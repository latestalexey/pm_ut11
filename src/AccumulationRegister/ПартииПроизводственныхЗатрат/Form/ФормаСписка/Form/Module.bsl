
///////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ КОМАНД ФОРМЫ

&НаКлиенте
Процедура АктуализироватьПартии(Команда)
	
	АктуализироватьПартииСервер();
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьГраницуПоследовательности(Команда)
	
	СтрокаСписка = Элементы.Список.ТекущиеДанные;
	Если СтрокаСписка <> Неопределено Тогда
		УстановитьГраницуПоследовательностиНаДокумент(СтрокаСписка.Регистратор);
	КонецЕсли;
	
КонецПроцедуры

///////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

///////////////////////////////////////////////////////////////////////////////
// Прочее 

&НаСервере
Процедура АктуализироватьПартииСервер()
	
	ПартионныйУчетСервер.ВыполнитьРегламентноеФормированиеДвиженийПоПартиямТоваров();
	Элементы.Список.Обновить();
	
КонецПроцедуры

&НаСервере
Процедура УстановитьГраницуПоследовательностиНаДокумент(Документ)
	
	Запрос = Новый Запрос("
	|ВЫБРАТЬ
	|	ДанныеРегистра.АналитикаУчетаНоменклатуры КАК АналитикаУчетаПоНоменклатуре,
	|	ДанныеРегистра.МоментВремени КАК МоментВремени
	|ИЗ
	|	РегистрНакопления.ПроизводственныеЗатраты КАК ДанныеРегистра
	|ГДЕ
	|	ДанныеРегистра.Регистратор = &Ссылка
	|");
	Запрос.УстановитьПараметр("Ссылка", Документ);
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		
		СтруктураОтбор = Новый Структура("АналитикаУчетаПоНоменклатуре", Выборка.АналитикаУчетаПоНоменклатуре);
		Если Последовательности.ПроизводственныеЗатраты.Проверить(Выборка.МоментВремени, СтруктураОтбор) Тогда
			Последовательности.ПроизводственныеЗатраты.УстановитьГраницу(Выборка.МоментВремени, СтруктураОтбор);
		КонецЕсли;
		
	КонецЦикла;
	
	Элементы.Список.Обновить();
	
КонецПроцедуры