///////////////////////////////////////////////////////////////////////////////
// ПРОГРАММНЫЙ ИНТЕРФЕЙС

// Функция осуществляет подключение устройства.
//
Функция ПодключитьУстройство(ОбъектДрайвера, Параметры, ПараметрыПодключения, ВыходныеПараметры) Экспорт
	
 	Результат = Истина;

	ПараметрыПодключения.Вставить("ИДУстройства", "");

	ВыходныеПараметры = Новый Массив();

	// Проверка настроенных параметров
	Интерфейс       = Неопределено;
	Порт			= Неопределено;
	Скорость     	= Неопределено;
	IPАдрес       	= Неопределено;
	IPПорт       	= Неопределено;
	Наименование 	= Неопределено;
	
	Параметры.Свойство("Интерфейс"     	, Интерфейс);
	Параметры.Свойство("Порт"     	 	, Порт);
	Параметры.Свойство("Скорость"   	, Скорость);
	Параметры.Свойство("IPАдрес"		, IPАдрес);
	Параметры.Свойство("IPПорт"      	, IPПорт);
	Параметры.Свойство("Наименование"	, Наименование);

	Если Интерфейс      = Неопределено
	 Или Порт     		= Неопределено
	 Или Скорость     	= Неопределено
	 Или IPАдрес      	= Неопределено
	 Или IPПорт 		= Неопределено Тогда
		ВыходныеПараметры.Добавить(999);
		ВыходныеПараметры.Добавить(НСтр("ru='Не настроены параметры устройства.
		|Для корректной работы устройства необходимо задать параметры его работы.
		|Сделать это можно при помощи формы ""Настройка параметров"" модели
		|подключаемого оборудования в форме ""Подключение и настройка оборудования"".'"));

		Результат = Ложь;
	КонецЕсли; 	// Конец: Проверка параметров устройства
	
	Если Результат Тогда
		
		МассивЗначений = Новый Массив;
		
		Если Интерфейс = 0 Тогда
			МассивЗначений.Добавить(0);
			МассивЗначений.Добавить(Порт);
			МассивЗначений.Добавить(Скорость);
		Иначе	
			МассивЗначений.Добавить(1);
			МассивЗначений.Добавить(IPАдрес);
			МассивЗначений.Добавить(IPПорт);
		КонецЕсли;
		 		     				
		Если ОбъектДрайвера.Подключить(МассивЗначений, ПараметрыПодключения.ИДУстройства) Тогда
			ВыходныеПараметры.Добавить(""); 
			ВыходныеПараметры.Добавить(Неопределено); 
		Иначе
			ВыходныеПараметры.Добавить(999);
			ВыходныеПараметры.Добавить("");
			ОбъектДрайвера.ПолучитьОшибку(ВыходныеПараметры[1]);
			Результат = Ложь;
		КонецЕсли;
		
	КонецЕсли;

	Возврат Результат;
	
КонецФункции

// Функция осуществляет отключение устройства.
//
Функция ОтключитьУстройство(ОбъектДрайвера, Параметры, ПараметрыПодключения, ВыходныеПараметры) Экспорт
	
	Попытка     
		Результат = ОбъектДрайвера.Отключить(ПараметрыПодключения.ИДУстройства);
	Исключение
	КонецПопытки;
	
	Результат = Истина;
	Возврат Результат;

КонецФункции

// Функция получает, обрабатывает и перенаправляет на исполнение команду к драйверу
//
Функция ВыполнитьКоманду(Команда, ВходныеПараметры = Неопределено, ВыходныеПараметры = Неопределено,
                         ОбъектДрайвера, Параметры, ПараметрыПодключения) Экспорт
     
	Результат = Истина;
	ВыходныеПараметры = Новый Массив();

	// Выгрузка товаров в весы с печатью этикеток
	Если Команда = "ВыгрузитьТовары" Тогда
		Товары 				= ВходныеПараметры[0];
		ЧастичнаяВыгрузка 	= ВходныеПараметры[1];
		Результат = ВыгрузитьТовары(ОбъектДрайвера, Параметры, ПараметрыПодключения, Товары, ЧастичнаяВыгрузка, ВыходныеПараметры);
											  
	// Очистить базу весов с печатью этикеток
	ИначеЕсли Команда = "ОчиститьБазу" Тогда
		Результат = ОчиститьТоварыВВесах(ОбъектДрайвера, Параметры, ПараметрыПодключения, ВыходныеПараметры);

	// Тестирование устройства
	ИначеЕсли Команда = "ТестУстройства" ИЛИ Команда = "CheckHealth" Тогда
		Результат = ТестУстройства(ОбъектДрайвера, Параметры, ПараметрыПодключения, ВыходныеПараметры);
	
	// Получение версии драйвера
	ИначеЕсли Команда = "ПолучитьВерсиюДрайвера" Тогда
		Результат = ПолучитьВерсиюДрайвера(ОбъектДрайвера, Параметры, ПараметрыПодключения, ВыходныеПараметры);

	// Указанная команда не поддерживается данным драйвером
	Иначе
		ВыходныеПараметры.Добавить(999);
		ВыходныеПараметры.Добавить(НСтр("ru='Команда ""%Команда%"" не поддерживается данным драйвером.'"));
		ВыходныеПараметры[1] = СтрЗаменить(ВыходныеПараметры[1], "%Команда%", Команда);
		Результат = Ложь;

	КонецЕсли;

	Возврат Результат;

КонецФункции

///////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ
                                                          
// Функция осуществляет выгрузку таблицы товаров в весы с печатью этикеток
//
Функция ВыгрузитьТовары(ОбъектДрайвера, Параметры, ПараметрыПодключения, Товары, ЧастичнаяВыгрузка, ВыходныеПараметры) 
	
	Результат = Истина;
	
	Если Товары.Количество() = 0 Тогда
		ВыходныеПараметры.Очистить();
		ВыходныеПараметры.Добавить(999);
		ВыходныеПараметры.Добавить(НСтр("ru='Нет данных для выгрузки.'"));
		Возврат Ложь;
	КонецЕсли;

	ТекущийПроцент = 0;
	Состояние(НСтр("ru='Выгрузка товаров...'"), ТекущийПроцент);	
	
	Если НЕ ЧастичнаяВыгрузка Тогда		
		Если НЕ ОбъектДрайвера.ОчиститьТовары(ПараметрыПодключения.ИДУстройства) Тогда	
			ВыходныеПараметры.Очистить();
			ВыходныеПараметры.Добавить(999);
			ВыходныеПараметры.Добавить("");
			ОбъектДрайвера.ПолучитьОшибку(ВыходныеПараметры[1]);
			Результат = Ложь;
			Возврат Результат;
		КонецЕсли;
	КонецЕсли;
	
	ПроцентИнкремент = 100 / Товары.Количество();

	Для Итератор = 0 По Товары.Количество() - 1 Цикл
		
		Выборка = Новый Структура;

		Если Товары[Итератор].Свойство("PLU") Тогда
			Выборка.Вставить("PLU", Товары[Итератор].PLU); 
		КонецЕсли;
		
		Если Товары[Итератор].Свойство("Код") Тогда
			Выборка.Вставить("Code", Товары[Итератор].Код); 
		КонецЕсли;
		
		ВремНаименование = Лев(Товары[Итератор].Наименование, 40); 
		
		Если Товары[Итератор].Свойство("НаименованиеПолное") И 
			НЕ ПустаяСтрока(Товары[Итератор].Свойство("НаименованиеПолное")) Тогда
			ВремНаименование = Лев(Товары[Итератор].НаименованиеПолное, 40);
		КонецЕсли;
		Выборка.Вставить("Name", ВремНаименование);
		
		Если Товары[Итератор].Свойство("Цена") Тогда
			Выборка.Вставить("Price", Товары[Итератор].Цена); 
		КонецЕсли;
		
		Если Товары[Итератор].Свойство("ОписаниеТовара") Тогда
			Выборка.Вставить("Description", Товары[Итератор].ОписаниеТовара); 
		Иначе
			Выборка.Вставить("Description", ""); 
		КонецЕсли;
		
		Если Товары[Итератор].Свойство("СрокХранения") Тогда
			Выборка.Вставить("ShelfTime", Товары[Итератор].СрокХранения); 
		Иначе
			Выборка.Вставить("ShelfTime", 7); 
		КонецЕсли;
		
		Если ОбъектДрайвера.ВыгрузитьТовары(ПараметрыПодключения.ИДУстройства, Выборка) Тогда
			ВыходныеПараметры.Добавить(""); 
			ВыходныеПараметры.Добавить(Неопределено); 
		Иначе
			ВыходныеПараметры.Добавить(999);
			ВыходныеПараметры.Добавить("");
			ОбъектДрайвера.ПолучитьОшибку(ВыходныеПараметры[1]);
			Результат = Ложь;
			Возврат Результат;
		КонецЕсли;
		
		ТекущийПроцент = ТекущийПроцент + ПроцентИнкремент;
        Состояние(НСтр("ru='Выгрузка товаров...'"), Окр(ТекущийПроцент));	

	КонецЦикла;
	
	Возврат Результат;

КонецФункции

// Функция осуществляет очистку таблицы товаров в весы с печатью этикеток.
//
Функция ОчиститьТоварыВВесах(ОбъектДрайвера, Параметры, ПараметрыПодключения, ВыходныеПараметры) 

	Результат = Истина;  
	
	Если НЕ ОбъектДрайвера.ОчиститьТовары(ПараметрыПодключения.ИДУстройства) тогда	
		ВыходныеПараметры.Очистить();
		ВыходныеПараметры.Добавить(999);
		ВыходныеПараметры.Добавить("");
		ОбъектДрайвера.ПолучитьОшибку(ВыходныеПараметры[1]);
		Результат = Ложь;
	КонецЕсли;
		
	Возврат Результат;

КонецФункции

// Функция осуществляет проверку путей по которым хранятся файлы обмена
//
Функция ТестУстройства(ОбъектДрайвера, Параметры, ПараметрыПодключения, ВыходныеПараметры) 
	
	Результат = Истина;            
	РезультатТеста = "";

	МассивЗначений = Новый Массив;

	Если Параметры.Интерфейс = 0 Тогда
		МассивЗначений.Добавить(0);
		МассивЗначений.Добавить(Параметры.Порт);
		МассивЗначений.Добавить(Параметры.Скорость);
	Иначе
		МассивЗначений.Добавить(1);
		МассивЗначений.Добавить(Параметры.IPАдрес);
		МассивЗначений.Добавить(Параметры.IPПорт);
	КонецЕсли;

	Результат = ОбъектДрайвера.ТестУстройства(МассивЗначений, РезультатТеста);

	ВыходныеПараметры.Добавить(?(Результат, 0, 999));
	ВыходныеПараметры.Добавить(РезультатТеста);

	Возврат Результат;
		
КонецФункции

// Функция возвращает версию установленного драйвера
//
Функция ПолучитьВерсиюДрайвера(ОбъектДрайвера, Параметры, ПараметрыПодключения, ВыходныеПараметры)
	
	Результат = Истина;

	ВыходныеПараметры.Добавить(НСтр("ru='Установлен'"));
	ВыходныеПараметры.Добавить(НСтр("ru='Не определена'"));

	Попытка                                     
		ВыходныеПараметры[1] = ОбъектДрайвера.ПолучитьНомерВерсии();
	Исключение
	КонецПопытки;

	Возврат Результат;   

КонецФункции

