////////////////////////////////////////////////////////////////////////////////
// Модуль содержит процедуры и функции для обработки действий пользователя
// в процессе работы с ценами.
//
////////////////////////////////////////////////////////////////////////////////

////////////////////////////////////////////////////////////////////////////////
// ПРОГРАММНЫЙ ИНТЕРФЕЙС

////////////////////////////////////////////////////////////////////////////////
// Процедуры и функции работы с НДС.

// Рассчитывает сумму НДС от суммы в зависимости от включения НДС в цену
//
// ЦенаВключаетНДС - Булево - Признак включения НДС в цену
// ПроцентНДС      - Число - Ставка НДС числом
// Сумма           - Число - Сумма, от которой необходимо рассчитать сумму НДС
//
Функция РассчитатьСуммуНДС(Сумма, ПроцентНДС, ЦенаВключаетНДС = Истина) Экспорт
	
	Если ЦенаВключаетНДС Тогда
		СуммаНДС = Сумма * ПроцентНДС / (ПроцентНДС + 1);
	Иначе
		СуммаНДС = Сумма * ПроцентНДС;
	КонецЕсли;
	
	Возврат СуммаНДС;
	
КонецФункции // РассчитатьСуммуНДС()

// Возвращает числовое значение ставки НДС по значению перечисления
//
// Параметры:
// 		СтавкаНДС - ПеречислениеСсылка.СтавкиНДС - значение перечисления СтавкиНДС
//
// Возвращаемое значение:
// 		Число - Значение ставки НДС числом
//
Функция ПолучитьСтавкуНДСЧислом(Знач СтавкаНДС) Экспорт
	
	Если СтавкаНДС = ПредопределенноеЗначение("Перечисление.СтавкиНДС.НДС10")
		ИЛИ СтавкаНДС = ПредопределенноеЗначение("Перечисление.СтавкиНДС.НДС10_110") Тогда
		
		Возврат 0.1;
		
	ИначеЕсли СтавкаНДС = ПредопределенноеЗначение("Перечисление.СтавкиНДС.НДС18")
		ИЛИ СтавкаНДС = ПредопределенноеЗначение("Перечисление.СтавкиНДС.НДС18_118") Тогда
		
		Возврат 0.18;
		
	Иначе
		
		Возврат 0;
		
	КонецЕсли;
	
КонецФункции // ПолучитьСтавкуНДСЧислом()

////////////////////////////////////////////////////////////////////////////////
// Процедуры и функции работы с итогами документов.

// Возвращает сумму документа с учетом НДС
//
// Параметры:
// Товары          - тч документа для подсчета суммы документа
// ЦенаВключаетНДС - Признак включения НДС в цену документа
//
// Возвращаемое значение:
// Число
// Сумма документа с учетом НДС
//
Функция ПолучитьСуммуДокумента(Товары, Знач ЦенаВключаетНДС) Экспорт

	СуммаДокумента = Товары.Итог("Сумма");

	Если Не ЦенаВключаетНДС Тогда
		СуммаДокумента = СуммаДокумента + Товары.Итог("СуммаНДС");
	КонецЕсли;

	Возврат СуммаДокумента;

КонецФункции // ПолучитьСуммуДокумента()

////////////////////////////////////////////////////////////////////////////////
// Процедуры и функции для выполнения округления.

// Округляет число по заданному порядку 
//
// Параметры:
// Число                    - исходное число
// ТочностьОкругления       - Число, определяет точность округления
// ОкруглятьВБольшуюСторону - булево, определяет способ округления: если Истина, 
// то при округлении с точностью до 1, 0.01 будет округлено до 1, 
// Ложь - округление по арифметическим правилам
//
// Возвращаемое значение:
// Число
// Исходное число, округленное с заданной точностью
//
Функция ОкруглитьЦену(Число, ТочностьОкругления, ОкруглятьВБольшуюСторону) Экспорт

	Перем Результат;
		
	// вычислим количество интервалов, входящих в число
	Если ТочностьОкругления <> 0 Тогда
		КоличествоИнтервалов = Число / ТочностьОкругления;
	Иначе
		КоличествоИнтервалов = 0;
	КонецЕсли;
		
	// вычислим целое количество интервалов.
	КоличествоЦелыхИнтервалов = Цел(КоличествоИнтервалов);
		
	Если КоличествоИнтервалов = КоличествоЦелыхИнтервалов Тогда
		// Числа поделились нацело. Округлять не нужно.
		Результат = Число;
	Иначе
		Если ОкруглятьВБольшуюСторону Тогда
			// При порядке округления "0.05" 0.371 должно округлится до 0.4
			Результат = ТочностьОкругления * (КоличествоЦелыхИнтервалов + 1);
		Иначе
			// При порядке округления "0.05" 0.371 должно округлится до 0.35,
			// а 0.376 до 0.4
			Результат = ТочностьОкругления * Окр(КоличествоИнтервалов, 0, РежимОкругления.Окр15как20);
		КонецЕсли;
	КонецЕсли;
	
	Возврат Результат;
	
КонецФункции // ОкруглитьЦену()

// Применяет "психологическое округление" к числу
//
// Параметры:
// Число                     - Число, к которому применяется округление
// ПсихологическоеОкругление - Число, значение "психологического округления"
//
// Возвращаемое значение:
// Число
// Результат применения "психологического округления" к числу
//
Функция ПрименитьПсихологическоеОкругление(Число, ПсихологическоеОкругление) Экспорт
	
	Если Число = 0 ИЛИ ПсихологическоеОкругление = 0 Тогда
		Возврат Число;
	Иначе
		РезультатОкругления = Число - ПсихологическоеОкругление;
		Возврат ?(РезультатОкругления < Число, РезультатОкругления, Число);
	КонецЕсли;
	
КонецФункции // ПрименитьПсихологическоеОкругление()

// Возвращает разрядность "психологического округления", т.е. к какому разряду числа применяется
// округление.
//
// Параметры:
// ПсихологическоеОкругление - Число, значение "психологического округления"
//
// Возвращаемое значение:
// Число
// Разрядность "психологического округления"
//
Функция РазрядностьПсихологическогоОкругления(ПсихологическоеОкругление) Экспорт
	
	Разрядность = 0;
	
	Пока ПсихологическоеОкругление * Pow(10, Разрядность) > 1 Цикл
		Разрядность = Разрядность - 1;
	КонецЦикла;
	
	Пока ПсихологическоеОкругление * Pow(10, Разрядность + 1) < 1 Цикл
		Разрядность = Разрядность + 1;
	КонецЦикла;
	
	Возврат -1 * Разрядность;
	
КонецФункции // РазрядностьПсихологическогоОкругления()

////////////////////////////////////////////////////////////////////////////////
// Процедуры и функции заполнения этапов оплаты.

// Распределяет сумму по этапам оплаты
//
// Параметры:
// ЭтапыГрафикаОплаты  - таблица этапов оплаты, в которой необходимо распределить сумму
// СуммаКРаспределению - сумма, которую необходимо распределить по этапам
//
Процедура РаспределитьСуммуПоЭтапамГрафикаОплаты(ЭтапыГрафикаОплаты, Знач СуммаКРаспределению) Экспорт
	
	РаспределеннаяСумма = 0;
	ТекущийЭтап         = 0;
	ПроцентПлатежа      = 0;
	ОдинДень            = 86400;
	ЕстьЛишниеЭтапы     = Ложь;
	КоличествоЭтапов    = ЭтапыГрафикаОплаты.Количество();
	
	Для Каждого ЭтапГрафикаОплаты Из ЭтапыГрафикаОплаты Цикл
		
		ТекущийЭтап = ТекущийЭтап + 1;
		
		// Если сумма платежей по всем этапам менее ста процентов или 
		// процент платежа текущего этапа равен 0 -
		// добавим недостающие проценты к последнему этапу
		
		Если (ТекущийЭтап = КоличествоЭтапов И 
			ЭтапыГрафикаОплаты.Итог("ПроцентПлатежа") < 100) Или
			(ЭтапГрафикаОплаты.ПроцентПлатежа = 0) Тогда
			
			ЭтапГрафикаОплаты.ПроцентПлатежа = 100 - ПроцентПлатежа;
			
		КонецЕсли;
		
		// Если к текущему этапу общий процент платежа более 100% - 
		// уменьшим процент текущего платежа и удалим "лишние" этапы
		
		ПроцентПлатежаСТекущимЭтапом = ПроцентПлатежа + ЭтапГрафикаОплаты.ПроцентПлатежа;
		
		Если ПроцентПлатежаСТекущимЭтапом > 100 Тогда
			ЭтапГрафикаОплаты.ПроцентПлатежа = 100 - ПроцентПлатежа;
		КонецЕсли;
		
		СуммаЭтапа                     = Окр(СуммаКРаспределению * ЭтапГрафикаОплаты.ПроцентПлатежа / 100, 2, РежимОкругления.Окр15как20);
		ЭтапГрафикаОплаты.СуммаПлатежа = ?(ТекущийЭтап = КоличествоЭтапов, СуммаКРаспределению - РаспределеннаяСумма, СуммаЭтапа);
		РаспределеннаяСумма            = РаспределеннаяСумма + ЭтапГрафикаОплаты.СуммаПлатежа;
		ПроцентПлатежа                 = ПроцентПлатежа + ЭтапГрафикаОплаты.ПроцентПлатежа;
		
		// Если на текущем этапе превышен процент платежа и этап не последний - 
		// необходимо удалять лишние этапы
		
		Если ПроцентПлатежаСТекущимЭтапом >= 100 И ТекущийЭтап <> КоличествоЭтапов Тогда
			ЕстьЛишниеЭтапы = Истина;
			Прервать;
		КонецЕсли;
		
	КонецЦикла;
	
	// Удалим лишние этапы графика оплаты
	Если ЕстьЛишниеЭтапы Тогда
		
		Для Счетчик = ТекущийЭтап По КоличествоЭтапов-1 Цикл
			ЭтапыГрафикаОплаты.Удалить(ТекущийЭтап);
		КонецЦикла;
		
	КонецЕсли;
	
КонецПроцедуры // РаспределитьСуммуПоЭтапамГрафикаОплаты()

Функция НадписьЭтапыОплаты(КоличествоЭтаповОплаты) Экспорт
	
	Если КоличествоЭтаповОплаты = 0 Тогда
		НадписьЭтапыОплаты = НСтр("ru='Этапы оплаты'");
	Иначе
		НадписьЭтапыОплаты = НСтр("ru='Этапы оплаты (%КоличествоЭтаповОплаты%)'");
		НадписьЭтапыОплаты = СтрЗаменить(НадписьЭтапыОплаты, "%КоличествоЭтаповОплаты%", КоличествоЭтаповОплаты);
	КонецЕсли;
	
	Возврат НадписьЭтапыОплаты;
	
КонецФункции

////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ
