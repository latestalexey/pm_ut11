///////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ИНТЕРАКТИВНОЙ РАБОТЫ С МНОГООБОРОТНОЙ ТАРОЙ

// Открывает форму подбора многооборотной тары в документ
//
// Параметры:
// Форма - УправляемаяФорма - Форма, из которой подбирается многооборотная тара
// ИмяТаблицы - Строка - Имя таблицы с товарами и тарой документа
// ИменаКолонок - Строка - Имена колонок таблицы с товарами и тарой документа, разделенные запятыми
//
// Возвращаемое значение:
// Булево, Истина, если многооборотная тара подобрана
//
Функция ПодобратьМногооборотнуюТару(Знач Форма,
	                                Знач ИмяТаблицы,
	                                Знач ИменаКолонок) Экспорт
	
	МассивКолонок = СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивПодстрок(ИменаКолонок, ",");
	
	Если МассивКолонок.Количество() = 5 Тогда
		ПоказыватьСклад = ЗначениеЗаполнено(МассивКолонок[3]);
		ПоказыватьДату = ЗначениеЗаполнено(МассивКолонок[4]);
	ИначеЕсли МассивКолонок.Количество() = 4 Тогда
		ПоказыватьСклад = ЗначениеЗаполнено(МассивКолонок[3]);
		ПоказыватьДату = Ложь;
	ИначеЕсли МассивКолонок.Количество() = 3 Тогда
		ПоказыватьСклад = Ложь;
		ПоказыватьДату = Ложь;
	Иначе
		ВызватьИсключение НСтр("ru = 'Неверно задан параметр ИменаКолонок функции'");
	КонецЕсли;
	
	Если Форма.Объект[ИмяТаблицы].Количество() = 0 Тогда
		
		Предупреждение(НСтр("ru = 'В списке отсутствуют строки. Дозаполнение многообротной тарой не требуется.'"));
		Возврат Ложь;
		
	КонецЕсли;
	
	АдресТоваровВоВременномХранилище = МногооборотнаяТараВызовСервера.ПоместитьТоварыДляПодбораТарыВоВременноеХранилище(
		Форма.Объект,
		ИмяТаблицы,
		ИменаКолонок,
		Форма.УникальныйИдентификатор,
		ПоказыватьСклад,
		ПоказыватьДату);
	
	СтруктураПараметров = Новый Структура();
	СтруктураПараметров.Вставить("АдресТоваровВоВременномХранилище", АдресТоваровВоВременномХранилище);
	СтруктураПараметров.Вставить("ПоказыватьСклад", ПоказыватьСклад);
	СтруктураПараметров.Вставить("ПоказыватьДату", ПоказыватьДату);
	
	СтруктураВозврата = ОткрытьФормуМодально(
		"Обработка.ПодборМногооборотнойТары.Форма.Форма",
		СтруктураПараметров,
		Форма);
		
	Если СтруктураВозврата = Неопределено Тогда
		Форма.Объект.СостояниеЗаполненияМногооборотнойТары = ПредопределенноеЗначение("Перечисление.СостоянияЗаполненияМногооборотнойТары.ПредлагатьЗаполнить");
		Возврат Ложь;
	Иначе
		Если СтруктураВозврата.ТараПодобрана Тогда
			Форма.Объект.СостояниеЗаполненияМногооборотнойТары = ПредопределенноеЗначение("Перечисление.СостоянияЗаполненияМногооборотнойТары.Заполнена");
		Иначе
			Форма.Объект.СостояниеЗаполненияМногооборотнойТары = ПредопределенноеЗначение("Перечисление.СостоянияЗаполненияМногооборотнойТары.ПредлагатьЗаполнить");
		КонецЕсли;
		Возврат СтруктураВозврата.ТараПодобрана;
	КонецЕсли;
	
КонецФункции

// Показывает оповещения пользователю после добавление многооборотной тары в документ
//
Процедура ОповеститьПользователяОЗаполненииМногооборотнойТарой() Экспорт
	
	ПоказатьОповещениеПользователя(
		НСтр("ru = 'Подобрана многооборотная тара'"),
		,
		НСтр("ru = 'Подобранная многооборотная тара перенесена в документ'"));
	
КонецПроцедуры

// Предлагает пользователю дополнить товары документа многооборотной тарой
// Если пользователь согласился - открывает форму подбора многооборотной тары
//
// Параметры:
// Форма - УправляемаяФорма - Форма, из которой подбирается многооборотная тара
// ИмяТаблицы - Строка - Имя таблицы с товарами и тарой документа
// ИменаКолонок - Строка - Имена колонок таблицы с товарами и тарой документа, разделенные запятыми
//
Процедура ПредложитьПодобратьМногооборотнуюТару(Знач Форма,
	                                            Знач ИмяТаблицы,
	                                            Знач ИменаКолонок) Экспорт
	
	Состояние = Форма.Объект.СостояниеЗаполненияМногооборотнойТары;
	СостояниеЗаполнено = ЗначениеЗаполнено(Состояние);
	ЗадаватьВопрос = Ложь;
	
	Если Форма.Объект[ИмяТаблицы].Количество() = 0 Или
		(СостояниеЗаполнено
			И (Состояние = ПредопределенноеЗначение("Перечисление.СостоянияЗаполненияМногооборотнойТары.НеПредлагатьЗаполнить")
				Или Состояние = ПредопределенноеЗначение("Перечисление.СостоянияЗаполненияМногооборотнойТары.Заполнена"))) Тогда
			
		ЗадаватьВопрос = Ложь;
		
	ИначеЕсли Состояние = ПредопределенноеЗначение("Перечисление.СостоянияЗаполненияМногооборотнойТары.ПредлагатьЗаполнить") Или
		Не СостояниеЗаполнено Тогда
		
		ЗадаватьВопрос = МногооборотнаяТараВызовСервера.ЗадаватьВопросОЗаполненииМногооборотнойТарой(
			Форма.Объект,
			ИмяТаблицы,
			ИменаКолонок);
			
	Иначе
		
		ЗадаватьВопрос = Ложь;
			
	КонецЕсли;
	
	Если Не ЗадаватьВопрос Тогда
		Возврат;
	КонецЕсли;
		
	ВариантыОтвета = Новый СписокЗначений();
	ВариантыОтвета.Добавить("Дополнить", НСтр("ru = 'Дополнить'"));
	ВариантыОтвета.Добавить("НеДополнять", НСтр("ru = 'Не дополнять'"));
	
	ТекстВопроса = НСтр("ru = 'Дополнить многооборотной тарой?'");
	ОтветНаВопрос = Вопрос(ТекстВопроса, ВариантыОтвета);
	
	Если ОтветНаВопрос = "НеДополнять" Тогда
		Форма.Объект.СостояниеЗаполненияМногооборотнойТары = ПредопределенноеЗначение("Перечисление.СостоянияЗаполненияМногооборотнойТары.НеПредлагатьЗаполнить");
	Иначе
		
		ТараПодобрана = ПодобратьМногооборотнуюТару(Форма, ИмяТаблицы, ИменаКолонок);
		Если ТараПодобрана Тогда
			Форма.Объект.СостояниеЗаполненияМногооборотнойТары = ПредопределенноеЗначение("Перечисление.СостоянияЗаполненияМногооборотнойТары.Заполнена");
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

// Сбрасывает состояние заполнения многооборотной тары в документе после изменения табличной части
//
// Параметры:
// СостояниеЗаполненияМногооборотнойТары - ПеречислениеСсылка.СостоянияЗаполненияМногооборотнойТары
//
Процедура ОбновитьСостояниеЗаполненияМногооборотнойТары(СостояниеЗаполненияМногооборотнойТары) Экспорт
	
	Если СостояниеЗаполненияМногооборотнойТары = ПредопределенноеЗначение("Перечисление.СостоянияЗаполненияМногооборотнойТары.Заполнена") Тогда
		СостояниеЗаполненияМногооборотнойТары = ПредопределенноеЗначение("Перечисление.СостоянияЗаполненияМногооборотнойТары.ПредлагатьЗаполнить");
	КонецЕсли;
	
КонецПроцедуры
