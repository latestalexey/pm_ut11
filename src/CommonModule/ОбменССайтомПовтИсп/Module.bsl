////////////////////////////////////////////////////////////////////////////////
// ПРОГРАММНЫЙ ИНТЕРФЕЙС

////////////////////////////////////////////////////////////////////////////////
// {Вызываются с клиента}

// Возвращает признак принадлежности узла к информационной базе
//
// Параметры:
//  УзелОбмена – ПланОбменаСсылка – узел плана обмена, для которого требуется получить значение функции
// 
//  Возвращаемое значение:
//  Тип: Булево. Истина – узел принадлежит этой информационной базе; Ложь – нет.
//
Функция ЭтоЭтотУзелПланаОбмена(Знач УзелОбмена) Экспорт
	
	Возврат (УзелОбмена = ПланыОбмена.ОбменУправлениеТорговлейСайт.ЭтотУзел());
	
КонецФункции

////////////////////////////////////////////////////////////////////////////////
// {Вызываются с сервера}

// Возвращает валюту по строковому коду, полученному в XML
//
// Параметры:
// КодВалютыСтрока - строка, код валюты
// 
// Возвращаемое значение:
// СправочникСсылка.Валюты
//
Функция ПолучитьВалютуПоКодуXML(Знач КодВалютыСтрока) Экспорт
	
	Валюта = Справочники.Валюты.НайтиПоНаименованию(КодВалютыСтрока);
	
	Если ЗначениеЗаполнено(Валюта) Тогда
		Возврат Валюта;
	КонецЕсли;
	
	КодВалютыСтрока = НРег(КодВалютыСтрока);
	
	Если КодВалютыСтрока = "руб"
		ИЛИ КодВалютыСтрока = "руб."
		ИЛИ КодВалютыСтрока = "rub"
		ИЛИ КодВалютыСтрока = "rur" Тогда
		
		Валюта = Константы.ВалютаРегламентированногоУчета.Получить();
		
	КонецЕсли;
	
	Возврат Валюта;
	
КонецФункции

// Возвращает имя поля КИ
//
// Параметры:
// ИмяТипа - строка, имя типа КИ
// 
// Возвращаемое значение:
// Строка, имя поля КИ
//
Функция ПолучитьПоТипуИмяПоляКонтактнойИнформации(ИмяТипа) Экспорт
	
	Если ИмяТипа = "Почтовый индекс" Тогда
		ИмяПоля = "Индекс";
	ИначеЕсли ИмяТипа = "Населенный пункт" Тогда
		ИмяПоля = "НаселенныйПункт";
	Иначе
		ИмяПоля = ИмяТипа;
	Конецесли;
	
	Возврат ИмяПоля;
	
КонецФункции

// Функция формирует прокси по настройкам прокси (передаваемому параметру)
//
// Параметры:
// 
// НастройкаПроксиСервера - Соответствие:
//		ИспользоватьПрокси - использовать ли прокси-сервер
//		НеИспользоватьПроксиДляЛокальныхАдресов - использовать ли прокси-сервер для локальных адресов
//		ИспользоватьСистемныеНастройки - использовать ли системные настройки прокси-сервера
//		Сервер       - адрес прокси-сервера
//		Порт         - порт прокси-сервера
//		Пользователь - имя пользователя для авторизации на прокси-сервере
//		Пароль       - пароль пользователя
// Протокол - строка - протокол для которого устанавливаются параметры прокси сервера, например "http", "https", "ftp"
// 
Функция ПолучитьПрокси(НастройкаПроксиСервера, Протокол) Экспорт
	
	Если НастройкаПроксиСервера <> Неопределено Тогда
		ИспользоватьПрокси = НастройкаПроксиСервера.Получить("ИспользоватьПрокси");
		ИспользоватьСистемныеНастройки = НастройкаПроксиСервера.Получить("ИспользоватьСистемныеНастройки");
		Если ИспользоватьПрокси Тогда
			Если ИспользоватьСистемныеНастройки Тогда
			// Системные настройки прокси-сервера
				Прокси = Новый ИнтернетПрокси(Истина);
			Иначе
			// Ручные настройки прокси-сервера
				Прокси = Новый ИнтернетПрокси;
				Прокси.Установить(Протокол, НастройкаПроксиСервера["Сервер"], НастройкаПроксиСервера["Порт"]);
				Прокси.НеИспользоватьПроксиДляЛокальныхАдресов = НастройкаПроксиСервера["НеИспользоватьПроксиДляЛокальныхАдресов"];
				Прокси.Пользователь = НастройкаПроксиСервера["Пользователь"];
				Прокси.Пароль       = НастройкаПроксиСервера["Пароль"];
			КонецЕсли;
		Иначе
			// Не использовать прокси-сервер	
			Прокси = Новый ИнтернетПрокси(Ложь);
		КонецЕсли;
	Иначе
		Прокси = Неопределено;
	КонецЕсли;
	
	Возврат Прокси;

КонецФункции

// Возвращает уникальный идентификатор объекта для выгрузки в XML
//
// Параметры:
// Объект - произвольный ссылочный тип
// Характеристика - СправочникСсылка.ХарактеристикиНоменклатуры
// 
// Возвращаемое значение:
// Строка, уникальный идентификатор объекта
//
Функция ПолучитьУникальныйИдентификаторОбъекта(Объект, Характеристика = Неопределено) Экспорт
	
	Ид = Строка(Объект.УникальныйИдентификатор());
	
	Если ТипЗнч(Объект) = Тип("СправочникСсылка.Номенклатура")
		И (НЕ Объект.ЭтоГруппа)
		И (НЕ Объект.ВидНоменклатуры.ИспользованиеХарактеристик = Перечисления.ВариантыИспользованияХарактеристикНоменклатуры.НеИспользовать)
		И ЗначениеЗаполнено(Характеристика) Тогда
		
		Ид = Ид + "#" + Строка(Характеристика.УникальныйИдентификатор());
		
	КонецЕсли;
	
	Возврат Ид;
	
КонецФункции

// Возвращает значение валюты для выгрузки в XML
//
// Параметры:
// Валюта - СправочникСсылка.Валюты
// 
// Возвращаемое значение:
// Строка
//
Функция ПолучитьЗначениеВалютыДляXML(Валюта) Экспорт
	
	ТекстВалюты = "???";
	
	Если ТипЗнч(Валюта) = Тип("СправочникСсылка.Валюты") Тогда
		ТекстВалюты = Валюта.Наименование;
	КонецЕсли;
		
	Возврат Лев(ТекстВалюты, 3);
	
КонецФункции

// Возвращает ставку НДС по значению XML
//
// Параметры:
// ЗначениеНалога - строка
// 
// Возвращаемое значение:
// Перечисления.СтавкиНДС
//
Функция ПолучитьПоЗначениюДляВыгрузкиСтавкуНДС(ЗначениеНалога) Экспорт
	
	Если ЗначениеНалога = "0" Тогда
		СтавкаНДС = Перечисления.СтавкиНДС.НДС0;
	ИначеЕсли ЗначениеНалога = "10" Тогда
		СтавкаНДС = Перечисления.СтавкиНДС.НДС10;
	ИначеЕсли ЗначениеНалога = "10/110" Тогда
		СтавкаНДС = Перечисления.СтавкиНДС.НДС10_110;
	ИначеЕсли ЗначениеНалога = "18" Тогда
		СтавкаНДС = Перечисления.СтавкиНДС.НДС18;
	ИначеЕсли ЗначениеНалога = "18/118" Тогда
		СтавкаНДС =  Перечисления.СтавкиНДС.НДС18_118;
	Иначе
		СтавкаНДС = Перечисления.СтавкиНДС.БезНДС;
	КонецЕсли;
	
	Возврат СтавкаНДС;
	
КонецФункции

// Возвращает значение ставки НДС для выгрузки в XML
//
// Параметры:
// СтавкаНДС - Перечисления.СтавкиНДС
// 
// Возвращаемое значение:
// Строка
//
Функция ПолучитьПоСтавкеНДСЗначениеДляВыгрузки(СтавкаНДС) Экспорт
	
	Если СтавкаНДС = Перечисления.СтавкиНДС.БезНДС Тогда
		ЗначениеНалога = НСтр("ru = 'Без налога'");
	ИначеЕсли СтавкаНДС = Перечисления.СтавкиНДС.НДС0 Тогда
		ЗначениеНалога = "0";
	ИначеЕсли СтавкаНДС = Перечисления.СтавкиНДС.НДС10 Тогда
		ЗначениеНалога = "10";
	ИначеЕсли СтавкаНДС = Перечисления.СтавкиНДС.НДС10_110 Тогда
		ЗначениеНалога = "10/110";
	ИначеЕсли СтавкаНДС = Перечисления.СтавкиНДС.НДС18 Тогда
		ЗначениеНалога = "18";
	ИначеЕсли СтавкаНДС = Перечисления.СтавкиНДС.НДС18_118 Тогда
		ЗначениеНалога = "18/118";
	Иначе
		ЗначениеНалога = Строка(СтавкаНДС);
	КонецЕсли;
	
	Возврат ЗначениеНалога;
	
КонецФункции

////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ
