///////////////////////////////////////////////////////////////////////////////////
// РаботаВМоделиСервисаПовтИсп.
//
///////////////////////////////////////////////////////////////////////////////////

///////////////////////////////////////////////////////////////////////////////////
// ПРОГРАММНЫЙ ИНТЕРФЕЙС

// Возвращает массив сериализуемых структурных типов, поддерживаемых в настоящее время.
//
// Возвращаемое значение:
// Фиксированный массив элементов типа Тип
//
Функция СериализуемыеСтруктурныеТипы() Экспорт
	
	МассивТипов = Новый Массив;
	
	МассивТипов.Добавить(Тип("Структура"));
	МассивТипов.Добавить(Тип("ФиксированнаяСтруктура"));
	МассивТипов.Добавить(Тип("Массив"));
	МассивТипов.Добавить(Тип("ФиксированныйМассив"));
	МассивТипов.Добавить(Тип("Соответствие"));
	МассивТипов.Добавить(Тип("ФиксированноеСоответствие"));
	МассивТипов.Добавить(Тип("КлючИЗначение"));
	МассивТипов.Добавить(Тип("ТаблицаЗначений"));
	
	Возврат Новый ФиксированныйМассив(МассивТипов);
	
КонецФункции

// Возвращает конечную точку для отправки сообщений в менеджер сервиса.
//
// Возвращаемое значение:
//  ПланОбменСсылка.ОбменСообщениями - узел соответствующий менеджеру сервиса
//
Функция КонечнаяТочкаМенеджераСервиса() Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	Возврат Константы.КонечнаяТочкаМенеджераСервиса.Получить();
	
КонецФункции

///////////////////////////////////////////////////////////////////////////////////
// Функции, возвращающие типы сообщений и имена содержащих их пакетов

// Возвращает имя пакета удаленного администрирования.
//
// Возвращаемое значение:
// Строка.
//
Функция ПакетУдаленноеАдминистрирование_1_0_3_1() Экспорт
	
	Возврат "http://www.1c.ru/SaaS/RemoteAdministration/App/1.0.3.1";
	
КонецФункции

// Возвращает имя пакета удаленного администрирования.
//
// Возвращаемое значение:
// Строка.
//
Функция ПакетУдаленноеАдминистрирование_1_0_3_2() Экспорт
	
	Возврат "http://www.1c.ru/SaaS/RemoteAdministration/App/1.0.3.2";
	
КонецФункции

// Возвращает имя пакета контроля удаленного администрирования.
//
// Возвращаемое значение:
// Строка.
//
Функция ПакетКонтрольУдаленногоАдминистрирования() Экспорт
	
	Возврат "http://www.1c.ru/SaaS/RemoteAdministration/Control/1.0.2.1";
	
КонецФункции

// Возвращает тип сообщения ОбновитьПользователя.
//
// Возвращаемое значение:
// ТипОбъектаXDTO
//
Функция СообщениеОбновитьПользователя(Пакет) Экспорт
	
	Возврат ФабрикаXDTO.Тип(Пакет, "UpdateUser");
	
КонецФункции

// Возвращает тип сообщения УстановитьПолныеПраваОбластиДанных.
//
// Возвращаемое значение:
// ТипОбъектаXDTO
//
Функция СообщениеУстановитьПолныеПраваОбластиДанных(Пакет) Экспорт
	
	Возврат ФабрикаXDTO.Тип(Пакет, "SetFullControl");
	
КонецФункции

// Возвращает тип сообщения УстановитьДоступКОбластиДанных.
//
// Возвращаемое значение:
// ТипОбъектаXDTO
//
Функция СообщениеУстановитьДоступКОбластиДанных(Пакет) Экспорт
	
	Возврат ФабрикаXDTO.Тип(Пакет, "SetApplicationAccess");
	
КонецФункции

// Возвращает тип сообщения УстановитьПраваПользователяПоУмолчанию.
//
// Возвращаемое значение:
// ТипОбъектаXDTO
//
Функция СообщениеУстановитьПраваПользователяПоУмолчанию(Пакет) Экспорт
	
	Возврат ФабрикаXDTO.Тип(Пакет, "SetDefaultUserRights");
	
КонецФункции

// Возвращает тип сообщения ПодготовитьОбластьДанных.
//
// Возвращаемое значение:
// ТипОбъектаXDTO
//
Функция СообщениеПодготовитьОбластьДанных(Пакет) Экспорт
	
	Возврат ФабрикаXDTO.Тип(Пакет, "PrepareApplication");
	
КонецФункции

// Возвращает тип сообщения ПодготовитьОбластьДанныхИзВыгрузки.
//
// Возвращаемое значение:
// ТипОбъектаXDTO
//
Функция СообщениеПодготовитьОбластьДанныхИзВыгрузки(Пакет) Экспорт
	
	Возврат ФабрикаXDTO.Тип(Пакет, "PrepareCustomApplication");
	
КонецФункции

// Возвращает тип сообщения УдалитьОбластьДанных.
//
// Возвращаемое значение:
// ТипОбъектаXDTO
//
Функция СообщениеУдалитьОбластьДанных(Пакет) Экспорт
	
	Возврат ФабрикаXDTO.Тип(Пакет, "DeleteApplication");
	
КонецФункции

// Возвращает тип сообщения УстановитьПараметрыОбластиДанных.
//
// Возвращаемое значение:
// ТипОбъектаXDTO
//
Функция СообщениеУстановитьПараметрыОбластиДанных(Пакет) Экспорт
	
	Возврат ФабрикаXDTO.Тип(Пакет, "SetApplicationParams");
	
КонецФункции

// Возвращает тип сообщения ОбластьДанныхПодготовлена.
//
// Возвращаемое значение:
// ТипОбъектаXDTO
//
Функция СообщениеОбластьДанныхПодготовлена() Экспорт
	
	Возврат ФабрикаXDTO.Тип(ПакетКонтрольУдаленногоАдминистрирования(), "ApplicationPrepared");
	
КонецФункции

// Возвращает тип сообщения ОбластьДанныхУдалена.
//
// Возвращаемое значение:
// ТипОбъектаXDTO
//
Функция СообщениеОбластьДанныхУдалена() Экспорт
	
	Возврат ФабрикаXDTO.Тип(ПакетКонтрольУдаленногоАдминистрирования(), "ApplicationDeleted");
	
КонецФункции

// Возвращает тип сообщения ОшибкаПодготовкиОбластиДанных.ОшибкаПодготовкиОбластиДанных
//
// Возвращаемое значение:
// ТипОбъектаXDTO
//
Функция СообщениеОшибкаПодготовкиОбластиДанных() Экспорт
	
	Возврат ФабрикаXDTO.Тип(ПакетКонтрольУдаленногоАдминистрирования(), "ApplicationPrepareFailed");
	
КонецФункции

// Возвращает тип сообщения ОшибкаУдаленияОбластиДанных.
//
// Возвращаемое значение:
// ТипОбъектаXDTO
//
Функция СообщениеОшибкаУдаленияОбластиДанных() Экспорт
	
	Возврат ФабрикаXDTO.Тип(ПакетКонтрольУдаленногоАдминистрирования(), "ApplicationDeleteFailed");
	
КонецФункции

// Возвращает тип сообщения УстановитьПараметрыИБ.
//
// Возвращаемое значение:
// ТипОбъектаXDTO
//
Функция СообщениеУстановитьПараметрыИБ(Пакет) Экспорт
	
	Возврат ФабрикаXDTO.Тип(Пакет, "SetIBParams");
	
КонецФункции

// Возвращает тип сообщения УстановитьКонечнуюТочкуМенеджераСервиса.
//
// Возвращаемое значение:
// ТипОбъектаXDTO
//
Функция СообщениеУстановитьКонечнуюТочкуМенеджераСервиса(Пакет) Экспорт
	
	Возврат ФабрикаXDTO.Тип(Пакет, "SetServiceManagerEndPoint");
	
КонецФункции

// Возвращает тип сообщения СообщениеУстановитьРейтингОбластейДанных.
//
// Возвращаемое значение:
//  ТипОбъектаXDTO - tns:SetApplicationsRating
//
Функция СообщениеУстановитьРейтингОбластейДанных(Пакет) Экспорт
	
	Возврат ФабрикаXDTO.Тип(Пакет, "SetApplicationsRating");
	
КонецФункции

// Возвращает соответствие видов контактной информации пользователя видам
// КИ используемой в XDTO модели сервиса.
//
// Возвращаемое значение:
//  Соответствие - соответствие видов КИ
//
Функция СоответствиеВидовКИПользователяXDTO() Экспорт
	
	Соответствие = Новый Соответствие;
	Соответствие.Вставить(Справочники.ВидыКонтактнойИнформации.EmailПользователя, "UserEMail");
	Соответствие.Вставить(Справочники.ВидыКонтактнойИнформации.ТелефонПользователя, "UserPhone");
	
	Возврат Новый ФиксированноеСоответствие(Соответствие);
	
КонецФункции

// Возвращает соответствие видов контактной информации XDTO видам 
// КИ пользователя.
//
// Возвращаемое значение:
//  Соответствие - соответствие видов КИ
//
Функция СоответствиеВидовКИXDTOВидамКИПользователя() Экспорт
	
	Соответствие = Новый Соответствие;
	Для каждого КлючИЗначение Из РаботаВМоделиСервисаПовтИсп.СоответствиеВидовКИПользователяXDTO() Цикл
		Соответствие.Вставить(КлючИЗначение.Значение, КлючИЗначение.Ключ);
	КонецЦикла;
	
	Возврат Новый ФиксированноеСоответствие(Соответствие);
	
КонецФункции

// Возвращает соответствие прав XDTO используемы в модели сервиса возможным
// действиям с пользователем сервиса
// 
// Возвращаемое значение:
//  Соответствие - соответствие прав действиям
//
Функция СоответствиеПравXDTOДействиямСПользователемСервиса() Экспорт
	
	Соответствие = Новый Соответствие;
	Соответствие.Вставить("ChangePassword", "ИзменениеПароля");
	Соответствие.Вставить("ChangeName", "ИзменениеИмени");
	Соответствие.Вставить("ChangeFullName", "ИзменениеПолногоИмени");
	Соответствие.Вставить("ChangeAccess", "ИзменениеДоступа");
	Соответствие.Вставить("ChangeAdmininstrativeAccess", "ИзменениеАдминистративногоДоступа");
	
	Возврат Новый ФиксированноеСоответствие(Соответствие);
	
КонецФункции

// Возвращает имя пакета удаленного администрирования.
//
// Возвращаемое значение:
// Строка.
//
Функция ПакетУправлениеПользователями() Экспорт
	
	Возврат "http://www.1c.ru/1cFresh/ManageApplication/Messages/1.0";
	
КонецФункции

// Возвращает тип тела сообщения АннулироватьДоступПользователя.
//
// Возвращаемое значение:
//  ТипОбъектаXDTO
//
Функция СообщениеАннулироватьДоступПользователя() Экспорт
	
	Возврат ФабрикаXDTO.Тип(ПакетУправлениеПользователями(), "RevokeUserAccess");
	
КонецФункции
