////////////////////////////////////////////////////////////////////////////////
// Подсистема "Партионный учет".
// 
////////////////////////////////////////////////////////////////////////////////

///////////////////////////////////////////////////////////////////////////////////////////////////
//ПРОЦЕДУРЫ ЗАПИСИ ДВИЖЕНИЙ В РЕГИСТРЫ

// Процедура формирования движений по регистру "Партии товаров организаций".
//
// Параметры:
//	ДокументОбъект - Текущий документ
//	Отказ - Булево - Признак отказа от проведения документа
//
Процедура ОтразитьДвиженияПартийТоваровОрганизаций(ДополнительныеСвойства, Движения, Отказ) Экспорт
	
	Таблица= ДополнительныеСвойства.ТаблицыДляДвижений.ТаблицаПартииТоваровОрганизаций;
	
	Если Отказ ИЛИ Таблица.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;

	Движения.ПартииТоваровОрганизаций.Записывать = Истина;
	Движения.ПартииТоваровОрганизаций.Загрузить(Таблица);
	
КонецПроцедуры

// Процедура формирования движений по регистру "Партии товаров переданные на комиссию".
//
// Параметры:
//	ДокументОбъект - Текущий документ
//	Отказ - Булево - Признак отказа от проведения документа
//
Процедура ОтразитьДвиженияПартийТоваровПереданныеНаКомиссию(ДополнительныеСвойства, Движения, Отказ) Экспорт
	
	Таблица= ДополнительныеСвойства.ТаблицыДляДвижений.ТаблицаПартииТоваровПереданныеНаКомиссию;
	
	Если Отказ ИЛИ Таблица.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;

	Движения.ПартииТоваровПереданныеНаКомиссию.Записывать = Истина;
	Движения.ПартииТоваровПереданныеНаКомиссию.Загрузить(Таблица);
	
КонецПроцедуры

// Процедура формирования движений по регистру "Партии расходов на себестоимость товаров".
//
// Параметры:
//	ДокументОбъект - Текущий документ
//	Отказ - Булево - Признак отказа от проведения документа
//
Процедура ОтразитьДвиженияПартийРасходовНаСебестоимостьТоваров(ДополнительныеСвойства, Движения, Отказ) Экспорт
	
	Таблица= ДополнительныеСвойства.ТаблицыДляДвижений.ТаблицаПартииРасходовНаСебестоимостьТоваров;
	
	Если Отказ ИЛИ Таблица.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;

	Движения.ПартииРасходовНаСебестоимостьТоваров.Записывать = Истина;
	Движения.ПартииРасходовНаСебестоимостьТоваров.Загрузить(Таблица);
	
КонецПроцедуры

// Процедура формирования движений по регистру "Партии прочих расходов".
//
// Параметры:
//	ДокументОбъект - Текущий документ
//	Отказ - Булево - Признак отказа от проведения документа
//
Процедура ОтразитьДвиженияПартийПрочихРасходов(ДополнительныеСвойства, Движения, Отказ) Экспорт
	
	Таблица= ДополнительныеСвойства.ТаблицыДляДвижений.ТаблицаПартииПрочихРасходов;
	
	Если Отказ ИЛИ Таблица.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;

	Движения.ПартииПрочихРасходов.Записывать = Истина;
	Движения.ПартииПрочихРасходов.Загрузить(Таблица);
	
КонецПроцедуры

///////////////////////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ФОРМИРОВАНИЯ ОТЛОЖЕННЫХ ДВИЖЕНИЙ ПО ПАРТИЯМ ТОВАРОВ ОРГАНИЗАЦИЙ

// Функция формирует временную таблицу "НачальныеГраницы" для анализа актуальности 
// последовательности "Партии товаров организаций"
//
// Параметры:
//	МенеджерВременныхТаблиц   - Менеджер временных таблиц
//  АналитикаУчетаПоНоменклатуре - Массив(СправочникСсылка.КлючиАналитикиУчетаНоменклатуры) - Отбор по аналитике
// ВозвращаемоеЗначение:
//	Ложь - Если временная таблица без записей
//
Функция СформироватьВременнуюТаблицуНачальныеГраницыПартииТоваровОрганизаций(МенеджерВременныхТаблиц) Экспорт
	
	ТекстЗапроса ="
	|ВЫБРАТЬ
	|	ПерваяДата.Номенклатура,
	|	ПерваяДата.Характеристика,
	|	ЕСТЬNULL(Границы.Период, ПерваяДата.Период) КАК Период
	|
	|ПОМЕСТИТЬ Границы
	|
	|ИЗ
	|	(ВЫБРАТЬ
	|		МИНИМУМ(Последовательность.Период) КАК Период,
	|		Последовательность.Номенклатура КАК Номенклатура,
	|		Последовательность.Характеристика КАК Характеристика
	|	ИЗ
	|		Последовательность.ПартииТоваровОрганизаций КАК Последовательность
	|	
	|	СГРУППИРОВАТЬ ПО
	|		Последовательность.Номенклатура,
	|		Последовательность.Характеристика
	|	) КАК ПерваяДата
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ 
	|		Последовательность.ПартииТоваровОрганизаций.Границы КАК Границы
	|	ПО 
	|		(Границы.Номенклатура = ПерваяДата.Номенклатура)
	|		И (Границы.Характеристика = ПерваяДата.Характеристика)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Границы.Номенклатура,
	|	Границы.Характеристика,
	|	Товары.Комиссия КАК КомиссионнаяТорговля,
	|	Границы.Период КАК Период,
	|	Товары.Период КАК ПериодОсновной,
	|	НАЧАЛОПЕРИОДА(Границы.Период, МЕСЯЦ) КАК Месяц
	|
	|ПОМЕСТИТЬ НачальныеГраницы
	|
	|ИЗ
	|	Границы КАК Границы
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ (
	|			ВЫБРАТЬ
	|				Товары.Номенклатура КАК Номенклатура,
	|				Товары.Характеристика КАК Характеристика,
	|				ЛОЖЬ КАК Комиссия,
	|				МАКСИМУМ(Товары.Период) КАК Период
	|			ИЗ
	|				РегистрНакопления.ТоварыОрганизаций КАК Товары
	|		
	|			СГРУППИРОВАТЬ ПО
	|				Товары.Номенклатура,
	|				Товары.Характеристика
	|		
	|			ОБЪЕДИНИТЬ ВСЕ
	|		
	|			ВЫБРАТЬ
	|				Товары.Номенклатура,
	|				Товары.Характеристика,
	|				ИСТИНА,
	|				МАКСИМУМ(Товары.Период)
	|			ИЗ
	|				РегистрНакопления.ТоварыПереданныеНаКомиссию КАК Товары
	|		
	|			СГРУППИРОВАТЬ ПО
	|				Товары.Номенклатура,
	|				Товары.Характеристика
	|		) КАК Товары
	|		ПО 
	|			Границы.Номенклатура = Товары.Номенклатура
	|			И Границы.Характеристика = Товары.Характеристика
	|ГДЕ
	|	Границы.Период <= Товары.Период
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Границы.Период,
	|	Границы.Номенклатура,
	|	Границы.Характеристика
	|";
 	
	Запрос = Новый Запрос;
	Запрос.Текст = ТекстЗапроса;
	МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Выборка = РезультатЗапроса.Выбрать();
	Выборка.Следующий();
	
	Возврат НЕ (Выборка.Количество = 0);
	
КонецФункции // СформироватьВременнуюТаблицуНачальныеГраницыПартииТоваровОрганизаций()

Процедура СформироватьТаблицуГраницПартийПомесячно(МенеджерВременныхТаблиц)
	
	ТекстЗапроса = "
	|ВЫБРАТЬ
	|	МИНИМУМ(НачальныеГраницы.Месяц) КАК Месяц
	|
	|ПОМЕСТИТЬ МинимальныйМесяц
	|
	|ИЗ
	|	НачальныеГраницы КАК НачальныеГраницы
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	НачальныеГраницы.Номенклатура,
	|	НачальныеГраницы.Характеристика,
	|	НачальныеГраницы.КомиссионнаяТорговля,
	|	НачальныеГраницы.Период,
	|	КОНЕЦПЕРИОДА(НачальныеГраницы.Период,МЕСЯЦ) КАК КонецМесяца
	|
	|ПОМЕСТИТЬ МинимальныеНачальныеГраницы
	|
	|ИЗ
	|	НачальныеГраницы КАК НачальныеГраницы
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ 
	|		МинимальныйМесяц КАК МинимальныйМесяц
	|	ПО 
	|		НачальныеГраницы.Месяц = МинимальныйМесяц.Месяц
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	НачальныеГраницы.Период,
	|	НачальныеГраницы.Номенклатура,
	|	НачальныеГраницы.Характеристика
	|";
	
	Запрос = Новый Запрос;
	Запрос.Текст = ТекстЗапроса;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	
	РезультатЗапроса = Запрос.Выполнить();

КонецПроцедуры

// Функция возвращает месяц, в рамках которого производится распределение на партии
//
// Параметры:
//	МенеджерВременныхТаблиц - МенеджерВременныхТаблиц - Менеджер временных таблиц
//
// Возвращаемое значение:
//	ОбрабатываемыйМесяц - Дата - Дата конца месяца в рамках которого производится распределение на партии
//  
Функция ПолучитьОбрабатываемыйМесяц(МенеджерВременныхТаблиц, ДатаОбработки=Неопределено)
	
	ТекстЗапроса ="
	|ВЫБРАТЬ ПЕРВЫЕ 1
	|	НАЧАЛОПЕРИОДА(Границы.КонецМесяца, Месяц) КАК Месяц
	|ИЗ
	|	МинимальныеНачальныеГраницы КАК Границы
	|"; 
	
	Запрос							= Новый Запрос;
	Запрос.Текст					= ТекстЗапроса;
	Запрос.МенеджерВременныхТаблиц	= МенеджерВременныхТаблиц;
	
	Результат = Запрос.Выполнить();
	Выборка = Результат.Выбрать();
	
	Если Выборка.Количество() = 0 Тогда
		ОбрабатываемыйМесяц = ?(ДатаОбработки <> Неопределено, КонецМесяца(ДатаОбработки)+1, КонецМесяца(ТекущаяДата()) + 1);
	КонецЕсли;
	
	Пока Выборка.Следующий() Цикл
		ОбрабатываемыйМесяц = Выборка.Месяц;
	КонецЦикла;
	
	Возврат ОбрабатываемыйМесяц;
	
КонецФункции

// Процедура устанавливает блокировку на набор записей регистров накопления "Товары организаций"
// и "Товары переданные на комиссию".
//
// Параметры:
//	МенеджерВременныхТаблиц - МенеджерВременныхТаблиц - Менеджер временных таблиц
//
Процедура УстановитьБлокировкуРегистровТоваров(МенеджерВременныхТаблиц)
	
	Запрос = Новый Запрос("
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	НачальныеГраницы.Номенклатура КАК Номенклатура,
	|	НачальныеГраницы.Характеристика КАК Характеристика,
	|	НачальныеГраницы.КомиссионнаяТорговля
	|ИЗ
	|	МинимальныеНачальныеГраницы КАК НачальныеГраницы
	|");
						  
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	РезультатЗапроса = Запрос.Выполнить();
	
	Блокировка = Новый БлокировкаДанных;
	
	Выборка = РезультатЗапроса.Выбрать();
	Пока Выборка.Следующий() Цикл
		
		Если Не Выборка.КомиссионнаяТорговля Тогда 
			
			ЭлементБлокировки 		= Блокировка.Добавить("РегистрНакопления.ТоварыОрганизаций");
			ЭлементБлокировки.Режим = РежимБлокировкиДанных.Исключительный;
		
			ЭлементБлокировки.УстановитьЗначение("Номенклатура"		,Выборка.Номенклатура);
			ЭлементБлокировки.УстановитьЗначение("Характеристика"	,Выборка.Характеристика);
						
		Иначе
			
			ЭлементБлокировки 		= Блокировка.Добавить("РегистрНакопления.ТоварыПереданныеНаКомиссию");
			ЭлементБлокировки.Режим = РежимБлокировкиДанных.Исключительный;
		
			ЭлементБлокировки.УстановитьЗначение("Номенклатура"		,Выборка.Номенклатура);
			ЭлементБлокировки.УстановитьЗначение("Характеристика"	,Выборка.Характеристика);
						
		КонецЕсли;
		
	КонецЦикла;
	
	Блокировка.Заблокировать();
	
КонецПроцедуры // УстановитьБлокировкуРегистровТоваров()

Функция ТекстЗапросаВозвратовТоваровОтКлиента()
	
	ТекстЗапроса ="
	|ВЫБРАТЬ 
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)	КАК ВидДвижения,
	|	Таб.Регистратор							КАК Регистратор,
	|	Таб.Период 								КАК Период,
	|
	|	Таб.АналитикаУчетаНоменклатуры			КАК АналитикаУчетаНоменклатуры,
	|	Таб.Организация 						КАК Организация,
	|	Таб.ВидЗапасов 							КАК ВидЗапасов,
	|	Таб.ДокументПоступления 				КАК ДокументПоступления,
	|	Таб.АналитикаУчетаПартий 				КАК АналитикаУчетаПартий,
	|	НАЧАЛОПЕРИОДА(Таб.Период, МЕСЯЦ) 		КАК Месяц,
	|
	|	-Таб.ИсходноеКоличество					КАК Количество,
	|	-Таб.ИсходнаяСтоимость					КАК Стоимость,
	|	-Таб.ИсходнаяСтоимостьБезНДС			КАК СтоимостьБезНДС,
	|	-Таб.ИсходнаяСтоимостьРегл				КАК СтоимостьРегл,
	|	-Таб.ИсходнаяНДСРегл					КАК НДСРегл,
	|
	|	0 		КАК ИсходноеКоличество,
	|	0 		КАК ИсходнаяСтоимость,
	|	0 		КАК ИсходнаяСтоимостьБезНДС,
	|	0 		КАК ИсходнаяСтоимостьРегл,
	|	0 		КАК ИсходнаяНДСРегл,
	|
	|	Таб.ДокументРеализации							КАК ДокументРеализации,
	|	Таб.НалогообложениеНДС							КАК НалогообложениеНДС,
	|	Таб.ХозяйственнаяОперация 						КАК ХозяйственнаяОперация,
	|
	|	ВЫБОР
	|		КОГДА Таб.ИсходнаяНДСРегл <> 0
	|		ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ 											КАК ВозможнаКорректировкаНДС,
	|
	|	Таб.Номенклатура								КАК Номенклатура,
	|	Таб.Характеристика 								КАК Характеристика,
	|	Таб.ХозяйственнаяОперация 						КАК ХозяйственнаяОперацияПартии
	|
	|ПОМЕСТИТЬ ВТОбработанныеВозвраты
	|
	|ИЗ
	|	&ТаблицаВозвратов КАК Таб
	|;
	|/////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	
	|	Таблица.ВидДвижения								КАК ВидДвижения,
	|	Таблица.Регистратор								КАК Регистратор,
	|	Таблица.Период									КАК Период,
	|	Таблица.АналитикаУчетаНоменклатуры				КАК АналитикаУчетаНоменклатуры,
	|	Таблица.Организация								КАК Организация,
	|	Таблица.ВидЗапасов								КАК ВидЗапасов,
	|	Таблица.ДокументПоступления						КАК ДокументПоступления,
	|	Таблица.АналитикаУчетаПартий					КАК АналитикаУчетаПартий,
	|	Таблица.Месяц									КАК Месяц,
	|	Таблица.Количество								КАК Количество,
	|	Таблица.Стоимость								КАК Стоимость,
	|	Таблица.СтоимостьБезНДС							КАК СтоимостьБезНДС,
	|	Таблица.СтоимостьРегл							КАК СтоимостьРегл,
	|	Таблица.НДСРегл									КАК НДСРегл,
	|	Таблица.ИсходноеКоличество						КАК ИсходноеКоличество,
	|	Таблица.ИсходнаяСтоимость						КАК ИсходнаяСтоимость,
	|	Таблица.ИсходнаяСтоимостьБезНДС					КАК ИсходнаяСтоимостьБезНДС,
	|	Таблица.ИсходнаяСтоимостьРегл					КАК ИсходнаяСтоимостьРегл,
	|	Таблица.ИсходнаяНДСРегл							КАК ИсходнаяНДСРегл,
	|	Таблица.ДокументРеализации						КАК ДокументРеализации,
	|	Таблица.НалогообложениеНДС						КАК НалогообложениеНДС,
	|	ЛОЖЬ											КАК КомиссионнаяТорговля,
	|	ЛОЖЬ											КАК ЗаписьВРегистр,
	|	ИСТИНА											КАК ДокументОстатка,
	|	Таблица.ХозяйственнаяОперация					КАК ХозяйственнаяОперация,
	|	НЕОПРЕДЕЛЕНО 									КАК СтатьяРасходов,
	|	НЕОПРЕДЕЛЕНО 									КАК АналитикаРасходов,
	|	Таблица.ВозможнаКорректировкаНДС				КАК ВозможнаКорректировкаНДС,
	|	ИСТИНА											КАК ЕстьДокументПартии,
	|	Таблица.Регистратор.МоментВремени				КАК МоментВремени,
	|	ЛОЖЬ											КАК ПартияПодобрана,
	|	Таблица.Номенклатура							КАК Номенклатура,
	|	Таблица.Характеристика							КАК Характеристика,
	|	NULL											КАК ДокументПередачиНаКомиссию,
	|	НЕОПРЕДЕЛЕНО									КАК АналитикаУчетаНоменклатурыВПроизводстве,
	|	Таблица.ХозяйственнаяОперацияПартии				КАК ХозяйственнаяОперацияПартии,
	|	НЕОПРЕДЕЛЕНО									КАК Подразделение,
	|	НЕОПРЕДЕЛЕНО									КАК КорВидЗапасов,
	|	НЕОПРЕДЕЛЕНО									КАК НомерГТД
	|
	|ИЗ ВТОбработанныеВозвраты КАК Таблица
	|
	|";
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаОстаткиПартийТоваров()
	
	ТекстЗапроса ="
	|ВЫБРАТЬ // Получение остатков регистра партий товаров на ТА
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)	КАК ВидДвижения,
	|	НЕОПРЕДЕЛЕНО 							КАК Регистратор,
	|	Границы.Период							КАК Период,
	|
	|	Партии.АналитикаУчетаНоменклатуры 		КАК АналитикаУчетаНоменклатуры,
	|	Партии.Организация 						КАК Организация,
	|	Партии.ВидЗапасов 						КАК ВидЗапасов,
	|	Партии.ДокументПоступления 				КАК ДокументПоступления,
	|	Партии.АналитикаУчетаПартий 			КАК АналитикаУчетаПартий,
	|	НАЧАЛОПЕРИОДА(Границы.Период, МЕСЯЦ) 	КАК Месяц,
	|
	|	СУММА(ВЫБОР
	|			КОГДА Партии.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|				ТОГДА ЕСТЬNULL(Таблица.Количество + Партии.Количество, Партии.Количество)
	|			ИНАЧЕ -Партии.Количество
	|		КОНЕЦ) 								КАК Количество,
	|	СУММА(ВЫБОР
	|			КОГДА Партии.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|				ТОГДА ЕСТЬNULL(Таблица.Стоимость + Партии.Стоимость, Партии.Стоимость)
	|			ИНАЧЕ -Партии.Стоимость
	|		КОНЕЦ) 								КАК Стоимость,
	|	СУММА(ВЫБОР
	|			КОГДА Партии.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|				ТОГДА ЕСТЬNULL(Таблица.СтоимостьБезНДС + Партии.СтоимостьБезНДС, Партии.СтоимостьБезНДС)
	|			ИНАЧЕ -Партии.СтоимостьБезНДС
	|		КОНЕЦ) 								КАК СтоимостьБезНДС,
	|	СУММА(ВЫБОР
	|			КОГДА Партии.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|				ТОГДА ЕСТЬNULL(Таблица.СтоимостьРегл + Партии.СтоимостьРегл, Партии.СтоимостьРегл)
	|			ИНАЧЕ -Партии.СтоимостьРегл
	|		КОНЕЦ) 								КАК СтоимостьРегл,
	|	СУММА(ВЫБОР
	|			КОГДА Партии.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|				ТОГДА ЕСТЬNULL(Таблица.НДСРегл + Партии.НДСРегл, Партии.НДСРегл)
	|			ИНАЧЕ -Партии.НДСРегл
	|		КОНЕЦ) 								КАК НДСРегл,
	|
	|	0 		КАК ИсходноеКоличество,
	|	0 		КАК ИсходнаяСтоимость,
	|	0 		КАК ИсходнаяСтоимостьБезНДС,
	|	0 		КАК ИсходнаяСтоимостьРегл,
	|	0 		КАК ИсходнаяНДСРегл,
	|
	|	НЕОПРЕДЕЛЕНО 									КАК ДокументРеализации,
	|	Партии.АналитикаУчетаПартий.НалогообложениеНДС	КАК НалогообложениеНДС,
	|	ЛОЖЬ 											КАК КомиссионнаяТорговля,
	|	ЛОЖЬ 											КАК ЗаписьВРегистр,
	|	ИСТИНА 											КАК ДокументОстатка,
	|	НЕОПРЕДЕЛЕНО				 					КАК ХозяйственнаяОперация,
	|	НЕОПРЕДЕЛЕНО 									КАК СтатьяРасходов,
	|	НЕОПРЕДЕЛЕНО 									КАК АналитикаРасходов,
	|
	|	ВЫБОР
	|		КОГДА Партии.НДСРегл <> 0
	|		ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ 											КАК ВозможнаКорректировкаНДС,
	|
	|	ИСТИНА 											КАК ЕстьДокументПартии,
	|	Партии.ДокументПоступления.МоментВремени 		КАК МоментВремени,
	|	ЛОЖЬ 											КАК ПартияПодобрана,
	|	АналитикаНоменклатуры.Номенклатура 				КАК Номенклатура,
	|	АналитикаНоменклатуры.Характеристика 			КАК Характеристика,
	|	NULL 											КАК ДокументПередачиНаКомиссию,
	|	НЕОПРЕДЕЛЕНО 									КАК АналитикаУчетаНоменклатурыВПроизводстве,
	|	ВЫБОР 
	|		КОГДА Партии.ДокументПоступления ССЫЛКА Документ.ПеремещениеТоваров
	|		ТОГДА ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПеремещениеТоваров)
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ 											КАК ХозяйственнаяОперацияПартии,
	|	НЕОПРЕДЕЛЕНО 									КАК Подразделение,
	|	НЕОПРЕДЕЛЕНО 									КАК КорВидЗапасов,
	|	НЕОПРЕДЕЛЕНО 									КАК НомерГТД
	|
	|ИЗ
	|	РегистрНакопления.ПартииТоваровОрганизаций КАК Партии
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ 
	|		МинимальныеНачальныеГраницы КАК Границы
	|	ПО 
	|		(Границы.Период > Партии.Период)
	|		И (Границы.Номенклатура = Партии.Номенклатура)
	|		И (Границы.Характеристика = Партии.Характеристика)
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ 
	|		РегистрСведений.АналитикаУчетаНоменклатуры КАК АналитикаНоменклатуры
	|	ПО 
	|	Партии.АналитикаУчетаНоменклатуры = АналитикаНоменклатуры.КлючАналитики
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ 
	|		ТаблицаКорректировок КАК Таблица
	|	ПО 
	|		(Таблица.Регистратор = Партии.Регистратор)
	|		И (Таблица.АналитикаУчетаНоменклатуры = Партии.АналитикаУчетаНоменклатуры)
	|		И (Таблица.АналитикаУчетаПартий = Партии.АналитикаУчетаПартий)
	|		И (Таблица.ВидЗапасов = Партии.ВидЗапасов)
	|
	|ГДЕ
	|	Партии.Активность
	|	И Партии.Количество <> 0
	|	И НЕ Границы.КомиссионнаяТорговля
	|
	|СГРУППИРОВАТЬ ПО
	|	Границы.Период,
	|	Партии.Организация,
	|	Партии.АналитикаУчетаНоменклатуры,
	|	Партии.ДокументПоступления,
	|	Партии.ВидЗапасов,
	|	Партии.АналитикаУчетаПартий,
	|	ВЫБОР 
	|		КОГДА Партии.ДокументПоступления ССЫЛКА Документ.ПеремещениеТоваров
	|		ТОГДА ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПеремещениеТоваров)
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА Партии.НДСРегл <> 0
	|		ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ,
	|	Партии.АналитикаУчетаПартий.НалогообложениеНДС,
	|	ВЫБОР
	|		КОГДА ТИПЗНАЧЕНИЯ(Партии.ДокументПоступления) = ТИП(Документ.ПоступлениеТоваровУслуг)
	|				ИЛИ ТИПЗНАЧЕНИЯ(Партии.ДокументПоступления) = ТИП(Документ.КорректировкаПоступления)
	|				ИЛИ ТИПЗНАЧЕНИЯ(Партии.ДокументПоступления) = ТИП(Документ.ВозвратТоваровМеждуОрганизациями)
	|				ИЛИ ТИПЗНАЧЕНИЯ(Партии.ДокументПоступления) = ТИП(Документ.ВозвратТоваровОтКлиента)
	|				ИЛИ ТИПЗНАЧЕНИЯ(Партии.ДокументПоступления) = ТИП(Документ.ПередачаТоваровМеждуОрганизациями)
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ,
	|	Партии.ДокументПоступления.МоментВремени,
	|	АналитикаНоменклатуры.Номенклатура,
	|	АналитикаНоменклатуры.Характеристика
	|";
	
	Возврат ТекстЗапроса;
	
КонецФункции //ТекстЗапросаОстаткиПартийТоваров()

Функция ТекстЗапросаПриходныеДвиженияТоваровОрганизаций()
	
	ТекстЗапроса ="
	|ВЫБРАТЬ // Получение приходных движений регистра товаров организаций с ТА за месяц
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)					КАК ВидДвижения,
	|	Товары.Регистратор										КАК Регистратор,
	|	Товары.Период											КАК Период,
	|
	|	Товары.АналитикаУчетаНоменклатуры						КАК АналитикаУчетаНоменклатуры,
	|	Товары.Организация										КАК Организация,
	|	Товары.ВидЗапасов										КАК ВидЗапасов,
	|	Товары.Регистратор										КАК ДокументПоступления,
	|	НЕОПРЕДЕЛЕНО											КАК АналитикаУчетаПартий,
	|	НАЧАЛОПЕРИОДА(Товары.Период, МЕСЯЦ)						КАК Месяц,
	|
	|	Товары.Количество										КАК Количество,
	|	0														КАК Стоимость,
	|	0														КАК СтоимостьБезНДС,
	|	0														КАК СтоимостьРегл,
	|	0														КАК НДСРегл,
 	|
	|
	|	Товары.Количество										КАК ИсходноеКоличество,
	|	0														КАК ИсходнаяСтоимость,
	|	0														КАК ИсходнаяСтоимостьБезНДС,
	|	0														КАК ИсходнаяСтоимостьРегл,
	|	0														КАК ИсходнаяНДСРегл,
	|
	|	НЕОПРЕДЕЛЕНО											КАК ДокументРеализации,
	|	Товары.НалогообложениеНДС								КАК НалогообложениеНДС,
	|	ЛОЖЬ													КАК КомиссионнаяТорговля,
	|	ЛОЖЬ													КАК ЗаписьВРегистр,
	|	ИСТИНА													КАК ДокументОстатка,
	|	Товары.ХозяйственнаяОперация							КАК ХозяйственнаяОперация,
	|	НЕОПРЕДЕЛЕНО											КАК СтатьяРасходов,
	|	НЕОПРЕДЕЛЕНО											КАК АналитикаРасходов,
	|
	|	ЛОЖЬ													КАК ВозможнаКорректировкаНДС,
	|
	|	ВЫБОР
	|		КОГДА НЕ Товары.ХозяйственнаяОперация В (
	|						ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.РеализацияТоваровВДругуюОрганизацию), 
	|						ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВнутренняяПередачаТоваров), 
	|						ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПеремещениеТоваров)
	|						)
	|			ТОГДА ИСТИНА
	|			ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ													КАК ЕстьДокументПартии,
	|	Товары.МоментВремени									КАК МоментВремени,
	|	ЛОЖЬ													КАК ПартияПодобрана,
	|	Товары.Номенклатура										КАК Номенклатура,
	|	Товары.Характеристика									КАК Характеристика,
	|	NULL													КАК ДокументПередачиНаКомиссию,
	|	НЕОПРЕДЕЛЕНО											КАК АналитикаУчетаНоменклатурыВПроизводстве,
	|	Товары.ХозяйственнаяОперация							КАК ХозяйственнаяОперацияПартии,
	|	НЕОПРЕДЕЛЕНО											КАК Подразделение,
	|	Товары.КорВидЗапасов									КАК КорВидЗапасов,
	|	Товары.НомерГТД											КАК НомерГТД
	|
	|ИЗ
	|	РегистрНакопления.ТоварыОрганизаций КАК Товары
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ 
	|		МинимальныеНачальныеГраницы КАК Границы
	|	ПО (Границы.Период <= Товары.Период)
	|		И (Границы.КонецМесяца >= Товары.Период)
	|		И (Границы.Номенклатура = Товары.Номенклатура)
	|		И (Границы.Характеристика = Товары.Характеристика)
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ 
	|		Последовательность.ПартииТоваровОрганизаций КАК Последовательность
	|	ПО (Последовательность.Регистратор = Товары.Регистратор)
	|		И (Последовательность.Номенклатура = Товары.Номенклатура)
	|		И (Последовательность.Характеристика = Товары.Характеристика)
	|
	|ГДЕ
	|	Товары.Активность
	|	И НЕ Границы.КомиссионнаяТорговля
	|	И Товары.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|	И Товары.ХозяйственнаяОперация В (
	|			ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.РеализацияТоваровВДругуюОрганизацию), 
	|			ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПередачаНаКомиссиюВДругуюОрганизацию), 
	|			ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратПоКомиссииМеждуОрганизациями), 
	|			ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВнутренняяПередачаТоваров), 
	|			ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПеремещениеТоваров)
	|			)
	|
	|";
		
	Возврат ТекстЗапроса;
	
КонецФункции //ТекстЗапросаПоступленияПартийТоваров()

Функция ТекстЗапросаПоступленияПартийТоваров()
	
	ТекстЗапроса ="
	|ВЫБРАТЬ // Получение приходных движений регистра партий товаров с ТА за месяц
	|
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)									КАК ВидДвижения,
	|	Партии.Регистратор														КАК Регистратор,
	|	Партии.Период															КАК Период,
	|
	|	Партии.АналитикаУчетаНоменклатуры										КАК АналитикаУчетаНоменклатуры,
	|	Партии.Организация														КАК Организация,
	|	Партии.ВидЗапасов														КАК ВидЗапасов,
	|	Партии.ДокументПоступления												КАК ДокументПоступления,
	|	Партии.АналитикаУчетаПартий												КАК АналитикаУчетаПартий,
	|	НАЧАЛОПЕРИОДА(Партии.Период, МЕСЯЦ)										КАК Месяц,
	|
	|	ЕСТЬNULL(
	|		Таблица.Количество + Партии.Количество, 
	|		Партии.Количество
	|		)																	КАК Количество,
	|	ЕСТЬNULL(
	|		Таблица.Стоимость + Партии.Стоимость, 
	|		Партии.Стоимость
	|		)																	КАК Стоимость,
	|	ЕСТЬNULL(
	|		Таблица.СтоимостьБезНДС + Партии.СтоимостьБезНДС, 
	|		Партии.СтоимостьБезНДС
	|		)																	КАК СтоимостьБезНДС,
	|	ЕСТЬNULL(
	|		Таблица.СтоимостьРегл + Партии.СтоимостьРегл, 
	|		Партии.СтоимостьРегл
	|		)																	КАК СтоимостьРегл,
	|	ЕСТЬNULL(Таблица.НДСРегл + Партии.НДСРегл, 
	|		Партии.НДСРегл
	|		)																	КАК НДСРегл,
	|	
	|	ЕСТЬNULL(
	|		Таблица.Количество + Партии.Количество, 
	|		Партии.Количество
	|		)																	КАК ИсходноеКоличество,
	|	ЕСТЬNULL(
	|		Таблица.Стоимость + Партии.Стоимость, 
	|		Партии.Стоимость
	|		)																	КАК ИсходнаяСтоимость,
	|	ЕСТЬNULL(
	|		Таблица.СтоимостьБезНДС + Партии.СтоимостьБезНДС,
	|		Партии.СтоимостьБезНДС
	|		)																	КАК ИсходнаяСтоимостьБезНДС,
	|	ЕСТЬNULL(
	|		Таблица.СтоимостьРегл + Партии.СтоимостьРегл, 
	|		Партии.СтоимостьРегл
	|		)																	КАК ИсходнаяСтоимостьРегл,
	|	ЕСТЬNULL(
	|		Таблица.НДСРегл + Партии.НДСРегл, 
	|		Партии.НДСРегл
	|		)																	КАК ИсходнаяНДСРегл,
	|
	|	НЕОПРЕДЕЛЕНО															КАК ДокументРеализации,
	|	Партии.АналитикаУчетаПартий.НалогообложениеНДС							КАК НалогообложениеНДС,
	|	ЛОЖЬ																	КАК КомиссионнаяТорговля,
	|	ЛОЖЬ																	КАК ЗаписьВРегистр,
	|	ИСТИНА																	КАК ДокументОстатка,
	|	Партии.ХозяйственнаяОперация											КАК ХозяйственнаяОперация,
	|	НЕОПРЕДЕЛЕНО															КАК СтатьяРасходов,
	|	НЕОПРЕДЕЛЕНО															КАК АналитикаРасходов,
	|
	|	ВЫБОР
	|		КОГДА Партии.НДСРегл <> 0
	|		ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ																	КАК ВозможнаКорректировкаНДС,
	|
	|	ИСТИНА																	КАК ЕстьДокументПартии,
	|	Партии.МоментВремени													КАК МоментВремени,
	|	ЛОЖЬ																	КАК ПартияПодобрана,
	|	Партии.Номенклатура														КАК Номенклатура,
	|	Партии.Характеристика													КАК Характеристика,
	|	NULL																	КАК ДокументПередачиНаКомиссию,
	|	НЕОПРЕДЕЛЕНО															КАК АналитикаУчетаНоменклатурыВПроизводстве,
	|	Партии.ХозяйственнаяОперация											КАК ХозяйственнаяОперацияПартии,
	|	НЕОПРЕДЕЛЕНО															КАК Подразделение,
	|	НЕОПРЕДЕЛЕНО															КАК КорВидЗапасов,
	|	НЕОПРЕДЕЛЕНО															КАК НомерГТД
	|
	|ИЗ
	|	РегистрНакопления.ПартииТоваровОрганизаций КАК Партии
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ 
	|		МинимальныеНачальныеГраницы КАК Границы
	|	ПО (Границы.Период <= Партии.Период)
	|		И (Границы.КонецМесяца >= Партии.Период)
	|		И (Границы.Номенклатура = Партии.Номенклатура)
	|		И (Границы.Характеристика = Партии.Характеристика)
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ 
	|		Последовательность.ПартииТоваровОрганизаций КАК Последовательность
	|	ПО (Последовательность.Регистратор = Партии.Регистратор)
	|		И (Последовательность.Номенклатура = Партии.Номенклатура)
	|		И (Последовательность.Характеристика = Партии.Характеристика)
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ 
	|		ТаблицаКорректировок КАК Таблица
	|	ПО 
	|		(Таблица.Регистратор = Партии.Регистратор)
	|		И (Таблица.АналитикаУчетаНоменклатуры = Партии.АналитикаУчетаНоменклатуры)
	|		И (Таблица.АналитикаУчетаПартий = Партии.АналитикаУчетаПартий)
	|		И (Таблица.ВидЗапасов = Партии.ВидЗапасов)
	|
	|ГДЕ
	|	Партии.Активность
	|	И НЕ Границы.КомиссионнаяТорговля
	|	И Партии.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|	И НЕ Партии.ХозяйственнаяОперация В (
	|			ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.РеализацияТоваровВДругуюОрганизацию), 
	|			ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПередачаНаКомиссиюВДругуюОрганизацию), 
	|			ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратПоКомиссииМеждуОрганизациями), 
	|			ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВнутренняяПередачаТоваров), 
	|			ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПеремещениеТоваров)
	|			)
	|
	|";
		
	Возврат ТекстЗапроса;
	
КонецФункции //ТекстЗапросаПоступленияПартийТоваров()

Функция ТекстЗапросаВозвратовПартийТоваров()
	
	ТекстЗапроса ="
	|ВЫБРАТЬ // Получение документов возврата от клиента с ТА за месяц
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)								КАК ВидДвижения,
	|	Партии.Регистратор													КАК Регистратор,
	|	Партии.Период														КАК Период,
	|
	|	Партии.АналитикаУчетаНоменклатуры									КАК АналитикаУчетаНоменклатуры,
	|	Партии.Организация													КАК Организация,
	|	Партии.ВидЗапасов													КАК ВидЗапасов,
	|	Партии.ДокументПоступления											КАК ДокументПоступления,
	|	Партии.АналитикаУчетаПартий											КАК АналитикаУчетаПартий,
	|	НАЧАЛОПЕРИОДА(Партии.Период, МЕСЯЦ)									КАК Месяц,
	|
	|	- Партии.Количество													КАК Количество,
	|	- Партии.Стоимость													КАК Стоимость,
	|	- Партии.СтоимостьБезНДС											КАК СтоимостьБезНДС,
	|	- Партии.СтоимостьРегл												КАК СтоимостьРегл,
	|	- Партии.НДСРегл													КАК НДСРегл,
	|
	|	0																	КАК ИсходноеКоличество,
	|	0																	КАК ИсходнаяСтоимость,
	|	0																	КАК ИсходнаяСтоимостьБезНДС,
	|	0																	КАК ИсходнаяСтоимостьРегл,
	|	0																	КАК ИсходнаяНДСРегл,
	|
	|	Товары.ДокументРеализации											КАК ДокументРеализации,
	|	Партии.АналитикаУчетаПартий.НалогообложениеНДС						КАК НалогообложениеНДС,
	|	ЛОЖЬ																КАК КомиссионнаяТорговля,
	|	ЛОЖЬ																КАК ЗаписьВРегистр,
	|	ИСТИНА																КАК ДокументОстатка,
	|	Партии.ХозяйственнаяОперация										КАК ХозяйственнаяОперация,
	|	НЕОПРЕДЕЛЕНО														КАК СтатьяРасходов,
	|	НЕОПРЕДЕЛЕНО														КАК АналитикаРасходов,
	|
	|	ИСТИНА																КАК ВозможнаКорректировкаНДС,
	|
	|	ВЫБОР
	|		КОГДА Партии.ДокументПоступления = Товары.Регистратор
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ																КАК ЕстьДокументПартии,
	|	Партии.МоментВремени												КАК МоментВремени,
	|	ЛОЖЬ																КАК ПартияПодобрана,
	|	Партии.Номенклатура													КАК Номенклатура,
	|	Партии.Характеристика												КАК Характеристика,
	|	NULL																КАК ДокументПередачиНаКомиссию,
	|	НЕОПРЕДЕЛЕНО														КАК АналитикаУчетаНоменклатурыВПроизводстве,
	|	Партии.ХозяйственнаяОперация										КАК ХозяйственнаяОперацияПартии,
	|	НЕОПРЕДЕЛЕНО														КАК Подразделение,
	|	НЕОПРЕДЕЛЕНО														КАК КорВидЗапасов,
	|	НЕОПРЕДЕЛЕНО														КАК НомерГТД
	|
	|ИЗ
	|	РегистрНакопления.ПартииТоваровОрганизаций КАК Партии
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ 
	|		РегистрСведений.АналитикаУчетаНоменклатуры КАК Аналитика
	|	ПО 	
	|		Партии.АналитикаУчетаНоменклатуры = Аналитика.КлючАналитики
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ 
	|		МинимальныеНачальныеГраницы КАК Границы
	|	ПО 
	|		(Границы.Период <= Партии.Период)
	|		И (Границы.КонецМесяца >= Партии.Период)
	|		И (Границы.Номенклатура = Аналитика.Номенклатура)
	|		И (Границы.Характеристика = Аналитика.Характеристика)
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ 
	|		Последовательность.ПартииТоваровОрганизаций КАК Последовательность
	|	ПО 
	|		(Последовательность.Регистратор = Партии.Регистратор)
	|		И (Последовательность.Номенклатура = Аналитика.Номенклатура)
	|		И (Последовательность.Характеристика = Аналитика.Характеристика)
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ 
	|		РегистрНакопления.ТоварыОрганизаций КАК Товары
	|	ПО 
	|		Товары.АналитикаУчетаНоменклатуры 	= Партии.АналитикаУчетаНоменклатуры
	|		И Товары.ВидЗапасов 				= Партии.ВидЗапасов
	|		И Товары.Регистратор 				= Партии.Регистратор
	|
	|
	|ГДЕ
	|	Партии.Активность
	|	И НЕ Границы.КомиссионнаяТорговля
	|	И Партии.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|	И (
	|		Товары.ДокументРеализации = НЕОПРЕДЕЛЕНО
	|		ИЛИ Аналитика.Номенклатура <> Партии.Номенклатура
	|		)
	|	И Партии.ХозяйственнаяОперация В (
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратТоваровОтКлиента), 
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратОтКомиссионера), 
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратОтРозничногоПокупателя), 
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратТоваровМеждуОрганизациями)
	|		)
	|";
	
	Возврат ТекстЗапроса;
	
КонецФункции //ТекстЗапросаВозвратовПартийТоваров()

Функция ТекстЗапросаВозвратовПартийТоваровПоРеализации()
	
	ТекстЗапроса ="
	|ВЫБРАТЬ // Получение документов возврата от клиента с ТА за месяц
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)							КАК ВидДвижения,
	|	Товары.Регистратор												КАК Регистратор,
	|	Товары.Период													КАК Период,
	|
	|	Товары.АналитикаУчетаНоменклатуры								КАК АналитикаУчетаНоменклатуры,
	|	Товары.Организация												КАК Организация,
	|	Товары.ВидЗапасов												КАК ВидЗапасов,
	|	ВЫБОР
	|		КОГДА Товары.ДокументРеализации.Дата < Границы.Период
	|		ТОГДА ЕСТЬNULL(
	|				Партии.ДокументПоступления, 
	|				Товары.ДокументРеализации
	|				)
	|		ИНАЧЕ Товары.ДокументРеализации
	|	КОНЕЦ 															КАК ДокументПоступления,
	|	ВЫБОР
	|		КОГДА Товары.ДокументРеализации.Дата < Границы.Период
	|		ТОГДА ЕСТЬNULL(
	|				Партии.АналитикаУчетаПартий, 
	|				НЕОПРЕДЕЛЕНО
	|				)
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ															КАК АналитикаУчетаПартий,
	|	НАЧАЛОПЕРИОДА(Товары.Период, МЕСЯЦ)								КАК Месяц,
	|
	|	-Товары.Количество												КАК Количество,
	|	ВЫБОР
	|		КОГДА Товары.ДокументРеализации.Дата < Границы.Период
	|			ТОГДА ЕСТЬNULL(Партии.Стоимость, 0)
	|		ИНАЧЕ 0
	|	КОНЕЦ															КАК Стоимость,
	|	ВЫБОР
	|		КОГДА Товары.ДокументРеализации.Дата < Границы.Период
	|			ТОГДА ЕСТЬNULL(Партии.СтоимостьБезНДС, 0)
	|		ИНАЧЕ 0
	|	КОНЕЦ															КАК СтоимостьБезНДС,
	|	ВЫБОР
	|		КОГДА Товары.ДокументРеализации.Дата < Границы.Период
	|			ТОГДА ЕСТЬNULL(Партии.СтоимостьРегл, 0)
	|		ИНАЧЕ 0
	|	КОНЕЦ															КАК СтоимостьРегл,
	|	ВЫБОР
	|		КОГДА Товары.ДокументРеализации.Дата < Границы.Период
	|			ТОГДА ЕСТЬNULL(Партии.НДСРегл, 0)
	|		ИНАЧЕ 0
	|	КОНЕЦ															КАК НДСРегл,
	|
	|	Товары.Количество												КАК ИсходноеКоличество,
	|	ВЫБОР
	|		КОГДА Товары.ДокументРеализации.Дата < Границы.Период
	|			ТОГДА 0 - ЕСТЬNULL(Партии.Стоимость, 0)
	|		ИНАЧЕ 0
	|	КОНЕЦ															КАК ИсходнаяСтоимость,
	|	ВЫБОР
	|		КОГДА Товары.ДокументРеализации.Дата < Границы.Период
	|			ТОГДА 0 - ЕСТЬNULL(Партии.СтоимостьБезНДС, 0)
	|		ИНАЧЕ 0
	|	КОНЕЦ															КАК ИсходнаяСтоимостьБезНДС,
	|	ВЫБОР
	|		КОГДА Товары.ДокументРеализации.Дата < Границы.Период
	|			ТОГДА 0 - ЕСТЬNULL(Партии.СтоимостьРегл, 0)
	|		ИНАЧЕ 0
	|	КОНЕЦ															КАК ИсходнаяСтоимостьРегл,
	|	ВЫБОР
	|		КОГДА Товары.ДокументРеализации.Дата < Границы.Период
	|			ТОГДА 0 - ЕСТЬNULL(Партии.НДСРегл, 0)
	|		ИНАЧЕ 0
	|	КОНЕЦ															КАК ИсходнаяНДСРегл,
	|
	|	Товары.ДокументРеализации										КАК ДокументРеализации,
	|	ВЫБОР
	|		КОГДА Партии.ДокументПоступления = Товары.Регистратор
	|			ТОГДА Партии.АналитикаУчетаПартий.НалогообложениеНДС
	|		ИНАЧЕ Товары.НалогообложениеНДС
	|	КОНЕЦ															КАК НалогообложениеНДС,
	|	ЛОЖЬ															КАК КомиссионнаяТорговля,
	|	ВЫБОР
	|		КОГДА Товары.ДокументРеализации.Дата < Границы.Период
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ															КАК ЗаписьВРегистр,
	|	ИСТИНА															КАК ДокументОстатка,
	|	Товары.ХозяйственнаяОперация									КАК ХозяйственнаяОперация,
	|	НЕОПРЕДЕЛЕНО													КАК СтатьяРасходов,
	|	НЕОПРЕДЕЛЕНО													КАК АналитикаРасходов,
	|
	|	ИСТИНА															КАК ВозможнаКорректировкаНДС,
	|
	|	ВЫБОР
	|		КОГДА Товары.ДокументРеализации.Дата < Границы.Период
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ															КАК ЕстьДокументПартии,
	|	Товары.МоментВремени											КАК МоментВремени,
	|	ЛОЖЬ															КАК ПартияПодобрана,
	|	Товары.Номенклатура												КАК Номенклатура,
	|	Товары.Характеристика											КАК Характеристика,
	|	NULL															КАК ДокументПередачиНаКомиссию,
	|	НЕОПРЕДЕЛЕНО													КАК АналитикаУчетаНоменклатурыВПроизводстве,
	|	Товары.ХозяйственнаяОперация									КАК ХозяйственнаяОперацияПартии,
	|	НЕОПРЕДЕЛЕНО													КАК Подразделение,
	|	НЕОПРЕДЕЛЕНО													КАК КорВидЗапасов,
	|	Товары.НомерГТД													КАК НомерГТД
	|
	|ИЗ
	|	РегистрНакопления.ТоварыОрганизаций КАК Товары
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ 
	|		МинимальныеНачальныеГраницы КАК Границы
	|	ПО (Границы.Период <= Товары.Период)
	|		И (Границы.КонецМесяца >= Товары.Период)
	|		И (Границы.Номенклатура = Товары.Номенклатура)
	|		И (Границы.Характеристика = Товары.Характеристика)
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ 
	|		Последовательность.ПартииТоваровОрганизаций КАК Последовательность
	|	ПО (Последовательность.Регистратор = Товары.Регистратор)
	|		И (Последовательность.Номенклатура = Товары.Номенклатура)
	|		И (Последовательность.Характеристика = Товары.Характеристика)
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ 
	|		РегистрНакопления.ПартииТоваровОрганизаций КАК Партии
	|	ПО 
	|		Товары.АналитикаУчетаНоменклатуры	= Партии.АналитикаУчетаНоменклатуры
	|		И Товары.ВидЗапасов 				= Партии.ВидЗапасов
	|		И Товары.ДокументРеализации			= Партии.Регистратор
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ 
	|		ВТОбработанныеВозвраты КАК Возвраты
	|	ПО
	|		Товары.Регистратор			= Возвраты.Регистратор
	|		И Товары.Номенклатура		= Возвраты.Номенклатура
	|		И Товары.Характеристика		= Возвраты.Характеристика
	|		И Товары.ВидЗапасов			= Возвраты.ВидЗапасов
	|		И Товары.ДокументРеализации = Возвраты.ДокументРеализации
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РегистрСведений.АналитикаУчетаНоменклатуры КАК Аналитика
	|	ПО	
	|		Товары.Номенклатура		= Аналитика.Номенклатура
	|		И Товары.Характеристика = Аналитика.Характеристика
	|		И Товары.Склад			= Аналитика.Склад
	|
	|ГДЕ
	|	Товары.Активность
	|	И НЕ Границы.КомиссионнаяТорговля
	|	И Товары.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|	И (
	|		Товары.ДокументРеализации <> НЕОПРЕДЕЛЕНО
	|		И Аналитика.КлючАналитики = Товары.АналитикаУчетаНоменклатуры
	|		)
	|	И Возвраты.Номенклатура ЕСТЬ NULL
	|	И Товары.ХозяйственнаяОперация В (
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратТоваровОтКлиента), 
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратОтКомиссионера), 
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратОтРозничногоПокупателя), 
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратТоваровМеждуОрганизациями)
	|		)
	|";
	
	Возврат ТекстЗапроса;
	
КонецФункции //ТекстЗапросаВозвратовПартийТоваровПоРеализации()

Функция ТекстЗапросаОстаткиПартийТоваровНаКомиссии()

	ТекстЗапроса ="
	|ВЫБРАТЬ // Получение таблицы остатков регистра партии товаров переданные на комиссию на ТА
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)									КАК ВидДвижения,
	|	НЕОПРЕДЕЛЕНО															КАК Регистратор,
	|	Границы.Период															КАК Период,
	|
	|	ПартииНаКомиссии.АналитикаУчетаНоменклатуры								КАК АналитикаУчетаНоменклатуры,
	|	ПартииНаКомиссии.Организация											КАК Организация,
	|	ПартииНаКомиссии.ВидЗапасов												КАК ВидЗапасов,
	|	ПартииНаКомиссии.ДокументПоступления									КАК ДокументПоступления,
	|	ПартииНаКомиссии.АналитикаУчетаПартий									КАК АналитикаУчетаПартий,
	|	НАЧАЛОПЕРИОДА(Границы.Период, МЕСЯЦ)									КАК Месяц,
	|
	|	СУММА(ВЫБОР
	|			КОГДА ПартииНаКомиссии.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|				ТОГДА ПартииНаКомиссии.Количество
	|			ИНАЧЕ -ПартииНаКомиссии.Количество
	|		КОНЕЦ)																КАК Количество,
	|	СУММА(ВЫБОР
	|			КОГДА ПартииНаКомиссии.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|				ТОГДА ПартииНаКомиссии.Стоимость
	|			ИНАЧЕ -ПартииНаКомиссии.Стоимость
	|		КОНЕЦ)																КАК Стоимость,
	|	СУММА(ВЫБОР
	|		КОГДА ПартииНаКомиссии.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|			ТОГДА ПартииНаКомиссии.СтоимостьБезНДС
	|		ИНАЧЕ -ПартииНаКомиссии.СтоимостьБезНДС
	|	КОНЕЦ)																	КАК СтоимостьБезНДС,
	|	0																		КАК СтоимостьРегл,
	|	0																		КАК НДСРегл,
	|
	|	0																		КАК ИсходноеКоличество,
	|	0																		КАК ИсходнаяСтоимость,
	|	0																		КАК ИсходнаяСтоимостьБезНДС,
	|	0																		КАК ИсходнаяСтоимостьРегл,
	|	0																		КАК ИсходнаяНДСРегл,
	|
	|	НЕОПРЕДЕЛЕНО															КАК ДокументРеализации,
	|	ПартииНаКомиссии.АналитикаУчетаПартий.НалогообложениеНДС				КАК НалогообложениеНДС,
	|	ИСТИНА																	КАК КомиссионнаяТорговля,
	|	ЛОЖЬ																	КАК ЗаписьВРегистр,
	|	ИСТИНА																	КАК ДокументОстатка,
	|	НЕОПРЕДЕЛЕНО															КАК ХозяйственнаяОперация,
	|	НЕОПРЕДЕЛЕНО															КАК СтатьяРасходов,
	|	НЕОПРЕДЕЛЕНО															КАК АналитикаРасходов,
	|
	|	ВЫБОР
	|		КОГДА ТИПЗНАЧЕНИЯ(ПартииНаКомиссии.ДокументПоступления) = ТИП(Документ.ПоступлениеТоваровУслуг)
	|				ИЛИ ТИПЗНАЧЕНИЯ(ПартииНаКомиссии.ДокументПоступления) = ТИП(Документ.КорректировкаПоступления)
	|				ИЛИ ТИПЗНАЧЕНИЯ(ПартииНаКомиссии.ДокументПоступления) = ТИП(Документ.ВозвратТоваровМеждуОрганизациями)
	|				ИЛИ ТИПЗНАЧЕНИЯ(ПартииНаКомиссии.ДокументПоступления) = ТИП(Документ.ВозвратТоваровОтКлиента)
	|				ИЛИ ТИПЗНАЧЕНИЯ(ПартииНаКомиссии.ДокументПоступления) = ТИП(Документ.ПередачаТоваровМеждуОрганизациями)
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ																	КАК ВозможнаКорректировкаНДС,
	|
	|	ИСТИНА																	КАК ЕстьДокументПартии,
	|	ПартииНаКомиссии.ДокументПоступления.МоментВремени						КАК МоментВремени,
	|	ЛОЖЬ																	КАК ПартияПодобрана,
	|	АналитикаНоменклатуры.Номенклатура										КАК Номенклатура,
	|	АналитикаНоменклатуры.Характеристика									КАК Характеристика,
	|	ПартииНаКомиссии.ДокументПередачиНаКомиссию								КАК ДокументПередачиНаКомиссию,
	|	НЕОПРЕДЕЛЕНО															КАК АналитикаУчетаНоменклатурыВПроизводстве, 
	|	НЕОПРЕДЕЛЕНО															КАК ХозяйственнаяОперацияПартии,
	|	НЕОПРЕДЕЛЕНО															КАК Подразделение,
	|	НЕОПРЕДЕЛЕНО															КАК КорВидЗапасов,
	|	НЕОПРЕДЕЛЕНО															КАК НомерГТД
	|
	|ИЗ
	|	РегистрНакопления.ПартииТоваровПереданныеНаКомиссию КАК ПартииНаКомиссии
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ 
	|		МинимальныеНачальныеГраницы КАК Границы
	|	ПО 
	|		(Границы.Период > ПартииНаКомиссии.Период)
	|		И (Границы.Номенклатура = ПартииНаКомиссии.Номенклатура)
	|		И (Границы.Характеристика = ПартииНаКомиссии.Характеристика)
	|
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ 
	|			РегистрСведений.АналитикаУчетаНоменклатуры КАК АналитикаНоменклатуры
	|		ПО 
	|			ПартииНаКомиссии.АналитикаУчетаНоменклатуры = АналитикаНоменклатуры.КлючАналитики
	|ГДЕ
	|	ПартииНаКомиссии.Активность
	|	И Границы.КомиссионнаяТорговля
	|
	|СГРУППИРОВАТЬ ПО
	|	Границы.Период,
	|	ПартииНаКомиссии.Организация,
	|	ПартииНаКомиссии.АналитикаУчетаНоменклатуры,
	|	ПартииНаКомиссии.ДокументПоступления,
	|	ПартииНаКомиссии.ВидЗапасов,
	|	ПартииНаКомиссии.АналитикаУчетаПартий,
	|	ПартииНаКомиссии.НалогообложениеНДС,
	|	ПартииНаКомиссии.ХозяйственнаяОперация,
	|	ВЫБОР
	|		КОГДА ТИПЗНАЧЕНИЯ(ПартииНаКомиссии.ДокументПоступления) = ТИП(Документ.ПоступлениеТоваровУслуг)
	|				ИЛИ ТИПЗНАЧЕНИЯ(ПартииНаКомиссии.ДокументПоступления) = ТИП(Документ.КорректировкаПоступления)
	|				ИЛИ ТИПЗНАЧЕНИЯ(ПартииНаКомиссии.ДокументПоступления) = ТИП(Документ.ВозвратТоваровМеждуОрганизациями)
	|				ИЛИ ТИПЗНАЧЕНИЯ(ПартииНаКомиссии.ДокументПоступления) = ТИП(Документ.ВозвратТоваровОтКлиента)
	|				ИЛИ ТИПЗНАЧЕНИЯ(ПартииНаКомиссии.ДокументПоступления) = ТИП(Документ.ПередачаТоваровМеждуОрганизациями)
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ,
	|	АналитикаНоменклатуры.Номенклатура,
	|	АналитикаНоменклатуры.Характеристика,
	|	ПартииНаКомиссии.ДокументПередачиНаКомиссию
	|";
	
	Возврат ТекстЗапроса;
	
КонецФункции //ТекстЗапросаОстаткиПартийТоваровНаКомиссии()

Функция ТекстЗапросаПоступленияПартийТоваровНаКомиссии()
	
	ТекстЗапроса ="
	|ВЫБРАТЬ // Получение поступлений по регистру партий товаров переданных на комиссию с ТА за месяц
	|
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)										КАК ВидДвижения,
	|	ТоварыНаКомиссии.Регистратор												КАК Регистратор,
	|	ТоварыНаКомиссии.Период														КАК Период,
	|
	|	ТоварыНаКомиссии.АналитикаУчетаНоменклатуры									КАК АналитикаУчетаНоменклатуры,
	|	ТоварыНаКомиссии.Организация												КАК Организация,
	|	ТоварыНаКомиссии.ВидЗапасов													КАК ВидЗапасов,
	|	ТоварыНаКомиссии.Регистратор												КАК ДокументПоступления,
	|	НЕОПРЕДЕЛЕНО																КАК АналитикаУчетаПартий,
	|	НАЧАЛОПЕРИОДА(ТоварыНаКомиссии.Период, МЕСЯЦ)								КАК Месяц,
	|
	|	ТоварыНаКомиссии.Количество													КАК Количество,
	|	0																			КАК Стоимость,
	|	0																			КАК СтоимостьБезНДС,
	|	0																			КАК СтоимостьРегл,
	|	0																			КАК НДСРегл,
	|
	|	ТоварыНаКомиссии.Количество													КАК ИсходноеКоличество,
	|	0																			КАК ИсходнаяСтоимость,
	|	0																			КАК ИсходнаяСтоимостьБезНДС,
	|	0																			КАК ИсходнаяСтоимостьРегл,
	|	0																			КАК ИсходнаяНДСРегл,
	|
	|	НЕОПРЕДЕЛЕНО																КАК ДокументРеализации,
	|	ТоварыНаКомиссии.НалогообложениеНДС											КАК НалогообложениеНДС,
	|	ИСТИНА																		КАК КомиссионнаяТорговля,
	|	ЛОЖЬ																		КАК ЗаписьВРегистр,
	|	ИСТИНА																		КАК ДокументОстатка,
	|	ТоварыНаКомиссии.ХозяйственнаяОперация										КАК ХозяйственнаяОперация,
	|	НЕОПРЕДЕЛЕНО																КАК СтатьяРасходов,
	|	НЕОПРЕДЕЛЕНО																КАК АналитикаРасходов,
	|
	|	ЛОЖЬ																		КАК ВозможнаКорректировкаНДС,
	|
	|	ЛОЖЬ																		КАК ЕстьДокументПартии,
	|	ТоварыНаКомиссии.МоментВремени												КАК МоментВремени,
	|	ЛОЖЬ																		КАК ПартияПодобрана,
	|	ТоварыНаКомиссии.Номенклатура												КАК Номенклатура,
	|	ТоварыНаКомиссии.Характеристика												КАК Характеристика,
	|	ТоварыНаКомиссии.ДокументРеализации											КАК ДокументПередачиНаКомиссию,
	|	НЕОПРЕДЕЛЕНО																КАК АналитикаУчетаНоменклатурыВПроизводстве,
	|	ТоварыНаКомиссии.ХозяйственнаяОперация										КАК ХозяйственнаяОперацияПартии,
	|	НЕОПРЕДЕЛЕНО																КАК Подразделение,
	|	НЕОПРЕДЕЛЕНО																КАК КорВидЗапасов,
	|	НЕОПРЕДЕЛЕНО																КАК НомерГТД
	|
	|ИЗ
	|	РегистрНакопления.ТоварыПереданныеНаКомиссию КАК ТоварыНаКомиссии
	|		
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ 
	|		МинимальныеНачальныеГраницы КАК Границы
	|	ПО 
	|		(Границы.Период <= ТоварыНаКомиссии.Период)
	|		И (Границы.КонецМесяца >= ТоварыНаКомиссии.Период)
	|		И (Границы.Номенклатура = ТоварыНаКомиссии.Номенклатура)
	|		И (Границы.Характеристика = ТоварыНаКомиссии.Характеристика)
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ 
	|		Последовательность.ПартииТоваровОрганизаций КАК Последовательность
	|	ПО 
	|		(Последовательность.Регистратор = ТоварыНаКомиссии.Регистратор)
	|		И (Последовательность.Номенклатура = ТоварыНаКомиссии.Номенклатура)
	|		И (Последовательность.Характеристика = ТоварыНаКомиссии.Характеристика)
	|ГДЕ
	|	ТоварыНаКомиссии.Активность
	|	И Границы.КомиссионнаяТорговля
	|	И ТоварыНаКомиссии.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|";
	
	Возврат ТекстЗапроса;
	
КонецФункции //ТекстЗапросаПоступленияПартийТоваровНаКомиссии()

Функция ТекстЗапросаСторноПартийТоваровНаКомиссии()
	
	ТекстЗапроса ="
	|ВЫБРАТЬ // Получение сторнирующих документов отчет комиссионера с ТА за месяц
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)										КАК ВидДвижения,
	|	ТоварыНаКомиссии.Регистратор												КАК Регистратор,
	|	ТоварыНаКомиссии.Период														КАК Период,
	|
	|	ТоварыНаКомиссии.АналитикаУчетаНоменклатуры									КАК АналитикаУчетаНоменклатуры,
	|	ТоварыНаКомиссии.Организация												КАК Организация,
	|	ТоварыНаКомиссии.ВидЗапасов													КАК ВидЗапасов,
	|	ТоварыНаКомиссии.Регистратор												КАК ДокументПоступления,
	|	НЕОПРЕДЕЛЕНО																КАК АналитикаУчетаПартий,
	|	НАЧАЛОПЕРИОДА(ТоварыНаКомиссии.Период, МЕСЯЦ)								КАК Месяц,
	|
	|	ТоварыНаКомиссии.Количество													КАК Количество,
	|	0																			КАК Стоимость,
	|	0																			КАК СтоимостьБезНДС,
	|	0																			КАК СтоимостьРегл,
	|	0																			КАК НДСРегл,
	|
	|	ТоварыНаКомиссии.Количество													КАК ИсходноеКоличество,
	|	0																			КАК ИсходнаяСтоимость,
	|	0																			КАК ИсходнаяСтоимостьБезНДС,
	|	0																			КАК ИсходнаяСтоимостьРегл,
	|	0																			КАК ИсходнаяНДСРегл,
	|
	|	НЕОПРЕДЕЛЕНО																КАК ДокументРеализации,
	|	ТоварыНаКомиссии.НалогообложениеНДС											КАК НалогообложениеНДС,
	|	ИСТИНА																		КАК КомиссионнаяТорговля,
	|	ЛОЖЬ																		КАК ЗаписьВРегистр,
	|	ИСТИНА																		КАК ДокументОстатка,
	|	ТоварыНаКомиссии.ХозяйственнаяОперация										КАК ХозяйственнаяОперация,
	|	НЕОПРЕДЕЛЕНО																КАК СтатьяРасходов,
	|	НЕОПРЕДЕЛЕНО																КАК АналитикаРасходов,
	|
	|	ЛОЖЬ																		КАК ВозможнаКорректировкаНДС,
	|
	|	ЛОЖЬ																		КАК ЕстьДокументПартии,
	|	ТоварыНаКомиссии.МоментВремени												КАК МоментВремени,
	|	ЛОЖЬ																		КАК ПартияПодобрана,
	|	ТоварыНаКомиссии.Номенклатура												КАК Номенклатура,
	|	ТоварыНаКомиссии.Характеристика												КАК Характеристика,
	|	ТоварыНаКомиссии.ДокументРеализации											КАК ДокументПередачиНаКомиссию,
	|	НЕОПРЕДЕЛЕНО																КАК АналитикаУчетаНоменклатурыВПроизводстве,
	|	ТоварыНаКомиссии.ХозяйственнаяОперация										КАК ХозяйственнаяОперацияПартии,
	|	НЕОПРЕДЕЛЕНО																КАК Подразделение,
	|	НЕОПРЕДЕЛЕНО																КАК КорВидЗапасов,
	|	НЕОПРЕДЕЛЕНО																КАК НомерГТД
	|	
	|ИЗ
	|	РегистрНакопления.ТоварыПереданныеНаКомиссию КАК ТоварыНаКомиссии
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ 
	|		МинимальныеНачальныеГраницы КАК Границы
	|	ПО 
	|		(Границы.Период <= ТоварыНаКомиссии.Период)
	|		И (Границы.КонецМесяца >= ТоварыНаКомиссии.Период)
	|		И (Границы.Номенклатура = ТоварыНаКомиссии.Номенклатура)
	|		И (Границы.Характеристика = ТоварыНаКомиссии.Характеристика)
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ 
	|		Последовательность.ПартииТоваровОрганизаций КАК Последовательность
	|	ПО 
	|		(Последовательность.Регистратор = ТоварыНаКомиссии.Регистратор)
	|		И (Последовательность.Номенклатура = ТоварыНаКомиссии.Номенклатура)
	|		И (Последовательность.Характеристика = ТоварыНаКомиссии.Характеристика)
	|
	|ГДЕ
	|	ТоварыНаКомиссии.Активность
	|	И Границы.КомиссионнаяТорговля
	|	И ТоварыНаКомиссии.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|	И ТоварыНаКомиссии.Количество < 0
	|";
	
	Возврат ТекстЗапроса;
	
КонецФункции //ТекстЗапросаСторноПартийТоваровНаКомиссии()

Процедура СформироватьТаблицуКорректировок(МенеджерВременныхТаблиц)

	Запрос = Новый Запрос;
	
	ТекстЗапроса ="
	|ВЫБРАТЬ 
	|
	|	Партии.ДокументПоступления 											КАК Регистратор,
	|
	|	Партии.АналитикаУчетаНоменклатуры									КАК АналитикаУчетаНоменклатуры,
	|	Партии.АналитикаУчетаПартий											КАК АналитикаУчетаПартий,
	|	Партии.ВидЗапасов													КАК ВидЗапасов,
	|
	|	ВЫБОР
	|		КОГДА Партии.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|		ТОГДА Партии.Количество 
	|		ИНАЧЕ -Партии.Количество 
	|	КОНЕЦ 																КАК Количество,
	|	ВЫБОР
	|		КОГДА Партии.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|		ТОГДА Партии.Стоимость 
	|		ИНАЧЕ -Партии.Стоимость 
	|	КОНЕЦ 																КАК Стоимость,
	|	ВЫБОР
	|		КОГДА Партии.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|		ТОГДА Партии.СтоимостьБезНДС 
	|		ИНАЧЕ -Партии.СтоимостьБезНДС 
	|	КОНЕЦ 																КАК СтоимостьБезНДС,
	|	ВЫБОР
	|		КОГДА Партии.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|		ТОГДА Партии.СтоимостьРегл 
	|		ИНАЧЕ -Партии.СтоимостьРегл 
	|	КОНЕЦ 																КАК СтоимостьРегл,
	|	ВЫБОР
	|		КОГДА Партии.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|		ТОГДА Партии.НДСРегл 
	|		ИНАЧЕ -Партии.НДСРегл 
	|	КОНЕЦ 																КАК НДСРегл
	|
	|ПОМЕСТИТЬ ТаблицаКорректировок
	|
	|ИЗ
	|	РегистрНакопления.ПартииТоваровОрганизаций КАК Партии
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ 
	|		МинимальныеНачальныеГраницы КАК Границы
	|	ПО (Границы.Период <= Партии.Период)
	|		И (Границы.КонецМесяца >= Партии.Период)
	|		И (Границы.Номенклатура = Партии.Номенклатура)
	|		И (Границы.Характеристика = Партии.Характеристика)
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ 
	|		Последовательность.ПартииТоваровОрганизаций КАК Последовательность
	|	ПО (Последовательность.Регистратор = Партии.Регистратор)
	|		И (Последовательность.Номенклатура = Партии.Номенклатура)
	|		И (Последовательность.Характеристика = Партии.Характеристика)
	|
	|ГДЕ
	|	Партии.Активность
	|	И ТИПЗНАЧЕНИЯ(Партии.Регистратор) = ТИП(Документ.КорректировкаПоступления)
	|
	|";  
	
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
			
	Запрос.Текст = ТекстЗапроса;
		
	РезультатЗапроса = Запрос.Выполнить();
	
КонецПроцедуры

Функция СуществуютВозвратыПоРеализации(МенеджерВременныхТаблиц)

	ТекстЗапроса ="
	|ВЫБРАТЬ // Возврат номенклатуры другого качества
	|	Документ.Ссылка								КАК Регистратор,
	|	Документ.МоментВремени						КАК МоментВремени,
	|	Документ.Организация						КАК Организация,
	|	Документ.Дата								КАК Период,
	|	Таблица.Номенклатура						КАК Номенклатура,
	|	Таблица.Характеристика						КАК Характеристика,
	|	Документ.Склад								КАК Склад,
	|	Таблица.Количество							КАК Количество,
	|	ВЫБОР
	|		КОГДА Таблица.ВидЗапасовОтгрузки = ЗНАЧЕНИЕ(Справочник.ВидыЗапасов.ПустаяСсылка)
	|		ТОГДА Таблица.ВидЗапасов
	|		ИНАЧЕ Таблица.ВидЗапасовОтгрузки
	|	КОНЕЦ										КАК ВидЗапасов,
	|
	|	Таблица.СкладОтгрузки						КАК СкладОтгрузки,
	|	Таблица.ДокументРеализации					КАК ДокументОтгрузки,
	|	Таблица.ВидЗапасов							КАК ВидЗапасовОтгрузки,
	|	Документ.НалогообложениеНДС					КАК НалогообложениеНДС,
	|	Документ.ХозяйственнаяОперация				КАК ХозяйственнаяОперация,
	|	Аналитика.КлючАналитики						КАК АналитикаНоменклатурыОтгрузки
	|
	|ПОМЕСТИТЬ ТаблицаВозвратов
	|
	|ИЗ
	|	Документ.ВозвратТоваровОтКлиента.ВидыЗапасов КАК Таблица
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Документ.ВозвратТоваровОтКлиента КАК Документ
	|	ПО
	|		Таблица.Ссылка = Документ.Ссылка
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ 
	|		МинимальныеНачальныеГраницы КАК Границы
	|	ПО (Границы.Период				<= Документ.Дата)
	|		И (Границы.КонецМесяца		>= Документ.Дата)
	|		И (Границы.Период			> Таблица.ДокументРеализации.Дата)
	|		И (Границы.Номенклатура		= Таблица.Номенклатура)
	|		И (Границы.Характеристика	= Таблица.Характеристика) 
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Последовательность.ПартииТоваровОрганизаций КАК Последовательность
	|	ПО (Последовательность.Регистратор			= Таблица.Ссылка)
	|		И (Последовательность.Номенклатура		= Таблица.Номенклатура)
	|		И (Последовательность.Характеристика	= Таблица.Характеристика)
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РегистрСведений.АналитикаУчетаНоменклатуры КАК Аналитика
	|	ПО
	|		Таблица.Номенклатура 		= Аналитика.Номенклатура
	|		И Таблица.Характеристика 	= Аналитика.Характеристика
	|		И Таблица.СкладОтгрузки 	= Аналитика.Склад
	|
	|ГДЕ
	|	Таблица.НоменклатураОприходование = ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка)
	|	И Границы.КомиссионнаяТорговля = ЛОЖЬ
	|	И Таблица.ДокументРеализации <> НЕОПРЕДЕЛЕНО
	|";
	
	Запрос							= Новый Запрос;
	Запрос.Текст					= ТекстЗапроса;
	Запрос.МенеджерВременныхТаблиц 	= МенеджерВременныхТаблиц;
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Выборка = РезультатЗапроса.Выбрать();
	Выборка.Следующий();
	
	Возврат НЕ (Выборка.Количество = 0);
	
КонецФункции

Функция ПолучитьТаблицуОстатковПартийРеализаций(МенеджерВременныхТаблиц)
	
	ТекстЗапроса = "
	|ВЫБРАТЬ
	|	Партии.Регистратор												КАК ДокументОтгрузки,
	|	Партии.АналитикаУчетаНоменклатуры								КАК АналитикаНоменклатурыОтгрузки,
	|	Партии.ВидЗапасов												КАК ВидЗапасовОтгрузки,
	|	Партии.АналитикаУчетаПартий										КАК АналитикаУчетаПартий,
	|	Партии.ДокументПоступления										КАК ДокументПоступления,
	|	Партии.ДокументПоступления.Дата									КАК Период,
	|	Партии.ДокументПоступления.МоментВремени						КАК МоментВремени,
	|	Партии.Количество												КАК Количество,
	|	Партии.Стоимость												КАК Стоимость,
	|	Партии.СтоимостьБезНДС											КАК СтоимостьБезНДС,
	|	Партии.СтоимостьРегл											КАК СтоимостьРегл,
	|	Партии.НДСРегл													КАК НДСРегл
	|	
	|ИЗ
	|	ТаблицаВозвратов КАК Таблица
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РегистрНакопления.ПартииТоваровОрганизаций КАК Партии
	|	ПО
	|		Таблица.ДокументОтгрузки							= Партии.Регистратор
	|		И Таблица.АналитикаНоменклатурыОтгрузки				= Партии.АналитикаУчетаНоменклатуры
	|		И Таблица.ВидЗапасовОтгрузки						= Партии.ВидЗапасов
	|";
	
	Запрос 							= Новый Запрос;
	Запрос.Текст 					= ТекстЗапроса;
	Запрос.МенеджерВременныхТаблиц 	= МенеджерВременныхТаблиц;
	
	ТаблицаОстатковПартийРеализаций = Запрос.Выполнить().Выгрузить();
	
	Возврат ТаблицаОстатковПартийРеализаций;
	
КонецФункции

Функция ПолучитьТаблицуАктуальныхЗаписейВозвратов(МенеджерВременныхТаблиц)
	
	ТекстЗапроса = "
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Таблица.Регистратор КАК Регистратор
	|
	|ПОМЕСТИТЬ ВТФильтрПоВозврату
	|
	|ИЗ
	|	ТаблицаВозвратов КАК Таблица
	|;
	|//////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Таблица.Регистратор,
	|	Таблица.Номенклатура,
	|	Таблица.Характеристика
	|
	|ПОМЕСТИТЬ ВТНеактуальныеЗаписи
	|
	|ИЗ
	|	ТаблицаВозвратов КАК Таблица
	|;
	|//////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Партии.ВидДвижения,
	|	Партии.Период,
	|	Партии.Организация,
	|	Партии.Регистратор,
	|	Партии.АналитикаУчетаНоменклатуры,
	|	Партии.ДокументПоступления,
	|	Партии.ВидЗапасов,
	|	Партии.АналитикаУчетаПартий,
	|	Партии.Количество КАК ИсходноеКоличество,
	|	Партии.Стоимость	КАК ИсходнаяСтоимость,
	|	Партии.СтоимостьБезНДС КАК ИсходнаяСтоимостьБезНДС,
	|	Партии.СтоимостьРегл КАК ИсходнаяСтоимостьРегл,
	|	Партии.НДСРегл КАК ИсходнаяНДСРегл,
	|	Партии.Номенклатура,
	|	Партии.Характеристика,
	|	Партии.НалогообложениеНДС,
	|	Партии.ХозяйственнаяОперация,
	|	Ложь КАК КомиссионнаяТорговля,
	|	Партии.МоментВремени
	|ИЗ
	|	РегистрНакопления.ПартииТоваровОрганизаций КАК Партии
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ 
	|		ВТФильтрПоВозврату КАК Фильтр
	|	ПО
	|		Партии.Регистратор = Фильтр.Регистратор
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ 
	|		ВТНеактуальныеЗаписи КАК Таблица
	|	ПО
	|		Таблица.Регистратор 		= Партии.Регистратор
	|		И Таблица.Номенклатура 		= Партии.Номенклатура
	|		И Таблица.Характеристика	= Партии.Характеристика
	|	
	|ГДЕ
	|	Таблица.Номенклатура ЕСТЬ NULL
	|	ИЛИ Партии.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|;
	|////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТНеактуальныеЗаписи
	|";
	
	Запрос							= Новый Запрос;
	Запрос.Текст					= ТекстЗапроса;
	Запрос.МенеджерВременныхТаблиц	= МенеджерВременныхТаблиц;
	
	ТаблицаАктуальныхЗаписейВозвратов = Запрос.Выполнить().Выгрузить();
	
	Возврат ТаблицаАктуальныхЗаписейВозвратов;
	
КонецФункции

Функция ЗапросПоДокументамВозврата(МенеджерВременныхТаблиц)
	
	ТекстЗапроса ="
	|ВЫБРАТЬ
	|	Таблица.Регистратор							КАК Регистратор,
	|	Таблица.Период								КАК Период,
	|	Таблица.Организация							КАК Организация,
	|	Таблица.Номенклатура						КАК Номенклатура,
	|	Таблица.Характеристика						КАК Характеристика,
	|	Таблица.НалогообложениеНДС					КАК НалогообложениеНДС,
	|	Таблица.ХозяйственнаяОперация				КАК ХозяйственнаяОперация,
	|	Таблица.Склад								КАК Склад,
	|	Таблица.Количество							КАК Количество,
	|	Таблица.ВидЗапасов							КАК ВидЗапасов,
	|	Таблица.СкладОтгрузки						КАК СкладОтгрузки,
	|	Таблица.ДокументОтгрузки					КАК ДокументОтгрузки,
	|	Таблица.ВидЗапасовОтгрузки					КАК ВидЗапасовОтгрузки,
	|	Таблица.АналитикаНоменклатурыОтгрузки		КАК АналитикаНоменклатурыОтгрузки,
	|	Аналитика.КлючАналитики						КАК АналитикаУчетаНоменклатуры
	|
	|ИЗ
	|	ТаблицаВозвратов КАК Таблица
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РегистрСведений.АналитикаУчетаНоменклатуры КАК Аналитика
	|	ПО
	|		Таблица.Номенклатура		= Аналитика.Номенклатура
	|		И Таблица.Характеристика	= Аналитика.Характеристика
	|		И Таблица.Склад				= Аналитика.Склад
	|
	|УПОРЯДОЧИТЬ ПО
	|	Таблица.Период УБЫВ
	|";
	
	Запрос							 = Новый Запрос;
	Запрос.Текст					 = ТекстЗапроса;
	Запрос.МенеджерВременныхТаблиц 	 = МенеджерВременныхТаблиц;
	
	Возврат Запрос;
	
КонецФункции

Функция ПолучитьПустуюТаблицуРаспределенныхВозвратовНаПартии()
	
	ТаблицаРаспределенныхВозвратовНаПартии = Новый ТаблицаЗначений;
	
	ТаблицаРаспределенныхВозвратовНаПартии.Колонки.Добавить("Регистратор"				, Документы.ТипВсеСсылки());
	ТаблицаРаспределенныхВозвратовНаПартии.Колонки.Добавить("Период"					, ОбщегоНазначенияУТ.ПолучитьОписаниеТиповДаты(ЧастиДаты.ДатаВремя));
	ТаблицаРаспределенныхВозвратовНаПартии.Колонки.Добавить("ВидДвижения");
	
	ТаблицаРаспределенныхВозвратовНаПартии.Колонки.Добавить("Организация"				, Справочники.ТипВсеСсылки());
	ТаблицаРаспределенныхВозвратовНаПартии.Колонки.Добавить("АналитикаУчетаНоменклатуры", Справочники.ТипВсеСсылки());
	ТаблицаРаспределенныхВозвратовНаПартии.Колонки.Добавить("ДокументПоступления"		, Документы.ТипВсеСсылки());
	ТаблицаРаспределенныхВозвратовНаПартии.Колонки.Добавить("ВидЗапасов"				, Справочники.ТипВсеСсылки());
	ТаблицаРаспределенныхВозвратовНаПартии.Колонки.Добавить("АналитикаУчетаПартий"		, Справочники.ТипВсеСсылки());

	ТаблицаРаспределенныхВозвратовНаПартии.Колонки.Добавить("ИсходноеКоличество"	 , ОбщегоНазначенияУТ.ПолучитьОписаниеТиповЧисла(10,3));
	ТаблицаРаспределенныхВозвратовНаПартии.Колонки.Добавить("ИсходнаяСтоимость"		 , ОбщегоНазначенияУТ.ПолучитьОписаниеТиповЧисла(15,2));
	ТаблицаРаспределенныхВозвратовНаПартии.Колонки.Добавить("ИсходнаяСтоимостьБезНДС", ОбщегоНазначенияУТ.ПолучитьОписаниеТиповЧисла(15,2));
	ТаблицаРаспределенныхВозвратовНаПартии.Колонки.Добавить("ИсходнаяСтоимостьРегл"	 , ОбщегоНазначенияУТ.ПолучитьОписаниеТиповЧисла(15,2));
	ТаблицаРаспределенныхВозвратовНаПартии.Колонки.Добавить("ИсходнаяНДСРегл"		 , ОбщегоНазначенияУТ.ПолучитьОписаниеТиповЧисла(15,2));
	
	ТаблицаРаспределенныхВозвратовНаПартии.Колонки.Добавить("Номенклатура"	, Справочники.ТипВсеСсылки());
	ТаблицаРаспределенныхВозвратовНаПартии.Колонки.Добавить("Характеристика", Справочники.ТипВсеСсылки());
	ТаблицаРаспределенныхВозвратовНаПартии.Колонки.Добавить("НалогообложениеНДС", Перечисления.ТипВсеСсылки());
	ТаблицаРаспределенныхВозвратовНаПартии.Колонки.Добавить("ХозяйственнаяОперация", Перечисления.ТипВсеСсылки());
	
	ТаблицаРаспределенныхВозвратовНаПартии.Колонки.Добавить("ДокументРеализации", Документы.ТипВсеСсылки());
	ТаблицаРаспределенныхВозвратовНаПартии.Колонки.Добавить("КомиссионнаяТорговля");
	ТаблицаРаспределенныхВозвратовНаПартии.Колонки.Добавить("ЗаписьВРегистр");

	Возврат ТаблицаРаспределенныхВозвратовНаПартии;
	
КонецФункции

Функция РаспределитьВозвратыТоваровНаПартииРеализации(МенеджерВременныхТаблиц)
	
	ТаблицаРаспределенныхВозвратовНаПартии		= ПолучитьПустуюТаблицуРаспределенныхВозвратовНаПартии();
	
	// Определяем документы возврата по реализации того же качества и с теми же характеристиками
	Если СуществуютВозвратыПоРеализации(МенеджерВременныхТаблиц) Тогда
		
		ТаблицаОстатков			 = ПолучитьТаблицуОстатковПартийРеализаций(МенеджерВременныхТаблиц);
		ТаблицаАктуальныхЗаписей = ПолучитьТаблицуАктуальныхЗаписейВозвратов(МенеджерВременныхТаблиц);
		
		Запрос = ЗапросПоДокументамВозврата(МенеджерВременныхТаблиц);

		РезультатЗапроса = Запрос.Выполнить();
		
		ВыборкаПоАналитике = РезультатЗапроса.Выбрать();
		
		ОтборОстатков = Новый Структура("ДокументОтгрузки, ВидЗапасовОтгрузки, АналитикаНоменклатурыОтгрузки");
		СтрокаСортировки = "Период Убыв, МоментВремени Убыв";
		
		ТаблицаОстатковПоАналитикеОтсортированная	= ПолучитьПустуюТаблицуОстатковПоАналитикеОтсортированную();
		
		Пока ВыборкаПоАналитике.Следующий() Цикл
		
			ЗаполнитьЗначенияСвойств(ОтборОстатков, ВыборкаПоАналитике);
			СформироватьТаблицуОстатковПоАналитикеОтсортированную(ТаблицаОстатков, ОтборОстатков, ТаблицаОстатковПоАналитикеОтсортированная, СтрокаСортировки);
			
			// Дополнение таблицы остатков актуальными данными
			ЗаполнитьАктуальныеЗаписиПоРегистратору(ТаблицаРаспределенныхВозвратовНаПартии, ТаблицаАктуальныхЗаписей, ВыборкаПоАналитике.Регистратор);
			
			Если ТаблицаОстатковПоАналитикеОтсортированная.Количество() <> 0 Тогда 
				
				КоличествоКРаспределению = ВыборкаПоАналитике.Количество;
				
				Для Каждого СтрокаТЗ Из ТаблицаОстатковПоАналитикеОтсортированная Цикл
					
					СтрокаОстатка = СтрокаТЗ.СтрокаОстатка;
					
					Если КоличествоКРаспределению <= 0 Тогда
						Прервать;
					КонецЕсли;
					
					Если СтрокаОстатка.Количество > 0 Тогда
						
						Если КоличествоКРаспределению >= СтрокаОстатка.Количество Тогда
								
							КоличествоКРаспределению 	= КоличествоКРаспределению - СтрокаОстатка.Количество;
								
							КоличествоКСписанию 		= СтрокаОстатка.Количество;
							СтоимостьКСписанию			= СтрокаОстатка.Стоимость;
							СтоимостьБезНДСКСписанию	= СтрокаОстатка.СтоимостьБезНДС;
							СтоимостьРеглКСписанию		= СтрокаОстатка.СтоимостьРегл;
							НДСРеглКСписанию			= СтрокаОстатка.НДСРегл;
							
							СтрокаОстатка.Количество	= 0;

						ИначеЕсли КоличествоКРаспределению < СтрокаОстатка.Количество Тогда
									
							СтоимостьКСписанию			= Окр((КоличествоКРаспределению * СтрокаОстатка.Стоимость 		/ СтрокаОстатка.Количество),2);
							СтоимостьБезНДСКСписанию	= Окр((КоличествоКРаспределению * СтрокаОстатка.СтоимостьБезНДС / СтрокаОстатка.Количество),2);
							СтоимостьРеглКСписанию		= Окр((КоличествоКРаспределению * СтрокаОстатка.СтоимостьРегл 	/ СтрокаОстатка.Количество),2);
							НДСРеглКСписанию			= Окр((КоличествоКРаспределению * СтрокаОстатка.НДСРегл 		/ СтрокаОстатка.Количество),2);
								
							СтрокаОстатка.Количество	  = СтрокаОстатка.Количество 	  - КоличествоКРаспределению;
							СтрокаОстатка.Стоимость		  = СтрокаОстатка.Стоимость  	  - СтоимостьКСписанию;
							СтрокаОстатка.СтоимостьБезНДС = СтрокаОстатка.СтоимостьБезНДС - СтоимостьБезНДСКСписанию;
							СтрокаОстатка.СтоимостьРегл	  = СтрокаОстатка.СтоимостьРегл	  - СтоимостьРеглКСписанию;
							СтрокаОстатка.НДСРегл		  = СтрокаОстатка.НДСРегл		  - НДСРеглКСписанию;

							КоличествоКСписанию	 		= КоличествоКРаспределению;
							КоличествоКРаспределению 	= 0;

						КонецЕсли;
						
						НоваяЗапись 							= ТаблицаРаспределенныхВозвратовНаПартии.Добавить();
						НоваяЗапись.ВидДвижения					= ВидДвиженияНакопления.Расход;
						НоваяЗапись.Регистратор					= ВыборкаПоАналитике.Регистратор;
						НоваяЗапись.Организация					= ВыборкаПоАналитике.Организация;
						НоваяЗапись.Период						= ВыборкаПоАналитике.Период;
						НоваяЗапись.АналитикаУчетаНоменклатуры 	= ВыборкаПоАналитике.АналитикаУчетаНоменклатуры;
						НоваяЗапись.ДокументПоступления 		= СтрокаОстатка.ДокументПоступления;
						НоваяЗапись.ВидЗапасов					= ВыборкаПоАналитике.ВидЗапасов;
						НоваяЗапись.АналитикаУчетаПартий		= СтрокаОстатка.АналитикаУчетаПартий;
						
						НоваяЗапись.ИсходноеКоличество 		= -КоличествоКСписанию;
						НоваяЗапись.ИсходнаяСтоимость 		= -СтоимостьКСписанию;
						НоваяЗапись.ИсходнаяСтоимостьБезНДС = -СтоимостьБезНДСКСписанию;
						НоваяЗапись.ИсходнаяСтоимостьРегл 	= -СтоимостьРеглКСписанию;
						НоваяЗапись.ИсходнаяНДСРегл 		= -НДСРеглКСписанию;
						
						НоваяЗапись.Номенклатура			= ВыборкаПоАналитике.Номенклатура;
						НоваяЗапись.Характеристика			= ВыборкаПоАналитике.Характеристика;
						НоваяЗапись.НалогообложениеНДС		= ВыборкаПоАналитике.НалогообложениеНДС;
						НоваяЗапись.ХозяйственнаяОперация	= ВыборкаПоАналитике.ХозяйственнаяОперация;
						НоваяЗапись.ДокументРеализации		= ВыборкаПоАналитике.ДокументОтгрузки;
						
						НоваяЗапись.КомиссионнаяТорговля	= Ложь;

						
					КонецЕсли;
					
				КонецЦикла;
				
			КонецЕсли;
			
		КонецЦикла;
		
		СоответствиеСтрокДляУдаления = Новый Соответствие;

		//Запись документов возврата в ИБ
		ВыполнитьЗаписьДокументов(ТаблицаРаспределенныхВозвратовНаПартии, СоответствиеСтрокДляУдаления)

	КонецЕсли;
	
	Возврат ТаблицаРаспределенныхВозвратовНаПартии;
	
КонецФункции

// Функция формирует таблицу остатков по партиям товаров организаций и партиям товаров переданных на комиссию.
//
// Параметры:
//	МенеджерВременныхТаблиц - МенеджерВременныхТаблиц - Менеджер временных таблиц
//
// Возвращаемое значение:
//	ТаблицаЗначений - Таблица остатков по регистрам "Партии товаров организаций" и "Партии товаров переданные на комиссию"
//
Функция ПолучитьТаблицуОстатков(МенеджерВременныхТаблиц, ТаблицаВозвратов)
	
	Запрос = Новый Запрос;
	
	ТекстЗапроса = 
				ТекстЗапросаВозвратовТоваровОтКлиента()
				+ "ОБЪЕДИНИТЬ ВСЕ" + ТекстЗапросаОстаткиПартийТоваров() 
				+ "ОБЪЕДИНИТЬ ВСЕ" + ТекстЗапросаПриходныеДвиженияТоваровОрганизаций()
				+ "ОБЪЕДИНИТЬ ВСЕ" + ТекстЗапросаПоступленияПартийТоваров()
				+ "ОБЪЕДИНИТЬ ВСЕ" + ТекстЗапросаВозвратовПартийТоваров()
				+ "ОБЪЕДИНИТЬ ВСЕ" + ТекстЗапросаВозвратовПартийТоваровПоРеализации()
				+ "ОБЪЕДИНИТЬ ВСЕ" + ТекстЗапросаОстаткиПартийТоваровНаКомиссии()
				+ "ОБЪЕДИНИТЬ ВСЕ" + ТекстЗапросаПоступленияПартийТоваровНаКомиссии()
				+ "ОБЪЕДИНИТЬ ВСЕ" + ТекстЗапросаСторноПартийТоваровНаКомиссии()
				;
				
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
			
	Запрос.Текст = ТекстЗапроса;
	Запрос.УстановитьПараметр("ТаблицаВозвратов", ТаблицаВозвратов);
		
	РезультатЗапроса = Запрос.Выполнить();
	ТаблицаРасчетов = РезультатЗапроса.Выгрузить();
	
	Индексы = ТаблицаРасчетов.Индексы;
	Индексы.Добавить("
	|АналитикаУчетаНоменклатуры");
	
	Возврат ТаблицаРасчетов;
	
КонецФункции // ПолучитьТаблицуОстатковПартииТоваровОрганизаций()

Функция ТекстЗапросаФильтрЗаписей()
	
	ТекстЗапроса = "
	|ВЫБРАТЬ РАЗЛИЧНЫЕ 
	|	Таблица.Регистратор,
	|	Таблица.Номенклатура,
	|	Таблица.Характеристика
	|
	|ПОМЕСТИТЬ ВТНеактуальныеТовары
	|
	|ИЗ ВтТовары КАК Таблица
	|;
	|/////////////////////////////////////////////
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Таблица.Регистратор
	|
	|ПОМЕСТИТЬ ВТФильтрПоРегистратору
	|
	|ИЗ ВТНеактуальныеТовары КАК Таблица
	|;
	|////////////////////////////////////////////
	|";
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаАктуальныхЗаписей()
	
	ТекстЗапроса ="
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Партии.Регистратор,
	|	Партии.АналитикаУчетаНоменклатуры,
	|	Партии.ВидЗапасов
	|
	|ПОМЕСТИТЬ ТаблицаАктуальныхЗаписей
	|
	|ИЗ
	|	РегистрНакопления.ПартииТоваровОрганизаций КАК Партии
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		ВТФильтрПоРегистратору КАК Фильтр
	|	ПО
	|		Фильтр.Регистратор = Партии.Регистратор
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ 
	|		ВТНеактуальныеТовары КАК Таблица
	|	ПО
	|		Партии.Регистратор		= Таблица.Регистратор
	|		И Партии.Номенклатура	= Таблица.Номенклатура
	|		И Партии.Характеристика = Таблица.Характеристика
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		РегистрНакопления.ТоварыОрганизаций КАК Товары
	|	ПО
	|		Партии.Регистратор		= Товары.Регистратор
	|		И Партии.Номенклатура	= Товары.Номенклатура
	|		И Партии.Характеристика = Товары.Характеристика
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		МинимальныеНачальныеГраницы КАК ФильтрГраницы
	|	ПО
	|		Партии.Номенклатура		= ФильтрГраницы.Номенклатура
	|		И Партии.Характеристика = ФильтрГраницы.Характеристика
	|		И ЛОЖЬ					= ФильтрГраницы.КомиссионнаяТорговля
	|ГДЕ
	|	Таблица.Номенклатура ЕСТЬ NULL
	|	И ФильтрГраницы.Номенклатура ЕСТЬ NULL
	|	И Партии.Количество <> 0
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Партии.Регистратор,
	|	Партии.АналитикаУчетаНоменклатуры,
	|	Партии.ВидЗапасов
	|
	|ИЗ
	|	РегистрНакопления.ПартииТоваровПереданныеНаКомиссию КАК Партии
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		ВТФильтрПоРегистратору КАК Фильтр
	|	ПО
	|		Фильтр.Регистратор = Партии.Регистратор
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ 
	|		ВТНеактуальныеТовары КАК Таблица
	|	ПО
	|		Партии.Регистратор		= Таблица.Регистратор
	|		И Партии.Номенклатура	= Таблица.Номенклатура
	|		И Партии.Характеристика = Таблица.Характеристика
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		РегистрНакопления.ТоварыПереданныеНаКомиссию КАК ТоварыНаКомиссии
	|	ПО
	|		Партии.Регистратор		= ТоварыНаКомиссии.Регистратор
	|		И Партии.Номенклатура	= ТоварыНаКомиссии.Номенклатура
	|		И Партии.Характеристика = ТоварыНаКомиссии.Характеристика
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		МинимальныеНачальныеГраницы КАК ФильтрГраницы
	|	ПО
	|		Партии.Номенклатура		= ФильтрГраницы.Номенклатура
	|		И Партии.Характеристика = ФильтрГраницы.Характеристика
	|		И ИСТИНА				= ФильтрГраницы.КомиссионнаяТорговля
	|
	|ГДЕ
	|	Таблица.Номенклатура ЕСТЬ NULL
	|	И ФильтрГраницы.Номенклатура ЕСТЬ NULL
	|	И Партии.Количество <> 0
	|
	|;
	|/////////////////////////////////////////////////
	|";
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаАктуальныхПартий()
	
	ТекстЗапроса ="
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Партии.Период,
	|	Партии.Регистратор,
	|	Партии.ВидДвижения,
	|	Партии.Организация,
	|	Партии.АналитикаУчетаНоменклатуры,
	|	Партии.ДокументПоступления,
	|	Партии.ВидЗапасов,
	|	Партии.АналитикаУчетаПартий,
	|	Партии.Количество,
	|	Партии.Стоимость,
	|	Партии.СтоимостьБезНДС,
	|	Партии.СтоимостьРегл,
	|	Партии.НДСРегл,
	|	Партии.Количество			КАК ИсходноеКоличество,
	|	Партии.Стоимость			КАК ИсходнаяСтоимость,
	|	Партии.СтоимостьБезНДС 		КАК ИсходнаяСтоимостьБезНДС,
	|	Партии.СтоимостьРегл 		КАК ИсходнаяСтоимостьРегл,
	|	Партии.НДСРегл 				КАК ИсходнаяНДСРегл,
	|	Партии.Номенклатура,
	|	Партии.Характеристика,
	|	Партии.НалогообложениеНДС,
	|	Партии.ХозяйственнаяОперация,
	|	ЛОЖЬ  КАК КомиссионнаяТорговля,
	|	ИСТИНА КАК ЗаписьВРегистр	
	|
	|ИЗ
	|	РегистрНакопления.ПартииТоваровОрганизаций КАК Партии
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		ТаблицаАктуальныхЗаписей КАК Таблица
	|	ПО
	|		Таблица.Регистратор = Партии.Регистратор
	|		И Таблица.АналитикаУчетаНоменклатуры = Партии.АналитикаУчетаНоменклатуры
	|		И Таблица.ВидЗапасов = Партии.ВидЗапасов
	|
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Партии.Период,
	|	Партии.Регистратор,
	|	Партии.ВидДвижения,
	|	Партии.Организация,
	|	Партии.АналитикаУчетаНоменклатуры,
	|	Партии.ДокументПоступления,
	|	Партии.ВидЗапасов,
	|	Партии.АналитикаУчетаПартий,
	|	Партии.Количество,
	|	Партии.Стоимость,
	|	Партии.СтоимостьБезНДС,
	|	Партии.СтоимостьРегл,
	|	Партии.НДСРегл,
	|	Партии.Количество,
	|	Партии.Стоимость,
	|	Партии.СтоимостьБезНДС,
	|	Партии.СтоимостьРегл,
	|	Партии.НДСРегл,
	|	Партии.Номенклатура,
	|	Партии.Характеристика,
	|	Партии.НалогообложениеНДС,
	|	Партии.ХозяйственнаяОперация,
	|	ИСТИНА,
	|	ИСТИНА КАК ЗаписьВРегистр
	|
	|ИЗ
	|	РегистрНакопления.ПартииТоваровПереданныеНаКомиссию КАК Партии
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		ТаблицаАктуальныхЗаписей КАК Таблица
	|	ПО
	|		Таблица.Регистратор = Партии.Регистратор
	|		И Таблица.АналитикаУчетаНоменклатуры = Партии.АналитикаУчетаНоменклатуры
	|		И Таблица.ВидЗапасов = Партии.ВидЗапасов
	|
	|;
	|//////////////////////////////////////////////
	|";
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаУничтожениеВТ()
	
	ТекстЗапроса ="
	|УНИЧТОЖИТЬ ВТНеактуальныеТовары
	|
	|;
	|//////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТФильтрПоРегистратору
	|";

КонецФункции

// Функция формирует таблицу актуальных записей по документам, по аналитикам которых нарушена актуальность. 
// Для сохранения актуальности по остальным аналитикам учета номенклатуры
Функция ПолучитьТаблицуАктуальныхЗаписей(МенеджерВременныхТаблиц)
	
	ТекстЗапроса = ТекстЗапросаФильтрЗаписей()
		+ ТекстЗапросаАктуальныхЗаписей()
		+ ТекстЗапросаАктуальныхПартий()
		+ ТекстЗапросаУничтожениеВТ()
		;
		
	Запрос = Новый Запрос;
	Запрос.Текст = ТекстЗапроса;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	
	ТаблицаАктуальныхЗаписей = Запрос.Выполнить().Выгрузить();
	
	ТаблицаАктуальныхЗаписей.Индексы.Добавить("Регистратор, Организация, ВидЗапасов, АналитикаУчетаНоменклатуры");
	
	Возврат ТаблицаАктуальныхЗаписей;
	
КонецФункции

Процедура СчитатьГраницыАктуальныхПартий(МенеджерВременныхТаблиц)
	
	Запрос = Новый Запрос("
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Последовательность.Период,
	|	Последовательность.Номенклатура,
	|	Последовательность.Характеристика
	|
	|ПОМЕСТИТЬ ГраницыАктуальныхЗаписей
	|
	|ИЗ
	|	Последовательность.ПартииТоваровОрганизаций.Границы КАК Последовательность
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		ТаблицаАктуальныхЗаписей КАК Таблица
	|	ПО
	|		Последовательность.Номенклатура = Таблица.АналитикаУчетаНоменклатуры.Номенклатура
	|		И Последовательность.Характеристика = Таблица.АналитикаУчетаНоменклатуры.Характеристика
	|");
	
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.Выполнить();
	
КонецПроцедуры

Функция ЗапросПоРегистрамТоваров(МенеджерВременныхТаблиц)
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ТоварыОрганизаций.НомерСтроки 					КАК НомерСтроки,
	|	ТоварыОрганизаций.Регистратор 					КАК Регистратор,
	|	ТоварыОрганизаций.ВидДвижения 					КАК ВидДвижения,
	|	ТоварыОрганизаций.Организация 					КАК Организация,
	|	ТоварыОрганизаций.АналитикаУчетаНоменклатуры	КАК АналитикаУчетаНоменклатуры,
	|	ТоварыОрганизаций.Количество 					КАК Количество,
	|	ТоварыОрганизаций.Период 						КАК Период,
	|	ТоварыОрганизаций.Номенклатура					КАК Номенклатура,
	|	ТоварыОрганизаций.Характеристика				КАК Характеристика,
	|	1 												КАК Порядок,
	|	ЛОЖЬ 											КАК КомиссионнаяТорговля,
	|	ТоварыОрганизаций.ХозяйственнаяОперация 		КАК ХозяйственнаяОперация,
	|	ТоварыОрганизаций.НалогообложениеНДС			КАК НалогообложениеНДС,
	|	ТоварыОрганизаций.СтатьяРасходов				КАК СтатьяРасходов,
	|	ТоварыОрганизаций.АналитикаРасходов				КАК АналитикаРасходов, 
	|	ТоварыОрганизаций.НомерГТД						КАК НомерГТД,
	|
	|	0 												КАК Стоимость,
	|	0 												КАК СтоимостьБезНДС,
	|	0 												КАК СтоимостьРегл,
	|	0 												КАК НДСРегл,
	|
	|	ЛОЖЬ 											КАК ЕстьСчетФактура,
	|	ЗНАЧЕНИЕ(Справочник.КлючиАналитикиУчетаНоменклатуры.ПустаяСсылка) КАК ПолеАналитикаУчетаНоменклатуры,
	|	ТоварыОрганизаций.ВидЗапасов					КАК ВидЗапасов,
	|	ТоварыОрганизаций.КорВидЗапасов					КАК КорВидЗапасов,
	|	ВЫБОР
	|		КОГДА ТоварыОрганизаций.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПередачаВПроизводство)
	|				ИЛИ ТоварыОрганизаций.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СписаниеТоваровПоТребованию)
	|			ТОГДА ТоварыОрганизаций.Регистратор.Подразделение
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ 											КАК Подразделение,
	|	ТоварыОрганизаций.МоментВремени
	|
	|ПОМЕСТИТЬ ВтТовары
	|
	|ИЗ
	|	Последовательность.ПартииТоваровОрганизаций КАК Последовательность
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ 
	|			МинимальныеНачальныеГраницы КАК Границы
	|		ПО 
	|			Последовательность.Период >= Границы.Период
	|			И (Последовательность.Период <= Границы.КонецМесяца) 
	|			И Последовательность.Номенклатура = Границы.Номенклатура
	|			И Последовательность.Характеристика = Границы.Характеристика
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ 
	|			РегистрНакопления.ТоварыОрганизаций КАК ТоварыОрганизаций
	|		ПО 
	|			(ТоварыОрганизаций.Регистратор = Последовательность.Регистратор)
	|			И (ТоварыОрганизаций.Активность)
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ 
	|			МинимальныеНачальныеГраницы КАК ФильтрНачальныеГраницыПоАналитике
	|		ПО 
	|			(ТоварыОрганизаций.Номенклатура = ФильтрНачальныеГраницыПоАналитике.Номенклатура)
	|			И (ТоварыОрганизаций.Характеристика = ФильтрНачальныеГраницыПоАналитике.Характеристика)
	|ГДЕ
	|	Последовательность.Номенклатура = ТоварыОрганизаций.Номенклатура
	|	И Последовательность.Характеристика = ТоварыОрганизаций.Характеристика
	|	И ТоварыОрганизаций.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|	И ТИПЗНАЧЕНИЯ(ТоварыОрганизаций.Регистратор) <> ТИП(Документ.ВозвратТоваровОтКлиента)
	|	И ТИПЗНАЧЕНИЯ(ТоварыОрганизаций.Регистратор) <> ТИП(Документ.КорректировкаПоступления)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ТоварыПереданныеНаКомиссию.НомерСтроки,
	|	ТоварыПереданныеНаКомиссию.Регистратор,
	|	ТоварыПереданныеНаКомиссию.ВидДвижения,
	|	ТоварыПереданныеНаКомиссию.Организация,
	|	ТоварыПереданныеНаКомиссию.АналитикаУчетаНоменклатуры,
	|	ТоварыПереданныеНаКомиссию.Количество,
	|	ТоварыПереданныеНаКомиссию.Период,
	|	ТоварыПереданныеНаКомиссию.Номенклатура,
	|	ТоварыПереданныеНаКомиссию.Характеристика,
	|	2,
	|	ИСТИНА,
	|	ТоварыПереданныеНаКомиссию.ХозяйственнаяОперация,
	|	ТоварыПереданныеНаКомиссию.НалогообложениеНДС,
	|	НЕОПРЕДЕЛЕНО,
	|	НЕОПРЕДЕЛЕНО,
	|	ТоварыПереданныеНаКомиссию.НомерГТД,
	|
	|	0,
	|	0,
	|	0,
	|	0,
	|
	|	ЛОЖЬ,
	|	ЗНАЧЕНИЕ(Справочник.КлючиАналитикиУчетаНоменклатуры.ПустаяСсылка),
	|	ТоварыПереданныеНаКомиссию.ВидЗапасов,
	|	НЕОПРЕДЕЛЕНО,
	|	НЕОПРЕДЕЛЕНО,
	|	ТоварыПереданныеНаКомиссию.МоментВремени
	|
	|ИЗ
	|	Последовательность.ПартииТоваровОрганизаций КАК Последовательность
	|
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ 
	|			МинимальныеНачальныеГраницы КАК Границы
	|		ПО 
	|			Последовательность.Период >= Границы.Период
	|			И (Последовательность.Период <= Границы.КонецМесяца) 
	|			И Последовательность.Номенклатура = Границы.Номенклатура
	|			И Последовательность.Характеристика = Границы.Характеристика
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ 
	|			РегистрНакопления.ТоварыПереданныеНаКомиссию КАК ТоварыПереданныеНаКомиссию
	|		ПО 
	|			(ТоварыПереданныеНаКомиссию.Регистратор = Последовательность.Регистратор)
	|			И (ТоварыПереданныеНаКомиссию.Активность)
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ 
	|			МинимальныеНачальныеГраницы КАК ФильтрНачальныеГраницыПоАналитике
	|		ПО 
	|			(ТоварыПереданныеНаКомиссию.Номенклатура = ФильтрНачальныеГраницыПоАналитике.Номенклатура)
	|			И (ТоварыПереданныеНаКомиссию.Характеристика = ФильтрНачальныеГраницыПоАналитике.Характеристика)
	|ГДЕ
	|	Последовательность.Номенклатура 			= ТоварыПереданныеНаКомиссию.АналитикаУчетаНоменклатуры.Номенклатура
	|	И Последовательность.Характеристика 		= ТоварыПереданныеНаКомиссию.АналитикаУчетаНоменклатуры.Характеристика
	|	И ТоварыПереданныеНаКомиссию.ВидДвижения 	= ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВтТовары.НомерСтроки,
	|	ВтТовары.Регистратор 								КАК Регистратор,
	|	ВтТовары.ВидДвижения,
	|	ВтТовары.Организация,
	|	ВтТовары.АналитикаУчетаНоменклатуры,
	|	МАКСИМУМ(ВтТовары.Количество) 						КАК Количество,
	|	ВтТовары.Период 									КАК Период,
	|	МАКСИМУМ(ВтТовары.Порядок) 							КАК Порядок,
	|	МАКСИМУМ(ВтТовары.КомиссионнаяТорговля) 			КАК КомиссионнаяТорговля,
	|	ВтТовары.ХозяйственнаяОперация,
	|	ВтТовары.НалогообложениеНДС,
	|	ВтТовары.СтатьяРасходов,
	|	ВтТовары.АналитикаРасходов,
	|	ВтТовары.Стоимость,
	|	ВтТовары.СтоимостьБезНДС,
	|	ВтТовары.СтоимостьРегл,
	|	ВтТовары.НДСРегл,
	|	ВтТовары.НомерГТД,
	|	ВтТовары.ЕстьСчетФактура,
	|	ВтТовары.ПолеАналитикаУчетаНоменклатуры,
	|	ВтТовары.ВидЗапасов,
	|	ВтТовары.КорВидЗапасов,
	|	КлючиАналитики.КлючАналитики 						КАК АналитикаУчетаНоменклатурыВПроизводстве,
	|	ВтТовары.Номенклатура 								КАК Номенклатура,
	|	ВтТовары.Характеристика 							КАК Характеристика,
	|	ВтТовары.Подразделение 								КАК Подразделение,
	|	ВтТовары.МоментВремени 								КАК МоментВремени
	|ИЗ
	|	ВтТовары КАК ВтТовары
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ 
	|			РегистрСведений.АналитикаУчетаНоменклатуры КАК КлючиАналитики
	|		ПО 
	|			ВтТовары.АналитикаУчетаНоменклатуры.Номенклатура 		= КлючиАналитики.Номенклатура
	|			И ВтТовары.АналитикаУчетаНоменклатуры.Характеристика 	= КлючиАналитики.Характеристика
	|			И ВтТовары.Подразделение								= КлючиАналитики.Склад
	|
	|СГРУППИРОВАТЬ ПО
	|	ВтТовары.АналитикаУчетаНоменклатуры,
	|	ВтТовары.Регистратор,
	|	ВтТовары.ВидДвижения,
	|	ВтТовары.Организация,
	|	ВтТовары.Период,
	|	ВтТовары.НомерСтроки,
	|	ВтТовары.ХозяйственнаяОперация,
	|	ВтТовары.НалогообложениеНДС,
	|	ВтТовары.СтатьяРасходов,
	|	ВтТовары.АналитикаРасходов,
	|	ВтТовары.Стоимость,
	|	ВтТовары.СтоимостьБезНДС,
	|	ВтТовары.СтоимостьРегл,
	|	ВтТовары.НДСРегл,
	|	ВтТовары.НомерГТД,
	|	ВтТовары.ЕстьСчетФактура,
	|	ВтТовары.ПолеАналитикаУчетаНоменклатуры,
	|	ВтТовары.ВидЗапасов,
	|	ВтТовары.КорВидЗапасов,
	|	КлючиАналитики.КлючАналитики,
	|	ВтТовары.Номенклатура,
	|	ВтТовары.Характеристика,
	|	ВтТовары.Подразделение, 	
	|	ВтТовары.МоментВремени
	|
	|УПОРЯДОЧИТЬ ПО
	|	Период,
	|	Порядок,
	|	Регистратор.Дата
	|
	|ИТОГИ ПО
	|	Регистратор"; 
	
	Запрос = Новый Запрос;
	Запрос.Текст = ТекстЗапроса;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
		
	Возврат Запрос;
	
КонецФункции // ЗапросПоРегистрамТоваров()

Функция СформироватьНовуюАналитикуУчетаПартий(АналитикаУчетаПартий, НалогообложениеНДС)
	
	Запрос = Новый Запрос("
	|ВЫБРАТЬ
	|	&НалогообложениеНДС КАК НалогообложениеНДС,
	|	КлючиАналитикиУчетаПартий.Ссылка,
	|	КлючиАналитикиУчетаПартий.ГруппаФинансовогоУчета,
	|	КлючиАналитикиУчетаПартий.Поставщик,
	|	КлючиАналитикиУчетаПартий.Контрагент,
	|	КлючиАналитикиУчетаПартий.СтавкаНДС
	|
	|ПОМЕСТИТЬ ВТКлючиАналитикиУчетаПартий
	|ИЗ
	|	Справочник.КлючиАналитикиУчетаПартий КАК КлючиАналитикиУчетаПартий
	|ГДЕ
	|	КлючиАналитикиУчетаПартий.Ссылка = &Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	АналитикаУчетаПартий.КлючАналитики КАК АналитикаУчетаПартий,
	|	ВТКлючиАналитикиУчетаПартий.НалогообложениеНДС,
	|	ВТКлючиАналитикиУчетаПартий.ГруппаФинансовогоУчета,
	|	ВТКлючиАналитикиУчетаПартий.Поставщик,
	|	ВТКлючиАналитикиУчетаПартий.Контрагент,
	|	ВТКлючиАналитикиУчетаПартий.СтавкаНДС
	|ИЗ
	|	ВТКлючиАналитикиУчетаПартий КАК ВТКлючиАналитикиУчетаПартий
	|
	|ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаПартий КАК АналитикаУчетаПартий
	|ПО ВТКлючиАналитикиУчетаПартий.Поставщик 				= АналитикаУчетаПартий.Поставщик
	|	И ВТКлючиАналитикиУчетаПартий.НалогообложениеНДС 	= АналитикаУчетаПартий.НалогообложениеНДС
	|	И ВТКлючиАналитикиУчетаПартий.Контрагент 			= АналитикаУчетаПартий.Контрагент
	|	И ВТКлючиАналитикиУчетаПартий.СтавкаНДС 			= АналитикаУчетаПартий.СтавкаНДС
	|	И ВТКлючиАналитикиУчетаПартий.ГруппаФинансовогоУчета = АналитикаУчетаПартий.ГруппаФинансовогоУчета
	|");

	
	Запрос.УстановитьПараметр("Ссылка", 			АналитикаУчетаПартий); 
	Запрос.УстановитьПараметр("НалогообложениеНДС", НалогообложениеНДС);
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
	
		Если ЗначениеЗаполнено(Выборка.АналитикаУчетаПартий) Тогда
			АналитикаУчетаПартий = Выборка.АналитикаУчетаПартий;
		Иначе
			АналитикаУчетаПартий = Справочники.КлючиАналитикиУчетаПартий.КлючиАналитикиУчетаПартийДокумента(Выборка);
		КонецЕсли;

	КонецЦикла;
	
	Возврат АналитикаУчетаПартий;
	
КонецФункции

Функция СформироватьОтборОстатков()
	
	ОтборОстатков = Новый Структура("Организация, АналитикаУчетаНоменклатуры, КомиссионнаяТорговля, ВидЗапасов, ДокументОстатка");
	ОтборОстатков.ДокументОстатка = Истина;
	
	Возврат ОтборОстатков;
	
КонецФункции

Функция СформироватьОтборПартийПоРегистратору()
	
	ОтборОстатков = Новый Структура("Организация, АналитикаУчетаНоменклатуры, КомиссионнаяТорговля, ВидЗапасов, ДокументПоступления");
	
	Возврат ОтборОстатков;
	
КонецФункции

Функция СформироватьОтборДокументовРасхода()
	
	ОтборДокументовРасхода = Новый Структура("Организация, АналитикаУчетаНоменклатуры, КомиссионнаяТорговля, ВидЗапасов, ДокументПоступления");
	
	Возврат ОтборДокументовРасхода;
	
КонецФункции

Процедура ЗаполнитьАктуальныеЗаписиПоРегистратору(ТаблицаОстатков, АктуальныеЗаписи, Регистратор, ЗаписьВРегистр = Ложь )
	
	МассивАктуальныхСтрок = АктуальныеЗаписи.НайтиСтроки(Новый Структура("Регистратор", Регистратор));
	Для Каждого АктуальнаяЗапись Из МассивАктуальныхСтрок Цикл
		ЗаписьНабора = ТаблицаОстатков.Добавить();		
		ЗаполнитьЗначенияСвойств(ЗаписьНабора, АктуальнаяЗапись);
		ЗаписьНабора.ЗаписьВРегистр = Истина;
	КонецЦикла;
	
КонецПроцедуры

Функция СформироватьОтборПоНДС(ЭтоВыпускПродукции,Стоимость, НДС)
	
	Отбор = Новый Структура;	
	Отбор.Вставить("ЭтоВыпускПродукции" ,	ЭтоВыпускПродукции);
	Отбор.Вставить("СуммаБезНДС"		,	-Стоимость);
	Отбор.Вставить("НДС"				,	-НДС);
	
	Возврат Отбор;
	
КонецФункции

Функция ПроверитьПартию(ДокументПартии, Регистратор, ЕстьДокументПартии, ДокументОстатка)
	
	Если Не ЗначениеЗаполнено(ДокументПартии) Тогда
		ЭтоДокументПартии = Ложь;
	ИначеЕсли ДокументПартии = Регистратор Тогда
		ЭтоДокументПартии = Ложь;
	ИначеЕсли ТипЗнч(ДокументПартии) = Тип("ДокументСсылка.ВводОстатков")
		ИЛИ ТипЗнч(ДокументПартии) = Тип("ДокументСсылка.ОприходованиеИзлишковТоваров")
		ИЛИ ТипЗнч(ДокументПартии) = Тип("ДокументСсылка.ПорчаТоваров")
		ИЛИ ТипЗнч(ДокументПартии) = Тип("ДокументСсылка.ПоступлениеТоваровУслуг")
		ИЛИ ТипЗнч(ДокументПартии) = Тип("ДокументСсылка.ПрочееОприходованиеТоваров")
		ИЛИ ТипЗнч(ДокументПартии) = Тип("ДокументСсылка.ТаможеннаяДекларацияИмпорт")
	Тогда
		ЭтоДокументПартии = Истина;
	ИначеЕсли (ТипЗнч(ДокументПартии) = Тип("ДокументСсылка.ВозвратТоваровМеждуОрганизациями")
		ИЛИ ТипЗнч(ДокументПартии) = Тип("ДокументСсылка.ВозвратТоваровОтКлиента")
		ИЛИ ТипЗнч(ДокументПартии) = Тип("ДокументСсылка.ПередачаТоваровМеждуОрганизациями")
		) И (ЕстьДокументПартии ИЛИ ДокументОстатка)
	Тогда
		ЭтоДокументПартии = Истина;
	Иначе
		ЭтоДокументПартии = Ложь;
	КонецЕсли;
	
	Возврат ЭтоДокументПартии;	
	
КонецФункции

Процедура ВыполнитьКорректировкуНДС(Параметры)
	
	ТекущийДокумент = Параметры.ТекущийДокумент;
	СтрокаОстатка 	= Параметры.СтрокаОстатка;
	ТаблицаОстатков	= Параметры.ТаблицаОстатков;
		
	Если СтрокаОстатка.ВозможнаКорректировкаНДС Тогда
		
		Если ТекущийДокумент.НалогообложениеНДС <> СтрокаОстатка.НалогообложениеНДС 
			И НЕ ТекущийДокумент.НалогообложениеНДС.Пустая()
		Тогда
			Отбор = СформироватьОтборПоНДС(Ложь, Параметры.СтоимостьРеглКСписанию, Параметры.НДСРеглКСписанию);
			ДобавитьЗаписьВТаблицуДвиженийДляНДС(Параметры.ТаблицаДляДвиженийНДС, ТекущийДокумент, СтрокаОстатка, Отбор);
		КонецЕсли;
								
	ИначеЕсли ТипЗнч(СтрокаОстатка.ДокументПоступления) = Тип("ДокументСсылка.СборкаТоваров") 
			Тогда
				Отбор = СформироватьОтборПоНДС(Истина, Параметры.СтоимостьРеглКСписанию, Параметры.НДСРеглКСписанию);
				ДобавитьЗаписьВТаблицуДвиженийДляНДС (Параметры.ТаблицаДляДвиженийНДС, ТекущийДокумент, СтрокаОстатка, Отбор);	
	КонецЕсли; 
	
КонецПроцедуры

Процедура ВыполнитьКорректировкуДокументов(Параметры)
	
	ТекущийДокумент = Параметры.ТекущийДокумент;
	ТаблицаОстатков	= Параметры.ТаблицаОстатков;
	СтрокаОстатка	= Параметры.СтрокаОстатка;
	ПартияПодобрана	= Параметры.ПартияПодобрана;
	
	РаспределениеПартий = Параметры.РаспределениеПартий;
	Если РаспределениеПартий Тогда
		ТаблицаРаспределения = Параметры.ТаблицаРаспределения;
	КонецЕсли;
	
	
	КоличествоКСписанию 	 = Параметры.КоличествоКСписанию;
	СтоимостьКСписанию 		 = Параметры.СтоимостьКСписанию;
	СтоимостьБезНДСКСписанию = Параметры.СтоимостьБезНДСКСписанию;
	СтоимостьРеглКСписанию	 = Параметры.СтоимостьРеглКСписанию;
	НДСРеглКСписанию 		 = Параметры.НДСРеглКСписанию;
	
	// Указание партий для документов возврата по данному документу реализации
	Если ТекущийДокумент.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.РеализацияКлиенту
		 ИЛИ ТипЗнч(ТекущийДокумент.Регистратор) = Тип("ДокументСсылка.ОтчетОРозничныхПродажах") Тогда

		Отбор = Новый Структура;
		Отбор.Вставить("ДокументРеализации"	, ТекущийДокумент.Регистратор);
		Отбор.Вставить("ЗаписьВРегистр"		, Ложь);
		
		МассивДокументовВозвратаПоРеализации = ТаблицаОстатков.НайтиСтроки(Отбор);
		Для Каждого ДокументВозврата Из МассивДокументовВозвратаПоРеализации Цикл
			
			ДокументВозврата.ЗаписьВРегистр 			= Истина;
			ДокументВозврата.ПартияПодобрана 			= ПартияПодобрана;
			
			Если ПартияПодобрана Тогда
				ДокументВозврата.ДокументПоступления 		= СтрокаОстатка.ДокументПоступления; 
				ДокументВозврата.АналитикаУчетаПартий 		= СтрокаОстатка.АналитикаУчетаПартий;
				
				ДокументВозврата.Стоимость		 = Окр((ДокументВозврата.Количество * Параметры.Стоимость 		/ Параметры.Количество),2);
				ДокументВозврата.СтоимостьБезНДС = Окр((ДокументВозврата.Количество * Параметры.СтоимостьБезНДС / Параметры.Количество),2);
				ДокументВозврата.СтоимостьРегл	 = Окр((ДокументВозврата.Количество * Параметры.СтоимостьРегл 	/ Параметры.Количество),2);
				ДокументВозврата.НДСРегл		 = Окр((ДокументВозврата.Количество * Параметры.НДСРегл 		/ Параметры.Количество),2);
				
				ДокументВозврата.ИсходнаяСтоимость			= -ДокументВозврата.Стоимость;
				ДокументВозврата.ИсходнаяСтоимостьБезНДС	= -ДокументВозврата.СтоимостьБезНДС;
				ДокументВозврата.ИсходнаяСтоимостьРегл		= -ДокументВозврата.СтоимостьРегл;
				ДокументВозврата.ИсходнаяНДСРегл			= -ДокументВозврата.НДСРегл;
			КонецЕсли;
			
			ОтборПоТекущемуВозврату = Новый Структура;
			ОтборПоТекущемуВозврату.Вставить("Регистратор", ДокументВозврата.Регистратор);
			МассивДвижений = ТаблицаОстатков.НайтиСтроки(ОтборПоТекущемуВозврату);
			Для Каждого ТекДвижение Из МассивДвижений Цикл
				 ТекДвижение.ЗаписьВРегистр = Истина;
			КонецЦикла;
			
		КонецЦикла;	
		
		Если ПартияПодобрана Тогда
			// Формирование таблицы для отражения реализации произведенной продукции
			Если (ТипЗнч(СтрокаОстатка.ДокументПоступления) = Тип("ДокументСсылка.СборкаТоваров")
			 	)
			Тогда
				ДобавитьЗаписьВТаблицуРеализацииВыпущеннойПродукции (Параметры.ТаблицаРеализацияВыпущеннойПродукции, ТекущийДокумент, СтрокаОстатка.ДокументПоступления, ложь);	
			КонецЕсли;
		КонецЕсли;
							
	// Указание партий для документов перемещения, передачи на комиссию по данному регистратору
	ИначеЕсли ТекущийДокумент.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ПеремещениеТоваров 
		 ИЛИ ТекущийДокумент.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ПередачаНаКомиссиюВДругуюОрганизацию 
		 ИЛИ ТекущийДокумент.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.РеализацияТоваровВДругуюОрганизацию Тогда

		// Поиск записи в таблице остатков с видом движения "Приход" для данного документа,
		// позиционирование на ней и заполнение документа партии, корректировка остатков
		ОтборПоРегистратору 	= Новый Структура;
		ОтборПоРегистратору.Вставить("Регистратор"		, ТекущийДокумент.Регистратор);
		ОтборПоРегистратору.Вставить("ВидДвижения"		, ВидДвиженияНакопления.Приход);
		ОтборПоРегистратору.Вставить("Номенклатура"		, ТекущийДокумент.Номенклатура);
		ОтборПоРегистратору.Вставить("Характеристика"	, ТекущийДокумент.Характеристика);
		ОтборПоРегистратору.Вставить("ВидЗапасов"		, ТекущийДокумент.КорВидЗапасов);
		ОтборПоРегистратору.Вставить("КорВидЗапасов"	, ТекущийДокумент.ВидЗапасов);
		ОтборПоРегистратору.Вставить("ЗаписьВРегистр"	, Ложь);
		ОтборПоРегистратору.Вставить("НомерГТД"			, ТекущийДокумент.НомерГТД);

		
		Если ПартияПодобрана Тогда
			Если ТекущийДокумент.НалогообложениеНДС <> СтрокаОстатка.НалогообложениеНДС 
				И НЕ ТекущийДокумент.НалогообложениеНДС.Пустая() Тогда 
				АналитикаУчетаПартий = СформироватьНовуюАналитикуУчетаПартий(СтрокаОстатка.АналитикаУчетаПартий, ТекущийДокумент.НалогообложениеНДС)
			КонецЕсли;
		КонецЕсли;

		Строки = ТаблицаОстатков.НайтиСтроки(ОтборПоРегистратору);
		Для Каждого ТекущаяСтрока Из Строки Цикл
			
			Если Параметры.Количество = 0 Тогда
				Прервать
			КонецЕсли;
			
			Если ТекущаяСтрока.Количество > Параметры.Количество Тогда
				
				СтрокаПеремещения = ТаблицаОстатков.Добавить();
				ЗаполнитьЗначенияСвойств(СтрокаПеремещения, ТекущаяСтрока);
				СтрокаПеремещения.Количество = ТекущаяСтрока.Количество - Параметры.Количество;
				
			КонецЕсли;
			
			ТекущаяСтрока.ЗаписьВРегистр		= Истина;
			ТекущаяСтрока.ПартияПодобрана 		= ПартияПодобрана;
						
			Если ПартияПодобрана Тогда
				ТекущаяСтрока.АналитикаУчетаПартий 	= СтрокаОстатка.АналитикаУчетаПартий;
				ТекущаяСтрока.ДокументПоступления 	= СтрокаОстатка.ДокументПоступления;
				ТекущаяСтрока.Стоимость 			= Параметры.Стоимость;
				ТекущаяСтрока.СтоимостьБезНДС 		= Параметры.СтоимостьБезНДС;
				ТекущаяСтрока.СтоимостьРегл 		= Параметры.СтоимостьРегл;
				ТекущаяСтрока.НДСРегл 				= Параметры.НДСРегл;

				ТекущаяСтрока.ИсходнаяСтоимость 			= Параметры.Стоимость;
				ТекущаяСтрока.ИсходнаяСтоимостьБезНДС 		= Параметры.СтоимостьБезНДС;
				ТекущаяСтрока.ИсходнаяСтоимостьРегл 		= Параметры.СтоимостьРегл;
				ТекущаяСтрока.ИсходнаяНДСРегл 				= Параметры.НДСРегл;
				ТекущаяСтрока.ИсходноеКоличество			= Параметры.Количество;

			КонецЕсли;
			
			Если РаспределениеПартий Тогда
				ТаблицаРаспределения.Добавить(ТекущаяСтрока);
			КонецЕсли;
			
		КонецЦикла;
		
	// Если подобрана партия для документа реализации, которым товар передан на комиссию,
	// то выполняется заполнение партий у комиссионных документов 
	ИначеЕсли ТекущийДокумент.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ПередачаНаКомиссию Тогда

		ОтборДокументаКомиссии = Новый Структура;
		ОтборДокументаКомиссии.Вставить("ВидДвижения"				 , ВидДвиженияНакопления.Приход);
		ОтборДокументаКомиссии.Вставить("Номенклатура"				 , ТекущийДокумент.Номенклатура);
		ОтборДокументаКомиссии.Вставить("Характеристика"			 , ТекущийДокумент.Характеристика);
		ОтборДокументаКомиссии.Вставить("ВидЗапасов"				 , ТекущийДокумент.ВидЗапасов);
		ОтборДокументаКомиссии.Вставить("Регистратор"				 , ТекущийДокумент.Регистратор);
		ОтборДокументаКомиссии.Вставить("КомиссионнаяТорговля"		 , Истина);
		
		ДокументыКомиссии = ТаблицаОстатков.НайтиСтроки(ОтборДокументаКомиссии);
		Если ДокументыКомиссии.Количество() > 0 Тогда
			
			ДокументКомиссии = ДокументыКомиссии[0];
		
			Если ДокументКомиссии.Количество > ТекущийДокумент.Количество Тогда
				
				ДокументДляРаспределения = ТаблицаОстатков.Добавить();
				ЗаполнитьЗначенияСвойств(ДокументДляРаспределения, ДокументКомиссии);
				ДокументДляРаспределения.Количество = ДокументКомиссии.Количество - ТекущийДокумент.Количество;
				
			КонецЕсли;
			
			ДокументКомиссии.Количество = ТекущийДокумент.Количество;
			Если ПартияПодобрана Тогда
				ДокументКомиссии.Стоимость				= ТекущийДокумент.Стоимость;
				ДокументКомиссии.СтоимостьБезНДС		= ТекущийДокумент.СтоимостьБезНДС;
				ДокументКомиссии.СтоимостьРегл			= ТекущийДокумент.СтоимостьРегл;
				ДокументКомиссии.НДСРегл				= ТекущийДокумент.НДСРегл;
				ДокументКомиссии.ДокументПоступления	= Параметры.ДокументПоступления;
				ДокументКомиссии.АналитикаУчетаПартий	= Параметры.АналитикаУчетаПартий;
				ДокументКомиссии.ЗаписьВРегистр			= Истина;
				ДокументКомиссии.ЕстьДокументПартии		= Истина;
				ДокументКомиссии.ПартияПодобрана		= Истина;
			КонецЕсли;
			
		КонецЕсли;
		
		ОтборКомиссионныхДокументов 	= Новый Структура;
		ОтборКомиссионныхДокументов.Вставить("ДокументПередачиНаКомиссию", ТекущийДокумент.Регистратор);
		ОтборКомиссионныхДокументов.Вставить("ВидДвижения"				 , ВидДвиженияНакопления.Расход);
		ОтборКомиссионныхДокументов.Вставить("Номенклатура"				 , ТекущийДокумент.Номенклатура);
		ОтборКомиссионныхДокументов.Вставить("Характеристика"			 , ТекущийДокумент.Характеристика);
		ОтборКомиссионныхДокументов.Вставить("ВидЗапасов"				 , ТекущийДокумент.ВидЗапасов);
		
		КомиссионныеДокументы = ТаблицаОстатков.НайтиСтроки(ОтборКомиссионныхДокументов);
		Для Каждого КомиссионныйДокумент Из КомиссионныеДокументы Цикл
			
			КомиссионныйДокумент.ДокументПоступления	= Параметры.ДокументПоступления;
			КомиссионныйДокумент.АналитикаУчетаПартий	= Параметры.АналитикаУчетаПартий;
			КомиссионныйДокумент.ЕстьДокументПартии		= Истина;
			КомиссионныйДокумент.ЗаписьВРегистр			= Истина;
			КомиссионныйДокумент.ПартияПодобрана 		= Истина;
			
			Если ПартияПодобрана Тогда
				КоличествоКРаспределению 				= ТекущийДокумент.Количество;
				КомиссионныйДокумент.Стоимость 			= Окр((КоличествоКРаспределению * СтоимостьКСписанию / КоличествоКСписанию),2);
				КомиссионныйДокумент.СтоимостьБезНДС 	= Окр((КоличествоКРаспределению * СтоимостьБезНДСКСписанию / КоличествоКСписанию),2);
				КомиссионныйДокумент.СтоимостьРегл 	= Окр((КоличествоКРаспределению * СтоимостьРеглКСписанию / КоличествоКСписанию),2);
				КомиссионныйДокумент.НДСРегл 		= Окр((КоличествоКРаспределению * НДСРеглКСписанию / КоличествоКСписанию),2);
				
				КоличествоКСписанию 	 = КоличествоКСписанию - КоличествоКРаспределению;
				СтоимостьКСписанию 		 = СтоимостьКСписанию - ТекущийДокумент.Стоимость;
				СтоимостьБезНДСКСписанию = СтоимостьБезНДСКСписанию - ТекущийДокумент.СтоимостьБезНДС;
				СтоимостьРеглКСписанию	 = СтоимостьРеглКСписанию - ТекущийДокумент.СтоимостьРегл;
				НДСРеглКСписанию 		 = НДСРеглКСписанию - ТекущийДокумент.НДСРегл;
			КонецЕсли;
			
			Если РаспределениеПартий Тогда
				ТаблицаРаспределения.Добавить(ТекущаяСтрока);
			КонецЕсли;
			
		КонецЦикла;
		
	ИначеЕсли ТипЗнч(ТекущийДокумент.Регистратор) = Тип("ДокументСсылка.СборкаТоваров") Тогда
		
		Отбор = Новый Структура;
		Отбор.Вставить("Регистратор", ТекущийДокумент.Регистратор);
		Отбор.Вставить("ВидДвижения", ВидДвиженияНакопления.Приход);

		МассивРегистраторов = ТаблицаОстатков.НайтиСтроки(Отбор);
		Для Каждого Регистратор Из МассивРегистраторов Цикл
			Регистратор.ЗаписьВРегистр = Истина;
		КонецЦикла;

	КонецЕсли;
	
КонецПроцедуры

Процедура РаспределитьДокументРасходаНаОстаткиТоваров(ТаблицаОстатков, ТаблицаАктуальныхЗаписей, ТаблицаДляДвиженийНДС, ТаблицаРеализацияВыпущеннойПродукции, ВыборкаПоРегистратору, СоответствиеСтрокДляУдаления)
					
	ОтборОстатков 			= СформироватьОтборОстатков();
	ОтборДокументовРасхода 	= СформироватьОтборДокументовРасхода();
	
	ЗаписьНабора 			= Неопределено;
	СтрокаСортировки		= "Период Возр, МоментВремени Возр";
		
	ТаблицаОстатковПоАналитикеОтсортированная = ПолучитьПустуюТаблицуОстатковПоАналитикеОтсортированную();
		
	ЗаполнитьАктуальныеЗаписиПоРегистратору(ТаблицаОстатков, ТаблицаАктуальныхЗаписей, ВыборкаПоРегистратору.Регистратор);

	ВыборкаПоАналитике = ВыборкаПоРегистратору.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	// Выполняется обход документа по строкам аналитики номенклатуры
	Пока ВыборкаПоАналитике.Следующий() Цикл
		
		// Фильтрация таблицы остатков для данной аналитики номенклатуры
		ЗаполнитьЗначенияСвойств(ОтборОстатков, ВыборкаПоАналитике,"Организация, АналитикаУчетаНоменклатуры, КомиссионнаяТорговля, ВидЗапасов","ДокументОстатка");
		СформироватьТаблицуОстатковПоАналитикеОтсортированную(ТаблицаОстатков, ОтборОстатков, ТаблицаОстатковПоАналитикеОтсортированная, СтрокаСортировки);
				
		Если ТаблицаОстатковПоАналитикеОтсортированная.Количество() <> 0 Тогда 
			
			КоличествоКРаспределению = ВыборкаПоАналитике.Количество;
			
			Для Каждого СтрокаТЗ Из ТаблицаОстатковПоАналитикеОтсортированная Цикл
				
				СтрокаОстатка = СтрокаТЗ.СтрокаОстатка;
				
				Если КоличествоКРаспределению <= 0 Тогда
					Прервать;
				КонецЕсли;
				
				Если СтрокаОстатка.Количество > 0 Тогда
					
					Если КоличествоКРаспределению >= СтрокаОстатка.Количество Тогда
							
						КоличествоКРаспределению 	= КоличествоКРаспределению - СтрокаОстатка.Количество;
							
						КоличествоКСписанию 		= СтрокаОстатка.Количество;
						СтоимостьКСписанию			= СтрокаОстатка.Стоимость;
						СтоимостьБезНДСКСписанию	= СтрокаОстатка.СтоимостьБезНДС;
						СтоимостьРеглКСписанию		= СтрокаОстатка.СтоимостьРегл;
						НДСРеглКСписанию			= СтрокаОстатка.НДСРегл;
						
						СтрокаОстатка.Количество	= 0;

					ИначеЕсли КоличествоКРаспределению < СтрокаОстатка.Количество Тогда
								
						СтоимостьКСписанию			= Окр((КоличествоКРаспределению * СтрокаОстатка.Стоимость 		/ СтрокаОстатка.Количество),2);
						СтоимостьБезНДСКСписанию	= Окр((КоличествоКРаспределению * СтрокаОстатка.СтоимостьБезНДС / СтрокаОстатка.Количество),2);
						СтоимостьРеглКСписанию		= Окр((КоличествоКРаспределению * СтрокаОстатка.СтоимостьРегл 	/ СтрокаОстатка.Количество),2);
						НДСРеглКСписанию			= Окр((КоличествоКРаспределению * СтрокаОстатка.НДСРегл 		/ СтрокаОстатка.Количество),2);
							
						СтрокаОстатка.Количество	  = СтрокаОстатка.Количество 	  - КоличествоКРаспределению;
						СтрокаОстатка.Стоимость		  = СтрокаОстатка.Стоимость  	  - СтоимостьКСписанию;
						СтрокаОстатка.СтоимостьБезНДС = СтрокаОстатка.СтоимостьБезНДС - СтоимостьБезНДСКСписанию;
						СтрокаОстатка.СтоимостьРегл	  = СтрокаОстатка.СтоимостьРегл	  - СтоимостьРеглКСписанию;
						СтрокаОстатка.НДСРегл		  = СтрокаОстатка.НДСРегл		  - НДСРеглКСписанию;

						КоличествоКСписанию	 		= КоличествоКРаспределению;
						КоличествоКРаспределению 	= 0;

					КонецЕсли;
											 
						ЗаписьНабора = ТаблицаОстатков.Добавить(); 
											
						ЗаписьНабора.ВидДвижения					= ВидДвиженияНакопления.Расход;
						ЗаписьНабора.Организация					= СтрокаОстатка.Организация;
						ЗаписьНабора.Период							= ВыборкаПоАналитике.Период;
						ЗаписьНабора.МоментВремени 					= Новый МоментВремени(ВыборкаПоАналитике.Период, ВыборкаПоАналитике.Регистратор);
						ЗаписьНабора.Регистратор					= ВыборкаПоАналитике.Регистратор;

						ЗаписьНабора.Количество						= КоличествоКСписанию;
						ЗаписьНабора.Стоимость 						= СтоимостьКСписанию;
						ЗаписьНабора.СтоимостьБезНДС 				= СтоимостьБезНДСКСписанию;
						ЗаписьНабора.СтоимостьРегл 					= СтоимостьРеглКСписанию;
						ЗаписьНабора.НДСРегл 						= НДСРеглКСписанию;
						
						ЗаписьНабора.КомиссионнаяТорговля			= ВыборкаПоАналитике.КомиссионнаяТорговля;
						ЗаписьНабора.ВидЗапасов						= ВыборкаПоАналитике.ВидЗапасов;
						
						ЗаписьНабора.АналитикаУчетаНоменклатуры 	= ВыборкаПоАналитике.АналитикаУчетаНоменклатуры;
						ЗаписьНабора.АналитикаУчетаПартий			= СтрокаОстатка.АналитикаУчетаПартий;
						
						ЗаписьНабора.НалогообложениеНДС				= ВыборкаПоАналитике.НалогообложениеНДС;
						ЗаписьНабора.ХозяйственнаяОперация			= ВыборкаПоАналитике.ХозяйственнаяОперация; 
						ЗаписьНабора.ХозяйственнаяОперацияПартии	= СтрокаОстатка.ХозяйственнаяОперацияПартии;
						ЗаписьНабора.СтатьяРасходов					= ВыборкаПоАналитике.СтатьяРасходов;
						ЗаписьНабора.АналитикаРасходов				= ВыборкаПоАналитике.АналитикаРасходов;
						ЗаписьНабора.Подразделение					= ВыборкаПоАналитике.Подразделение;
						
						ЗаписьНабора.Номенклатура					= ВыборкаПоАналитике.Номенклатура;
						ЗаписьНабора.Характеристика					= ВыборкаПоАналитике.Характеристика;
						
						ЗаписьНабора.ЗаписьВРегистр					= Истина; 
						ЗаписьНабора.ВозможнаКорректировкаНДС		= Ложь;
						ЗаписьНабора.АналитикаУчетаНоменклатурыВПроизводстве = ВыборкаПоАналитике.АналитикаУчетаНоменклатурыВПроизводстве;
						
						
						Если ПроверитьПартию(СтрокаОстатка.ДокументПоступления, ВыборкаПоАналитике.Регистратор, СтрокаОстатка.ЕстьДокументПартии, СтрокаОстатка.ДокументОстатка) Тогда
							ЗаписьНабора.ДокументПоступления 	= СтрокаОстатка.ДокументПоступления;
							ЗаписьНабора.ЕстьДокументПартии 	= Истина;
							ЗаписьНабора.ПартияПодобрана		= Истина; 
							ЗаписьНабора.ЗаписьВРегистр 		= Истина;
							ЗаписьНабора.ДокументОстатка 		= Ложь;
						Иначе
							ЗаписьНабора.ДокументПоступления 	= СтрокаОстатка.Регистратор;
							ЗаписьНабора.ЕстьДокументПартии 	= Ложь;
							ЗаписьНабора.ПартияПодобрана		= Ложь;
							ЗаписьНабора.ДокументОстатка 		= Ложь;
						КонецЕсли;
						
						Если ВыборкаПоАналитике.КомиссионнаяТорговля Тогда
							ЗаписьНабора.ДокументПередачиНаКомиссию	= СтрокаОстатка.Регистратор;	
							ЗаписьНабора.КомиссионнаяТорговля = Истина;
						КонецЕсли;
												
						СоответствиеСтрокДляУдаления.Вставить(ЗаписьНабора	, Истина);
						СоответствиеСтрокДляУдаления.Вставить(СтрокаОстатка	, Истина);
						
						Если ЗаписьНабора.ПартияПодобрана Тогда
							
							ПараметрыНДС = Новый Структура;
							ПараметрыНДС.Вставить("ТекущийДокумент"			, ВыборкаПоАналитике);
							ПараметрыНДС.Вставить("СтрокаОстатка"			, СтрокаОстатка);
							ПараметрыНДС.Вставить("ТаблицаОстатков"			, ТаблицаОстатков);
							ПараметрыНДС.Вставить("СтоимостьРеглКСписанию"	, СтоимостьРеглКСписанию);
							ПараметрыНДС.Вставить("НДСРеглКСписанию"		, НДСРеглКСписанию);
							ПараметрыНДС.Вставить("ТаблицаДляДвиженийНДС"	, ТаблицаДляДвиженийНДС);
							
							ВыполнитьКорректировкуНДС(ПараметрыНДС);
							
						КонецЕсли;
							
						ПараметрыКорректировки = Новый Структура;
						ПараметрыКорректировки.Вставить("ТекущийДокумент"	, ВыборкаПоАналитике);
						ПараметрыКорректировки.Вставить("СтрокаОстатка"		, СтрокаОстатка);
						ПараметрыКорректировки.Вставить("ТаблицаОстатков"	, ТаблицаОстатков);
						ПараметрыКорректировки.Вставить("Количество"		, ЗаписьНабора.Количество);
						ПараметрыКорректировки.Вставить("Стоимость"			, ЗаписьНабора.Стоимость);
						ПараметрыКорректировки.Вставить("СтоимостьБезНДС"	, ЗаписьНабора.СтоимостьБезНДС);
						ПараметрыКорректировки.Вставить("СтоимостьРегл"		, ЗаписьНабора.СтоимостьРегл);
						ПараметрыКорректировки.Вставить("НДСРегл"			, ЗаписьНабора.НДСРегл);
						ПараметрыКорректировки.Вставить("КоличествоКСписанию"		, КоличествоКСписанию);
						ПараметрыКорректировки.Вставить("СтоимостьКСписанию"		, СтоимостьКСписанию);
						ПараметрыКорректировки.Вставить("СтоимостьБезНДСКСписанию"	, СтоимостьБезНДСКСписанию);
						ПараметрыКорректировки.Вставить("СтоимостьРеглКСписанию"	, СтоимостьРеглКСписанию);
						ПараметрыКорректировки.Вставить("НДСРеглКСписанию"			, НДСРеглКСписанию);
						ПараметрыКорректировки.Вставить("ДокументПоступления", ЗаписьНабора.ДокументПоступления);
						ПараметрыКорректировки.Вставить("АналитикаУчетаПартий", ЗаписьНабора.АналитикаУчетаПартий);
						ПараметрыКорректировки.Вставить("ТаблицаРеализацияВыпущеннойПродукции", ТаблицаРеализацияВыпущеннойПродукции);
						ПараметрыКорректировки.Вставить("РаспределениеПартий", Ложь); 
						ПараметрыКорректировки.Вставить("ПартияПодобрана", ЗаписьНабора.ПартияПодобрана); 

						ВыполнитьКорректировкуДокументов(ПараметрыКорректировки);

					КонецЕсли; 
					
				КонецЦикла;
			
				Если КоличествоКРаспределению <> 0 Тогда // Не хватило партий на документы расхода
					
					Отбор = Новый Структура;
					Отбор.Вставить("ДокументПоступления", Неопределено);
					Отбор.Вставить("Количество"			, КоличествоКРаспределению); 
					Отбор.Вставить("ЗаписьВРегистр"		, Истина);

					ДобавитьЗаписьВТаблицуОстатков(ТаблицаОстатков, ВыборкаПоАналитике, Отбор);	
					
				КонецЕсли;
				
		Иначе
			// Для данной строки выборки - остатки отсутствуют
			НоваяСтрока = ТаблицаОстатков.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, ВыборкаПоАналитике);
			НоваяСтрока.МоментВремени		= Новый МоментВремени(ВыборкаПоАналитике.Период, ВыборкаПоАналитике.Регистратор);
			НоваяСтрока.ЗаписьВРегистр		= Истина;
			
			//Необходимо скорректировать приходную часть в любом случае
			ПараметрыКорректировки = Новый Структура;
			ПараметрыКорректировки.Вставить("ТекущийДокумент"	, ВыборкаПоАналитике);
			ПараметрыКорректировки.Вставить("СтрокаОстатка"		, Неопределено);
			ПараметрыКорректировки.Вставить("ТаблицаОстатков"	, ТаблицаОстатков);
			ПараметрыКорректировки.Вставить("Количество"		, 0);
			ПараметрыКорректировки.Вставить("Стоимость"			, 0);
			ПараметрыКорректировки.Вставить("СтоимостьБезНДС"	, 0);
			ПараметрыКорректировки.Вставить("СтоимостьРегл"		, 0);
			ПараметрыКорректировки.Вставить("НДСРегл"			, 0);
			ПараметрыКорректировки.Вставить("КоличествоКСписанию"		, 0);
			ПараметрыКорректировки.Вставить("СтоимостьКСписанию"		, 0);
			ПараметрыКорректировки.Вставить("СтоимостьБезНДСКСписанию"	, 0);
			ПараметрыКорректировки.Вставить("СтоимостьРеглКСписанию"	, 0);
			ПараметрыКорректировки.Вставить("НДСРеглКСписанию"			, 0);
			ПараметрыКорректировки.Вставить("ДокументПоступления", Неопределено);
			ПараметрыКорректировки.Вставить("АналитикаУчетаПартий", Неопределено);
			ПараметрыКорректировки.Вставить("ТаблицаРеализацияВыпущеннойПродукции", ТаблицаРеализацияВыпущеннойПродукции);
			ПараметрыКорректировки.Вставить("РаспределениеПартий", Ложь); 
			ПараметрыКорректировки.Вставить("ПартияПодобрана", Ложь); 

			ВыполнитьКорректировкуДокументов(ПараметрыКорректировки);

		КонецЕсли; 
						
	КонецЦикла; 
	
КонецПроцедуры //РаспределитьДокументРасходаНаОстаткиТоваров()

Процедура РаспределитьДокументыРасходаНаПартииТоваров(ТаблицаОстатков, ТаблицаПартийДляРаспределения, ТаблицаДляДвиженийНДС, ТаблицаРеализацияВыпущеннойПродукции, СтрокаОстатка)
	
	//Для текущего распределения производится поиск в таблице остатков строк с равной аналитикой и видами запасов,
	// где документом партии является текущий документ 
	// Документы перемещения и передачи на комиссию обрабатываются парами, т.е. сначала подбираются партии
	// для расходной части, для приходной части партии проставляются из расходной
	ОтборОстатков = СформироватьОтборПартийПоРегистратору();
	ЗаполнитьЗначенияСвойств(ОтборОстатков, СтрокаОстатка,,"ДокументПоступления");
	ОтборОстатков.ДокументПоступления = СтрокаОстатка.Регистратор;
			
	МассивДокументов = ТаблицаОстатков.НайтиСтроки(ОтборОстатков);
	Для Каждого ТекущийДокумент ИЗ МассивДокументов Цикл 
		
		КоличествоКРаспределению = ТекущийДокумент.Количество;
				
		Если КоличествоКРаспределению <= 0 Тогда
			Прервать;
		КонецЕсли;
		
		Если СтрокаОстатка.Количество > 0 Тогда
			
			Если КоличествоКРаспределению > СтрокаОстатка.Количество Тогда
					
				КоличествоКРаспределению 	= КоличествоКРаспределению - СтрокаОстатка.Количество;
					
				КоличествоКСписанию			= СтрокаОстатка.Количество;
				СтоимостьКСписанию			= СтрокаОстатка.Стоимость;
				СтоимостьБезНДСКСписанию	= СтрокаОстатка.СтоимостьБезНДС;
				СтоимостьРеглКСписанию		= СтрокаОстатка.СтоимостьРегл;
				НДСРеглКСписанию			= СтрокаОстатка.НДСРегл;
				
				НоваяСтрока					= ТаблицаОстатков.Добавить();
				ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаОстатка);
				НоваяСтрока.Период			= ТекущийДокумент.Период;
				НоваяСтрока.Количество 		= ТекущийДокумент.Количество - КоличествоКСписанию;
				НоваяСтрока.Стоимость 		= ТекущийДокумент.Стоимость - СтоимостьКСписанию;
				НоваяСтрока.СтоимостьБезНДС = ТекущийДокумент.СтоимостьБезНДС - СтоимостьБезНДСКСписанию;
				НоваяСтрока.СтоимостьРегл 	= ТекущийДокумент.СтоимостьРегл - СтоимостьРеглКСписанию;
				НоваяСтрока.НДСРегл 		= ТекущийДокумент.НДСРегл - НДСРеглКСписанию;
				
				ТекущийДокумент.Количество		= СтрокаОстатка.Количество;
				ТекущийДокумент.Стоимость		= СтрокаОстатка.Стоимость;
				ТекущийДокумент.СтоимостьБезНДС = СтрокаОстатка.СтоимостьБезНДС;
				ТекущийДокумент.СтоимостьРегл   = СтрокаОстатка.СтоимостьРегл;
				ТекущийДокумент.НДСРегл		  	= СтрокаОстатка.НДСРегл;
				
				ТекущийДокумент.ДокументПоступления 	= СтрокаОстатка.ДокументПоступления;
				ТекущийДокумент.АналитикаУчетаПартий 	= СтрокаОстатка.АналитикаУчетаПартий;

				СтрокаОстатка.Количество	= 0;
				
			ИначеЕсли  КоличествоКРаспределению = СтрокаОстатка.Количество Тогда
				
				КоличествоКСписанию			= СтрокаОстатка.Количество;
				СтоимостьКСписанию			= СтрокаОстатка.Стоимость;
				СтоимостьБезНДСКСписанию	= СтрокаОстатка.СтоимостьБезНДС;
				СтоимостьРеглКСписанию		= СтрокаОстатка.СтоимостьРегл;
				НДСРеглКСписанию			= СтрокаОстатка.НДСРегл;
				
				ТекущийДокумент.Количество	  	= СтрокаОстатка.Количество;
				ТекущийДокумент.Стоимость		= СтрокаОстатка.Стоимость;
				ТекущийДокумент.СтоимостьБезНДС = СтрокаОстатка.СтоимостьБезНДС;
				ТекущийДокумент.СтоимостьРегл   = СтрокаОстатка.СтоимостьРегл;
				ТекущийДокумент.НДСРегл		  	= СтрокаОстатка.НДСРегл;
				
				ТекущийДокумент.ДокументПоступления 	= СтрокаОстатка.ДокументПоступления;
				ТекущийДокумент.АналитикаУчетаПартий 	= СтрокаОстатка.АналитикаУчетаПартий;

				СтрокаОстатка.Количество = 0;
				КоличествоКРаспределению = 0;
												
			ИначеЕсли КоличествоКРаспределению < СтрокаОстатка.Количество Тогда
				
				ТекущийДокумент.Стоимость		= Окр((КоличествоКРаспределению * СтрокаОстатка.Стоимость 		/ СтрокаОстатка.Количество),2);
				ТекущийДокумент.СтоимостьБезНДС	= Окр((КоличествоКРаспределению * СтрокаОстатка.СтоимостьБезНДС / СтрокаОстатка.Количество),2);
				ТекущийДокумент.СтоимостьРегл	= Окр((КоличествоКРаспределению * СтрокаОстатка.СтоимостьРегл 	/ СтрокаОстатка.Количество),2);
				ТекущийДокумент.НДСРегл			= Окр((КоличествоКРаспределению * СтрокаОстатка.НДСРегл 		/ СтрокаОстатка.Количество),2);
				
				ТекущийДокумент.ДокументПоступления 	= СтрокаОстатка.ДокументПоступления;
				ТекущийДокумент.АналитикаУчетаПартий 	= СтрокаОстатка.АналитикаУчетаПартий;
				ТекущийДокумент.ЗаписьВРегистр 			= Истина;
					
				СтрокаОстатка.Количество	= СтрокаОстатка.Количество - КоличествоКРаспределению;
				КоличествоКРаспределению	= 0;
				ТекущийДокумент.ПартияПодобрана = Истина;
				
				КоличествоКСписанию			= ТекущийДокумент.Количество;
				СтоимостьКСписанию			= ТекущийДокумент.Стоимость;
				СтоимостьБезНДСКСписанию	= ТекущийДокумент.СтоимостьБезНДС;
				СтоимостьРеглКСписанию		= ТекущийДокумент.СтоимостьРегл;
				НДСРеглКСписанию			= ТекущийДокумент.НДСРегл;

			КонецЕсли;
			
			ТаблицаПартийДляРаспределения.Добавить(ТекущийДокумент);
			
			ПараметрыНДС = Новый Структура;
			ПараметрыНДС.Вставить("ТекущийДокумент"			, ТекущийДокумент);
			ПараметрыНДС.Вставить("СтрокаОстатка"			, СтрокаОстатка);
			ПараметрыНДС.Вставить("ТаблицаОстатков"			, ТаблицаОстатков);
			ПараметрыНДС.Вставить("СтоимостьРеглКСписанию"	, СтоимостьРеглКСписанию);
			ПараметрыНДС.Вставить("НДСРеглКСписанию"		, НДСРеглКСписанию);
			ПараметрыНДС.Вставить("ТаблицаДляДвиженийНДС"	, ТаблицаДляДвиженийНДС);
			
			ВыполнитьКорректировкуНДС(ПараметрыНДС);
			
			ПараметрыКорректировки = Новый Структура;
			ПараметрыКорректировки.Вставить("ТекущийДокумент"	, ТекущийДокумент);
			ПараметрыКорректировки.Вставить("СтрокаОстатка"		, СтрокаОстатка);
			ПараметрыКорректировки.Вставить("ТаблицаОстатков"	, ТаблицаОстатков);
			ПараметрыКорректировки.Вставить("Количество"		, ТекущийДокумент.Количество);
			ПараметрыКорректировки.Вставить("Стоимость"			, ТекущийДокумент.Стоимость);
			ПараметрыКорректировки.Вставить("СтоимостьБезНДС"	, ТекущийДокумент.СтоимостьБезНДС);
			ПараметрыКорректировки.Вставить("СтоимостьРегл"		, ТекущийДокумент.СтоимостьРегл);
			ПараметрыКорректировки.Вставить("НДСРегл"			, ТекущийДокумент.НДСРегл);
			ПараметрыКорректировки.Вставить("ДокументПоступления", ТекущийДокумент.ДокументПоступления);
			ПараметрыКорректировки.Вставить("АналитикаУчетаПартий", ТекущийДокумент.АналитикаУчетаПартий);
			ПараметрыКорректировки.Вставить("ТаблицаРеализацияВыпущеннойПродукции", ТаблицаРеализацияВыпущеннойПродукции);
			ПараметрыКорректировки.Вставить("РаспределениеПартий", Истина); 
			ПараметрыКорректировки.Вставить("ТаблицаРаспределения"		, ТаблицаПартийДляРаспределения);
			ПараметрыКорректировки.Вставить("КоличествоКСписанию"		, КоличествоКСписанию);
			ПараметрыКорректировки.Вставить("СтоимостьКСписанию"		, СтоимостьКСписанию);
			ПараметрыКорректировки.Вставить("СтоимостьБезНДСКСписанию"	, СтоимостьБезНДСКСписанию);
			ПараметрыКорректировки.Вставить("СтоимостьРеглКСписанию"	, СтоимостьРеглКСписанию);
			ПараметрыКорректировки.Вставить("НДСРеглКСписанию"			, НДСРеглКСписанию);
			ПараметрыКорректировки.Вставить("ПартияПодобрана"			, Истина);

			ВыполнитьКорректировкуДокументов(ПараметрыКорректировки);

		Иначе
			
			Прервать;
			
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры // РаспределитьДокументыРасходаНаПартииТоваров()

Процедура ПроверитьТаблицуНаВзаимныеПеремещения(Таблица)
	
	Отбор = Новый Структура;
	Отбор.Вставить("ХозяйственнаяОперация"		 , Перечисления.ХозяйственныеОперации.ПеремещениеТоваров);
	Отбор.Вставить("ХозяйственнаяОперацияПартии" , Перечисления.ХозяйственныеОперации.ПеремещениеТоваров);
	Отбор.Вставить("ЕстьДокументПартии"			 , Ложь);
	Отбор.Вставить("ДокументОстатка"			 , Ложь);
	
	МассивПеремещений = Таблица.НайтиСтроки(Отбор);
	Для Каждого Перемещение Из МассивПеремещений Цикл
		Перемещение.ЗаписьВРегистр = Истина;
	КонецЦикла;
	
КонецПроцедуры

Функция ПолучитьПустуюТаблицуДляДвиженийНДС()
	
	ТаблицаДляДвиженийНДС = Новый ТаблицаЗначений;
	
	ТаблицаДляДвиженийНДС.Колонки.Добавить ("ДокументРегистратор"			, Документы.ТипВсеСсылки());
	ТаблицаДляДвиженийНДС.Колонки.Добавить ("ДокументПартии"				, Документы.ТипВсеСсылки());
	ТаблицаДляДвиженийНДС.Колонки.Добавить ("АналитикаУчетаНоменклатуры"	, Новый ОписаниеТипов("СправочникСсылка.КлючиАналитикиУчетаНоменклатуры"));
	ТаблицаДляДвиженийНДС.Колонки.Добавить ("СчетФактура"					, Документы.ТипВсеСсылки());
	ТаблицаДляДвиженийНДС.Колонки.Добавить ("РеализацияПроизведенногоТовара", Новый ОписаниеТипов("Булево"));
	ТаблицаДляДвиженийНДС.Колонки.Добавить ("РеализацияСоСтавкойНДС0"		, Новый ОписаниеТипов("Булево"));
	ТаблицаДляДвиженийНДС.Колонки.Добавить ("ВидЦенности"					, Новый ОписаниеТипов("ПеречислениеСсылка.ВидыЦенностей"));
	ТаблицаДляДвиженийНДС.Колонки.Добавить ("СуммаБезНДС"					, Новый ОписаниеТипов("Число"));
	ТаблицаДляДвиженийНДС.Колонки.Добавить ("НДС"							, Новый ОписаниеТипов("Число"));  
		
	Возврат ТаблицаДляДвиженийНДС;
	
КонецФункции // ПолучитьПустуюТаблицуДляДвиженийНДС()

Функция ПолучитьПустуюТаблицуДляРеализацииВыпущеннойПродукции()
	
	ТаблицаРеализацияВыпущеннойПродукции = Новый ТаблицаЗначений;
	
	ТаблицаРеализацияВыпущеннойПродукции.Колонки.Добавить ("ДокументРегистратор", Документы.ТипВсеСсылки());
	ТаблицаРеализацияВыпущеннойПродукции.Колонки.Добавить ("ДокументВыпуска"	, Документы.ТипВсеСсылки());
	ТаблицаРеализацияВыпущеннойПродукции.Колонки.Добавить ("Продукция"			, Новый ОписаниеТипов("СправочникСсылка.Номенклатура"));
	ТаблицаРеализацияВыпущеннойПродукции.Колонки.Добавить ("Характеристика"		, Новый ОписаниеТипов("СправочникСсылка.ХарактеристикиНоменклатуры"));
	ТаблицаРеализацияВыпущеннойПродукции.Колонки.Добавить ("КоличествоПродукции", Новый ОписаниеТипов("Число"));
		
	Возврат ТаблицаРеализацияВыпущеннойПродукции;
	
КонецФункции // ПолучитьПустуюТаблицуДляРеализацииВыпущеннойПродукции()

// Функция возвращает пустую таблицу остатков по аналитике для сортировки
//
Функция ПолучитьПустуюТаблицуОстатковПоАналитикеОтсортированную()
	
	ТаблицаОстатковПоАналитикеОтсортированная = Новый ТаблицаЗначений;
	ТаблицаОстатковПоАналитикеОтсортированная.Колонки.Добавить("Период"			, Новый ОписаниеТипов("Дата"));
	ТаблицаОстатковПоАналитикеОтсортированная.Колонки.Добавить("Количество"		, ОбщегоНазначенияУТ.ПолучитьОписаниеТиповЧисла(10,3));
	ТаблицаОстатковПоАналитикеОтсортированная.Колонки.Добавить("Стоимость"		, ОбщегоНазначенияУТ.ПолучитьОписаниеТиповЧисла(15,2));
	ТаблицаОстатковПоАналитикеОтсортированная.Колонки.Добавить("СтоимостьБезНДС", ОбщегоНазначенияУТ.ПолучитьОписаниеТиповЧисла(15,2));
	ТаблицаОстатковПоАналитикеОтсортированная.Колонки.Добавить("СтоимостьРегл"	, ОбщегоНазначенияУТ.ПолучитьОписаниеТиповЧисла(15,2));
	ТаблицаОстатковПоАналитикеОтсортированная.Колонки.Добавить("НДСРегл"		, ОбщегоНазначенияУТ.ПолучитьОписаниеТиповЧисла(15,2));
	ТаблицаОстатковПоАналитикеОтсортированная.Колонки.Добавить("МоментВремени"	, Новый ОписаниеТипов("МоментВремени"));
	ТаблицаОстатковПоАналитикеОтсортированная.Колонки.Добавить("СтрокаОстатка");
	
	Возврат ТаблицаОстатковПоАналитикеОтсортированная;
	
КонецФункции // ПолучитьПустуюТаблицуОстатковПоАналитикеОтсортированную()

// Процедура производит добавление записи в таблицу остатков
//
// Параметры
//	ТаблицаОстатков   - ТаблицаЗначений, Таблица значений в которую необходимо добавить запись
//	ЗаписьРегистра    - Добавляемая строка таблицы значений
//
Процедура ДобавитьЗаписьВТаблицуОстатков(ТаблицаОстатков, Документ, СтруктураПараметров)
	
	НоваяСтрока = ТаблицаОстатков.Добавить();
	ЗаполнитьЗначенияСвойств(НоваяСтрока, Документ);
	НоваяСтрока.МоментВремени = Новый МоментВремени(Документ.Период, Документ.Регистратор);
	
	Если СтруктураПараметров <> Неопределено Тогда
		НоваяСтрока.Количество 	 		= СтруктураПараметров.Количество;
		НоваяСтрока.ЗаписьВРегистр		= СтруктураПараметров.ЗаписьВРегистр;
	КонецЕсли;                                    
		    		
КонецПроцедуры // ДобавитьЗаписьВТаблицуОстатков()

Процедура СформироватьТаблицуОстатковПоАналитикеОтсортированную(ТаблицаОстатков, ОтборОстатков, ТаблицаОстатковПоАналитикеОтсортированная, СтрокаСортировки)
	
	МассивОстатки = ТаблицаОстатков.НайтиСтроки(ОтборОстатков);
	ТаблицаОстатковПоАналитикеОтсортированная.Очистить();
		
	Для Каждого ЭлементМассива Из МассивОстатки Цикл
		
		Если ЭлементМассива.Количество <=0 тогда 
			Продолжить;
		КонецЕсли;
				
		НоваяСтрока = ТаблицаОстатковПоАналитикеОтсортированная.Добавить();
		НоваяСтрока.Период				= ЭлементМассива.Период;
		НоваяСтрока.Количество			= ЭлементМассива.Количество;
		НоваяСтрока.Стоимость			= ЭлементМассива.Стоимость;
		НоваяСтрока.СтоимостьБезНДС		= ЭлементМассива.СтоимостьБезНДС;
		НоваяСтрока.СтоимостьРегл		= ЭлементМассива.СтоимостьРегл;
		НоваяСтрока.НДСРегл				= ЭлементМассива.НДСРегл;
		НоваяСтрока.МоментВремени		= ЭлементМассива.МоментВремени;
		НоваяСтрока.СтрокаОстатка		= ЭлементМассива;
		
	КонецЦикла;
	
	ТаблицаОстатковПоАналитикеОтсортированная.Сортировать(СтрокаСортировки);
	
КонецПроцедуры // СформироватьТаблицуОстатковПоАналитикеОтсортированную()

Функция ТребуетсяРаспределение(Таблица)
	
	НайденнаяСтрока = Таблица.Найти(Ложь, "ПартияПодобрана");
	
	Возврат ?(НайденнаяСтрока = Неопределено, Ложь, Истина)
	
КонецФункции

// Процедура заполняет и записывает наборы записей регистров.
//
// Параметры
//	СтруктураНаборыЗаписей - Структура - Структура наборов записей регистров
//	СтруктураШапки - Структура - Реквизиты документа
//
Процедура ЗаписатьНаборыЗаписей(СтруктураНаборыЗаписей)
	
	Для Каждого СтрокаСтруктуры Из СтруктураНаборыЗаписей Цикл
		
		НаборЗаписей = СтрокаСтруктуры.Значение;
		Если НаборЗаписей <> Неопределено И НаборЗаписей.Количество() > 0 Тогда
			НаборЗаписей.Записать();
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры // ЗаписатьНаборыЗаписей()

// Функция в зависимости от вида операции, формирует набор записей по регистру 
// "Партии товаров переданные на комиссию" или же "Партии товаров организаций"
//
// Параметры
//	ДополнительныеСвойства - Структура - Структура наборов записей регистров
//	Комиссия - Булево - Указание на комиссионную торговлю
Функция НоваяЗаписьНабораРегистраПартий(ДополнительныеСвойства, Комиссия = Ложь)
	
	Если Комиссия Тогда
		
		НаборЗаписей = ДополнительныеСвойства.ТаблицыДляДвижений.ТаблицаПартииТоваровПереданныеНаКомиссию;
		Возврат НаборЗаписей.Добавить();
		
	Иначе
		
		НаборЗаписей = ДополнительныеСвойства.ТаблицыДляДвижений.ТаблицаПартииТоваровОрганизаций;
		Возврат НаборЗаписей.Добавить();

	КонецЕсли;	
	
КонецФункции  //НоваяЗаписьНабораРегистраПартий () 

// Процедура формирует движения по регистру "Партии выпущенной продукции"
// только для строк из таблицы, где документом партии является "Сборка товаров"
//
//Параметры
//	Таблица - Таблица значений - Таблица, содержащая в себе движения по регистру
// "Партии товаров организаций" или "Партии товаров переданные на комиссию"
Процедура СформироватьДвиженияПоРегиструПартииЗатратНаВыпуск(Таблица, Регистратор)
	
	ДополнительныеСвойства = Новый Структура;
	ДополнительныеСвойства.Вставить("ТаблицыДляДвижений", Новый Структура);
	
	МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	
	Запрос=Новый Запрос("ВЫБРАТЬ
						|	ВтДвижения.Количество КАК Количество,
						|	ВтДвижения.ДокументПоступления,
						|	ВтДвижения.Регистратор,
						|	ВтДвижения.Период,
						|	ВтДвижения.НалогообложениеНДС,
						|	ВтДвижения.АналитикаУчетаНоменклатуры
						|ПОМЕСТИТЬ ВтДвижения
						|ИЗ
						|	&Таб КАК ВтДвижения
						|ГДЕ
						|	ВтДвижения.ДокументПоступления ССЫЛКА Документ.СборкаТоваров
						|	И ВтДвижения.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
						|	И ВтДвижения.Регистратор ССЫЛКА Документ.РеализацияТоваровУслуг");
						
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("Таб",Таблица);
	Запрос.Выполнить();
	
	ТекстЗапроса = "
	|ВЫБРАТЬ
	|	ПартииЗатратНаВыпуск.Организация,
	|	ПартииЗатратНаВыпуск.Продукция,
	|	ПартииЗатратНаВыпуск.Характеристика,
	|	ПартииЗатратНаВыпуск.АналитикаУчетаНоменклатуры,
	|	ПартииЗатратНаВыпуск.ДокументВыпуска,
	|	ПартииЗатратНаВыпуск.ДокументПоступления,
	|	ПартииЗатратНаВыпуск.АналитикаУчетаПартий,
	|	ПартииЗатратНаВыпуск.Знаменатель КАК КоличествоПродукцииКРаспределению,
	|	ПартииЗатратНаВыпуск.Количество КАК КоличествоКРаспределению,
	|	ПартииЗатратНаВыпуск.Стоимость КАК СтоимостьКРаспределению,
	|	ПартииЗатратНаВыпуск.СтоимостьБезНДС КАК СтоимостьБезНДСКРаспределению,
	|	ПартииЗатратНаВыпуск.СтоимостьРегл КАК СтоимостьРеглКРаспределению,
	|	ПартииЗатратНаВыпуск.НДСРегл КАК НДСРеглКРаспределению,
	|	ВтДвижения.НалогообложениеНДС,
	|	ВтДвижения.Количество,
	|	ВтДвижения.Регистратор КАК Регистратор,
	|	ИСТИНА КАК Активность,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
	|	ВтДвижения.Период
	|ИЗ
	|	ВтДвижения КАК ВтДвижения
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ПартииЗатратНаВыпуск КАК ПартииЗатратНаВыпуск
	|		ПО ВтДвижения.ДокументПоступления = ПартииЗатратНаВыпуск.ДокументВыпуска
	|			И ВтДвижения.АналитикаУчетаНоменклатуры.Номенклатура = ПартииЗатратНаВыпуск.Продукция
	|			И ВтДвижения.АналитикаУчетаНоменклатуры.Характеристика = ПартииЗатратНаВыпуск.Характеристика
	|ИТОГИ ПО
	|	Регистратор
	|";
	
	
	Запрос.Текст = ТекстЗапроса;
	
	Результат = Запрос.Выполнить();
	
	ВыборкаПоРегистратору = Результат.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);

	Пока ВыборкаПоРегистратору.Следующий() Цикл

		Движения = Новый Структура;

		Движения.Вставить("ПартииЗатратНаВыпуск", РегистрыНакопления.ПартииЗатратНаВыпуск.СоздатьНаборЗаписей());
		Движения.ПартииЗатратНаВыпуск.Отбор.Регистратор.Установить(ВыборкаПоРегистратору.Регистратор);
		ДополнительныеСвойства.ТаблицыДляДвижений.Вставить("ТаблицаПартииЗатратНаВыпуск", Движения.ПартииЗатратНаВыпуск.ВыгрузитьКолонки());
		
		ВыборкаПоДетальнымЗаписям = ВыборкаПоРегистратору.Выбрать();
		
		Пока ВыборкаПоДетальнымЗаписям.Следующий() Цикл
		
			НаборЗаписейПартииЗатратНаВыпуск = ДополнительныеСвойства.ТаблицыДляДвижений.ТаблицаПартииЗатратНаВыпуск;
			ЗаписьНабораПартииЗатратНаВыпуск = НаборЗаписейПартииЗатратНаВыпуск.Добавить();
			
			ЗаписьНабораПартииЗатратНаВыпуск.Активность 		= ВыборкаПоДетальнымЗаписям.Активность;
			ЗаписьНабораПартииЗатратНаВыпуск.ВидДвижения 		= ВыборкаПоДетальнымЗаписям.ВидДвижения;
			ЗаписьНабораПартииЗатратНаВыпуск.Период	 			= ВыборкаПоДетальнымЗаписям.Период;
			ЗаписьНабораПартииЗатратНаВыпуск.Регистратор		= ВыборкаПоДетальнымЗаписям.Регистратор;
			
			ЗаписьНабораПартииЗатратНаВыпуск.Организация					= ВыборкаПоДетальнымЗаписям.Организация;
			ЗаписьНабораПартииЗатратНаВыпуск.Продукция						= ВыборкаПоДетальнымЗаписям.Продукция;
			ЗаписьНабораПартииЗатратНаВыпуск.Характеристика					= ВыборкаПоДетальнымЗаписям.Характеристика;
			ЗаписьНабораПартииЗатратНаВыпуск.АналитикаУчетаНоменклатуры		= ВыборкаПоДетальнымЗаписям.АналитикаУчетаНоменклатуры;
			ЗаписьНабораПартииЗатратНаВыпуск.ДокументВыпуска				= ВыборкаПоДетальнымЗаписям.ДокументВыпуска;
			ЗаписьНабораПартииЗатратНаВыпуск.ДокументПоступления			= ВыборкаПоДетальнымЗаписям.ДокументПоступления;
			ЗаписьНабораПартииЗатратНаВыпуск.АналитикаУчетаПартий			= ВыборкаПоДетальнымЗаписям.АналитикаУчетаПартий;
			
			ЗаписьНабораПартииЗатратНаВыпуск.Знаменатель		  = ВыборкаПоДетальнымЗаписям.Количество;
			
			ЗаписьНабораПартииЗатратНаВыпуск.Количество 		  = РаспределитьПропорциональноКоличеству (
																			ВыборкаПоДетальнымЗаписям.КоличествоКРаспределению, 
																			ВыборкаПоДетальнымЗаписям.КоличествоПродукцииКРаспределению,
																			ВыборкаПоДетальнымЗаписям.Количество
																			);
			
			ЗаписьНабораПартииЗатратНаВыпуск.Стоимость 		  = РаспределитьПропорциональноКоличеству (
																			ВыборкаПоДетальнымЗаписям.СтоимостьКРаспределению, 
																			ВыборкаПоДетальнымЗаписям.КоличествоПродукцииКРаспределению,
																			ВыборкаПоДетальнымЗаписям.Количество
																			);
			ЗаписьНабораПартииЗатратНаВыпуск.СтоимостьБезНДС	  = РаспределитьПропорциональноКоличеству (
																			ВыборкаПоДетальнымЗаписям.СтоимостьБезНДСКРаспределению, 
																			ВыборкаПоДетальнымЗаписям.КоличествоПродукцииКРаспределению,
																			ВыборкаПоДетальнымЗаписям.Количество
																			);

			ЗаписьНабораПартииЗатратНаВыпуск.НДСРегл			= РаспределитьПропорциональноКоличеству (
																			ВыборкаПоДетальнымЗаписям.НДСРеглКРаспределению, 
																			ВыборкаПоДетальнымЗаписям.КоличествоПродукцииКРаспределению,	
																			ВыборкаПоДетальнымЗаписям.Количество
																			);
																			
		КонецЦикла;
		
		Движения.ПартииЗатратНаВыпуск.Загрузить (ДополнительныеСвойства.ТаблицыДляДвижений.ТаблицаПартииЗатратНаВыпуск);
	    ЗаписатьНаборыЗаписей(Движения);

	КонецЦикла;
		
	    	  	  	
КонецПроцедуры // СформироватьДвиженияПоРегиструПартииЗатратНаВыпуск()

Функция ОпределитьВидЦенности(Номенклатура) 
	
	Если Номенклатура.ТипНоменклатуры <> Перечисления.ТипыНоменклатуры.МногооборотнаяТара
	 	И Номенклатура.ТипНоменклатуры <> Перечисления.ТипыНоменклатуры.Товар 
	Тогда
		ВидЦенности = Перечисления.ВидыЦенностей.ПрочиеРаботыИУслуги;
	Иначе
		ВидЦенности = Перечисления.ВидыЦенностей.Товары;
	КонецЕсли;
		
	Возврат ВидЦенности;

КонецФункции // ОпределитьВидЦенности() 

Процедура СформироватьДвиженияПоПартиямСобраннойПродукции(Таблица)
	
	ДополнительныеСвойства = Новый Структура;
	ДополнительныеСвойства.Вставить("ТаблицыДляДвижений", Новый Структура);
	
	МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	
	Запрос=Новый Запрос("
	|ВЫБРАТЬ
	|	ВтДанныеПоДокументу.Регистратор,
	|	ВтДанныеПоДокументу.Период,
	|	ВтДанныеПоДокументу.Организация,
	|	ВтДанныеПоДокументу.ДокументПоступления,
	|	ВтДанныеПоДокументу.АналитикаУчетаНоменклатуры,
	|	ВтДанныеПоДокументу.Количество,
	|	ВтДанныеПоДокументу.ИсходноеКоличество,
	|	ВтДанныеПоДокументу.Стоимость,
	|	ВтДанныеПоДокументу.СтоимостьБезНДС,
	|	ВтДанныеПоДокументу.СтоимостьРегл,
	|	ВтДанныеПоДокументу.НДСРегл,
	|	ВтДанныеПоДокументу.АналитикаУчетаПартий,
	|	ВтДанныеПоДокументу.ВидДвижения,
	|	ВЫБОР
	|		КОГДА ВтДанныеПоДокументу.ДокументПоступления = ВтДанныеПоДокументу.Регистратор
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК ЭтоКомплект
	|ПОМЕСТИТЬ ВтДанныеПоДокументу
	|ИЗ
	|	&Таблица КАК ВтДанныеПоДокументу
	|ГДЕ
	|	ВтДанныеПоДокументу.Регистратор ССЫЛКА Документ.СборкаТоваров
	|");
	
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("Таблица",Таблица);
	
	Запрос.Выполнить();
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	Таблица.ИсходноеКоличество 		КАК Количество,
	|	Таблица.Регистратор				КАК Регистратор,
	|	Аналитика.Номенклатура 			КАК Номенклатура,
	|	Аналитика.Характеристика 		КАК Характеристика
	|
	|ПОМЕСТИТЬ ВтКомплект
	|
	|ИЗ
	|	ВтДанныеПоДокументу КАК Таблица
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		РегистрСведений.АналитикаУчетаНоменклатуры КАК Аналитика
	|	ПО
	|		Аналитика.КлючАналитики = Таблица.АналитикаУчетаНоменклатуры
	|
	|ГДЕ
	|	Таблица.ЭтоКомплект = Истина
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ИСТИНА КАК Активность,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) 				КАК ВидДвижения,
	|	ТаблицаКомплектующих.Период 						КАК Период,
	|	ТаблицаКомплектующих.Регистратор 					КАК Регистратор,
	|	ТаблицаКомплектующих.Организация 					КАК Организация,
	|	Комплект.Номенклатура 								КАК Продукция,
	|	Комплект.Характеристика 							КАК Характеристика,
	|	ТаблицаКомплектующих.АналитикаУчетаНоменклатуры 	КАК АналитикаУчетаНоменклатуры,
	|	ТаблицаКомплектующих.Регистратор 					КАК ДокументВыпуска,
	|	ТаблицаКомплектующих.ДокументПоступления 			КАК ДокументПоступления,
	|	ТаблицаКомплектующих.АналитикаУчетаПартий 			КАК АналитикаУчетаПартий,
	|	Комплект.Количество 								КАК КоличествоПродукции,
	|	ТаблицаКомплектующих.Количество 					КАК Количество,
	|	ТаблицаКомплектующих.Стоимость 						КАК Стоимость,
	|	ТаблицаКомплектующих.СтоимостьБезНДС 				КАК СтоимостьБезНДС,
	|	ТаблицаКомплектующих.СтоимостьРегл 					КАК СтоимостьРегл,
	|	ТаблицаКомплектующих.НДСРегл 						КАК НДСРегл
	|ИЗ
	|	ВтДанныеПоДокументу 								КАК ТаблицаКомплектующих
	|		ЛЕВОЕ СОЕДИНЕНИЕ 
	|			ВтКомплект КАК Комплект
	|		ПО 
	|			ТаблицаКомплектующих.Регистратор = Комплект.Регистратор
	|ГДЕ
	|	ТаблицаКомплектующих.ЭтоКомплект = Ложь
	|ИТОГИ ПО
	|	Регистратор
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВтДанныеПоДокументу
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВтКомплект
	|";
	
	Запрос.Текст = ТекстЗапроса;
	
	ВыборкаПоРегистратору = Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	Пока ВыборкаПоРегистратору.Следующий() Цикл

		Движения = Новый Структура;

		Движения.Вставить("ПартииЗатратНаВыпуск", РегистрыНакопления.ПартииЗатратНаВыпуск.СоздатьНаборЗаписей());
		Движения.ПартииЗатратНаВыпуск.Отбор.Регистратор.Установить(ВыборкаПоРегистратору.Регистратор);
		ДополнительныеСвойства.ТаблицыДляДвижений.Вставить("ТаблицаПартииЗатратНаВыпуск", Движения.ПартииЗатратНаВыпуск.ВыгрузитьКолонки());
		
		ВыборкаПоДетальнымЗаписям = ВыборкаПоРегистратору.Выбрать();
		
		Пока ВыборкаПоДетальнымЗаписям.Следующий() Цикл
			
			НаборЗаписей	= ДополнительныеСвойства.ТаблицыДляДвижений.ТаблицаПартииЗатратНаВыпуск;
			ЗаписьНабора	= НаборЗаписей.Добавить();
			
			ЗаполнитьЗначенияСвойств(ЗаписьНабора, ВыборкаПоДетальнымЗаписям);			
			
		КонецЦикла;
				
		Движения.ПартииЗатратНаВыпуск.Загрузить(ДополнительныеСвойства.ТаблицыДляДвижений.ТаблицаПартииЗатратНаВыпуск);
	
		ЗаписатьНаборыЗаписей(Движения);
		
	КонецЦикла;

КонецПроцедуры

Процедура СформироватьДвиженияПоРегистрамПартий(Движения, ДополнительныеСвойства, Документ, СоответствиеСтрокДляУдаления, Регистратор, ПерваяИтерация, ПоследняяИтерация)
	
	Если ПоследняяИтерация Тогда

		Движения.ПартииТоваровОрганизаций.Загрузить(ДополнительныеСвойства.ТаблицыДляДвижений.ТаблицаПартииТоваровОрганизаций);
		Движения.ПартииТоваровПереданныеНаКомиссию.Загрузить(ДополнительныеСвойства.ТаблицыДляДвижений.ТаблицаПартииТоваровПереданныеНаКомиссию);
		Движения.ПартииПрочихРасходов.Загрузить(ДополнительныеСвойства.ТаблицыДляДвижений.ТаблицаПартииПрочихРасходов);		
		
		ДополнительныеСвойства.ТаблицыДляДвижений.ТаблицаСебестоимостьТоваров.ЗаполнитьЗначения(Перечисления.РазделыУчетаСебестоимостиТоваров.ТоварыНаСкладах,"РазделУчета");
		Движения.СебестоимостьТоваров.Загрузить(ДополнительныеСвойства.ТаблицыДляДвижений.ТаблицаСебестоимостьТоваров);
					
		СформироватьДвиженияПоРегиструПартииЗатратНаВыпуск(ДополнительныеСвойства.ТаблицыДляДвижений.ТаблицаПартииТоваровОрганизаций, Документ.Регистратор);
		СформироватьДвиженияПоРегиструПартииЗатратНаВыпуск(ДополнительныеСвойства.ТаблицыДляДвижений.ТаблицаПартииТоваровПереданныеНаКомиссию, Документ.Регистратор);
				
		ЗаписатьНаборыЗаписей(Движения);

		Возврат;
		
	КонецЕсли;
	
	Если Документ.Регистратор <> Регистратор ИЛИ ПерваяИтерация Тогда 
				
		Если НЕ ПерваяИтерация Тогда
									
			ДополнительныеСвойства.ТаблицыДляДвижений.ТаблицаСебестоимостьТоваров.ЗаполнитьЗначения(Перечисления.РазделыУчетаСебестоимостиТоваров.ТоварыНаСкладах,"РазделУчета");
			
			Движения.ПартииТоваровОрганизаций.Загрузить(ДополнительныеСвойства.ТаблицыДляДвижений.ТаблицаПартииТоваровОрганизаций);
			Движения.ПартииТоваровПереданныеНаКомиссию.Загрузить(ДополнительныеСвойства.ТаблицыДляДвижений.ТаблицаПартииТоваровПереданныеНаКомиссию);
			Движения.СебестоимостьТоваров.Загрузить(ДополнительныеСвойства.ТаблицыДляДвижений.ТаблицаСебестоимостьТоваров);
			Движения.ПартииПрочихРасходов.Загрузить(ДополнительныеСвойства.ТаблицыДляДвижений.ТаблицаПартииПрочихРасходов);		
			
			СформироватьДвиженияПоРегиструПартииЗатратНаВыпуск(
				ДополнительныеСвойства.ТаблицыДляДвижений.ТаблицаПартииТоваровОрганизаций,
				Документ.Регистратор
				);
			СформироватьДвиженияПоРегиструПартииЗатратНаВыпуск(
				ДополнительныеСвойства.ТаблицыДляДвижений.ТаблицаПартииТоваровПереданныеНаКомиссию,
				Документ.Регистратор
				);
				
			ДокументыБезПартии = Неопределено;
			ДокументыБезПартии = ДополнительныеСвойства.ТаблицыДляДвижений.ТаблицаПартииТоваровОрганизаций.Найти("ДокументПоступления", Неопределено);
			
			ДокументыБезПартииНаКомиссии = Неопределено;
			ДокументыБезПартииНаКомиссии = ДополнительныеСвойства.ТаблицыДляДвижений.ТаблицаПартииТоваровОрганизаций.Найти("ДокументПоступления", Неопределено);
			
			Если ДокументыБезПартии = Неопределено или ДокументыБезПартииНаКомиссии = Неопределено тогда
				
				ЗаписьЖурналаРегистрации("ПартионныйУчет", УровеньЖурналаРегистрации.Ошибка, Документ.Регистратор , ,
				"Для документа "+ Документ.Регистратор +" не произведено распределение на партии!" );
				
			КонецЕсли;
							
			ЗаписатьНаборыЗаписей(Движения);
						
		КонецЕсли;
					
			Движения.Очистить();
			ДополнительныеСвойства.Очистить();
			
			ДополнительныеСвойства.Вставить("ТаблицыДляДвижений", Новый Структура);
		
			Движения.Вставить("ПартииТоваровОрганизаций", РегистрыНакопления.ПартииТоваровОрганизаций.СоздатьНаборЗаписей());
			Движения.ПартииТоваровОрганизаций.Отбор.Регистратор.Установить(Документ.Регистратор);
			ДополнительныеСвойства.ТаблицыДляДвижений.Вставить("ТаблицаПартииТоваровОрганизаций", Движения.ПартииТоваровОрганизаций.ВыгрузитьКолонки());
			
			Движения.Вставить("ПартииТоваровПереданныеНаКомиссию", РегистрыНакопления.ПартииТоваровПереданныеНаКомиссию.СоздатьНаборЗаписей());
			Движения.ПартииТоваровПереданныеНаКомиссию.Отбор.Регистратор.Установить(Документ.Регистратор);
			ДополнительныеСвойства.ТаблицыДляДвижений.Вставить("ТаблицаПартииТоваровПереданныеНаКомиссию", Движения.ПартииТоваровПереданныеНаКомиссию.ВыгрузитьКолонки());
			
			Движения.Вставить("СебестоимостьТоваров", РегистрыНакопления.СебестоимостьТоваров.СоздатьНаборЗаписей());
			Движения.СебестоимостьТоваров.Отбор.Регистратор.Установить(Документ.Регистратор);
			ДополнительныеСвойства.ТаблицыДляДвижений.Вставить("ТаблицаСебестоимостьТоваров", Движения.СебестоимостьТоваров.ВыгрузитьКолонки());		
	
			Движения.Вставить("ПартииЗатратНаВыпуск", РегистрыНакопления.ПартииЗатратНаВыпуск.СоздатьНаборЗаписей());
			Движения.ПартииЗатратНаВыпуск.Отбор.Регистратор.Установить(Документ.Регистратор);
			ДополнительныеСвойства.ТаблицыДляДвижений.Вставить("ТаблицаПартииЗатратНаВыпуск", Движения.ПартииЗатратНаВыпуск.ВыгрузитьКолонки());		
			
			Движения.Вставить("ПартииПрочихРасходов", РегистрыНакопления.ПартииПрочихРасходов.СоздатьНаборЗаписей());
			Движения.ПартииПрочихРасходов.Отбор.Регистратор.Установить(Документ.Регистратор);
			ДополнительныеСвойства.ТаблицыДляДвижений.Вставить("ТаблицаПартииПрочихРасходов", Движения.ПартииПрочихРасходов.ВыгрузитьКолонки());		
				
			ЗаписьНабора = НоваяЗаписьНабораРегистраПартий (
									ДополнительныеСвойства, 
									Документ.КомиссионнаяТорговля
									);
									
			ЗаполнитьЗначенияСвойств (ЗаписьНабора, Документ);
			Если Документ.ВидДвижения = ВидДвиженияНакопления.Приход 
				ИЛИ Документ.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВозвратТоваровОтКлиента
				ИЛИ Документ.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВозвратОтРозничногоПокупателя
				ИЛИ Документ.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВозвратПоКомиссииМеждуОрганизациями
				ИЛИ Документ.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВозвратОтКомиссионера
			Тогда
				ЗаписьНабора.Количество			= Документ.ИсходноеКоличество;
				ЗаписьНабора.Стоимость			= Документ.ИсходнаяСтоимость;
				ЗаписьНабора.СтоимостьБезНДС	= Документ.ИсходнаяСтоимостьБезНДС;
				ЗаписьНабора.СтоимостьРегл		= Документ.ИсходнаяСтоимостьРегл;
				ЗаписьНабора.НДСРегл			= Документ.ИсходнаяНДСРегл;
			Иначе
				ЗаписьНабора.Количество			= Документ.Количество;
				ЗаписьНабора.Стоимость			= Документ.Стоимость;
				ЗаписьНабора.СтоимостьБезНДС	= Документ.СтоимостьБезНДС;
				ЗаписьНабора.СтоимостьРегл		= Документ.СтоимостьРегл;
				ЗаписьНабора.НДСРегл			= Документ.НДСРегл;
				
			КонецЕсли;
			
			ЗаписьНабора.Активность = Истина;
				
			Регистратор 	= Документ.Регистратор;
			ПерваяИтерация 	= Ложь;
			
			Если Документ.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.СписаниеТоваровПоТребованию Тогда
				
				НаборЗаписейПартийРасходов = ДополнительныеСвойства.ТаблицыДляДвижений.ТаблицаПартииПрочихРасходов;
				ЗаписьНабораПартийРасходов = НаборЗаписейПартийРасходов.Добавить();
				ЗаполнитьЗначенияСвойств(ЗаписьНабораПартийРасходов, Документ);
				ЗаписьНабораПартийРасходов.ВидДвижения					= ВидДвиженияНакопления.Приход;
				ЗаписьНабораПартийРасходов.Активность					= Истина;
				ЗаписьНабораПартийРасходов.ДокументПоступленияРасходов	= Документ.ДокументПоступления;
				ЗаписьНабораПартийРасходов.Подразделение				= Документ.Подразделение;
				ЗаписьНабораПартийРасходов.Стоимость					= 0;
				ЗаписьНабораПартийРасходов.СтоимостьБезНДС				= 0;
				
			КонецЕсли;


			СоответствиеСтрокДляУдаления.Вставить(Документ,Истина);
					
	Иначе
				
			ЗаписьНабора = НоваяЗаписьНабораРегистраПартий (
									ДополнительныеСвойства, 
									Документ.КомиссионнаяТорговля
									);
									
			ЗаполнитьЗначенияСвойств (ЗаписьНабора, Документ);
			
			Если Документ.ВидДвижения = ВидДвиженияНакопления.Приход 
				ИЛИ Документ.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВозвратТоваровОтКлиента
				ИЛИ Документ.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВозвратОтРозничногоПокупателя
				ИЛИ Документ.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВозвратПоКомиссииМеждуОрганизациями
				ИЛИ Документ.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВозвратОтКомиссионера
			Тогда
				ЗаписьНабора.Количество			= Документ.ИсходноеКоличество;
				ЗаписьНабора.Стоимость			= Документ.ИсходнаяСтоимость;
				ЗаписьНабора.СтоимостьБезНДС	= Документ.ИсходнаяСтоимостьБезНДС;
				ЗаписьНабора.СтоимостьРегл		= Документ.ИсходнаяСтоимостьРегл;
				ЗаписьНабора.НДСРегл			= Документ.ИсходнаяНДСРегл;
			Иначе
				ЗаписьНабора.Количество			= Документ.Количество;
				ЗаписьНабора.Стоимость			= Документ.Стоимость;
				ЗаписьНабора.СтоимостьБезНДС	= Документ.СтоимостьБезНДС;
				ЗаписьНабора.СтоимостьРегл		= Документ.СтоимостьРегл;
				ЗаписьНабора.НДСРегл			= Документ.НДСРегл;
			КонецЕсли;

			ЗаписьНабора.Активность = Истина;
			Регистратор = Документ.Регистратор;
 
			СоответствиеСтрокДляУдаления.Вставить(Документ, Истина);

	КонецЕсли; 	
	
КонецПроцедуры // СформироватьДвиженияПоРегистрамПартий()

Процедура СформироватьНаборДокументовДляРаспределенияНДС(Таблица)
	
	Если Таблица.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;

	ТекстЗапроса ="
	|ВЫБРАТЬ
	|	ТаблицаДокументов.ДокументРегистратор,
	|	ТаблицаДокументов.ДокументПартии,
	|	ТаблицаДокументов.АналитикаУчетаНоменклатуры,
	|	ТаблицаДокументов.СчетФактура,
	|	ТаблицаДокументов.РеализацияПроизведенногоТовара,
	|	ТаблицаДокументов.РеализацияСоСтавкойНДС0,
	|	ТаблицаДокументов.ВидЦенности,
	|	ТаблицаДокументов.СуммаБезНДС,
	|	ТаблицаДокументов.НДС
	|ПОМЕСТИТЬ ВТИсходныеДанные
	|ИЗ
	|	&ТаблицаДокументов КАК ТаблицаДокументов
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВтИсходныеДанные.ДокументРегистратор,
	|	ВтИсходныеДанные.ДокументПартии,
	|	ВтИсходныеДанные.АналитикаУчетаНоменклатуры,
	|	ВтИсходныеДанные.СчетФактура,
	|	ВтИсходныеДанные.РеализацияПроизведенногоТовара,
	|	ВтИсходныеДанные.РеализацияСоСтавкойНДС0,
	|	ВтИсходныеДанные.ВидЦенности,
	|	ВтИсходныеДанные.СуммаБезНДС,
	|	ВтИсходныеДанные.НДС
	|ПОМЕСТИТЬ ВТДанныеДляОбработки
	|ИЗ
	|	ВТИсходныеДанные КАК ВтИсходныеДанные
	|
	|СГРУППИРОВАТЬ ПО
	|	ВтИсходныеДанные.ДокументРегистратор,
	|	ВтИсходныеДанные.РеализацияСоСтавкойНДС0,
	|	ВтИсходныеДанные.РеализацияПроизведенногоТовара,
	|	ВтИсходныеДанные.СуммаБезНДС,
	|	ВтИсходныеДанные.НДС,
	|	ВтИсходныеДанные.СчетФактура,
	|	ВтИсходныеДанные.ДокументПартии,
	|	ВтИсходныеДанные.ВидЦенности,
	|	ВтИсходныеДанные.АналитикаУчетаНоменклатуры
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	НДСДокументыДляРаспределения.ДокументРегистратор,
	|	НДСДокументыДляРаспределения.ДокументПартии,
	|	НДСДокументыДляРаспределения.АналитикаУчетаНоменклатуры,
	|	НДСДокументыДляРаспределения.СчетФактура,
	|	НДСДокументыДляРаспределения.РеализацияПроизведенногоТовара,
	|	НДСДокументыДляРаспределения.РеализацияСоСтавкойНДС0,
	|	НДСДокументыДляРаспределения.ВидЦенности,
	|	МАКСИМУМ(НДСДокументыДляРаспределения.СуммаБезНДС),
	|	СУММА(НДСДокументыДляРаспределения.НДС)
	|ИЗ
	|	РегистрСведений.НДСДокументыДляРаспределения КАК НДСДокументыДляРаспределения
	|
	|СГРУППИРОВАТЬ ПО
	|	НДСДокументыДляРаспределения.ВидЦенности,
	|	НДСДокументыДляРаспределения.АналитикаУчетаНоменклатуры,
	|	НДСДокументыДляРаспределения.ДокументПартии,
	|	НДСДокументыДляРаспределения.РеализацияСоСтавкойНДС0,
	|	НДСДокументыДляРаспределения.СчетФактура,
	|	НДСДокументыДляРаспределения.ДокументРегистратор,
	|	НДСДокументыДляРаспределения.РеализацияПроизведенногоТовара
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТДанныеДляОбработки.ДокументРегистратор,
	|	ВТДанныеДляОбработки.ДокументПартии,
	|	ВТДанныеДляОбработки.АналитикаУчетаНоменклатуры,
	|	ВТДанныеДляОбработки.СчетФактура,
	|	ВТДанныеДляОбработки.РеализацияПроизведенногоТовара,
	|	ВТДанныеДляОбработки.РеализацияСоСтавкойНДС0,
	|	ВТДанныеДляОбработки.ВидЦенности,
	|	МАКСИМУМ(ВТДанныеДляОбработки.СуммаБезНДС) КАК СуммаБезНДС,
	|	МАКСИМУМ(ВТДанныеДляОбработки.НДС) КАК НДС
	|ИЗ
	|	ВТДанныеДляОбработки КАК ВТДанныеДляОбработки
	|
	|СГРУППИРОВАТЬ ПО
	|	ВТДанныеДляОбработки.ДокументРегистратор,
	|	ВТДанныеДляОбработки.ДокументПартии,
	|	ВТДанныеДляОбработки.АналитикаУчетаНоменклатуры,
	|	ВТДанныеДляОбработки.СчетФактура,
	|	ВТДанныеДляОбработки.РеализацияПроизведенногоТовара,
	|	ВТДанныеДляОбработки.РеализацияСоСтавкойНДС0,
	|	ВТДанныеДляОбработки.ВидЦенности
	|";
	
	Запрос = Новый Запрос;
	Запрос.Текст = ТекстЗапроса;
	Запрос.УстановитьПараметр("ТаблицаДокументов",Таблица);
	
	ДокументыДляРаспределения = Запрос.Выполнить();
	
	НаборДокументов 	= РегистрыСведений.НДСДокументыДляРаспределения.СоздатьНаборЗаписей();
	НаборДокументов.Загрузить(ДокументыДляРаспределения.Выгрузить());
	НаборДокументов.Записать();
	
	Таблица.Очистить();
	
КонецПроцедуры // СформироватьНаборДокументовДляРаспределенияНДС()

Процедура СформироватьНаборДокументовПоВыпущеннойПродукции(Таблица)
	
	Если Таблица.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;

	ТекстЗапроса ="
	|ВЫБРАТЬ
	|	ТаблицаДокументов.ДокументРегистратор,
	|	ТаблицаДокументов.ДокументВыпуска,
	|	ТаблицаДокументов.Продукция,
	|	ТаблицаДокументов.Характеристика,
	|	ТаблицаДокументов.КоличествоПродукции
	|ПОМЕСТИТЬ ВТИсходныеДанные
	|ИЗ
	|	&ТаблицаДокументов КАК ТаблицаДокументов
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТИсходныеДанные.ДокументРегистратор,
	|	ВТИсходныеДанные.ДокументВыпуска,
	|	ВТИсходныеДанные.Продукция,
	|	ВТИсходныеДанные.Характеристика,
	|	ВТИсходныеДанные.КоличествоПродукции
	|ПОМЕСТИТЬ ВтДанныеДляРаспределения
	|ИЗ
	|	ВТИсходныеДанные КАК ВТИсходныеДанные
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ДокументыПоВыпущеннойПродукции.ДокументРегистратор,
	|	ДокументыПоВыпущеннойПродукции.ДокументВыпуска,
	|	ДокументыПоВыпущеннойПродукции.Продукция,
	|	ДокументыПоВыпущеннойПродукции.Характеристика,
	|	ДокументыПоВыпущеннойПродукции.КоличествоПродукции
	|ИЗ
	|	РегистрСведений.ДокументыПоВыпущеннойПродукции КАК ДокументыПоВыпущеннойПродукции
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВтДанныеДляРаспределения.ДокументРегистратор,
	|	ВтДанныеДляРаспределения.ДокументВыпуска,
	|	ВтДанныеДляРаспределения.Продукция,
	|	ВтДанныеДляРаспределения.Характеристика,
	|	МАКСИМУМ(ВтДанныеДляРаспределения.КоличествоПродукции) КАК КоличествоПродукции
	|ИЗ
	|	ВтДанныеДляРаспределения КАК ВтДанныеДляРаспределения
	|
	|СГРУППИРОВАТЬ ПО
	|	ВтДанныеДляРаспределения.ДокументРегистратор,
	|	ВтДанныеДляРаспределения.ДокументВыпуска,
	|	ВтДанныеДляРаспределения.Продукция,
	|	ВтДанныеДляРаспределения.Характеристика
	|";
	
	Запрос = Новый Запрос;
	Запрос.Текст = ТекстЗапроса;
	Запрос.УстановитьПараметр("ТаблицаДокументов",Таблица);
	
	ДокументыДляРаспределения = Запрос.Выполнить();
	
	НаборДокументов 	= РегистрыСведений.ДокументыПоВыпущеннойПродукции.СоздатьНаборЗаписей();
	НаборДокументов.Загрузить(ДокументыДляРаспределения.Выгрузить());
	НаборДокументов.Записать();
	
	Таблица.Очистить(); 
	
КонецПроцедуры // СформироватьНаборДокументовПоВыпущеннойПродукции() 

Процедура ДобавитьЗаписьВТаблицуДвиженийДляНДС(ТаблицуДвиженийДляНДС, Выборка, СтрокаОстатка, СтруктураПараметров)
	
	СчетФактура = ЗакупкиВызовСервера.СчетФактураДокумента(СтрокаОстатка.ДокументПоступления);
	
	Если СчетФактура = Неопределено И НЕ СтруктураПараметров.ЭтоВыпускПродукции Тогда
		Возврат
	КонецЕсли;
		
	НоваяЗапись 									= ТаблицуДвиженийДляНДС.Добавить(); 
	НоваяЗапись.ДокументРегистратор					= Выборка.Регистратор;
	НоваяЗапись.ДокументПартии						= СтрокаОстатка.ДокументПоступления;
	НоваяЗапись.СчетФактура							= ?(СтруктураПараметров.ЭтоВыпускПродукции, Документы.СчетФактураПолученный.ПустаяСсылка(), СчетФактура);
	НоваяЗапись.АналитикаУчетаНоменклатуры			= Выборка.АналитикаУчетаНоменклатуры;
	НоваяЗапись.РеализацияПроизведенногоТовара		= СтруктураПараметров.ЭтоВыпускПродукции;
	НоваяЗапись.СуммаБезНДС							= СтруктураПараметров.СуммаБезНДС;
	НоваяЗапись.НДС									= СтруктураПараметров.НДС;
	НоваяЗапись.ВидЦенности 						= ОпределитьВидЦенности(Выборка.Номенклатура);
			    		
КонецПроцедуры // ДобавитьЗаписьВТаблицуДвиженийДляНДС()

Процедура ДобавитьЗаписьВТаблицуРеализацииВыпущеннойПродукции(Таблица, СтруктураПараметров, ДокументПоступления, ЭтоВыпускПродукции)
			
	НоваяЗапись 							= Таблица.Добавить(); 
	НоваяЗапись.ДокументРегистратор			= СтруктураПараметров.Регистратор;
	НоваяЗапись.ДокументВыпуска				= ДокументПоступления;
	НоваяЗапись.Продукция					= СтруктураПараметров.Номенклатура;
	НоваяЗапись.Характеристика				= СтруктураПараметров.Характеристика;
	НоваяЗапись.КоличествоПродукции			= СтруктураПараметров.Количество;
	
		    		
КонецПроцедуры // ДобавитьЗаписьВТаблицуРеализацииВыпущеннойПродукции()

Процедура ВыполнитьЗаписьДокументов(ТаблицаДокументовДляРаспределения, СоответствиеСтрокДляУдаления)
	
	Регистратор 				 = Неопределено;
	ПерваяИтерация 				 = Истина;
		
	Движения = Новый Структура;	
	ДополнительныеСвойства = Новый Структура;
	ДополнительныеСвойства.Вставить("ТаблицыДляДвижений", Новый Структура);
	
	ПерваяИтерация 			= Истина;	
	Регистратор	 			= Неопределено;
	Движения 				= Новый Структура;
	ДополнительныеСвойства	= Новый Структура;
	
	Для Каждого ТекущийДокумент из ТаблицаДокументовДляРаспределения Цикл

		СформироватьДвиженияПоРегистрамПартий (
					Движения, 
					ДополнительныеСвойства, 
					ТекущийДокумент,
					СоответствиеСтрокДляУдаления,
					Регистратор, 
					ПерваяИтерация,
					Ложь
					);
		
	КонецЦикла;
	
	Если Движения.Количество() > 0 Тогда
		СформироватьДвиженияПоРегистрамПартий (
						Движения, 
						ДополнительныеСвойства, 
						ТекущийДокумент,
						,
						, 
						,
						Истина
						);
	КонецЕсли;
	
	
	
КонецПроцедуры

// Процедура выполняет проведение документов по партиям товаров организаций.
//
// Параметры:
//	Номенклатура - СправочникСсылка.Номенклатуры - Отбор для проведения документов 
//  				только по указанной номенклатуре.
//	Характеристика - СправочникСсылка.ХарактеристикиНоменклатуры - Отбор для проведения документов 
//					только по указанной характеристике.
//	РассчитатьНДС - Булево - Условие, отвечающие за восстановление НДС в рамках 
//					восстановления последовательности партионного учета
//
Процедура ВыполнитьПомесячноеПроведениеДокументовПоПартиямТоваровОрганизаций(МенеджерВременныхТаблиц, ОбрабатываемыйМесяц)
	
	УстановитьБлокировкуРегистровТоваров(МенеджерВременныхТаблиц);
	
	СформироватьТаблицуКорректировок(МенеджерВременныхТаблиц);
	
	ТаблицаРаспределенныхВозвратов = РаспределитьВозвратыТоваровНаПартииРеализации(МенеджерВременныхТаблиц);
	
	ТаблицаОстатков							= ПолучитьТаблицуОстатков(МенеджерВременныхТаблиц, ТаблицаРаспределенныхВозвратов);
	ТаблицаДляДвиженийНДС					= ПолучитьПустуюТаблицуДляДвиженийНДС();
	ТаблицаРеализацияВыпущеннойПродукции	= ПолучитьПустуюТаблицуДляРеализацииВыпущеннойПродукции();
	
	ТаблицаРаспределенныхВозвратов.Очистить();
	
	СоответствиеСтрокДляУдаления = Новый Соответствие;

	// Формирование запроса для получения выборки по регистрам 
	// "Товары организаций" и "Товары переданные на комиссию"
	Запрос = ЗапросПоРегистрамТоваров(МенеджерВременныхТаблиц);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаПоРегистратору = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	ТаблицаАктуальныхЗаписей = ПолучитьТаблицуАктуальныхЗаписей(МенеджерВременныхТаблиц);	
	
	СчитатьГраницыАктуальныхПартий(МенеджерВременныхТаблиц);
	
	// Если существуют расходные документы, то необходимо выполнить распределение
	Если ВыборкаПоРегистратору.Количество() <> 0 Тогда
	
		// Распределение партий по количеству. 
		// При успешном подборе количества на расходный документ из приходного,
		// для строки взводится флаг - "ПартияПодобрана"
		Пока ВыборкаПоРегистратору.Следующий() Цикл
					
			РаспределитьДокументРасходаНаОстаткиТоваров(
						ТаблицаОстатков,
						ТаблицаАктуальныхЗаписей,
						ТаблицаДляДвиженийНДС,
						ТаблицаРеализацияВыпущеннойПродукции,
						ВыборкаПоРегистратору,
						СоответствиеСтрокДляУдаления
						);
							
		КонецЦикла;
								
		ОтборРаспределенныхПартий = Новый Структура;
		ОтборРаспределенныхПартий.Вставить ("ПартияПодобрана"	,	Истина);
		ТаблицаПодобранныхПартий = ТаблицаОстатков.НайтиСтроки(ОтборРаспределенныхПартий);
		
		//Проверка на наличие партий которые не еще распределены 
		Если ТребуетсяРаспределение(ТаблицаОстатков) Тогда
			// Анализ количественного распределения, если ТаблицаПартийДляРаспределения пустая,
			// то партии распределить невозможно, т.к. нет приходов на данные документы расхода,
			// иначе выполняется подбор с учетом аналитик партий
			Для Каждого ТекущаяПартия Из ТаблицаПодобранныхПартий Цикл
					
				РаспределитьДокументыРасходаНаПартииТоваров(
						ТаблицаОстатков,
						ТаблицаПодобранныхПартий,
						ТаблицаДляДвиженийНДС, 
						ТаблицаРеализацияВыпущеннойПродукции,
						ТекущаяПартия
						);
							
				КонецЦикла;
		КонецЕсли;
			
		ПроверитьТаблицуНаВзаимныеПеремещения(ТаблицаОстатков);
		
		НачатьТранзакцию();
		
		СформироватьДвиженияПоПартиямСобраннойПродукции(ТаблицаОстатков);
		СформироватьНаборДокументовДляРаспределенияНДС(ТаблицаДляДвиженийНДС);
		СформироватьНаборДокументовПоВыпущеннойПродукции(ТаблицаРеализацияВыпущеннойПродукции);
		
		ТаблицаОстатков.Сортировать("Регистратор");
		СоответствиеСтрокДляУдаления = Новый Соответствие;
		
		ОтборПоПартиям = Новый Структура;
		ОтборПоПартиям.Вставить("ЗаписьВРегистр"	, Истина);
		ТаблицаДокументовДляРаспределения = ТаблицаОстатков.НайтиСтроки(ОтборПоПартиям);
		ВыполнитьЗаписьДокументов(ТаблицаДокументовДляРаспределения, СоответствиеСтрокДляУдаления);
		
	КонецЕсли;
	
	// Восстановление последовательности документов за текущий месяц
	Запрос = Новый Запрос("
	|ВЫБРАТЬ
	|	ДОБАВИТЬКДАТЕ(Таблица.КонецМесяца, СЕКУНДА, 1)	КАК Период,
	|	Таблица.Номенклатура							КАК Номенклатура,
	|	Таблица.Характеристика							КАК Характеристика
	|ИЗ
	|	МинимальныеНачальныеГраницы КАК Таблица
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	Таблица.Период									КАК Период,
	|	Таблица.Номенклатура							КАК Номенклатура,
	|	Таблица.Характеристика							КАК Характеристика
	|ИЗ
	|	ГраницыАктуальныхЗаписей КАК Таблица
	|");

	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	
	Результат = Запрос.Выполнить();
	ВыборкаПоследовательности = Результат.Выбрать();
	
	Пока ВыборкаПоследовательности.Следующий() Цикл
		
		
		ОтборПоследовательности = Новый Структура ("Номенклатура, Характеристика");
		ОтборПоследовательности.Вставить ("Номенклатура", 		ВыборкаПоследовательности.Номенклатура);
		ОтборПоследовательности.Вставить ("Характеристика", 	ВыборкаПоследовательности.Характеристика);

		Последовательности.ПартииТоваровОрганизаций.УстановитьГраницу(ВыборкаПоследовательности.Период, ОтборПоследовательности);
	
	КонецЦикла;
	
	Если ТранзакцияАктивна() Тогда
		ЗафиксироватьТранзакцию();
	КонецЕсли;
	
КонецПроцедуры // ВыполнитьПроведениеДокументовПоПартиямТоваровОрганизаций()

Процедура ВыполнитьПроведениеДокументовПоПартиямТоваровОрганизаций() Экспорт
	
	ПервыйПроход = Истина;
	Месяц		 = "00010101000000";
	
	МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	
	// Проверка последовательности партионного учета на актуальность	
	Пока СформироватьВременнуюТаблицуНачальныеГраницыПартииТоваровОрганизаций(МенеджерВременныхТаблиц) Цикл
		
		СформироватьТаблицуГраницПартийПомесячно(МенеджерВременныхТаблиц);
		ОбрабатываемыйМесяц = ПолучитьОбрабатываемыйМесяц(МенеджерВременныхТаблиц);
		
		Если НЕ ПервыйПроход И Месяц >= ОбрабатываемыйМесяц Тогда
			Прервать;
		Иначе
			Месяц 		 = ОбрабатываемыйМесяц;
			ПервыйПроход = Ложь;
		КонецЕсли;
		
		ВыполнитьПомесячноеПроведениеДокументовПоПартиямТоваровОрганизаций(МенеджерВременныхТаблиц, ОбрабатываемыйМесяц);
		
		Если ТребуетсяРаспределениеДопРасходов(ОбрабатываемыйМесяц) Тогда
			РаспределитьДополнительныеРасходыНаПоступления(ОбрабатываемыйМесяц);
		КонецЕсли;
		
		СписатьДополнительныеРасходыНаРасходныеДокументы(ОбрабатываемыйМесяц);
		МенеджерВременныхТаблиц.Закрыть();
		
	КонецЦикла;
	
КонецПроцедуры

Функция ПолучитьМинимальныйМесяцНарушенияПоследовательности(ДатаОбработки = Неопределено) Экспорт
	
	МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	
	СформироватьВременнуюТаблицуНачальныеГраницыПартииТоваровОрганизаций(МенеджерВременныхТаблиц);
		
	СформироватьТаблицуГраницПартийПомесячно(МенеджерВременныхТаблиц);
	МесяцНарушенияПоследовательности = ПолучитьОбрабатываемыйМесяц(МенеджерВременныхТаблиц, ДатаОбработки);

	Возврат МесяцНарушенияПоследовательности;
	
КонецФункции

///////////////////////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ ФОРМИРОВАНИЯ ТАБЛИЦЫ ФИНАНСОВЫХ ПАРТИЙ

// Процедура заполняет финансовые партии в табличной части "Товары" документа поступления товаров.
//
// Параметры:
//	МенеджерВременныхТаблиц - требуется временные таблицы:
// 		ИсходнаяТаблицаТоваров(НомерСтроки, Номенклатура, Сделка, Подразделение, Менеджер) 
//		РеквизитыВидаЗапасов(Организация, ХозяйственнаяОперация, ТипЗапасов, Поставщик, Соглашение, Валюта, НалогообложениеНДС, ДеятельностьОблагаетсяЕНВД)
//	ТабличнаяЧастьТовары - Табличная часть документа
//	ВидЗапасовДокумента - СправочникСсылка.ВидыЗапасов - Найденный вид запасов (возвращаемое значение). Используется если параметр "ТабличнаяЧастьТовары" имеет значение Неопределено.
//		
Процедура ЗаполнитьАналитикуУчетаПартийВТабличнойЧастиТовары(МенеджерВременныхТаблиц, ТабличнаяЧастьТовары, АналитикаУчетаПартийДокумента = Неопределено) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	Запрос = Новый Запрос("
	|ВЫБРАТЬ
	|	ТаблицаТоваров.НомерСтроки 						   	КАК НомерСтроки,
	|	ТаблицаТоваров.Номенклатура 						КАК Номенклатура,
	|	ТаблицаТоваров.Поставщик							КАК Поставщик,
	|	ТаблицаТоваров.Контрагент							КАК Контрагент,
	|	ТаблицаТоваров.СтавкаНДС							КАК СтавкаНДС,
	|	ТаблицаТоваров.Номенклатура.ГруппаФинансовогоУчета 	КАК ГруппаФинансовогоУчета,
	|	АналитикаПартий.КлючАналитики 						КАК АналитикаУчетаПартий,
	|	ТаблицаТоваров.НалогообложениеНДС					КАК НалогообложениеНДС
	|ИЗ
	|	ИсходнаяТаблицаТоваров КАК ТаблицаТоваров
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ 
	|			РегистрСведений.АналитикаУчетаПартий КАК АналитикаПартий
	|		ПО 
	|			ТаблицаТоваров.Поставщик 							 = АналитикаПартий.Поставщик
	|			И ТаблицаТоваров.НалогообложениеНДС 				 = АналитикаПартий.НалогообложениеНДС
	|			И ТаблицаТоваров.Контрагент 				 	 	 = АналитикаПартий.Контрагент
	|			И ТаблицаТоваров.СтавкаНДС 				 			 = АналитикаПартий.СтавкаНДС
	|			И ТаблицаТоваров.Номенклатура.ГруппаФинансовогоУчета = АналитикаПартий.ГруппаФинансовогоУчета
	|  
	|	
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки");
		
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		
		Если ЗначениеЗаполнено(Выборка.АналитикаУчетаПартий) Тогда
			АналитикаУчетаПартий = Выборка.АналитикаУчетаПартий;
		Иначе
			АналитикаУчетаПартий = Справочники.КлючиАналитикиУчетаПартий.КлючиАналитикиУчетаПартийДокумента(
						Выборка
						);
		КонецЕсли;

		Если ТабличнаяЧастьТовары <> Неопределено Тогда
			СтрокаТаблицы = ТабличнаяЧастьТовары.Найти(Выборка.НомерСтроки, "НомерСтроки");
			СтрокаТаблицы.АналитикаУчетаПартий = АналитикаУчетаПартий;
		Иначе
			КлючАналитикиУчетаПартийДокумента = АналитикаУчетаПартий;
		КонецЕсли;
				
	КонецЦикла;
				
		
КонецПроцедуры // ЗаполнитьАналитикуУчетаПартийВТабличнойЧастиТовары()

///////////////////////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ФОРМИРОВАНИЯ ДВИЖЕНИЙ ПО ПОСЛЕДОВАТЕЛЬНОСТИ ПАРТИИ ТОВАРОВ ОРГАНИЗАЦИЙ

// Процедура формирования движений по регистру "Партии товаров организаций (последовательность)".
//
// Параметры:
//	ДокументОбъект - Текущий документ
//	Отказ - Булево - Признак отказа от проведения документа
//
Процедура ОтразитьПартииТоваровОрганизацийПоследовательность(ДополнительныеСвойства, ПринадлежностьПоследовательностям, Отказ) Экспорт
	
	ТаблицаРасчеты = ДополнительныеСвойства.ТаблицыДляДвижений.ТаблицаПартииТоваровОрганизацийПоследовательность;
	ПоследовательностьРасчеты = ПринадлежностьПоследовательностям.ПартииТоваровОрганизаций;
	ПоследовательностьРасчеты.Очистить();
	
	Если Отказ ИЛИ ТаблицаРасчеты.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	ПоследовательностьРасчеты.Отбор.Регистратор.Установить(ДополнительныеСвойства.ДляПроведения.Ссылка);
	
	Для Каждого СтрокаТаблицы Из ТаблицаРасчеты Цикл
		НоваяЗапись = ПоследовательностьРасчеты.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяЗапись, СтрокаТаблицы);
	КонецЦикла;
	
КонецПроцедуры // ОтразитьПартииТоваровОрганизацийПоследовательность()

///////////////////////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ФОРМИРОВАНИЯ РЕГЛАМЕНТНЫХ ДВИЖЕНИЙ ПО ПАРТИОННОМУ УЧЕТУ, УЧЕТУ ЗАТРАТ, НДС

Процедура ВыполнитьРегламентноеФормированиеДвиженийПоПартиямТоваров() Экспорт
	
	Если ПустаяСтрока(ИмяПользователя()) Тогда
		УстановитьПривилегированныйРежим(Истина);
	КонецЕсли;
	
	// Этап 1. Восстановление последовательности партионного учета
	ПартионныйУчетСервер.ВыполнитьПроведениеДокументовПоПартиямТоваровОрганизаций();
	
	//Этап3. Списание затрат на выпущенную продукцию которая была продана
	СформироватьДвиженияПоПартиямВыпущеннойПродукции();
	
	// Этап4. Формирование движений по НДС по данным, полученным на предыдущих этапах
	СформироватьДвиженияПоУчетуНДС();	
	
КонецПроцедуры // ВыполнитьРегламентноеФормированиеДвиженийПоПартиямТоваров()

Функция РаспределитьПропорциональноКоличеству(РаспределяемоеЗначение, КоличествоНорма, КоличествоФактическое)
	
	Если КоличествоНорма = 0 Тогда
		Результат = 0
	Иначе	
		Результат = Окр((РаспределяемоеЗначение * КоличествоФактическое ) / КоличествоНорма  ,3)
	КонецЕсли;
	
	Возврат Результат;
	
КонецФункции // РаспределитьПропорциональноКоличеству()	

Процедура СформироватьДвиженияПоПартиямВыпущеннойПродукции() Экспорт  
	
	НачатьТранзакцию();
	
	ТекстЗапроса ="
	|ВЫБРАТЬ
	|	ПартииТоваровОрганизаций.Количество,
	|	ПартииТоваровОрганизаций.Регистратор КАК Регистратор,
	|	ПартииТоваровОрганизаций.ДокументПоступления КАК ДокументВыпуска,
	|	ДокументыПоВыпущеннойПродукции.Продукция КАК Продукция,
	|	ДокументыПоВыпущеннойПродукции.Характеристика КАК Характеристика
	|ПОМЕСТИТЬ ВТВыпуск
	|ИЗ
	|	РегистрСведений.ДокументыПоВыпущеннойПродукции КАК ДокументыПоВыпущеннойПродукции
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ПартииТоваровОрганизаций КАК ПартииТоваровОрганизаций
	|		ПО ДокументыПоВыпущеннойПродукции.ДокументВыпуска = ПартииТоваровОрганизаций.ДокументПоступления
	|			И ДокументыПоВыпущеннойПродукции.Продукция = ПартииТоваровОрганизаций.АналитикаУчетаНоменклатуры.Номенклатура
	|			И ДокументыПоВыпущеннойПродукции.Характеристика = ПартииТоваровОрганизаций.АналитикаУчетаНоменклатуры.Характеристика
	|ГДЕ
	|	ДокументыПоВыпущеннойПродукции.КоличествоПродукции = 0
	|	И ПартииТоваровОрганизаций.Регистратор ССЫЛКА Документ.РеализацияТоваровУслуг
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТВыпуск.Регистратор.Дата КАК Период,
	|	ВТВыпуск.Регистратор КАК Регистратор,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
	|	ИСТИНА КАК Активность,
	|	ПартииЗатратНаВыпуск.Организация,
	|	ПартииЗатратНаВыпуск.Продукция,
	|	ПартииЗатратНаВыпуск.Характеристика,
	|	ПартииЗатратНаВыпуск.АналитикаУчетаНоменклатуры,
	|	ПартииЗатратНаВыпуск.ДокументВыпуска,
	|	ПартииЗатратНаВыпуск.ДокументПоступления,
	|	ПартииЗатратНаВыпуск.АналитикаУчетаПартий,
	|	ВТВыпуск.Количество,
	|	ЕСТЬNULL(ПартииЗатратНаВыпуск.Знаменатель, 0) КАК КоличествоПродукцииКРаспределению,
	|	СУММА(ЕСТЬNULL(ПартииЗатратНаВыпуск.Количество, 0)) КАК КоличествоКРаспределению,
	|	СУММА(ЕСТЬNULL(ПартииЗатратНаВыпуск.Стоимость, 0)) КАК СтоимостьКРаспределению,
	|	СУММА(ЕСТЬNULL(ПартииЗатратНаВыпуск.СтоимостьБезНДС, 0)) КАК СтоимостьБезНДСКРаспределению,
	|	СУММА(ЕСТЬNULL(ПартииЗатратНаВыпуск.СтоимостьРегл, 0)) КАК СтоимостьРеглКРаспределению,
	|	СУММА(ЕСТЬNULL(ПартииЗатратНаВыпуск.НДСРегл, 0)) КАК НДСРеглКРаспределению
	|ПОМЕСТИТЬ ВТРеализацияВыпуска
	|ИЗ
	|	ВТВыпуск КАК ВТВыпуск
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ПартииЗатратНаВыпуск КАК ПартииЗатратНаВыпуск
	|		ПО ВТВыпуск.ДокументВыпуска = ПартииЗатратНаВыпуск.ДокументВыпуска
	|			И ВТВыпуск.Продукция = ПартииЗатратНаВыпуск.Продукция
	|			И ВТВыпуск.Характеристика = ПартииЗатратНаВыпуск.Характеристика
	|
	|СГРУППИРОВАТЬ ПО
	|	ПартииЗатратНаВыпуск.Организация,
	|	ПартииЗатратНаВыпуск.АналитикаУчетаНоменклатуры,
	|	ПартииЗатратНаВыпуск.ДокументВыпуска,
	|	ПартииЗатратНаВыпуск.ДокументПоступления,
	|	ПартииЗатратНаВыпуск.АналитикаУчетаПартий,
	|	ВТВыпуск.Количество,
	|	ВТВыпуск.Регистратор,
	|	ВТВыпуск.Регистратор.Дата,
	|	ПартииЗатратНаВыпуск.Продукция,
	|	ПартииЗатратНаВыпуск.Характеристика,
	|	ЕСТЬNULL(ПартииЗатратНаВыпуск.Знаменатель, 0)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ДокументыПоВыпущеннойПродукции.ДокументРегистратор.Дата,
	|	ДокументыПоВыпущеннойПродукции.ДокументРегистратор,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход),
	|	ИСТИНА,
	|	ПартииЗатратНаВыпуск.Организация,
	|	ДокументыПоВыпущеннойПродукции.Продукция,
	|	ДокументыПоВыпущеннойПродукции.Характеристика,
	|	ПартииЗатратНаВыпуск.АналитикаУчетаНоменклатуры,
	|	ПартииЗатратНаВыпуск.ДокументВыпуска,
	|	ПартииЗатратНаВыпуск.ДокументПоступления,
	|	ПартииЗатратНаВыпуск.АналитикаУчетаПартий,
	|	ЕСТЬNULL(ДокументыПоВыпущеннойПродукции.КоличествоПродукции, 0),
	|	ЕСТЬNULL(ПартииЗатратНаВыпуск.Знаменатель, 0),
	|	СУММА(ЕСТЬNULL(ПартииЗатратНаВыпуск.Количество, 0)),
	|	СУММА(ЕСТЬNULL(ПартииЗатратНаВыпуск.Стоимость, 0)),
	|	СУММА(ЕСТЬNULL(ПартииЗатратНаВыпуск.СтоимостьБезНДС, 0)),
	|	СУММА(ЕСТЬNULL(ПартииЗатратНаВыпуск.СтоимостьРегл, 0)),
	|	СУММА(ЕСТЬNULL(ПартииЗатратНаВыпуск.НДСРегл, 0))
	|ИЗ
	|	РегистрСведений.ДокументыПоВыпущеннойПродукции КАК ДокументыПоВыпущеннойПродукции
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ПартииЗатратНаВыпуск КАК ПартииЗатратНаВыпуск
	|		ПО ДокументыПоВыпущеннойПродукции.Продукция = ПартииЗатратНаВыпуск.Продукция
	|			И ДокументыПоВыпущеннойПродукции.ДокументВыпуска = ПартииЗатратНаВыпуск.ДокументВыпуска
	|			И ДокументыПоВыпущеннойПродукции.Характеристика = ПартииЗатратНаВыпуск.Характеристика
	|ГДЕ
	|	ДокументыПоВыпущеннойПродукции.ДокументРегистратор ССЫЛКА Документ.РеализацияТоваровУслуг
	|	И ДокументыПоВыпущеннойПродукции.КоличествоПродукции <> 0
	|
	|СГРУППИРОВАТЬ ПО
	|	ПартииЗатратНаВыпуск.АналитикаУчетаНоменклатуры,
	|	ПартииЗатратНаВыпуск.ДокументВыпуска,
	|	ПартииЗатратНаВыпуск.ДокументПоступления,
	|	ПартииЗатратНаВыпуск.АналитикаУчетаПартий,
	|	ДокументыПоВыпущеннойПродукции.ДокументРегистратор,
	|	ПартииЗатратНаВыпуск.Организация,
	|	ДокументыПоВыпущеннойПродукции.Продукция,
	|	ДокументыПоВыпущеннойПродукции.Характеристика,
	|	ДокументыПоВыпущеннойПродукции.ДокументРегистратор.Дата,
	|	ЕСТЬNULL(ДокументыПоВыпущеннойПродукции.КоличествоПродукции, 0),
	|	ЕСТЬNULL(ПартииЗатратНаВыпуск.Знаменатель, 0)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТРеализацияВыпуска.Период КАК Период,
	|	ВТРеализацияВыпуска.Регистратор КАК Регистратор,
	|	ВТРеализацияВыпуска.ВидДвижения,
	|	ВТРеализацияВыпуска.Активность,
	|	ВТРеализацияВыпуска.Организация,
	|	ВТРеализацияВыпуска.Продукция,
	|	ВТРеализацияВыпуска.Характеристика,
	|	ВТРеализацияВыпуска.АналитикаУчетаНоменклатуры,
	|	ВТРеализацияВыпуска.ДокументВыпуска,
	|	ВТРеализацияВыпуска.ДокументПоступления,
	|	ВТРеализацияВыпуска.АналитикаУчетаПартий,
	|	ВТРеализацияВыпуска.Количество,
	|	МИНИМУМ(ВТРеализацияВыпуска.КоличествоКРаспределению) КАК КоличествоКРаспределению,
	|	МИНИМУМ(ВТРеализацияВыпуска.СтоимостьКРаспределению) КАК СтоимостьКРаспределению,
	|	МИНИМУМ(ВТРеализацияВыпуска.СтоимостьБезНДСКРаспределению) КАК СтоимостьБезНДСКРаспределению,
	|	МИНИМУМ(ВТРеализацияВыпуска.СтоимостьРеглКРаспределению) КАК СтоимостьРеглКРаспределению,
	|	МИНИМУМ(ВТРеализацияВыпуска.НДСРеглКРаспределению) КАК НДСРеглКРаспределению,
	|	МИНИМУМ(ВТРеализацияВыпуска.КоличествоПродукцииКРаспределению) КАК КоличествоПродукцииКРаспределению,
	|	ВЫБОР
	|		КОГДА ВТРеализацияВыпуска.Регистратор ССЫЛКА Документ.РеализацияТоваровУслуг
	|			ТОГДА ВТРеализацияВыпуска.Регистратор.НалогообложениеНДС
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ КАК НалогообложениеНДС
	|ИЗ
	|	ВТРеализацияВыпуска КАК ВТРеализацияВыпуска
	|
	|СГРУППИРОВАТЬ ПО
	|	ВТРеализацияВыпуска.Регистратор,
	|	ВТРеализацияВыпуска.Активность,
	|	ВТРеализацияВыпуска.Организация,
	|	ВТРеализацияВыпуска.Продукция,
	|	ВТРеализацияВыпуска.Характеристика,
	|	ВТРеализацияВыпуска.АналитикаУчетаНоменклатуры,
	|	ВТРеализацияВыпуска.ДокументВыпуска,
	|	ВТРеализацияВыпуска.ДокументПоступления,
	|	ВТРеализацияВыпуска.АналитикаУчетаПартий,
	|	ВТРеализацияВыпуска.Количество,
	|	ВТРеализацияВыпуска.Период,
	|	ВТРеализацияВыпуска.ВидДвижения,
	|	ВЫБОР
	|		КОГДА ВТРеализацияВыпуска.Регистратор ССЫЛКА Документ.РеализацияТоваровУслуг
	|			ТОГДА ВТРеализацияВыпуска.Регистратор.НалогообложениеНДС
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ
	|
	|УПОРЯДОЧИТЬ ПО
	|	Период
	|ИТОГИ ПО
	|	Регистратор
	|";
	
	Запрос = Новый Запрос;
	Запрос.Текст = ТекстЗапроса;
	
	МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаПоРегистратору = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	ТаблицаВыпущеннойПродукции = ПолучитьПустуюТаблицуДляРеализацииВыпущеннойПродукции();
	
	Пока ВыборкаПоРегистратору.Следующий() Цикл
		
		Движения = Новый Структура;
	
		ДополнительныеСвойства = Новый Структура;
		ДополнительныеСвойства.Вставить("ТаблицыДляДвижений", Новый Структура);
	
		Движения.Вставить("ПартииЗатратНаВыпуск", РегистрыНакопления.ПартииЗатратНаВыпуск.СоздатьНаборЗаписей());
		Движения.ПартииЗатратНаВыпуск.Отбор.Регистратор.Установить(ВыборкаПоРегистратору.Регистратор);
		ДополнительныеСвойства.ТаблицыДляДвижений.Вставить("ТаблицаПартииЗатратНаВыпуск", Движения.ПартииЗатратНаВыпуск.ВыгрузитьКолонки());
		
		ВыборкаПоДетальнымЗаписям = ВыборкаПоРегистратору.Выбрать();
	
		Пока ВыборкаПоДетальнымЗаписям.Следующий() Цикл
			
			Если ТипЗнч(ВыборкаПоДетальнымЗаписям.ДокументПоступления) = Тип("ДокументСсылка.СборкаТоваров") 
			Тогда
			
				НоваяЗапись 							= ТаблицаВыпущеннойПродукции.Добавить(); 
				НоваяЗапись.ДокументРегистратор			= ВыборкаПоДетальнымЗаписям.Регистратор;
				НоваяЗапись.ДокументВыпуска				= ВыборкаПоДетальнымЗаписям.ДокументПоступления;
				НоваяЗапись.Продукция					= ВыборкаПоДетальнымЗаписям.Продукция;
				НоваяЗапись.Характеристика				= ВыборкаПоДетальнымЗаписям.Характеристика;
				НоваяЗапись.КоличествоПродукции			= ВыборкаПоДетальнымЗаписям.Количество;
			    								
				Продолжить;
				
			КонецЕсли;
			
			НаборЗаписейПартииЗатратНаВыпуск = ДополнительныеСвойства.ТаблицыДляДвижений.ТаблицаПартииЗатратНаВыпуск;
			ЗаписьНабораПартииЗатратНаВыпуск = НаборЗаписейПартииЗатратНаВыпуск.Добавить();
			
			ЗаписьНабораПартииЗатратНаВыпуск.Активность 		= ВыборкаПоДетальнымЗаписям.Активность;
			ЗаписьНабораПартииЗатратНаВыпуск.ВидДвижения 		= ВыборкаПоДетальнымЗаписям.ВидДвижения;
			ЗаписьНабораПартииЗатратНаВыпуск.Период	 			= ВыборкаПоДетальнымЗаписям.Период;
			ЗаписьНабораПартииЗатратНаВыпуск.Регистратор		= ВыборкаПоДетальнымЗаписям.Регистратор;
			
			ЗаписьНабораПартииЗатратНаВыпуск.Организация					= ВыборкаПоДетальнымЗаписям.Организация;
			ЗаписьНабораПартииЗатратНаВыпуск.Продукция						= ВыборкаПоДетальнымЗаписям.Продукция;
			ЗаписьНабораПартииЗатратНаВыпуск.Характеристика					= ВыборкаПоДетальнымЗаписям.Характеристика;
			ЗаписьНабораПартииЗатратНаВыпуск.АналитикаУчетаНоменклатуры		= ВыборкаПоДетальнымЗаписям.АналитикаУчетаНоменклатуры;
			ЗаписьНабораПартииЗатратНаВыпуск.ДокументВыпуска				= ВыборкаПоДетальнымЗаписям.ДокументВыпуска;
			ЗаписьНабораПартииЗатратНаВыпуск.ДокументПоступления			= ВыборкаПоДетальнымЗаписям.ДокументПоступления;
			ЗаписьНабораПартииЗатратНаВыпуск.АналитикаУчетаПартий			= ВыборкаПоДетальнымЗаписям.АналитикаУчетаПартий;
			ЗаписьНабораПартииЗатратНаВыпуск.НалогообложениеНДС				= ВыборкаПоДетальнымЗаписям.НалогообложениеНДС;
			
			ЗаписьНабораПартииЗатратНаВыпуск.Знаменатель = ВыборкаПоДетальнымЗаписям.Количество;
			
			ЗаписьНабораПартииЗатратНаВыпуск.Количество 		= РаспределитьПропорциональноКоличеству (
																			ВыборкаПоДетальнымЗаписям.КоличествоКРаспределению, 
																			ВыборкаПоДетальнымЗаписям.КоличествоПродукцииКРаспределению,
																			ВыборкаПоДетальнымЗаписям.Количество
																			);
			
			ЗаписьНабораПартииЗатратНаВыпуск.Стоимость 		  	= РаспределитьПропорциональноКоличеству (
																			ВыборкаПоДетальнымЗаписям.СтоимостьКРаспределению, 
																			ВыборкаПоДетальнымЗаписям.КоличествоПродукцииКРаспределению,
																			ВыборкаПоДетальнымЗаписям.Количество
																			);
			ЗаписьНабораПартииЗатратНаВыпуск.СтоимостьБезНДС	= РаспределитьПропорциональноКоличеству (
																			ВыборкаПоДетальнымЗаписям.СтоимостьБезНДСКРаспределению, 
																			ВыборкаПоДетальнымЗаписям.КоличествоПродукцииКРаспределению,
																			ВыборкаПоДетальнымЗаписям.Количество
																			);

			ЗаписьНабораПартииЗатратНаВыпуск.НДСРегл			= РаспределитьПропорциональноКоличеству (
																			ВыборкаПоДетальнымЗаписям.НДСРеглКРаспределению, 
																			ВыборкаПоДетальнымЗаписям.КоличествоПродукцииКРаспределению,
																			ВыборкаПоДетальнымЗаписям.Количество
																			);
			ЗаписьНабораПартииЗатратНаВыпуск.СтоимостьРегл      = РаспределитьПропорциональноКоличеству (
																			ВыборкаПоДетальнымЗаписям.СтоимостьРеглКРаспределению, 
																			ВыборкаПоДетальнымЗаписям.КоличествоПродукцииКРаспределению,
																			ВыборкаПоДетальнымЗаписям.Количество
																			);
																			
		КонецЦикла;
		
		Движения.ПартииЗатратНаВыпуск.Загрузить (ДополнительныеСвойства.ТаблицыДляДвижений.ТаблицаПартииЗатратНаВыпуск);
	
		ЗаписатьНаборыЗаписей(Движения);
																		
	КонецЦикла;	
	
	НаборЗаписей = РегистрыСведений.ДокументыПоВыпущеннойПродукции.СоздатьНаборЗаписей();
	НаборЗаписей.Очистить();
	НаборЗаписей.Записать();
	
	ЗафиксироватьТранзакцию();
	
	Если ТаблицаВыпущеннойПродукции.Количество() > 0 Тогда
		НаборЗаписей.Загрузить(ТаблицаВыпущеннойПродукции);
		НаборЗаписей.Записать();
		СформироватьДвиженияПоПартиямВыпущеннойПродукции();
	КонецЕсли;
	
КонецПроцедуры // СформироватьДвиженияПоПартиямВыпущеннойПродукции()

///////////////////////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ФОРМИРОВАНИЯ ДВИЖЕНИЙ ПО РАСЧЕТУ НДС

Процедура СформироватьНаборЗаписейДляНДС(ДополнительныеСвойства, ТаблицаАктуальныхЗаписейНДС, СчетФактура, СтруктураПараметров, ИмяКниги)
	
	// Формирование движений по регистру "НДС записи книги продаж"
	НаборЗаписей = ДополнительныеСвойства.ТаблицыДляДвижений.ТаблицаНДСЗаписиКнигиПродаж;
	
	Отбор = Новый Структура;
	Отбор.Вставить("Регистратор", 	СтруктураПараметров.Регистратор);
	Отбор.Вставить("ИмяКниги", 		ИмяКниги);
				
	МассивАктуальныхСтрок = ТаблицаАктуальныхЗаписейНДС.НайтиСтроки(Отбор); 
				
	Для Каждого АктуальнаяЗапись Из МассивАктуальныхСтрок Цикл
		ЗаписьНабора = НаборЗаписей.Добавить();		
		ЗаполнитьЗначенияСвойств(ЗаписьНабора, АктуальнаяЗапись);		
	КонецЦикла; 

	ЗаписьНабора 					= 	НаборЗаписей.Добавить();
	ЗаписьНабора.Организация 		=	СтруктураПараметров.Организация;
	ЗаписьНабора.Покупатель 		=	СтруктураПараметров.Поставщик;
	ЗаписьНабора.СчетФактура 		=	СтруктураПараметров.ДокументПоступления;
	ЗаписьНабора.СуммаБезНДС 		=	СтруктураПараметров.СуммаБезНДС;
	ЗаписьНабора.НДС 				=	СтруктураПараметров.НДС;
	ЗаписьНабора.Событие			= 	Перечисления.СобытияПоНДСПродажи.ВосстановлениеНДС;
	ЗаписьНабора.Период 			=   СтруктураПараметров.Период;
	ЗаписьНабора.ВидЦенности 		=   ОпределитьВидЦенности(СтруктураПараметров.Номенклатура);
	ЗаписьНабора.Активность			= 	СтруктураПараметров.Активность;
	ЗаписьНабора.Регистратор		=   СтруктураПараметров.Регистратор;
	ЗаписьНабора.СтавкаНДС			=   СтруктураПараметров.СтавкаНДС;
	ЗаписьНабора.ДатаСобытия		=   СтруктураПараметров.Период;
 	
КонецПроцедуры // СформироватьНаборЗаписейДляНДС()

Функция ПолучитьТаблицуАктуальныхЗаписейНДС()
	
	ТекстЗапроса = "
	|ВЫБРАТЬ
	|	НДСЗаписиКнигиПродаж.Регистратор,
	|	НДСЗаписиКнигиПродаж.Организация,
	|	NULL,
	|	НДСЗаписиКнигиПродаж.СчетФактура,
	|	НДСЗаписиКнигиПродаж.ВидЦенности,
	|	НДСЗаписиКнигиПродаж.СтавкаНДС,
	|	NULL,
	|	НДСЗаписиКнигиПродаж.ДатаОплаты,
	|	НДСЗаписиКнигиПродаж.ДокументОплаты,
	|	НДСЗаписиКнигиПродаж.Событие,
	|	НДСЗаписиКнигиПродаж.ДатаСобытия,
	|	НДСЗаписиКнигиПродаж.ЗаписьДополнительногоЛиста,
	|	НДСЗаписиКнигиПродаж.КорректируемыйПериод,
	|	НДСЗаписиКнигиПродаж.ДоговорКонтрагента,
	|	МАКСИМУМ(НДСЗаписиКнигиПродаж.СуммаБезНДС)  КАК СуммаБезНДС,
	|	МАКСИМУМ(НДСЗаписиКнигиПродаж.НДС)			КАК НДС,
	|	НДСЗаписиКнигиПродаж.Покупатель	 			КАК Покупатель,
	|	""КнигаПродаж"" 							КАК ИмяКниги,
	|	НДСЗаписиКнигиПродаж.Период,
	|	НДСЗаписиКнигиПродаж.Активность				КАК Активность,
	|	НДСЗаписиКнигиПродаж.НомерСтроки
	|ИЗ
	|	РегистрСведений.НДСДокументыДляРаспределения КАК НДСДокументыДляРаспределения
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.НДСЗаписиКнигиПродаж КАК НДСЗаписиКнигиПродаж
	|		ПО НДСДокументыДляРаспределения.ДокументРегистратор = НДСЗаписиКнигиПродаж.Регистратор
	|ГДЕ
	|	НДСЗаписиКнигиПродаж.Событие <> ЗНАЧЕНИЕ(Перечисление.СобытияПоНДСПродажи.ВосстановлениеНДС)
	|
	|СГРУППИРОВАТЬ ПО
	|	НДСЗаписиКнигиПродаж.ВидЦенности,
	|	НДСЗаписиКнигиПродаж.Событие,
	|	НДСЗаписиКнигиПродаж.Регистратор,
	|	НДСЗаписиКнигиПродаж.КорректируемыйПериод,
	|	НДСЗаписиКнигиПродаж.ДоговорКонтрагента,
	|	НДСЗаписиКнигиПродаж.СчетФактура,
	|	НДСЗаписиКнигиПродаж.Организация,
	|	НДСЗаписиКнигиПродаж.ЗаписьДополнительногоЛиста,
	|	НДСЗаписиКнигиПродаж.ДатаОплаты,
	|	НДСЗаписиКнигиПродаж.ДокументОплаты,
	|	НДСЗаписиКнигиПродаж.СтавкаНДС,
	|	НДСЗаписиКнигиПродаж.ДатаСобытия,
	|	НДСЗаписиКнигиПродаж.Покупатель,
	|	НДСЗаписиКнигиПродаж.Период,
	|	НДСЗаписиКнигиПродаж.Активность,
	|	НДСЗаписиКнигиПродаж.НомерСтроки
	|";
	
	Запрос = Новый Запрос;
	Запрос.Текст = ТекстЗапроса;
	Результат = Запрос.Выполнить();
	
	Возврат Результат.Выгрузить();	
	
КонецФункции

Функция СформироватьТекстЗапросаПоРегистрамНДС()
	
	ТекстЗапроса = "
	|ВЫБРАТЬ
	|	НДСДокументыДляРаспределения.ДокументРегистратор,
	|	ПартииЗатратНаВыпуск.ДокументПоступления,
	|	ПартииЗатратНаВыпуск.АналитикаУчетаНоменклатуры.Номенклатура 	КАК Номенклатура,
	|	ПартииЗатратНаВыпуск.АналитикаУчетаНоменклатуры.Характеристика 	КАК Характеристика,
	|	НДСДокументыДляРаспределения.ВидЦенности,
	|	ПартииЗатратНаВыпуск.АналитикаУчетаНоменклатуры,
	|	НДСДокументыДляРаспределения.РеализацияСоСтавкойНДС0
	|
	|ПОМЕСТИТЬ ВТПоступлениеМатериалов
	|
	|ИЗ
	|	РегистрСведений.НДСДокументыДляРаспределения КАК НДСДокументыДляРаспределения
	|		ЛЕВОЕ СОЕДИНЕНИЕ 
	|			РегистрНакопления.ПартииЗатратНаВыпуск КАК ПартииЗатратНаВыпуск
	|		ПО 
	|			НДСДокументыДляРаспределения.ДокументРегистратор = ПартииЗатратНаВыпуск.Регистратор
	|			И НДСДокументыДляРаспределения.ДокументПартии = ПартииЗатратНаВыпуск.ДокументВыпуска
	|			И НДСДокументыДляРаспределения.АналитикаУчетаНоменклатуры.Номенклатура = ПартииЗатратНаВыпуск.Продукция
	|			И НДСДокументыДляРаспределения.АналитикаУчетаНоменклатуры.Характеристика = ПартииЗатратНаВыпуск.Характеристика
	|			И (НДСДокументыДляРаспределения.РеализацияПроизведенногоТовара = ИСТИНА)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТПоступлениеМатериалов.ДокументРегистратор.Дата 						КАК Период,
	|	ИСТИНА 																	КАК Активность,
	|	ПартииТоваровОрганизаций.Организация 									КАК Организация,
	|	ВТПоступлениеМатериалов.ДокументПоступления.Контрагент 					КАК Поставщик,
	|	ВЫБОР
	|		КОГДА ВТПоступлениеМатериалов.ДокументРегистратор ССЫЛКА Документ.РеализацияТоваровУслуг
	|			ТОГДА ВТПоступлениеМатериалов.ДокументРегистратор.Контрагент
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)
	|	КОНЕЦ 																			КАК Покупатель,
	|	ПартииТоваровОрганизаций.СтоимостьБезНДС 										КАК СуммаБезНДС,
	|	ПартииТоваровОрганизаций.Стоимость - ПартииТоваровОрганизаций.СтоимостьБезНДС 	КАК НДС,
	|	ДокументыОснования.Ссылка КАК СчетФактура,
	|	ВТПоступлениеМатериалов.ДокументРегистратор,
	|	ВТПоступлениеМатериалов.ДокументПоступления,
	|	ПартииТоваровОрганизаций.АналитикаУчетаПартий.НалогообложениеНДС 					КАК ФинПартияНалогообложениеНДС,
	|	ПартииТоваровОрганизаций.НалогообложениеНДС 									КАК НалогообложениеНДС,
	|	ВТПоступлениеМатериалов.ВидЦенности,
	|	НДССостояниеРеализации0.Состояние 												КАК ПодтвержденНДСПоСтавке0,
	|	НДССостояниеРеализации0.СтавкаНДС,
	|	НДССостояниеРеализации0.ДатаПодтверждения 										КАК ДатаПодтвержденияПоСтавке0,
	|	ВТПоступлениеМатериалов.АналитикаУчетаНоменклатуры,
	|	ВТПоступлениеМатериалов.РеализацияСоСтавкойНДС0,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(НДССостояниеРеализации0.Состояние, 0) <> 0
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ 																			КАК Экспорт
	|
	|ПОМЕСТИТЬ ВТПоступлениеТоваров
	|
	|ИЗ
	|	ВТПоступлениеМатериалов КАК ВТПоступлениеМатериалов
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ 
	|			Документ.СчетФактураПолученный.ДокументыОснования КАК ДокументыОснования
	|		ПО 
	|			ВТПоступлениеМатериалов.ДокументПоступления = ДокументыОснования.ДокументОснование
	|			И НЕ ДокументыОснования.Ссылка ЕСТЬ NULL  
	|
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ 
	|			РегистрНакопления.ПартииТоваровОрганизаций КАК ПартииТоваровОрганизаций
	|		ПО 
	|			ВТПоступлениеМатериалов.ДокументПоступления = ПартииТоваровОрганизаций.Регистратор
	|			И ВТПоступлениеМатериалов.Номенклатура = ПартииТоваровОрганизаций.АналитикаУчетаНоменклатуры.Номенклатура
	|			И ВТПоступлениеМатериалов.Характеристика = ПартииТоваровОрганизаций.АналитикаУчетаНоменклатуры.Характеристика
	|
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ 
	|			РегистрСведений.НДССостояниеРеализации0 КАК НДССостояниеРеализации0
	|		ПО 
	|			ВТПоступлениеМатериалов.ДокументРегистратор = НДССостояниеРеализации0.Регистратор
	|			И НДССостояниеРеализации0.Состояние <> ЗНАЧЕНИЕ(Перечисление.НДССостоянияРеализация0.ОжидаетсяПодтверждение)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	НДСДокументыДляРаспределения.ДокументРегистратор.Дата,
	|	ИСТИНА,
	|	ПартииТоваровОрганизаций.Организация,
	|	ВЫБОР
	|		КОГДА ПартииТоваровОрганизаций.ДокументПоступления ССЫЛКА Документ.ПоступлениеТоваровУслуг
	|			ТОГДА ПартииТоваровОрганизаций.ДокументПоступления.Контрагент
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА ПартииТоваровОрганизаций.Регистратор ССЫЛКА Документ.РеализацияТоваровУслуг
	|			ТОГДА ПартииТоваровОрганизаций.Регистратор.Контрагент
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)
	|	КОНЕЦ,
	|	ПартииТоваровОрганизаций.СтоимостьБезНДС,
	|	ПартииТоваровОрганизаций.Стоимость - ПартииТоваровОрганизаций.СтоимостьБезНДС,
	|	НДСДокументыДляРаспределения.СчетФактура,
	|	НДСДокументыДляРаспределения.ДокументРегистратор,
	|	НДСДокументыДляРаспределения.ДокументПартии,
	|	ПартииТоваровОрганизаций.АналитикаУчетаПартий.НалогообложениеНДС,
	|	ПартииТоваровОрганизаций.НалогообложениеНДС,
	|	НДСДокументыДляРаспределения.ВидЦенности,
	|	НДССостояниеРеализации0.Состояние,
	|	НДССостояниеРеализации0.СтавкаНДС,
	|	НДССостояниеРеализации0.ДатаПодтверждения,
	|	НДСДокументыДляРаспределения.АналитикаУчетаНоменклатуры,
	|	НДСДокументыДляРаспределения.РеализацияСоСтавкойНДС0,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(НДССостояниеРеализации0.Состояние, 0) <> 0
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ
	|ИЗ
	|	РегистрСведений.НДСДокументыДляРаспределения КАК НДСДокументыДляРаспределения
	|
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ 
	|			РегистрНакопления.ПартииТоваровОрганизаций КАК ПартииТоваровОрганизаций
	|		ПО 
	|			НДСДокументыДляРаспределения.ДокументПартии = ПартииТоваровОрганизаций.ДокументПоступления
	|			И НДСДокументыДляРаспределения.АналитикаУчетаНоменклатуры.Номенклатура = ПартииТоваровОрганизаций.АналитикаУчетаНоменклатуры.Номенклатура
	|			И НДСДокументыДляРаспределения.АналитикаУчетаНоменклатуры.Характеристика = ПартииТоваровОрганизаций.АналитикаУчетаНоменклатуры.Характеристика
	|			И НДСДокументыДляРаспределения.ДокументРегистратор = ПартииТоваровОрганизаций.Регистратор
	|			И НДСДокументыДляРаспределения.РеализацияСоСтавкойНДС0 = ИСТИНА
	|			И НДСДокументыДляРаспределения.РеализацияПроизведенногоТовара = ЛОЖЬ
	|
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ 
	|			РегистрСведений.НДССостояниеРеализации0 КАК НДССостояниеРеализации0
	|		ПО 
	|			НДСДокументыДляРаспределения.ДокументРегистратор = НДССостояниеРеализации0.Регистратор
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	НДСДокументыДляРаспределения.ДокументРегистратор.Дата,
	|	ИСТИНА,
	|	ПартииТоваровОрганизаций.Организация,
	|	ВЫБОР
	|		КОГДА ПартииТоваровОрганизаций.ДокументПоступления ССЫЛКА Документ.ПоступлениеТоваровУслуг
	|			ТОГДА ПартииТоваровОрганизаций.ДокументПоступления.Контрагент
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА ПартииТоваровОрганизаций.Регистратор ССЫЛКА Документ.РеализацияТоваровУслуг
	|			ТОГДА ПартииТоваровОрганизаций.Регистратор.Контрагент
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)
	|	КОНЕЦ,
	|	ПартииТоваровОрганизаций.СтоимостьБезНДС,
	|	ПартииТоваровОрганизаций.Стоимость - ПартииТоваровОрганизаций.СтоимостьБезНДС,
	|	НДСДокументыДляРаспределения.СчетФактура,
	|	НДСДокументыДляРаспределения.ДокументРегистратор,
	|	НДСДокументыДляРаспределения.ДокументПартии,
	|	ПартииТоваровОрганизаций.АналитикаУчетаПартий.НалогообложениеНДС,
	|	ПартииТоваровОрганизаций.НалогообложениеНДС,
	|	НДСДокументыДляРаспределения.ВидЦенности,
	|	NULL,
	|	ПартииТоваровОрганизаций.АналитикаУчетаПартий.СтавкаНДС,
	|	NULL,
	|	НДСДокументыДляРаспределения.АналитикаУчетаНоменклатуры,
	|	НДСДокументыДляРаспределения.РеализацияСоСтавкойНДС0,
	|	ЛОЖЬ
	|ИЗ
	|	РегистрСведений.НДСДокументыДляРаспределения КАК НДСДокументыДляРаспределения
	|
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ 
	|			РегистрНакопления.ПартииТоваровОрганизаций КАК ПартииТоваровОрганизаций
	|		ПО 
	|			НДСДокументыДляРаспределения.ДокументПартии = ПартииТоваровОрганизаций.ДокументПоступления
	|			И НДСДокументыДляРаспределения.АналитикаУчетаНоменклатуры.Номенклатура = ПартииТоваровОрганизаций.АналитикаУчетаНоменклатуры.Номенклатура
	|			И НДСДокументыДляРаспределения.АналитикаУчетаНоменклатуры.Характеристика = ПартииТоваровОрганизаций.АналитикаУчетаНоменклатуры.Характеристика
	|			И НДСДокументыДляРаспределения.ДокументРегистратор = ПартииТоваровОрганизаций.Регистратор
	|			И НДСДокументыДляРаспределения.РеализацияСоСтавкойНДС0 = ЛОЖЬ
	|			И ПартииТоваровОрганизаций.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|			И НДСДокументыДляРаспределения.РеализацияПроизведенногоТовара = ЛОЖЬ
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ВТПоступлениеМатериалов.ДокументРегистратор.Дата,
	|	ИСТИНА,
	|	ПартииТоваровОрганизаций.Организация,
	|	ВТПоступлениеМатериалов.ДокументПоступления.Контрагент,
	|	ВЫБОР
	|		КОГДА ВТПоступлениеМатериалов.ДокументРегистратор ССЫЛКА Документ.РеализацияТоваровУслуг
	|			ТОГДА ВТПоступлениеМатериалов.ДокументРегистратор.Контрагент
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)
	|	КОНЕЦ,
	|	ПартииТоваровОрганизаций.СтоимостьБезНДС,
	|	ПартииТоваровОрганизаций.Стоимость - ПартииТоваровОрганизаций.СтоимостьБезНДС,
	|	ДокументыОснования.Ссылка,
	|	ВТПоступлениеМатериалов.ДокументРегистратор,
	|	ВТПоступлениеМатериалов.ДокументПоступления,
	|	ПартииТоваровОрганизаций.АналитикаУчетаПартий.НалогообложениеНДС,
	|	ПартииТоваровОрганизаций.НалогообложениеНДС,
	|	ВТПоступлениеМатериалов.ВидЦенности,
	|	NULL,
	|	ПартииТоваровОрганизаций.АналитикаУчетаПартий.СтавкаНДС,
	|	NULL,
	|	ВТПоступлениеМатериалов.АналитикаУчетаНоменклатуры,
	|	NULL,
	|	ЛОЖЬ
	|ИЗ
	|	ВТПоступлениеМатериалов КАК ВТПоступлениеМатериалов
	|
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ 
	|			Документ.СчетФактураПолученный.ДокументыОснования КАК ДокументыОснования
	|		ПО 
	|			ВТПоступлениеМатериалов.ДокументПоступления = ДокументыОснования.ДокументОснование
	|			И НЕ ДокументыОснования.Ссылка ЕСТЬ NULL
	|	
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ 
	|			РегистрНакопления.ПартииТоваровОрганизаций КАК ПартииТоваровОрганизаций
	|		ПО 
	|			ВТПоступлениеМатериалов.ДокументПоступления = ПартииТоваровОрганизаций.Регистратор
	|			И ВТПоступлениеМатериалов.Номенклатура = ПартииТоваровОрганизаций.АналитикаУчетаНоменклатуры.Номенклатура
	|			И ВТПоступлениеМатериалов.Характеристика = ПартииТоваровОрганизаций.АналитикаУчетаНоменклатуры.Характеристика
	|
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ 
	|			РегистрСведений.НДСДокументыДляРаспределения КАК НДСДокументыДляРаспределения
	|		ПО 
	|			ВТПоступлениеМатериалов.ДокументРегистратор = НДСДокументыДляРаспределения.ДокументРегистратор
	|			И НДСДокументыДляРаспределения.РеализацияПроизведенногоТовара = ИСТИНА
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТПоступлениеТоваров.Период,
	|	ВТПоступлениеТоваров.Активность,
	|	ВТПоступлениеТоваров.Организация,
	|	ВТПоступлениеТоваров.Поставщик,
	|	ВТПоступлениеТоваров.Покупатель,
	|	МАКСИМУМ(ВТПоступлениеТоваров.СуммаБезНДС) 						КАК СуммаБезНДС,
	|	МАКСИМУМ(ВТПоступлениеТоваров.НДС) 								КАК НДС,
	|	ВТПоступлениеТоваров.СчетФактура,
	|	ВТПоступлениеТоваров.ДокументРегистратор 						КАК Регистратор,
	|	ВТПоступлениеТоваров.ДокументПоступления 						КАК ДокументПоступления,
	|	ВТПоступлениеТоваров.ФинПартияНалогообложениеНДС,
	|	ВТПоступлениеТоваров.НалогообложениеНДС,
	|	ВТПоступлениеТоваров.ВидЦенности,
	|	ВТПоступлениеТоваров.ПодтвержденНДСПоСтавке0,
	|	ВТПоступлениеТоваров.СтавкаНДС,
	|	ВЫБОР
	|		КОГДА ВТПоступлениеТоваров.Экспорт = ЛОЖЬ
	|			ТОГДА ВЫБОР
	|					КОГДА ВТПоступлениеТоваров.ДокументПоступления.Дата > ВТПоступлениеТоваров.СчетФактура.ДатаПолучения
	|						ТОГДА ВТПоступлениеТоваров.ДокументПоступления.Дата
	|					ИНАЧЕ ВТПоступлениеТоваров.СчетФактура.ДатаПолучения
	|				КОНЕЦ
	|		ИНАЧЕ ВТПоступлениеТоваров.ДатаПодтвержденияПоСтавке0
	|	КОНЕЦ 															КАК ДатаПодтверждения,
	|	ВТПоступлениеТоваров.АналитикаУчетаНоменклатуры,
	|	ВТПоступлениеТоваров.РеализацияСоСтавкойНДС0,
	|	ВТПоступлениеТоваров.АналитикаУчетаНоменклатуры.Номенклатура 	КАК Номенклатура,
	|	ВТПоступлениеТоваров.Экспорт
	|ИЗ
	|	ВТПоступлениеТоваров КАК ВТПоступлениеТоваров
	|
	|СГРУППИРОВАТЬ ПО
	|	ВТПоступлениеТоваров.Период,
	|	ВТПоступлениеТоваров.Активность,
	|	ВТПоступлениеТоваров.Организация,
	|	ВТПоступлениеТоваров.СчетФактура,
	|	ВТПоступлениеТоваров.ДокументРегистратор,
	|	ВТПоступлениеТоваров.ДокументПоступления,
	|	ВТПоступлениеТоваров.ФинПартияНалогообложениеНДС,
	|	ВТПоступлениеТоваров.НалогообложениеНДС,
	|	ВТПоступлениеТоваров.Поставщик,
	|	ВТПоступлениеТоваров.Покупатель,
	|	ВТПоступлениеТоваров.ВидЦенности,
	|	ВТПоступлениеТоваров.ПодтвержденНДСПоСтавке0,
	|	ВТПоступлениеТоваров.СтавкаНДС,
	|	ВТПоступлениеТоваров.АналитикаУчетаНоменклатуры,
	|	ВТПоступлениеТоваров.РеализацияСоСтавкойНДС0,
	|	ВТПоступлениеТоваров.АналитикаУчетаНоменклатуры.Номенклатура,
	|	ВТПоступлениеТоваров.Экспорт,
	|	ВЫБОР
	|		КОГДА ВТПоступлениеТоваров.Экспорт = ЛОЖЬ
	|			ТОГДА ВЫБОР
	|					КОГДА ВТПоступлениеТоваров.ДокументПоступления.Дата > ВТПоступлениеТоваров.СчетФактура.ДатаПолучения
	|						ТОГДА ВТПоступлениеТоваров.ДокументПоступления.Дата
	|					ИНАЧЕ ВТПоступлениеТоваров.СчетФактура.ДатаПолучения
	|				КОНЕЦ
	|		ИНАЧЕ ВТПоступлениеТоваров.ДатаПодтвержденияПоСтавке0
	|	КОНЕЦ
	|ИТОГИ
	|	МАКСИМУМ(ДокументПоступления)
	|ПО
	|	Регистратор";
	
	Возврат ТекстЗапроса	
	
КонецФункции

Процедура СформироватьДвиженияПоУчетуНДС() Экспорт
	
	НачатьТранзакцию();
	
	Запрос = Новый Запрос;
			
	Запрос.Текст = СформироватьТекстЗапросаПоРегистрамНДС();
	
	Результат = Запрос.Выполнить();
	
	ВыборкаПоРегистратору = Результат.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	ТаблицаАктуальныхЗаписейНДС = ПолучитьТаблицуАктуальныхЗаписейНДС();
	
	Пока ВыборкаПоРегистратору.Следующий() Цикл
		
		Движения = Новый Структура;
		ДополнительныеСвойства = Новый Структура;
		ДополнительныеСвойства.Вставить("ТаблицыДляДвижений", Новый Структура);

		Движения.Вставить("НДСЗаписиКнигиПокупок", РегистрыНакопления.НДСЗаписиКнигиПокупок.СоздатьНаборЗаписей());
		Движения.НДСЗаписиКнигиПокупок.Отбор.Регистратор.Установить(ВыборкаПоРегистратору.Регистратор);
		ДополнительныеСвойства.ТаблицыДляДвижений.Вставить("ТаблицаНДСЗаписиКнигиПокупок", Движения.НДСЗаписиКнигиПокупок.ВыгрузитьКолонки());		

		Движения.Вставить("НДСЗаписиКнигиПродаж", РегистрыНакопления.НДСЗаписиКнигиПродаж.СоздатьНаборЗаписей());
		Движения.НДСЗаписиКнигиПродаж.Отбор.Регистратор.Установить(ВыборкаПоРегистратору.Регистратор);
		ДополнительныеСвойства.ТаблицыДляДвижений.Вставить("ТаблицаНДСЗаписиКнигиПродаж", Движения.НДСЗаписиКнигиПродаж.ВыгрузитьКолонки());		
		
		Выборка = ВыборкаПоРегистратору.Выбрать();
		
		Пока Выборка.Следующий() Цикл
			
			Если Выборка.ФинПартияНалогообложениеНДС = Перечисления.ТипыНалогообложенияНДС.ПродажаОблагаетсяНДС Тогда
				СформироватьНаборЗаписейДляНДС (ДополнительныеСвойства, ТаблицаАктуальныхЗаписейНДС, Выборка.СчетФактура, Выборка, "КнигаПродаж")
			КонецЕсли;
		
			Если Выборка.НалогообложениеНДС = Перечисления.ТипыНалогообложенияНДС.ПродажаОблагаетсяНДС Тогда
			// Документ продажи облагается НДС, поэтому формируются движения "приход" по данным "Корр. вид деятельности"
					
				НаборЗаписей = ДополнительныеСвойства.ТаблицыДляДвижений.ТаблицаНДСЗаписиКнигиПокупок;
				
				Отбор = Новый Структура;
				Отбор.Вставить("Регистратор", 	Выборка.Регистратор);
				Отбор.Вставить("ИмяКниги", 		"КнигаПокупок");
				
				ЗаписьНабора 					= 	НаборЗаписей.Добавить();
				ЗаписьНабора.Организация 		=	Выборка.Организация;
				ЗаписьНабора.Регистратор		=   Выборка.Регистратор;
				ЗаписьНабора.Поставщик 			=	Выборка.Поставщик;
				ЗаписьНабора.СчетФактура 		=	Выборка.ДокументПоступления;
				ЗаписьНабора.СуммаБезНДС 		=	Выборка.СуммаБезНДС;
				ЗаписьНабора.НДС 				=	Выборка.НДС;
				ЗаписьНабора.Событие			= 	Перечисления.СобытияПоНДСПокупки.ПредъявленНДСКВычету;
				ЗаписьНабора.Период 			=   Выборка.Период;
				ЗаписьНабора.Активность			= 	Выборка.Активность;
				ЗаписьНабора.ВидЦенности 		=   ОпределитьВидЦенности(Выборка.Номенклатура);
				ЗаписьНабора.СтавкаНДС			=   Выборка.СтавкаНДС;
				ЗаписьНабора.ДатаСобытия 		=   Выборка.Период;
	     		
			КонецЕсли;
				
            			
		КонецЦикла;
		
		Движения.НДСЗаписиКнигиПокупок.Загрузить(ДополнительныеСвойства.ТаблицыДляДвижений.ТаблицаНДСЗаписиКнигиПокупок);	
		Движения.НДСЗаписиКнигиПродаж.Загрузить	(ДополнительныеСвойства.ТаблицыДляДвижений.ТаблицаНДСЗаписиКнигиПродаж);

		// Запись наборов записей в базу.
		ЗаписатьНаборыЗаписей(Движения);	

	КонецЦикла;
	
	НаборЗаписей = РегистрыСведений.НДСДокументыДляРаспределения.СоздатьНаборЗаписей();
	НаборЗаписей.Очистить();
	НаборЗаписей.Записать();
	
	ЗафиксироватьТранзакцию();  
		
КонецПроцедуры // СформироватьДвиженияПоУчетуНДС()

///////////////////////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ФОРМИРОВАНИЯ ДВИЖЕНИЙ ПО ДОПОЛНИТЕЛЬНЫМ РАСХОДАМ

Функция ТекстЗапросаДвижениеПартийРасходов()
	
	ТекстЗапроса = "
	|ВЫБРАТЬ
	|	ПартииПрочихРасходов.Регистратор КАК Регистратор
	|ИЗ
	|	РегистрНакопления.ПартииПрочихРасходов КАК ПартииПрочихРасходов
	|ГДЕ
	|	ПартииПрочихРасходов.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|	И ПартииПрочихРасходов.Период МЕЖДУ &НачалоПериода И &КонецПериода
	|	И (ПартииПрочихРасходов.Организация = &Организация
	|		ИЛИ &ПоВсемОрганизациям
	|		)
	|	И СтатьяРасходов.ВариантРаспределенияРасходов
	|		= ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаСебестоимостьТоваров)
	|
	|СГРУППИРОВАТЬ ПО
	|	ПартииПрочихРасходов.Регистратор
	|";
	
	Возврат ТекстЗапроса;
	
КонецФункции 

Функция ПолучитьРаспределенияЗаМесяц(Месяц, Организация = Неопределено, ТекстЗапроса)
	
	Запрос = Новый Запрос;
	Запрос.Текст = ТекстЗапроса;
	Запрос.УстановитьПараметр("НачалоПериода"	, НачалоМесяца(Месяц));
	Запрос.УстановитьПараметр("КонецПериода"	, КонецМесяца(Месяц));
	Запрос.УстановитьПараметр("Организация", 	Организация);

	Если Организация = Неопределено Тогда
		Запрос.УстановитьПараметр("ПоВсемОрганизациям", Истина);
	Иначе	
		Запрос.УстановитьПараметр("ПоВсемОрганизациям", Ложь);
	КонецЕсли;
	
	Результат = Запрос.Выполнить();
	
	Возврат Результат.Выгрузить();
	
КонецФункции

Функция ТекстЗапросаВтТаблицаРасходовПоДокументу()

	ТекстЗапроса ="
	| ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ПрочиеРасходы.Организация 										 КАК Организация,
	|	ПрочиеРасходы.Подразделение 									 КАК Подразделение,
	|	ПрочиеРасходы.СтатьяРасходов 									 КАК СтатьяРасходов,
	|	ПрочиеРасходы.ДокументПоступленияРасходов						 КАК ДокументПоступленияРасходов,
	|	ПрочиеРасходы.АналитикаУчетаПартий	 							 КАК АналитикаУчетаПартий,
	|	ПрочиеРасходы.АналитикаРасходов 								 КАК АналитикаРасходов,
	|	ПрочиеРасходы.СтатьяРасходов.ПравилоРаспределенияНаСебестоимость КАК ПравилоРаспределения,
	|	ПрочиеРасходы.СтоимостьОстаток 									 КАК Стоимость,
	|	ПрочиеРасходы.СтоимостьБезНДСОстаток 							 КАК СтоимостьБезНДС,
	|	ПрочиеРасходы.СтоимостьРеглОстаток 								 КАК СтоимостьРегл,
	|	ПрочиеРасходы.НДСРеглОстаток 									 КАК НДСРегл
	|
	|ПОМЕСТИТЬ ВтРасходы
	|
	|ИЗ
	|	РегистрНакопления.ПартииПрочихРасходов.Остатки(&Граница,
	|		(Организация = &Организация
	|			ИЛИ &ПоВсемОрганизациям)
	|		И СтатьяРасходов.ВариантРаспределенияРасходов 
	|			= ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаСебестоимостьТоваров)
	|	) КАК ПрочиеРасходы
	|ГДЕ
	|	ПрочиеРасходы.СтоимостьОстаток <> 0
	|	ИЛИ ПрочиеРасходы.СтоимостьБезНДСОстаток <> 0
	|	ИЛИ ПрочиеРасходы.СтоимостьРеглОстаток <> 0
	|	И ПрочиеРасходы.СтатьяРасходов.ВариантРаспределенияРасходов 
	|			= ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаСебестоимостьТоваров)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	| ВЫБРАТЬ 
	|	ПрочиеРасходы.Организация,
	|	ПрочиеРасходы.Подразделение,
	|	ПрочиеРасходы.СтатьяРасходов,
	|	ПрочиеРасходы.ДокументПоступленияРасходов,
	|	ПрочиеРасходы.АналитикаУчетаПартий,
	|	ПрочиеРасходы.АналитикаРасходов,
	|	ПрочиеРасходы.СтатьяРасходов.ПравилоРаспределенияНаСебестоимость,
	|	ПрочиеРасходы.Стоимость,
	|	ПрочиеРасходы.СтоимостьБезНДС,
	|	ПрочиеРасходы.СтоимостьРегл,
	|	ПрочиеРасходы.НДСРегл
	|
	|ИЗ
	|	РегистрНакопления.ПартииПрочихРасходов КАК ПрочиеРасходы
	|
	|ГДЕ
	|	(ПрочиеРасходы.Организация = &Организация ИЛИ &ПоВсемОрганизациям)
	|	И (ПрочиеРасходы.Период > &ДатаНачала И ПрочиеРасходы.Период <= &ДатаОкончания)
	|	И ПрочиеРасходы.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВтРасходы.Организация,
	|	ВтРасходы.Подразделение,
	|	ВтРасходы.СтатьяРасходов,
	|	ВтРасходы.ДокументПоступленияРасходов,
	|	ВтРасходы.АналитикаУчетаПартий,
	|	ВтРасходы.АналитикаРасходов,
	|	ВтРасходы.ПравилоРаспределения,
	|	СУММА(ВтРасходы.Стоимость) 				КАК Стоимость,
	|	СУММА(ВтРасходы.СтоимостьБезНДС) 		КАК СтоимостьБезНДС,
	|	СУММА(ВтРасходы.СтоимостьРегл) 			КАК СтоимостьРегл,
	|	СУММА(ВтРасходы.НДСРегл) 				КАК НДСРегл
	|
	|ПОМЕСТИТЬ ВТТаблицаРасходов
	|
	|ИЗ
	|	ВтРасходы КАК ВтРасходы
	|
	|СГРУППИРОВАТЬ ПО
	|	ВтРасходы.АналитикаРасходов,
	|	ВтРасходы.ПравилоРаспределения,
	|	ВтРасходы.ДокументПоступленияРасходов,
	|	ВтРасходы.Подразделение,
	|	ВтРасходы.Организация,
	|	ВтРасходы.АналитикаУчетаПартий,
	|	ВтРасходы.СтатьяРасходов
	|
	|;
	|////////////////////////////////////////////////////////////////////////
	|";
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаСпособовРаспределения()
	
	ТекстЗапроса = "
	|ВЫБРАТЬ
	|	ТаблицаРасходы.Организация КАК Организация,
	|	ТаблицаРасходы.ПравилоРаспределения КАК ПравилоРаспределения,
	|	ТаблицаРасходы.АналитикаРасходов КАК АналитикаРасходов,
	|	ВЫБОР КОГДА ТаблицаРасходы.АналитикаРасходов = ЗНАЧЕНИЕ(Документ.ЗаказПоставщику.ПустаяСсылка)
	|		ИЛИ ТаблицаРасходы.АналитикаРасходов = ЗНАЧЕНИЕ(Документ.ЗаказНаПеремещение.ПустаяСсылка)
	|		ИЛИ ТаблицаРасходы.АналитикаРасходов = ЗНАЧЕНИЕ(Документ.ПоступлениеТоваровУслуг.ПустаяСсылка)
	|		ИЛИ ТаблицаРасходы.АналитикаРасходов = ЗНАЧЕНИЕ(Документ.ПеремещениеТоваров.ПустаяСсылка)
	|		ИЛИ ТаблицаРасходы.АналитикаРасходов = ЗНАЧЕНИЕ(Документ.ПередачаТоваровМеждуОрганизациями.ПустаяСсылка)
	|		ИЛИ ТаблицаРасходы.АналитикаРасходов = ЗНАЧЕНИЕ(Справочник.Склады.ПустаяСсылка)
	|		ИЛИ ТаблицаРасходы.АналитикаРасходов = ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка)
	|	ТОГДА
	|		Ложь
	|	ИНАЧЕ
	|		Истина
	|	КОНЕЦ КАК АналитикаЗаполнена
	|	
	|ПОМЕСТИТЬ ТаблицаСпособовРаспределения
	|
	|ИЗ
	|	ВтТаблицаРасходов КАК ТаблицаРасходы
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаРасходы.Организация,
	|	ТаблицаРасходы.ПравилоРаспределения,
	|	ТаблицаРасходы.АналитикаРасходов,
	|	ВЫБОР КОГДА ТаблицаРасходы.АналитикаРасходов = ЗНАЧЕНИЕ(Документ.ЗаказПоставщику.ПустаяСсылка)
	|		ИЛИ ТаблицаРасходы.АналитикаРасходов = ЗНАЧЕНИЕ(Документ.ЗаказНаПеремещение.ПустаяСсылка)
	|		ИЛИ ТаблицаРасходы.АналитикаРасходов = ЗНАЧЕНИЕ(Документ.ПоступлениеТоваровУслуг.ПустаяСсылка)
	|		ИЛИ ТаблицаРасходы.АналитикаРасходов = ЗНАЧЕНИЕ(Документ.ПеремещениеТоваров.ПустаяСсылка)
	|		ИЛИ ТаблицаРасходы.АналитикаРасходов = ЗНАЧЕНИЕ(Документ.ПередачаТоваровМеждуОрганизациями.ПустаяСсылка)
	|		ИЛИ ТаблицаРасходы.АналитикаРасходов = ЗНАЧЕНИЕ(Справочник.Склады.ПустаяСсылка)
	|		ИЛИ ТаблицаРасходы.АналитикаРасходов = ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка)
	|	ТОГДА
	|		Ложь
	|	ИНАЧЕ
	|		Истина
	|	КОНЕЦ
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	АналитикаРасходов
	|;
	|///////////////////////////////////////////////////////////////////////////
	|";
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаДокументов()
	
	ТекстЗапроса = "
	|// Поступление товаров по конкретным документам закупки или по заказам поставщикам.
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ДанныеДокумента.Ссылка 							КАК Ссылка,
	|	ТаблицаСпособовРаспределения.АналитикаРасходов 	КАК АналитикаРасходов
	|
	|ПОМЕСТИТЬ ТаблицаДокументов
	|ИЗ
	|	Документ.ПоступлениеТоваровУслуг КАК ДанныеДокумента
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		ТаблицаСпособовРаспределения КАК ТаблицаСпособовРаспределения
	|	ПО
	|		ТаблицаСпособовРаспределения.АналитикаЗаполнена
	|		И (ДанныеДокумента.Ссылка = ТаблицаСпособовРаспределения.АналитикаРасходов
	|			ИЛИ ДанныеДокумента.ЗаказПоставщику = ТаблицаСпособовРаспределения.АналитикаРасходов
	|			)
	|
	|ГДЕ 
	|	ДанныеДокумента.Проведен
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|// Поступления товаров по любым документам закупки.
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ДанныеДокумента.Ссылка КАК Ссылка,
	|	ТаблицаСпособовРаспределения.АналитикаРасходов КАК АналитикаРасходов
	|ИЗ
	|	Документ.ПоступлениеТоваровУслуг КАК ДанныеДокумента
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		ТаблицаСпособовРаспределения КАК ТаблицаСпособовРаспределения
	|	ПО
	|		ТаблицаСпособовРаспределения.АналитикаРасходов = ЗНАЧЕНИЕ(Документ.ПоступлениеТоваровУслуг.ПустаяСсылка)
	|		ИЛИ ТаблицаСпособовРаспределения.АналитикаРасходов = ЗНАЧЕНИЕ(Документ.ЗаказПоставщику.ПустаяСсылка)
	|ГДЕ
	|	ДанныеДокумента.Дата МЕЖДУ &ДатаНачала И &ДатаОкончания
	|	И (ДанныеДокумента.ЗаказПоставщику <> ЗНАЧЕНИЕ(Документ.ЗаказПоставщику.ПустаяСсылка) 
	|		И ТаблицаСпособовРаспределения.АналитикаРасходов = ЗНАЧЕНИЕ(Документ.ЗаказПоставщику.ПустаяСсылка)
	|		ИЛИ ТаблицаСпособовРаспределения.АналитикаРасходов = ЗНАЧЕНИЕ(Документ.ПоступлениеТоваровУслуг.ПустаяСсылка)
	|	) И ДанныеДокумента.Проведен
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|// Перемещения товаров по конкретным документам перемещения или по заказам на перемещение.
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ДанныеДокумента.Ссылка КАК Ссылка,
	|	ТаблицаСпособовРаспределения.АналитикаРасходов КАК АналитикаРасходов
    |
	|ИЗ
	|	Документ.ПеремещениеТоваров КАК ДанныеДокумента
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		ТаблицаСпособовРаспределения КАК ТаблицаСпособовРаспределения
	|	ПО
	|		ТаблицаСпособовРаспределения.АналитикаЗаполнена
	|		И (
	|			ДанныеДокумента.Ссылка = ТаблицаСпособовРаспределения.АналитикаРасходов
	|			ИЛИ ДанныеДокумента.ЗаказНаПеремещение = ТаблицаСпособовРаспределения.АналитикаРасходов
	|		)
	|
	|ГДЕ 
	|	ДанныеДокумента.Проведен
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|// Перемещения товаров по любым документам перемещения или по любым заказам на перемещение.
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ДанныеДокумента.Ссылка КАК Ссылка,
	|	ТаблицаСпособовРаспределения.АналитикаРасходов КАК АналитикаРасходов
    |
	|ИЗ
	|	Документ.ПеремещениеТоваров КАК ДанныеДокумента
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		ТаблицаСпособовРаспределения КАК ТаблицаСпособовРаспределения
	|	ПО
	|		ТаблицаСпособовРаспределения.АналитикаРасходов = ЗНАЧЕНИЕ(Документ.ПеремещениеТоваров.ПустаяСсылка)
	|		ИЛИ ТаблицаСпособовРаспределения.АналитикаРасходов = ЗНАЧЕНИЕ(Документ.ЗаказНаПеремещение.ПустаяСсылка)
	|ГДЕ
	|	ДанныеДокумента.Дата МЕЖДУ &ДатаНачала И &ДатаОкончания
	|	И (
	|		(ДанныеДокумента.ЗаказНаПеремещение <> ЗНАЧЕНИЕ(Документ.ЗаказНаПеремещение.ПустаяСсылка) 
	|		И ТаблицаСпособовРаспределения.АналитикаРасходов = ЗНАЧЕНИЕ(Документ.ЗаказНаПеремещение.ПустаяСсылка))
	|		ИЛИ ТаблицаСпособовРаспределения.АналитикаРасходов = ЗНАЧЕНИЕ(Документ.ПеремещениеТоваров.ПустаяСсылка)
	|	   ) И ДанныеДокумента.Проведен
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|// Передачи товаров между организациями.
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ДанныеДокумента.Ссылка КАК Ссылка,
	|	ТаблицаСпособовРаспределения.АналитикаРасходов КАК АналитикаРасходов
	|
	|ИЗ
	|	Документ.ПередачаТоваровМеждуОрганизациями КАК ДанныеДокумента
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		ТаблицаСпособовРаспределения КАК ТаблицаСпособовРаспределения
	|	ПО
	|		ДанныеДокумента.Ссылка = ТаблицаСпособовРаспределения.АналитикаРасходов
	|
	|ГДЕ 
	|	ДанныеДокумента.Проведен
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ДанныеДокумента.Ссылка КАК Ссылка,
	|	ТаблицаСпособовРаспределения.АналитикаРасходов КАК АналитикаРасходов
	|
	|ИЗ
	|	Документ.ПередачаТоваровМеждуОрганизациями КАК ДанныеДокумента
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		ТаблицаСпособовРаспределения КАК ТаблицаСпособовРаспределения
	|	ПО
	|		ТаблицаСпособовРаспределения.АналитикаРасходов 
	|			= ЗНАЧЕНИЕ(Документ.ПередачаТоваровМеждуОрганизациями.ПустаяСсылка)
	|ГДЕ
	|	ДанныеДокумента.Дата МЕЖДУ &ДатаНачала И &ДатаОкончания
	|	И ДанныеДокумента.Проведен
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Ссылка
	|;
	|///////////////////////////////////////////////////////////////////////////////////	
	|";
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаПоступленияТоваров()
	
	ТекстЗапроса = "
	|ВЫБРАТЬ // Формирование ВТ для распределения по определенной номенклатуре или складу
	|	Партии.Организация 												КАК Организация,
	|	Партии.АналитикаУчетаНоменклатуры 								КАК АналитикаУчетаНоменклатуры,
	|	Партии.ВидЗапасов 												КАК ВидЗапасов,
	|	Партии.АналитикаУчетаПартий,
	|	Партии.ДокументПоступления,
	|	Партии.КоличествоОстаток 										КАК Количество,
	|	Партии.СтоимостьОстаток 										КАК Стоимость
	|
	|ПОМЕСТИТЬ ВтПоступленияТоваров
	|ИЗ
	|	РегистрНакопления.ПартииТоваровОрганизаций.Остатки(&Граница,
	|	(Организация = &Организация
	|		ИЛИ &ПоВсемОрганизациям)
	|	) КАК Партии
	|
	|ГДЕ
	|	Партии.ВидЗапасов.ТипЗапасов <> ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.КомиссионныйТовар)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	Партии.Организация 												КАК Организация,
	|	Партии.АналитикаУчетаНоменклатуры								КАК АналитикаУчетаНоменклатуры,
	|	Партии.ВидЗапасов 												КАК ВидЗапасов,
	|	Партии.АналитикаУчетаПартий,
	|	Партии.ДокументПоступления,
	|	СУММА(Партии.КоличествоПриход)									КАК Количество,
	|	СУММА(Партии.СтоимостьПриход)									КАК Стоимость
	|
	|ИЗ
	|	РегистрНакопления.ПартииТоваровОрганизаций.Обороты(&ДатаНачала, &ДатаОкончания, Регистратор,
	|	(Организация = &Организация
	|			ИЛИ &ПоВсемОрганизациям)
	|	) КАК Партии
	|ГДЕ
	|	(
	|		Партии.Регистратор ССЫЛКА Документ.ПоступлениеТоваровУслуг
	|		ИЛИ Партии.Регистратор ССЫЛКА Документ.ПередачаТоваровМеждуОрганизациями
	|		ИЛИ Партии.Регистратор ССЫЛКА Документ.ПеремещениеТоваров
	|		ИЛИ Партии.Регистратор ССЫЛКА Документ.СборкаТоваров
	|	)
	|	И Партии.ВидЗапасов.ТипЗапасов <> ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.КомиссионныйТовар)
	|
	|СГРУППИРОВАТЬ ПО
	|	Партии.Организация,
	|	Партии.АналитикаУчетаНоменклатуры,
	|	Партии.ВидЗапасов,
	|	Партии.АналитикаУчетаПартий,
	|	Партии.ДокументПоступления
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	АналитикаУчетаНоменклатуры,
	|	ВидЗапасов,
	|	АналитикаУчетаПартий,
	|	ДокументПоступления
	|
	|;
	|/////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ 
	|	ТаблицаДокументов.АналитикаРасходов								КАК АналитикаРасходов,
	|	Партии.Организация												КАК Организация,
	|	Партии.АналитикаУчетаНоменклатуры								КАК АналитикаУчетаНоменклатуры,
	|	Партии.ВидЗапасов												КАК ВидЗапасов,
	|	Партии.АналитикаУчетаПартий										КАК АналитикаУчетаПартий, 
	|	Партии.ДокументПоступления										КАК ДокументПоступления, 
	|	СУММА(Партии.Количество)										КАК Количество,
	|	СУММА(Партии.Стоимость)											КАК Стоимость
	|
	|ПОМЕСТИТЬ ТаблицаПоступленияТоваров
	|
	|ИЗ
	|	РегистрНакопления.ПартииТоваровОрганизаций КАК Партии
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		ТаблицаДокументов КАК ТаблицаДокументов
	|	ПО
	|		Партии.Регистратор = ТаблицаДокументов.Ссылка
	|	
	|ГДЕ
	|	Партии.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|	И (Партии.Организация = &Организация
	|		ИЛИ &ПоВсемОрганизациям)
	|	И (Партии.АналитикаУчетаНоменклатуры, Партии.ВидЗапасов, Партии.АналитикаУчетаПартий) В (
	|		ВЫБРАТЬ
	|			ВтПоступленияТоваров.АналитикаУчетаНоменклатуры,
	|			ВтПоступленияТоваров.ВидЗапасов,
	|			ВтПоступленияТоваров.АналитикаУчетаПартий
	|		ИЗ
	|			ВтПоступленияТоваров КАК ВтПоступленияТоваров
	|		)
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаДокументов.АналитикаРасходов,
	|	Партии.Организация,
	|	Партии.АналитикаУчетаНоменклатуры,
	|	Партии.ВидЗапасов,
	|	Партии.АналитикаУчетаПартий,
	|	Партии.ДокументПоступления,
	|	Партии.Регистратор,
	|	ТаблицаДокументов.Ссылка
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ 
	|	ТаблицаСпособовРаспределения.АналитикаРасходов							КАК АналитикаРасходов,
	|	ВтПоступленияТоваров.Организация										КАК Организация,
	|	ВтПоступленияТоваров.АналитикаУчетаНоменклатуры							КАК АналитикаУчетаНоменклатуры,
	|	ВтПоступленияТоваров.ВидЗапасов											КАК ВидЗапасов,
	|	ВтПоступленияТоваров.АналитикаУчетаПартий								КАК АналитикаУчетаПартий,
	|	ВтПоступленияТоваров.ДокументПоступления								КАК ДокументПоступления,
	|	СУММА(ВтПоступленияТоваров.Количество)									КАК Количество,
	|	СУММА(ВтПоступленияТоваров.Стоимость)									КАК Стоимость
	|ИЗ
	|	ВтПоступленияТоваров КАК ВтПоступленияТоваров
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		РегистрСведений.АналитикаУчетаНоменклатуры КАК АналитикаНоменклатуры
	|	ПО
	|		ВтПоступленияТоваров.АналитикаУчетаНоменклатуры = АналитикаНоменклатуры.КлючАналитики
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		ТаблицаСпособовРаспределения КАК ТаблицаСпособовРаспределения
	|	ПО
	|		ВтПоступленияТоваров.Организация = ТаблицаСпособовРаспределения.Организация
	|		И (ТаблицаСпособовРаспределения.АналитикаРасходов = АналитикаНоменклатуры.Склад
	|			ИЛИ ТаблицаСпособовРаспределения.АналитикаРасходов = АналитикаНоменклатуры.Номенклатура
	|			ИЛИ ТаблицаСпособовРаспределения.АналитикаРасходов = ЗНАЧЕНИЕ(Справочник.Склады.ПустаяСсылка)
	|			ИЛИ ТаблицаСпособовРаспределения.АналитикаРасходов = ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка))
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаСпособовРаспределения.АналитикаРасходов,
	|	ВтПоступленияТоваров.Организация,
	|	ВтПоступленияТоваров.АналитикаУчетаНоменклатуры,
	|	ВтПоступленияТоваров.ВидЗапасов,
	|	ВтПоступленияТоваров.АналитикаУчетаПартий,
	|	ВтПоступленияТоваров.ДокументПоступления
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	АналитикаРасходов
	|;
	|///////////////////////////////////////////////////////////////////////////////////
	|";
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаБазыРаспределения()
	
	ТекстЗапроса = "
	|ВЫБРАТЬ
	|	ТаблицаСпособовРаспределения.Организация							КАК Организация,
	|	ТаблицаСпособовРаспределения.ПравилоРаспределения					КАК ПравилоРаспределения,
	|	ТаблицаСпособовРаспределения.АналитикаРасходов						КАК АналитикаРасходов,
	|	ТаблицаПоступленияТоваров.АналитикаУчетаНоменклатуры				КАК АналитикаУчетаНоменклатуры,
	|	ТаблицаПоступленияТоваров.ВидЗапасов								КАК ВидЗапасов,
	|	ВЫБОР
	|		КОГДА ТаблицаСпособовРаспределения.ПравилоРаспределения 
	|			= ЗНАЧЕНИЕ(Перечисление.ПравилаРаспределенияНаСебестоимостьТоваров.ПропорциональноКоличеству)
	|		ТОГДА 
	|			ЕСТЬNULL(ТаблицаПоступленияТоваров.Количество, 0)
	|		ИНАЧЕ 
	|			ЕСТЬNULL(ТаблицаПоступленияТоваров.Стоимость, 0)
	|	КОНЕЦ																КАК База,
	|	ТаблицаПоступленияТоваров.АналитикаУчетаПартий						КАК АналитикаУчетаПартий,
	|	ТаблицаПоступленияТоваров.ДокументПоступления						КАК ДокументПоступления,
	|	ТаблицаПоступленияТоваров.Количество								КАК Количество
	|ИЗ
	|	ТаблицаСпособовРаспределения КАК ТаблицаСпособовРаспределения
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ 
	|			ТаблицаПоступленияТоваров КАК ТаблицаПоступленияТоваров
	|		ПО 
	|			ТаблицаСпособовРаспределения.АналитикаРасходов	= ТаблицаПоступленияТоваров.АналитикаРасходов
	|			И ТаблицаСпособовРаспределения.Организация		= ТаблицаПоступленияТоваров.Организация
	|
	|ИТОГИ
	|	СУММА(База)
	|ПО
	|	АналитикаРасходов
	|;
	|////////////////////////////////////////////////////////////////////////////////
	|";
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаРасходов()
	
	ТекстЗапроса = "
	|ВЫБРАТЬ
	|	&Период																	КАК Период,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)									КАК ВидДвижения,
	|	ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыНаСкладах) КАК РазделУчета,
	|	ТаблицаРасходы.Организация												КАК Организация,
	|	ТаблицаРасходы.Подразделение											КАК Подразделение,
	|	ТаблицаРасходы.СтатьяРасходов											КАК СтатьяРасходовСписания,
	|	ТаблицаРасходы.АналитикаРасходов										КАК АналитикаРасходов,
	|	ТаблицаРасходы.ДокументПоступленияРасходов								КАК ДокументПоступленияРасходов,
	|	ТаблицаРасходы.АналитикаУчетаПартий										КАК АналитикаУчетаПартий,
	|	СУММА(ТаблицаРасходы.Стоимость)											КАК Стоимость,
	|	СУММА(ТаблицаРасходы.СтоимостьБезНДС)									КАК СтоимостьБезНДС,
	|	СУММА(ТаблицаРасходы.СтоимостьРегл)										КАК СтоимостьРегл,
	|	СУММА(ТаблицаРасходы.НДСРегл)											КАК НДСРегл,
	|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ЗакупкаУПоставщика)			КАК ХозяйственнаяОперация
	|ИЗ
	|	ВтТаблицаРасходов КАК ТаблицаРасходы
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаРасходы.Организация,
	|	ТаблицаРасходы.Подразделение,
	|	ТаблицаРасходы.СтатьяРасходов,
	|	ТаблицаРасходы.АналитикаРасходов,
	|	ТаблицаРасходы.ДокументПоступленияРасходов,
	|	ТаблицаРасходы.АналитикаУчетаПартий
	|
	|;
	|////////////////////////////////////////////////////////////////////////////////
	|";
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаАктуальныеЗаписиСебестоимости()
	
	ТекстЗапроса ="
	|ВЫБРАТЬ
	|	СебестоимостьТоваров.Период,
	|	СебестоимостьТоваров.Регистратор,
	|	СебестоимостьТоваров.Активность,
	|	СебестоимостьТоваров.ВидДвижения,
	|	СебестоимостьТоваров.АналитикаУчетаНоменклатуры,
	|	СебестоимостьТоваров.РазделУчета,
	|	СебестоимостьТоваров.ВидЗапасов,
	|	СебестоимостьТоваров.Организация,
	|	СебестоимостьТоваров.Количество,
	|	СебестоимостьТоваров.Стоимость,
	|	СебестоимостьТоваров.СтоимостьБезНДС,
	|	СебестоимостьТоваров.СуммаДопРасходов,
	|	СебестоимостьТоваров.СуммаДопРасходовБезНДС,
	|	СебестоимостьТоваров.СтоимостьРегл,
	|	СебестоимостьТоваров.ХозяйственнаяОперация,
	|	СебестоимостьТоваров.КорАналитикаУчетаНоменклатуры,
	|	СебестоимостьТоваров.КорРазделУчета,
	|	СебестоимостьТоваров.КорВидЗапасов,
	|	СебестоимостьТоваров.КорОрганизация,
	|	СебестоимостьТоваров.КорСтоимость,
	|	СебестоимостьТоваров.АналитикаУчетаПоПартнерам,
	|	СебестоимостьТоваров.ЗаказКлиента,
	|	СебестоимостьТоваров.Подразделение,
	|	СебестоимостьТоваров.АналитикаРасходов,
	|	СебестоимостьТоваров.СтатьяРасходовСписания,
	|	СебестоимостьТоваров.СтатьяДоходов,
	|	СебестоимостьТоваров.АналитикаДоходов,
	|	СебестоимостьТоваров.ПериодПродажи
	|ИЗ
	|	РегистрНакопления.СебестоимостьТоваров КАК СебестоимостьТоваров
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ 
	|		ТаблицаПоступленияТоваров КАК Таблица
	|	ПО
	|		СебестоимостьТоваров.Регистратор = Таблица.ДокументПоступления
	|
	|ГДЕ
	|	СебестоимостьТоваров.Количество <> 0
	|
	|;
	|////////////////////////////////////////////////////////////////////////////////
	|";
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ИнициализироватьТаблицуПартийРасходов()
	
	НаборЗаписей = РегистрыНакопления.ПартииРасходовНаСебестоимостьТоваров.СоздатьНаборЗаписей();
	
	Возврат НаборЗаписей.ВыгрузитьКолонки();
	
КонецФункции

Функция ИнициализироватьТаблицуПартийПрочихРасходов()
	
	НаборЗаписей = РегистрыНакопления.ПартииПрочихРасходов.СоздатьНаборЗаписей();
	
	Возврат НаборЗаписей.ВыгрузитьКолонки();
	
КонецФункции

Функция ИнициализироватьТаблицуСебестоимости()
	
	НаборЗаписей = РегистрыНакопления.СебестоимостьТоваров.СоздатьНаборЗаписей();
	
	Возврат НаборЗаписей.ВыгрузитьКолонки();
	
КонецФункции

Процедура ЗаписатьСоответствияЗаписей(СоответствиеДокументов, НаборЗаписей, ТаблицаРегистраторов = Неопределено)
	
	Для Каждого КлючИЗначение ИЗ СоответствиеДокументов Цикл
		
		НаборЗаписей.Отбор.Регистратор.Установить(КлючИЗначение.Ключ);
		СтруктураЗначения = КлючИЗначение.Значение;
		Таблица = СтруктураЗначения.Таблица;
		НаборЗаписей.Загрузить(Таблица);
		НаборЗаписей.УстановитьАктивность(Истина);
		Таблица.Очистить();
		
		Если ТаблицаРегистраторов <> Неопределено Тогда
			УдалитьОбработанныйДокумент(ТаблицаРегистраторов, КлючИЗначение.Ключ);
		КонецЕсли;
		
		НаборЗаписей.Записать(СтруктураЗначения.ПерваяЗапись);
		СтруктураЗначения.Вставить("ПерваяЗапись", Ложь);
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ЗаполнитьАктуальныеЗаписиСебестоимости(ТаблицаАктуальныхЗаписей, ТаблицаСебестоимости, Документ)
	
	Отбор = Новый Структура;
	Отбор.Вставить("Регистратор", Документ);
	
	МассивАктуальныхЗаписей = ТаблицаАктуальныхЗаписей.НайтиСтроки(Отбор);
	
	Если МассивАктуальныхЗаписей <> Неопределено Тогда
		
		Для Каждого АктуальнаяЗапись Из МассивАктуальныхЗаписей Цикл
			
			НоваяСтрока = ТаблицаСебестоимости.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, АктуальнаяЗапись);
			ТаблицаАктуальныхЗаписей.Удалить(АктуальнаяЗапись);
			
		КонецЦикла;
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ОчиститьСтарыеЗаписи(Таблица)
	
	Для Каждого ТекущаяЗапись Из Таблица Цикл
		
		НаборЗаписейПартий = РегистрыНакопления.ПартииПрочихРасходов.СоздатьНаборЗаписей();
		НаборЗаписейПартий.Отбор.Регистратор.Установить(ТекущаяЗапись.Регистратор);
		НаборЗаписейПартий.Записать();
		
		НаборЗаписейПартийРасходов = РегистрыНакопления.ПартииРасходовНаСебестоимостьТоваров.СоздатьНаборЗаписей();
		НаборЗаписейПартийРасходов.Отбор.Регистратор.Установить(ТекущаяЗапись.Регистратор);
		НаборЗаписейПартийРасходов.Записать();
		
		НаборЗаписейСебестоимости = РегистрыНакопления.СебестоимостьТоваров.СоздатьНаборЗаписей();
		НаборЗаписейСебестоимости.Отбор.Регистратор.Установить(ТекущаяЗапись.Регистратор);
		НаборЗаписейСебестоимости.Записать(); 		
		
	КонецЦикла;	
	
КонецПроцедуры

// Процедура выполняет распределение расходов на себестоимость товаров 
// по рассчитанной базе распределения.
//
// Параметры:
//	ДокументОбъект - Текущий документ
//	СтруктураДополнительныеСвойства - Структура - Дополнительные свойства документа
//	Движения - КоллекцияДвижений - Наборы записей регистров
//	Отказ - Булево - Признак отказа от проведения документа
//
Процедура РаспределитьРасходыНаСебестоимостьТоваровПоБазе(РезультатЗапросаПоБазе, ТаблицаРасходов, ТаблицаАктуальныхЗаписей, ТаблицаРегистраторов) Экспорт
	
	Если ТаблицаРасходов.Количество() = 0 Или РезультатЗапросаПоБазе.Пустой() Тогда
		Возврат;
	КонецЕсли;
	
	ЗаписиПартийРасходов		= Новый Соответствие;
	ЗаписиПартийПрочихРасходов	= Новый Соответствие;
	ЗаписиСебестоимостиТоваров	= Новый Соответствие;
	
	СчетчикЗаписей  = 0;
	СтруктураОтбора = Новый Структура("АналитикаРасходов");

	// Выборка строк базы распределения по индексу аналитики.
	ВыборкаПоАналитике = РезультатЗапросаПоБазе.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	Пока ВыборкаПоАналитике.Следующий() Цикл
		
		СтруктураОтбора.АналитикаРасходов = ВыборкаПоАналитике.АналитикаРасходов;

		// Получаем массив расходов, имеющих одинаковый индекс аналитики, 
		// соответствующий текущей выборки базы распределения.
		// Данные затраты будут распределены по одинаковой базе распределения.
		МассивРасходов = ТаблицаРасходов.НайтиСтроки(СтруктураОтбора);
		Если МассивРасходов.Количество() = 0 Тогда
			Продолжить;
		КонецЕсли;
		
		Выборка = ВыборкаПоАналитике.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		
		Если ВыборкаПоАналитике.База = 0 Тогда
			Выборка.Следующий();
			Продолжить;
		КонецЕсли;
		
		// МассивРасходов - дополнительные расходы
		Для Каждого СтрокаРасходов Из МассивРасходов Цикл
		
			СтоимостьКРаспределению 		= СтрокаРасходов.Стоимость;
			СтоимостьБезНДСКРаспределению 	= СтрокаРасходов.СтоимостьБезНДС;
			СтоимостьРеглКРаспределению 	= СтрокаРасходов.СтоимостьРегл;
			НДСРеглКРаспределению 			= СтрокаРасходов.НДСРегл;
			БазаВсего 						= ВыборкаПоАналитике.База;
		
			// Выборка строк базы распределения по индексу базы распределения
			Выборка.Сбросить();
			Пока Выборка.Следующий() Цикл

				Если БазаВсего <> 0 Тогда
					Стоимость 		= Окр(СтоимостьКРаспределению * Выборка.База / БазаВсего, 2, 1);
					СтоимостьБезНДС = Окр(СтоимостьБезНДСКРаспределению * Выборка.База / БазаВсего, 2, 1);
					СтоимостьРегл	= Окр(СтоимостьРеглКРаспределению * Выборка.База / БазаВсего, 2, 1);
					НДСРегл 		= Окр(НДСРеглКРаспределению * Выборка.База / БазаВсего, 2, 1);
				Иначе
					Стоимость 		= 0;
					СтоимостьБезНДС = 0;
					СтоимостьРегл	= 0;
					НДСРегл			= 0;
				КонецЕсли;

				СтоимостьКРаспределению 		= СтоимостьКРаспределению - Стоимость;
				СтоимостьБезНДСКРаспределению 	= СтоимостьБезНДСКРаспределению - СтоимостьБезНДС;
				СтоимостьРеглКРаспределению 	= СтоимостьРеглКРаспределению - СтоимостьРегл;
				НДСРеглКРаспределению 			= НДСРеглКРаспределению - НДСРегл;
				БазаВсего 						= БазаВсего - Выборка.База;

				СчетчикЗаписей = СчетчикЗаписей + 1;
				
				СтруктураЗначения = ЗаписиПартийРасходов.Получить(Выборка.ДокументПоступления);
				Если СтруктураЗначения = Неопределено Тогда
					
					ТаблицаПартийРасходов = ИнициализироватьТаблицуПартийРасходов();
					СтруктураЗначенияПартийРасходов = Новый Структура;
					СтруктураЗначенияПартийРасходов.Вставить("Таблица", ТаблицаПартийРасходов);
					СтруктураЗначенияПартийРасходов.Вставить("ПерваяЗапись", Истина);
					ЗаписиПартийРасходов.Вставить(Выборка.ДокументПоступления, СтруктураЗначенияПартийРасходов);
					
					ТаблицаПартийПрочихРасходов = ИнициализироватьТаблицуПартийПрочихРасходов();
					СтруктураЗначенияПартийПрочихРасходов = Новый Структура;
					СтруктураЗначенияПартийПрочихРасходов.Вставить("Таблица", ТаблицаПартийПрочихРасходов);
					СтруктураЗначенияПартийПрочихРасходов.Вставить("ПерваяЗапись", Истина);
					ЗаписиПартийПрочихРасходов.Вставить(Выборка.ДокументПоступления, СтруктураЗначенияПартийПрочихРасходов);
					
					ТаблицаСебестоимости = ИнициализироватьТаблицуСебестоимости();
					СтруктураЗначенияСебестоимости = Новый Структура;
					СтруктураЗначенияСебестоимости.Вставить("Таблица", ТаблицаСебестоимости);
					СтруктураЗначенияСебестоимости.Вставить("ПерваяЗапись", Истина);
					ЗаполнитьАктуальныеЗаписиСебестоимости(ТаблицаАктуальныхЗаписей, ТаблицаСебестоимости, Выборка.ДокументПоступления);
					ЗаписиСебестоимостиТоваров.Вставить(Выборка.ДокументПоступления, СтруктураЗначенияСебестоимости);

				Иначе
					СтруктураПартийПрочихРасходов = ЗаписиПартийПрочихРасходов.Получить(Выборка.ДокументПоступления);
					ТаблицаПартийПрочихРасходов = СтруктураПартийПрочихРасходов.Таблица;
					
					СтруктураСебестоимости		= ЗаписиСебестоимостиТоваров.Получить(Выборка.ДокументПоступления);
					ТаблицаСебестоимости		= СтруктураСебестоимости.Таблица;
					
					ТаблицаПартийРасходов 		= СтруктураЗначения.Таблица;
					
				КонецЕсли;
				
				НоваяЗаписьРасходов = ТаблицаПартийРасходов.Добавить();
				ЗаполнитьЗначенияСвойств(НоваяЗаписьРасходов, СтрокаРасходов);
				НоваяЗаписьРасходов.Регистратор						= Выборка.ДокументПоступления;
				НоваяЗаписьРасходов.ВидЗапасов 						= Выборка.ВидЗапасов;
				НоваяЗаписьРасходов.АналитикаУчетаПартий			= Выборка.АналитикаУчетаПартий;
				НоваяЗаписьРасходов.ДокументПоступления				= Выборка.ДокументПоступления;
				НоваяЗаписьРасходов.ДокументПоступленияРасходов 	= СтрокаРасходов.ДокументПоступленияРасходов;
				НоваяЗаписьРасходов.АналитикаУчетаПартий 			= СтрокаРасходов.АналитикаУчетаПартий;
				НоваяЗаписьРасходов.АналитикаУчетаНоменклатуры 		= Выборка.АналитикаУчетаНоменклатуры;
				НоваяЗаписьРасходов.СтатьяРасходов					= СтрокаРасходов.СтатьяРасходовСписания;
				НоваяЗаписьРасходов.Количество 						= Выборка.Количество;
				НоваяЗаписьРасходов.Стоимость 						= Стоимость;
				НоваяЗаписьРасходов.СтоимостьБезНДС					= СтоимостьБезНДС;
				НоваяЗаписьРасходов.СтоимостьРегл 					= СтоимостьРегл;
				НоваяЗаписьРасходов.НДСРегл 						= НДСРегл;
				
				НоваяЗаписьПартий = ТаблицаПартийПрочихРасходов.Добавить();
				ЗаполнитьЗначенияСвойств(НоваяЗаписьПартий, СтрокаРасходов);
				НоваяЗаписьПартий.ВидДвижения					= ВидДвиженияНакопления.Расход;
				НоваяЗаписьПартий.Организация 					= СтрокаРасходов.Организация;
				НоваяЗаписьПартий.Подразделение 				= СтрокаРасходов.Подразделение;
				НоваяЗаписьПартий.СтатьяРасходов				= СтрокаРасходов.СтатьяРасходовСписания;
				НоваяЗаписьПартий.АналитикаРасходов				= СтрокаРасходов.АналитикаРасходов;
				НоваяЗаписьПартий.ДокументПоступленияРасходов	= СтрокаРасходов.ДокументПоступленияРасходов;
				НоваяЗаписьПартий.АналитикаУчетаПартий 			= СтрокаРасходов.АналитикаУчетаПартий;
				НоваяЗаписьПартий.Стоимость	 					= Стоимость;
				НоваяЗаписьПартий.СтоимостьБезНДС				= СтоимостьБезНДС;
				НоваяЗаписьПартий.СтоимостьРегл 				= СтоимостьРегл;
				НоваяЗаписьПартий.НДСРегл 						= НДСРегл; 
				
				НоваяЗаписьСебестоимости = ТаблицаСебестоимости.Добавить();
				ЗаполнитьЗначенияСвойств(НоваяЗаписьСебестоимости, СтрокаРасходов);
				НоваяЗаписьСебестоимости.АналитикаУчетаНоменклатуры = Выборка.АналитикаУчетаНоменклатуры;
				НоваяЗаписьСебестоимости.Количество 				= 0;
				НоваяЗаписьСебестоимости.ВидЗапасов 				= Выборка.ВидЗапасов;
				НоваяЗаписьСебестоимости.Организация 				= Выборка.Организация;
				НоваяЗаписьСебестоимости.СуммаДопРасходов 			= Стоимость;
				НоваяЗаписьСебестоимости.СуммаДопРасходовБезНДС 	= СтоимостьБезНДС;
				НоваяЗаписьСебестоимости.СтоимостьРегл 				= СтоимостьРегл;

				Если СчетчикЗаписей > 1000 Тогда

					СчетчикЗаписей = 0;
					
					ЗаписатьСоответствияЗаписей(ЗаписиПартийРасходов, 
												РегистрыНакопления.ПартииРасходовНаСебестоимостьТоваров.СоздатьНаборЗаписей(),
												ТаблицаРегистраторов
												);
					ЗаписатьСоответствияЗаписей(ЗаписиПартийПрочихРасходов, 
												РегистрыНакопления.ПартииПрочихРасходов.СоздатьНаборЗаписей()
												);
					ЗаписатьСоответствияЗаписей(ЗаписиСебестоимостиТоваров,
												РегистрыНакопления.СебестоимостьТоваров.СоздатьНаборЗаписей()
												);
					
				КонецЕсли;
			КонецЦикла;
		КонецЦикла;
	КонецЦикла;

	Если СчетчикЗаписей > 0 Тогда
		
		ЗаписатьСоответствияЗаписей(ЗаписиПартийРасходов, 
									РегистрыНакопления.ПартииРасходовНаСебестоимостьТоваров.СоздатьНаборЗаписей(),
									ТаблицаРегистраторов
									);
		ЗаписатьСоответствияЗаписей(ЗаписиПартийПрочихРасходов, 
									РегистрыНакопления.ПартииПрочихРасходов.СоздатьНаборЗаписей()
									);
		ЗаписатьСоответствияЗаписей(ЗаписиСебестоимостиТоваров,
									РегистрыНакопления.СебестоимостьТоваров.СоздатьНаборЗаписей()
									);

	КонецЕсли;
	
	ОчиститьСтарыеЗаписи(ТаблицаРегистраторов);

КонецПроцедуры // РаспределитьРасходыНаСебестоимостьТоваровПоБазе()

Процедура ОтразитьРаспределение(Месяц, Организация)

		ЗаписьНабора = РегистрыСведений.ДопРасходыКРаспределению.СоздатьНаборЗаписей();
		ЗаписьНабора.Отбор.Период.Установить(НачалоМесяца(Месяц));
		Если Организация <> Неопределено Тогда
			ЗаписьНабора.Отбор.Организация.Установить(Организация);
		КонецЕсли;
		
		ЗаписьНабора.Записать();
	
КонецПроцедуры
	
Процедура РаспределитьДополнительныеРасходыНаПоступления(Месяц= Неопределено, Организация = Неопределено) Экспорт
	
	Движения = Новый Структура;

	СтруктураДополнительныеСвойства = Новый Структура;
	СтруктураДополнительныеСвойства.Вставить("ТаблицыДляДвижений", Новый Структура);

	Запрос = Новый Запрос;
	
	ТекстЗапроса = ТекстЗапросаВтТаблицаРасходовПоДокументу()
		+ ТекстЗапросаТаблицаСпособовРаспределения()
		+ ТекстЗапросаТаблицаДокументов()
		+ ТекстЗапросаТаблицаПоступленияТоваров()
		+ ТекстЗапросаТаблицаБазыРаспределения()
		+ ТекстЗапросаТаблицаРасходов()
		+ ТекстЗапросаАктуальныеЗаписиСебестоимости()
		;
		
	Запрос.Текст = ТекстЗапроса;
		
	Если Месяц = Неопределено Тогда
		Месяц = ТекущаяДата();
	КонецЕсли;
	
	Запрос.УстановитьПараметр("Период", 		НачалоМесяца(Месяц));
	Запрос.УстановитьПараметр("ДатаНачала", 	НачалоМесяца(Месяц));
	Запрос.УстановитьПараметр("ДатаОкончания", 	КонецМесяца(Месяц));
	Запрос.УстановитьПараметр("Граница", 		НачалоМесяца(Месяц));
	Запрос.УстановитьПараметр("Организация", 	Организация);

	Если Организация = Неопределено Тогда
		Запрос.УстановитьПараметр("ПоВсемОрганизациям", Истина);
	Иначе	
		Запрос.УстановитьПараметр("ПоВсемОрганизациям", Ложь);
	КонецЕсли;
		
	МассивРезультатов 		= Запрос.ВыполнитьПакет();
	ТекстЗапроса 			= ТекстЗапросаДвижениеПартийРасходов();
	ТаблицаРегистраторов	= ПолучитьРаспределенияЗаМесяц(Месяц,,ТекстЗапроса);
	
	// МассивРезультатов[0] - временная таблица "ВтТаблицаРасходов"
	// МассивРезультатов[1] - временная таблица "ТаблицаСпособовРаспределения"
	// МассивРезультатов[2] - временная таблица "ТаблицаДокументов"
	// МассивРезультатов[3] - временная таблица "ВтПоступленияТоваров"
	// МассивРезультатов[4] - временная таблица "ТаблицаПоступленияТоваров"
	РаспределитьРасходыНаСебестоимостьТоваровПоБазе(МассивРезультатов[6], МассивРезультатов[7].Выгрузить(), МассивРезультатов[8].Выгрузить(), ТаблицаРегистраторов);
	
	ОтразитьРаспределение(Месяц, Организация);

КонецПроцедуры

Функция СформироватьВыборкуРасходовКРаспределению(Месяц)
	
	ТекстЗапроса ="
	|ВЫБРАТЬ
	|	ПартииТоваров.АналитикаУчетаНоменклатуры,
	|	ПартииТоваров.ДокументПоступления,
	|	ПартииТоваров.ВидЗапасов,
	|	ПартииТоваров.Количество,
	|	ПартииТоваров.Регистратор
	|ПОМЕСТИТЬ ТаблицаПартийРасходов
	|ИЗ
	|	РегистрНакопления.ПартииТоваровОрганизаций КАК ПартииТоваров
	|ГДЕ
	|	ПартииТоваров.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|	И (ПартииТоваров.Регистратор ССЫЛКА Документ.ВнутреннееПотреблениеТоваров
	|			ИЛИ ПартииТоваров.Регистратор ССЫЛКА Документ.ВозвратТоваровПоставщику
	|			ИЛИ ПартииТоваров.Регистратор ССЫЛКА Документ.ОтчетОРозничныхПродажах
	|			ИЛИ ПартииТоваров.Регистратор ССЫЛКА Документ.ПересортицаТоваров
	|			ИЛИ ПартииТоваров.Регистратор ССЫЛКА Документ.РеализацияТоваровУслуг
	|			ИЛИ ПартииТоваров.Регистратор ССЫЛКА Документ.СборкаТоваров
	|			ИЛИ ПартииТоваров.Регистратор ССЫЛКА Документ.СписаниеНедостачТоваров)
	|	И ПартииТоваров.Период МЕЖДУ &НачалоМесяца И &КонецМесяца
	|	И ПартииТоваров.ВидЗапасов.ТипЗапасов <> ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.КомиссионныйТовар)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПартииРасходов.Организация,
	|	ПартииРасходов.АналитикаУчетаНоменклатуры,
	|	ПартииРасходов.ДокументПоступления,
	|	ПартииРасходов.ВидЗапасов,
	|	ПартииРасходов.АналитикаУчетаПартий,
	|	ПартииРасходов.ДокументПоступленияРасходов,
	|	ПартииРасходов.СтатьяРасходов,
	|	ПартииРасходов.КоличествоОстаток КАК Количество,
	|	ПартииРасходов.СтоимостьОстаток КАК Стоимость,
	|	ПартииРасходов.СтоимостьБезНДСОстаток КАК СтоимостьБезНДС,
	|	ПартииРасходов.СтоимостьРеглОстаток КАК СтоимостьРегл,
	|	ПартииРасходов.НДСРеглОстаток КАК НДСРегл,
	|	ТаблицаПартийРасходов.Количество КАК КоличествоКСписанию,
	|	ТаблицаПартийРасходов.Регистратор КАК Регистратор
	|ПОМЕСТИТЬ ТаблицаРаспределения
	|ИЗ
	|	ТаблицаПартийРасходов КАК ТаблицаПартийРасходов
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ 
	|		РегистрНакопления.ПартииРасходовНаСебестоимостьТоваров.Остатки(
	|			&Граница,
	|			(АналитикаУчетаНоменклатуры, ДокументПоступления, ВидЗапасов) В
	|				(ВЫБРАТЬ
	|					Расходы.АналитикаУчетаНоменклатуры,
	|					Расходы.ДокументПоступления,
	|					Расходы.ВидЗапасов
	|				ИЗ
	|					ТаблицаПартийРасходов КАК Расходы)
	|			) КАК ПартииРасходов
	|		ПО 
	|			ТаблицаПартийРасходов.ДокументПоступления = ПартииРасходов.ДокументПоступления
	|			И ТаблицаПартийРасходов.АналитикаУчетаНоменклатуры = ПартииРасходов.АналитикаУчетаНоменклатуры
	|			И ТаблицаПартийРасходов.ВидЗапасов = ПартииРасходов.ВидЗапасов
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ПартииРасходов.Организация,
	|	ПартииРасходов.АналитикаУчетаНоменклатуры,
	|	ПартииРасходов.ДокументПоступления,
	|	ПартииРасходов.ВидЗапасов,
	|	ПартииРасходов.АналитикаУчетаПартий,
	|	ПартииРасходов.ДокументПоступленияРасходов,
	|	ПартииРасходов.СтатьяРасходов,
	|	ПартииРасходов.Количество,
	|	ПартииРасходов.Стоимость,
	|	ПартииРасходов.СтоимостьБезНДС,
	|	ПартииРасходов.СтоимостьРегл,
	|	ПартииРасходов.НДСРегл,
	|	ТаблицаПартийРасходов.Количество,
	|	ТаблицаПартийРасходов.Регистратор
	|ИЗ
	|	ТаблицаПартийРасходов КАК ТаблицаПартийРасходов
	|
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ 
	|			РегистрНакопления.ПартииРасходовНаСебестоимостьТоваров КАК ПартииРасходов
	|		ПО 
	|			ТаблицаПартийРасходов.АналитикаУчетаНоменклатуры = ПартииРасходов.АналитикаУчетаНоменклатуры
	|			И ТаблицаПартийРасходов.ДокументПоступления = ПартииРасходов.ДокументПоступления
	|			И ТаблицаПартийРасходов.ВидЗапасов = ПартииРасходов.ВидЗапасов
	|ГДЕ
	|	ПартииРасходов.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|	И ПартииРасходов.Период > &НачалоМесяца
	|	И ПартииРасходов.Период <= &КонецМесяца
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаРаспределения.Организация,
	|	ТаблицаРаспределения.АналитикаУчетаНоменклатуры,
	|	ТаблицаРаспределения.ДокументПоступления,
	|	ТаблицаРаспределения.ВидЗапасов,
	|	ТаблицаРаспределения.АналитикаУчетаПартий,
	|	ТаблицаРаспределения.ДокументПоступленияРасходов,
	|	ТаблицаРаспределения.СтатьяРасходов,
	|	ТаблицаРаспределения.Количество,
	|	ТаблицаРаспределения.Стоимость,
	|	ТаблицаРаспределения.СтоимостьБезНДС,
	|	ТаблицаРаспределения.СтоимостьРегл,
	|	ТаблицаРаспределения.НДСРегл,
	|	ТаблицаРаспределения.КоличествоКСписанию,
	|	ТаблицаРаспределения.Регистратор КАК Регистратор
	|ИЗ
	|	ТаблицаРаспределения КАК ТаблицаРаспределения
	|ИТОГИ ПО
	|	Регистратор
	|";
	
	Запрос = Новый Запрос;
	Запрос.Текст = ТекстЗапроса;
	
	Запрос.УстановитьПараметр("НачалоМесяца", 	НачалоМесяца(Месяц)); 
	Запрос.УстановитьПараметр("КонецМесяца", 	КонецМесяца(Месяц)); 
	Запрос.УстановитьПараметр("Граница", 		Новый Граница(НачалоМесяца(Месяц), ВидГраницы.Включая));
	
	Результат = Запрос.Выполнить();
	
	Возврат Результат;
	
КонецФункции

Функция ТекстЗапросаДвижениеПартийРасходовНаСебестоимость()
	
	ТекстЗапроса = "
	|ВЫБРАТЬ
	|	ПартииРасходов.Регистратор КАК Регистратор
	|ИЗ
	|	РегистрНакопления.ПартииРасходовНаСебестоимостьТоваров КАК ПартииРасходов
	|
	|ГДЕ
	|	ПартииРасходов.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|	И ПартииРасходов.Период >= &НачалоПериода
	|	И ПартииРасходов.Период <= &КонецПериода
	|	И (ПартииРасходов.Организация = &Организация
	|		ИЛИ &ПоВсемОрганизациям
	|		)
	|
	|СГРУППИРОВАТЬ ПО
	|	ПартииРасходов.Регистратор
	|";
	
	Возврат ТекстЗапроса;
	
КонецФункции

Процедура УдалитьОбработанныйДокумент(Таблица, Регистратор)
	
		ЗаписьРегистратора = Таблица.Найти(Регистратор, "Регистратор");
		Если ЗаписьРегистратора <> Неопределено Тогда
			Таблица.Удалить(ЗаписьРегистратора);
		КонецЕсли;

КонецПроцедуры

Процедура ОчиститьЗаписиРасходовНаСебестоимость(Таблица)
	
	Для Каждого ТекущаяЗапись Из Таблица Цикл
		
		НаборЗаписейПартийРасходов = РегистрыНакопления.ПартииРасходовНаСебестоимостьТоваров.СоздатьНаборЗаписей();
		НаборЗаписейПартийРасходов.Отбор.Регистратор.Установить(ТекущаяЗапись.Регистратор);
		НаборЗаписейПартийРасходов.Записать();
		
	КонецЦикла;	
	
КонецПроцедуры

Процедура СписатьДополнительныеРасходыНаРасходныеДокументы(Месяц)
	
	ВыборкаКРаспределению = СформироватьВыборкуРасходовКРаспределению(Месяц);
	
	ВыборкаПоРегистратору = ВыборкаКРаспределению.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	ТекстЗапроса 		 = ТекстЗапросаДвижениеПартийРасходовНаСебестоимость();
	ТаблицаРегистраторов = ПолучитьРаспределенияЗаМесяц(Месяц,,ТекстЗапроса);
	
	Пока ВыборкаПоРегистратору.Следующий() Цикл
		
		Движения = Новый Структура;
	
		ДополнительныеСвойства = Новый Структура;
		ДополнительныеСвойства.Вставить("ТаблицыДляДвижений", Новый Структура);
	
		Движения.Вставить("ПартииРасходовНаСебестоимостьТоваров", РегистрыНакопления.ПартииРасходовНаСебестоимостьТоваров.СоздатьНаборЗаписей());
		Движения.ПартииРасходовНаСебестоимостьТоваров.Отбор.Регистратор.Установить(ВыборкаПоРегистратору.Регистратор);
		ДополнительныеСвойства.ТаблицыДляДвижений.Вставить("ТаблицаПартииРасходовНаСебестоимостьТоваров", Движения.ПартииРасходовНаСебестоимостьТоваров.ВыгрузитьКолонки());
		
		УдалитьОбработанныйДокумент(ТаблицаРегистраторов, ВыборкаПоРегистратору.Регистратор);
		
		ВыборкаПоДетальнымЗаписям = ВыборкаПоРегистратору.Выбрать();
	
		Пока ВыборкаПоДетальнымЗаписям.Следующий() Цикл
			
			Если ВыборкаПоДетальнымЗаписям.КоличествоКСписанию >= ВыборкаПоДетальнымЗаписям.Количество Тогда
				КоличествоКСписанию = ВыборкаПоДетальнымЗаписям.Количество
			Иначе
				КоличествоКСписанию = ВыборкаПоДетальнымЗаписям.КоличествоКСписанию
			КонецЕсли;
			
			НаборЗаписейПартииРасходов = ДополнительныеСвойства.ТаблицыДляДвижений.ТаблицаПартииРасходовНаСебестоимостьТоваров;
			ЗаписьНабораПартииРасходов = НаборЗаписейПартииРасходов.Добавить();
			
			ЗаписьНабораПартииРасходов.Активность 		= Истина;
			ЗаписьНабораПартииРасходов.ВидДвижения 		= ВидДвиженияНакопления.Расход;
			ЗаписьНабораПартииРасходов.Период	 		= КонецМесяца(Месяц);
			ЗаписьНабораПартииРасходов.Регистратор		= ВыборкаПоДетальнымЗаписям.Регистратор;
			
			ЗаписьНабораПартииРасходов.Организация					= ВыборкаПоДетальнымЗаписям.Организация;
			ЗаписьНабораПартииРасходов.АналитикаУчетаНоменклатуры	= ВыборкаПоДетальнымЗаписям.АналитикаУчетаНоменклатуры;
			ЗаписьНабораПартииРасходов.ДокументПоступления			= ВыборкаПоДетальнымЗаписям.ДокументПоступления;
			ЗаписьНабораПартииРасходов.ВидЗапасов					= ВыборкаПоДетальнымЗаписям.ВидЗапасов;
			ЗаписьНабораПартииРасходов.АналитикаУчетаПартий			= ВыборкаПоДетальнымЗаписям.АналитикаУчетаПартий;
			ЗаписьНабораПартииРасходов.ДокументПоступленияРасходов	= ВыборкаПоДетальнымЗаписям.ДокументПоступленияРасходов;
			ЗаписьНабораПартииРасходов.СтатьяРасходов				= ВыборкаПоДетальнымЗаписям.СтатьяРасходов;
			
			ЗаписьНабораПартииРасходов.Количество 		= КоличествоКСписанию;
			ЗаписьНабораПартииРасходов.Стоимость 		= РаспределитьПропорциональноКоличеству (
																			ВыборкаПоДетальнымЗаписям.Стоимость, 
																			КоличествоКСписанию,
																			ВыборкаПоДетальнымЗаписям.Количество
																			);
			ЗаписьНабораПартииРасходов.СтоимостьБезНДС	= РаспределитьПропорциональноКоличеству (
																			ВыборкаПоДетальнымЗаписям.СтоимостьБезНДС, 
																			КоличествоКСписанию,
																			ВыборкаПоДетальнымЗаписям.Количество
																			);
			ЗаписьНабораПартииРасходов.СтоимостьРегл	= РаспределитьПропорциональноКоличеству (
																			ВыборкаПоДетальнымЗаписям.СтоимостьРегл, 
																			КоличествоКСписанию,
																			ВыборкаПоДетальнымЗаписям.Количество
																			);
			ЗаписьНабораПартииРасходов.НДСРегл			= РаспределитьПропорциональноКоличеству (
																			ВыборкаПоДетальнымЗаписям.НДСРегл, 
																			КоличествоКСписанию,	
																			ВыборкаПоДетальнымЗаписям.Количество
																			);
		КонецЦикла;
		
		Движения.ПартииРасходовНаСебестоимостьТоваров.Загрузить(ДополнительныеСвойства.ТаблицыДляДвижений.ТаблицаПартииРасходовНаСебестоимостьТоваров);
		ЗаписатьНаборыЗаписей(Движения);
		
	КонецЦикла;
	
	ОчиститьЗаписиРасходовНаСебестоимость(ТаблицаРегистраторов);
	
КонецПроцедуры

Процедура ВыполнитьРаспределениеДополнительныхРасходов(Месяц, Организация = Неопределено) Экспорт
	
	РаспределитьДополнительныеРасходыНаПоступления(Месяц, Организация);
	
	СписатьДополнительныеРасходыНаРасходныеДокументы(Месяц);
	
КонецПроцедуры

Функция ТребуетсяРаспределениеДопРасходов(Месяц, Организация = Неопределено) Экспорт
	
	Запрос = Новый Запрос("
	|ВЫБРАТЬ
	|	ДопРасходыКРаспределению.Период
	|ИЗ
	|	РегистрСведений.ДопРасходыКРаспределению КАК ДопРасходыКРаспределению
	|ГДЕ
	|	ДопРасходыКРаспределению.Период = &Месяц
	|	И (ДопРасходыКРаспределению.Организация = &Организация
	|			ИЛИ &ПоВсемОрганизациям)
	|");
	
	Запрос.УстановитьПараметр("Месяц", 				НачалоМесяца(Месяц));
	Запрос.УстановитьПараметр("Организация", 		Организация);
	Запрос.УстановитьПараметр("ПоВсемОрганизациям",	?(Организация = Неопределено ИЛИ НЕ ЗначениеЗаполнено(Организация), Истина, Ложь));
	
	Результат = Запрос.Выполнить();
	
	Если Результат.Пустой() Тогда
		ТребуетсяРаспределение = Ложь
	Иначе
		ТребуетсяРаспределение = Истина;
	КонецЕсли;
	
	Возврат ТребуетсяРаспределение;
	
КонецФункции
