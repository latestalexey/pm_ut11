////////////////////////////////////////////////////////////////////////////////
// ПРОГРАММНЫЙ ИНТЕРФЕЙС

Функция ИзменитьКачество(ТекущаяСтрока,СтруктураДействий, КэшированныеЗначения = Неопределено) Экспорт
	
	Если ТекущаяСтрока = Неопределено Тогда
		Предупреждение(НСтр("ru = 'Выберите строку, для которой Вы хотите изменить качество'"));
		Возврат Ложь;
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(ТекущаяСтрока.Номенклатура) Тогда
		ОчиститьСообщения();
		ТекстСообщения = НСтр("ru='В выбранной строке не указан товар исходного качества.'");
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения);
		Возврат Ложь;
	КонецЕсли;
	
	Номенклатура = ОткрытьФормуМодально("Справочник.Номенклатура.Форма.ФормаВыбораНекачественнойНоменклатуры",Новый Структура("Номенклатура", ТекущаяСтрока.Номенклатура));
	
	Если ЗначениеЗаполнено(Номенклатура) Тогда
		
		СтрокаОприходования = Новый Структура("НоменклатураИсходногоКачества,
											  |ХарактеристикиИспользуются,
											  |Номенклатура,
											  |Характеристика,
											  |Упаковка,
											  |ВидЦены,
											  |Цена");
		
		Если ТекущаяСтрока.Свойство("НоменклатураОприходование") Тогда
			ТекущаяСтрока.НоменклатураОприходование = Номенклатура;
			
			ЗаполнитьЗначенияСвойств(СтрокаОприходования, ТекущаяСтрока);
			
			СтрокаОприходования.НоменклатураИсходногоКачества = ТекущаяСтрока.Номенклатура;
			СтрокаОприходования.Номенклатура                  = ТекущаяСтрока.НоменклатураОприходование;
			СтрокаОприходования.ХарактеристикиИспользуются    = ТекущаяСтрока.ХарактеристикиИспользуютсяОприходование;
			СтрокаОприходования.Характеристика                = ТекущаяСтрока.Характеристика;
			
			ОбработкаТабличнойЧастиКлиент.ОбработатьСтрокуТЧ(СтрокаОприходования, СтруктураДействий, КэшированныеЗначения);
			
			ТекущаяСтрока.ХарактеристикиИспользуютсяОприходование = СтрокаОприходования.ХарактеристикиИспользуются;
			ТекущаяСтрока.ХарактеристикаОприходование             = СтрокаОприходования.Характеристика;
			
			Если ТекущаяСтрока.Свойство("Цена") Тогда
				ТекущаяСтрока.Цена = СтрокаОприходования.Цена;
			КонецЕсли;
			
		Иначе
			СтрокаОприходования.НоменклатураИсходногоКачества = ТекущаяСтрока.Номенклатура;
			ТекущаяСтрока.Номенклатура = Номенклатура;
			ЗаполнитьЗначенияСвойств(СтрокаОприходования, ТекущаяСтрока);
			ОбработкаТабличнойЧастиКлиент.ОбработатьСтрокуТЧ(СтрокаОприходования, СтруктураДействий, КэшированныеЗначения);
			ЗаполнитьЗначенияСвойств(ТекущаяСтрока, СтрокаОприходования);
		КонецЕсли;
		
		Возврат Истина;
	Иначе
		Возврат Ложь;
	КонецЕсли;
КонецФункции

Функция ВзятьЗаданияВРаботу(Форма, Список, Операция) Экспорт
	ОчиститьСообщения();
	
	МассивДокументов = РаботаСДиалогамиКлиент.ПроверитьПолучитьВыделенныеВСпискеСсылки(Список);
	
	Если МассивДокументов.Количество() = 0 Тогда
		Возврат Ложь;
	КонецЕсли;
	
	Структура = Новый Структура;
	Структура.Вставить("Склад",Форма.Склад);
	Структура.Вставить("Помещение",Форма.Помещение);
	
	ФормаПараметры = Новый Структура("Заголовок ,Операция, ПараметрОбъект", Операция, "ВзятиеЗаданийВРаботу",Структура);  
	
	Ответ = ОткрытьФормуМодально("Документ.ОтборРазмещениеТоваров.Форма.ФормаНастроек", ФормаПараметры, Форма);
	
	Если Ответ <> КодВозвратаДиалога.ОК Тогда
		Возврат Ложь;
	КонецЕсли;
		
	МассивИзмененныхДокументов = СкладыВызовСервера.ВзятьЗаданияВРаботу(МассивДокументов, Форма.НазначитьИсполнителя, Форма.Исполнитель);
	
	ОповеститьПользователяОбУстановкеСтатуса(МассивИзмененныхДокументов.Количество(), МассивДокументов.Количество(),
							ПредопределенноеЗначение("Перечисление.СтатусыОтборовРазмещенийТоваров.ВРаботе"));
	
	Если МассивИзмененныхДокументов.Количество() = 0 Тогда
		Возврат Ложь;
	КонецЕсли;
	
	Если Форма.ПечататьЗадания Тогда
		Если Форма.ПечатьНаПринтер Тогда
			УправлениеПечатьюКлиент.ВыполнитьКомандуПечатиНаПринтер("Документ.ОтборРазмещениеТоваров", "СкладскоеЗадание",
										МассивИзмененныхДокументов, Неопределено);
		Иначе
			УправлениеПечатьюКлиент.ВыполнитьКомандуПечати("Документ.ОтборРазмещениеТоваров", "СкладскоеЗадание",
										МассивИзмененныхДокументов, Форма, Неопределено);
		КонецЕсли;
	КонецЕсли;
	
	Возврат Истина;
	
КонецФункции

Функция ОтметитьВыполненениеЗаданийБезОшибок(Форма, Список, Операция) Экспорт
	ОчиститьСообщения();
	
	МассивДокументов = РаботаСДиалогамиКлиент.ПроверитьПолучитьВыделенныеВСпискеСсылки(Список);
	
	Если МассивДокументов.Количество() = 0 Тогда
		Возврат Ложь;
	КонецЕсли;
	
	Структура = Новый Структура;
	Структура.Вставить("Склад", Форма.Склад);
	Структура.Вставить("Помещение", Форма.Помещение);
	
	ФормаПараметры = Новый Структура("Заголовок ,Операция,ПараметрОбъект", Операция, "ВыполнениеЗаданий",Структура);  
	
	Ответ = ОткрытьФормуМодально("Документ.ОтборРазмещениеТоваров.Форма.ФормаНастроек",ФормаПараметры, Форма);
	
	Если Ответ <> КодВозвратаДиалога.ОК Тогда
		Возврат Ложь;
	КонецЕсли;
	
	МассивИзмененныхДокументов = СкладыВызовСервера.ОтметитьВыполненениеЗаданийБезОшибок(МассивДокументов,
												Форма.НазначитьИсполнителя, Форма.Исполнитель);
												
	ОповеститьПользователяОбУстановкеСтатуса(МассивИзмененныхДокументов.Количество(), МассивДокументов.Количество(),
							ПредопределенноеЗначение("Перечисление.СтатусыОтборовРазмещенийТоваров.ВыполненоБезОшибок"));
												
	Если МассивИзмененныхДокументов.Количество() = 0 Тогда
		Возврат Ложь;
	КонецЕсли;
		
	Возврат Истина;
	
КонецФункции

////////////////////////////////////////////////////////////////////////////////
// Интерактивные действия.

// Проверяет заполненность реквизитов, необходимых для заполнения реквизита "Склад" в табличной части
//
// Параметры:
// 		ТабличнаяЧасть - ДанныеФормыКоллекция - табличная часть, в которой необходимо осуществить проверку
// 		ПредставлениеТабличнойЧасти - Строка - представление табличной части для информирования пользователя
//
// Возвращаемое значение:
// 		Булево - Ложь, если необходимые данные не заполнены
//
Функция ПроверитьВозможностьЗаполненияСкладовВТабличнойЧасти(Объект, ТабличнаяЧасть, ПредставлениеТабличнойЧасти, ВыделенныеСтроки) Экспорт
	
	Если Тип("ДокументСсылка.РеализацияТоваровУслуг") = ТипЗнч(Объект.Ссылка) Тогда
		
		Если ЗначениеЗаполнено(Объект.ЗаказКлиента) Тогда
			ТекстПредупреждения = НСтр("ru='Документ введен на основании заказа клиента. Реквизит ""Склад"" не может быть заполнен'");
			Предупреждение(ТекстПредупреждения);
			Возврат Ложь;
		КонецЕсли;
		
	КонецЕсли;
	
	Если ТабличнаяЧасть.Количество() = 0 Тогда
		
		ТекстПредупреждения = НСтр("ru='В документе не заполнена таблица %ПредставлениеТабличнойЧасти%. Реквизит ""Склад"" не может быть заполнен'");
		ТекстПредупреждения = СтрЗаменить(ТекстПредупреждения, "%ПредставлениеТабличнойЧасти%", ПредставлениеТабличнойЧасти);
		Предупреждение(ТекстПредупреждения);
		Возврат Ложь;
		
	КонецЕсли;
	
	Если ВыделенныеСтроки.Количество() = 0 Тогда
		
		Предупреждение(НСтр("ru='В таблице отсутствуют выделенные строки. Выделите строки для заполнения реквизита ""Склад""'"));
		Возврат Ложь;
		
	КонецЕсли;
	
	Возврат Истина;
	
КонецФункции // ПроверитьВозможностьЗаполненияСкладовВТабличнойЧасти()

// Процедура показывает оповещение о заполнении реквизита "Склад" табличной части
//
// Параметры:
// 		СкладЗаполнения - СправочникСсылка.Склады - Склад, по которому производилось заполнение
// 		ЗаполненоСтрок - Число - Количество заполненных строк
// 		ВыделеноСтрок - Число - Количество строк выделенных для заполнения
//
Процедура ПоказатьОповещениеОЗаполненииСкладаВТабличнойЧасти(СкладЗаполнения, ЗаполненоСтрок, ВыделеноСтрок) Экспорт
	
	Если ЗаполненоСтрок = 0 Тогда // Если ни одна выделенная строка не была заполнена
		
		ТекстОповещения = НСтр("ru='Выделенные строки не заполнены'");
		Пояснение = НСтр("ru='Колонка ""Склад"" в выделенных строках не была заполнена'");
		
	ИначеЕсли ЗаполненоСтрок = ВыделеноСтрок Тогда // Если все выделенные строки были заполнены
		
		ТекстОповещения = НСтр("ru='Выделенные строки заполнены'");
		Пояснение = СтрЗаменить(НСтр("ru='Колонка ""Склад"" в выделенных строках заполнена значением ""%Склад%""'"), "%Склад%", СкладЗаполнения);
		
	Иначе // Если не все выделенные строки были заполнены
		
		ТекстОповещения = НСтр("ru='Часть выделенных строк заполнена'");
		Пояснение = НСтр("ru='Колонка ""Склад"" в %ЗаполненоСтрок% строках из %ВыделеноСтрок% выделенных заполнена значением ""%Склад%""'");
		Пояснение = СтрЗаменить(Пояснение, "%Склад%", СкладЗаполнения);
		Пояснение = СтрЗаменить(Пояснение, "%ЗаполненоСтрок%", ЗаполненоСтрок);
		Пояснение = СтрЗаменить(Пояснение, "%ВыделеноСтрок%", ВыделеноСтрок);
		
	КонецЕсли;
	
	ПоказатьОповещениеПользователя(ТекстОповещения, , Пояснение, БиблиотекаКартинок.Информация32);
	
КонецПроцедуры // ПоказатьОповещениеОЗаполненииСкладаВТабличнойЧасти()

////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

&НаКлиенте
Процедура ОповеститьПользователяОбУстановкеСтатуса(КоличествоОбработанных, КоличествоВсего, Статус)
	
	Если КоличествоОбработанных > 0 Тогда
		
		ТекстСообщения = НСтр("ru='Для %КоличествоОбработанных% из %КоличествоВсего% выделенных в списке складских заданий установлен статус ""%Статус%""'");
		ТекстСообщения = СтрЗаменить(ТекстСообщения, "%КоличествоОбработанных%", КоличествоОбработанных);
		ТекстСообщения = СтрЗаменить(ТекстСообщения, "%КоличествоВсего%",        КоличествоВсего);
		ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Статус%",                 Статус);
		ТекстЗаголовка = НСтр("ru='Статус ""%Статус%"" установлен'");
		ТекстЗаголовка = СтрЗаменить(ТекстЗаголовка, "%Статус%", Статус);
		ПоказатьОповещениеПользователя(ТекстЗаголовка,, ТекстСообщения, БиблиотекаКартинок.Информация32);
		
	Иначе
		
		ТекстСообщения = НСтр("ru='Статус ""%Статус%"" не установлен ни для одного складского задания'");
		ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Статус%", Статус);
		ТекстЗаголовка = НСтр("ru='Статус ""%Статус%"" не установлен'");
		ТекстЗаголовка = СтрЗаменить(ТекстЗаголовка, "%Статус%", Статус);
		ПоказатьОповещениеПользователя(ТекстЗаголовка,, ТекстСообщения, БиблиотекаКартинок.Информация32);
		
	КонецЕсли;
	
КонецПроцедуры
