////////////////////////////////////////////////////////////////////////////////
// ПРОГРАММНЫЙ ИНТЕРФЕЙС

// Процедура формирует отчет-расшифровку, по описанию, подготовленному соотвествующей фукнцией клиентского модуля 
//
// Параметры:
//		Форма - Форма - форма, в которой расположен отчет
//		ИмяРеквизитаФормы - Строка - имя реквизита формы типа ОтчетОбъект
//		ОписаниеОбработкиРасшифровки - ОписаниеОбработкиРасшифровкиКомпоновкиДанных - значение, сформированное соотвествующей клиентской функцией
//
Процедура ОбработатьРасшифровку(Форма, ИмяРеквизитаФормы, ОписаниеОбработкиРасшифровки) Экспорт
	
	ОтчетОбъект = Форма.РеквизитФормыВЗначение(ИмяРеквизитаФормы);
	
	ДанныеРасшифровки = ПолучитьИзВременногоХранилища(Форма.АдресДанныхРасшифровки);
	ИсточникДоступныхНастроек = Новый ИсточникДоступныхНастроекКомпоновкиДанных(Форма.АдресСхемы);
	
	ОбработкаРасшифровки = Новый ОбработкаРасшифровкиКомпоновкиДанных(ДанныеРасшифровки, ИсточникДоступныхНастроек);
	
	РезультирующиеНастройки = ОбработкаРасшифровки.ПрименитьНастройки(ОписаниеОбработкиРасшифровки.Идентификатор, 
																	ОписаниеОбработкиРасшифровки.ПрименяемыеНастройки);
	
	ОтчетОбъект.КомпоновщикНастроек.Инициализировать(ИсточникДоступныхНастроек);
	ОтчетОбъект.КомпоновщикНастроек.ЗагрузитьНастройки(РезультирующиеНастройки);
	
	// Получить таблицу для вывода отчета.
	ТаблицаРезультатаОтчета = Форма["Таблица"+ИмяРеквизитаФормы];
	ТаблицаРезультатаОтчета.Очистить();
	
	// Вывести отчет.
	ОтчетОбъект.СкомпоноватьРезультат(ТаблицаРезультатаОтчета, ДанныеРасшифровки);
	
	Форма.АдресДанныхРасшифровки = ПоместитьВоВременноеХранилище(ДанныеРасшифровки, Форма.УникальныйИдентификатор);
	
КонецПроцедуры

// Процедура формирует отчет, расположенный в форме настройками, которые сделал пользователь 
//
// Параметры:
//		Форма - Форма - форма, в которой расположен отчет
//		ИмяРеквизитаФормы - Строка - имя реквизита формы типа ОтчетОбъект
//		ИмяОтчета - Строка - имя формируемого отчета в метаданных
//		ИмяВариантаНастроек - Строка - имя варианта отчета в настройках отчета
//
Процедура СформироватьОтчет(Форма, ИмяРеквизитаФормы, ИмяОтчета, ИмяВариантаНастроек) Экспорт
	
	Перем ДанныеРасшифровки;
	
	Если Не ПравоДоступа("Использование", Метаданные.Отчеты[ИмяОтчета]) Тогда
		Возврат;
	КонецЕсли;
	
	// При обновлении отчета применяются пользовательские настройки.
	
	ОтчетОбъект = Форма.РеквизитФормыВЗначение(ИмяРеквизитаФормы);		
	АдресСхемы = ПоместитьВоВременноеХранилище(ОтчетОбъект.СхемаКомпоновкиДанных, Форма.УникальныйИдентификатор);
	
	ИсточникДоступныхНастроек = Новый ИсточникДоступныхНастроекКомпоновкиДанных(Форма.АдресСхемы);
	
	ОтчетОбъект.КомпоновщикНастроек.Инициализировать(ИсточникДоступныхНастроек);
	ОтчетОбъект.КомпоновщикНастроек.ЗагрузитьПользовательскиеНастройки(ОтчетОбъект.КомпоновщикНастроек.ПользовательскиеНастройки);
	
	// Вывести отчет.
	ТаблицаРезультатаОтчета = Форма["Таблица"+ИмяРеквизитаФормы];
	ТаблицаРезультатаОтчета.Очистить();
	
	ОтчетОбъект.СкомпоноватьРезультат(ТаблицаРезультатаОтчета, ДанныеРасшифровки);
	
	АдресДанныхРасшифровки = ПоместитьВоВременноеХранилище(ДанныеРасшифровки, Форма.УникальныйИдентификатор);
	
КонецПроцедуры

// Процедура инициализирует отчет, расположенный в форме настройками по умолчанию и устанавливает контекстные отборы 
//
// Параметры:
//		Форма - Форма - форма, в которой расположен отчет
//		ИмяРеквизитаФормы - Строка - имя реквизита формы типа ОтчетОбъект
//		ИмяОтчета - Строка - имя формируемого отчета в метаданных
//		ИмяВариантаНастроек - Строка - имя варианта отчета в настройках отчета
//      Отбор - Структура - ключ - имя отбора, значение - значение отбора
//
Процедура УстановитьСтандартныеНастройки(Форма, ИмяРеквизитаФормы, ИмяОтчета, ИмяВариантаНастроек, Отбор) Экспорт
	
	Если Не ПравоДоступа("Использование", Метаданные.Отчеты[ИмяОтчета]) Тогда
		Возврат;
	КонецЕсли;
	
	ОтчетОбъект = Форма.РеквизитФормыВЗначение(ИмяРеквизитаФормы);		
	
	Форма.АдресСхемы = ПоместитьВоВременноеХранилище(ОтчетОбъект.СхемаКомпоновкиДанных, Форма.УникальныйИдентификатор);
	
	ИсточникДоступныхНастроек = Новый ИсточникДоступныхНастроекКомпоновкиДанных(Форма.АдресСхемы);
	
	ОтчетОбъект.КомпоновщикНастроек.Инициализировать(ИсточникДоступныхНастроек);
	
	НастройкиКомпоновкиДанных = ОтчетОбъект.СхемаКомпоновкиДанных.ВариантыНастроек[ИмяВариантаНастроек].Настройки;
	ОтчетОбъект.КомпоновщикНастроек.ЗагрузитьНастройки(НастройкиКомпоновкиДанных);
	
	Для Каждого Элемент из Отбор Цикл
		ЭлементОтбора = ОтчетОбъект.КомпоновщикНастроек.Настройки.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
		
		ЭлементОтбора.ЛевоеЗначение = Новый ПолеКомпоновкиДанных(Элемент.Ключ);
		ЭлементОтбора.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
		ЭлементОтбора.ПравоеЗначение = Элемент.Значение;
		ЭлементОтбора.Использование = Истина;
	КонецЦикла;
	
КонецПроцедуры


