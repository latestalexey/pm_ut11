


 





// запускает регламентное задание закгрузки накладных с ТСД
 &НаСервере 
Процедура ак_ЗагрузкаДанныхТСД() Экспорт
		ЗагрузитьНакладную();
КонецПроцедуры

	
  &НаСервере 
Процедура ЗагрузитьНакладную()
	
	
	// Парметры ошибок
	мНетОшибки                 = 0;
	мОшибкаПараметровНастройки = 1;
	мОшибкаЗагрузкиДрайвера    = 2; 

	//параметры драйвераТСД
	 ТипСвязи = 2;
	 НомерПорта = 2000;
	 Таймаут = 30;
	  
	//Заполняем массив списком выбранных Видов Документов в настройках.
	МассивВидовДокументов = новый Массив();	
	МассивВидовДокументов.Добавить("РеализацияТоваровУслуг");

	//Для создания объекта драйвера.
	ДрайверТСД = Неопределено;

	//В переменную будет записан список накладных полученный драйвером из терминала.
	СписокНакладных = Новый СписокЗначений;
	
	//Переменные для накладных, в которые драйвер записывает данные.
	ИмяПервойНакладной= Неопределено;
	ДлинаФайлаПервойНакладной= Неопределено;
	КоличествоЗаписейВПервойНакладной= Неопределено;	
	
	//Создаем объект драйвера.
	Если СоздатьОбъектДрайвера(ДрайверТСД) =  мНетОшибки Тогда		
		 Иначе
		 Сообщить("Ошибка Подключения к драйверу!");
	 КонецЕсли;
	 
	 //Используя объект драйвера Открываем Порт Для подключения к ТСД
	 ОткрытьПорт=ДрайверТСД.Connect();
	 
	 //Если вернул 0, значит Ошибка, останавливаемся
	 Если ОткрытьПорт=0 тогда
		 Сообщить("Ошибка открытия порта!");
		 ДрайверТСД.Disconnect();
		 Возврат;
	 ИначеЕсли ОткрытьПорт = 1 Тогда
		 Сообщить("Запустите обмен на ТСД!");
		 
		 	//Цикл в Котором Ждем соединения с терминалом  , через открытый порт, Если WaitConnect вернет 1 значит подключился иначе 0 или по таймауту.
			счЦикла = 0;
			Пока счЦикла <> Таймаут Цикл
				ПодключитьсяКТерминалу=ДрайверТСД.WaitConnect(1000);
				Если ПодключитьсяКТерминалу=1 Тогда
					//если подключились то получаем данные первой накладной
					ПолучитьДанныеПервойНакладнойНаТСД = ДрайверТСД.DT900_FindFirstOrder(ИмяПервойНакладной, ДлинаФайлаПервойНакладной, КоличествоЗаписейВПервойНакладной);
					Прервать;
				КонецЕсли;
				счЦикла = 0; //счЦикла +1;
			КонецЦикла;
			
			//Делаем Дисконект по таймауту
			Если счЦикла=Таймаут Тогда
				Сообщить("Ошибка соединения с терминалом!");
				ДрайверТСД.Disconnect();
				Возврат;
			КонецЕсли;

		 
		 
		 
			
			
			
			//Если получили данные первой накладной
			Если ПолучитьДанныеПервойНакладнойНаТСД = 1 Тогда
				//Записываем их в список значений, который потом покажем ЮЗЕРУ
				СписокНакладных.Добавить(ИмяПервойНакладной);
				//Тут цикл в котором получаем последующие накладные, косяк в значени 100, тут по сути нужно знать количество накладных.
				Для i=0 по 100 цикл
					ИмяСледующейНакладной= Неопределено;
					ДлинаФайлаСледующейНакладной= Неопределено;
					КоличествоЗаписейВСледующейНакладной= Неопределено;
					ПолучитьСледующеюНакладную=ДрайверТСД.DT900_FindNextOrder(ИмяСледующейНакладной, ДлинаФайлаСледующейНакладной, КоличествоЗаписейВСледующейНакладной);
					Если ПолучитьСледующеюНакладную = 0 Тогда
						Прервать; // больше нет накладных
					ИначеЕсли ПолучитьСледующеюНакладную = 1 Тогда
						СписокНакладных.Добавить(ИмяСледующейНакладной);
					КонецЕсли;
					
				КонецЦикла;
				
				//Если получили накладные
				Если СписокНакладных <> Неопределено Тогда
					
					
					Для индекс=1 по СписокНакладных.Количество() Цикл
					 СтрокаСписка = СписокНакладных.Получить(индекс-1);
						
					НомерЗагруженнойНакладной = СтрокаСписка.Значение;
					ПолучитьВыбраннуюНакладную = ДрайверТСД.DT900_OpenOrder(НомерЗагруженнойНакладной);
///////////////////////////////////////////////////////////////////////////////////////////////////////////////
					Если ПолучитьВыбраннуюНакладную = 1 Тогда
							КолТоваров = Неопределено;
							ПолучитьКоличествоЗаписейВНакладной = ДрайверТСД.DT900_GetOrderCount(КолТоваров);
							Если ПолучитьКоличествоЗаписейВНакладной = 1 И КолТоваров > 0 Тогда
								Сообщить("Загружается: "+КолТоваров+" товаров."+Символы.ПС+"Из накладной номер: "+НомерЗагруженнойНакладной);
								
								
								ТоварыНакладной = новый ТаблицаЗначений; 
								ТоварыНакладной.Колонки.Добавить("Номенклатура");
								ТоварыНакладной.Колонки.Добавить("Штрихкод");
								ТоварыНакладной.Колонки.Добавить("Количество");
								ТоварыНакладной.Колонки.Добавить("Цена");


								
								//МногомерныйМассив = Новый Массив(КолТоваров,3); 
								//
								//ДанныеНакладнойИзТСДШтрихкод = новый Массив;
								//ДанныеНакладнойИзТСДКоличество = новый Массив;
								//ДанныеНакладнойИзТСДЦена = новый Массив;
								
									//Цикл в котором будем получать Записи накладной
								//ДанныеНакладнойИзТСДШтрихкод.Очистить();
								//ДанныеНакладнойИзТСДКоличество.Очистить();
								//ДанныеНакладнойИзТСДЦена.Очистить();
								//
								
								сч = 0;
								Пока сч <> КолТоваров Цикл
									 ШтрихКодЗаписиИзНакладной=Неопределено;
									 ЦенаЗаписиИзНакладной=Неопределено; 
									 КоличествоЗаписиИзНакладной= Неопределено;
									 
									 ПолучитьЗаписьТовара=ДрайверТСД.DT900_ReadOrderRecord(сч, ШтрихКодЗаписиИзНакладной, ЦенаЗаписиИзНакладной, КоличествоЗаписиИзНакладной);
									 
									 Если ПолучитьЗаписьТовара = 0 Тогда
										 Сообщить("Ошибка получения товара из накладной!");
										 НомерЗагруженнойНакладной = Неопределено;
										 ДрайверТСД.DT900_CloseOrder();
										 ДрайверТСД.Disconnect();
										 Возврат;
									 ИначеЕсли ПолучитьЗаписьТовара = 1 Тогда
										 //ДанныеНакладнойИзТСДШтрихкод.Добавить(ШтрихКодЗаписиИзНакладной);
										 //ДанныеНакладнойИзТСДКоличество.Добавить(КоличествоЗаписиИзНакладной);
										 //ДанныеНакладнойИзТСДЦена.Добавить(ЦенаЗаписиИзНакладной);
										 
										 НоваяСтрока = ТоварыНакладной.Добавить();
										 НоваяСтрока.Штрихкод = ШтрихКодЗаписиИзНакладной;
										 НоваяСтрока.Количество = КоличествоЗаписиИзНакладной;
										 НоваяСтрока.Цена = ЦенаЗаписиИзНакладной;


											сч=сч+1;
									 КонецЕсли;
								 КонецЦикла;
//нужно Включить будет//     СоздатьИЗаполнитьНакладнуюНаСервере(ТоварыНакладной);
							 КонецЕсли;
						КонецЕсли;
                   КонецЦикла;

					
					
					
					
					
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////
				Иначе
					Сообщить("Ошибка создания списка накладных!");
					ДрайверТСД.Disconnect();
					Возврат;
				КонецЕсли;	
				
			КонецЕсли;
			
		  		
				
	 ИначеЕсли  СоздатьОбъектДрайвера(ДрайверТСД) <>  мНетОшибки Тогда
		 Сообщить("Ошибка Подключения к драйверу!");
	 КонецЕсли;
			
	 ДрайверТСД.DT900_CloseOrder();
	 ДрайверТСД.Disconnect();			
		 	
							
			  
КонецПроцедуры

   &НаСервере
  Функция СоздатьОбъектДрайвера(ДрайверТСД) Экспорт
	
// Парметры ошибок
	мНетОшибки                 = 0;
	мОшибкаПараметровНастройки = 1;
	мОшибкаЗагрузкиДрайвера    = 2; 

	//параметры драйвераТСД
	 ТипСвязи = 2;
	 НомерПорта = 2000;
	 Таймаут = 30;
	 НомерДокумента = 0;
	 ОчищатьДокумент=ЛОЖЬ;
	ЗащищенныйРежимБТ = ЛОЖЬ;
	 ВыбиратьИсточникЗагрузки=ЛОЖЬ; 


	
	Результат = мНетОшибки;
	
		Если ТипСвязи          = Неопределено
		Или НомерПорта        = Неопределено
		Или Таймаут           = Неопределено
		Или НомерДокумента    = Неопределено
		Или ОчищатьДокумент   = Неопределено
		Или ЗащищенныйРежимБТ = Неопределено
		Или ВыбиратьИсточникЗагрузки = Неопределено 
		Тогда
		Результат = мОшибкаПараметровНастройки;
		Сообщить("Ошибка Подключения к ТСД, проверьте настройки!")
	Иначе
		Попытка
			ПрогИД = "AddIn.AddInObject.1";
			
			
		  #Если Клиент Тогда
				 УстановитьВнешнююКомпоненту(ПрогИД);
			 #КонецЕсли
			 
				 
				
			ПодключитьВнешнююКомпоненту(ПрогИД);
			ДрайверТСД = Новый ("AddIn.Hrp");
			//Настройки Подключения
			ДрайверТСД.SetPortMode(ТипСвязи);
			ДрайверТСД.SetPortNum(ТипСвязи,НомерПорта);
			ДрайверТСД.SetSafeMode(ЗащищенныйРежимБТ);
		Исключение
			Результат = мОшибкаЗагрузкиДрайвера;
			ОписаниеОшибки = "Невозможно подключиться к драйверу.
			| Проверьте, что драйвер корректно установлен и имеет ту же версию, 
			| что и обработка. Ошибка: " + ОписаниеОшибки();
			Сообщить(ОписаниеОшибки);
		КонецПопытки;
	КонецЕсли;
	
	Возврат Результат;

КонецФункции // СоздатьОбъектДрайвера()


 &НаСервере
Процедура СоздатьИЗаполнитьНакладнуюНаСервере(Накладная)
	
	//Ответственный = ТекущийПользователь();
	
	НовыйДок = Документы.РасходныйОрдерНаТовары.СоздатьДокумент();
	//  НовыйДок = Документы.РеализацияТоваровУслуг.СоздатьДокумент();

НовыйДок.Дата = ТекущаяДата();	

// Добавление товаров из накладной
Для Каждого СтрокаНакладной ИЗ Накладная Цикл
	
	НоваяСтрокаДок = НовыйДок.товары.Добавить();
	НоваяСтрокаДок.Номенклатура =   СтрокаНакладной.номенклатура;
   // НоваяСтрокаДок.  СтрокаНакладной.ШтрихКод;
	НоваяСтрокаДок.Количество =  СтрокаНакладной.Количество;
//	НоваяСтрокаДок.  СтрокаНакладной.Цена;
КонецЦикла;

		
	НовыйДок.записать();
	СООБЩИТЬ("Записан новый документ"); // от " + Строка(НовыйДок.Дата);	
	
КонецПроцедуры


						
						
						
						