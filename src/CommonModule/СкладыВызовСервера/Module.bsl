////////////////////////////////////////////////////////////////////////////////
// ПРОГРАММНЫЙ ИНТЕРФЕЙС

////////////////////////////////////////////////////////////////////////////////
// Обработка складских заданий в формах.

//Меняет статус документов "Отбор (размещение) товаров" на "Выполнено без ошибок"
//
//	Параметры:
//		МассивДокументов - Массив - массив ссылок на документы, у которых нужно изменить статус
//		НазначитьИсполнителя - Булево - при установке статуса записывать исполнителя задания
//		Исполнитель - СправочникСсылка.Пользователи - если НазначитьИсполнителя = ИСТИНА, то в этом параметре передается
//					устанавливаемый исполнитель
//	Возвращаемое значение:
//		Массив - массив ссылок на документы, изменившие статус
//
Функция ОтметитьВыполненениеЗаданийБезОшибок(Знач МассивДокументов, НазначитьИсполнителя, Исполнитель = Неопределено) Экспорт	
	
	МассивИзмененныхДокументов = Новый Массив;
	Индекс = МассивДокументов.Количество();
	
	Пока Индекс > 0 Цикл
		Индекс = Индекс - 1;
		СтрМас = МассивДокументов[Индекс];
		
		РеквизитыДокумента = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(СтрМас, "Статус, Проведен");
		Если Не РеквизитыДокумента.Проведен Тогда 
			ТекстСообщения = НСтр("ru = 'Статус документа %Документ% не изменен: групповой обработкой можно изменять статусы только для проведенных документов.'");
			
			ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Документ%", СтрМас);
			
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения);
			
			МассивДокументов.Удалить(Индекс);
		ИначеЕсли РеквизитыДокумента.Статус <> Перечисления.СтатусыОтборовРазмещенийТоваров.Подготовлено
			И РеквизитыДокумента.Статус <> Перечисления.СтатусыОтборовРазмещенийТоваров.ВРаботе Тогда
			
			ТекстСообщения = НСтр("ru = 'Статус документа %Документ% не изменен: групповой обработкой статус %ВыполненоБезОшибок% можно установить только для документов в статусе %Подготовлено% или %ВРаботе%.'");
			
			ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Документ%", СтрМас);
			ТекстСообщения = СтрЗаменить(ТекстСообщения, "%ВРаботе%", Перечисления.СтатусыОтборовРазмещенийТоваров.ВРаботе);
			ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Подготовлено%", Перечисления.СтатусыОтборовРазмещенийТоваров.Подготовлено);
			ТекстСообщения = СтрЗаменить(ТекстСообщения, "%ВыполненоБезОшибок%", Перечисления.СтатусыОтборовРазмещенийТоваров.ВыполненоБезОшибок);
			
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения);
			
			МассивДокументов.Удалить(Индекс);
		КонецЕсли;
	КонецЦикла;
	
	Если МассивДокументов.Количество() = 0 Тогда
		Возврат МассивИзмененныхДокументов;
	КонецЕсли;
	
	Для Каждого СтрТабл из МассивДокументов Цикл
		ДокументОбъект = СтрТабл.ПолучитьОбъект();
		Попытка
			ДокументОбъект.Заблокировать();
			
			ДокументОбъект.Статус = Перечисления.СтатусыОтборовРазмещенийТоваров.ВыполненоБезОшибок;
			Если НазначитьИсполнителя
				И ЗначениеЗаполнено(Исполнитель) Тогда
				ДокументОбъект.Исполнитель = Исполнитель;
			КонецЕсли;
			
			ОтказОтбор = Ложь;
			ПараметрыУказанияСерий = НоменклатураСервер.ПараметрыУказанияСерий(ДокументОбъект, Документы.ОтборРазмещениеТоваров);
			
			Если ДокументОбъект.ТоварыОтбор.Количество() > 0 Тогда
				ПараметрыУказанияСерий.ИмяТЧТовары = "ТоварыОтбор";
				ПараметрыУказанияСерий.ИмяТЧСерии  = "ТоварыОтбор";
				
				НоменклатураСервер.ЗаполнитьСтатусыУказанияСерий(ДокументОбъект,ПараметрыУказанияСерий);
				НоменклатураСервер.ПроверитьЗаполнениеСерий(ДокументОбъект,ПараметрыУказанияСерий,ОтказОтбор,Новый Массив);
			КонецЕсли;
			
			ОтказРазмещение = Ложь;
			Если ДокументОбъект.ТоварыРазмещение.Количество() > 0 Тогда
				ПараметрыУказанияСерий.ИмяТЧТовары = "ТоварыРазмещение";
				ПараметрыУказанияСерий.ИмяТЧСерии  = "ТоварыРазмещение";
				
				НоменклатураСервер.ЗаполнитьСтатусыУказанияСерий(ДокументОбъект,ПараметрыУказанияСерий);
				НоменклатураСервер.ПроверитьЗаполнениеСерий(ДокументОбъект,ПараметрыУказанияСерий,ОтказРазмещение,Новый Массив);
			КонецЕсли;
			
			Если Не ОтказОтбор
				И Не ОтказРазмещение Тогда
				ДокументОбъект.Записать(РежимЗаписиДокумента.Проведение);
				МассивИзмененныхДокументов.Добавить(СтрТабл);
			Иначе
				ТекстСообщения = НСтр("ru = 'Статус документа %Документ% не изменен.'");
				ТекстСообщения = СтрЗаменить(ТекстСообщения,"%Документ%",ДокументОбъект.Ссылка);
				
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения);
			КонецЕсли;
		Исключение
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ИнформацияОбОшибке().Описание);
		КонецПопытки;
	КонецЦикла;
	
	Возврат МассивИзмененныхДокументов;
КонецФункции

//Меняет статус документов "Отбор (размещение) товаров" на "В работе"
//
//	Параметры:
//		МассивДокументов - Массив - массив ссылок на документы, у которых нужно изменить статус
//		НазначитьИсполнителя - Булево - при установке статуса записывать исполнителя задания
//		Исполнитель - СправочникСсылка.Пользователи - если НазначитьИсполнителя = ИСТИНА, то в этом параметре передается
//					устанавливаемый исполнитель
//	Возвращаемое значение:
//		Массив - массив ссылок на документы, изменившие статус
//
Функция ВзятьЗаданияВРаботу(Знач МассивДокументов, НазначитьИсполнителя, Исполнитель) Экспорт		
		
	МассивИзмененныхДокументов = Новый Массив;
	
	Индекс = МассивДокументов.Количество();
	
	Пока Индекс > 0 Цикл
		Индекс = Индекс - 1;
		СтрМас = МассивДокументов[Индекс];
		
		РеквизитыДокумента = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(СтрМас, "Статус, Проведен");
		Если Не РеквизитыДокумента.Проведен Тогда 
			ТекстСообщения = НСтр("ru = 'Статус документа %Документ% не изменен: групповой обработкой можно изменять статусы только для проведенных документов.'");
			
			ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Документ%", СтрМас);
			
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения);
			
			МассивДокументов.Удалить(Индекс);
		ИначеЕсли РеквизитыДокумента.Статус <> Перечисления.СтатусыОтборовРазмещенийТоваров.Подготовлено Тогда
			
			ТекстСообщения = НСтр("ru = 'Статус документа %Документ% не изменен: групповой обработкой статус %ВРаботе% можно установить только для документов в статусе %Подготовлено%.'");
			
			ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Документ%", СтрМас);
			ТекстСообщения = СтрЗаменить(ТекстСообщения, "%ВРаботе%", Перечисления.СтатусыОтборовРазмещенийТоваров.ВРаботе);
			ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Подготовлено%", Перечисления.СтатусыОтборовРазмещенийТоваров.Подготовлено);
			
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения);
			
			МассивДокументов.Удалить(Индекс);
		КонецЕсли;
	КонецЦикла;
	
	Если МассивДокументов.Количество() = 0 Тогда
		Возврат МассивИзмененныхДокументов;
	КонецЕсли;
	
	Для каждого СтрТабл из МассивДокументов Цикл
		Попытка
			ДокументОбъект = СтрТабл.ПолучитьОбъект();
			
			ДокументОбъект.Заблокировать();
			
			ДокументОбъект.Статус = Перечисления.СтатусыОтборовРазмещенийТоваров.ВРаботе;
			Если НазначитьИсполнителя
				И ЗначениеЗаполнено(Исполнитель) Тогда
				ДокументОбъект.Исполнитель = Исполнитель;
			КонецЕсли;
			
			Если ДокументОбъект.ПроверитьЗаполнение() Тогда
				ДокументОбъект.Записать(РежимЗаписиДокумента.Запись);
				МассивИзмененныхДокументов.Добавить(ДокументОбъект.Ссылка);
			КонецЕсли;
		Исключение
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ИнформацияОбОшибке().Описание);
		КонецПопытки;
		
	КонецЦикла;
	
	Возврат МассивИзмененныхДокументов;
	
КонецФункции
