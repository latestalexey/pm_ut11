
Процедура ПриОткрытии(Форма, Отказ) Экспорт
	
	// МеханизмВнешнегоОборудования
	Если МенеджерОборудованияКлиент.ОбновитьРабочееМестоКлиента() Тогда // Проверка на определенность рабочего места ВО
		ОписаниеОшибки = "";
		
		ПоддерживаемыеТипыВО = Новый Массив();
		ПоддерживаемыеТипыВО.Добавить("СканерШтрихкода");
		
		Если НЕ МенеджерОборудованияКлиент.ПодключитьОборудованиеПоТипу(Форма.УникальныйИдентификатор, ПоддерживаемыеТипыВО, ОписаниеОшибки) Тогда
			// Добавить запись об ошибке в журнал регистрации.
			ИмяСобытия = НСтр("ru = 'При подключении оборудования произошла ошибка.'");
			
			КомментарийЖурнала = НСтр("ru = 'При подключении оборудования произошла ошибка: ""%1"".'");
			КомментарийЖурнала = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(КомментарийЖурнала, ОписаниеОшибки);
			
			РабочееМестоРаботникаСкладаСервер.ПриОшибкеПодключенияОборудования(ИмяСобытия, КомментарийЖурнала);
			
			Форма.ПараметрыРежима.МожноЗакрытьФорму = Истина;
			
			// Вывести сообщение об ошибке.
			ТекстСообщения = НСтр("ru = 'При подключении оборудования произошла ошибка 
			|(см. журнал регистрации).'");
			
			КнопкаЗакрыть = РабочееМестоРаботникаСкладаКлиентСервер.НоваяКнопкаДиалога(
				"ЗакрытьФормуМобильногоРабочегоМеста", 
				НСтр("ru = 'Закрыть программу'"), 
				Истина);
			
			Кнопки = Новый СписокЗначений;
			Кнопки.Добавить(КнопкаЗакрыть);
			
			РабочееМестоРаботникаСкладаСервер.ПоказатьДиалогСообщение(Форма, ТекстСообщения, Кнопки);
		КонецЕсли;
		
	КонецЕсли;
	// Конец МеханизмВнешнегоОборудования
	
	Форма.ПодключитьОбработчикОжидания("Подключаемый_ОбновитьСписокЗаданийОбработчикОжидания", 60);
	
КонецПроцедуры

Процедура ПриЗакрытии(Форма) Экспорт
	
	// МеханизмВнешнегоОборудования
	ПоддерживаемыеТипыВО = Новый Массив();
	ПоддерживаемыеТипыВО.Добавить("СканерШтрихкода");
	
	МенеджерОборудованияКлиент.ОтключитьОборудованиеПоТипу(Форма.УникальныйИдентификатор, ПоддерживаемыеТипыВО);
	// Конец МеханизмВнешнегоОборудования
	
	Если НЕ РабочееМестоРаботникаСкладаСервер.ЭтоПривилегированныйПользователь() Тогда
		
		ЗавершитьРаботуСистемы(Ложь);
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ВводКоличестваКоличествоПриИзменении(Форма) Экспорт
	
	Форма.ПодключитьОбработчикОжидания("Подключаемый_ВводКоличестваОКОбработчикОжидания", 0.5, Истина);
	Форма.ПодключитьОбработчикОжидания("Подключаемый_ВывестиСостояниеВыполненияЗаданияОбработчикОжидания", 5, Истина);
	
КонецПроцедуры

Процедура ВводКоличестваОК(Форма) Экспорт
	
	ТекущееСообщениеПользователю = "";
	
КонецПроцедуры

Процедура СканированиеЯчейка(Форма) Экспорт
	
	ТекстСообщенияПользователю = "";
	
КонецПроцедуры

Процедура ЗакрытьФормуМобильногоРабочегоМеста(Форма) Экспорт
	
	Форма.ПараметрыРежима.МожноЗакрытьФорму = Истина;
	Форма.Закрыть();
	
КонецПроцедуры

Процедура ВыборЗначенияОК(Форма) Экспорт
	
	ТекущееСообщениеПользователю = "";
	
КонецПроцедуры

Процедура ШтрихкодПараметраСканированияПриИзменении(Форма) Экспорт
	
	Если НЕ Форма.Элементы.СрокГодностиСерии.Видимость Тогда
		Форма.ПодключитьОбработчикОжидания("Подключаемый_ВыборЗначенияОКОбработчикОжидания", 0.5, Истина);
		Форма.ПодключитьОбработчикОжидания("Подключаемый_ВывестиСостояниеВыполненияЗаданияОбработчикОжидания", 5, Истина);
	КонецЕсли;
	
КонецПроцедуры

Процедура СрокГодностиСерииПриИзменении(Форма) Экспорт
	
	Форма.ПодключитьОбработчикОжидания("Подключаемый_ВыборЗначенияОКОбработчикОжидания", 0.5, Истина);
	Форма.ПодключитьОбработчикОжидания("Подключаемый_ВывестиСостояниеВыполненияЗаданияОбработчикОжидания", 5, Истина);
	
КонецПроцедуры

Процедура ЗаданияОбновить(Форма) Экспорт
	
	Форма.Элементы.Задания.Обновить();
	
КонецПроцедуры