////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

////////////////////////////////////////////////////////////////////////////////
// Выполнение регламентных заданий

// Обработчик регламентного задания "ОбновлениеАгрегатов".
Процедура ОбновлениеАгрегатов() Экспорт
	
	Если ПустаяСтрока(ИмяПользователя()) Тогда
		УстановитьПривилегированныйРежим(Истина);
	КонецЕсли;
	
	Для Каждого ТекущийРегистр Из Метаданные.РегистрыНакопления Цикл
		Если ТекущийРегистр.ВидРегистра = Метаданные.СвойстваОбъектов.ВидРегистраНакопления.Обороты Тогда
			Если РегистрыНакопления[ТекущийРегистр.Имя].ПолучитьРежимАгрегатов()
			  И РегистрыНакопления[ТекущийРегистр.Имя].ПолучитьИспользованиеАгрегатов() Тогда
			  	РегистрыНакопления[ТекущийРегистр.Имя].ОбновитьАгрегаты();
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

// Обработчик регламентного задания "ПерестроениеАгрегатов".
Процедура ПерестроениеАгрегатов() Экспорт
	
	Если ПустаяСтрока(ИмяПользователя()) Тогда
		УстановитьПривилегированныйРежим(Истина);
	КонецЕсли;
	
	Для каждого ТекущийРегистр Из Метаданные.РегистрыНакопления Цикл
		Если ТекущийРегистр.ВидРегистра = Метаданные.СвойстваОбъектов.ВидРегистраНакопления.Обороты Тогда
			
			Если РегистрыНакопления[ТекущийРегистр.Имя].ПолучитьРежимАгрегатов()
			   И РегистрыНакопления[ТекущийРегистр.Имя].ПолучитьИспользованиеАгрегатов() Тогда
			
				РегистрыНакопления[ТекущийРегистр.Имя].ПерестроитьИспользованиеАгрегатов();
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

// Обработчик регламентного задания "УстановкаПериодаРассчитанныхИтогов".
Процедура УстановкаПериодаРассчитанныхИтогов() Экспорт
	
	Если ПустаяСтрока(ИмяПользователя()) Тогда
		УстановитьПривилегированныйРежим(Истина);
	КонецЕсли;
	
	НаДату = НачалоМесяца(ТекущаяДатаСеанса()) - 1;
	ПересчетРегистров(РегистрыНакопления, НаДату, Метаданные.СвойстваОбъектов.ВидРегистраНакопления.Остатки);
	ПересчетРегистров(РегистрыБухгалтерии, НаДату);
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// Локальные служебные процедуры и функции

// Только для внутреннего использования.
Процедура ПересчетРегистров(МенеджерРегистров, НаДату, ОграничениеПоВидуРегистра = Неопределено)
	
	Для Каждого МенеджерРегистра Из МенеджерРегистров Цикл
		
		МетаданныеРегистра = Метаданные.НайтиПоТипу(ТипЗнч(МенеджерРегистра));
		
		Если ОграничениеПоВидуРегистра <> Неопределено И МетаданныеРегистра.ВидРегистра <> ОграничениеПоВидуРегистра Тогда
			Продолжить;
		КонецЕсли;
		
		Если МенеджерРегистра.ПолучитьПериодРассчитанныхИтогов() < НаДату Тогда
			МенеджерРегистра.УстановитьПериодРассчитанныхИтогов(НаДату);
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры
