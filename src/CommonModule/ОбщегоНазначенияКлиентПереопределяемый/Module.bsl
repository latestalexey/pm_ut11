////////////////////////////////////////////////////////////////////////////////
// Подсистема "Базовая функциональность".
// В этом модуле содержится реализация обработчиков модуля приложения. 
//
////////////////////////////////////////////////////////////////////////////////


////////////////////////////////////////////////////////////////////////////////
// ПРОГРАММНЫЙ ИНТЕРФЕЙС

// Выполняется перед интерактивном началом работы пользователя с областью данных.
// Соответствует обработчику ПередНачаломРаботыСистемы
//
// Параметры:
// Отказ - Булево - отказ в от начала работы. Если параметр установить в Истина,
// начало работы с областью осуществлено не будет.
//
Процедура ПередНачаломРаботыСистемы(Отказ) Экспорт
	
КонецПроцедуры

// Выполняется при интерактивном начале работы пользователя с областью данных.
// Соответствует обработчику ПриНачалеРаботыСистемы
//
// Параметры
//  ОбрабатыватьПараметрыЗапуска - Булево - Истина, если обработчик вызван при 
//  непосредственном входе пользователя в систему и должен обработать параметры
//  запуска (если это предусмотрено его логикой). Иначе обработчика вызван
//  при интерактивном входе неразделенного пользователя в область данных и
//  обрабатывать параметры запуска не следует.
//
Процедура ПриНачалеРаботыСистемы(Знач ОбрабатыватьПараметрыЗапуска = Ложь) Экспорт
	
	//РаботаСВнешнимОборудованием
	МенеджерОборудованияКлиент.ПриНачалеРаботыСистемы();
	//Конец РаботаСВнешнимОборудованием
	
	//РаботаСМобильнымиПриложениями
	МобильныеПриложенияКлиент.ПриНачалеРаботыСистемы();
	//Конец РаботаСМобильнымиПриложениями
	
	//ОткрытиеФормПриНачалеРаботыСистемы
	ОткрытиеФормПриНачалеРаботыСистемыКлиент.ПриНачалеРаботыСистемы();
	//Конец ОткрытиеФормПриНачалеРаботыСистемы
	
	//Диалог выбора варианта настройки системы
	ПараметрыРаботыКлиента = СтандартныеПодсистемыКлиентПовтИсп.ПараметрыРаботыКлиентаПриЗапуске();
	Если ПараметрыРаботыКлиента.НеобходимаНачальнаяНастройкаПрограммы Тогда
		Если ПараметрыРаботыКлиента.НеобходимаНачальнаяНастройкаБазовойВерсии Тогда
			ОткрытьФормуМодально("Обработка.ПомощникНастройкиПараметровБазовойВерсии.Форма.Помощник");
		Иначе
			ОткрытьФормуМодально("ОбщаяФорма.ВыборВариантаНастройкиПрограммы");
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

// Обработать параметры запуска программы.
// Реализация функции может быть расширена для обработки новых параметров.
//
// Параметры
//  ЗначениеПараметраЗапуска - Строка - первое значение параметра запуска, 
//                                      до первого символа ";"
//  ПараметрыЗапуска  – Строка – параметр запуска, переданный в конфигурацию 
//                               с помощью ключа командной строки /C.
//
// Возвращаемое значение:
//   Булево   – Истина, если необходимо прервать выполнение процедуры ПриНачалеРаботыСистемы.
//
Функция ОбработатьПараметрыЗапуска(ЗначениеПараметраЗапуска, ПараметрыЗапуска) Экспорт

	Возврат Ложь;

КонецФункции

// Соответствует обработчику ПередЗавершениемРаботыСистемы.
//
Процедура ПередЗавершениемРаботыСистемы(Отказ) Экспорт
	
	Если НЕ Отказ Тогда
		
		//РаботаСВнешнимОборудованием
		МенеджерОборудованияКлиент.ПередЗавершениемРаботыСистемы();
		//Конец РаботаСВнешнимОборудованием
		
		Если глКомпонентаОбменаСМобильнымиПриложениями <> Неопределено Тогда
			
			Попытка
				глКомпонентаОбменаСМобильнымиПриложениями.Отключить(0);
			Исключение
				ИмяСобытия = НСтр("ru='Ошибка при отключении компоненты обмена данными'");
				ОбщегоНазначенияКлиент.ДобавитьСообщениеДляЖурналаРегистрации(ИмяСобытия,"Ошибка",ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
			КонецПопытки;
			
			глКомпонентаОбменаСМобильнымиПриложениями = Неопределено;
			
		КонецЕсли;
		
		//Работа с буфером обмена
		ОбщегоНазначенияУТВызовСервера.ОчиститьБуферОбмена();
		
	КонецЕсли;
	
КонецПроцедуры