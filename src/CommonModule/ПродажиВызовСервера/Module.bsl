////////////////////////////////////////////////////////////////////////////////
// Модуль содержит процедуры и функции для пересчета итогов документов в формах.
//
////////////////////////////////////////////////////////////////////////////////

////////////////////////////////////////////////////////////////////////////////
// ПРОГРАММНЫЙ ИНТЕРФЕЙС

//Проверяет, есть ли в табличной части строки с незаполненной датой отгрузки в неотмененных строках
//	
//Параметры:
//		Объект - ДанныеФормыСтруктура - проверяемый обеъкт
//		ИмяТЧ - Строка - имя проверяемой ТЧ
//
//Возвращаемое значение:
//		Булево - признак наличия строк с незаполненной датой отгрузки
Функция ДатаОтгрузкиПустая(Знач Объект, ИмяТЧ) Экспорт
	
	Если Объект.НеОтгружатьЧастями Тогда
		Если НЕ ЗначениеЗаполнено(Объект.ДатаОтгрузки) Тогда
			
			Возврат Истина;
			
		КонецЕсли;
		
	Иначе
		Для Каждого ТекСтрока Из Объект[ИмяТЧ] Цикл
			
			Если Не ТекСтрока.Отменено
				И Не ЗначениеЗаполнено(ТекСтрока.ДатаОтгрузки) Тогда
				
				Возврат Истина;
				
			КонецЕсли;
			
		КонецЦикла;
		
	КонецЕсли;
	Возврат Ложь;
	
КонецФункции

// Функция возвращает состояние фактической отгрузки по документу
//
// Параметры:
// 		ДокументОтгрузки - ДокументСсылка - Ссылка на документ
//
// Возвращаемое значение:
// 		Структура - Структура с полями "ЕстьОтгруженныеТовары, ЕстьНесобранныеТовары" типа "Булево"
//
Функция ПолучитьСостояниеФактическойОтгрузки(ДокументОтгрузки) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	ЕСТЬNULL(СУММА(ТоварыКОтгрузкеОбороты.КОтгрузкеРасход),0)
	|	+ ЕСТЬNULL(СУММА(ТоварыКОтгрузкеОбороты.СобраноПриход),0)  КАК Количество,
	|	ЕСТЬNULL(СУММА(ТоварыКОтгрузкеОбороты.СобираетсяПриход),0) КАК КоличествоСобирается
	|ИЗ
	|	РегистрНакопления.ТоварыКОтгрузке.Обороты( , , , ДокументОтгрузки = &ДокументОтгрузки) КАК ТоварыКОтгрузкеОбороты");
	Запрос.УстановитьПараметр("ДокументОтгрузки", ДокументОтгрузки);
	
	Выборка = Запрос.Выполнить().Выбрать();
	ЕстьВыборка = Выборка.Следующий();
	
	СостояниеОтгрузки = Новый Структура(
		"ЕстьОтгруженныеТовары, ЕстьНесобранныеТовары",
		(ЕстьВыборка И Выборка.Количество > 0),
		(ЕстьВыборка И Выборка.КоличествоСобирается > 0)
	);
	
	УстановитьПривилегированныйРежим(Ложь);
	
	Возврат СостояниеОтгрузки;
	
КонецФункции

// Возвращает ссылку на счет-фактуру по документу.
//
// Параметры:
//  Основание - ДокументСсылка - Документ, на основании которого вводится счет-фактура;
//  Организация - СправочникСсылка.Организации - Организация, на имя которой оформляется счет-фактура.
//
// Возвращаемое значение:
//  ДокументСсылка.СчетФактураВыданный, Неопределено - Ссылка на счет-фактуру по документу.
//		Если счет-фактура не найдена - Неопределено.
//
Функция СчетФактураДокумента(Основание, Организация = Неопределено) Экспорт
	
	Перем РеквизитыСчетаФактуры;
	
	Документы.СчетФактураВыданный.СчетаФактурыПоОснованию(Основание, Организация, РеквизитыСчетаФактуры);
	
	Если РеквизитыСчетаФактуры <> Неопределено Тогда
		СчетФактураДокумента = РеквизитыСчетаФактуры.Ссылка;
	Иначе
		СчетФактураДокумента = Неопределено;
	КонецЕсли;
	
	Возврат СчетФактураДокумента;
	
КонецФункции

// Формирует структуру для создания реализации по одному или нескольким заказам клиентов
// Если в переданных заказах отличаются реквизиты шапки, выдается сообщение об ошибке
//
// Параметры:
// МассивСсылок   - Массив - заказы поставщикам, по которым необходимо ввести реализацию
// РеквизитыШапки - Структура - структура, в которую будут помещены реквизиты шапки из массива заказов
//
// Возвращаемое значение:
// Булево
// Ложь, если в переданных заказах отличаются реквизиты шапки
//
Функция СформироватьДанныеЗаполненияРеализации(МассивСсылок, РеквизитыШапки) Экспорт
	
	Запрос = Новый Запрос(
		"ВЫБРАТЬ
		|	МИНИМУМ(ЗаказКлиента.Партнер)                        КАК Партнер,
		|	МИНИМУМ(ЗаказКлиента.Контрагент)                     КАК Контрагент,
		|	МИНИМУМ(ЗаказКлиента.Договор)                        КАК Договор,
		|	МИНИМУМ(ЗаказКлиента.Организация)                    КАК Организация,
		|	МИНИМУМ(ЗаказКлиента.Соглашение)                     КАК Соглашение,
		|	МИНИМУМ(ЗаказКлиента.Сделка)                         КАК Сделка,
		|	МИНИМУМ(ЗаказКлиента.Склад)                          КАК Склад,
		|	МИНИМУМ(ЗаказКлиента.ХозяйственнаяОперация)          КАК ХозяйственнаяОперация,
		|	МИНИМУМ(ЗаказКлиента.ВалютаВзаиморасчетов)           КАК ВалютаВзаиморасчетов,
		|	МИНИМУМ(ЗаказКлиента.НалогообложениеНДС)             КАК НалогообложениеНДС,
		|	МИНИМУМ(ЗаказКлиента.ЦенаВключаетНДС)                КАК ЦенаВключаетНДС,
		|	МИНИМУМ(ЗаказКлиента.ВернутьМногооборотнуюТару)      КАК ВернутьМногооборотнуюТару,
		|	МИНИМУМ(ЗаказКлиента.СрокВозвратаМногооборотнойТары) КАК СрокВозвратаМногооборотнойТары,
		|	МИНИМУМ(ЗаказКлиента.Соглашение.РассчитыватьДатуВозвратаТарыПоКалендарю) КАК РассчитыватьДатуВозвратаТарыПоКалендарю,
		|	ВЫБОР
		|		КОГДА
		|			КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ЗаказКлиента.Подразделение) > 1
		|		ТОГДА
		|			ЗНАЧЕНИЕ(Справочник.ПодразделенияОрганизаций.ПустаяСсылка)
		|		ИНАЧЕ
		|			МИНИМУМ(ЗаказКлиента.Подразделение)
		|	КОНЕЦ КАК Подразделение,
		|	ВЫБОР
		|		КОГДА
		|			КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ЗаказКлиента.Партнер) > 1
		|		ТОГДА
		|			ИСТИНА
		|		ИНАЧЕ
		|			ЛОЖЬ
		|	КОНЕЦ КАК ЕстьОтличияПартнер,
		|	ВЫБОР
		|		КОГДА
		|			КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ЗаказКлиента.Контрагент) > 1
		|		ТОГДА
		|			ИСТИНА
		|		ИНАЧЕ
		|			ЛОЖЬ
		|	КОНЕЦ КАК ЕстьОтличияКонтрагент,
		|	ВЫБОР
		|		КОГДА
		|			КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ЗаказКлиента.Договор) > 1
		|		ТОГДА
		|			ИСТИНА
		|		ИНАЧЕ
		|			ЛОЖЬ
		|	КОНЕЦ КАК ЕстьОтличияДоговор,
		|	ВЫБОР
		|		КОГДА
		|			КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ЗаказКлиента.Организация) > 1
		|		ТОГДА
		|			ИСТИНА
		|		ИНАЧЕ
		|			ЛОЖЬ
		|	КОНЕЦ КАК ЕстьОтличияОрганизация,
		|	ВЫБОР
		|		КОГДА
		|			КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ЗаказКлиента.Соглашение) > 1
		|		ТОГДА
		|			ИСТИНА
		|		ИНАЧЕ
		|			ЛОЖЬ
		|	КОНЕЦ КАК ЕстьОтличияСоглашение,
		|	ВЫБОР
		|		КОГДА
		|			КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ЗаказКлиента.Сделка) > 1
		|		ТОГДА
		|			ИСТИНА
		|		ИНАЧЕ
		|			ЛОЖЬ
		|	КОНЕЦ КАК ЕстьОтличияСделка,
		|	ВЫБОР
		|		КОГДА
		|			КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ЗаказКлиента.СкладОтгрузки) > 1
		|		ТОГДА
		|			ИСТИНА
		|		ИНАЧЕ
		|			ЛОЖЬ
		|	КОНЕЦ КАК ЕстьОтличияСклад,
		|	ВЫБОР
		|		КОГДА
		|			КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ЗаказКлиента.ХозяйственнаяОперация) > 1
		|		ТОГДА
		|			ИСТИНА
		|		ИНАЧЕ
		|			ЛОЖЬ
		|	КОНЕЦ КАК ЕстьОтличияХозяйственнаяОперация,
		|	ВЫБОР
		|		КОГДА
		|			КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ЗаказКлиента.ВалютаВзаиморасчетов) > 1
		|		ТОГДА
		|			ИСТИНА
		|		ИНАЧЕ
		|			ЛОЖЬ
		|	КОНЕЦ КАК ЕстьОтличияВалютаВзаиморасчетов,
		|	ВЫБОР
		|		КОГДА
		|			КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ЗаказКлиента.НалогообложениеНДС) > 1
		|		ТОГДА
		|			ИСТИНА
		|		ИНАЧЕ
		|			ЛОЖЬ
		|	КОНЕЦ КАК ЕстьОтличияНалогообложениеНДС,
		|	ВЫБОР
		|		КОГДА
		|			КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ЗаказКлиента.ЦенаВключаетНДС) > 1
		|		ТОГДА
		|			ИСТИНА
		|		ИНАЧЕ
		|			ЛОЖЬ
		|	КОНЕЦ КАК ЕстьОтличияЦенаВключаетНДС,
		|	ВЫБОР
		|		КОГДА
		|			КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ЗаказКлиента.ВернутьМногооборотнуюТару) > 1
		|		ТОГДА
		|			ИСТИНА
		|		ИНАЧЕ
		|			ЛОЖЬ
		|	КОНЕЦ КАК ЕстьОтличияВернутьМногооборотнуюТару,
		|	ВЫБОР
		|		КОГДА
		|			КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ЗаказКлиента.СрокВозвратаМногооборотнойТары) > 1
		|		ТОГДА
		|			ИСТИНА
		|		ИНАЧЕ
		|			ЛОЖЬ
		|	КОНЕЦ КАК ЕстьОтличияСрокВозвратаМногооборотнойТары,
		|	ВЫБОР
		|		КОГДА
		|			КОЛИЧЕСТВО(РАЗЛИЧНЫЕ
		|				ВЫБОР
		|					КОГДА
		|						ЗаказКлиента.БанковскийСчет <> ЗНАЧЕНИЕ(Справочник.БанковскиеСчетаОрганизаций.ПустаяСсылка)
		|					ТОГДА
		|						ЗаказКлиента.БанковскийСчет
		|					ИНАЧЕ
		|						NULL
		|				КОНЕЦ) = 1 И
		|			КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ЗаказКлиента.Организация) = 1
		|		ТОГДА
		|			МАКСИМУМ(ЗаказКлиента.БанковскийСчет)
		|		ИНАЧЕ
		|			ЗНАЧЕНИЕ(Справочник.БанковскиеСчетаОрганизаций.ПустаяСсылка)
		|	КОНЕЦ КАК БанковскийСчет,
		|	ВЫБОР
		|		КОГДА
		|			КОЛИЧЕСТВО(РАЗЛИЧНЫЕ
		|				ВЫБОР
		|					КОГДА
		|						ЗаказКлиента.БанковскийСчетКонтрагента <> ЗНАЧЕНИЕ(Справочник.БанковскиеСчетаКонтрагентов.ПустаяСсылка)
		|					ТОГДА
		|						ЗаказКлиента.БанковскийСчетКонтрагента
		|					ИНАЧЕ
		|						NULL
		|				КОНЕЦ) = 1 И
		|			КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ЗаказКлиента.Контрагент) = 1
		|		ТОГДА
		|			МАКСИМУМ(ЗаказКлиента.БанковскийСчетКонтрагента)
		|		ИНАЧЕ
		|			ЗНАЧЕНИЕ(Справочник.БанковскиеСчетаКонтрагентов.ПустаяСсылка)
		|	КОНЕЦ КАК БанковскийСчетКонтрагента,
		|	ВЫБОР
		|		КОГДА
		|			КОЛИЧЕСТВО(РАЗЛИЧНЫЕ
		|				ВЫБОР
		|					КОГДА
		|						ЗаказКлиента.Грузоотправитель <> ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)
		|					ТОГДА
		|						ЗаказКлиента.Грузоотправитель
		|					ИНАЧЕ
		|						NULL
		|				КОНЕЦ) = 1
		|		ТОГДА
		|			МАКСИМУМ(ЗаказКлиента.Грузоотправитель)
		|		ИНАЧЕ
		|			ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)
		|	КОНЕЦ КАК Грузоотправитель,
		|	ВЫБОР
		|		КОГДА
		|			КОЛИЧЕСТВО(РАЗЛИЧНЫЕ
		|				ВЫБОР
		|					КОГДА
		|						ЗаказКлиента.Грузополучатель <> ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)
		|					ТОГДА
		|						ЗаказКлиента.Грузополучатель
		|					ИНАЧЕ
		|						NULL
		|				КОНЕЦ) = 1
		|		ТОГДА
		|			МАКСИМУМ(ЗаказКлиента.Грузополучатель)
		|		ИНАЧЕ
		|			ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)
		|	КОНЕЦ КАК Грузополучатель,
		|	ВЫБОР
		|		КОГДА
		|			КОЛИЧЕСТВО(РАЗЛИЧНЫЕ
		|				ВЫБОР
		|					КОГДА
		|						ЗаказКлиента.БанковскийСчетГрузоотправителя <> ЗНАЧЕНИЕ(Справочник.БанковскиеСчетаКонтрагентов.ПустаяСсылка)
		|					ТОГДА
		|						ЗаказКлиента.БанковскийСчетГрузоотправителя
		|					ИНАЧЕ
		|						NULL
		|				КОНЕЦ) = 1 И
		|			КОЛИЧЕСТВО(РАЗЛИЧНЫЕ
		|				ВЫБОР
		|					КОГДА
		|						ЗаказКлиента.Грузоотправитель <> ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)
		|					ТОГДА
		|						ЗаказКлиента.Грузоотправитель
		|					ИНАЧЕ
		|						NULL
		|				КОНЕЦ) = 1
		|		ТОГДА
		|			МАКСИМУМ(ЗаказКлиента.БанковскийСчетГрузоотправителя)
		|		ИНАЧЕ
		|			ЗНАЧЕНИЕ(Справочник.БанковскиеСчетаКонтрагентов.ПустаяСсылка)
		|	КОНЕЦ КАК БанковскийСчетГрузоотправителя,
		|	ВЫБОР
		|		КОГДА
		|			КОЛИЧЕСТВО(РАЗЛИЧНЫЕ
		|				ВЫБОР
		|					КОГДА
		|						ЗаказКлиента.БанковскийСчетГрузополучателя <> ЗНАЧЕНИЕ(Справочник.БанковскиеСчетаКонтрагентов.ПустаяСсылка)
		|					ТОГДА
		|						ЗаказКлиента.БанковскийСчетГрузополучателя
		|					ИНАЧЕ
		|						NULL
		|				КОНЕЦ) = 1 И
		|			КОЛИЧЕСТВО(РАЗЛИЧНЫЕ
		|				ВЫБОР
		|					КОГДА
		|						ЗаказКлиента.Грузополучатель <> ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)
		|					ТОГДА
		|						ЗаказКлиента.Грузополучатель
		|					ИНАЧЕ
		|						NULL
		|				КОНЕЦ) = 1
		|		ТОГДА
		|			МАКСИМУМ(ЗаказКлиента.БанковскийСчетГрузополучателя)
		|		ИНАЧЕ
		|			ЗНАЧЕНИЕ(Справочник.БанковскиеСчетаКонтрагентов.ПустаяСсылка)
		|	КОНЕЦ КАК БанковскийСчетГрузополучателя,
		|	МИНИМУМ(ЗаказКлиента.СкладОтгрузки) КАК СкладОтгрузки,
		|	ВЫБОР
		|		КОГДА
		|			МИНИМУМ(ЗаказКлиента.Склад.ЭтоГруппа) = ИСТИНА И МИНИМУМ(ЗаказКлиента.Склад.ВыборГруппы) = ЗНАЧЕНИЕ(Перечисление.ВыборГруппыСкладов.РазрешитьВЗаказах)
		|		ТОГДА
		|			ИСТИНА
		|		ИНАЧЕ
		|			ЛОЖЬ
		|	КОНЕЦ КАК ЗапрещеноВыбиратьГруппуСкладов,
		|	ВЫБОР
		|		КОГДА
		|			КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ЗаказКлиента.СпособДоставки) > 1
		|		ТОГДА
		|			ЗНАЧЕНИЕ(Перечисление.СпособыДоставки.Самовывоз)
		|		ИНАЧЕ
		|			МИНИМУМ(ЗаказКлиента.СпособДоставки)
		|	КОНЕЦ КАК СпособДоставки,
		|	ВЫБОР
		|		КОГДА
		|			КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ЗаказКлиента.ПеревозчикПартнер) > 1
		|		ТОГДА
		|			ЗНАЧЕНИЕ(Справочник.Партнеры.ПустаяСсылка)
		|		ИНАЧЕ
		|			МИНИМУМ(ЗаказКлиента.ПеревозчикПартнер)
		|	КОНЕЦ КАК ПеревозчикПартнер,
		|	ВЫБОР
		|		КОГДА
		|			КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ЗаказКлиента.АдресДоставки) > 1
		|		ТОГДА
		|			""""
		|		ИНАЧЕ
		|			МИНИМУМ(ЗаказКлиента.АдресДоставки)
		|	КОНЕЦ КАК АдресДоставки,
		|	ВЫБОР
		|		КОГДА
		|			КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ВЫРАЗИТЬ(ЗаказКлиента.АдресДоставкиЗначенияПолей КАК СТРОКА(1000))) > 1
		|		ТОГДА
		|			""""
		|		ИНАЧЕ
		|			МИНИМУМ(ВЫРАЗИТЬ(ЗаказКлиента.АдресДоставкиЗначенияПолей КАК СТРОКА(1000)))
		|	КОНЕЦ КАК АдресДоставкиЗначенияПолей,
		|	ВЫБОР
		|		КОГДА
		|			КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ЗаказКлиента.АдресДоставкиПеревозчика) > 1
		|		ТОГДА
		|			""""
		|		ИНАЧЕ
		|			МИНИМУМ(ЗаказКлиента.АдресДоставкиПеревозчика)
		|	КОНЕЦ КАК АдресДоставкиПеревозчика,
		|	ВЫБОР
		|		КОГДА
		|			КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ВЫРАЗИТЬ(ЗаказКлиента.АдресДоставкиПеревозчикаЗначенияПолей КАК СТРОКА(1000))) > 1
		|		ТОГДА
		|			""""
		|		ИНАЧЕ
		|			МИНИМУМ(ВЫРАЗИТЬ(ЗаказКлиента.АдресДоставкиПеревозчикаЗначенияПолей КАК СТРОКА(1000)))
		|	КОНЕЦ КАК АдресДоставкиПеревозчикаЗначенияПолей,
		|	ВЫБОР
		|		КОГДА
		|			КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ЗаказКлиента.ЗонаДоставки) > 1
		|		ТОГДА
		|			ЗНАЧЕНИЕ(Справочник.ЗоныДоставки.ПустаяСсылка)
		|		ИНАЧЕ
		|			МИНИМУМ(ЗаказКлиента.ЗонаДоставки)
		|	КОНЕЦ КАК ЗонаДоставки,
		|	ВЫБОР
		|		КОГДА
		|			КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ЗаказКлиента.ВремяДоставкиС) > 1
		|		ТОГДА
		|			ДАТАВРЕМЯ(1, 1, 1)
		|		ИНАЧЕ
		|			МИНИМУМ(ЗаказКлиента.ВремяДоставкиС)
		|	КОНЕЦ КАК ВремяДоставкиС,
		|	ВЫБОР
		|		КОГДА
		|			КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ЗаказКлиента.ВремяДоставкиПо) > 1
		|		ТОГДА
		|			ДАТАВРЕМЯ(1, 1, 1)
		|		ИНАЧЕ
		|			МИНИМУМ(ЗаказКлиента.ВремяДоставкиПо)
		|	КОНЕЦ КАК ВремяДоставкиПо,
		|	ВЫБОР
		|		КОГДА
		|			КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ВЫРАЗИТЬ(ЗаказКлиента.ДополнительнаяИнформацияПоДоставке КАК СТРОКА(1000))) > 1
		|		ТОГДА
		|			""""
		|		ИНАЧЕ
		|			МИНИМУМ(ВЫРАЗИТЬ(ЗаказКлиента.ДополнительнаяИнформацияПоДоставке КАК СТРОКА(1000)))
		|	КОНЕЦ КАК ДополнительнаяИнформацияПоДоставке
		|ИЗ (
		|ВЫБРАТЬ
		|	ЗаказКлиента.Партнер                               КАК Партнер,
		|	ЗаказКлиента.Контрагент                            КАК Контрагент,
		|	ЗаказКлиента.Договор                               КАК Договор,
		|	ЗаказКлиента.Организация                           КАК Организация,
		|	ЗаказКлиента.Соглашение                            КАК Соглашение,
		|	ЗаказКлиента.Сделка                                КАК Сделка,
		|	ЗаказКлиента.Склад                                 КАК Склад,
		|	ЗаказКлиента.Подразделение                         КАК Подразделение,
		|	ЗаказКлиента.ХозяйственнаяОперация                 КАК ХозяйственнаяОперация,
		|	ЗаказКлиента.Валюта                                КАК ВалютаВзаиморасчетов,
		|	ЗаказКлиента.НалогообложениеНДС                    КАК НалогообложениеНДС,
		|	ЗаказКлиента.ЦенаВключаетНДС                       КАК ЦенаВключаетНДС,
		|	ЗаказКлиента.ВернутьМногооборотнуюТару             КАК ВернутьМногооборотнуюТару,
		|	ЗаказКлиента.СрокВозвратаМногооборотнойТары        КАК СрокВозвратаМногооборотнойТары,
		|	ЗаказКлиента.БанковскийСчет                        КАК БанковскийСчет,
		|	ЗаказКлиента.БанковскийСчетКонтрагента             КАК БанковскийСчетКонтрагента,
		|	ЗаказКлиента.Грузоотправитель                      КАК Грузоотправитель,
		|	ЗаказКлиента.Грузополучатель                       КАК Грузополучатель,
		|	ЗаказКлиента.БанковскийСчетГрузоотправителя        КАК БанковскийСчетГрузоотправителя,
		|	ЗаказКлиента.БанковскийСчетГрузополучателя         КАК БанковскийСчетГрузополучателя,
		|	ВЫБОР
		|		КОГДА
		|			ЗаказКлиента.Склад.ЭтоГруппа И ЗаказКлиента.Склад.ВыборГруппы = ЗНАЧЕНИЕ(Перечисление.ВыборГруппыСкладов.РазрешитьВЗаказах)
		|		ТОГДА
		|			ЗНАЧЕНИЕ(Справочник.Склады.ПустаяСсылка)
		|		ИНАЧЕ
		|			ЗаказКлиента.Склад
		|	КОНЕЦ КАК СкладОтгрузки,
		|	ЗаказКлиента.СпособДоставки                        КАК СпособДоставки,
		|	ЗаказКлиента.ПеревозчикПартнер                     КАК ПеревозчикПартнер,
		|	ЗаказКлиента.АдресДоставки                         КАК АдресДоставки,
		|	ЗаказКлиента.АдресДоставкиЗначенияПолей            КАК АдресДоставкиЗначенияПолей,
		|	ЗаказКлиента.АдресДоставкиПеревозчика              КАК АдресДоставкиПеревозчика,
		|	ЗаказКлиента.АдресДоставкиПеревозчикаЗначенияПолей КАК АдресДоставкиПеревозчикаЗначенияПолей,
		|	ЗаказКлиента.ЗонаДоставки                          КАК ЗонаДоставки,
		|	ЗаказКлиента.ВремяДоставкиС                        КАК ВремяДоставкиС,
		|	ЗаказКлиента.ВремяДоставкиПо                       КАК ВремяДоставкиПо,
		|	ЗаказКлиента.ДополнительнаяИнформацияПоДоставке    КАК ДополнительнаяИнформацияПоДоставке
		|ИЗ
		|	Документ.ЗаказКлиента КАК ЗаказКлиента
		|ГДЕ
		|	ЗаказКлиента.Ссылка В (&МассивСсылок)
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ЗаявкаНаВозврат.Партнер                        КАК Партнер,
		|	ЗаявкаНаВозврат.Контрагент                     КАК Контрагент,
		|	ЗаявкаНаВозврат.Договор                        КАК Договор,
		|	ЗаявкаНаВозврат.Организация                    КАК Организация,
		|	ЗаявкаНаВозврат.Соглашение                     КАК Соглашение,
		|	ЗаявкаНаВозврат.Сделка                         КАК Сделка,
		|	ЗаявкаНаВозврат.Склад                          КАК Склад,
		|	ЗаявкаНаВозврат.Подразделение                  КАК Подразделение,
		|	ВЫБОР
		|		КОГДА
		|			ЗаявкаНаВозврат.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратТоваровОтКлиента)
		|			ИЛИ ЗаявкаНаВозврат.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратОтРозничногоПокупателя)
		|		ТОГДА
		|			ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.РеализацияКлиенту)
		|		ИНАЧЕ
		|			ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПередачаНаКомиссию)
		|	КОНЕЦ КАК ХозяйственнаяОперация,
		|	ЗаявкаНаВозврат.Валюта                                КАК ВалютаВзаиморасчетов,
		|	ЗаявкаНаВозврат.НалогообложениеНДС                    КАК НалогообложениеНДС,
		|	ЗаявкаНаВозврат.ЦенаВключаетНДС                       КАК ЦенаВключаетНДС,
		|	ЗаявкаНаВозврат.ВернутьМногооборотнуюТару             КАК ВернутьМногооборотнуюТару,
		|	ЗаявкаНаВозврат.СрокВозвратаМногооборотнойТары        КАК СрокВозвратаМногооборотнойТары,
		|	ЗаявкаНаВозврат.БанковскийСчет                        КАК БанковскийСчет,
		|	ЗаявкаНаВозврат.БанковскийСчетКонтрагента             КАК БанковскийСчетКонтрагента,
		|	ЗаявкаНаВозврат.Грузоотправитель                      КАК Грузоотправитель,
		|	ЗаявкаНаВозврат.Грузополучатель                       КАК Грузополучатель,
		|	ЗаявкаНаВозврат.БанковскийСчетГрузоотправителя        КАК БанковскийСчетГрузоотправителя,
		|	ЗаявкаНаВозврат.БанковскийСчетГрузополучателя         КАК БанковскийСчетГрузополучателя,
		|	ЗаявкаНаВозврат.Склад                                 КАК СкладОтгрузки,
		|	ЗаявкаНаВозврат.СпособДоставки                        КАК СпособДоставки,
		|	ЗаявкаНаВозврат.ПеревозчикПартнер                     КАК ПеревозчикПартнер,
		|	ЗаявкаНаВозврат.АдресДоставки                         КАК АдресДоставки,
		|	ЗаявкаНаВозврат.АдресДоставкиЗначенияПолей            КАК АдресДоставкиЗначенияПолей,
		|	ЗаявкаНаВозврат.АдресДоставкиПеревозчика              КАК АдресДоставкиПеревозчика,
		|	ЗаявкаНаВозврат.АдресДоставкиПеревозчикаЗначенияПолей КАК АдресДоставкиПеревозчикаЗначенияПолей,
		|	ЗаявкаНаВозврат.ЗонаДоставки                          КАК ЗонаДоставки,
		|	ЗаявкаНаВозврат.ВремяДоставкиС                        КАК ВремяДоставкиС,
		|	ЗаявкаНаВозврат.ВремяДоставкиПо                       КАК ВремяДоставкиПо,
		|	ЗаявкаНаВозврат.ДополнительнаяИнформацияПоДоставке    КАК ДополнительнаяИнформацияПоДоставке
		|ИЗ
		|	Документ.ЗаявкаНаВозвратТоваровОтКлиента КАК ЗаявкаНаВозврат
		|ГДЕ
		|	ЗаявкаНаВозврат.Ссылка В (&МассивСсылок)
		|) КАК ЗаказКлиента
		|
		|;
		|ВЫБРАТЬ
		|	ЗаказКлиента.Ссылка КАК ЗаказКлиента,
		|	ЗаказКлиента.Статус КАК Статус,
		|	НЕ ЗаказКлиента.Проведен КАК ЕстьОшибкиПроведен,
		|	ВЫБОР
		|		КОГДА
		|			ЗаказКлиента.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыЗаказовКлиентов.КОтгрузке)
		|			ИЛИ ЗаказКлиента.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыЗаказовКлиентов.Закрыт)
		|		ТОГДА
		|			ЛОЖЬ
		|		ИНАЧЕ
		|			ИСТИНА
		|	КОНЕЦ КАК ЕстьОшибкиСтатус,
		|	ИСТИНА КАК РаспоряжениеЗаказ
		|	
		|ИЗ
		|	Документ.ЗаказКлиента КАК ЗаказКлиента
		|ГДЕ
		|	ЗаказКлиента.Ссылка В (&МассивСсылок)
		|	И (НЕ ЗаказКлиента.Проведен ИЛИ
		|	ЗаказКлиента.Статус <> ЗНАЧЕНИЕ(Перечисление.СтатусыЗаказовКлиентов.КОтгрузке)
		|	И ЗаказКлиента.Статус <> ЗНАЧЕНИЕ(Перечисление.СтатусыЗаказовКлиентов.Закрыт))
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ЗаявкаНаВозврат.Ссылка КАК ЗаказКлиента,
		|	ЗаявкаНаВозврат.Статус КАК Статус,
		|	НЕ ЗаявкаНаВозврат.Проведен КАК ЕстьОшибкиПроведен,
		|	ВЫБОР
		|		КОГДА
		|			ЗаявкаНаВозврат.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыЗаявокНаВозвратТоваровОтКлиентов.КОтгрузке)
		|			ИЛИ ЗаявкаНаВозврат.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыЗаявокНаВозвратТоваровОтКлиентов.Выполнена)
		|		ТОГДА
		|			ЛОЖЬ
		|		ИНАЧЕ
		|			ИСТИНА
		|	КОНЕЦ КАК ЕстьОшибкиСтатус,
		|	ЛОЖЬ КАК РаспоряжениеЗаказ
		|ИЗ
		|	Документ.ЗаявкаНаВозвратТоваровОтКлиента КАК ЗаявкаНаВозврат
		|ГДЕ
		|	ЗаявкаНаВозврат.Ссылка В (&МассивСсылок)
		|	И (НЕ ЗаявкаНаВозврат.Проведен ИЛИ
		|	ЗаявкаНаВозврат.Статус <> ЗНАЧЕНИЕ(Перечисление.СтатусыЗаявокНаВозвратТоваровОтКлиентов.КОтгрузке)
		|	И ЗаявкаНаВозврат.Статус <> ЗНАЧЕНИЕ(Перечисление.СтатусыЗаявокНаВозвратТоваровОтКлиентов.Выполнена))"
	);
	
	Запрос.УстановитьПараметр("МассивСсылок", МассивСсылок);
	РезультатЗапроса = Запрос.ВыполнитьПакет();
	ВыборкаРеквизитыШапки = РезультатЗапроса[0].Выбрать();
	ВыборкаРеквизитыШапки.Следующий();
	
	Отказ = Ложь;
	
	Если ПродажиСервер.СообщитьОбОшибкахФормированияДанныхЗаполненияРеализации(ВыборкаРеквизитыШапки) Тогда
		
		ТекстОшибки = НСтр("ru='Ввод одной реализации товаров и услуг на основании выделенных распоряжений невозможен'");
		
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
			ТекстОшибки,
			,
			,
			,
			Отказ
		);
		
	Иначе
		
		Если Не РезультатЗапроса[1].Пустой() > 0 Тогда
			
			ВыборкаЗаказы = РезультатЗапроса[1].Выбрать();
			
			Пока ВыборкаЗаказы.Следующий() Цикл
				
				Если ВыборкаЗаказы.ЕстьОшибкиПроведен Тогда
					
					ТекстОшибки = НСтр("ru='Документ %Документ% не проведен. Ввод на основании непроведенного документа запрещен.'");
					ТекстОшибки = СтрЗаменить(ТекстОшибки, "%Документ%", ВыборкаЗаказы.ЗаказКлиента);
					
					ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
						ТекстОшибки,
						,
						,
						,
						Отказ
					);
					
				ИначеЕсли ВыборкаЗаказы.ЕстьОшибкиСтатус Тогда
					
					Если ВыборкаЗаказы.РаспоряжениеЗаказ Тогда
						ТекстОшибки = НСтр("ru='Документ %Документ% находится в статусе ""%Статус%"". Ввод на основании разрешен только в статусах ""К отгрузке"", ""Закрыт"".'");
					Иначе
						ТекстОшибки = НСтр("ru='Документ %Документ% находится в статусе ""%Статус%"". Ввод на основании разрешен только в статусах ""К отгрузке"", ""Выполнена"".'");
					КонецЕсли;
					
					ТекстОшибки = СтрЗаменить(ТекстОшибки, "%Документ%", ВыборкаЗаказы.ЗаказКлиента);
					ТекстОшибки = СтрЗаменить(ТекстОшибки, "%Статус%",   ВыборкаЗаказы.Статус);
					
					ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
						ТекстОшибки,
						,
						,
						,
						Отказ
					);
					
				КонецЕсли;
				
			КонецЦикла;
			
		КонецЕсли;
		
		РеквизитыШапки.Вставить("Партнер",                               ВыборкаРеквизитыШапки.Партнер);
		РеквизитыШапки.Вставить("Контрагент",                            ВыборкаРеквизитыШапки.Контрагент);
		РеквизитыШапки.Вставить("Договор",                               ВыборкаРеквизитыШапки.Договор);
		РеквизитыШапки.Вставить("Организация",                           ВыборкаРеквизитыШапки.Организация);
		РеквизитыШапки.Вставить("Склад",                                 ВыборкаРеквизитыШапки.Склад);
		РеквизитыШапки.Вставить("Подразделение",                         ВыборкаРеквизитыШапки.Подразделение);
		РеквизитыШапки.Вставить("Соглашение",                            ВыборкаРеквизитыШапки.Соглашение);
		РеквизитыШапки.Вставить("ХозяйственнаяОперация",                 ВыборкаРеквизитыШапки.ХозяйственнаяОперация);
		РеквизитыШапки.Вставить("ВалютаВзаиморасчетов",                  ВыборкаРеквизитыШапки.ВалютаВзаиморасчетов);
		РеквизитыШапки.Вставить("НалогообложениеНДС",                    ВыборкаРеквизитыШапки.НалогообложениеНДС);
		РеквизитыШапки.Вставить("ЦенаВключаетНДС",                       ВыборкаРеквизитыШапки.ЦенаВключаетНДС);
		РеквизитыШапки.Вставить("ВернутьМногооборотнуюТару",             ВыборкаРеквизитыШапки.ВернутьМногооборотнуюТару);
		РеквизитыШапки.Вставить("РассчитыватьДатуВозвратаТарыПоКалендарю", ВыборкаРеквизитыШапки.РассчитыватьДатуВозвратаТарыПоКалендарю);
		РеквизитыШапки.Вставить("СрокВозвратаМногооборотнойТары",        ВыборкаРеквизитыШапки.СрокВозвратаМногооборотнойТары);
		РеквизитыШапки.Вставить("СкладОтгрузки",                         ВыборкаРеквизитыШапки.СкладОтгрузки);
		РеквизитыШапки.Вставить("ЗапрещеноВыбиратьГруппуСкладов",        ВыборкаРеквизитыШапки.ЗапрещеноВыбиратьГруппуСкладов);
		РеквизитыШапки.Вставить("Сделка",                                ВыборкаРеквизитыШапки.Сделка);
		РеквизитыШапки.Вставить("Грузоотправитель",                      ВыборкаРеквизитыШапки.Грузоотправитель);
		РеквизитыШапки.Вставить("Грузополучатель",                       ВыборкаРеквизитыШапки.Грузополучатель);
		РеквизитыШапки.Вставить("БанковскийСчетГрузоотправителя",        ВыборкаРеквизитыШапки.БанковскийСчетГрузоотправителя);
		РеквизитыШапки.Вставить("БанковскийСчетГрузополучателя",         ВыборкаРеквизитыШапки.БанковскийСчетГрузополучателя);
		РеквизитыШапки.Вставить("БанковскийСчет",                        ВыборкаРеквизитыШапки.БанковскийСчет);
		РеквизитыШапки.Вставить("БанковскийСчетКонтрагента",             ВыборкаРеквизитыШапки.БанковскийСчетКонтрагента);
		ДоставкаТоваров.ДополнитьРеквизитамиДоставкиДанныеЗаполнения(РеквизитыШапки,ВыборкаРеквизитыШапки);
		
	КонецЕсли;
	
	Возврат Не Отказ;
	
КонецФункции

// Формирует структуру для создания выполнения работ по одному или нескольким заказам клиентов
// Если в переданных заказах отличаются реквизиты шапки, выдается сообщение об ошибке
//
// Параметры:
// МассивСсылок   - Массив - заказы поставщикам, по которым необходимо ввести реализацию
// РеквизитыШапки - Структура - структура, в которую будут помещены реквизиты шапки из массива заказов
//
// Возвращаемое значение:
// Булево
// Ложь, если в переданных заказах отличаются реквизиты шапки
//
Функция СформироватьДанныеЗаполненияАктовВыполненныхРабот(МассивСсылок, РеквизитыШапки) Экспорт
	
	Запрос = Новый Запрос(
		"ВЫБРАТЬ
		|	МИНИМУМ(ЗаказКлиента.Партнер)              КАК Партнер,
		|	МИНИМУМ(ЗаказКлиента.Контрагент)           КАК Контрагент,
		|	МИНИМУМ(ЗаказКлиента.Договор)              КАК Договор,
		|	МИНИМУМ(ЗаказКлиента.Организация)          КАК Организация,
		|	МИНИМУМ(ЗаказКлиента.Соглашение)           КАК Соглашение,
		|	МИНИМУМ(ЗаказКлиента.Сделка)               КАК Сделка,
		|	МИНИМУМ(ЗаказКлиента.ВалютаВзаиморасчетов) КАК ВалютаВзаиморасчетов,
		|	МИНИМУМ(ЗаказКлиента.НалогообложениеНДС)   КАК НалогообложениеНДС,
		|	МИНИМУМ(ЗаказКлиента.ЦенаВключаетНДС)      КАК ЦенаВключаетНДС,
		|	ВЫБОР
		|		КОГДА
		|			КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ЗаказКлиента.Партнер) > 1
		|		ТОГДА
		|			ИСТИНА
		|		ИНАЧЕ
		|			ЛОЖЬ
		|	КОНЕЦ КАК ЕстьОтличияПартнер,
		|	ВЫБОР
		|		КОГДА
		|			КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ЗаказКлиента.Контрагент) > 1
		|		ТОГДА
		|			ИСТИНА
		|		ИНАЧЕ
		|			ЛОЖЬ
		|	КОНЕЦ КАК ЕстьОтличияКонтрагент,
		|	ВЫБОР
		|		КОГДА
		|			КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ЗаказКлиента.Договор) > 1
		|		ТОГДА
		|			ИСТИНА
		|		ИНАЧЕ
		|			ЛОЖЬ
		|	КОНЕЦ КАК ЕстьОтличияДоговор,
		|	ВЫБОР
		|		КОГДА
		|			КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ЗаказКлиента.Организация) > 1
		|		ТОГДА
		|			ИСТИНА
		|		ИНАЧЕ
		|			ЛОЖЬ
		|	КОНЕЦ КАК ЕстьОтличияОрганизация,
		|	ВЫБОР
		|		КОГДА
		|			КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ЗаказКлиента.Соглашение) > 1
		|		ТОГДА
		|			ИСТИНА
		|		ИНАЧЕ
		|			ЛОЖЬ
		|	КОНЕЦ КАК ЕстьОтличияСоглашение,
		|	ВЫБОР
		|		КОГДА
		|			КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ЗаказКлиента.Сделка) > 1
		|		ТОГДА
		|			ИСТИНА
		|		ИНАЧЕ
		|			ЛОЖЬ
		|	КОНЕЦ КАК ЕстьОтличияСделка,
		|	ВЫБОР
		|		КОГДА
		|			КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ЗаказКлиента.ВалютаВзаиморасчетов) > 1
		|		ТОГДА
		|			ИСТИНА
		|		ИНАЧЕ
		|			ЛОЖЬ
		|	КОНЕЦ КАК ЕстьОтличияВалютаВзаиморасчетов,
		|	ВЫБОР
		|		КОГДА
		|			КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ЗаказКлиента.НалогообложениеНДС) > 1
		|		ТОГДА
		|			ИСТИНА
		|		ИНАЧЕ
		|			ЛОЖЬ
		|	КОНЕЦ КАК ЕстьОтличияНалогообложениеНДС,
		|	ВЫБОР
		|		КОГДА
		|			КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ЗаказКлиента.ЦенаВключаетНДС) > 1
		|		ТОГДА
		|			ИСТИНА
		|		ИНАЧЕ
		|			ЛОЖЬ
		|	КОНЕЦ КАК ЕстьОтличияЦенаВключаетНДС
		|ИЗ
		|	(ВЫБРАТЬ
		|		ЗаказКлиента.Партнер КАК Партнер,
		|		ЗаказКлиента.Контрагент КАК Контрагент,
		|		ЗаказКлиента.Договор КАК Договор,
		|		ЗаказКлиента.Организация КАК Организация,
		|		ЗаказКлиента.Соглашение КАК Соглашение,
		|		ЗаказКлиента.Сделка КАК Сделка,
		|		ЗаказКлиента.Валюта КАК ВалютаВзаиморасчетов,
		|		ЗаказКлиента.НалогообложениеНДС КАК НалогообложениеНДС,
		|		ЗаказКлиента.ЦенаВключаетНДС КАК ЦенаВключаетНДС
		|	ИЗ
		|		Документ.ЗаказКлиента КАК ЗаказКлиента
		|	ГДЕ
		|		ЗаказКлиента.Ссылка В(&МассивСсылок)
		|	
		|	ОБЪЕДИНИТЬ ВСЕ
		|	
		|	ВЫБРАТЬ
		|		ЗаявкаНаВозврат.Партнер,
		|		ЗаявкаНаВозврат.Контрагент,
		|		ЗаявкаНаВозврат.Договор,
		|		ЗаявкаНаВозврат.Организация,
		|		ЗаявкаНаВозврат.Соглашение,
		|		ЗаявкаНаВозврат.Сделка,
		|		ЗаявкаНаВозврат.Валюта,
		|		ЗаявкаНаВозврат.НалогообложениеНДС,
		|		ЗаявкаНаВозврат.ЦенаВключаетНДС
		|	ИЗ
		|		Документ.ЗаявкаНаВозвратТоваровОтКлиента КАК ЗаявкаНаВозврат
		|	ГДЕ
		|		ЗаявкаНаВозврат.Ссылка В(&МассивСсылок)) КАК ЗаказКлиента
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ЗаказКлиента.Ссылка КАК ЗаказКлиента,
		|	ЗаказКлиента.Статус КАК Статус,
		|	ВЫБОР
		|		КОГДА ЗаказКлиента.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.РеализацияКлиенту)
		|			ТОГДА ЛОЖЬ
		|		ИНАЧЕ ИСТИНА
		|	КОНЕЦ КАК ЕстьОшибкиХозяйственнаяОперация,
		|	(НЕ ЗаказКлиента.Проведен) КАК ЕстьОшибкиПроведен,
		|	ВЫБОР
		|		КОГДА ЗаказКлиента.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыЗаказовКлиентов.КОтгрузке)
		|				ИЛИ ЗаказКлиента.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыЗаказовКлиентов.Закрыт)
		|			ТОГДА ЛОЖЬ
		|		ИНАЧЕ ИСТИНА
		|	КОНЕЦ КАК ЕстьОшибкиСтатус,
		|	ИСТИНА КАК РаспоряжениеЗаказ,
		|	ЗаказКлиента.ХозяйственнаяОперация КАК ХозяйственнаяОперация
		|ИЗ
		|	Документ.ЗаказКлиента КАК ЗаказКлиента
		|ГДЕ
		|	ЗаказКлиента.Ссылка В(&МассивСсылок)
		|	И ((НЕ ЗаказКлиента.Проведен)
		|			ИЛИ (НЕ ЗаказКлиента.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.РеализацияКлиенту))
		|			ИЛИ ЗаказКлиента.Статус <> ЗНАЧЕНИЕ(Перечисление.СтатусыЗаказовКлиентов.КОтгрузке)
		|				И ЗаказКлиента.Статус <> ЗНАЧЕНИЕ(Перечисление.СтатусыЗаказовКлиентов.Закрыт))
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ЗаявкаНаВозврат.Ссылка,
		|	ЗаявкаНаВозврат.Статус,
		|	(НЕ ЗаявкаНаВозврат.Проведен),
		|	ВЫБОР
		|		КОГДА ЗаявкаНаВозврат.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратТоваровОтКлиента)
		|				ИЛИ ЗаявкаНаВозврат.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратОтРозничногоПокупателя)
		|			ТОГДА ЛОЖЬ
		|		ИНАЧЕ ИСТИНА
		|	КОНЕЦ,
		|	ВЫБОР
		|		КОГДА ЗаявкаНаВозврат.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыЗаявокНаВозвратТоваровОтКлиентов.КОтгрузке)
		|				ИЛИ ЗаявкаНаВозврат.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыЗаявокНаВозвратТоваровОтКлиентов.Выполнена)
		|			ТОГДА ЛОЖЬ
		|		ИНАЧЕ ИСТИНА
		|	КОНЕЦ,
		|	ЛОЖЬ,
		|	ЗаявкаНаВозврат.ХозяйственнаяОперация
		|ИЗ
		|	Документ.ЗаявкаНаВозвратТоваровОтКлиента КАК ЗаявкаНаВозврат
		|ГДЕ
		|	ЗаявкаНаВозврат.Ссылка В(&МассивСсылок)
		|	И ((НЕ ЗаявкаНаВозврат.Проведен)
		|			ИЛИ (НЕ(ЗаявкаНаВозврат.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратТоваровОтКлиента)
		|					ИЛИ ЗаявкаНаВозврат.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратОтРозничногоПокупателя)))
		|			ИЛИ ЗаявкаНаВозврат.Статус <> ЗНАЧЕНИЕ(Перечисление.СтатусыЗаявокНаВозвратТоваровОтКлиентов.КОтгрузке)
		|				И ЗаявкаНаВозврат.Статус <> ЗНАЧЕНИЕ(Перечисление.СтатусыЗаявокНаВозвратТоваровОтКлиентов.Выполнена))"
	);
	
	Запрос.УстановитьПараметр("МассивСсылок", МассивСсылок);
	РезультатЗапроса = Запрос.ВыполнитьПакет();
	ВыборкаРеквизитыШапки = РезультатЗапроса[0].Выбрать();
	ВыборкаРеквизитыШапки.Следующий();
	
	Отказ = Ложь;
	
	ТекстСообщения = НСтр("ru='У выделенных распоряжений отличается поле ""%ПредставлениеПоля%""'");
	
	Если ВыборкаРеквизитыШапки.ЕстьОтличияПартнер Тогда
		
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
			СтрЗаменить(ТекстСообщения, "%ПредставлениеПоля%", НСтр("ru='Партнер'")),
			,
			,
			,
			Отказ
		);
		
	КонецЕсли;
	
	Если ВыборкаРеквизитыШапки.ЕстьОтличияКонтрагент Тогда
		
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
			СтрЗаменить(ТекстСообщения, "%ПредставлениеПоля%", НСтр("ru='Контрагент'")),
			,
			,
			,
			Отказ
		);
		
	КонецЕсли;
	
	Если ВыборкаРеквизитыШапки.ЕстьОтличияОрганизация Тогда
		
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
			СтрЗаменить(ТекстСообщения, "%ПредставлениеПоля%", НСтр("ru='Организация'")),
			,
			,
			,
			Отказ
		);
		
	КонецЕсли;
	
	Если ВыборкаРеквизитыШапки.ЕстьОтличияСоглашение Тогда
		
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
			СтрЗаменить(ТекстСообщения, "%ПредставлениеПоля%", НСтр("ru='Соглашение'")),
			,
			,
			,
			Отказ
		);
		
	КонецЕсли;
	
	Если ВыборкаРеквизитыШапки.ЕстьОтличияДоговор Тогда
		
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
			СтрЗаменить(ТекстСообщения, "%ПредставлениеПоля%", НСтр("ru='Договор'")),
			,
			,
			,
			Отказ
		);
		
	КонецЕсли;
	
	Если ВыборкаРеквизитыШапки.ЕстьОтличияСделка Тогда
		
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
			СтрЗаменить(ТекстСообщения, "%ПредставлениеПоля%", НСтр("ru='Сделка'")),
			,
			,
			,
			Отказ
		);
		
	КонецЕсли;
	
	Если ВыборкаРеквизитыШапки.ЕстьОтличияВалютаВзаиморасчетов Тогда
		
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
			СтрЗаменить(ТекстСообщения, "%ПредставлениеПоля%", НСтр("ru='Валюта взаиморасчетов'")),
			,
			,
			,
			Отказ
		);
		
	КонецЕсли;
	
	Если ВыборкаРеквизитыШапки.ЕстьОтличияНалогообложениеНДС Тогда
		
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
			СтрЗаменить(ТекстСообщения, "%ПредставлениеПоля%", НСтр("ru='Налогообложение НДС'")),
			,
			,
			,
			Отказ
		);
		
	КонецЕсли;
	
	Если ВыборкаРеквизитыШапки.ЕстьОтличияЦенаВключаетНДС Тогда
		
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
			СтрЗаменить(ТекстСообщения, "%ПредставлениеПоля%", НСтр("ru='Цена включает НДС'")),
			,
			,
			,
			Отказ
		);
		
	КонецЕсли;
	
	Если ВыборкаРеквизитыШапки.ЕстьОтличияПартнер Или
		ВыборкаРеквизитыШапки.ЕстьОтличияКонтрагент Или
		ВыборкаРеквизитыШапки.ЕстьОтличияОрганизация Или
		ВыборкаРеквизитыШапки.ЕстьОтличияСоглашение Или
		ВыборкаРеквизитыШапки.ЕстьОтличияДоговор Или
		ВыборкаРеквизитыШапки.ЕстьОтличияСделка Или
		ВыборкаРеквизитыШапки.ЕстьОтличияВалютаВзаиморасчетов Или
		ВыборкаРеквизитыШапки.ЕстьОтличияНалогообложениеНДС Или
		ВыборкаРеквизитыШапки.ЕстьОтличияЦенаВключаетНДС Тогда
		
		ТекстОшибки = НСтр("ru='Ввод одного акта выполненных работ на основании выделенных распоряжений невозможен'");
		
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
			ТекстОшибки,
			,
			,
			,
			Отказ
		);
		
	Иначе
		
		Если Не РезультатЗапроса[1].Пустой() > 0 Тогда
			
			ВыборкаЗаказы = РезультатЗапроса[1].Выбрать();
			
			Пока ВыборкаЗаказы.Следующий() Цикл
				
				Если ВыборкаЗаказы.ЕстьОшибкиПроведен Тогда
					
					ТекстОшибки = НСтр("ru='Документ %Документ% не проведен. Ввод на основании непроведенного документа запрещен.'");
					ТекстОшибки = СтрЗаменить(ТекстОшибки, "%Документ%", ВыборкаЗаказы.ЗаказКлиента);
					
					ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
						ТекстОшибки,
						,
						,
						,
						Отказ
					);
					
				ИначеЕсли ВыборкаЗаказы.ЕстьОшибкиСтатус Тогда
					
					Если ВыборкаЗаказы.РаспоряжениеЗаказ Тогда
						ТекстОшибки = НСтр("ru='Документ %Документ% находится в статусе ""%Статус%"". Ввод на основании разрешен только в статусах ""К отгрузке"", ""Закрыт"".'");
					Иначе
						ТекстОшибки = НСтр("ru='Документ %Документ% находится в статусе ""%Статус%"". Ввод на основании разрешен только в статусах ""К отгрузке"", ""Выполнена"".'");
					КонецЕсли;
					
					ТекстОшибки = СтрЗаменить(ТекстОшибки, "%Документ%", ВыборкаЗаказы.ЗаказКлиента);
					ТекстОшибки = СтрЗаменить(ТекстОшибки, "%Статус%",   ВыборкаЗаказы.Статус);
					
					ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
						ТекстОшибки,
						,
						,
						,
						Отказ
					);
					
				ИначеЕсли ВыборкаЗаказы.ЕстьОшибкиХозяйственнаяОперация Тогда
					
					ТекстОшибки = НСтр("ru='Ввод на основании документа с хозяйственной операцией %ХозяйственнаяОперация% невозможен.'");
					ТекстОшибки = СтрЗаменить(ТекстОшибки, "%ХозяйственнаяОперация%", ВыборкаЗаказы.ХозяйственнаяОперация);
					
					ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
						ТекстОшибки,
						,
						,
						,
						Отказ
					);
					
				КонецЕсли;
				
			КонецЦикла;
			
		КонецЕсли;
		
		РеквизитыШапки.Вставить("Партнер",                        ВыборкаРеквизитыШапки.Партнер);
		РеквизитыШапки.Вставить("Контрагент",                     ВыборкаРеквизитыШапки.Контрагент);
		РеквизитыШапки.Вставить("Договор",                        ВыборкаРеквизитыШапки.Договор);
		РеквизитыШапки.Вставить("Организация",                    ВыборкаРеквизитыШапки.Организация);
		РеквизитыШапки.Вставить("Соглашение",                     ВыборкаРеквизитыШапки.Соглашение);
		РеквизитыШапки.Вставить("ВалютаВзаиморасчетов",           ВыборкаРеквизитыШапки.ВалютаВзаиморасчетов);
		РеквизитыШапки.Вставить("НалогообложениеНДС",             ВыборкаРеквизитыШапки.НалогообложениеНДС);
		РеквизитыШапки.Вставить("ЦенаВключаетНДС",                ВыборкаРеквизитыШапки.ЦенаВключаетНДС);
		РеквизитыШапки.Вставить("Сделка",                         ВыборкаРеквизитыШапки.Сделка);
		
	КонецЕсли;
	
	Возврат Не Отказ;
	
КонецФункции

// Функция проверки наличия графика оплаты в соглашении
//
// Параметры:
// 		Соглашение - СправочникСсылка.Соглашение
//
// Возвращаемое значение:
// 		Булево - "Истина", если в графике есть хотя бы один этап
//
Функция ГрафикСоглашенияЗаполнен(Соглашение) Экспорт
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	СоглашенияСКлиентамиЭтапыГрафикаОплаты.Ссылка
	|ИЗ
	|	Справочник.СоглашенияСКлиентами.ЭтапыГрафикаОплаты КАК СоглашенияСКлиентамиЭтапыГрафикаОплаты
	|ГДЕ
	|	СоглашенияСКлиентамиЭтапыГрафикаОплаты.Ссылка = &Соглашение");
	Запрос.УстановитьПараметр("Соглашение", Соглашение);
	
	УстановитьПривилегированныйРежим(Истина);
	Возврат НЕ Запрос.Выполнить().Пустой();
	
КонецФункции

////////////////////////////////////////////////////////////////////////////////
// Процедуры и функции для установки статусов соглашений.

// Устанавливает статус "НеСогласовано" у выделенных в списке соглашений
//
// Параметры:
// Соглашения - Массив - массив соглашений с клиентами
//
// Возвращаемое значение:
// Число
// Количество успешно обработанных соглашений
//
Функция УстановитьСтатусСоглашенийСКлиентамиНеСогласовано (Знач Соглашения) Экспорт
	
	Возврат Справочники.СоглашенияСКлиентами.УстановитьСтатус(Соглашения, Перечисления.СтатусыСоглашенийСКлиентами.НеСогласовано);

КонецФункции

// Устанавливает статус "Действует" у выделенных в списке соглашений
//
// Параметры:
// Соглашения - Массив - массив соглашений с клиентами
//
Функция УстановитьСтатусСоглашенийСКлиентамиДействует (Знач Соглашения) Экспорт
	
	Возврат Справочники.СоглашенияСКлиентами.УстановитьСтатус(Соглашения, Перечисления.СтатусыСоглашенийСКлиентами.Действует);

КонецФункции

// Устанавливает статус "Закрыто" у выделенных в списке соглашений
//
// Параметры:
// Соглашения - Массив - массив соглашений с клиентами
//
// Возвращаемое значение: 
// Число.
// Количество успешно обработанных соглашений
//
Функция УстановитьСтатусСоглашенийСКлиентамиЗакрыто (Знач Соглашения) Экспорт
	
	Возврат Справочники.СоглашенияСКлиентами.УстановитьСтатус(Соглашения, Перечисления.СтатусыСоглашенийСКлиентами.Закрыто);

КонецФункции

////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

////////////////////////////////////////////////////////////////////////////////
// Прочие процедуры и функции

// Формирует список адресов [партнера|организации|контрагента] (любого другого, имеющего ТЧ.КонтактнаяИнформация)
//
// Параметры:
// 	АдресатСсылка - СправочникСсылка.[Партнеры|Организации|Контрагенты|ФизическиеЛица] 
//	- ссылка на адресата, список адресов которого необходимо получить
//
// Возвращаемое значение:
//	Соответствие - найденные адреса партнера, уникальные по точному значению адреса
//
Функция ПолучитьСписокАдресов(АдресатСсылка) Экспорт
	
	Адреса = УправлениеКонтактнойИнформацией.ЗначенияКонтактнойИнформацииОбъекта(
		АдресатСсылка,
		Перечисления.ТипыКонтактнойИнформации.Адрес
	);
	
	СоответствиеАдресов = Новый Соответствие;
	
	Для Каждого Адрес из Адреса Цикл
		СоответствиеАдресов.Вставить(Адрес.Значение,Адрес.Вид + ": " + Адрес.Значение);
	КонецЦикла;
	
	Возврат СоответствиеАдресов;
	
КонецФункции
