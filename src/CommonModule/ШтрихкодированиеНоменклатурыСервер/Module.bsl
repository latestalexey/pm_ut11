////////////////////////////////////////////////////////////////////////////////
// ПРОГРАММНЫЙ ИНТЕРФЕЙС

//Процедура обрабатывает введенные штрихкоды
//	Параметры
//		Форма - Управляемая форма
//		Объект - ДанныеФормыСтруктура
//		СтруктураПараметров - параметры действия
//		КэшированныеЗначения - кеш формы
Процедура ОбработатьШтрихкоды(Форма, Объект, СтруктураПараметров, КэшированныеЗначения) Экспорт
	
	//Если нужно будет изменять количество, то данные формы нужно заблокировать
	//Если заблокировать не удастся - вылетит исключение
	Если СтруктураПараметров.ИзменятьКоличество
		И СтруктураПараметров.БлокироватьДанныеФормы Тогда
		Форма.ЗаблокироватьДанныеФормыДляРедактирования();
	КонецЕсли;
	
	Модифицированность = Ложь;
	
	Если КэшированныеЗначения = Неопределено Тогда
		КэшированныеЗначения = ОбработкаТабличнойЧастиКлиентСервер.ПолучитьСтруктуруКэшируемыеЗначения();
	КонецЕсли;

	КэшированныеЗначения.Вставить("ПравоРегистрацииШтрихкодовНоменклатурыДоступно", ПравоРегистрацииШтрихкодовНоменклатурыДоступно());
	
	ПрефиксыВесовыхШтрихкодов = ЗначениеНастроекПовтИсп.ПолучитьПрефиксыВесовыхШтрихкодов();
	
	
	Если ТипЗнч(СтруктураПараметров.Штрихкоды) = Тип("Массив") Тогда
		МассивШтрихкодов = СтруктураПараметров.Штрихкоды;
	Иначе
		МассивШтрихкодов = Новый Массив;
		МассивШтрихкодов.Добавить(СтруктураПараметров.Штрихкоды);
	КонецЕсли;
	
	МассивНеизвестныхШтрихкодов = Новый Массив;
	
	Для Каждого ТекШтрихкод Из МассивШтрихкодов Цикл
		ТекШтрихкод.Штрихкод = ВРег(ТекШтрихкод.Штрихкод);
		РегистрыСведений.ШтрихкодыНоменклатуры.ПреобразоватьВесовойШтрихкод(ТекШтрихкод, ПрефиксыВесовыхШтрихкодов);
		Если КэшированныеЗначения.Штрихкоды[ТекШтрихкод.Штрихкод] = Неопределено Тогда
			МассивНеизвестныхШтрихкодов.Добавить(ТекШтрихкод.Штрихкод);
		КонецЕсли;
	КонецЦикла;
	
	Если МассивНеизвестныхШтрихкодов.Количество() <> 0 Тогда
		
		ДанныеПоШтрихкодам = РегистрыСведений.ШтрихкодыНоменклатуры.ПолучитьДанныеПоШтрихкодам(МассивНеизвестныхШтрихкодов);
		
		Для Каждого ТекДанныеПоШтрихкоду Из ДанныеПоШтрихкодам Цикл
			КэшированныеЗначения.Штрихкоды.Вставить(ТекДанныеПоШтрихкоду.Ключ, ТекДанныеПоШтрихкоду.Значение);
		КонецЦикла;
		
	КонецЕсли;
	
	ТЧ = Объект[СтруктураПараметров.ИмяТЧ];
	
	МассивСтрокССериями = Новый Массив;
	ТекущаяСтрока       = Неопределено;
	
	ПроверятьАссортимент = Ложь;
	ДобавлятьТовар = Истина;
	Если СтруктураПараметров.ПараметрыПроверкиАссортимента <> Неопределено Тогда
		СтруктураПроверкиАссортимента = СтруктураПараметров.ПараметрыПроверкиАссортимента;
		ПроверятьАссортимент = Истина;
		СкладПроверкиАссортимента = СтруктураПроверкиАссортимента.Склад;
		РазрешатьДобавление = СтруктураПроверкиАссортимента.РазрешатьДобавление;
		ИмяРесурсаАссортимента = СтруктураПроверкиАссортимента.ИмяРесурсаАссортимента;
		ТекстСообщенияАссортимента = СтруктураПроверкиАссортимента.ТекстСообщения;
	КонецЕсли;
		
	
	Для Каждого ТекШтрихкод Из МассивШтрихкодов Цикл
		
		ДанныеШтрихкода = КэшированныеЗначения.Штрихкоды[ТекШтрихкод.Штрихкод];
		
		Если ДанныеШтрихкода.Количество() = 0 Тогда
			СтруктураПараметров.НеизвестныеШтрихкоды.Добавить(ТекШтрихкод);
			Продолжить;
		Иначе
			
			Если СтруктураПараметров.ТолькоТовары
				И ДанныеШтрихкода.ТипНоменклатуры <> Перечисления.ТипыНоменклатуры.МногооборотнаяТара
				И ДанныеШтрихкода.ТипНоменклатуры <> Перечисления.ТипыНоменклатуры.Товар Тогда
				
				ТекстСообщения = НСтр("ru = 'Товар ""%НазваниеТовара%"" является услугой (работой). В данную табличную часть запрещено добавлять услуги (работы).'");
				
				НазваниеТовара = НоменклатураКлиентСервер.ПредставлениеНоменклатурыДляПечати(ДанныеШтрихкода.Номенклатура,
																									 ДанныеШтрихкода.Характеристика,
																									 ДанныеШтрихкода.Упаковка);
				
				ТекстСообщения = СтрЗаменить(ТекстСообщения,"%НазваниеТовара%",НазваниеТовара);
				
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения);
				Продолжить;
			КонецЕсли;
			
		КонецЕсли;
		
		Если СтруктураПараметров.НеИспользоватьУпаковки Тогда
			Отбор = Новый Структура("Номенклатура, Характеристика, ХарактеристикиИспользуются");
		Иначе
			Отбор = Новый Структура("Номенклатура, Характеристика, Упаковка, ХарактеристикиИспользуются");
		КонецЕсли;
		ЗаполнитьЗначенияСвойств(Отбор, ДанныеШтрихкода);
		
		Если ПроверятьАссортимент Тогда
			СтруктураСостоянияАссортимента = АссортиментСервер.СтруктураСостоянияАссортиментаТовараВФормате(ДанныеШтрихкода.Номенклатура, СкладПроверкиАссортимента, Объект.Дата);
			Если НЕ СтруктураСостоянияАссортимента[ИмяРесурсаАссортимента] Тогда
				ПредставлениеТовара =  НоменклатураКлиентСервер.ПредставлениеНоменклатуры(ДанныеШтрихкода.Номенклатура, ДанныеШтрихкода.Характеристика)
				+ " [" + ТекШтрихкод.Штрихкод + "]";
				ТекстСообщенияАссортимента = СтрЗаменить(ТекстСообщенияАссортимента, "%1", ПредставлениеТовара);
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщенияАссортимента);
				ДобавлятьТовар = РазрешатьДобавление;
			КонецЕсли;
		КонецЕсли;
		
		НайденныеСтроки = ТЧ.НайтиСтроки(Отбор);
		
		Если Не СтруктураПараметров.ИзменятьКоличество Тогда
			Если НайденныеСтроки.Количество() = 0 Тогда
				СтрокаТЧ = Неопределено;
				
				ТекстСообщения = НСтр("ru = 'В табличной части не найдена строка с товаром ""%НазваниеТовара%""'");
				
				НазваниеТовара = НоменклатураКлиентСервер.ПредставлениеНоменклатурыДляПечати(ДанныеШтрихкода.Номенклатура,
																									 ДанныеШтрихкода.Характеристика,
																									 ДанныеШтрихкода.Упаковка);
				
				ТекстСообщения = СтрЗаменить(ТекстСообщения,"%НазваниеТовара%",НазваниеТовара);
				
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения);
				
			Иначе
				СтрокаТЧ = НайденныеСтроки[0];
				Если СтруктураПараметров.ПараметрыУказанияСерий <> Неопределено
					И СтруктураПараметров.ПараметрыУказанияСерий.ИспользоватьСерииНоменклатуры Тогда
					
					Если СтрокаТЧ.СтатусУказанияСерий = 1
						Или СтрокаТЧ.СтатусУказанияСерий = 2
						Или СтрокаТЧ.СтатусУказанияСерий = 3 
						Или СтрокаТЧ.СтатусУказанияСерий = 4 Тогда
						
						МассивСтрокССериями.Добавить(СтрокаТЧ.ПолучитьИдентификатор());
					КонецЕсли;
					
				КонецЕсли;
			КонецЕсли;
		Иначе
			
			//Если штрихкод относится к упаковке с коэффициентом 1,то попробуем найти строку без упаковки:
			//- если найдем, то увеличим в ней количество
			//- если нет - добавим новую строку
			
			Если НайденныеСтроки.Количество() = 0
				И Не СтруктураПараметров.НеИспользоватьУпаковки //т.к. в этом случае без упаковки уже искали
				И ЗначениеЗаполнено(ДанныеШтрихкода.Упаковка)
				И ДанныеШтрихкода.Коэффициент = 1 Тогда
				
				Отбор = Новый Структура("Номенклатура, Характеристика, Упаковка, ХарактеристикиИспользуются");
				ЗаполнитьЗначенияСвойств(Отбор, ДанныеШтрихкода);
				Отбор.Упаковка = Справочники.УпаковкиНоменклатуры.ПустаяСсылка();
				
				НайденныеСтроки = ТЧ.НайтиСтроки(Отбор);

			КонецЕсли;
			
			СтрокаТЧ = Неопределено;
			
			Если НайденныеСтроки.Количество() = 0 Тогда
				
				Если ДобавлятьТовар Тогда
					СтрокаТЧ = ТЧ.Добавить();
					
					Если СтруктураПараметров.ПараметрыУказанияСерий <> Неопределено Тогда 
						НоменклатураКлиентСервер.ОбновитьКешированныеЗначенияДляУчетаСерий(СтрокаТЧ,КэшированныеЗначения,СтруктураПараметров.ПараметрыУказанияСерий);
					КонецЕсли;
					
					СтрокаТЧ.Номенклатура       = ДанныеШтрихкода.Номенклатура;
					СтрокаТЧ.Характеристика     = ДанныеШтрихкода.Характеристика;
					Если Не СтруктураПараметров.НеИспользоватьУпаковки Тогда
						СтрокаТЧ.Упаковка = ДанныеШтрихкода.Упаковка;
					КонецЕсли;
					СтрокаТЧ.ХарактеристикиИспользуются = ДанныеШтрихкода.ХарактеристикиИспользуются;
					Если Не СтруктураПараметров.НеИспользоватьУпаковки Тогда
						СтрокаТЧ[СтруктураПараметров.ИмяКолонкиКоличество] = ТекШтрихкод.Количество;
					Иначе
						СтрокаТЧ[СтруктураПараметров.ИмяКолонкиКоличество] = ТекШтрихкод.Количество * ДанныеШтрихкода.Коэффициент;
					КонецЕсли;
					
					ОбработкаТабличнойЧастиСервер.ОбработатьСтрокуТЧ(СтрокаТЧ, СтруктураПараметров.СтруктураДействийСДобавленнымиСтроками, КэшированныеЗначения);
					Модифицированность = Истина;
				КонецЕсли;
			Иначе
				СтрокаТЧ = НайденныеСтроки[0];
				
				Если СтруктураПараметров.ПараметрыУказанияСерий <> Неопределено Тогда 
					НоменклатураКлиентСервер.ОбновитьКешированныеЗначенияДляУчетаСерий(СтрокаТЧ,КэшированныеЗначения,СтруктураПараметров.ПараметрыУказанияСерий);
				КонецЕсли;
				
				Если Не СтруктураПараметров.НеИспользоватьУпаковки Тогда
					СтрокаТЧ[СтруктураПараметров.ИмяКолонкиКоличество] = СтрокаТЧ[СтруктураПараметров.ИмяКолонкиКоличество] + ТекШтрихкод.Количество;
				Иначе
					СтрокаТЧ[СтруктураПараметров.ИмяКолонкиКоличество] = СтрокаТЧ[СтруктураПараметров.ИмяКолонкиКоличество] + ТекШтрихкод.Количество * ДанныеШтрихкода.Коэффициент;
				КонецЕсли;
				
				ОбработкаТабличнойЧастиСервер.ОбработатьСтрокуТЧ(СтрокаТЧ, СтруктураПараметров.СтруктураДействийСИзмененнымиСтроками, КэшированныеЗначения);
				Модифицированность = Истина;
				
			КонецЕсли;
			
			Если СтруктураПараметров.ПараметрыУказанияСерий <> Неопределено
				И СтруктураПараметров.ПараметрыУказанияСерий.ИспользоватьСерииНоменклатуры
				И СтрокаТЧ <> Неопределено Тогда
				
				НоменклатураСервер.ЗаполнитьСтатусыУказанияСерийПриОкончанииРедактированияСтрокиТЧ(Объект, СтруктураПараметров.ПараметрыУказанияСерий, 
				СтрокаТЧ.ПолучитьИдентификатор(), КэшированныеЗначения);
				
				Если СтрокаТЧ.СтатусУказанияСерий <> 0 Тогда
					МассивСтрокССериями.Добавить(СтрокаТЧ.ПолучитьИдентификатор());
				КонецЕсли;
				
			КонецЕсли;
			
		КонецЕсли;
		
		Если СтрокаТЧ <> Неопределено Тогда
			ТекущаяСтрока = СтрокаТЧ.ПолучитьИдентификатор();
		КонецЕсли;
	КонецЦикла;
	
	Если Модифицированность Тогда
		Форма.Модифицированность = Истина;
	КонецЕсли;
	
	СтруктураПараметров.Вставить("МассивСтрокССериями",МассивСтрокССериями);
	СтруктураПараметров.Вставить("ТекущаяСтрока",ТекущаяСтрока);
	
КонецПроцедуры

Функция ПравоРегистрацииШтрихкодовНоменклатурыДоступно() Экспорт
	
	Возврат Пользователи.РолиДоступны("РегистрацияШтрихкодовНоменклатуры");
	
КонецФункции

////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ
