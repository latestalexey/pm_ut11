////////////////////////////////////////////////////////////////////////////////
// ПРОГРАММНЫЙ ИНТЕРФЕЙС

// Обработчик подписки на событие "ОбменССайтомПередЗаписьюРегистра"
//
//
// Параметры:
//
Процедура ЗарегистрироватьИзмененияПередЗаписьюРегистраСведенийДляОбменаССайтами(Источник, Отказ, Замещение) Экспорт
	ЗарегистрироватьИзменения(Источник, Замещение);
КонецПроцедуры

// Обработчик подписки на событие "ОбменССайтомПриЗаписиСправочника"
//
//
// Параметры:
//
Процедура ЗарегистрироватьИзмененияПриЗаписиСправочникаДокументаДляОбменаССайтами(Источник, Отказ) Экспорт
	ЗарегистрироватьИзменения(Источник);
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

// Выборочно регистрирует изменения по узлам планов обмена с сайтом
//
//
// Параметры:
// Объект		- Объект метаданных - источник события
//
Процедура ЗарегистрироватьИзменения(Объект, Замещение = Ложь)
	
	Если Не ПараметрыСеанса.ОбменДаннымиССайтомВключен Тогда
		Возврат;
	КонецЕсли;
	
	ТипОбъекта = ТипЗнч(Объект);
	МассивУзловТовары = ОбменССайтом.ПолучитьМассивУзловДляРегистрации(Истина);
	МассивУзловЗаказы = ОбменССайтом.ПолучитьМассивУзловДляРегистрации(,Истина);
	
	Если ТипОбъекта = Тип("РегистрНакопленияНаборЗаписей.СвободныеОстатки")
		ИЛИ ТипОбъекта = Тип("РегистрСведенийНаборЗаписей.ЦеныНоменклатуры")
		ИЛИ ТипОбъекта = Тип("РегистрСведенийНаборЗаписей.НоменклатураСегмента")
		ИЛИ ТипОбъекта = Тип("РегистрСведенийНаборЗаписей.ШтрихКодыНоменклатуры") Тогда 
		
		Если Замещение Тогда
			
			ОбъектМетаданных = Объект.Метаданные();
			
			ИмяБазовогоТипа = ОбщегоНазначения.ИмяБазовогоТипаПоОбъектуМетаданных(ОбъектМетаданных);
			
			Если ИмяБазовогоТипа = ОбщегоНазначения.ИмяТипаРегистрыСведений() Тогда
				
				СтарыйНаборЗаписей = РегистрыСведений[ОбъектМетаданных.Имя].СоздатьНаборЗаписей();
				
			ИначеЕсли ИмяБазовогоТипа = ОбщегоНазначения.ИмяТипаРегистрыНакопления() Тогда
				
				СтарыйНаборЗаписей = РегистрыНакопления[ОбъектМетаданных.Имя].СоздатьНаборЗаписей();
				
			Иначе
				
				Возврат;
				
			КонецЕсли;
			
			Для Каждого ЗначениеОтбора Из Объект.Отбор Цикл
				
				Если ЗначениеОтбора.Использование = Ложь Тогда
					Продолжить;
				КонецЕсли;
				
				СтрокаОтбора = СтарыйНаборЗаписей.Отбор.Найти(ЗначениеОтбора.Имя);
				СтрокаОтбора.Значение = ЗначениеОтбора.Значение;
				СтрокаОтбора.Использование = Истина;
				
			КонецЦикла;
			
			СтарыйНаборЗаписей.Прочитать();
			
			Для каждого Запись Из СтарыйНаборЗаписей Цикл
			
				ПланыОбмена.ЗарегистрироватьИзменения(МассивУзловТовары, Запись.Номенклатура);
			
			КонецЦикла;
			
		КонецЕсли;
		
		Для каждого Запись Из Объект Цикл
			
			ПланыОбмена.ЗарегистрироватьИзменения(МассивУзловТовары, Запись.Номенклатура);
			
		КонецЦикла;
		
	ИначеЕсли ТипОбъекта = Тип("СправочникОбъект.Номенклатура") Тогда
		
		ПланыОбмена.ЗарегистрироватьИзменения(МассивУзловТовары, Объект.Ссылка);
		
	ИначеЕсли ТипОбъекта = Тип("СправочникОбъект.НоменклатураПрисоединенныеФайлы") Тогда
		
		ПланыОбмена.ЗарегистрироватьИзменения(МассивУзловТовары, Объект.ВладелецФайла);
		
		// Регистрируем все файлы по номенклатуре, иначе в режиме загрузки изменений
		// CMS удалит те файлы, которые отсутствуют в файле обмена.
		
		Запрос = Новый Запрос;
		
		Запрос.Текст = "ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	НоменклатураПрисоединенныеФайлы.Ссылка
		|ИЗ
		|	Справочник.НоменклатураПрисоединенныеФайлы КАК НоменклатураПрисоединенныеФайлы
		|ГДЕ
		|	(НЕ НоменклатураПрисоединенныеФайлы.ПометкаУдаления)
		|	И НоменклатураПрисоединенныеФайлы.ВладелецФайла = &ВладелецФайла";
		
		Запрос.УстановитьПараметр("ВладелецФайла", Объект.ВладелецФайла);
		
		Выборка = Запрос.Выполнить().Выбрать();
		
		Пока Выборка.Следующий() Цикл
		
			ПланыОбмена.ЗарегистрироватьИзменения(МассивУзловТовары, Выборка.Ссылка);
		
		КонецЦикла; 
		
	ИначеЕсли ТипОбъекта = Тип("СправочникОбъект.ХарактеристикиНоменклатуры") Тогда
		
		Если НЕ ПолучитьФункциональнуюОпцию("ИспользоватьХарактеристикиНоменклатуры") Тогда
			
			Возврат;
			
		КонецЕсли;
		
		Если ТипЗнч(Объект.Владелец) = Тип("СправочникСсылка.Номенклатура") Тогда 
			
			ПланыОбмена.ЗарегистрироватьИзменения(МассивУзловТовары, Объект.Владелец);
			
		Иначе
			
			Запрос = Новый Запрос("ВЫБРАТЬ РАЗРЕШЕННЫЕ
			                      |	Номенклатура.Ссылка
			                      |ИЗ
			                      |	Справочник.Номенклатура КАК Номенклатура
			                      |ГДЕ
			                      |	Номенклатура.ВидНоменклатуры = &ВидНоменклатуры
			                      |	И (НЕ Номенклатура.ЭтоГруппа)");
			
			Запрос.УстановитьПараметр("ВидНоменклатуры", Объект.Владелец);
			
			Выборка = Запрос.Выполнить().Выбрать();
			
			Пока Выборка.Следующий() Цикл
				
				ПланыОбмена.ЗарегистрироватьИзменения(МассивУзловТовары, Выборка.Ссылка);
				
			КонецЦикла;
			
		КонецЕсли;
		
	ИначеЕсли ТипОбъекта = Тип("СправочникОбъект.УпаковкиНоменклатуры") Тогда
		
		ТипВладельца = ТипЗнч(Объект.Владелец);
		
		Если ТипВладельца = Тип("СправочникСсылка.Номенклатура") Тогда
			
			ПланыОбмена.ЗарегистрироватьИзменения(МассивУзловТовары, Объект.Владелец);
			
		Иначе
			
			Запрос = Новый Запрос(
				"ВЫБРАТЬ РАЗРЕШЕННЫЕ
				|	Номенклатура.Ссылка
				|ИЗ
				|	Справочник.Номенклатура КАК Номенклатура
				|ГДЕ
				|	Номенклатура.НаборУпаковок = &НаборУпаковок");
				
			Запрос.УстановитьПараметр("НаборУпаковок", Объект.Владелец);
			
			Выборка = Запрос.Выполнить().Выбрать();
			
			Пока Выборка.Следующий() Цикл
				
				ПланыОбмена.ЗарегистрироватьИзменения(МассивУзловТовары, Выборка.Ссылка);
				
			КонецЦикла;
			
		КонецЕсли;
		
		
	ИначеЕсли ТипОбъекта = Тип("СправочникОбъект.ВидыНоменклатуры") Тогда
		
		Запрос = Новый Запрос("ВЫБРАТЬ РАЗРЕШЕННЫЕ
		                      |	Номенклатура.Ссылка
		                      |ИЗ
		                      |	Справочник.Номенклатура КАК Номенклатура
		                      |ГДЕ
		                      |	Номенклатура.ВидНоменклатуры = &Группа");
		
		Запрос.УстановитьПараметр("Группа", Объект.Ссылка);
		
		Выборка = Запрос.Выполнить().Выбрать();
		
		Пока Выборка.Следующий() Цикл
			
			ПланыОбмена.ЗарегистрироватьИзменения(МассивУзловТовары, Выборка.Ссылка);
			
		КонецЦикла;
		
	ИначеЕсли ТипОбъекта = Тип("ДокументОбъект.ЗаказКлиента") Тогда 
		
		Для Каждого УзелОбмена Из МассивУзловЗаказы Цикл

			ДопРеквизитНомерЗаказаНаСайте = УзелОбмена.ДополнительныйРеквизитЗаказаКлиентаНомерЗаказаНаСайте;
			ДопРеквизитДатаЗаказаНаСайте = УзелОбмена.ДополнительныйРеквизитЗаказаКлиентаДатаЗаказаНаСайте;
			
			Если НЕ ОбменССайтом.ПолучитьРеквизитыЗаказаНаСайте(Объект.Ссылка, ДопРеквизитНомерЗаказаНаСайте, ДопРеквизитДатаЗаказаНаСайте) = НеОпределено Тогда
				
				ПланыОбмена.ЗарегистрироватьИзменения(УзелОбмена, Объект.Ссылка);
				
			КонецЕсли;
			
		КонецЦикла;
		
	КонецЕсли;
	
КонецПроцедуры
