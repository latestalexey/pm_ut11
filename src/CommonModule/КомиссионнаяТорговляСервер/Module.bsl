////////////////////////////////////////////////////////////////////////////////
// ПРОГРАММНЫЙ ИНТЕРФЕЙС

// Процедура проверяет правильность заполнения начала и конца периода.
//
// Параметры:
//	ДокументОбъект - Текущий документ
//	Отказ - Булево - Признак отказа от продолжения работы
//
Процедура ПроверитьКорректностьПериода(ДокументОбъект, Отказ) Экспорт
	
	Если ЗначениеЗаполнено(ДокументОбъект.НачалоПериода)
	 И ДокументОбъект.НачалоПериода > ДокументОбъект.КонецПериода Тогда
	 
		ТекстОшибки = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			НСтр("ru='Дата начала периода не должна быть больше окончания периода %1'"),
			Формат(ДокументОбъект.КонецПериода, "ДЛФ=DD")
		);
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
			ТекстОшибки,
			ДокументОбъект,
			"КонецПериода",
			, // ПутьКДанным
			Отказ
		);
	 
	КонецЕсли;
	
КонецПроцедуры

// Процедура проверяет корректность указания услуги по комиссионному вознаграждению.
//
// Параметры:
//	ДокументОбъект - Текущий документ
//	Отказ - Булево - Признак отказа от продолжения работы
//
Процедура ПроверитьУслугуПоКомиссионномуВознаграждению(ДокументОбъект, Отказ) Экспорт
	
	Если ЗначениеЗаполнено(ДокументОбъект.Услуга) Тогда
		
		ХарактеристикиИспользуются = Справочники.Номенклатура.ХарактеристикиИспользуются(ДокументОбъект.Услуга);
		Если ХарактеристикиИспользуются Тогда
			ТекстОшибки = НСтр("ru='Необходимо указать услугу для которой не используются характеристики'");
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
				ТекстОшибки,
				ДокументОбъект,
				"Услуга",
				, // ПутьКДанным
				Отказ
			);
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

// Процедура заполнения документа по остаткам товаров к оформлению отчетов комитенту.
//
Процедура ЗаполнитьТоварыПоОстаткамКОформлениюОтчетовКомитенту(Объект, КонецПериода, ЭтоОтчетОПродажах, ЕстьСуммаПродажиНДС) Экспорт
	
	Запрос = Новый Запрос("
	|ВЫБРАТЬ
	|	ВидыЗапасов.Ссылка КАК ВидЗапасов
	|
	|ПОМЕСТИТЬ ВидыЗапасов
	|ИЗ
	|	Справочник.ВидыЗапасов КАК ВидыЗапасов
	|ГДЕ
	|	ВидыЗапасов.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.КомиссионныйТовар)
	|	И ВидыЗапасов.Организация = &Организация
	|	И ВидыЗапасов.Комитент = &Комитент
	|	И (ВидыЗапасов.Соглашение = &Соглашение
	|		ИЛИ &Соглашение = Неопределено)
	|	И ВидыЗапасов.Валюта = &Валюта
	|;
	|/////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТоварыКОформлению.Номенклатура КАК Номенклатура,
	|	ТоварыКОформлению.Характеристика КАК Характеристика,
	|
	|	ВЫБОР КОГДА &ЭтоОтчетОПродажах ТОГДА
	|		ТоварыКОформлению.КоличествоОстаток
	|	ИНАЧЕ
	|		ТоварыКОформлению.КоличествоСписаноОстаток
	|	КОНЕЦ КАК КоличествоОстаток,
	|	ТоварыКОформлению.СуммаВыручкиОстаток
	|
	|ПОМЕСТИТЬ ТоварыКОформлению
	|ИЗ
	|	РегистрНакопления.ТоварыКОформлениюОтчетовКомитенту.Остатки(&Граница,
	|		ВидЗапасов В (
	|			ВЫБРАТЬ
	|				ВидЗапасов
	|			ИЗ
	|				ВидыЗапасов КАК ВидыЗапасов
	|			)
	|	) КАК ТоварыКОформлению
	|ГДЕ
	|	(ТоварыКОформлению.КоличествоОстаток <> 0
	|		И &ЭтоОтчетОПродажах)
	|	ИЛИ 
	|	(ТоварыКОформлению.КоличествоСписаноОстаток <> 0
	|		И Не &ЭтоОтчетОПродажах)
	|;
	|/////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТоварыКОформлению.Номенклатура КАК Номенклатура,
	|	ТоварыКОформлению.Характеристика КАК Характеристика,
	|
	|	ВЫБОР КОГДА &ЭтоОтчетОПродажах ТОГДА
	|		ТоварыКОформлению.КоличествоОстаток
	|	ИНАЧЕ
	|		ТоварыКОформлению.КоличествоСписаноОстаток
	|	КОНЕЦ КАК КоличествоОстаток,
	|	ВЫБОР КОГДА &ЭтоОтчетОПродажах И ТоварыКОформлению.КоличествоОстаток < 0 ТОГДА
	|		-1
	|	ИНАЧЕ
	|		1
	|	КОНЕЦ КАК Знак,
	|	ТоварыКОформлению.СуммаВыручкиОстаток
	|
	|ПОМЕСТИТЬ ТоварыКОформлениюОстатки
	|ИЗ
	|	РегистрНакопления.ТоварыКОформлениюОтчетовКомитенту.Остатки(,
	|		ВидЗапасов В (
	|			ВЫБРАТЬ
	|				ВидЗапасов
	|			ИЗ
	|				ВидыЗапасов КАК ВидыЗапасов
	|			)
	|	) КАК ТоварыКОформлению
	|ГДЕ
	|	(ТоварыКОформлению.КоличествоОстаток <> 0
	|		И &ЭтоОтчетОПродажах)
	|	ИЛИ 
	|	(ТоварыКОформлению.КоличествоСписаноОстаток <> 0
	|		И Не &ЭтоОтчетОПродажах)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Номенклатура,
	|	Характеристика
	|;
	|/////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТоварыКОформлению.Номенклатура КАК Номенклатура,
	|	ТоварыКОформлению.Характеристика КАК Характеристика,
	|
	|	ВЫБОР КОГДА ЕСТЬNULL(ТоварыКОформлениюОстатки.КоличествоОстаток * ТоварыКОформлениюОстатки.Знак, 0)
	|		< (ТоварыКОформлению.КоличествоОстаток * ЕСТЬNULL(ТоварыКОформлениюОстатки.Знак, 1))
	|	ТОГДА
	|		ЕСТЬNULL(ТоварыКОформлениюОстатки.КоличествоОстаток, 0)
	|	ИНАЧЕ
	|		ТоварыКОформлению.КоличествоОстаток
	|	КОНЕЦ КАК Количество,
	|
	|	ВЫБОР КОГДА ЕСТЬNULL(ТоварыКОформлениюОстатки.КоличествоОстаток * ТоварыКОформлениюОстатки.Знак, 0)
	|		< (ТоварыКОформлению.КоличествоОстаток * ЕСТЬNULL(ТоварыКОформлениюОстатки.Знак, 1))
	|	ТОГДА
	|		ЕСТЬNULL(ТоварыКОформлениюОстатки.СуммаВыручкиОстаток, 0)
	|	ИНАЧЕ
	|		ТоварыКОформлению.СуммаВыручкиОстаток
	|	КОНЕЦ КАК СуммаПродажи
	|ИЗ
	|	ТоварыКОформлению КАК ТоварыКОформлению
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		ТоварыКОформлениюОстатки КАК ТоварыКОформлениюОстатки
	|	ПО
	|		ТоварыКОформлению.Номенклатура = ТоварыКОформлениюОстатки.Номенклатура
	|		И ТоварыКОформлению.Характеристика = ТоварыКОформлениюОстатки.Характеристика
	|ГДЕ
	|	ТоварыКОформлению.КоличествоОстаток <> 0
	|	И ЕСТЬNULL(ТоварыКОформлениюОстатки.КоличествоОстаток, 0) <> 0
	|
	|УПОРЯДОЧИТЬ ПО
	|	ТоварыКОформлению.Номенклатура,
	|	ТоварыКОформлению.Характеристика
	|");
	ДатаЗаполнения = ?(ЗначениеЗаполнено(КонецПериода), КонецПериода, ТекущаяДата());
	Граница = Новый Граница(КонецДня(ДатаЗаполнения), ВидГраницы.Включая);
	Запрос.УстановитьПараметр("Граница", Граница);
	Запрос.УстановитьПараметр("Валюта", Объект.Валюта);
	Запрос.УстановитьПараметр("Организация", Объект.Организация);
	Запрос.УстановитьПараметр("Комитент", Объект.Партнер);
	Запрос.УстановитьПараметр("Соглашение", Объект.Соглашение);
	Запрос.УстановитьПараметр("ЭтоОтчетОПродажах", ЭтоОтчетОПродажах);
	
	Объект.Товары.Очистить();
	
	КэшированныеЗначения = Неопределено;
	СтруктураДействий = Новый Структура;
	СтруктураДействий.Вставить("ЗаполнитьСтавкуНДС",  Объект.НалогообложениеНДС);
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		
		НоваяСтрока = Объект.Товары.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, Выборка);
		НоваяСтрока.КоличествоУпаковок = НоваяСтрока.Количество;
		
		ОбработкаТабличнойЧастиСервер.ОбработатьСтрокуТЧ(НоваяСтрока, СтруктураДействий, КэшированныеЗначения);
		
		Если ЭтоОтчетОПродажах Тогда
			НоваяСтрока.ЦенаПродажи = ?(НоваяСтрока.Количество <> 0, НоваяСтрока.СуммаПродажи / НоваяСтрока.Количество, 0);
		КонецЕсли;
		
		Если ЕстьСуммаПродажиНДС Тогда
			НоваяСтрока.СуммаПродажиНДС = СуммаПродажиНДС(НоваяСтрока.СуммаПродажи, НоваяСтрока.СтавкаНДС);
		КонецЕсли;
		
	КонецЦикла;
	
	Если ЗначениеЗаполнено(Объект.Соглашение) Тогда
		СтруктураПересчетаСуммы = ОбработкаТабличнойЧастиКлиентСервер.ПолучитьСтруктуруПересчетаСуммыНДСВСтрокеТЧ(Объект);
		ЗакупкиСервер.ЗаполнитьЦены(
			Объект.Товары,
			, // Массив строк
			Новый Структура( // Параметры заполнения
				"ПоляЗаполнения, Дата, Валюта, Соглашение",
				"Цена, СтавкаНДС",
				Объект.Дата,
				Объект.Валюта,
				Объект.Соглашение
			),
			Новый Структура( // Структура действий с измененныими строками
				"ПересчитатьСумму, ПересчитатьСуммуСНДС, ПересчитатьСуммуНДС",
				"КоличествоУпаковок", СтруктураПересчетаСуммы, СтруктураПересчетаСуммы
			)
		);
		
	Иначе
		
		ЗаполнитьСуммуСНДС(
			Объект.Товары,
			Объект.ЦенаВключаетНДС
		);
		
	КонецЕсли;
	
КонецПроцедуры

// Процедура заполнения документа по результатам продаж за период товаров к оформлению отчетов комитенту.
//
Процедура ЗаполнитьПоТоварамКОформлениюОтчетовКомитентуЗаПериод(Объект, НачалоПериода, КонецПериода, ЕстьСуммаПродажиНДС) Экспорт
	
	МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	
	СтруктураПараметров = Новый Структура;
	СтруктураПараметров.Вставить("Валюта", Объект.Валюта);
	СтруктураПараметров.Вставить("Организация", Объект.Организация);
	СтруктураПараметров.Вставить("Партнер", Объект.Партнер);
	СтруктураПараметров.Вставить("Соглашение", Объект.Соглашение);
	СтруктураПараметров.Вставить("НачалоПериода", НачалоПериода);
	СтруктураПараметров.Вставить("КонецПериода", КонецДня(?(ЗначениеЗаполнено(КонецПериода), КонецПериода, ТекущаяДата())));
	СтруктураПараметров.Вставить("ЕстьСуммаПродажиНДС", ЕстьСуммаПродажиНДС);
	
	ЗапросПоТоварамКОформлениюОтчетовКомитентуЗаПериод(СтруктураПараметров, МенеджерВременныхТаблиц);
	
	Запрос = Новый Запрос("
	|ВЫБРАТЬ
	|	ТоварыКОформлению.Номенклатура КАК Номенклатура,
	|	ТоварыКОформлению.Характеристика КАК Характеристика,
	|	ТоварыКОформлению.ДатаСчетаФактуры КАК ДатаСчетаФактуры,
	|	ТоварыКОформлению.ДатаСчетаФактуры КАК ДатаСчетаФактурыКомиссионера,
	|	ТоварыКОформлению.Покупатель КАК Покупатель,
	|	ТоварыКОформлению.Количество КАК Количество,
	|	ТоварыКОформлению.СуммаВыручки КАК СуммаПродажи,
	|	ТоварыКОформлению.КоличествоОстаток КАК КоличествоОстаток,
	|	ТоварыКОформлению.ЕстьСуммаПродажиНДС КАК ЕстьСуммаПродажиНДС
	|
	|ИЗ
	|	ТоварыКОформлению КАК ТоварыКОформлению
	|
	|УПОРЯДОЧИТЬ ПО
	|	ТоварыКОформлению.ДатаСчетаФактуры УБЫВ
	|
	|ИТОГИ
	|	СУММА(Количество),
	|	МАКСИМУМ(КоличествоОстаток)
	|ПО
	|	Номенклатура,
	|	Характеристика
	|");
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ЗаполнитьТЧПоТоварамКОформлениюОтчетовКомитентуЗаПериод(Объект.Товары, РезультатЗапроса, Объект.НалогообложениеНДС);
	
	Если ЗначениеЗаполнено(Объект.Соглашение) Тогда
		
		СтруктураПересчетаСуммы = ОбработкаТабличнойЧастиКлиентСервер.ПолучитьСтруктуруПересчетаСуммыНДСВСтрокеТЧ(Объект);
		ЗакупкиСервер.ЗаполнитьЦены(
			Объект.Товары,
			, // Массив строк
			Новый Структура( // Параметры заполнения
				"ПоляЗаполнения, Дата, Валюта, Соглашение",
				"Цена, СтавкаНДС",
				Объект.Дата,
				Объект.Валюта,
				Объект.Соглашение
			),
			Новый Структура( // Структура действий с измененныими строками
				"ПересчитатьСумму, ПересчитатьСуммуСНДС, ПересчитатьСуммуНДС",
				"КоличествоУпаковок", СтруктураПересчетаСуммы, СтруктураПересчетаСуммы
			)
		);
		
	Иначе
		
		ЗаполнитьСуммуСНДС(
			Объект.Товары,
			Объект.ЦенаВключаетНДС
		);
		
	КонецЕсли;
	
КонецПроцедуры

// Процедура формирования временной таблицы "ТоварыКОформлению" по результатам продаж за период
//
Процедура ЗапросПоТоварамКОформлениюОтчетовКомитентуЗаПериод(СтруктураПараметров, МенеджерВременныхТаблиц) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	Запрос = Новый Запрос("
	|ВЫБРАТЬ
	|	ВидыЗапасов.Ссылка КАК ВидЗапасов
	|
	|ПОМЕСТИТЬ ВидыЗапасов
	|ИЗ
	|	Справочник.ВидыЗапасов КАК ВидыЗапасов
	|ГДЕ
	|	ВидыЗапасов.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.КомиссионныйТовар)
	|	И ВидыЗапасов.Организация = &Организация
	|	И ВидыЗапасов.Комитент = &Комитент
	|	И (ВидыЗапасов.Соглашение = &Соглашение
	|		ИЛИ &Соглашение = Неопределено)
	|	И ВидыЗапасов.Валюта = &Валюта
	|;
	|/////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТоварыКОформлению.Номенклатура КАК Номенклатура,
	|	ТоварыКОформлению.Характеристика КАК Характеристика,
	|	НАЧАЛОПЕРИОДА(ЕСТЬNULL(ДанныеСчетаФактуры.Дата, ТоварыКОформлению.ДатаСчетаФактуры), ДЕНЬ) КАК ДатаСчетаФактуры,
	|	ЕСТЬNULL(ДанныеРеализации.Контрагент, ТоварыКОформлению.Покупатель) КАК Покупатель,
	|	
	|	СУММА(ВЫБОР КОГДА ТоварыКОформлению.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) ТОГДА
	|		ТоварыКОформлению.Количество
	|	ИНАЧЕ
	|		-ТоварыКОформлению.Количество
	|	КОНЕЦ) КАК Количество,
	|	
	|	СУММА(ВЫБОР КОГДА ТоварыКОформлению.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) ТОГДА
	|		ТоварыКОформлению.СуммаВыручки
	|	ИНАЧЕ
	|		-ТоварыКОформлению.СуммаВыручки
	|	КОНЕЦ) КАК СуммаВыручки
	|
	|ПОМЕСТИТЬ ТоварыКОформлениюЗаПериод
	|ИЗ
	|	РегистрНакопления.ТоварыКОформлениюОтчетовКомитенту КАК ТоварыКОформлению
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		ВидыЗапасов КАК ВидыЗапасов
	|	ПО
	|		ТоварыКОформлению.ВидЗапасов = ВидыЗапасов.ВидЗапасов
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		Документ.СчетФактураВыданный КАК ДанныеСчетаФактуры
	|	ПО
	|		ТоварыКОформлению.ДокументРеализации = ДанныеСчетаФактуры.ДокументОснование
	|		И ТоварыКОформлению.ДокументРеализации <> НЕОПРЕДЕЛЕНО
	|		И НЕ ДанныеСчетаФактуры.ПометкаУдаления
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		Документ.РеализацияТоваровУслуг КАК ДанныеРеализации
	|	ПО
	|		ТоварыКОформлению.ДокументРеализации = ДанныеРеализации.Ссылка
	|	
	|ГДЕ
	|	ТоварыКОформлению.Период МЕЖДУ &НачалоПериода И &КонецПериода
	|	И ТоварыКОформлению.Активность
	|
	|СГРУППИРОВАТЬ ПО
	|	НАЧАЛОПЕРИОДА(ЕСТЬNULL(ДанныеСчетаФактуры.Дата, ТоварыКОформлению.ДатаСчетаФактуры), ДЕНЬ),
	|	ЕСТЬNULL(ДанныеРеализации.Контрагент, ТоварыКОформлению.Покупатель),
	|	ТоварыКОформлению.Номенклатура,
	|	ТоварыКОформлению.Характеристика
	|
	|ИМЕЮЩИЕ
	|	СУММА(ВЫБОР КОГДА ТоварыКОформлению.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) ТОГДА
	|		ТоварыКОформлению.Количество
	|	ИНАЧЕ
	|		-ТоварыКОформлению.Количество
	|	КОНЕЦ) <> 0
	|;
	|/////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТоварыКОформлениюЗаПериод.Номенклатура КАК Номенклатура,
	|	ТоварыКОформлениюЗаПериод.Характеристика КАК Характеристика,
	|	ТоварыКОформлениюЗаПериод.ДатаСчетаФактуры КАК ДатаСчетаФактуры,
	|	ТоварыКОформлениюЗаПериод.Покупатель КАК Покупатель,
	|	ТоварыКОформлениюЗаПериод.Количество КАК Количество,
	|	ТоварыКОформлениюЗаПериод.СуммаВыручки КАК СуммаВыручки,
	|	ЕСТЬNULL(ТоварыКОформлениюОстатки.КоличествоОстаток, 0) КАК КоличествоОстаток,
	|	&ЕстьСуммаПродажиНДС КАК ЕстьСуммаПродажиНДС
	|
	|ПОМЕСТИТЬ ТоварыКОформлению
	|ИЗ
	|	ТоварыКОформлениюЗаПериод КАК ТоварыКОформлениюЗаПериод
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		РегистрНакопления.ТоварыКОформлениюОтчетовКомитенту.Остатки(,
	|			ВидЗапасов В (
	|				ВЫБРАТЬ
	|					ВидЗапасов
	|				ИЗ
	|					ВидыЗапасов КАК ВидыЗапасов
	|			)
	|		) КАК ТоварыКОформлениюОстатки
	|	ПО
	|		ТоварыКОформлениюЗаПериод.Номенклатура = ТоварыКОформлениюОстатки.Номенклатура
	|		И ТоварыКОформлениюЗаПериод.Характеристика = ТоварыКОформлениюОстатки.Характеристика
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Номенклатура,
	|	Характеристика,
	|	ДатаСчетаФактуры,
	|	Покупатель
	|;
	|/////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ТоварыКОформлениюЗаПериод
	|");
	Запрос.УстановитьПараметр("НачалоПериода", СтруктураПараметров.НачалоПериода);
	Запрос.УстановитьПараметр("КонецПериода", СтруктураПараметров.КонецПериода);
	Запрос.УстановитьПараметр("Валюта", СтруктураПараметров.Валюта);
	Запрос.УстановитьПараметр("Организация", СтруктураПараметров.Организация);
	Запрос.УстановитьПараметр("Комитент", СтруктураПараметров.Партнер);
	Запрос.УстановитьПараметр("Соглашение", СтруктураПараметров.Соглашение);
	Запрос.УстановитьПараметр("ЕстьСуммаПродажиНДС", СтруктураПараметров.ЕстьСуммаПродажиНДС);
	
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	
	Запрос.Выполнить();
	
КонецПроцедуры

// Процедура заполнения табличной части по данным временной таблицы "ТоварыКОформлению"
//
Процедура ЗаполнитьТЧПоТоварамКОформлениюОтчетовКомитентуЗаПериод(ТабличнаяЧасть, РезультатЗапроса, НалогообложениеНДС) Экспорт
	
	ТабличнаяЧасть.Очистить();
	
	КэшированныеЗначения = Неопределено;
	СтруктураДействий = Новый Структура;
	СтруктураДействий.Вставить("ЗаполнитьСтавкуНДС", НалогообложениеНДС);
	
	ВыборкаПоНоменклатуре = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	Пока ВыборкаПоНоменклатуре.Следующий() Цикл
		
		ВыборкаПоХарактеристике = ВыборкаПоНоменклатуре.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		Пока ВыборкаПоХарактеристике.Следующий() Цикл
			
			Если ВыборкаПоХарактеристике.КоличествоОстаток >= ВыборкаПоХарактеристике.Количество Тогда
				
				Выборка = ВыборкаПоХарактеристике.Выбрать();
				Пока Выборка.Следующий() Цикл
					ДобавитьСтрокуПоТоварамКОформлениюОтчетовКомитентуЗаПериод(ТабличнаяЧасть, Выборка, Выборка.Количество, СтруктураДействий, КэшированныеЗначения);
				КонецЦикла;
				
			Иначе
				
				КоличествоКРаспределению = ВыборкаПоХарактеристике.КоличествоОстаток;
				
				Выборка = ВыборкаПоХарактеристике.Выбрать();
				Пока Выборка.Следующий() Цикл
					
					Если Выборка.Количество <= КоличествоКРаспределению Тогда
						ДобавитьСтрокуПоТоварамКОформлениюОтчетовКомитентуЗаПериод(ТабличнаяЧасть, Выборка, Выборка.Количество, СтруктураДействий, КэшированныеЗначения);
						КоличествоКРаспределению = КоличествоКРаспределению - Выборка.Количество;
					Иначе
						ДобавитьСтрокуПоТоварамКОформлениюОтчетовКомитентуЗаПериод(ТабличнаяЧасть, Выборка, КоличествоКРаспределению, СтруктураДействий, КэшированныеЗначения);
						КоличествоКРаспределению = 0;
					КонецЕсли;
					Если КоличествоКРаспределению = 0 Тогда
						Прервать;
					КонецЕсли;
					
				КонецЦикла;
				
			КонецЕсли;
			
		КонецЦикла;
		
	КонецЦикла;
	
КонецПроцедуры

// Процедура заполнения документа по остаткам товаров переданных на комиссию
//
// Параметры:
//	Объект - ДокументОбъект - Текущий документ
//	КонецПериода - Дата - Дата заполнения
//	ЕстьСуммаПродажи - Булево - В документе есть данные о сумме продажи
//
Процедура ЗаполнитьТоварыПоОстаткамПереданныхНаКомиссию(Объект, КонецПериода, ЕстьСуммаПродажи) Экспорт
	
	Запрос = Новый Запрос("
	|ВЫБРАТЬ
	|	ТоварыПереданные.Номенклатура КАК Номенклатура,
	|	ТоварыПереданные.Характеристика КАК Характеристика,
	|	ТоварыПереданные.КоличествоОстаток КАК КоличествоОстаток
	|
	|ПОМЕСТИТЬ ТоварыПереданные
	|ИЗ
	|	РегистрНакопления.ТоварыПереданныеНаКомиссию.Остатки(&Граница,
	|		Организация = &Организация
	|		И Партнер = &Партнер
	|		И Соглашение = &Соглашение
	|	) КАК ТоварыПереданные
	|;
	|/////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТоварыПереданные.Номенклатура КАК Номенклатура,
	|	ТоварыПереданные.Характеристика КАК Характеристика,
	|	ТоварыПереданные.КоличествоОстаток КАК КоличествоОстаток,
	|	ВЫБОР КОГДА ТоварыПереданные.КоличествоОстаток < 0 ТОГДА
	|		-1
	|	ИНАЧЕ
	|		1
	|	КОНЕЦ КАК Знак
	|
	|ПОМЕСТИТЬ ТоварыПереданныеОстатки
	|ИЗ
	|	РегистрНакопления.ТоварыПереданныеНаКомиссию.Остатки(,
	|		Организация = &Организация
	|		И Партнер = &Партнер
	|		И Соглашение = &Соглашение
	|	) КАК ТоварыПереданные
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Номенклатура,
	|	Характеристика
	|;
	|/////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТоварыПереданные.Номенклатура КАК Номенклатура,
	|	ТоварыПереданные.Характеристика КАК Характеристика,
	|	ВЫБОР КОГДА ЕСТЬNULL(ТоварыПереданныеОстатки.КоличествоОстаток * ТоварыПереданныеОстатки.Знак, 0)
	|		< (ТоварыПереданные.КоличествоОстаток * ЕСТЬNULL(ТоварыПереданныеОстатки.Знак, 1))
	|	ТОГДА
	|		ЕСТЬNULL(ТоварыПереданныеОстатки.КоличествоОстаток, 0)
	|	ИНАЧЕ
	|		ТоварыПереданные.КоличествоОстаток
	|	КОНЕЦ КАК Количество
	|ИЗ
	|	ТоварыПереданные КАК ТоварыПереданные
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		ТоварыПереданныеОстатки КАК ТоварыПереданныеОстатки
	|	ПО
	|		ТоварыПереданные.Номенклатура = ТоварыПереданныеОстатки.Номенклатура
	|		И ТоварыПереданные.Характеристика = ТоварыПереданныеОстатки.Характеристика
	|ГДЕ
	|	ТоварыПереданные.КоличествоОстаток <> 0
	|	И ЕСТЬNULL(ТоварыПереданныеОстатки.КоличествоОстаток, 0) <> 0
	|
	|УПОРЯДОЧИТЬ ПО
	|	ТоварыПереданные.Номенклатура,
	|	ТоварыПереданные.Характеристика
	|");
	ДатаЗаполнения = ?(ЗначениеЗаполнено(КонецПериода), КонецПериода, ТекущаяДата());
	Граница = Новый Граница(КонецДня(ДатаЗаполнения), ВидГраницы.Включая);
	Запрос.УстановитьПараметр("Граница", Граница);
	Запрос.УстановитьПараметр("Организация", Объект.Организация);
	Запрос.УстановитьПараметр("Партнер", Объект.Партнер);
	Запрос.УстановитьПараметр("Соглашение", Объект.Соглашение);
	
	Объект.Товары.Очистить();
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		НоваяСтрока = Объект.Товары.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, Выборка);
		НоваяСтрока.КоличествоУпаковокУчет = НоваяСтрока.Количество;
		НоваяСтрока.КоличествоУпаковок = НоваяСтрока.Количество;
	КонецЦикла;
	
	СтруктураПересчетаСуммы = ОбработкаТабличнойЧастиКлиентСервер.ПолучитьСтруктуруПересчетаСуммыНДСВСтрокеТЧ(Объект);
	ПродажиСервер.ЗаполнитьЦены(
		Объект.Товары,
		, // Массив строк или структура отбора
		Новый Структура( // Параметры заполнения
			"Дата, Валюта, Соглашение, ПоляЗаполнения",
			ДатаЗаполнения,
			Объект.Валюта,
			Объект.Соглашение,
			"Цена, СтавкаНДС, ВидЦены"
		),
		Новый Структура( // Структура действий с измененными строками
			"ПересчитатьСумму, ПересчитатьСуммуСНДС, ПересчитатьСуммуНДС",
			"КоличествоУпаковок", СтруктураПересчетаСуммы, СтруктураПересчетаСуммы
		)
	);
	
	Для Каждого СтрокаТаблицы Из Объект.Товары Цикл
		СтрокаТаблицы.СуммаСНДС = СтрокаТаблицы.Сумма + ?(Объект.ЦенаВключаетНДС, 0, СтрокаТаблицы.СуммаНДС);
		Если ЕстьСуммаПродажи Тогда
			СтрокаТаблицы.СуммаПродажи = СтрокаТаблицы.СуммаСНДС;
			СтрокаТаблицы.СуммаПродажиНДС = СуммаПродажиНДС(СтрокаТаблицы.СуммаПродажи, СтрокаТаблицы.СтавкаНДС);
			СтрокаТаблицы.ЦенаПродажи = ?(СтрокаТаблицы.КоличествоУпаковок <> 0, СтрокаТаблицы.СуммаПродажи / СтрокаТаблицы.КоличествоУпаковок, 0);
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

// Процедура заполнения колонки документа по данным учета.
//
// Параметры:
//	Объект - ДокументОбъект - Текущий документ
//	КонецПериода - Дата - Дата заполнения
//	ЕстьСуммаПродажи - Булево - В документе есть данные о сумме продажи
//	РассчитыватьВознаграждение - Булево - Признак необходимости расчета комиссионного вознаграждения
//
Процедура ПересчитатьОстаткиПоДаннымУчета(Объект, КонецПериода, ЕстьСуммаПродажи, РассчитыватьВознаграждение = Ложь, НомерСтроки  = Неопределено) Экспорт
	
	Запрос = Новый Запрос("
	|ВЫБРАТЬ
	|	Товары.НомерСтроки КАК НомерСтроки,
	|	Товары.Номенклатура КАК Номенклатура,
	|	Товары.Характеристика КАК Характеристика,
	|	Товары.Упаковка КАК Упаковка
	|
	|ПОМЕСТИТЬ Товары
	|ИЗ
	|	&Товары КАК Товары
	|ГДЕ
	|	&НомерСтроки = Неопределено
	|	ИЛИ Товары.НомерСтроки = &НомерСтроки
	|;
	|///////////////////////////////////////////////////////////////////////////////	
	|ВЫБРАТЬ
	|	ТоварыПереданные.Номенклатура КАК Номенклатура,
	|	ТоварыПереданные.Характеристика КАК Характеристика,
	|	ТоварыПереданные.КоличествоОстаток КАК КоличествоУпаковокУчет
	|
	|ПОМЕСТИТЬ ТоварыПереданные
	|ИЗ
	|	РегистрНакопления.ТоварыПереданныеНаКомиссию.Остатки(&Граница,
	|		Организация = &Организация
	|		И Партнер = &Партнер
	|		И Соглашение = &Соглашение
	|		И (Номенклатура, Характеристика) В (
	|			ВЫБРАТЬ
	|				Номенклатура,
	|				Характеристика
	|			ИЗ
	|				Товары КАК Товары
	|			)
	|	) КАК ТоварыПереданные
	|;
	|///////////////////////////////////////////////////////////////////////////////	
	|ВЫБРАТЬ
	|	Товары.НомерСтроки КАК НомерСтроки,
	|	Товары.Номенклатура КАК Номенклатура,
	|	Товары.Характеристика КАК Характеристика,
	|	ЕСТЬNULL(Товары.Упаковка.Коэффициент, 1) КАК Коэффициент,
	|	ЕСТЬNULL(ТоварыПереданные.КоличествоУпаковокУчет, 0) КАК КоличествоУпаковокУчет
	|ИЗ
	|	Товары КАК Товары
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		ТоварыПереданные КАК ТоварыПереданные
	|	ПО
	|		Товары.Номенклатура = ТоварыПереданные.Номенклатура
	|		И Товары.Характеристика = ТоварыПереданные.Характеристика
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки
	|");
	
	Запрос.УстановитьПараметр("Организация", Объект.Организация);
	Запрос.УстановитьПараметр("Партнер", Объект.Партнер);
	Запрос.УстановитьПараметр("Соглашение", Объект.Соглашение);
	Запрос.УстановитьПараметр("НомерСтроки", НомерСтроки);
	
	ДатаЗаполнения = ?(ЗначениеЗаполнено(КонецПериода), КонецПериода, ТекущаяДата());
	Граница = Новый Граница(КонецДня(ДатаЗаполнения), ВидГраницы.Включая);
	Запрос.УстановитьПараметр("Граница", Граница);
	
	Товары = Объект.Товары.Выгрузить();
	Запрос.УстановитьПараметр("Товары", Товары);
	
	КэшированныеЗначения = Неопределено;
	ТабличнаяЧастьОбновлена = Ложь;
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		
		СтрокаТаблицы = Товары[Выборка.НомерСтроки - 1];
		КоличествоУпаковокУчет = ?(Выборка.Коэффициент <> 0, Окр(Выборка.КоличествоУпаковокУчет / Выборка.Коэффициент, 2, 1), 0);
		Если СтрокаТаблицы.КоличествоУпаковокУчет <> КоличествоУпаковокУчет Тогда
			
			СтрокаТаблицы.КоличествоУпаковокУчет = КоличествоУпаковокУчет;
			СтрокаТаблицы.КоличествоУпаковок = Выборка.КоличествоУпаковокУчет - СтрокаТаблицы.КоличествоУпаковокФакт;
			
			СтруктураДействий = Новый Структура;
			СтруктураДействий.Вставить("ПересчитатьКоличествоЕдиниц");
			СтруктураДействий.Вставить("ПересчитатьСуммуНДС", Новый Структура("ЦенаВключаетНДС", Объект.ЦенаВключаетНДС));
			СтруктураДействий.Вставить("ПересчитатьСумму");

			ОбработкаТабличнойЧастиСервер.ОбработатьСтрокуТЧ(СтрокаТаблицы, СтруктураДействий, КэшированныеЗначения);
			
			СтрокаТаблицы.СуммаСНДС = СтрокаТаблицы.Сумма + ?(Объект.ЦенаВключаетНДС, 0, СтрокаТаблицы.СуммаНДС);
			Если ЕстьСуммаПродажи Тогда
				СтрокаТаблицы.СуммаПродажи = СтрокаТаблицы.ЦенаПродажи * СтрокаТаблицы.КоличествоУпаковок;
				СтрокаТаблицы.СуммаПродажиНДС = СуммаПродажиНДС(СтрокаТаблицы.СуммаПродажи, СтрокаТаблицы.СтавкаНДС);
			КонецЕсли;
			
			ТабличнаяЧастьОбновлена = Истина;
		КонецЕсли;
		
	КонецЦикла;
	
	Если ТабличнаяЧастьОбновлена Тогда
		Объект.Товары.Загрузить(Товары);
		РассчитыватьВознаграждение = Истина;
	КонецЕсли;
	
КонецПроцедуры

// Процедура заполяет сумму с НДС в строках табличной части "Товары".
//
Процедура ЗаполнитьСуммуСНДС(Товары, ЦенаВключаетНДС) Экспорт
	
	Для Каждого СтрокаТаблицы Из Товары Цикл
		СтрокаТаблицы.СуммаСНДС = СтрокаТаблицы.Сумма
			+ ?(ЦенаВключаетНДС, 0, СтрокаТаблицы.СуммаНДС);
	КонецЦикла;
	
КонецПроцедуры

// Процедура рассчитывает комиссионное вознаграждение.
//
// Параметры:
//	Объект - ДанныеФормыСтруктура - Текущий документ
//	ПроцентНДС - Число - Процент НДС
//
Процедура РассчитатьСуммуНДСВознаграждения(Объект, ПроцентНДС) Экспорт
	
	Объект.СуммаНДСВознаграждения = Окр(Объект.СуммаВознаграждения * ПроцентНДС / (1 + ПроцентНДС), 2, РежимОкругления.Окр15как20);
	
КонецПроцедуры

// Процедура рассчитывает комиссионное вознаграждение.
//
Процедура РассчитатьСуммуВознаграждения(Объект) Экспорт
	
	Для Каждого СтрокаТоваров Из Объект.Товары Цикл
		
		Если Объект.СпособРасчетаВознаграждения = Перечисления.СпособыРасчетаКомиссионногоВознаграждения.ПроцентОтРазностиСуммыПродажиИСуммыКомитента Тогда
			СтрокаТоваров.СуммаВознаграждения = (СтрокаТоваров.СуммаПродажи - СтрокаТоваров.СуммаСНДС) * Объект.ПроцентВознаграждения / 100;
			
		ИначеЕсли Объект.СпособРасчетаВознаграждения = Перечисления.СпособыРасчетаКомиссионногоВознаграждения.ПроцентОтСуммыПродажи Тогда
			СтрокаТоваров.СуммаВознаграждения = СтрокаТоваров.СуммаПродажи * Объект.ПроцентВознаграждения / 100;
			
		Иначе
			СтрокаТоваров.СуммаВознаграждения = 0;
			
		КонецЕсли;
		
	КонецЦикла;
	
	Объект.СуммаВознаграждения = Объект.Товары.Итог("СуммаВознаграждения");
	
	ПроцентНДС = ЦенообразованиеКлиентСервер.ПолучитьСтавкуНДСЧислом(Объект.СтавкаНДСВознаграждения);
	РассчитатьСуммуНДСВознаграждения(Объект, ПроцентНДС);
	
КонецПроцедуры

// Процедура заполняет ставку НДС для комиссионного вознаграждения.
//
// Параметры:
//	Объект - ДанныеФормыСтруктура - Текущий документ
//	ПроцентНДС - Число - Процент НДС
//
Процедура ЗаполнитьСтавкуНДСкомиссионногоВознаграждения(Объект, ПроцентНДС) Экспорт
	
	НалогообложениеНДС = Справочники.Организации.НалогообложениеНДС(
		Объект.Организация,
		Неопределено, // Склад
		Объект.Дата
	);
	Если НалогообложениеНДС = Перечисления.ТипыНалогообложенияНДС.ПродажаОблагаетсяНДС Тогда
		Объект.СтавкаНДСВознаграждения = Справочники.Номенклатура.ЗначенияРеквизитовНоменклатуры(Объект.Услуга).СтавкаНДС;
	Иначе
		Объект.СтавкаНДСВознаграждения = Перечисления.СтавкиНДС.БезНДС;
	КонецЕсли;
	ПроцентНДС = ЦенообразованиеКлиентСервер.ПолучитьСтавкуНДСЧислом(Объект.СтавкаНДСВознаграждения);
	РассчитатьСуммуНДСВознаграждения(Объект, ПроцентНДС);
	
КонецПроцедуры

// Процедура заполняет сумму НДС комиссионного вознаграждения в табличной части документа.
//
Процедура ЗаполнитьСуммуНДСВознагражденияВТабличнойЧасти(Товары, Знач СуммаНДСВознаграждения) Экспорт
	
	ВсегоСуммаВознаграждения = Товары.Итог("СуммаВознаграждения");
	
	Для Каждого СтрокаТаблицы Из Товары Цикл
		
		СтрокаТаблицы.СуммаНДСВознаграждения = ?(ВсегоСуммаВознаграждения <> 0, Окр(СуммаНДСВознаграждения * СтрокаТаблицы.СуммаВознаграждения / ВсегоСуммаВознаграждения, 2, 1), 0);
		
		ВсегоСуммаВознаграждения = ВсегоСуммаВознаграждения - СтрокаТаблицы.СуммаВознаграждения;
		СуммаНДСВознаграждения = СуммаНДСВознаграждения - СтрокаТаблицы.СуммаНДСВознаграждения;
			
	КонецЦикла;
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

Процедура ДобавитьСтрокуПоТоварамКОформлениюОтчетовКомитентуЗаПериод(ТабличнаяЧасть, ДанныеСтроки, Количество, СтруктураДействий, КэшированныеЗначения)
	
	НоваяСтрока = ТабличнаяЧасть.Добавить();
	ЗаполнитьЗначенияСвойств(НоваяСтрока, ДанныеСтроки);
	
	НоваяСтрока.Количество         = Количество;
	НоваяСтрока.КоличествоУпаковок = Количество;
	
	Если ДанныеСтроки.Количество <> Количество Тогда
		НоваяСтрока.СуммаПродажи = ДанныеСтроки.СуммаПродажи / ДанныеСтроки.Количество * Количество;
	КонецЕсли;
	
	НоваяСтрока.ЦенаПродажи = ?(НоваяСтрока.Количество <> 0, НоваяСтрока.СуммаПродажи / НоваяСтрока.Количество, 0);
	
	ОбработкаТабличнойЧастиСервер.ОбработатьСтрокуТЧ(НоваяСтрока, СтруктураДействий, КэшированныеЗначения);
	
	Если ДанныеСтроки.ЕстьСуммаПродажиНДС Тогда
		НоваяСтрока.СуммаПродажиНДС = СуммаПродажиНДС(НоваяСтрока.СуммаПродажи, НоваяСтрока.СтавкаНДС);
	КонецЕсли;
	
КонецПроцедуры

Функция СуммаПродажиНДС(СуммаПродажи, СтавкаНДС)
	
	ТекущийПроцентНДС = ЦенообразованиеКлиентСервер.ПолучитьСтавкуНДСЧислом(СтавкаНДС);
	СуммаПродажиНДС = Окр(СуммаПродажи * ТекущийПроцентНДС / (1 + ТекущийПроцентНДС), 2, РежимОкругления.Окр15как20);
	
	Возврат СуммаПродажиНДС;
	
КонецФункции