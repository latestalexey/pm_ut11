///////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ФОРМИРОВАНИЯ ДВИЖЕНИЙ ПО УЧЕТУ МНОГООБОРОТНОЙ ТАРЫ

// Процедура формирования движений по регистру "Принятая возвратная тара".
//
Процедура ОтразитьПринятуюВозвратнуюТару(ДополнительныеСвойства, Движения, Отказ) Экспорт

	ТаблицаДвижений = ДополнительныеСвойства.ТаблицыДляДвижений.ТаблицаПринятаяВозвратнаяТара;
	
	Если Отказ ИЛИ ТаблицаДвижений.Количество() = 0 Тогда
	
		Возврат;
		
	КонецЕсли;
	
	ДвиженияРасчеты = Движения.ПринятаяВозвратнаяТара;
	ДвиженияРасчеты.Записывать = Истина;
	ДвиженияРасчеты.Загрузить(ТаблицаДвижений);
	
КонецПроцедуры

// Процедура формирования движений по регистру "Переданная возвратная тара".
//
Процедура ОтразитьПереданнуюВозвратнуюТару(ДополнительныеСвойства, Движения, Отказ) Экспорт

	ТаблицаДвижений = ДополнительныеСвойства.ТаблицыДляДвижений.ТаблицаПереданнаяВозвратнаяТара;
	
	Если Отказ ИЛИ ТаблицаДвижений.Количество() = 0 Тогда
	
		Возврат;
		
	КонецЕсли;
	
	ДвиженияРасчеты = Движения.ПереданнаяВозвратнаяТара;
	ДвиженияРасчеты.Записывать = Истина;
	ДвиженияРасчеты.Загрузить(ТаблицаДвижений);
	
КонецПроцедуры

// Заполняет в документе подобранную обработкой многооборотную тару
//
// Параметры:
// Объект - ДокументОбъект - Документ, в котором необходимо заполнить многооборотную тару
// АдресТарыВХранилище - Строка - Адрес таблицы многооборотной тары во временном хранилище
// ИмяТаблицы - Строка - Имя таблицы документа, в которой необходимо заполнить многообротную тару
// ИменаКолонок - Строка - Имена колонок таблицы, по которым необходимо осуществлять поиск строк
// Номенклатура, Характеристика, Склад, Дата (Имена могут меняться в зависимости от документа)
// СтруктураДействийИзмененныеСтроки - Структура - Действия с измененными строками
// СтруктураДействийДобавленныеСтроки - Структура - Действия с добавленными строками
//
Процедура ЗаполнитьМногооборотнуюТаруИзХранилища(Объект,
	                                             Знач АдресТарыВХранилище,
	                                             Знач ИмяТаблицы,
	                                             Знач ИменаКолонок,
	                                             Знач СтруктураДействийИзмененныеСтроки,
	                                             Знач СтруктураДействийДобавленныеСтроки) Экспорт
	
	Объект.СостояниеЗаполненияМногооборотнойТары = Перечисления.СостоянияЗаполненияМногооборотнойТары.Заполнена;
	
	ТараИзХранилища = ПолучитьИзВременногоХранилища(АдресТарыВХранилище);
	СтруктураПоиска = Новый Структура(ИменаКолонок);
	МассивУдаляемыхСтрок = Новый Массив();
	МассивКолонок = СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивПодстрок(ИменаКолонок, ",");
	
	Если МассивКолонок.Количество() < 2 Тогда
		ВызватьИсключение НСтр("ru = 'Неверно задан параметр ИменаКолонок функции'");
	КонецЕсли;
	
	Для Каждого СтрокаТоваров Из ТараИзХранилища Цикл
		
		СтруктураПоиска[МассивКолонок[0]] = СтрокаТоваров.Номенклатура;
		СтруктураПоиска[МассивКолонок[1]] = СтрокаТоваров.Характеристика;
		Если МассивКолонок.Количество() = 4 Тогда
			Если ЗначениеЗаполнено(МассивКолонок[3]) Тогда
				СтруктураПоиска[МассивКолонок[3]] = СтрокаТоваров.Дата;
			КонецЕсли;
			Если ЗначениеЗаполнено(МассивКолонок[2]) Тогда
				СтруктураПоиска[МассивКолонок[2]] = СтрокаТоваров.Склад;
			КонецЕсли;
		ИначеЕсли МассивКолонок.Количество() = 3 Тогда
			Если ЗначениеЗаполнено(МассивКолонок[2]) Тогда
				СтруктураПоиска[МассивКолонок[2]] = СтрокаТоваров.Склад;
			КонецЕсли;
		КонецЕсли;
		
		МассивСтрокТЧТовары = Объект[ИмяТаблицы].НайтиСтроки(СтруктураПоиска);
		
		Если СтрокаТоваров.Количество = 0 Тогда
			
			Для Каждого ТекЭлемент Из МассивСтрокТЧТовары Цикл
				МассивУдаляемыхСтрок.Добавить(ТекЭлемент);
			КонецЦикла;
			
		ИначеЕсли МассивСтрокТЧТовары.Количество() = 0 Тогда
			
			СтрокаТЧТовары = Объект[ИмяТаблицы].Добавить();
			ЗаполнитьЗначенияСвойств(СтрокаТЧТовары, СтрокаТоваров);
			Если МассивКолонок.Количество() = 4 Тогда
				Если ЗначениеЗаполнено(МассивКолонок[3]) Тогда
					СтрокаТЧТовары[МассивКолонок[3]] = СтрокаТоваров.Дата;
				КонецЕсли;
				Если ЗначениеЗаполнено(МассивКолонок[2]) Тогда
					СтрокаТЧТовары[МассивКолонок[2]] = СтрокаТоваров.Склад;
				КонецЕсли;
			ИначеЕсли МассивКолонок.Количество() = 3 Тогда
				Если ЗначениеЗаполнено(МассивКолонок[2]) Тогда
					СтрокаТЧТовары[МассивКолонок[2]] = СтрокаТоваров.Склад;
				КонецЕсли;
			КонецЕсли;
			
			КэшированныеЗначения = ОбработкаТабличнойЧастиКлиентСервер.ПолучитьСтруктуруКэшируемыеЗначения();
			ОбработкаТабличнойЧастиСервер.ОбработатьСтрокуТЧ(СтрокаТЧТовары, СтруктураДействийДобавленныеСтроки, КэшированныеЗначения);
			
		ИначеЕсли МассивСтрокТЧТовары.Количество() > 0 Тогда
			
			СтрокаТЧТовары = МассивСтрокТЧТовары[0];
			
			Если СтрокаТЧТовары.Количество <> СтрокаТоваров.Количество Тогда
			
				ЗаполнитьЗначенияСвойств(СтрокаТЧТовары, СтрокаТоваров);
				Если МассивКолонок.Количество() = 4 Тогда
					Если ЗначениеЗаполнено(МассивКолонок[3]) Тогда
						СтрокаТЧТовары[МассивКолонок[3]] = СтрокаТоваров.Дата;
					КонецЕсли;
					Если ЗначениеЗаполнено(МассивКолонок[2]) Тогда
						СтрокаТЧТовары[МассивКолонок[2]] = СтрокаТоваров.Склад;
					КонецЕсли;
				ИначеЕсли МассивКолонок.Количество() = 3 Тогда
					Если ЗначениеЗаполнено(МассивКолонок[2]) Тогда
						СтрокаТЧТовары[МассивКолонок[2]] = СтрокаТоваров.Склад;
					КонецЕсли;
				КонецЕсли;
					
				КэшированныеЗначения = ОбработкаТабличнойЧастиКлиентСервер.ПолучитьСтруктуруКэшируемыеЗначения();
				ОбработкаТабличнойЧастиСервер.ОбработатьСтрокуТЧ(СтрокаТЧТовары, СтруктураДействийИзмененныеСтроки, КэшированныеЗначения);
				
			КонецЕсли;
			
			Если МассивСтрокТЧТовары.Количество() > 1 Тогда
				Для Счетчик = 2 По МассивСтрокТЧТовары.Количество() Цикл
					МассивУдаляемыхСтрок.Добавить(МассивСтрокТЧТовары[Счетчик-1]);
				КонецЦикла;
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЦикла;
	
	Для Каждого ТекЭлемент Из МассивУдаляемыхСтрок Цикл
		Объект[ИмяТаблицы].Удалить(ТекЭлемент);
	КонецЦикла;

КонецПроцедуры

// Рассчитывает дату возврата многооборотной тары по условиям соглашения
//
// Параметры:
// ДатаДокумента - Дата - Дата документа
// СрокВозвратаМногооборотнойТары - Число - Срок возврата многооборотной тары в днях
// РассчитыватьДатуВозвратаТарыПоКалендарю - Булево - Определяет вариант расчета даты: по всем дня или по основному календарю предприятия
//
// Возвращаемое значение:
// Дата
//
Функция РассчитатьДатуВозвратаМногооборотнойТары(Знач ДатаДокумента,
	                                             Знач СрокВозвратаМногооборотнойТары,
	                                             Знач РассчитыватьДатуВозвратаТарыПоКалендарю) Экспорт
	
	ОдинДень = 86400;
	КалендарьПредприятия = Константы.ОсновнойКалендарьПредприятия.Получить();
	
	Если Не ЗначениеЗаполнено(ДатаДокумента) Тогда
		ДатаДокумента = ТекущаяДата();
	КонецЕсли;
	
	Если РассчитыватьДатуВозвратаТарыПоКалендарю Тогда
		ДатаВозвратаМногооборотнойТары = КалендарныеГрафики.ПолучитьДатуПоКалендарю(
			КалендарьПредприятия,
			ДатаДокумента,
			СрокВозвратаМногооборотнойТары);
	Иначе
		ДатаВозвратаМногооборотнойТары = ДатаДокумента + ОдинДень * СрокВозвратаМногооборотнойТары;
	КонецЕсли;
	
	Возврат НачалоДня(ДатаВозвратаМногооборотнойТары);
	
КонецФункции

// Сбрасывает состояние заполнения многооборотной тары в документе после изменения табличной части
//
// Параметры:
// СостояниеЗаполненияМногооборотнойТары - ПеречислениеСсылка.СостоянияЗаполненияМногооборотнойТары
//
Процедура ОбновитьСостояниеЗаполненияМногооборотнойТары(СостояниеЗаполненияМногооборотнойТары) Экспорт
	
	Если СостояниеЗаполненияМногооборотнойТары = Перечисления.СостоянияЗаполненияМногооборотнойТары.Заполнена Тогда
		СостояниеЗаполненияМногооборотнойТары = Перечисления.СостоянияЗаполненияМногооборотнойТары.ПредлагатьЗаполнить;
	КонецЕсли;
	
КонецПроцедуры

// Обновляет связанные с возвратной тарой колонки таблицы
//
// Параметры:
// Товары - ДанныеФормыКоллекция - Таблица документа, в которой необходимо обновить колонки
// ВернутьМногооборотнуюТару - Булево - если Истина, то тара возвратная
// СтруктураДополнительныхДействий - Структура - Дополнительные действия, которые необходимо выполнить
//
Процедура ОбновитьПризнакБезВозвратнойТары(Товары, ВернутьМногооборотнуюТару, СтруктураДополнительныхДействий = Неопределено) Экспорт
	
	Если СтруктураДополнительныхДействий = Неопределено Тогда
		СтруктураДействий = Новый Структура;
	Иначе
		СтруктураДействий = ОбщегоНазначенияКлиентСервер.СкопироватьСтруктуру(СтруктураДополнительныхДействий);
	КонецЕсли;
	СтруктураДействий.Вставить("ЗаполнитьПризнакБезВозвратнойТары", ВернутьМногооборотнуюТару);
	
	Для Каждого ТекущаяСтрока Из Товары Цикл
		ОбработкаТабличнойЧастиСервер.ОбработатьСтрокуТЧ(ТекущаяСтрока, СтруктураДействий, Неопределено);
	КонецЦикла;
	
КонецПроцедуры
