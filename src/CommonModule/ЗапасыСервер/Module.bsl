////////////////////////////////////////////////////////////////////////////////
// ПРОГРАММНЫЙ ИНТЕРФЕЙС

// Процедура проверяет указание номеров ГТД в табличной части "Товары".
//
// Параметры:
//	ДокументОбъект - Текущий документ
//	Товары - ДанныеФормыКоллекция - Табличная часть товаров
//	Отказ - Булево - Признак отказа от проведения документа
//
Процедура ПроверитьЗаполнениеНомеровГТД(ДокументОбъект, Отказ, ИмяТЧ = "Товары") Экспорт
	
	МетаданныеОбъекта = ДокументОбъект.Метаданные();
	ПредставлениеТЧ = МетаданныеОбъекта.ТабличныеЧасти[ИмяТЧ].Синоним;
	
	Запрос = Новый Запрос("
	|ВЫБРАТЬ
	|	ИсходнаяТаблица.НомерСтроки КАК НомерСтроки,
	|	ИсходнаяТаблица.Номенклатура КАК Номенклатура,
	|	ИсходнаяТаблица.НомерГТД КАК НомерГТД
	|
	|ПОМЕСТИТЬ ТаблицаТовары
	|ИЗ
	|	&ТаблицаТовары КАК ИсходнаяТаблица
	|;
	|/////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаТовары.НомерСтроки КАК НомерСтроки
	|ИЗ
	|	ТаблицаТовары КАК ТаблицаТовары
	|ГДЕ
	|	ТаблицаТовары.НомерГТД = ЗНАЧЕНИЕ(Справочник.НомераГТД.ПустаяСсылка)
	|	И ТаблицаТовары.Номенклатура.ТипНоменклатуры В (ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Товар), ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара))
	|	И ТаблицаТовары.Номенклатура.ВестиУчетПоГТД
	|");
	ТаблицаТовары = ДокументОбъект[ИмяТЧ].Выгрузить(, "НомерСтроки, Номенклатура, НомерГТД");
	Запрос.УстановитьПараметр("ТаблицаТовары", ТаблицаТовары);
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		
		Текст = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			НСтр("ru = 'Не заполнена колонка ""Номер ГТД"" в строке %1 списка ""%2""'"),
			Выборка.НомерСтроки,
			ПредставлениеТЧ
		);
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
			Текст,
			ДокументОбъект,
			ИмяТЧ + "[" + (Выборка.НомерСтроки - 1) + "].НомерГТД",
			,
			Отказ
		);
		
	КонецЦикла;
	
КонецПроцедуры

// Процедура помещает табличные части "Товары" и "Виды запасов" во временное хранилище.
//
Процедура ПоместитьТоварыИВидыЗапасовВХранилище(
	Знач Товары,
	Знач ВидыЗапасов,
	УникальныйИдентификатор, 
	АдресТоваровВХранилище, 
	АдресВидовЗапасовВХранилище
	) Экспорт
	
	КолонкиТаблицаТоваров = "НомерСтроки, Номенклатура, Характеристика, Количество";
	КолонкиТаблицаВидовЗапасов = "Номенклатура, Характеристика, ВидЗапасов, НомерГТД, Количество";
	
	Если Товары.Количество() > 0 Тогда
		
		Если Товары[0].Свойство("Сумма") Тогда
			КолонкиТаблицаТоваров = КолонкиТаблицаТоваров + ",Сумма";
		КонецЕсли;
		Если Товары[0].Свойство("СуммаНДС") Тогда
			КолонкиТаблицаТоваров = КолонкиТаблицаТоваров + ",СуммаНДС,СтавкаНДС";
		КонецЕсли;
		Если Товары[0].Свойство("СуммаПродажи") Тогда
			КолонкиТаблицаТоваров = КолонкиТаблицаТоваров + ",СуммаПродажи";
		КонецЕсли;
		Если Товары[0].Свойство("Склад") Тогда
			КолонкиТаблицаТоваров = КолонкиТаблицаТоваров + ",Склад";
		КонецЕсли;
		Если Товары[0].Свойство("ДокументРеализации") Тогда
			КолонкиТаблицаТоваров = КолонкиТаблицаТоваров + ",ДокументРеализации";
		КонецЕсли;
		
	КонецЕсли;
	
	Если ВидыЗапасов.Количество() > 0 Тогда
		
		Если ВидыЗапасов[0].Свойство("СуммаСНДС") Тогда
			КолонкиТаблицаВидовЗапасов = КолонкиТаблицаВидовЗапасов + ",СуммаСНДС";
		КонецЕсли;
		Если ВидыЗапасов[0].Свойство("СуммаНДС") Тогда
			КолонкиТаблицаВидовЗапасов = КолонкиТаблицаВидовЗапасов + ",СуммаНДС,СтавкаНДС";
		КонецЕсли;
		Если ВидыЗапасов[0].Свойство("Склад") Тогда
			КолонкиТаблицаВидовЗапасов = КолонкиТаблицаВидовЗапасов + ",Склад";
		КонецЕсли;
		Если ВидыЗапасов[0].Свойство("СкладОтгрузки") Тогда
			КолонкиТаблицаВидовЗапасов = КолонкиТаблицаВидовЗапасов + ",СкладОтгрузки";
		КонецЕсли;
		Если ВидыЗапасов[0].Свойство("ДокументРеализации") Тогда
			КолонкиТаблицаВидовЗапасов = КолонкиТаблицаВидовЗапасов + ",ДокументРеализации";
		КонецЕсли;
		
	КонецЕсли;
	
	ТаблицаТоваров = Товары.Выгрузить(,КолонкиТаблицаТоваров);
	ТаблицаВидовЗапасов = ВидыЗапасов.Выгрузить(,КолонкиТаблицаВидовЗапасов);
	
	АдресТоваровВХранилище = ПоместитьВоВременноеХранилище(
		ТаблицаТоваров,
		УникальныйИдентификатор
	);
	АдресВидовЗапасовВХранилище = ПоместитьВоВременноеХранилище(
		ТаблицаВидовЗапасов,
		УникальныйИдентификатор
	);
	
КонецПроцедуры // ПоместитьТоварыИВидыЗапасовВХранилище()

// Процедура устанавливает видимость выбора типов предназначений видов запасов в форме.
//
// Параметры:
//	Форма - УправляемаяФорма - Текущая форма
//	Поле - ПолеФормы - Поле формы для выбора предназначения
//
Процедура УстановитьВидимостьТиповПредназначенийВидовЗапасов(Форма, Поле) Экспорт
	
	МассивПредназначений = Новый Массив;
	
	Если Не Форма.ПолучитьФункциональнуюОпциюФормы("ФормироватьВидыЗапасовПоПодразделениямМенеджерам") Тогда
		МассивПредназначений.Добавить(Перечисления.ТипыПредназначенияВидовЗапасов.ПредназначенДляМенеджера);
		МассивПредназначений.Добавить(Перечисления.ТипыПредназначенияВидовЗапасов.ПредназначенДляПодразделения);
	КонецЕсли;
	
	Если Не Форма.ПолучитьФункциональнуюОпциюФормы("ФормироватьВидыЗапасовПоСделкам") Тогда
		МассивПредназначений.Добавить(Перечисления.ТипыПредназначенияВидовЗапасов.ПредназначенДляСделки);
	КонецЕсли;	
		
	Для Каждого Предназначение Из МассивПредназначений Цикл
	
		ЭлементСписка = Поле.СписокВыбора.НайтиПоЗначению(Предназначение);
		Если ЭлементСписка <> Неопределено Тогда
			Поле.СписокВыбора.Удалить(ЭлементСписка);
		КонецЕсли;
	
	КонецЦикла;
	
КонецПроцедуры // УстановитьВидимостьТиповПредназначенийВидовЗапасов()

////////////////////////////////////////////////////////////////////////////////
// Процедуры формирования таблицы доступных видов запасов.

// Процедура формирует временную таблицу доступных видов запасов.
//
// Параметры:
//	Организация - СправочникСсылка.Организации - Организация документа
//	Сделки - массив элементов СправочникСсылка.Сделка или одна ссылка СправочникСсылка.Сделка - Сделка/сделки документа
//	Менеджер - СправочникСсылка.Пользователи - Менеджер документа
//	Подразделение - СправочникСсылка.СтруктураПредприятия - Подразделение документа
//	МенеджерВременныхТаблиц - Менеджер временных таблиц
//  ДоступнаПередачаНаКомиссию - Булево - Разрешается побирать запасы организаций со способом между организациями "передача на комиссию"
//
Процедура ВидыЗапасовНеОбособленныеИОбособленные(Организация, Сделки, Менеджер, Подразделение, МенеджерВременныхТаблиц, ДоступнаПередачаНаКомиссию = Ложь) Экспорт
	
	Запрос = Новый Запрос("
	|// Собственные виды запасов
	|ВЫБРАТЬ
	|	ВидыЗапасов.Ссылка КАК ВидЗапасов,
	|	ВидыЗапасов.Ссылка КАК ВидЗапасовПродавца,
	|	ВидыЗапасов.Предназначение КАК Предназначение,
	|	ВидыЗапасов.Сделка КАК Сделка,
	|	ВидыЗапасов.Менеджер КАК Менеджер,
	|	ВидыЗапасов.Подразделение КАК Подразделение,
	|	ВидыЗапасов.Назначение КАК Назначение
	|
	|ПОМЕСТИТЬ ВидыЗапасов
	|ИЗ
	|	Справочник.ВидыЗапасов КАК ВидыЗапасов
	|ГДЕ
	|	Не ВидыЗапасов.РеализацияЗапасовДругойОрганизации
	|	И ВидыЗапасов.Организация = &Организация
	|	И Не ВидыЗапасов.ПометкаУдаления
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|// Виды запасов интеркомпани
	|ВЫБРАТЬ
	|	ВидыЗапасов.Ссылка КАК ВидЗапасов,
	|	ЕСТЬNULL(ВидыЗапасовПродавца.Ссылка, Неопределено) КАК ВидЗапасовПродавца,
	|	ВидыЗапасов.Предназначение КАК Предназначение,
	|	ВидыЗапасов.Сделка КАК Сделка,
	|	ВидыЗапасов.Менеджер КАК Менеджер,
	|	ВидыЗапасов.Подразделение КАК Подразделение,
	|	ВидыЗапасов.Назначение КАК Назначение
	|ИЗ
	|	Справочник.ВидыЗапасов КАК ВидыЗапасов
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		РегистрСведений.НастройкаПередачиТоваровМеждуОрганизациями КАК Настройка
	|	ПО
	|		ВидыЗапасов.Организация = Настройка.ОрганизацияВладелец
	|		И ВидыЗапасов.ТипЗапасов = Настройка.ТипЗапасов
	|		И Настройка.СпособПередачиТоваров <> ЗНАЧЕНИЕ(Перечисление.СпособыПередачиТоваров.НеПередается)
	|		И Настройка.ОрганизацияПродавец = &Организация
	|		
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		Справочник.ВидыЗапасов КАК ВидыЗапасовПродавца
	|	ПО
	|		ВидыЗапасов.Ссылка = ВидыЗапасовПродавца.ВидЗапасовВладельца
	|		И Настройка.ОрганизацияПродавец = ВидыЗапасовПродавца.Организация
	|		И Настройка.СпособПередачиТоваров = ВидыЗапасовПродавца.СпособПередачиТоваров
	|		И Настройка.Валюта = ВидыЗапасовПродавца.Валюта
	|ГДЕ
	|	&ИспользоватьПередачиТоваровМеждуОрганизациями
	|	И Не ВидыЗапасов.РеализацияЗапасовДругойОрганизации
	|	И ВидыЗапасов.Организация <> &Организация
	|	И Не ВидыЗапасов.ПометкаУдаления
	|	// при передаче на комиссию использование на собственные нужны  не поддерживается
	|	И (Настройка.СпособПередачиТоваров <> ЗНАЧЕНИЕ(Перечисление.СпособыПередачиТоваров.ПередачаНаКомиссию)
	|		ИЛИ &ДоступнаПередачаНаКомиссию)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Предназначение
	|;
	|/////////////////////////////////////////////////////////////////////////////
	|
	|// Не обособленные виды запасов
	|ВЫБРАТЬ
	|	ВидыЗапасов.ВидЗапасов КАК ВидЗапасов,
	|	ВидыЗапасов.ВидЗапасовПродавца КАК ВидЗапасовПродавца
	|
	|ПОМЕСТИТЬ ДоступныеВидыЗапасов
	|ИЗ
	|	ВидыЗапасов КАК ВидыЗапасов
	|ГДЕ
	|	ВидыЗапасов.Предназначение = ЗНАЧЕНИЕ(Перечисление.ТипыПредназначенияВидовЗапасов.ПредназначениеНеОграничено)
	|	ИЛИ ВидыЗапасов.Предназначение = ЗНАЧЕНИЕ(Перечисление.ТипыПредназначенияВидовЗапасов.ПустаяСсылка)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|// Обособленные виды запасов по сделке
	|ВЫБРАТЬ
	|	ВидыЗапасов.ВидЗапасов КАК ВидЗапасов,
	|	ВидыЗапасов.ВидЗапасовПродавца КАК ВидЗапасовПродавца
	|ИЗ
	|	ВидыЗапасов КАК ВидыЗапасов
	|ГДЕ
	|	ВидыЗапасов.Предназначение = ЗНАЧЕНИЕ(Перечисление.ТипыПредназначенияВидовЗапасов.ПредназначенДляСделки)
	|	И ВидыЗапасов.Сделка В (&Сделки)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|// Обособленные виды запасов по менеджеру
	|ВЫБРАТЬ
	|	ВидыЗапасов.ВидЗапасов КАК ВидЗапасов,
	|	ВидыЗапасов.ВидЗапасовПродавца КАК ВидЗапасовПродавца
	|ИЗ
	|	ВидыЗапасов КАК ВидыЗапасов
	|ГДЕ
	|	ВидыЗапасов.Предназначение = ЗНАЧЕНИЕ(Перечисление.ТипыПредназначенияВидовЗапасов.ПредназначенДляМенеджера)
	|	И ВидыЗапасов.Менеджер = &Менеджер
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|// Обособленные виды запасов по подразделению
	|ВЫБРАТЬ
	|	ВидыЗапасов.ВидЗапасов КАК ВидЗапасов,
	|	ВидыЗапасов.ВидЗапасовПродавца КАК ВидЗапасовПродавца
	|ИЗ
	|	ВидыЗапасов КАК ВидыЗапасов
	|ГДЕ
	|	ВидыЗапасов.Предназначение = ЗНАЧЕНИЕ(Перечисление.ТипыПредназначенияВидовЗапасов.ПредназначенДляПодразделения)
	|	И ВидыЗапасов.Подразделение = &Подразделение
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|// Обособленные виды запасов по заказам
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ВидыЗапасов.ВидЗапасов КАК ВидЗапасов,
	|	ВидыЗапасов.ВидЗапасовПродавца КАК ВидЗапасовПродавца
	|ИЗ
	|	ВидыЗапасов КАК ВидыЗапасов
	|ГДЕ
	|	ВидыЗапасов.Предназначение = ЗНАЧЕНИЕ(Перечисление.ТипыПредназначенияВидовЗапасов.ПредназначенДляЗаказа)
	|	И ВидыЗапасов.Назначение В (
	|		ВЫБРАТЬ
	|			ТаблицаТоваров.Назначение
	|		ИЗ
	|			ТаблицаТоваров КАК ТаблицаТоваров
	|	)
	|");
	Запрос.УстановитьПараметр("Организация", Организация);
	Запрос.УстановитьПараметр("Сделки", Массив(Сделки));
	Запрос.УстановитьПараметр("Менеджер", Менеджер);
	Запрос.УстановитьПараметр("Подразделение", Подразделение);
	Запрос.УстановитьПараметр("ИспользоватьПередачиТоваровМеждуОрганизациями", ПолучитьФункциональнуюОпцию("ИспользоватьПередачиТоваровМеждуОрганизациями"));
	Запрос.УстановитьПараметр("ДоступнаПередачаНаКомиссию", ДоступнаПередачаНаКомиссию);
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	
	Запрос.Выполнить();
	
КонецПроцедуры

// Процедура формирует временную таблицу доступных видов запасов.
//
// Параметры:
//	Организация - СправочникСсылка.Организации - Организация документа
//	Склад - СправочникСсылка.Склады - Склад документа
//	Дата - Дата документа
//	Сделка - СправочникСсылка.Сделка - Сделка документа
//	Менеджер - СправочникСсылка.Пользователи - Менеджер документа
//	Подразделение - СправочникСсылка.СтруктураПредприятия - Подразделение документа
//	МенеджерВременныхТаблиц - Менеджер временных таблиц
//
Процедура ВидыЗапасовПоНалогообложению(Организация, НалогообложениеНДС, Дата, МассивСделок, Менеджер, Подразделение, МенеджерВременныхТаблиц) Экспорт
	
	Запрос = Новый Запрос("
	|ВЫБРАТЬ
	|	Налогообложение.Организация КАК Организация,
	|	ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаНеОблагаетсяНДС) КАК НалогообложениеНДС
	|	
	|ПОМЕСТИТЬ Налогообложение
	|ИЗ
	|	РегистрСведений.СистемыНалогообложенияОрганизаций.СрезПоследних(&Дата,
	|		&ИспользоватьПередачиТоваровМеждуОрганизациями
	|	) КАК Налогообложение
	|ГДЕ
	|	Налогообложение.СистемаНалогообложения = ЗНАЧЕНИЕ(Перечисление.СистемыНалогообложения.Упрощенная)
	|;
	|///////////////////////////////////////////////////////////////////////////////
	|
	|// Собственные виды запасов
	|ВЫБРАТЬ
	|	ВидыЗапасов.Ссылка КАК ВидЗапасов,
	|	ВидыЗапасов.Ссылка КАК ВидЗапасовПродавца,
	|
	|	ВидыЗапасов.Предназначение КАК Предназначение,
	|	ВидыЗапасов.Сделка КАК Сделка,
	|	ВидыЗапасов.Менеджер КАК Менеджер,
	|	ВидыЗапасов.Подразделение КАК Подразделение,
	|	ВидыЗапасов.Назначение КАК Назначение,
	|
	|	ВидыЗапасов.ТипЗапасов КАК ТипЗапасов,
	|	ВидыЗапасов.НалогообложениеНДС КАК НалогообложениеНДС
	|
	|ПОМЕСТИТЬ ВозможныеВидыЗапасов
	|ИЗ
	|	Справочник.ВидыЗапасов КАК ВидыЗапасов
	|ГДЕ
	|	Не ВидыЗапасов.РеализацияЗапасовДругойОрганизации
	|	И ВидыЗапасов.Организация = &Организация
	|	И Не ВидыЗапасов.ПометкаУдаления
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|// Виды запасов интеркампани
	|ВЫБРАТЬ
	|	ВидыЗапасов.Ссылка КАК ВидЗапасов,
	|	ЕСТЬNULL(ВидыЗапасовПродавца.Ссылка, Неопределено) КАК ВидЗапасовПродавца,
	|
	|	ВидыЗапасов.Предназначение КАК Предназначение,
	|	ВидыЗапасов.Сделка КАК Сделка,
	|	ВидыЗапасов.Менеджер КАК Менеджер,
	|	ВидыЗапасов.Подразделение КАК Подразделение,
	|	ВидыЗапасов.Назначение КАК Назначение,
	|	
	|	ВЫБОР КОГДА Настройка.СпособПередачиТоваров = ЗНАЧЕНИЕ(Перечисление.СпособыПередачиТоваров.Продажа) ТОГДА
	|		ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.Товар)
	|	КОГДА Настройка.СпособПередачиТоваров = ЗНАЧЕНИЕ(Перечисление.СпособыПередачиТоваров.ПередачаНаКомиссию) ТОГДА
	|		ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.КомиссионныйТовар)
	|	ИНАЧЕ
	|		Неопределено
	|	КОНЕЦ КАК ТипЗапасов,
	|	
	|	ВЫБОР КОГДА Настройка.СпособПередачиТоваров = ЗНАЧЕНИЕ(Перечисление.СпособыПередачиТоваров.ПередачаНаКомиссию) ТОГДА
	|		ВЫБОР КОГДА ВидыЗапасов.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.КомиссионныйТовар) ТОГДА
	|			ВидыЗапасов.НалогообложениеНДС
	|		ИНАЧЕ
	|			ЕСТЬNULL(Налогообложение.НалогообложениеНДС, ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаОблагаетсяНДС))
	|		КОНЕЦ
	|	ИНАЧЕ
	|		Неопределено
	|	КОНЕЦ КАК НалогообложениеНДС
	|ИЗ
	|	Справочник.ВидыЗапасов КАК ВидыЗапасов
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		РегистрСведений.НастройкаПередачиТоваровМеждуОрганизациями КАК Настройка
	|	ПО
	|		ВидыЗапасов.Организация = Настройка.ОрганизацияВладелец
	|		И ВидыЗапасов.ТипЗапасов = Настройка.ТипЗапасов
	|		И Настройка.СпособПередачиТоваров <> ЗНАЧЕНИЕ(Перечисление.СпособыПередачиТоваров.НеПередается)
	|		И Настройка.ОрганизацияПродавец = &Организация
	|		
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		Налогообложение КАК Налогообложение
	|	ПО
	|		Настройка.ОрганизацияВладелец = Налогообложение.Организация
	|		
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		Справочник.ВидыЗапасов КАК ВидыЗапасовПродавца
	|	ПО
	|		ВидыЗапасов.Ссылка = ВидыЗапасовПродавца.ВидЗапасовВладельца
	|		И Настройка.ОрганизацияПродавец = ВидыЗапасовПродавца.Организация
	|		И Настройка.СпособПередачиТоваров = ВидыЗапасовПродавца.СпособПередачиТоваров
	|		И Настройка.Валюта = ВидыЗапасовПродавца.Валюта
	|		И ВидыЗапасовПродавца.НалогообложениеНДС = &ПередачаПодДеятельность
	|ГДЕ
	|	&ИспользоватьПередачиТоваровМеждуОрганизациями
	|	И Не ВидыЗапасов.РеализацияЗапасовДругойОрганизации
	|	И ВидыЗапасов.Организация <> &Организация
	|	И Не ВидыЗапасов.ПометкаУдаления
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Предназначение
	|;
	|/////////////////////////////////////////////////////////////////////////////
	|
	|ВЫБРАТЬ // Собственные товары
	|	ВозможныеВидыЗапасов.ВидЗапасов КАК ВидЗапасов,
	|	ВозможныеВидыЗапасов.ВидЗапасовПродавца КАК ВидЗапасовПродавца,
	|
	|	ВозможныеВидыЗапасов.Предназначение КАК Предназначение,
	|	ВозможныеВидыЗапасов.Сделка КАК Сделка,
	|	ВозможныеВидыЗапасов.Менеджер КАК Менеджер,
	|	ВозможныеВидыЗапасов.Подразделение КАК Подразделение,
	|	ВозможныеВидыЗапасов.Назначение КАК Назначение
	|
	|ПОМЕСТИТЬ ВидыЗапасов
	|ИЗ
	|	ВозможныеВидыЗапасов КАК ВозможныеВидыЗапасов
	|ГДЕ
	|	ВозможныеВидыЗапасов.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.Товар)
	|	И Не &ТолькоКомиссионныйТовар
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ // Комиссионные товары
	|	ВозможныеВидыЗапасов.ВидЗапасов КАК ВидЗапасов,
	|	ВозможныеВидыЗапасов.ВидЗапасовПродавца КАК ВидЗапасовПродавца,
	|
	|	ВозможныеВидыЗапасов.Предназначение КАК Предназначение,
	|	ВозможныеВидыЗапасов.Сделка КАК Сделка,
	|	ВозможныеВидыЗапасов.Менеджер КАК Менеджер,
	|	ВозможныеВидыЗапасов.Подразделение КАК Подразделение,
	|	ВозможныеВидыЗапасов.Назначение КАК Назначение
	|ИЗ
	|	ВозможныеВидыЗапасов КАК ВозможныеВидыЗапасов
	|ГДЕ
	|	ВозможныеВидыЗапасов.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.КомиссионныйТовар)
	|	И (&НалогообложениеНДС = Неопределено
	|		ИЛИ ВозможныеВидыЗапасов.НалогообложениеНДС = &НалогообложениеНДС
	|		)
	|;
	|/////////////////////////////////////////////////////////////////////////////
	|
	|// Не обособленные виды запасов
	|ВЫБРАТЬ
	|	ВидыЗапасов.ВидЗапасов КАК ВидЗапасов,
	|	ВидыЗапасов.ВидЗапасовПродавца КАК ВидЗапасовПродавца
	|
	|ПОМЕСТИТЬ ДоступныеВидыЗапасов
	|ИЗ
	|	ВидыЗапасов КАК ВидыЗапасов
	|ГДЕ
	|	ВидыЗапасов.Предназначение = ЗНАЧЕНИЕ(Перечисление.ТипыПредназначенияВидовЗапасов.ПредназначениеНеОграничено)
	|	ИЛИ ВидыЗапасов.Предназначение = ЗНАЧЕНИЕ(Перечисление.ТипыПредназначенияВидовЗапасов.ПустаяСсылка)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|// Обособленные виды запасов по сделке
	|ВЫБРАТЬ
	|	ВидыЗапасов.ВидЗапасов КАК ВидЗапасов,
	|	ВидыЗапасов.ВидЗапасовПродавца КАК ВидЗапасовПродавца
	|ИЗ
	|	ВидыЗапасов КАК ВидыЗапасов
	|ГДЕ
	|	ВидыЗапасов.Предназначение = ЗНАЧЕНИЕ(Перечисление.ТипыПредназначенияВидовЗапасов.ПредназначенДляСделки)
	|	И ВидыЗапасов.Сделка В (&МассивСделок)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|// Обособленные виды запасов по менеджеру
	|ВЫБРАТЬ
	|	ВидыЗапасов.ВидЗапасов КАК ВидЗапасов,
	|	ВидыЗапасов.ВидЗапасовПродавца КАК ВидЗапасовПродавца
	|ИЗ
	|	ВидыЗапасов КАК ВидыЗапасов
	|ГДЕ
	|	ВидыЗапасов.Предназначение = ЗНАЧЕНИЕ(Перечисление.ТипыПредназначенияВидовЗапасов.ПредназначенДляМенеджера)
	|	И ВидыЗапасов.Менеджер = &Менеджер
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|// Обособленные виды запасов по подразделению
	|ВЫБРАТЬ
	|	ВидыЗапасов.ВидЗапасов КАК ВидЗапасов,
	|	ВидыЗапасов.ВидЗапасовПродавца КАК ВидЗапасовПродавца
	|ИЗ
	|	ВидыЗапасов КАК ВидыЗапасов
	|ГДЕ
	|	ВидыЗапасов.Предназначение = ЗНАЧЕНИЕ(Перечисление.ТипыПредназначенияВидовЗапасов.ПредназначенДляПодразделения)
	|	И ВидыЗапасов.Подразделение = &Подразделение
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|// Обособленные виды запасов по заказам
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ВидыЗапасов.ВидЗапасов КАК ВидЗапасов,
	|	ВидыЗапасов.ВидЗапасовПродавца КАК ВидЗапасовПродавца
	|ИЗ
	|	ВидыЗапасов КАК ВидыЗапасов
	|ГДЕ
	|	ВидыЗапасов.Предназначение = ЗНАЧЕНИЕ(Перечисление.ТипыПредназначенияВидовЗапасов.ПредназначенДляЗаказа)
	|	И ВидыЗапасов.Назначение В (
	|		ВЫБРАТЬ
	|			ТаблицаТоваров.Назначение
	|		ИЗ
	|			ТаблицаТоваров КАК ТаблицаТоваров
	|	)
	|");
	Запрос.УстановитьПараметр("Дата", Дата);
	Запрос.УстановитьПараметр("Организация", Организация);
	
	Запрос.УстановитьПараметр("МассивСделок", МассивСделок);
	Запрос.УстановитьПараметр("Менеджер", Менеджер);
	Запрос.УстановитьПараметр("Подразделение", Подразделение);
	Запрос.УстановитьПараметр("ИспользоватьПередачиТоваровМеждуОрганизациями", ПолучитьФункциональнуюОпцию("ИспользоватьПередачиТоваровМеждуОрганизациями"));
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	
	Если НалогообложениеНДС = Перечисления.ТипыНалогообложенияНДС.ПродажаНаЭкспорт
	 ИЛИ НалогообложениеНДС = Перечисления.ТипыНалогообложенияНДС.ПродажаОблагаетсяЕНВД Тогда
		Запрос.УстановитьПараметр("НалогообложениеНДС", Неопределено);
		Запрос.УстановитьПараметр("ТолькоКомиссионныйТовар", Ложь);
	Иначе
		НалогообложениеНДСОрганизации = Справочники.Организации.НалогообложениеНДС(Организация, Неопределено, Дата);
		Запрос.УстановитьПараметр("НалогообложениеНДС", НалогообложениеНДС);
		Запрос.УстановитьПараметр("ТолькоКомиссионныйТовар", (НалогообложениеНДСОрганизации <> НалогообложениеНДС));
	КонецЕсли;
	
	Если ПолучитьФункциональнуюОпцию("ИспользоватьРаздельныйУчетПоНалогообложению") Тогда
		Запрос.УстановитьПараметр("ПередачаПодДеятельность", НалогообложениеНДС);
	Иначе
		Запрос.УстановитьПараметр("ПередачаПодДеятельность", Перечисления.ТипыНалогообложенияНДС.ПустаяСсылка());
	КонецЕсли; 
	
	Запрос.Выполнить();
	
КонецПроцедуры // ВидыЗапасовПоНалогообложению()

// Процедура формирует временную таблицу доступных видов запасов.
//
// Параметры:
//	Организация - СправочникСсылка.Организации - Организация документа
//	Сделки - Массив элементов СправочникСсылка.Сделка или одна ссылка СправочникСсылка.Сделка - Сделка/сделки документа
//	Менеджер - СправочникСсылка.Пользователи - Менеджер документа
//	Подразделение - СправочникСсылка.СтруктураПредприятия - Подразделение документа
//	МенеджерВременныхТаблиц - Менеджер временных таблиц
//
Процедура ВидыЗапасовНеОбособленныеИОбособленныеБезИнтеркомпани(Организация, Сделки, Менеджер, Подразделение, МенеджерВременныхТаблиц) Экспорт
	
	Запрос = Новый Запрос("
	|// Собственные виды запасов
	|ВЫБРАТЬ
	|	ВидыЗапасов.Ссылка КАК ВидЗапасов,
	|	ВидыЗапасов.Ссылка КАК ВидЗапасовПродавца,
	|	ВидыЗапасов.Предназначение КАК Предназначение,
	|	ВидыЗапасов.Сделка КАК Сделка,
	|	ВидыЗапасов.Менеджер КАК Менеджер,
	|	ВидыЗапасов.Подразделение КАК Подразделение
	|
	|ПОМЕСТИТЬ ВидыЗапасов
	|ИЗ
	|	Справочник.ВидыЗапасов КАК ВидыЗапасов
	|ГДЕ
	|	Не ВидыЗапасов.РеализацияЗапасовДругойОрганизации
	|	И ВидыЗапасов.Организация = &Организация
	|	И Не ВидыЗапасов.ПометкаУдаления
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Предназначение
	|;
	|/////////////////////////////////////////////////////////////////////////////
	|
	|// Не обособленные виды запасов
	|ВЫБРАТЬ
	|	ВидыЗапасов.ВидЗапасов КАК ВидЗапасов,
	|	ВидыЗапасов.ВидЗапасовПродавца КАК ВидЗапасовПродавца
	|
	|ПОМЕСТИТЬ ДоступныеВидыЗапасов
	|ИЗ
	|	ВидыЗапасов КАК ВидыЗапасов
	|ГДЕ
	|	ВидыЗапасов.Предназначение = ЗНАЧЕНИЕ(Перечисление.ТипыПредназначенияВидовЗапасов.ПредназначениеНеОграничено)
	|	ИЛИ ВидыЗапасов.Предназначение = ЗНАЧЕНИЕ(Перечисление.ТипыПредназначенияВидовЗапасов.ПустаяСсылка)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|// Обособленные виды запасов по сделке
	|ВЫБРАТЬ
	|	ВидыЗапасов.ВидЗапасов КАК ВидЗапасов,
	|	ВидыЗапасов.ВидЗапасовПродавца КАК ВидЗапасовПродавца
	|ИЗ
	|	ВидыЗапасов КАК ВидыЗапасов
	|ГДЕ
	|	ВидыЗапасов.Предназначение = ЗНАЧЕНИЕ(Перечисление.ТипыПредназначенияВидовЗапасов.ПредназначенДляСделки)
	|	И ВидыЗапасов.Сделка В (&Сделки)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|// Обособленные виды запасов по менеджеру
	|ВЫБРАТЬ
	|	ВидыЗапасов.ВидЗапасов КАК ВидЗапасов,
	|	ВидыЗапасов.ВидЗапасовПродавца КАК ВидЗапасовПродавца
	|ИЗ
	|	ВидыЗапасов КАК ВидыЗапасов
	|ГДЕ
	|	ВидыЗапасов.Предназначение = ЗНАЧЕНИЕ(Перечисление.ТипыПредназначенияВидовЗапасов.ПредназначенДляМенеджера)
	|	И ВидыЗапасов.Менеджер = &Менеджер
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|// Обособленные виды запасов по подразделению
	|ВЫБРАТЬ
	|	ВидыЗапасов.ВидЗапасов КАК ВидЗапасов,
	|	ВидыЗапасов.ВидЗапасовПродавца КАК ВидЗапасовПродавца
	|ИЗ
	|	ВидыЗапасов КАК ВидыЗапасов
	|ГДЕ
	|	ВидыЗапасов.Предназначение = ЗНАЧЕНИЕ(Перечисление.ТипыПредназначенияВидовЗапасов.ПредназначенДляПодразделения)
	|	И ВидыЗапасов.Подразделение = &Подразделение
	|");
	Запрос.УстановитьПараметр("Организация", Организация);
	Запрос.УстановитьПараметр("Сделки", Массив(Сделки));
	Запрос.УстановитьПараметр("Менеджер", Менеджер);
	Запрос.УстановитьПараметр("Подразделение", Подразделение);
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	
	Запрос.Выполнить();
	
КонецПроцедуры

// Процедура формирует временную таблицу доступных видов запасов.
//
// Параметры:
//	Организация - СправочникСсылка.Организации - Организация документа
//	Сделка - СправочникСсылка.Сделка - Сделка документа
//	Менеджер - СправочникСсылка.Пользователи - Менеджер документа
//	Подразделение - СправочникСсылка.СтруктураПредприятия - Подразделение документа
//	МенеджерВременныхТаблиц - Менеджер временных таблиц
//
Процедура ВидыЗапасовЛюбыеБезИнтеркомпани(Организация, МенеджерВременныхТаблиц) Экспорт
	
	Запрос = Новый Запрос("
	|// Собственные виды запасов
	|ВЫБРАТЬ
	|	ВидыЗапасов.Ссылка КАК ВидЗапасов,
	|	ВидыЗапасов.Ссылка КАК ВидЗапасовПродавца
	|
	|ПОМЕСТИТЬ ДоступныеВидыЗапасов
	|ИЗ
	|	Справочник.ВидыЗапасов КАК ВидыЗапасов
	|ГДЕ
	|	Не ВидыЗапасов.РеализацияЗапасовДругойОрганизации
	|	И ВидыЗапасов.Организация = &Организация
	|	И ВидыЗапасов.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.Товар)
	|	И Не ВидыЗапасов.ПометкаУдаления
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|// Комиссионные виды запасов
	|ВЫБРАТЬ
	|	ВидыЗапасов.Ссылка КАК ВидЗапасов,
	|	ВидыЗапасов.Ссылка КАК ВидЗапасовПродавца
	|ИЗ
	|	Справочник.ВидыЗапасов КАК ВидыЗапасов
	|ГДЕ
	|	Не ВидыЗапасов.РеализацияЗапасовДругойОрганизации
	|	И ВидыЗапасов.Организация = &Организация
	|	И ВидыЗапасов.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.КомиссионныйТовар)
	|	И ВидыЗапасов.Комитент ССЫЛКА Справочник.Партнеры
	|	И Не ВидыЗапасов.ПометкаУдаления
	|;
	|/////////////////////////////////////////////////////////////////////////////
	|");
	Запрос.УстановитьПараметр("Организация", Организация);
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	
	Запрос.Выполнить();
	
КонецПроцедуры // ВидыЗапасовЛюбыеБезИнтеркомпани()

// Функция формирует таблицу ошибок заполнения видов запасов.
//
Функция ТаблицаОшибокЗаполненияВидовЗапасов() Экспорт
	
	ТаблицаОшибок = Новый ТаблицаЗначений;
	ТаблицаОшибок.Колонки.Добавить("Номенклатура");
	ТаблицаОшибок.Колонки.Добавить("Характеристика");
	ТаблицаОшибок.Колонки.Добавить("Количество");
	ТаблицаОшибок.Колонки.Добавить("Сумма");
	ТаблицаОшибок.Колонки.Добавить("ЕдиницаИзмерения");
	ТаблицаОшибок.Колонки.Добавить("Склад");
	ТаблицаОшибок.Колонки.Добавить("Сделка");
	ТаблицаОшибок.Колонки.Добавить("НеУказанНомерГТД");

	Возврат ТаблицаОшибок;
	
КонецФункции // ТаблицаОшибокЗаполненияВидовЗапасов()

// Функция определяет аналитику обособленного учета документа.
//
// Параметры:
//	МенеджерВременныхТаблиц - Менеджер временных таблиц
//
// Возвращаемое значение:
//	Структура - данные аналитики обособленного учета
//
Функция АналитикаОбособленноУчетаДокумента(МенеджерВременныхТаблиц) Экспорт
	
	Запрос = Новый Запрос("
	|ВЫБРАТЬ
	|	ВЫБОР КОГДА ДанныеДокумента.Сделка <> ЗНАЧЕНИЕ(Справочник.СделкиСКлиентами.ПустаяСсылка) ТОГДА
	|		ДанныеДокумента.Сделка
	|	КОГДА ДанныеДокумента.Менеджер <> ЗНАЧЕНИЕ(Справочник.Пользователи.ПустаяСсылка) ТОГДА
	|		ДанныеДокумента.Менеджер
	|	КОГДА ДанныеДокумента.Подразделение <> ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка) ТОГДА
	|		ДанныеДокумента.Подразделение
	|	ИНАЧЕ
	|		Неопределено
	|	КОНЕЦ КАК АналитикаОбособленногоУчета,
	|
	|	ВЫБОР КОГДА ДанныеДокумента.Сделка <> ЗНАЧЕНИЕ(Справочник.СделкиСКлиентами.ПустаяСсылка) ТОГДА
	|		""для сделки""
	|	КОГДА ДанныеДокумента.Менеджер <> ЗНАЧЕНИЕ(Справочник.Пользователи.ПустаяСсылка) ТОГДА
	|		""для менеджера""
	|	КОГДА ДанныеДокумента.Подразделение <> ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка) ТОГДА
	|		""для подразделения""
	|	ИНАЧЕ
	|		""""
	|	КОНЕЦ КАК СтрокаАналитикиОбособленногоУчета
	|ИЗ
	|	ТаблицаДанныхДокумента КАК ДанныеДокумента
	|");
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Выборка = Запрос.Выполнить().Выбрать();
	Выборка.Следующий();
	
	Структура = Новый Структура;
	Структура.Вставить("СтрокаАналитики", Выборка.СтрокаАналитикиОбособленногоУчета);
	Структура.Вставить("Аналитика", Выборка.АналитикаОбособленногоУчета);

	Возврат Структура;
	
КонецФункции // АналитикаОбособленноУчетаДокумента()

// Функция проверяет изменение табличной части "Товары" относительно табличной части "Виды запасов" документа.
//
// Параметры:
//	МенеджерВременныхТаблиц - Менеджер временных таблиц
//
// Возвращаемое значение:
//	Булево - Истина - товары изменены
//           Ложь - товары не изменены
//
Функция ПроверитьИзменениеТоваровПоКоличеству(МенеджерВременныхТаблиц) Экспорт
	
	Запрос = Новый Запрос("
	|ВЫБРАТЬ
	|	ТаблицаТоваров.Номенклатура КАК Номенклатура,
	|	ТаблицаТоваров.Характеристика КАК Характеристика
	|ИЗ (
	|	ВЫБРАТЬ
	|		ТаблицаТоваров.Номенклатура КАК Номенклатура,
	|		ТаблицаТоваров.Характеристика КАК Характеристика,
	|		ТаблицаТоваров.Количество КАК Количество
	|	ИЗ
	|		ТаблицаТоваров КАК ТаблицаТоваров
	|
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ТаблицаВидыЗапасов.Номенклатура КАК Номенклатура,
	|		ТаблицаВидыЗапасов.Характеристика КАК Характеристика,
	|		-ТаблицаВидыЗапасов.Количество КАК Количество
	|	ИЗ
	|		ТаблицаВидыЗапасов КАК ТаблицаВидыЗапасов
	|
	|	) КАК ТаблицаТоваров
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаТоваров.Номенклатура,
	|	ТаблицаТоваров.Характеристика
	|
	|ИМЕЮЩИЕ
	|	СУММА(ТаблицаТоваров.Количество) <> 0
	|");
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;

	РезультатЗапрос = Запрос.Выполнить();
	
	Возврат (Не РезультатЗапрос.Пустой());
	
КонецФункции // ПроверитьИзменениеТоваровПоКоличеству()

// Функция проверяет изменение табличной части "Товары" относительно табличной части "Виды запасов" документа.
//
// Параметры:
//	МенеджерВременныхТаблиц - Менеджер временных таблиц
//
// Возвращаемое значение:
//	Булево - Истина - товары изменены
//           Ложь - товары не изменены
//
Функция ПроверитьИзменениеТоваровПоКоличествуИСумме(МенеджерВременныхТаблиц) Экспорт
	
	Запрос = Новый Запрос("
	|ВЫБРАТЬ
	|	ТаблицаТоваров.Номенклатура КАК Номенклатура,
	|	ТаблицаТоваров.Характеристика КАК Характеристика,
	|	ТаблицаТоваров.СтавкаНДС КАК СтавкаНДС
	|ИЗ (
	|	ВЫБРАТЬ
	|		ТаблицаТоваров.Номенклатура КАК Номенклатура,
	|		ТаблицаТоваров.Характеристика КАК Характеристика,
	|		ТаблицаТоваров.СтавкаНДС КАК СтавкаНДС,
	|		ТаблицаТоваров.Количество КАК Количество,
	|		ТаблицаТоваров.СуммаСНДС КАК СуммаСНДС,
	|		ТаблицаТоваров.СуммаНДС КАК СуммаНДС,
	|		ТаблицаТоваров.СуммаВознаграждения КАК СуммаВознаграждения,
	|		ТаблицаТоваров.СуммаНДСВознаграждения КАК СуммаНДСВознаграждения
	|	ИЗ
	|		ТаблицаТоваров КАК ТаблицаТоваров
	|	ГДЕ
	|		ТаблицаТоваров.Номенклатура.ТипНоменклатуры  В (ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Товар), ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара))
	|
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ТаблицаВидыЗапасов.Номенклатура КАК Номенклатура,
	|		ТаблицаВидыЗапасов.Характеристика КАК Характеристика,
	|		ТаблицаВидыЗапасов.СтавкаНДС КАК СтавкаНДС,
	|		-ТаблицаВидыЗапасов.Количество КАК Количество,
	|		-ТаблицаВидыЗапасов.СуммаСНДС КАК СуммаСНДС,
	|		-ТаблицаВидыЗапасов.СуммаНДС КАК СуммаНДС,
	|		-ТаблицаВидыЗапасов.СуммаВознаграждения КАК СуммаВознаграждения,
	|		-ТаблицаВидыЗапасов.СуммаНДСВознаграждения КАК СуммаНДСВознаграждения
	|	ИЗ
	|		ТаблицаВидыЗапасов КАК ТаблицаВидыЗапасов
	|	) КАК ТаблицаТоваров
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаТоваров.Номенклатура,
	|	ТаблицаТоваров.Характеристика,
	|	ТаблицаТоваров.СтавкаНДС
	|
	|ИМЕЮЩИЕ
	|	СУММА(ТаблицаТоваров.Количество) <> 0
	|	ИЛИ СУММА(ТаблицаТоваров.СуммаСНДС) <> 0
	|	ИЛИ СУММА(ТаблицаТоваров.СуммаНДС) <> 0
	|	ИЛИ СУММА(ТаблицаТоваров.СуммаВознаграждения) <> 0
	|	ИЛИ СУММА(ТаблицаТоваров.СуммаНДСВознаграждения) <> 0
	|");
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;

	РезультатЗапрос = Запрос.Выполнить();
	
	Возврат (Не РезультатЗапрос.Пустой());
	
КонецФункции // ПроверитьИзменениеТоваровПоКоличествуИСумме()

// Функция показывает все поля указанной временной таблицы из менеджера временных таблиц.
// Используется для просмотра временных таблиц в отладчике.
// Пример вызова функции:
//	ЗапасыСервер.ПоказатьВременнуюТаблицу(МенеджерВременныхТаблиц, "ТаблицаТоваров")
//
Функция ПоказатьВременнуюТаблицу(МенеджерВременныхТаблиц, ИмяВременнойТаблицы) Экспорт
	
	ТекстЗапроса = "
	|ВЫБРАТЬ
	|	*
	|ИЗ
	|	ИмяВременнойТаблицы
	|";
	
	Запрос = Новый Запрос;
	Запрос.Текст = СтрЗаменить(ТекстЗапроса, "ИмяВременнойТаблицы", ИмяВременнойТаблицы);
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	
	Возврат Запрос.Выполнить().Выгрузить();
	
КонецФункции // ПоказатьВременнуюТаблицу()

// Процедура устанавливает исключительную блокировку на остстки по регистру "Товары организаций".
//
Процедура УстановитьБлокировкуОстатковТоваровОрганизаций(МенеджерВременныхТаблиц) Экспорт
	
	Запрос = Новый Запрос("
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ТаблицаТоваров.Номенклатура КАК Номенклатура,
	|	ТаблицаТоваров.Характеристика КАК Характеристика,
	|	ТаблицаТоваров.Склад КАК Склад,
	|	ТаблицаДанныхДокумента.Организация КАК Организация
	|ИЗ
	|	ТаблицаТоваров КАК ТаблицаТоваров
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		ТаблицаДанныхДокумента КАК ТаблицаДанныхДокумента
	|	ПО
	|		Истина
	|ГДЕ
	|	ТаблицаТоваров.Номенклатура.ТипНоменклатуры В (ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Товар), ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара))
	|");
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	РезультатЗапроса = Запрос.Выполнить();
	
	Блокировка = Новый БлокировкаДанных;
	
	ЭлементБлокировки = Блокировка.Добавить("РегистрНакопления.ТоварыОрганизаций");
	ЭлементБлокировки.Режим = РежимБлокировкиДанных.Исключительный;
	ЭлементБлокировки.ИсточникДанных = РезультатЗапроса;
	ЭлементБлокировки.ИспользоватьИзИсточникаДанных("Номенклатура", "Номенклатура");
	ЭлементБлокировки.ИспользоватьИзИсточникаДанных("Характеристика", "Характеристика");
	ЭлементБлокировки.ИспользоватьИзИсточникаДанных("Склад", "Склад");
	
	Если Не ПолучитьФункциональнуюОпцию("ИспользоватьПередачиТоваровМеждуОрганизациями") Тогда
		ЭлементБлокировки.ИспользоватьИзИсточникаДанных("Организация", "Организация");
	КонецЕсли;
	
	Блокировка.Заблокировать();
	
КонецПроцедуры // УстановитьБлокировкуОстатковТоваровОрганизаций()

// Процедура формирует таблицу остатков товаров организаций.
//
// Параметры:
//	ДокументСсылка - Текущий документ
//	Организация - СправочникСсылка.Организации - Организация документа
//	Дата - Дата документа
//	ДополнительныеСвойства - Структура - Дополнительные свойства документа
//	МенеджерВременныхТаблиц - Менеджер временных таблиц
//
Процедура ТаблицаОстатковТоваровОрганизаций(ДокументСсылка, Организация, Дата, ДополнительныеСвойства, МенеджерВременныхТаблиц, ПоВсемВидамЗапасов = Ложь) Экспорт
	
	Запрос = Новый Запрос("
	|ВЫБРАТЬ // Остатки товаров организации на конец месяца
	|	ТоварыОрганизаций.Организация КАК Организация,
	|	ТоварыОрганизаций.Склад КАК Склад,
	|	ТоварыОрганизаций.Номенклатура КАК Номенклатура,
	|	ТоварыОрганизаций.Характеристика КАК Характеристика,
	|	НЕОПРЕДЕЛЕНО КАК ДокументРеализации,
	|	ТоварыОрганизаций.ВидЗапасов КАК ВидЗапасов,
	|	ТоварыОрганизаций.НомерГТД КАК НомерГТД,
	|	ТоварыОрганизаций.КоличествоОстаток КАК КоличествоОстаток
	|
	|ПОМЕСТИТЬ ОстаткиТоваровНаКонецМесяца
	|ИЗ
	|	РегистрНакопления.ТоварыОрганизаций.Остатки(&Дата,
	|		(Номенклатура, Характеристика, Склад) В (
	|			ВЫБРАТЬ
	|				ТаблицаТоваров.Номенклатура,
	|				ТаблицаТоваров.Характеристика,
	|				ТаблицаТоваров.Склад
	|			ИЗ
	|				ТаблицаТоваров КАК ТаблицаТоваров
	|			)
	|		И (
	|			ВидЗапасов В (
	|				ВЫБРАТЬ
	|					ДоступныеВидыЗапасов.ВидЗапасов
	|				ИЗ
	|					ДоступныеВидыЗапасов КАК ДоступныеВидыЗапасов
	|				)
	|			ИЛИ &ПоВсемВидамЗапасов
	|			)
	|		И Организация = ВидЗапасов.Организация
	|	) КАК ТоварыОрганизаций
	|;
	|/////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ // Остатки товаров организации на дату актуальности
	|	ТоварыОрганизаций.Организация КАК Организация,
	|	ТоварыОрганизаций.Склад КАК Склад,
	|	ТоварыОрганизаций.Номенклатура КАК Номенклатура,
	|	ТоварыОрганизаций.Характеристика КАК Характеристика,
	|	ТоварыОрганизаций.ВидЗапасов КАК ВидЗапасов,
	|	ТоварыОрганизаций.НомерГТД КАК НомерГТД,
	|	ТоварыОрганизаций.КоличествоОстаток КАК КоличествоОстаток
	|
	|ПОМЕСТИТЬ ОстаткиТоваровНаДатуАктуальности
	|ИЗ
	|	РегистрНакопления.ТоварыОрганизаций.Остатки(,
	|		Не &ИспользоватьОстаткиНаКонецМесяца
	|		И (Номенклатура, Характеристика, Склад) В (
	|			ВЫБРАТЬ
	|				ТаблицаТоваров.Номенклатура,
	|				ТаблицаТоваров.Характеристика,
	|				ТаблицаТоваров.Склад
	|			ИЗ
	|				ТаблицаТоваров КАК ТаблицаТоваров
	|			)
	|		И (
	|			ВидЗапасов В (
	|				ВЫБРАТЬ
	|					ДоступныеВидыЗапасов.ВидЗапасов
	|				ИЗ
	|					ДоступныеВидыЗапасов КАК ДоступныеВидыЗапасов
	|				)
	|			ИЛИ &ПоВсемВидамЗапасов
	|			)
	|		И Организация = ВидЗапасов.Организация
	|	) КАК ТоварыОрганизаций
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Организация,
	|	Склад,
	|	Номенклатура,
	|	Характеристика,
	|	ВидЗапасов,
	|	НомерГТД
	|;
	|/////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТоварыОрганизаций.Организация КАК Организация,
	|	ТоварыОрганизаций.Склад КАК Склад,
	|	ЗНАЧЕНИЕ(Справочник.Склады.ПустаяСсылка) КАК СкладОтгрузки,
	|	ТоварыОрганизаций.Номенклатура КАК Номенклатура,
	|	ТоварыОрганизаций.Характеристика КАК Характеристика,
	|	НЕОПРЕДЕЛЕНО КАК ДокументРеализации,
	|	ТоварыОрганизаций.ВидЗапасов КАК ВидЗапасов,
	|	ТоварыОрганизаций.ВидЗапасовВладельца КАК ВидЗапасовВладельца,
	|	Неопределено КАК ВидЗапасовПолучателя,
	|	Неопределено КАК ВидЗапасовОтгрузки,
	|	Ложь КАК РеализацияЗапасовДругойОрганизации,
	|	ТоварыОрганизаций.ВидЗапасовВладельца.Назначение КАК Назначение,
	|	ТоварыОрганизаций.НомерГТД КАК НомерГТД,
	|	МАКСИМУМ(ТоварыОрганизаций.ДатаПоступления) КАК ДатаПоступления,
	|	СУММА(ТоварыОрганизаций.Количество) КАК КоличествоОстаток,
	|	0 КАК СуммаОстаток,
	|
	|	ВЫБОР КОГДА ТоварыОрганизаций.ВидЗапасов.Предназначение = ЗНАЧЕНИЕ(Перечисление.ТипыПредназначенияВидовЗапасов.ПредназначенДляСделки) ТОГДА
	|		ТоварыОрганизаций.ВидЗапасов.Сделка
	|	ИНАЧЕ
	|		ЗНАЧЕНИЕ(Справочник.СделкиСКлиентами.ПустаяСсылка)
	|	КОНЕЦ КАК Сделка
	|
	|ПОМЕСТИТЬ ТаблицаОстатков
	|ИЗ (
	|	ВЫБРАТЬ // Движения документа
	|		ТоварыОрганизаций.Организация КАК Организация,
	|		ТоварыОрганизаций.Склад КАК Склад,
	|		ТоварыОрганизаций.Номенклатура КАК Номенклатура,
	|		ТоварыОрганизаций.Характеристика КАК Характеристика,
	|		ЕСТЬNULL(ДоступныеВидыЗапасов.ВидЗапасовПродавца, ТоварыОрганизаций.ВидЗапасов) КАК ВидЗапасов,
	|		ТоварыОрганизаций.ВидЗапасов КАК ВидЗапасовВладельца,
	|		ТоварыОрганизаций.НомерГТД КАК НомерГТД,
	|		ТоварыОрганизаций.Количество КАК Количество,
	|
	|		ДатыПоступленияТоваровОрганизаций.ДатаПоступления КАК ДатаПоступления
	|	ИЗ
	|		РегистрНакопления.ТоварыОрганизаций КАК ТоварыОрганизаций
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ
	|			РегистрСведений.ДатыПоступленияТоваровОрганизаций КАК ДатыПоступленияТоваровОрганизаций
	|		ПО
	|			ТоварыОрганизаций.ВидЗапасов = ДатыПоступленияТоваровОрганизаций.ВидЗапасов
	|			И ТоварыОрганизаций.Номенклатура = ДатыПоступленияТоваровОрганизаций.Номенклатура
	|			И ТоварыОрганизаций.Характеристика = ДатыПоступленияТоваровОрганизаций.Характеристика
	|			И ТоварыОрганизаций.НомерГТД = ДатыПоступленияТоваровОрганизаций.НомерГТД
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ
	|			ДоступныеВидыЗапасов КАК ДоступныеВидыЗапасов
	|		ПО
	|			ТоварыОрганизаций.ВидЗапасов = ДоступныеВидыЗапасов.ВидЗапасов
	|	ГДЕ
	|		ТоварыОрганизаций.Регистратор = &Ссылка
	|		И ТоварыОрганизаций.Активность
	|		И ТоварыОрганизаций.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|		И (ТоварыОрганизаций.Номенклатура, ТоварыОрганизаций.Характеристика, ТоварыОрганизаций.Склад) В (
	|			ВЫБРАТЬ
	|				ТаблицаТоваров.Номенклатура,
	|				ТаблицаТоваров.Характеристика,
	|				ТаблицаТоваров.Склад
	|			ИЗ
	|				ТаблицаТоваров КАК ТаблицаТоваров
	|			)
	|		И ((Не &ПоВсемВидамЗапасов И Не ДоступныеВидыЗапасов.ВидЗапасов ЕСТЬ NULL) ИЛИ &ПоВсемВидамЗапасов)
	|
	|	ОБЪЕДИНИТЬ ВСЕ
	|
	|	ВЫБРАТЬ // Остатки товаров организации
	|		ТоварыОрганизаций.Организация КАК Организация,
	|		ТоварыОрганизаций.Склад КАК Склад,
	|		ТоварыОрганизаций.Номенклатура КАК Номенклатура,
	|		ТоварыОрганизаций.Характеристика КАК Характеристика,
	|		ВЫБОР КОГДА ДоступныеВидыЗапасов.ВидЗапасовПродавца.РеализацияЗапасовДругойОрганизации
	|		 И ТоварыОрганизаций.Номенклатура.ПодакцизныйТовар ТОГДА
	|			Неопределено
	|		ИНАЧЕ
	|			ЕСТЬNULL(ДоступныеВидыЗапасов.ВидЗапасовПродавца, ТоварыОрганизаций.ВидЗапасов)
	|		КОНЕЦ КАК ВидЗапасов,
	|		ТоварыОрганизаций.ВидЗапасов КАК ВидЗапасовВладельца,
	|		ТоварыОрганизаций.НомерГТД КАК НомерГТД,
	|
	|		ВЫБОР КОГДА Не &ИспользоватьОстаткиНаКонецМесяца
	|		 И ТоварыОрганизаций.КоличествоОстаток >=  ЕСТЬNULL(ТоварыОрганизацийОстатки.КоличествоОстаток, 0) ТОГДА
	|			ЕСТЬNULL(ТоварыОрганизацийОстатки.КоличествоОстаток, 0)
	|		ИНАЧЕ
	|			ТоварыОрганизаций.КоличествоОстаток
	|		КОНЕЦ КАК Количество,
	|		ДатыПоступленияТоваровОрганизаций.ДатаПоступления КАК ДатаПоступления
	|	ИЗ
	|		ОстаткиТоваровНаКонецМесяца КАК ТоварыОрганизаций
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ
	|			ОстаткиТоваровНаДатуАктуальности КАК ТоварыОрганизацийОстатки
	|		ПО
	|			ТоварыОрганизаций.Организация = ТоварыОрганизацийОстатки.Организация
	|			И ТоварыОрганизаций.Склад = ТоварыОрганизацийОстатки.Склад
	|			И ТоварыОрганизаций.Номенклатура = ТоварыОрганизацийОстатки.Номенклатура
	|			И ТоварыОрганизаций.Характеристика = ТоварыОрганизацийОстатки.Характеристика
	|			И ТоварыОрганизаций.ВидЗапасов = ТоварыОрганизацийОстатки.ВидЗапасов
	|			И ТоварыОрганизаций.НомерГТД = ТоварыОрганизацийОстатки.НомерГТД
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ
	|			РегистрСведений.ДатыПоступленияТоваровОрганизаций КАК ДатыПоступленияТоваровОрганизаций
	|		ПО
	|			ТоварыОрганизаций.ВидЗапасов = ДатыПоступленияТоваровОрганизаций.ВидЗапасов
	|			И ТоварыОрганизаций.Номенклатура = ДатыПоступленияТоваровОрганизаций.Номенклатура
	|			И ТоварыОрганизаций.Характеристика = ДатыПоступленияТоваровОрганизаций.Характеристика
	|			И ТоварыОрганизаций.НомерГТД = ДатыПоступленияТоваровОрганизаций.НомерГТД
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ
	|			ДоступныеВидыЗапасов КАК ДоступныеВидыЗапасов
	|		ПО
	|			ТоварыОрганизаций.ВидЗапасов = ДоступныеВидыЗапасов.ВидЗапасов
	|	ГДЕ
	|		((Не &ПоВсемВидамЗапасов И Не ДоступныеВидыЗапасов.ВидЗапасов ЕСТЬ NULL) ИЛИ &ПоВсемВидамЗапасов)
	|
	|	ОБЪЕДИНИТЬ ВСЕ
	|
	|	ВЫБРАТЬ // Поступление товаров организаций, отраженные текущим документом.
	|		ТоварыОрганизаций.Организация КАК Организация,
	|		ТоварыОрганизаций.Склад КАК Склад,
	|		ТоварыОрганизаций.Номенклатура КАК Номенклатура,
	|		ТоварыОрганизаций.Характеристика КАК Характеристика,
	|		ТоварыОрганизаций.ВидЗапасов КАК ВидЗапасов,
	|		ТоварыОрганизаций.ВидЗапасов КАК ВидЗапасовВладельца,
	|		ТоварыОрганизаций.НомерГТД КАК НомерГТД,
	|		(-ТоварыОрганизаций.Количество) КАК Количество,
	|
	|		ДАТАВРЕМЯ(1, 1, 1) КАК ДатаПоступления
	|	ИЗ
	|		РегистрНакопления.ТоварыОрганизаций КАК ТоварыОрганизаций
	|
	|	ГДЕ
	|		ТоварыОрганизаций.Регистратор = &Ссылка
	|		И ТоварыОрганизаций.Активность
	|		И ТоварыОрганизаций.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|		И (ТоварыОрганизаций.Номенклатура, ТоварыОрганизаций.Характеристика, ТоварыОрганизаций.Склад) В (
	|			ВЫБРАТЬ
	|				ТаблицаТоваров.Номенклатура,
	|				ТаблицаТоваров.Характеристика,
	|				ТаблицаТоваров.Склад
	|			ИЗ
	|				ТаблицаТоваров КАК ТаблицаТоваров
	|			)
	|	) КАК ТоварыОрганизаций
	|
	|СГРУППИРОВАТЬ ПО
	|	ТоварыОрганизаций.Организация,
	|	ТоварыОрганизаций.Склад,
	|	ТоварыОрганизаций.Номенклатура,
	|	ТоварыОрганизаций.Характеристика,
	|	ТоварыОрганизаций.ВидЗапасов,
	|	ТоварыОрганизаций.ВидЗапасовВладельца,
	|	ТоварыОрганизаций.НомерГТД,
	|	ВЫБОР КОГДА ТоварыОрганизаций.ВидЗапасов.Предназначение = ЗНАЧЕНИЕ(Перечисление.ТипыПредназначенияВидовЗапасов.ПредназначенДляСделки) ТОГДА
	|		ТоварыОрганизаций.ВидЗапасов.Сделка
	|	ИНАЧЕ
	|		ЗНАЧЕНИЕ(Справочник.СделкиСКлиентами.ПустаяСсылка)
	|	КОНЕЦ
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Номенклатура,
	|	Характеристика,
	|	Склад
	|;
	|///////////////////////////////////////////////////////////////////////////////
	|");
	Запрос.УстановитьПараметр("Ссылка", ДокументСсылка);
	Запрос.УстановитьПараметр("Организация", Организация);
	Запрос.УстановитьПараметр("ПоВсемВидамЗапасов", ПоВсемВидамЗапасов);
	Запрос.УстановитьПараметр("Дата", КонецМесяца(Дата) + 1);
	Если ДополнительныеСвойства.Свойство("ИспользоватьОстаткиНаКонецМесяца") Тогда
		Запрос.УстановитьПараметр("ИспользоватьОстаткиНаКонецМесяца", Истина);
	Иначе
		Запрос.УстановитьПараметр("ИспользоватьОстаткиНаКонецМесяца", Ложь);
	КонецЕсли;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	
	Запрос.Выполнить();
	
КонецПроцедуры // ТаблицаОстатковТоваровОрганизаций()

// Процедура формирует таблицу остатков товаров, переданных на комиссию.
//
Процедура ТаблицаОстатковТоваровПереданныхНаКомиссию(ДокументСсылка, Организация, Партнер, Соглашение, Дата, МенеджерВременныхТаблиц) Экспорт
	
	Запрос = Новый Запрос("
	|ВЫБРАТЬ
	|	ТоварыОрганизаций.Организация КАК Организация,
	|	ЗНАЧЕНИЕ(Справочник.Склады.ПустаяСсылка) КАК Склад,
	|	ЗНАЧЕНИЕ(Справочник.Склады.ПустаяСсылка) КАК СкладОтгрузки,
	|	ЗНАЧЕНИЕ(Справочник.СделкиСКлиентами.ПустаяСсылка) КАК Сделка,
	|	ТоварыОрганизаций.Номенклатура КАК Номенклатура,
	|	ТоварыОрганизаций.Характеристика КАК Характеристика,
	|	НЕОПРЕДЕЛЕНО КАК ДокументРеализации,
	|	ТоварыОрганизаций.ВидЗапасов КАК ВидЗапасов,
	|	ТоварыОрганизаций.ВидЗапасов КАК ВидЗапасовВладельца,
	|	Неопределено КАК ВидЗапасовПолучателя,
	|	Неопределено КАК ВидЗапасовОтгрузки,
	|	Ложь КАК РеализацияЗапасовДругойОрганизации,
	|	ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка) КАК Назначение,
	|	ТоварыОрганизаций.НомерГТД КАК НомерГТД,
	|	МАКСИМУМ(ТоварыОрганизаций.ДатаПоступления) КАК ДатаПоступления,
	|	СУММА(ТоварыОрганизаций.Количество) КАК КоличествоОстаток,
	|	0 КАК СуммаОстаток
	|
	|ПОМЕСТИТЬ ТаблицаОстатков
	|ИЗ (
	|	ВЫБРАТЬ // ВидыЗапасов, списанные документом ""Отчет комиссионера""
	|		ТоварыПереданныеНаКомиссию.Организация КАК Организация,
	|		ТоварыПереданныеНаКомиссию.Номенклатура КАК Номенклатура,
	|		ТоварыПереданныеНаКомиссию.Характеристика КАК Характеристика,
	|		ТоварыПереданныеНаКомиссию.ВидЗапасов КАК ВидЗапасов,
	|		ТоварыПереданныеНаКомиссию.НомерГТД КАК НомерГТД,
	|		ТоварыПереданныеНаКомиссию.Количество КАК Количество,
	|		ДатыПередачиТоваровНаКомиссию.ДатаПередачи КАК ДатаПоступления
	|	ИЗ
	|		РегистрНакопления.ТоварыПереданныеНаКомиссию КАК ТоварыПереданныеНаКомиссию
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ
	|			РегистрСведений.ДатыПередачиТоваровНаКомиссию КАК ДатыПередачиТоваровНаКомиссию
	|		ПО
	|			ТоварыПереданныеНаКомиссию.ВидЗапасов = ДатыПередачиТоваровНаКомиссию.ВидЗапасов
	|			И ТоварыПереданныеНаКомиссию.Номенклатура = ДатыПередачиТоваровНаКомиссию.Номенклатура
	|			И ТоварыПереданныеНаКомиссию.Характеристика = ДатыПередачиТоваровНаКомиссию.Характеристика
	|			И ТоварыПереданныеНаКомиссию.НомерГТД = ДатыПередачиТоваровНаКомиссию.НомерГТД
	|			И ТоварыПереданныеНаКомиссию.Партнер = ДатыПередачиТоваровНаКомиссию.Партнер
	|			И ТоварыПереданныеНаКомиссию.Соглашение = ДатыПередачиТоваровНаКомиссию.Соглашение
	|			И ТоварыПереданныеНаКомиссию.Организация = ДатыПередачиТоваровНаКомиссию.Организация
	|	ГДЕ
	|		ТоварыПереданныеНаКомиссию.Регистратор = &Ссылка
	|		И ТоварыПереданныеНаКомиссию.Активность
	|		И ТоварыПереданныеНаКомиссию.Организация = &Организация
	|		И ТоварыПереданныеНаКомиссию.Партнер = &Партнер
	|		И ТоварыПереданныеНаКомиссию.Соглашение = &Соглашение
	|
	|	ОБЪЕДИНИТЬ ВСЕ
	|
	|	ВЫБРАТЬ // ВидыЗапасов, переданные на комисию
	|		ТоварыПереданныеНаКомиссию.Организация КАК Организация,
	|		ТоварыПереданныеНаКомиссию.Номенклатура КАК Номенклатура,
	|		ТоварыПереданныеНаКомиссию.Характеристика КАК Характеристика,
	|		ТоварыПереданныеНаКомиссию.ВидЗапасов КАК ВидЗапасов,
	|		ТоварыПереданныеНаКомиссию.НомерГТД КАК НомерГТД,
	|		ТоварыПереданныеНаКомиссию.КоличествоОстаток КАК Количество,
	|		ДатыПередачиТоваровНаКомиссию.ДатаПередачи КАК ДатаПоступления
	|	ИЗ
	|		РегистрНакопления.ТоварыПереданныеНаКомиссию.Остатки(&Дата,
	|			Организация = &Организация
	|			И Партнер = &Партнер
	|			И Соглашение = &Соглашение
	|			И (Номенклатура, Характеристика) В (
	|				ВЫБРАТЬ РАЗЛИЧНЫЕ
	|					ТаблицаТоваров.Номенклатура,
	|					ТаблицаТоваров.Характеристика
	|				ИЗ
	|					ТаблицаТоваров КАК ТаблицаТоваров
	|				)
	|		) КАК ТоварыПереданныеНаКомиссию
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ
	|			РегистрСведений.ДатыПередачиТоваровНаКомиссию КАК ДатыПередачиТоваровНаКомиссию
	|		ПО
	|			ТоварыПереданныеНаКомиссию.ВидЗапасов = ДатыПередачиТоваровНаКомиссию.ВидЗапасов
	|			И ТоварыПереданныеНаКомиссию.Номенклатура = ДатыПередачиТоваровНаКомиссию.Номенклатура
	|			И ТоварыПереданныеНаКомиссию.Характеристика = ДатыПередачиТоваровНаКомиссию.Характеристика
	|			И ТоварыПереданныеНаКомиссию.НомерГТД = ДатыПередачиТоваровНаКомиссию.НомерГТД
	|			И ТоварыПереданныеНаКомиссию.Партнер = ДатыПередачиТоваровНаКомиссию.Партнер
	|			И ТоварыПереданныеНаКомиссию.Соглашение = ДатыПередачиТоваровНаКомиссию.Соглашение
	|			И ТоварыПереданныеНаКомиссию.Организация = ДатыПередачиТоваровНаКомиссию.Организация
	|
	|	) КАК ТоварыОрганизаций
	|
	|СГРУППИРОВАТЬ ПО
	|	ТоварыОрганизаций.Организация,
	|	ТоварыОрганизаций.Номенклатура,
	|	ТоварыОрганизаций.Характеристика,
	|	ТоварыОрганизаций.ВидЗапасов,
	|	ТоварыОрганизаций.НомерГТД
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Номенклатура,
	|	Характеристика
	|;
	|///////////////////////////////////////////////////////////////////////////////
	|");
	Запрос.УстановитьПараметр("Ссылка", ДокументСсылка);
	Запрос.УстановитьПараметр("Организация", Организация);
	Запрос.УстановитьПараметр("Партнер", Партнер);
	Запрос.УстановитьПараметр("Соглашение", Соглашение);
	Запрос.УстановитьПараметр("Дата", Дата + 1);
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.Выполнить();
	
КонецПроцедуры // ТаблицаОстатковТоваровПереданныхНаКомиссию()

// Процедура формирует таблицу остатков товаров к оформлению отчетов комитенту.
//
Процедура ТаблицаОстатковКОформлениюОтчетаКомитенту(ДокументСсылка, Дата, Валюта, ЭтоОтчетКомитентуОСписании, МенеджерВременныхТаблиц) Экспорт
	
	Запрос = Новый Запрос("
	|/////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТоварыОрганизаций.Организация КАК Организация,
	|	ЗНАЧЕНИЕ(Справочник.Склады.ПустаяСсылка) КАК Склад,
	|	ЗНАЧЕНИЕ(Справочник.Склады.ПустаяСсылка) КАК СкладОтгрузки,
	|	ЗНАЧЕНИЕ(Справочник.СделкиСКлиентами.ПустаяСсылка) КАК Сделка,
	|	ТоварыОрганизаций.Номенклатура КАК Номенклатура,
	|	ТоварыОрганизаций.Характеристика КАК Характеристика,
	|	НЕОПРЕДЕЛЕНО КАК ДокументРеализации,
	|	ТоварыОрганизаций.ВидЗапасов КАК ВидЗапасов,
	|	ТоварыОрганизаций.ВидЗапасов КАК ВидЗапасовВладельца,
	|	Неопределено КАК ВидЗапасовПолучателя,
	|	Неопределено КАК ВидЗапасовОтгрузки,
	|	Ложь КАК РеализацияЗапасовДругойОрганизации,
	|	ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка) КАК Назначение,
	|	ТоварыОрганизаций.НомерГТД КАК НомерГТД,
	|	МАКСИМУМ(ТоварыОрганизаций.ДатаПоступления) КАК ДатаПоступления,
	|	СУММА(ТоварыОрганизаций.Количество) КАК КоличествоОстаток,
	|	СУММА(ТоварыОрганизаций.СуммаВыручки) КАК СуммаОстаток
	|
	|ПОМЕСТИТЬ ТаблицаОстатков
	|ИЗ (
	|	ВЫБРАТЬ // ВидыЗапасов, списанные документом
	|		ТоварыКОформлению.ВидЗапасов.Организация КАК Организация,
	|		ТоварыКОформлению.Номенклатура КАК Номенклатура,
	|		ТоварыКОформлению.Характеристика КАК Характеристика,
	|		ТоварыКОформлению.ВидЗапасов КАК ВидЗапасов,
	|		ТоварыКОформлению.НомерГТД КАК НомерГТД,
	|		ВЫБОР КОГДА &ЭтоОтчетКомитентуОСписании ТОГДА
	|			ТоварыКОформлению.КоличествоСписано
	|		ИНАЧЕ
	|			ТоварыКОформлению.Количество
	|		КОНЕЦ КАК Количество,
	|		ВЫБОР КОГДА &ЭтоОтчетКомитентуОСписании ТОГДА
	|			0
	|		ИНАЧЕ
	|			ТоварыКОформлению.СуммаВыручки
	|		КОНЕЦ КАК СуммаВыручки,
	|
	|		ДатыПередачиТоваровНаКомиссию.ДатаПередачи КАК ДатаПоступления
	|	ИЗ
	|		РегистрНакопления.ТоварыКОформлениюОтчетовКомитенту КАК ТоварыКОформлению
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ
	|			РегистрСведений.ДатыПередачиТоваровНаКомиссию КАК ДатыПередачиТоваровНаКомиссию
	|		ПО
	|			ТоварыКОформлению.ВидЗапасов = ДатыПередачиТоваровНаКомиссию.ВидЗапасов
	|			И ТоварыКОформлению.Номенклатура = ДатыПередачиТоваровНаКомиссию.Номенклатура
	|			И ТоварыКОформлению.Характеристика = ДатыПередачиТоваровНаКомиссию.Характеристика
	|			И ТоварыКОформлению.НомерГТД = ДатыПередачиТоваровНаКомиссию.НомерГТД
	|			И ТоварыКОформлению.ВидЗапасов.Комитент = ДатыПередачиТоваровНаКомиссию.Партнер
	|			И ТоварыКОформлению.ВидЗапасов.Соглашение = ДатыПередачиТоваровНаКомиссию.Соглашение
	|			И ТоварыКОформлению.ВидЗапасов.Организация = ДатыПередачиТоваровНаКомиссию.Организация
	|	ГДЕ
	|		ТоварыКОформлению.Регистратор = &Ссылка
	|		И ТоварыКОформлению.Активность
	|		И ТоварыКОформлению.ВидЗапасов В (
	|			ВЫБРАТЬ РАЗЛИЧНЫЕ
	|				ДоступныеВидыЗапасов.ВидЗапасов
	|			ИЗ
	|				ДоступныеВидыЗапасов КАК ДоступныеВидыЗапасов
	|			)
	|
	|	ОБЪЕДИНИТЬ ВСЕ
	|
	|	ВЫБРАТЬ // Реализованные виды запасов
	|		ТоварыКОформлению.ВидЗапасов.Организация КАК Организация,
	|		ТоварыКОформлению.Номенклатура КАК Номенклатура,
	|		ТоварыКОформлению.Характеристика КАК Характеристика,
	|		ТоварыКОформлению.ВидЗапасов КАК ВидЗапасов,
	|		ТоварыКОформлению.НомерГТД КАК НомерГТД,
	|		ВЫБОР КОГДА &ЭтоОтчетКомитентуОСписании ТОГДА
	|			ТоварыКОформлению.КоличествоСписаноОстаток
	|		ИНАЧЕ
	|			ТоварыКОформлению.КоличествоОстаток
	|		КОНЕЦ КАК Количество,
	|
	|		ВЫБОР КОГДА &ЭтоОтчетКомитентуОСписании ТОГДА
	|			0
	|		ИНАЧЕ
	|			ТоварыКОформлению.СуммаВыручкиОстаток
	|		КОНЕЦ КАК СуммаВыручки,
	|
	|		ДатыПередачиТоваровНаКомиссию.ДатаПередачи КАК ДатаПоступления
	|	ИЗ
	|		РегистрНакопления.ТоварыКОформлениюОтчетовКомитенту.Остатки(&Дата,
	|			Валюта = &Валюта
	|			И ВидЗапасов В (
	|				ВЫБРАТЬ РАЗЛИЧНЫЕ
	|					ДоступныеВидыЗапасов.ВидЗапасов
	|				ИЗ
	|					ДоступныеВидыЗапасов КАК ДоступныеВидыЗапасов
	|				)
	|			И (Номенклатура, Характеристика) В (
	|				ВЫБРАТЬ РАЗЛИЧНЫЕ
	|					ТаблицаТоваров.Номенклатура,
	|					ТаблицаТоваров.Характеристика
	|				ИЗ
	|					ТаблицаТоваров КАК ТаблицаТоваров
	|				)
	|		) КАК ТоварыКОформлению
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ
	|			РегистрСведений.ДатыПередачиТоваровНаКомиссию КАК ДатыПередачиТоваровНаКомиссию
	|		ПО
	|			ТоварыКОформлению.ВидЗапасов = ДатыПередачиТоваровНаКомиссию.ВидЗапасов
	|			И ТоварыКОформлению.Номенклатура = ДатыПередачиТоваровНаКомиссию.Номенклатура
	|			И ТоварыКОформлению.Характеристика = ДатыПередачиТоваровНаКомиссию.Характеристика
	|			И ТоварыКОформлению.НомерГТД = ДатыПередачиТоваровНаКомиссию.НомерГТД
	|			И ТоварыКОформлению.ВидЗапасов.Комитент = ДатыПередачиТоваровНаКомиссию.Партнер
	|			И ТоварыКОформлению.ВидЗапасов.Соглашение = ДатыПередачиТоваровНаКомиссию.Соглашение
	|			И ТоварыКОформлению.ВидЗапасов.Организация = ДатыПередачиТоваровНаКомиссию.Организация
	|
	|	) КАК ТоварыОрганизаций
	|
	|СГРУППИРОВАТЬ ПО
	|	ТоварыОрганизаций.Организация,
	|	ТоварыОрганизаций.Номенклатура,
	|	ТоварыОрганизаций.Характеристика,
	|	ТоварыОрганизаций.ВидЗапасов,
	|	ТоварыОрганизаций.НомерГТД
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Номенклатура,
	|	Характеристика
	|;
	|///////////////////////////////////////////////////////////////////////////////
	|");
	Запрос.УстановитьПараметр("Ссылка", ДокументСсылка);
	Запрос.УстановитьПараметр("Валюта", Валюта);
	Запрос.УстановитьПараметр("ЭтоОтчетКомитентуОСписании", ЭтоОтчетКомитентуОСписании);
	Запрос.УстановитьПараметр("Дата", КонецМесяца(Дата) + 1);
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	
	Запрос.Выполнить();
	
КонецПроцедуры // ТаблицаОстатковКОформлениюОтчетаКомитенту()

// Процедура формирует таблицу остатков товаров к передаче.
//
Процедура ТаблицаОстатковТоваровКПередаче(ДокументСсылка, Организация, Склад, Дата, МенеджерВременныхТаблиц, ПоВсемВидамЗапасов = Ложь) Экспорт
	
	Запрос = Новый Запрос("
	|ВЫБРАТЬ
	|	ТоварыОрганизаций.Организация КАК Организация,
	|	ТоварыОрганизаций.Склад КАК Склад,
	|	ЗНАЧЕНИЕ(Справочник.Склады.ПустаяСсылка) КАК СкладОтгрузки,
	|	ЗНАЧЕНИЕ(Справочник.СделкиСКлиентами.ПустаяСсылка) КАК Сделка,
	|	ТоварыОрганизаций.Номенклатура КАК Номенклатура,
	|	ТоварыОрганизаций.Характеристика КАК Характеристика,
	|	НЕОПРЕДЕЛЕНО КАК ДокументРеализации,
	|	ТоварыОрганизаций.ВидЗапасов КАК ВидЗапасов,
	|	ТоварыОрганизаций.ВидЗапасов КАК ВидЗапасовВладельца,
	|	ТоварыОрганизаций.ВидЗапасовПолучателя КАК ВидЗапасовПолучателя,
	|	Неопределено КАК ВидЗапасовОтгрузки,
	|	Ложь КАК РеализацияЗапасовДругойОрганизации,
	|	ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка) КАК Назначение,
	|	ТоварыОрганизаций.НомерГТД КАК НомерГТД,
	|	МАКСИМУМ(ТоварыОрганизаций.ДатаПоступления) КАК ДатаПоступления,
	|	СУММА(ТоварыОрганизаций.Количество) КАК КоличествоОстаток,
	|	0 КАК СуммаОстаток
	|
	|ПОМЕСТИТЬ ТаблицаОстатков
	|ИЗ (
	|	ВЫБРАТЬ // ВидыЗапасов, переданные документом ""Передача товаров между организациями""
	|		ТоварыОрганизацийКПередаче.ОрганизацияВладелец КАК Организация,
	|		ТоварыОрганизацийКПередаче.Склад КАК Склад,
	|		ТоварыОрганизацийКПередаче.Номенклатура КАК Номенклатура,
	|		ТоварыОрганизацийКПередаче.Характеристика КАК Характеристика,
	|		ТоварыОрганизацийКПередаче.ВидЗапасовПродавца.ВидЗапасовВладельца КАК ВидЗапасов,
	|		ТоварыОрганизацийКПередаче.ВидЗапасовПродавца КАК ВидЗапасовПолучателя,
	|		ТоварыОрганизацийКПередаче.НомерГТД КАК НомерГТД,
	|		ТоварыОрганизацийКПередаче.Количество КАК Количество,
	|		ДАТАВРЕМЯ(1, 1, 1) КАК ДатаПоступления
	|	ИЗ
	|		РегистрНакопления.ТоварыОрганизацийКПередаче КАК ТоварыОрганизацийКПередаче
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ
	|			ДоступныеВидыЗапасов КАК ДоступныеВидыЗапасов
	|		ПО
	|			ТоварыОрганизацийКПередаче.ВидЗапасовПродавца = ДоступныеВидыЗапасов.ВидЗапасовПродавца
	|	ГДЕ
	|		ТоварыОрганизацийКПередаче.Регистратор = &Ссылка
	|		И ТоварыОрганизацийКПередаче.Активность
	|		И ((Не &ПоВсемВидамЗапасов И Не ДоступныеВидыЗапасов.ВидЗапасов ЕСТЬ NULL) ИЛИ &ПоВсемВидамЗапасов)
	|
	|	ОБЪЕДИНИТЬ ВСЕ
	|
	|	ВЫБРАТЬ // ВидыЗапасов, проданные другими оранизациями
	|		ТоварыОрганизацийКПередаче.ОрганизацияВладелец КАК Организация,
	|		ТоварыОрганизацийКПередаче.Склад КАК Склад,
	|		ТоварыОрганизацийКПередаче.Номенклатура КАК Номенклатура,
	|		ТоварыОрганизацийКПередаче.Характеристика КАК Характеристика,
	|		ТоварыОрганизацийКПередаче.ВидЗапасовПродавца.ВидЗапасовВладельца КАК ВидЗапасов,
	|		ТоварыОрганизацийКПередаче.ВидЗапасовПродавца КАК ВидЗапасовПолучателя,
	|		ТоварыОрганизацийКПередаче.НомерГТД КАК НомерГТД,
	|		ТоварыОрганизацийКПередаче.КоличествоОстаток КАК Количество,
	|		ДАТАВРЕМЯ(1, 1, 1) КАК ДатаПоступления
	|	ИЗ
	|		РегистрНакопления.ТоварыОрганизацийКПередаче.Остатки(&Дата,
	|			ОрганизацияВладелец = &Организация
	|			И Склад = &Склад
	|			И (Номенклатура, Характеристика) В (
	|				ВЫБРАТЬ РАЗЛИЧНЫЕ
	|					ТаблицаТоваров.Номенклатура,
	|					ТаблицаТоваров.Характеристика
	|				ИЗ
	|					ТаблицаТоваров КАК ТаблицаТоваров
	|				)
	|		) КАК ТоварыОрганизацийКПередаче
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ
	|			ДоступныеВидыЗапасов КАК ДоступныеВидыЗапасов
	|		ПО
	|			ТоварыОрганизацийКПередаче.ВидЗапасовПродавца = ДоступныеВидыЗапасов.ВидЗапасовПродавца
	|		ГДЕ
	|			((Не &ПоВсемВидамЗапасов И Не ДоступныеВидыЗапасов.ВидЗапасов ЕСТЬ NULL) ИЛИ &ПоВсемВидамЗапасов)
	|
	|	) КАК ТоварыОрганизаций
	|
	|СГРУППИРОВАТЬ ПО
	|	ТоварыОрганизаций.Организация,
	|	ТоварыОрганизаций.Склад,
	|	ТоварыОрганизаций.Номенклатура,
	|	ТоварыОрганизаций.Характеристика,
	|	ТоварыОрганизаций.ВидЗапасов,
	|	ТоварыОрганизаций.ВидЗапасовПолучателя,
	|	ТоварыОрганизаций.НомерГТД
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Номенклатура,
	|	Характеристика,
	|	Склад
	|;
	|///////////////////////////////////////////////////////////////////////////////
	|");
	Запрос.УстановитьПараметр("Ссылка", ДокументСсылка);
	Запрос.УстановитьПараметр("Организация", Организация);
	Запрос.УстановитьПараметр("Склад", Склад);
	Запрос.УстановитьПараметр("ПоВсемВидамЗапасов", ПоВсемВидамЗапасов);
	Запрос.УстановитьПараметр("Дата", Дата + 1);
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	
	Запрос.Выполнить();
	
КонецПроцедуры // ТаблицаОстатковТоваровКПередаче()

// Процедура формирует таблицу остатков реализованных товаров.
//
Процедура ТаблицаОстатковРеализованныхТоваров(ДокументСсылка, Организация, Склад, ХозяйственнаяОперация, МенеджерВременныхТаблиц) Экспорт
	
	Запрос = Новый Запрос("
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ДанныеДокумента.Ссылка КАК Ссылка,
	|	ДанныеДокумента.Дата КАК Дата
	|
	|ПОМЕСТИТЬ ДокументыРеализации
	|ИЗ
	|	ТаблицаТоваров КАК ТаблицаТоваров
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		ТаблицаДанныхДокумента КАК ТаблицаДанныхДокумента
	|	ПО
	|		ИСТИНА
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Документ.РеализацияТоваровУслуг КАК ДанныеДокумента
	|	ПО
	|		ДанныеДокумента.Ссылка = ТаблицаТоваров.ДокументРеализации
	|		ИЛИ (ТаблицаТоваров.ДокументРеализации = НЕОПРЕДЕЛЕНО
	|			И ДанныеДокумента.Организация = ТаблицаДанныхДокумента.Организация
	|			И ДанныеДокумента.Партнер = ТаблицаДанныхДокумента.Партнер
	|			И ДанныеДокумента.Контрагент = ТаблицаДанныхДокумента.Контрагент)
	|
	|ГДЕ
	|	ДанныеДокумента.ХозяйственнаяОперация = &ХозяйственнаяОперацияДокументаРеализации
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ДанныеДокумента.Ссылка КАК Ссылка,
	|	ДанныеДокумента.Дата КАК Дата
	|ИЗ
	|	ТаблицаТоваров КАК ТаблицаТоваров
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		ТаблицаДанныхДокумента КАК ТаблицаДанныхДокумента
	|	ПО
	|		ИСТИНА
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Документ.ОтчетОРозничныхПродажах КАК ДанныеДокумента
	|	ПО
	|		ДанныеДокумента.Ссылка = ТаблицаТоваров.ДокументРеализации
	|		ИЛИ (ТаблицаТоваров.ДокументРеализации = НЕОПРЕДЕЛЕНО
	|			И ДанныеДокумента.Организация = ТаблицаДанныхДокумента.Организация)
	|
	|ГДЕ
	|	&ХозяйственнаяОперацияДокументаРеализации = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.РеализацияВРозницу)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Ссылка
	|;
	|/////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ДанныеДокумента.Ссылка КАК Ссылка
	|
	|ПОМЕСТИТЬ ДокументыВозврата
	|ИЗ
	|	Документ.ВозвратТоваровОтКлиента КАК ДанныеДокумента
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		ТаблицаДанныхДокумента КАК ТаблицаДанныхДокумента
	|	ПО
	|		ДанныеДокумента.Организация = ТаблицаДанныхДокумента.Организация
	|		И ДанныеДокумента.Партнер = ТаблицаДанныхДокумента.Партнер
	|		И ДанныеДокумента.Контрагент = ТаблицаДанныхДокумента.Контрагент
	|
	|ГДЕ
	|	ДанныеДокумента.Ссылка <> &Ссылка
	|	И ДанныеДокумента.ХозяйственнаяОперация = &ХозяйственнаяОперацияДокументаВозврата
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Ссылка
	|;
	|/////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	&Организация КАК Организация,
	|	&Склад КАК Склад,
	|	ТоварыОрганизаций.СкладОтгрузки КАК СкладОтгрузки,
	|	ЗНАЧЕНИЕ(Справочник.СделкиСКлиентами.ПустаяСсылка) КАК Сделка,
	|	ТоварыОрганизаций.Номенклатура КАК Номенклатура,
	|	ТоварыОрганизаций.Характеристика КАК Характеристика,
	|	ТоварыОрганизаций.ДокументРеализации КАК ДокументРеализации,
	|
	|	ВЫБОР КОГДА ТоварыОрганизаций.ВидЗапасов.Организация <> &Организация
	|		ИЛИ ТоварыОрганизаций.ВидЗапасов.Назначение <> ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
	|	ТОГДА
	|		&ВидЗапасовПоУмолчанию
	|	ИНАЧЕ
	|		ТоварыОрганизаций.ВидЗапасов
	|	КОНЕЦ КАК ВидЗапасов,
	|
	|	ВЫБОР КОГДА ТоварыОрганизаций.КВозвратуМеждуОрганизациями ТОГДА
	|		ТоварыОрганизаций.ВидЗапасов
	|	ИНАЧЕ
	|		&ВидЗапасовПоУмолчанию
	|	КОНЕЦ КАК ВидЗапасовВладельца,
	|	Неопределено КАК ВидЗапасовПолучателя,
	|	
	|	ВЫБОР КОГДА ТоварыОрганизаций.ВидЗапасов.Организация <> &Организация
	|		ИЛИ ТоварыОрганизаций.ВидЗапасов.Назначение <> ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
	|	ТОГДА
	|		ТоварыОрганизаций.ВидЗапасов
	|	ИНАЧЕ
	|		Неопределено
	|	КОНЕЦ КАК ВидЗапасовОтгрузки,
	|	ВЫБОР КОГДА ТоварыОрганизаций.ВидЗапасов.Организация <> &Организация
	|		ИЛИ ТоварыОрганизаций.ВидЗапасов.Назначение <> ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
	|	ТОГДА
	|		ТоварыОрганизаций.ВидЗапасов.РеализацияЗапасовДругойОрганизации
	|	ИНАЧЕ
	|		Ложь
	|	КОНЕЦ КАК РеализацияЗапасовДругойОрганизации,
	|
	|	ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка) КАК Назначение,
	|	ТоварыОрганизаций.НомерГТД КАК НомерГТД,
	|	МИНИМУМ(
	|		РАЗНОСТЬДАТ(ТоварыОрганизаций.ДатаРеализации, &МаксимальнаяДата, ДЕНЬ)
	|	) КАК ДатаПоступления,
	|	СУММА(ТоварыОрганизаций.Количество) КАК КоличествоОстаток,
	|	0 КАК СуммаОстаток
	|
	|ПОМЕСТИТЬ ТаблицаОстатков
	|ИЗ (
	|	ВЫБРАТЬ // ВидыЗапасов, отгруженные документом реализации
	|		ТоварыОрганизаций.Регистратор КАК ДокументРеализации,
	|		ТоварыОрганизаций.Склад КАК Склад,
	|		ТоварыОрганизаций.Склад КАК СкладОтгрузки,
	|		ТоварыОрганизаций.Номенклатура КАК Номенклатура,
	|		ТоварыОрганизаций.Характеристика КАК Характеристика,
	|		ТоварыОрганизаций.ВидЗапасов КАК ВидЗапасов,
	|		ТоварыОрганизаций.НомерГТД КАК НомерГТД,
	|		ТоварыОрганизаций.Количество КАК Количество,
	|		ДокументыРеализации.Дата КАК ДатаРеализации,
	|		ЕСТЬNULL(Настройка.ИспользоватьПриВозвратеОтКлиента, Ложь) КАК КВозвратуМеждуОрганизациями
	|	ИЗ
	|		РегистрНакопления.ТоварыОрганизаций КАК ТоварыОрганизаций
	|
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|			ДокументыРеализации КАК ДокументыРеализации
	|		ПО
	|			ТоварыОрганизаций.Регистратор = ДокументыРеализации.Ссылка
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ
	|			РегистрСведений.НастройкаПередачиТоваровМеждуОрганизациями КАК Настройка
	|		ПО
	|			ТоварыОрганизаций.ВидЗапасов.Организация = Настройка.ОрганизацияВладелец
	|			И ТоварыОрганизаций.ВидЗапасов.ТипЗапасов = Настройка.ТипЗапасов
	|			И Настройка.ОрганизацияПродавец = &Организация
	|
	|	ОБЪЕДИНИТЬ ВСЕ
	|
	|	ВЫБРАТЬ // ВидыЗапасов, возвращенные от клиентов
	|		ТоварыОрганизаций.ДокументРеализации КАК ДокументРеализации,
	|		ТоварыОрганизаций.Склад КАК Склад,
	|		ТоварыОрганизаций.Склад КАК СкладОтгрузки,
	|		ТоварыОрганизаций.Номенклатура КАК Номенклатура,
	|		ТоварыОрганизаций.Характеристика КАК Характеристика,
	|		ТоварыОрганизаций.ВидЗапасов КАК ВидЗапасов,
	|		ТоварыОрганизаций.НомерГТД КАК НомерГТД,
	|		ВЫБОР КОГДА ТоварыОрганизаций.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) ТОГДА
	|			ТоварыОрганизаций.Количество
	|		ИНАЧЕ
	|			0
	|		КОНЕЦ КАК Количество,
	|		ДАТАВРЕМЯ(1, 1, 1) КАК ДатаРеализации,
	|		ЕСТЬNULL(Настройка.ИспользоватьПриВозвратеОтКлиента, Ложь) КАК КВозвратуМеждуОрганизациями
	|	ИЗ
	|		РегистрНакопления.ТоварыОрганизаций КАК ТоварыОрганизаций
	|
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|			ДокументыВозврата КАК ДокументыВозврата
	|		ПО
	|			ТоварыОрганизаций.Регистратор = ДокументыВозврата.Ссылка
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ
	|			РегистрСведений.НастройкаПередачиТоваровМеждуОрганизациями КАК Настройка
	|		ПО
	|			ТоварыОрганизаций.ВидЗапасов.Организация = Настройка.ОрганизацияВладелец
	|			И ТоварыОрганизаций.ВидЗапасов.ТипЗапасов = Настройка.ТипЗапасов
	|			И Настройка.ОрганизацияПродавец = &Организация
	|
	|	ОБЪЕДИНИТЬ ВСЕ
	|
	|	ВЫБРАТЬ // ВидыЗапасов, с учетом корректировок
	|		ТоварыОрганизаций.ДокументРеализации КАК ДокументРеализации,
	|		ТоварыОрганизаций.Склад КАК Склад,
	|		ТоварыОрганизаций.Склад КАК СкладОтгрузки,
	|		ТоварыОрганизаций.Номенклатура КАК Номенклатура,
	|		ТоварыОрганизаций.Характеристика КАК Характеристика,
	|		ТоварыОрганизаций.ВидЗапасов КАК ВидЗапасов,
	|		ТоварыОрганизаций.НомерГТД КАК НомерГТД,
	|		ВЫБОР КОГДА ТоварыОрганизаций.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) ТОГДА
	|			ТоварыОрганизаций.Количество
	|		ИНАЧЕ
	|			0
	|		КОНЕЦ КАК Количество,
	|		ДАТАВРЕМЯ(1, 1, 1) КАК ДатаРеализации,
	|		ЕСТЬNULL(Настройка.ИспользоватьПриВозвратеОтКлиента, Ложь) КАК КВозвратуМеждуОрганизациями
	|	ИЗ
	|		РегистрНакопления.ТоварыОрганизаций КАК ТоварыОрганизаций
	|
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|			Документ.КорректировкаРеализации КАК ДокументыКорректировки
	|
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|				ДокументыРеализации КАК ДокументыРеализации
	|			ПО
	|				ДокументыКорректировки.ДокументОснование = ДокументыРеализации.Ссылка
	|
	|		ПО
	|			ТоварыОрганизаций.Регистратор = ДокументыКорректировки.Ссылка
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ
	|			РегистрСведений.НастройкаПередачиТоваровМеждуОрганизациями КАК Настройка
	|		ПО
	|			ТоварыОрганизаций.ВидЗапасов.Организация = Настройка.ОрганизацияВладелец
	|			И ТоварыОрганизаций.ВидЗапасов.ТипЗапасов = Настройка.ТипЗапасов
	|			И Настройка.ОрганизацияПродавец = &Организация
	|
	|	ГДЕ
	|		&ХозяйственнаяОперацияДокументаРеализации = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.РеализацияКлиенту)
	|
	|	ОБЪЕДИНИТЬ ВСЕ
	|
	|	ВЫБРАТЬ // ВидыЗапасов, указанные в документе
	|		Неопределено КАК ДокументРеализации,
	|		&Склад КАК Склад,
	|		ТаблицаВидыЗапасов.СкладОтгрузки КАК СкладОтгрузки,
	|		ТаблицаВидыЗапасов.Номенклатура КАК Номенклатура,
	|		ТаблицаВидыЗапасов.Характеристика КАК Характеристика,
	|		ТаблицаВидыЗапасов.ВидЗапасов КАК ВидЗапасов,
	|		ТаблицаВидыЗапасов.НомерГТД КАК НомерГТД,
	|		ТаблицаВидыЗапасов.Количество КАК Количество,
	|		ДАТАВРЕМЯ(1, 1, 1) КАК ДатаРеализации,
	|		Ложь КАК КВозвратуМеждуОрганизациями
	|	ИЗ
	|		ТаблицаВидыЗапасов КАК ТаблицаВидыЗапасов
	|	ГДЕ
	|		(ТаблицаВидыЗапасов.Номенклатура, ТаблицаВидыЗапасов.Характеристика) В (
	|			ВЫБРАТЬ
	|				ТаблицаТоваров.Номенклатура,
	|				ТаблицаТоваров.Характеристика
	|			ИЗ
	|				ТаблицаТоваров КАК ТаблицаТоваров
	|			ГДЕ
	|				ТаблицаТоваров.ДокументРеализации = Неопределено
	|		)
	|	) КАК ТоварыОрганизаций
	|
	|СГРУППИРОВАТЬ ПО
	|	ДокументРеализации,
	|	ТоварыОрганизаций.СкладОтгрузки,
	|	ТоварыОрганизаций.Номенклатура,
	|	ТоварыОрганизаций.Характеристика,
	|	ВЫБОР КОГДА ТоварыОрганизаций.ВидЗапасов.Организация <> &Организация
	|		ИЛИ ТоварыОрганизаций.ВидЗапасов.Назначение <> ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
	|	ТОГДА
	|		&ВидЗапасовПоУмолчанию
	|	ИНАЧЕ
	|		ТоварыОрганизаций.ВидЗапасов
	|	КОНЕЦ,
	|	ВЫБОР КОГДА ТоварыОрганизаций.КВозвратуМеждуОрганизациями ТОГДА
	|		ТоварыОрганизаций.ВидЗапасов
	|	ИНАЧЕ
	|		&ВидЗапасовПоУмолчанию
	|	КОНЕЦ,
	|	ВЫБОР КОГДА ТоварыОрганизаций.ВидЗапасов.Организация <> &Организация
	|		ИЛИ ТоварыОрганизаций.ВидЗапасов.Назначение <> ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
	|	ТОГДА
	|		ТоварыОрганизаций.ВидЗапасов
	|	ИНАЧЕ
	|		Неопределено
	|	КОНЕЦ,
	|	ВЫБОР КОГДА ТоварыОрганизаций.ВидЗапасов.Организация <> &Организация
	|		ИЛИ ТоварыОрганизаций.ВидЗапасов.Назначение <> ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
	|	ТОГДА
	|		ТоварыОрганизаций.ВидЗапасов.РеализацияЗапасовДругойОрганизации
	|	ИНАЧЕ
	|		Ложь
	|	КОНЕЦ,
	|	ТоварыОрганизаций.НомерГТД
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Номенклатура,
	|	Характеристика,
	|	Склад
	|;
	|///////////////////////////////////////////////////////////////////////////////
	|");
	Запрос.УстановитьПараметр("Ссылка", ДокументСсылка);
	Запрос.УстановитьПараметр("Организация", Организация);
	Запрос.УстановитьПараметр("Склад", Склад);
	Запрос.УстановитьПараметр("ВидЗапасовПоУмолчанию", Справочники.ВидыЗапасов.ПустаяСсылка());
	Запрос.УстановитьПараметр("МаксимальнаяДата", Дата(2399, 1, 1));
	
	Если ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВозвратОтКомиссионера Тогда
		ХозяйственнаяОперацияДокументаРеализации = Перечисления.ХозяйственныеОперации.ПередачаНаКомиссию
	ИначеЕсли ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВозвратОтРозничногоПокупателя Тогда
		ХозяйственнаяОперацияДокументаРеализации = Перечисления.ХозяйственныеОперации.РеализацияВРозницу
	Иначе
		ХозяйственнаяОперацияДокументаРеализации = Перечисления.ХозяйственныеОперации.РеализацияКлиенту
	КонецЕсли;
	
	Запрос.УстановитьПараметр("ХозяйственнаяОперацияДокументаРеализации", ХозяйственнаяОперацияДокументаРеализации);
	Запрос.УстановитьПараметр("ХозяйственнаяОперацияДокументаВозврата", ХозяйственнаяОперация);
	
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	
	Запрос.Выполнить();
	
КонецПроцедуры // ТаблицаОстатковРеализованныхТоваров()

// Процедура заполняет табличную часть "Виды запасов" документов.
//
// Параметры:
//	МенеджерВременныхТаблиц - требуется временные таблицы:
//		ТаблицаТоваров, ТаблицаДанныхДокумента, ТаблицаВидыЗапасов, ТаблицаОстатков
//	ДополнительныеСвойства - Дополнительные свойства документа
//	ТабличнаяЧастьВидыЗапасов - ТабличнаяЧасть - Табличная часть "Виды запасов" документа
//	ТаблицаОшибок - ТаблицаЗначений - Таблица для отражения ошибок при заполнении видов запасов
//	Отказ - Булево - Признак отказа от записи документа
//
Процедура ЗаполнитьВидыЗапасовДокумента(МенеджерВременныхТаблиц, ДополнительныеСвойства, ТабличнаяЧастьВидыЗапасов, ТаблицаОшибок, Отказ = Ложь) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	ТаблицаВидыЗапасов = ТабличнаяЧастьВидыЗапасов.Выгрузить();
	
	КонтролироватьИзменениеНомеровГТД = ДополнительныеСвойства.Свойство("КонтролироватьИзменениеНомеровГТД");
	Если КонтролироватьИзменениеНомеровГТД Тогда
		ТаблицаНомеровГТД = ТаблицаВидыЗапасов.Скопировать(, "Номенклатура, Характеристика, НомерГТД, Количество");
	КонецЕсли;
	
	ВидЗапасовПоУмолчанию = Неопределено;
	ВидЗапасовПолучателяПоУмолчанию = Неопределено;
	
	ПерезаполнитьВидыЗапасов = ДополнительныеСвойства.Свойство("ПерезаполнитьВидыЗапасов");
	Если Не ПерезаполнитьВидыЗапасов Тогда
		КонтролироватьОстаткиТоваровОрганизаций = ПолучитьФункциональнуюОпцию("КонтролироватьОстаткиТоваровОрганизаций");
	Иначе
		КонтролироватьОстаткиТоваровОрганизаций = Ложь;
	КонецЕсли;
	
	Запрос = ЗапросДанныеЗаполненияВидовЗапасов(МенеджерВременныхТаблиц, ДополнительныеСвойства);
	МассивРезультатов = Запрос.ВыполнитьПакет();
	
	ВыборкаДанныеДокумента = МассивРезультатов[1].Выбрать();
	ВыборкаТаблицаТоваров = МассивРезультатов[2].Выбрать();
	
	ВыборкаДанныеДокумента.Следующий();
	Организация = ВыборкаДанныеДокумента.Организация;
	ХозяйственнаяОперация = ВыборкаДанныеДокумента.ХозяйственнаяОперация;
	
	СоответствиеВидовЗапасов = Новый Соответствие;
	СоответствиеВидовЗапасовПодакцизныйТовар = Новый Соответствие;
	СтруктураДанныхСтроки = Новый Структура("
		|Склад,
		|СкладОтгрузки,
		|Сделка,
		|Назначение,
		|Количество,
		|СуммаСНДС,
		|СтавкаНДС,
		|СуммаНДС,
		|СуммаВознаграждения,
		|СуммаНДСВознаграждения,
		|ВидЗапасовПолучателя,
		|ВидЗапасовОтгрузки,
		|ДокументРеализации
		|");
	
	СтруктураВидаЗапасовПоУмолчанию = Новый Структура("
		|ГруппаФинансовогоУчета,
		|ОбособленныйУчетТоваровПоСделке,
		|ВариантОбособленногоУчетаТоваров,
		|Назначение,
		|Поставщик,
		|Контрагент,
		|Соглашение,
		|Договор,
		|Валюта,
		|НалогообложениеНДС,
		|НалогообложениеОрганизации
		|");
	СтруктураВидаЗапасовПоУмолчанию.ГруппаФинансовогоУчета = Справочники.ГруппыФинансовогоУчетаНоменклатуры.ПустаяСсылка();
	СтруктураВидаЗапасовПоУмолчанию.ОбособленныйУчетТоваровПоСделке = Ложь;
	СтруктураВидаЗапасовПоУмолчанию.ВариантОбособленногоУчетаТоваров = Неопределено;
	СтруктураВидаЗапасовПоУмолчанию.Назначение = Справочники.Назначения.ПустаяСсылка();
	СтруктураВидаЗапасовПоУмолчанию.Поставщик = ВыборкаДанныеДокумента.Партнер;
	СтруктураВидаЗапасовПоУмолчанию.Контрагент = ВыборкаДанныеДокумента.Контрагент;
	СтруктураВидаЗапасовПоУмолчанию.Соглашение = ВыборкаДанныеДокумента.Соглашение;
	СтруктураВидаЗапасовПоУмолчанию.Договор = ВыборкаДанныеДокумента.Договор;
	СтруктураВидаЗапасовПоУмолчанию.Валюта = ВыборкаДанныеДокумента.Валюта;
	СтруктураВидаЗапасовПоУмолчанию.НалогообложениеНДС = ВыборкаДанныеДокумента.НалогообложениеНДС;
	СтруктураВидаЗапасовПоУмолчанию.НалогообложениеОрганизации = ВыборкаДанныеДокумента.НалогообложениеНДС;
	
	ПередачаПодДеятельность = ВыборкаДанныеДокумента.НалогообложениеНДС;
	
	РезультатЗапроса = МассивРезультатов[МассивРезультатов.ВГраница()];
	ВыборкаПоСтрокам = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	Пока ВыборкаПоСтрокам.Следующий() Цикл
		
		КоличествоТовара = ВыборкаПоСтрокам.Количество;
		СуммаТовараСНДС = ВыборкаПоСтрокам.СуммаСНДС;
		СуммаНДСТовара = ВыборкаПоСтрокам.СуммаНДС;
		СуммаВознагражденияВсего = ВыборкаПоСтрокам.СуммаВознаграждения;
		СуммаНДСВознагражденияВсего = ВыборкаПоСтрокам.СуммаНДСВознаграждения;
		
		Знак = ?(КоличествоТовара > 0, 1, -1);
		
		Если Знак * КоличествоТовара > Знак * ВыборкаПоСтрокам.КоличествоВидыЗапасов Тогда
			УвеличилосьКоличествоТовара = Истина;
		Иначе
			УвеличилосьКоличествоТовара = Ложь;
		КонецЕсли;
		ЕстьНулевыеОстаткиТоваровОрганизаций = Ложь;
		
		Выборка = ВыборкаПоСтрокам.Выбрать();
		Пока Выборка.Следующий() Цикл
			
			Если ЗначениеЗаполнено(Выборка.ВидЗапасов) Тогда
				ВидЗапасов =  Выборка.ВидЗапасов;
			ИначеЕсли ЗначениеЗаполнено(Выборка.ВидЗапасовВладельца) Тогда
				Если Выборка.ЭтоПодакцизныйТовар Тогда
					ВидЗапасов = СоответствиеВидовЗапасовПодакцизныйТовар.Получить(Выборка.ВидЗапасовВладельца);
				Иначе
					ВидЗапасов = СоответствиеВидовЗапасов.Получить(Выборка.ВидЗапасовВладельца);
				КонецЕсли;
				Если ВидЗапасов = Неопределено Тогда
					ВидЗапасов = Справочники.ВидыЗапасов.ВидЗапасовДляПередачиМеждуОрганизациями(
						Выборка.ВидЗапасовВладельца,
						Организация,
						ПередачаПодДеятельность
					);
					Если Выборка.ЭтоПодакцизныйТовар Тогда
						СоответствиеВидовЗапасовПодакцизныйТовар.Вставить(Выборка.ВидЗапасовВладельца, ВидЗапасов);
					Иначе
						СоответствиеВидовЗапасов.Вставить(Выборка.ВидЗапасовВладельца, ВидЗапасов);
					КонецЕсли;
				КонецЕсли;
				
			// Для возврата товаров от клиента формируется новый вид запасов по виду запасов отгрузки.	
			ИначеЕсли ЗначениеЗаполнено(Выборка.ВидЗапасовОтгрузки)
			 И Не Выборка.РеализацияЗапасовДругойОрганизации Тогда
				ВидЗапасов = СоответствиеВидовЗапасов.Получить(Выборка.ВидЗапасовОтгрузки);
				Если ВидЗапасов = Неопределено Тогда
					ВидЗапасов = Справочники.ВидыЗапасов.ВидЗапасовДляВозвратаТоваровОтКлиента(Выборка.ВидЗапасовОтгрузки);
					СоответствиеВидовЗапасов.Вставить(Выборка.ВидЗапасовОтгрузки, ВидЗапасов);
				КонецЕсли;
			Иначе
				ВидЗапасов = Справочники.ВидыЗапасов.ПустаяСсылка();
			КонецЕсли;
			
			Если ЗначениеЗаполнено(Выборка.ВидЗапасовОтгрузки) Тогда
				Если Не Выборка.РеализацияЗапасовДругойОрганизации Тогда
					ВидЗапасовОтгрузки = Выборка.ВидЗапасовОтгрузки;
				ИначеЕсли Выборка.ЭтоПодакцизныйТовар Тогда
					ВидЗапасовОтгрузки = СоответствиеВидовЗапасовПодакцизныйТовар.Получить(Выборка.ВидЗапасовОтгрузки);
				Иначе
					ВидЗапасовОтгрузки = СоответствиеВидовЗапасов.Получить(Выборка.ВидЗапасовОтгрузки);
				КонецЕсли;
				Если ВидЗапасовОтгрузки = Неопределено Тогда
					ВидЗапасовОтгрузки = Справочники.ВидыЗапасов.ВидЗапасовДляПередачиМеждуОрганизациями(
						Выборка.ВидЗапасовОтгрузки,
						Организация,
						ПередачаПодДеятельность
					);
					Если Выборка.ЭтоПодакцизныйТовар Тогда
						СоответствиеВидовЗапасовПодакцизныйТовар.Вставить(Выборка.ВидЗапасовОтгрузки, ВидЗапасовОтгрузки);
					Иначе
						СоответствиеВидовЗапасов.Вставить(Выборка.ВидЗапасовОтгрузки, ВидЗапасовОтгрузки);
					КонецЕсли;
				КонецЕсли;
			Иначе
				ВидЗапасовОтгрузки = Неопределено;
			КонецЕсли;
			
			КоличествоОстаток = Выборка.КоличествоОстаток;
			СуммаОстаток = Выборка.СуммаОстаток;
			НеУказанНомерГТД = Ложь;
			Если Выборка.НеУказанНомерГТД Тогда
				КоличествоОстаток = 0;
				СуммаОстаток = 0;
				НеУказанНомерГТД = Выборка.НеУказанНомерГТД;
				
				Если Выборка.КоличествоВидыЗапасов <> 0 ИЛИ Выборка.НомерСтрокиВидыЗапасов <> 99999 Тогда
					СтрокаВидыЗапасов = ТаблицаВидыЗапасов.Найти(Выборка.НомерСтрокиВидыЗапасов, "НомерСтроки");
					Если СтрокаВидыЗапасов <> Неопределено Тогда
						СтрокаВидыЗапасов.Количество = 0;
					КонецЕсли;
				КонецЕсли;

			// Если Вид запасов заполнен, обновим количество с учетом остатка товаров организаций.
			ИначеЕсли Выборка.КоличествоВидыЗапасов <> 0 ИЛИ Выборка.НомерСтрокиВидыЗапасов <> 99999 Тогда
				СтрокаВидыЗапасов = ТаблицаВидыЗапасов.Найти(Выборка.НомерСтрокиВидыЗапасов, "НомерСтроки");
				Если СтрокаВидыЗапасов <> Неопределено Тогда
					
					Если КоличествоТовара > 0 Тогда
						КоличествоОстаток = Макс(КоличествоОстаток, 0);
					ИначеЕсли КоличествоТовара < 0 Тогда
						КоличествоОстаток = Мин(КоличествоОстаток, 0);
					Иначе
						КоличествоОстаток = 0;
					КонецЕсли;
					
					Если КоличествоОстаток = 0 Тогда
						ЕстьНулевыеОстаткиТоваровОрганизаций = Истина;
					КонецЕсли;
					
					Если КоличествоТовара = 0 Тогда
						Количество = 0;
					ИначеЕсли УвеличилосьКоличествоТовара ИЛИ ЕстьНулевыеОстаткиТоваровОрганизаций Тогда
						Если КоличествоТовара > 0 Тогда
							Количество = Мин(КоличествоТовара, КоличествоОстаток);
						Иначе
							Количество = Макс(КоличествоТовара, КоличествоОстаток);
						КонецЕсли;
					Иначе // Уменьшилось количество товара
						Если КоличествоТовара > 0 Тогда
							Количество = Мин(КоличествоТовара, КоличествоОстаток, Выборка.КоличествоВидыЗапасов);
						Иначе
							Количество = Макс(КоличествоТовара, КоличествоОстаток, Выборка.КоличествоВидыЗапасов);
						КонецЕсли;
					КонецЕсли;
					
					Если КоличествоТовара = 0 Тогда
						СуммаСНДС = 0;
					ИначеЕсли СуммаОстаток <> 0 Тогда
						СуммаСНДС = ?(КоличествоОстаток <> 0, Окр(Количество * СуммаОстаток / КоличествоОстаток, 2, 1), 0);
					Иначе
						СуммаСНДС = ?(КоличествоТовара <> 0, Окр(Количество * СуммаТовараСНДС / КоличествоТовара, 2, 1), 0);
					КонецЕсли;
					СтруктураДанныхСтроки.Количество = Количество;
					СтруктураДанныхСтроки.СуммаСНДС = СуммаСНДС;
					СтруктураДанныхСтроки.СуммаНДС = ?(СуммаТовараСНДС <> 0, Окр(СуммаСНДС * СуммаНДСТовара / СуммаТовараСНДС, 2, 1), 0);
					СтруктураДанныхСтроки.СтавкаНДС = Выборка.СтавкаНДС;
					СтруктураДанныхСтроки.СуммаВознаграждения = ?(КоличествоТовара <> 0, Окр(Количество * СуммаВознагражденияВсего / КоличествоТовара, 2, 1), 0);
					СтруктураДанныхСтроки.СуммаНДСВознаграждения = ?(КоличествоТовара <> 0, Окр(Количество * СуммаНДСВознагражденияВсего / КоличествоТовара, 2, 1), 0);
					СтруктураДанныхСтроки.Склад = Выборка.Склад;
					СтруктураДанныхСтроки.Сделка = Выборка.Сделка;
					СтруктураДанныхСтроки.Назначение = Выборка.Назначение;
					СтруктураДанныхСтроки.СкладОтгрузки = Выборка.СкладОтгрузки;
					СтруктураДанныхСтроки.ВидЗапасовПолучателя = Выборка.ВидЗапасовПолучателя;
					СтруктураДанныхСтроки.ВидЗапасовОтгрузки = ВидЗапасовОтгрузки;
					СтруктураДанныхСтроки.ДокументРеализации = Выборка.ДокументРеализации;
					
					ЗаполнитьЗначенияСвойств(СтрокаВидыЗапасов, СтруктураДанныхСтроки);
					
					КоличествоТовара = КоличествоТовара - СтруктураДанныхСтроки.Количество;
					СуммаТовараСНДС = СуммаТовараСНДС - СтруктураДанныхСтроки.СуммаСНДС;
					СуммаНДСТовара = СуммаНДСТовара - СтруктураДанныхСтроки.СуммаНДС;
					СуммаВознагражденияВсего = СуммаВознагражденияВсего - СтруктураДанныхСтроки.СуммаВознаграждения;
					СуммаНДСВознагражденияВсего = СуммаНДСВознагражденияВсего - СтруктураДанныхСтроки.СуммаНДСВознаграждения;
					СуммаОстаток = СуммаОстаток - СтруктураДанныхСтроки.СуммаСНДС;
					
					Если Не ЗначениеЗаполнено(СтрокаВидыЗапасов.ВидЗапасов) Тогда
						Если ВидЗапасовПоУмолчанию = Неопределено Тогда
							ВидЗапасовПоУмолчанию = Справочники.ВидыЗапасов.ВидЗапасовДокумента(
								Организация,
								ХозяйственнаяОперация,
								СтруктураВидаЗапасовПоУмолчанию
							);
						КонецЕсли;
						СтрокаВидыЗапасов.ВидЗапасов = ВидЗапасовПоУмолчанию;
					КонецЕсли;
					
				КонецЕсли;
				
			// Если Вид запасов еще не заполнен, добавим новую строку партий по остатку товаров организаций. 
			ИначеЕсли КоличествоТовара <> 0
			 И КоличествоОстаток <> 0
			Тогда
				НоваяСтрока = ТаблицаВидыЗапасов.Добавить();
				ЗаполнитьЗначенияСвойств(НоваяСтрока, Выборка);
				Если ЗначениеЗаполнено(ВидЗапасов) Тогда
					НоваяСтрока.ВидЗапасов = ВидЗапасов;
				Иначе
					Если ВидЗапасовПоУмолчанию = Неопределено Тогда
						ВидЗапасовПоУмолчанию = Справочники.ВидыЗапасов.ВидЗапасовДокумента(
							Организация,
							ХозяйственнаяОперация,
							СтруктураВидаЗапасовПоУмолчанию
						);
					КонецЕсли;
					НоваяСтрока.ВидЗапасов = ВидЗапасовПоУмолчанию;
				КонецЕсли;
				
				Если КоличествоТовара > 0 Тогда
					КоличествоОстаток = Макс(КоличествоОстаток, 0);
					Количество = Мин(КоличествоТовара, КоличествоОстаток);
				Иначе
					КоличествоОстаток = Мин(КоличествоОстаток, 0);
					Количество = Макс(КоличествоТовара, КоличествоОстаток);
				КонецЕсли;
				Если СуммаОстаток <> 0 Тогда
					СуммаСНДС = ?(КоличествоОстаток <> 0, Окр(Количество * СуммаОстаток / КоличествоОстаток, 2, 1), 0);
				Иначе
					СуммаСНДС = ?(КоличествоТовара <> 0, Окр(Количество * СуммаТовараСНДС / КоличествоТовара, 2, 1), 0);
				КонецЕсли;
				СтруктураДанныхСтроки.Количество = Количество;
				СтруктураДанныхСтроки.СуммаСНДС = СуммаСНДС;
				СтруктураДанныхСтроки.СуммаНДС = ?(СуммаТовараСНДС <> 0, Окр(СуммаСНДС * СуммаНДСТовара / СуммаТовараСНДС, 2, 1), 0);
				СтруктураДанныхСтроки.СтавкаНДС = Выборка.СтавкаНДС;
				СтруктураДанныхСтроки.СуммаВознаграждения = ?(КоличествоТовара <> 0, Окр(Количество * СуммаВознагражденияВсего / КоличествоТовара, 2, 1), 0);
				СтруктураДанныхСтроки.СуммаНДСВознаграждения = ?(КоличествоТовара <> 0, Окр(Количество * СуммаНДСВознагражденияВсего / КоличествоТовара, 2, 1), 0);
				СтруктураДанныхСтроки.Склад = Выборка.Склад;
				СтруктураДанныхСтроки.Сделка = Выборка.Сделка;
				СтруктураДанныхСтроки.Назначение = Выборка.Назначение;
				СтруктураДанныхСтроки.СкладОтгрузки = Выборка.СкладОтгрузки;
				СтруктураДанныхСтроки.ВидЗапасовПолучателя = Выборка.ВидЗапасовПолучателя;
				СтруктураДанныхСтроки.ВидЗапасовОтгрузки = ВидЗапасовОтгрузки;
				СтруктураДанныхСтроки.ДокументРеализации = Выборка.ДокументРеализации;
				
				ЗаполнитьЗначенияСвойств(НоваяСтрока, СтруктураДанныхСтроки);
				
				КоличествоТовара = КоличествоТовара - СтруктураДанныхСтроки.Количество;
				СуммаТовараСНДС = СуммаТовараСНДС - СтруктураДанныхСтроки.СуммаСНДС;
				СуммаНДСТовара = СуммаНДСТовара - СтруктураДанныхСтроки.СуммаНДС;
				СуммаВознагражденияВсего = СуммаВознагражденияВсего - СтруктураДанныхСтроки.СуммаВознаграждения;
				СуммаНДСВознагражденияВсего = СуммаНДСВознагражденияВсего - СтруктураДанныхСтроки.СуммаНДСВознаграждения;
				СуммаОстаток = СуммаОстаток - СтруктураДанныхСтроки.СуммаСНДС;
				
			// Удалим строки партий с пустой партией.
			ИначеЕсли Не ЗначениеЗаполнено(ВидЗапасов)
			 И Выборка.НомерСтроки <> 99999 Тогда
				СтрокаВидыЗапасов = ТаблицаВидыЗапасов.Найти(Выборка.НомерСтрокиВидыЗапасов, "НомерСтроки");
				Если СтрокаВидыЗапасов <> Неопределено Тогда
					
					СтруктураДанныхСтроки.Количество = 0;
					СтруктураДанныхСтроки.СуммаСНДС = 0;
					СтруктураДанныхСтроки.СуммаНДС = 0;
					СтруктураДанныхСтроки.СуммаВознаграждения = 0;
					СтруктураДанныхСтроки.СуммаНДСВознаграждения = 0;
					
					ЗаполнитьЗначенияСвойств(СтрокаВидыЗапасов, СтруктураДанныхСтроки);
					
				КонецЕсли;
				
			КонецЕсли;
			
		КонецЦикла;
			
		Если КоличествоТовара <> 0 ИЛИ СуммаТовараСНДС <> 0 Тогда
			ВыборкаТаблицаТоваров.Сбросить();
			Если ВыборкаТаблицаТоваров.НайтиСледующий(Новый Структура("НомерСтроки", ВыборкаПоСтрокам.НомерСтроки)) Тогда
				
				Если ВидЗапасовПоУмолчанию = Неопределено Тогда
					ВидЗапасовПоУмолчанию = Справочники.ВидыЗапасов.ВидЗапасовДокумента(
						Организация,
						ХозяйственнаяОперация,
						СтруктураВидаЗапасовПоУмолчанию
					);
				КонецЕсли;
				
				ОрганизацияПолучатель = Неопределено;
				Если ДополнительныеСвойства.Свойство("ЗаполнятьВидЗапасовПолучателя", ОрганизацияПолучатель)
				 И ВидЗапасовПолучателяПоУмолчанию = Неопределено Тогда
					ВидЗапасовПолучателяПоУмолчанию = Справочники.ВидыЗапасов.ВидЗапасовДляПередачиМеждуОрганизациями(
						ВидЗапасовПоУмолчанию,
						ОрганизацияПолучатель,
						ПередачаПодДеятельность
					);
				КонецЕсли;
				
				НоваяСтрока = ТаблицаВидыЗапасов.Добавить();
				ЗаполнитьЗначенияСвойств(НоваяСтрока, ВыборкаТаблицаТоваров);
				НоваяСтрока.ВидЗапасов = ВидЗапасовПоУмолчанию;
				
				СтруктураДанныхСтроки.Количество = КоличествоТовара;
				СтруктураДанныхСтроки.СуммаСНДС = СуммаТовараСНДС;
				СтруктураДанныхСтроки.СуммаНДС = СуммаНДСТовара;
				СтруктураДанныхСтроки.СуммаВознаграждения = 0;
				СтруктураДанныхСтроки.СуммаНДСВознаграждения = 0;
				СтруктураДанныхСтроки.СтавкаНДС = ВыборкаТаблицаТоваров.СтавкаНДС;
				СтруктураДанныхСтроки.Склад = ВыборкаТаблицаТоваров.Склад;
				СтруктураДанныхСтроки.Сделка = ВыборкаТаблицаТоваров.Сделка;
				СтруктураДанныхСтроки.Назначение = Выборка.Назначение;
				СтруктураДанныхСтроки.СкладОтгрузки = ВыборкаТаблицаТоваров.Склад;
				СтруктураДанныхСтроки.ВидЗапасовПолучателя = ВидЗапасовПолучателяПоУмолчанию;
				СтруктураДанныхСтроки.ДокументРеализации = Неопределено;
				
				ЗаполнитьЗначенияСвойств(НоваяСтрока, СтруктураДанныхСтроки);
				
				Если (КоличествоТовара > 0 ИЛИ (КоличествоТовара = 0 И СуммаТовараСНДС <> 0)) Тогда
					
					ДополнительныеСвойства.Вставить("НедостаточноОстатковТоваровОрганизаций", Истина);
					Если КонтролироватьОстаткиТоваровОрганизаций Тогда
						Выборка = ВыборкаПоСтрокам.Выбрать();
						Выборка.Следующий();
						
						НоваяСтрокаОшибок = ТаблицаОшибок.Добавить();
						ЗаполнитьЗначенияСвойств(НоваяСтрокаОшибок, ВыборкаТаблицаТоваров);
						НоваяСтрокаОшибок.Количество = КоличествоТовара;
						НоваяСтрокаОшибок.Сумма = СуммаТовараСНДС;
						НоваяСтрокаОшибок.ЕдиницаИзмерения = Выборка.ЕдиницаИзмерения;
						НоваяСтрокаОшибок.НеУказанНомерГТД = НеУказанНомерГТД;
						
						Отказ = Истина;
						
					КонецЕсли;
					
				КонецЕсли;
				
			КонецЕсли;
		КонецЕсли;
		
	КонецЦикла;
		
	УдалитьНекорректныеСтрокиВидовЗапасов(МенеджерВременныхТаблиц, ТаблицаВидыЗапасов);
		
	ТабличнаяЧастьВидыЗапасов.Загрузить(ТаблицаВидыЗапасов);
	
	Если КонтролироватьИзменениеНомеровГТД Тогда
		
		ТаблицаНомеровГТД.Колонки.Добавить("НовоеКоличество");
		
		Для Каждого СтрокаТаблицы Из ТаблицаВидыЗапасов Цикл
			
			НоваяСтрока = ТаблицаНомеровГТД.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаТаблицы);
			НоваяСтрока.Количество = 0;
			НоваяСтрока.НовоеКоличество = СтрокаТаблицы.Количество;
			
		КонецЦикла;
		
		ТаблицаНомеровГТД.Свернуть("Номенклатура, Характеристика, НомерГТД", "Количество, НовоеКоличество");
		Для Каждого СтрокаТаблицы Из ТаблицаНомеровГТД Цикл
			Если СтрокаТаблицы.Количество <> СтрокаТаблицы.НовоеКоличество Тогда
				ДополнительныеСвойства.Вставить("ИзменилисьНомераГТД", Истина);
			КонецЕсли;
		КонецЦикла;
		
	КонецЕсли;
	
КонецПроцедуры

// Функция дополняет таблицы товаров или видов запасов обязательными колонками
//	для формирования временных таблиц данных документа.
Функция ТаблицаДополненнаяОбязательнымиКолонками(Таблица) Экспорт
	
	Если Таблица.Колонки.Найти("ДокументРеализации") = Неопределено Тогда
		Таблица.Колонки.Добавить("ДокументРеализации", Новый ОписаниеТипов("ДокументСсылка.РеализацияТоваровУслуг, ДокументСсылка.ОтчетОРозничныхПродажах"));
	КонецЕсли;
	
	Возврат Таблица;
	
КонецФункции

// Процедура заполняет виды запасов в табличной части "Товары" документа поступления товаров.
//
// Параметры:
//	МенеджерВременныхТаблиц - требуется временные таблицы:
// 		ИсходнаяТаблицаТоваров(НомерСтроки, Номенклатура, Сделка, Подразделение, Менеджер) 
//		РеквизитыВидаЗапасов(Организация, ХозяйственнаяОперация, ТипЗапасов, Поставщик, Соглашение, Валюта, НалогообложениеНДС)
//	ТабличнаяЧастьТовары - Табличная часть документа
//	ВидЗапасовДокумента - СправочникСсылка.ВидыЗапасов - Найденный вид запасов (возвращаемое значение). Используется если параметр "ТабличнаяЧастьТовары" имеет значение Неопределено.
//		
Процедура ЗаполнитьВидыЗапасовВТабличнойЧастиТовары(МенеджерВременныхТаблиц, ТабличнаяЧастьТовары, ВидЗапасовДокумента = Неопределено) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	Запрос = Новый Запрос("
	|ВЫБРАТЬ
	|	ТаблицаТоваров.НомерСтроки КАК НомерСтроки,
	|	ТаблицаТоваров.Номенклатура КАК Номенклатура,
	|	ТаблицаТоваров.Подразделение КАК Подразделение,
	|	ТаблицаТоваров.Менеджер КАК Менеджер,
	|	ТаблицаТоваров.Сделка КАК Сделка,
	|	ТаблицаТоваров.Назначение КАК Назначение,
	|	ТаблицаТоваров.ЭтоВозвратнаяТара КАК ЭтоВозвратнаяТара,
	|
	|	ЕСТЬNULL(Сделки.ОбособленныйУчетТоваровПоСделке, ЛОЖЬ) КАК ОбособленныйУчетТоваровПоСделке,
	|	СтруктураПредприятия.ВариантОбособленногоУчетаТоваров КАК ВариантОбособленногоУчетаТоваров,
	|
	|	ВЫБОР КОГДА &ФормироватьВидыЗапасовПоГруппамФинансовогоУчета ТОГДА
	|		ТаблицаТоваров.Номенклатура.ГруппаФинансовогоУчета
	|	ИНАЧЕ
	|		ЗНАЧЕНИЕ(Справочник.ГруппыФинансовогоУчетаНоменклатуры.ПустаяСсылка)
	|	КОНЕЦ КАК ГруппаФинансовогоУчета,
	|
	|	ВЫБОР КОГДА ТаблицаТоваров.Назначение <> ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка) ТОГДА
	|		ТаблицаТоваров.Назначение
	|
	|	КОГДА ЕСТЬNULL(Сделки.ОбособленныйУчетТоваровПоСделке, ЛОЖЬ)
	|		И &ФормироватьВидыЗапасовПоСделкам
	|	ТОГДА
	|		Сделки.Ссылка
	|
	|	КОГДА СтруктураПредприятия.ВариантОбособленногоУчетаТоваров = ЗНАЧЕНИЕ(Перечисление.ВариантыОбособленногоУчетаТоваров.ПоМенеджерамПодразделения)
	|		И &ФормироватьВидыЗапасовПоПодразделениямМенеджерам
	|	ТОГДА
	|		ТаблицаТоваров.Менеджер
	|
	|	КОГДА СтруктураПредприятия.ВариантОбособленногоУчетаТоваров = ЗНАЧЕНИЕ(Перечисление.ВариантыОбособленногоУчетаТоваров.ПоПодразделению)
	|		И &ФормироватьВидыЗапасовПоПодразделениямМенеджерам
	|	ТОГДА
	|		ТаблицаТоваров.Подразделение
	|	ИНАЧЕ
	|		Неопределено
	|	КОНЕЦ КАК АналитикаПредназначения
	|
	|ПОМЕСТИТЬ ТаблицаТоваровСАналитикой
	|ИЗ
	|	ИсходнаяТаблицаТоваров КАК ТаблицаТоваров
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		Справочник.СтруктураПредприятия КАК СтруктураПредприятия
	|	ПО
	|		ТаблицаТоваров.Подразделение = СтруктураПредприятия.Ссылка
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		Справочник.СделкиСКлиентами КАК Сделки
	|	ПО
	|		ТаблицаТоваров.Сделка = Сделки.Ссылка
	|ГДЕ
	|	ТаблицаТоваров.Номенклатура.ТипНоменклатуры В (ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Товар), ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара))
	|;
	|/////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаТоваров.НомерСтроки КАК НомерСтроки,
	|	ТаблицаТоваров.ГруппаФинансовогоУчета КАК ГруппаФинансовогоУчета,
	|	ТаблицаТоваров.АналитикаПредназначения КАК АналитикаПредназначения,
	|	ВЫБОР
	|		КОГДА
	|			ТаблицаТоваров.ЭтоВозвратнаяТара
	|		ТОГДА
	|			ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.Товар)
	|		ИНАЧЕ
	|			РеквизитыВидаЗапасов.ТипЗапасов
	|	КОНЕЦ КАК ТипЗапасов,
	|	РеквизитыВидаЗапасов.Организация,
	|	ВЫБОР
	|		КОГДА
	|			ТаблицаТоваров.ЭтоВозвратнаяТара
	|		ТОГДА
	|			ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ЗакупкаУПоставщика)
	|		ИНАЧЕ
	|			РеквизитыВидаЗапасов.ХозяйственнаяОперация
	|	КОНЕЦ КАК ХозяйственнаяОперация,
	|	РеквизитыВидаЗапасов.Соглашение,
	|	РеквизитыВидаЗапасов.Валюта,
	|	РеквизитыВидаЗапасов.НалогообложениеНДС,
	|	РеквизитыВидаЗапасов.НалогообложениеОрганизации,
	|	РеквизитыВидаЗапасов.Поставщик,
	|	РеквизитыВидаЗапасов.Контрагент,
	|	РеквизитыВидаЗапасов.Договор,
	|
	|	ТаблицаТоваров.Менеджер КАК Менеджер,
	|	ТаблицаТоваров.Подразделение КАК Подразделение,
	|	ТаблицаТоваров.Сделка КАК Сделка,
	|	ТаблицаТоваров.Назначение КАК Назначение,
	|	ТаблицаТоваров.ОбособленныйУчетТоваровПоСделке КАК ОбособленныйУчетТоваровПоСделке,
	|	ТаблицаТоваров.ВариантОбособленногоУчетаТоваров КАК ВариантОбособленногоУчетаТоваров,
	|
	|	АналитикаВидовЗапасов.КлючАналитики КАК ВидЗапасов
	|ИЗ
	|	ТаблицаТоваровСАналитикой КАК ТаблицаТоваров
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		РеквизитыВидаЗапасов КАК РеквизитыВидаЗапасов
	|	ПО
	|		Истина
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РегистрСведений.АналитикаВидовЗапасов КАК АналитикаВидовЗапасов
	|	ПО
	|		РеквизитыВидаЗапасов.Организация = АналитикаВидовЗапасов.Организация
	|		И ВЫБОР
	|			КОГДА
	|				ТаблицаТоваров.ЭтоВозвратнаяТара
	|			ТОГДА
	|				ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.Товар)
	|			ИНАЧЕ
	|				РеквизитыВидаЗапасов.ТипЗапасов
	|		КОНЕЦ = АналитикаВидовЗапасов.ТипЗапасов
	|		И РеквизитыВидаЗапасов.Поставщик = АналитикаВидовЗапасов.Поставщик
	|		И РеквизитыВидаЗапасов.Контрагент = АналитикаВидовЗапасов.Контрагент
	|		И РеквизитыВидаЗапасов.Соглашение = АналитикаВидовЗапасов.Соглашение
	|		И РеквизитыВидаЗапасов.Договор = АналитикаВидовЗапасов.Договор
	|		И РеквизитыВидаЗапасов.Валюта = АналитикаВидовЗапасов.Валюта
	|		И РеквизитыВидаЗапасов.НалогообложениеНДС = АналитикаВидовЗапасов.НалогообложениеНДС
	|		И ТаблицаТоваров.АналитикаПредназначения = АналитикаВидовЗапасов.АналитикаПредназначения
	|		И ТаблицаТоваров.ГруппаФинансовогоУчета = АналитикаВидовЗапасов.ГруппаФинансовогоУчета
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки
	|
	|ИТОГИ ПО
	|	ГруппаФинансовогоУчета,
	|	АналитикаПредназначения,
	|	ЭтоВозвратнаяТара
	|");
	Запрос.УстановитьПараметр("ФормироватьВидыЗапасовПоСделкам", ПолучитьФункциональнуюОпцию("ФормироватьВидыЗапасовПоСделкам"));
	Запрос.УстановитьПараметр("ФормироватьВидыЗапасовПоПодразделениямМенеджерам", ПолучитьФункциональнуюОпцию("ФормироватьВидыЗапасовПоПодразделениямМенеджерам"));
	Запрос.УстановитьПараметр("ФормироватьВидыЗапасовПоГруппамФинансовогоУчета", ПолучитьФункциональнуюОпцию("ФормироватьВидыЗапасовПоГруппамФинансовогоУчета"));
	
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	
	ВыборкаПоГруппам = Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	Пока ВыборкаПоГруппам.Следующий() Цикл
		
		ВыборкаПоАналитике = ВыборкаПоГруппам.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		Пока ВыборкаПоАналитике.Следующий() Цикл
			
			ВыборкаПоТаре = ВыборкаПоАналитике.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
			Пока ВыборкаПоТаре.Следующий() Цикл
			
				ВидЗапасов = Неопределено;
				
				Выборка = ВыборкаПоТаре.Выбрать();
				Пока Выборка.Следующий() Цикл
			
					Если Не ЗначениеЗаполнено(ВидЗапасов) Тогда
						Если ЗначениеЗаполнено(Выборка.ВидЗапасов) Тогда
							ВидЗапасов = Выборка.ВидЗапасов;
						Иначе
							ВидЗапасов = Справочники.ВидыЗапасов.ВидЗапасовДокумента(
								Выборка.Организация,
								Выборка.ХозяйственнаяОперация,
								Выборка
							);
						КонецЕсли;
					КонецЕсли;
					
					Если ТабличнаяЧастьТовары <> Неопределено Тогда
						СтрокаТаблицы = ТабличнаяЧастьТовары.Найти(Выборка.НомерСтроки, "НомерСтроки");
						СтрокаТаблицы.ВидЗапасов = ВидЗапасов;
					Иначе
						ВидЗапасовДокумента = ВидЗапасов;
					КонецЕсли;
					
				КонецЦикла;
				
			КонецЦикла
				
		КонецЦикла
		
	КонецЦикла;
	
КонецПроцедуры

// Процедура выполняет проведение документов по регистру "Себестоимость товаров".
//
Процедура ПроведениеДокументовПоРегиструСебестоимостьТоваров() Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	ЗаписьЖурналаРегистрации(
		НСтр("ru = 'Запасы сервер.Проведение документов по регистру себестоимость товаров'"), 
		УровеньЖурналаРегистрации.Информация, , ,
		НСтр("ru = 'Начато перепроведение документов по регистру ""Себестоимость товаров""'"), 
		РежимТранзакцииЗаписиЖурналаРегистрации.Транзакционная
	);
	
	Запрос = Новый Запрос("
	|ВЫБРАТЬ
	|	СебестоимостьТоваров.Регистратор КАК Регистратор
	|ИЗ
	|	РегистрНакопления.СебестоимостьТоваров.Обороты(,, Регистратор) КАК СебестоимостьТоваров
	|ГДЕ
	|	Не СебестоимостьТоваров.Регистратор ССЫЛКА Документ.КорректировкаРегистров
	|	И Не СебестоимостьТоваров.Регистратор ССЫЛКА Документ.РасчетСебестоимостиТоваров
	|
	|УПОРЯДОЧИТЬ ПО
	|	СебестоимостьТоваров.Регистратор.Дата Возр,
	|	СебестоимостьТоваров.Регистратор
	|");
	
	Отказ = Ложь;
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		
		ДокументОбъект = Выборка.Регистратор.ПолучитьОбъект();
		
		ДокументОбъект.ДополнительныеСвойства.Вставить("ЭтоНовый", Ложь);
		ДокументОбъект.ДополнительныеСвойства.Вставить("РежимЗаписи", РежимЗаписиДокумента.Проведение);
		ПроведениеСервер.ИнициализироватьДополнительныеСвойстваДляПроведения(
			Выборка.Регистратор,
			ДокументОбъект.ДополнительныеСвойства,
			РежимПроведенияДокумента.Неоперативный
		);
		МетаданныеДокумента = ДокументОбъект.ДополнительныеСвойства.ДляПроведения.МетаданныеДокумента;
		Документы[МетаданныеДокумента.Имя].ИнициализироватьДанныеДокумента(
			Выборка.Регистратор,
			ДокументОбъект.ДополнительныеСвойства
		);
		Если ДокументОбъект.ДополнительныеСвойства.ТаблицыДляДвижений.Свойство("ТаблицаДатыПоступленияТоваровОрганизаций") Тогда
			ОтразитьДатыПоступленияТоваровОрганизаций(ДокументОбъект.ДополнительныеСвойства, Отказ);
		КонецЕсли;
		
		Если ДокументОбъект.ДополнительныеСвойства.ТаблицыДляДвижений.Свойство("ТаблицаТоварыОрганизаций") Тогда
			ОтразитьТоварыОрганизаций(ДокументОбъект.ДополнительныеСвойства, ДокументОбъект.Движения, Отказ);
		КонецЕсли;
		
		Если ДокументОбъект.ДополнительныеСвойства.ТаблицыДляДвижений.Свойство("ТаблицаВыручкаИСебестоимостьПродаж") Тогда
			ДоходыИРасходыСервер.ОтразитьВыручкуИСебестоимостьПродаж(ДокументОбъект.ДополнительныеСвойства, ДокументОбъект.Движения, Отказ);
		КонецЕсли;
		
		Если ТипЗнч(ДокументОбъект) = Тип("ДокументОбъект.РаспределениеРасходовНаСебестоимостьТоваров") Тогда
			ДоходыИРасходыСервер.РаспределитьРасходыНаСебестоимостьТоваровПоБазе(ДокументОбъект, ДокументОбъект.ДополнительныеСвойства, ДокументОбъект.Движения, Отказ);
		КонецЕсли;
		
		Если ДокументОбъект.ДополнительныеСвойства.ТаблицыДляДвижений.Свойство("ТаблицаСебестоимостьТоваров") Тогда
			ДоходыИРасходыСервер.ОтразитьСебестоимостьТоваров(
				ДокументОбъект.ДополнительныеСвойства,
				ДокументОбъект.Движения,
				Отказ
			);
		КонецЕсли;
		ПроведениеСервер.ЗаписатьНаборыЗаписей(ДокументОбъект);
		
		ПроведениеСервер.ОчиститьДополнительныеСвойстваДляПроведения(ДокументОбъект.ДополнительныеСвойства);
		
	КонецЦикла;
	
	// Перепроведем расходные документы, в которых некорректно заполнены виды запасов.
	ПерепроведениеДокументовПоТоварамОрганизаций();
	
	// Проведем расчеты себестоимости товаров.
	Запрос = Новый Запрос("
	|ВЫБРАТЬ
	|	СебестоимостьТоваров.Регистратор КАК Регистратор
	|ИЗ
	|	РегистрНакопления.СебестоимостьТоваров.Обороты(,, Регистратор) КАК СебестоимостьТоваров
	|ГДЕ
	|	СебестоимостьТоваров.Регистратор ССЫЛКА Документ.РасчетСебестоимостиТоваров
	|
	|УПОРЯДОЧИТЬ ПО
	|	СебестоимостьТоваров.Регистратор.Дата Возр,
	|	СебестоимостьТоваров.Регистратор
	|");
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		
		ДокументОбъект = Выборка.Регистратор.ПолучитьОбъект();
		Попытка
			ДокументОбъект.Записать(РежимЗаписиДокумента.Проведение);
		Исключение
		КонецПопытки;
		
	КонецЦикла;
	
КонецПроцедуры // ПроведениеДокументовПоРегиструСебестоимостьТоваров()

// Процедура выполняет перепроведение документов, которые некорректно проведены по товарам организаций
//
Процедура ПерепроведениеДокументовПоТоварамОрганизаций() Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	ЗаписьЖурналаРегистрации(
		НСтр("ru = 'Запасы сервер.Перепроведение документов по товарам организаций'"), 
		УровеньЖурналаРегистрации.Информация, , ,
		НСтр("ru = 'Начато перепроведение документов по товарам организаций'"), 
		РежимТранзакцииЗаписиЖурналаРегистрации.Транзакционная
	);
	
	Запрос = Новый Запрос("
	|ВЫБРАТЬ
	|    ТоварыОрганизаций.Регистратор КАК Регистратор
	|ИЗ (
	|	ВЫБРАТЬ
	|		ТоварыОрганизаций.Номенклатура,
	|		ТоварыОрганизаций.Характеристика,
	|		ТоварыОрганизаций.Склад,
	|		ТоварыОрганизаций.Организация,
	|		ТоварыОрганизаций.Регистратор,
	|		МАКСИМУМ(ТоварыОрганизаций.ВидЗапасов) КАК ВидЗапасов,
	|		МАКСИМУМ(ТоварыОрганизаций.НомерГТД) КАК НомерГТД
	|	ИЗ
	|		РегистрНакопления.ТоварыОрганизаций.ОстаткиИОбороты(,, Регистратор) КАК ТоварыОрганизаций
	|	ГДЕ
	|		ТоварыОрганизаций.КоличествоКонечныйОстаток < 0
	|		И Не ТоварыОрганизаций.Регистратор ССЫЛКА Документ.КорректировкаРегистров
	|		
	|	СГРУППИРОВАТЬ ПО
	|		ТоварыОрганизаций.Номенклатура,
	|		ТоварыОрганизаций.Характеристика,
	|		ТоварыОрганизаций.Склад,
	|		ТоварыОрганизаций.Организация,
	|		ТоварыОрганизаций.Регистратор
	|		
	|	) КАК ТоварыОрганизаций
	|	
	|СГРУППИРОВАТЬ ПО
	|	ТоварыОрганизаций.Регистратор
	|    
	|УПОРЯДОЧИТЬ ПО
	|	ТоварыОрганизаций.Регистратор.Дата Возр,
	|	ТоварыОрганизаций.Регистратор 
	|");
	
	Отказ = Ложь;
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		
		Если ЗначениеЗаполнено(Выборка.Регистратор) Тогда
			ДокументОбъект = Выборка.Регистратор.ПолучитьОбъект();
			ДокументОбъект.ДополнительныеСвойства.Вставить("ПерезаполнитьВидыЗапасов", Истина);
			Попытка
				ДокументОбъект.Записать(РежимЗаписиДокумента.Проведение);
			Исключение
				ЗаписьЖурналаРегистрации(
					"Ошибка при проведении документа", 
					УровеньЖурналаРегистрации.Ошибка,
					,
					, 
					ПодробноеПредставлениеОшибки(ИнформацияОбОшибке())
				);
			КонецПопытки;
			
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры // ПерепроведениеДокументовПоТоварамОрганизаций()

////////////////////////////////////////////////////////////////////////////////
// Процедуры записи движений в регистр.

Процедура ОтразитьТоварыНаСкладах(ДополнительныеСвойства, Движения, Отказ) Экспорт

	Таблица= ДополнительныеСвойства.ТаблицыДляДвижений.ТаблицаТоварыНаСкладах;
	
	Если Отказ ИЛИ Таблица.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;

	Движения.ТоварыНаСкладах.Записывать = Истина;
	Движения.ТоварыНаСкладах.Загрузить(Таблица);
	
КонецПроцедуры

Процедура ОтразитьДатыПоступленияТоваровОрганизаций(ДополнительныеСвойства, Отказ) Экспорт

	Таблица = ДополнительныеСвойства.ТаблицыДляДвижений.ТаблицаДатыПоступленияТоваровОрганизаций;
	
	Если Отказ ИЛИ Таблица.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	Для Каждого СтрокаТаблицы Из Таблица Цикл
		МенеджерЗаписи = РегистрыСведений.ДатыПоступленияТоваровОрганизаций.СоздатьМенеджерЗаписи();
		ЗаполнитьЗначенияСвойств(МенеджерЗаписи, СтрокаТаблицы);
		МенеджерЗаписи.Записать(Истина);	
	КонецЦикла;

КонецПроцедуры // ОтразитьДатыПоступленияТоваровОрганизаций()

Процедура ОтразитьТоварыОрганизаций(ДополнительныеСвойства, Движения, Отказ) Экспорт

	Таблица = ДополнительныеСвойства.ТаблицыДляДвижений.ТаблицаТоварыОрганизаций;
	
	Если Отказ ИЛИ Таблица.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;

	Движения.ТоварыОрганизаций.Записывать = Истина;
	Движения.ТоварыОрганизаций.Загрузить(Таблица);
	
КонецПроцедуры

Процедура ОтразитьТоварыОрганизацийКПередаче(ДополнительныеСвойства, Движения, Отказ) Экспорт

	Таблица = ДополнительныеСвойства.ТаблицыДляДвижений.ТаблицаТоварыОрганизацийКПередаче;
	
	Если Отказ ИЛИ Таблица.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;

	Движения.ТоварыОрганизацийКПередаче.Записывать = Истина;
	Движения.ТоварыОрганизацийКПередаче.Загрузить(Таблица);
	
КонецПроцедуры // ОтразитьТоварыОрганизацийКПередаче()

Процедура ОтразитьТоварыОрганизацийКОформлению(ДополнительныеСвойства, Движения, Отказ) Экспорт

	Таблица = ДополнительныеСвойства.ТаблицыДляДвижений.ТаблицаТоварыОрганизацийКОформлению;
	
	Если Отказ ИЛИ Таблица.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;

	Движения.ТоварыОрганизацийКОформлению.Записывать = Истина;
	Движения.ТоварыОрганизацийКОформлению.Загрузить(Таблица);
	
КонецПроцедуры

Процедура ОтразитьТоварыПереданныеНаКомиссию(ДополнительныеСвойства, Движения, Отказ) Экспорт

	Таблица = ДополнительныеСвойства.ТаблицыДляДвижений.ТаблицаТоварыПереданныеНаКомиссию;
	
	Если Отказ ИЛИ Таблица.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;

	Движения.ТоварыПереданныеНаКомиссию.Записывать = Истина;
	Движения.ТоварыПереданныеНаКомиссию.Загрузить(Таблица);

КонецПроцедуры

Процедура ОтразитьДатыПередачиТоваровНаКомиссию(ДополнительныеСвойства, Отказ) Экспорт

	Таблица = ДополнительныеСвойства.ТаблицыДляДвижений.ТаблицаДатыПередачиТоваровНаКомиссию;
	
	Если Отказ ИЛИ Таблица.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	Для Каждого СтрокаТаблицы Из Таблица Цикл
		МенеджерЗаписи = РегистрыСведений.ДатыПередачиТоваровНаКомиссию.СоздатьМенеджерЗаписи();
		ЗаполнитьЗначенияСвойств(МенеджерЗаписи, СтрокаТаблицы);
		МенеджерЗаписи.Записать(Истина);	
	КонецЦикла;

КонецПроцедуры // ОтразитьДатыПоступленияТоваровОрганизаций()

Процедура ОтразитьТоварыКОформлениюОтчетовКомитента(ДополнительныеСвойства, Движения, Отказ) Экспорт

	Таблица = ДополнительныеСвойства.ТаблицыДляДвижений.ТаблицаТоварыКОформлениюОтчетовКомитенту;
	
	Если Отказ ИЛИ Таблица .Количество() = 0 Тогда
		Возврат;
	КонецЕсли;

	Движения.ТоварыКОформлениюОтчетовКомитенту.Записывать = Истина;
	Движения.ТоварыКОформлениюОтчетовКомитенту.Загрузить(Таблица);
	
КонецПроцедуры // ОтразитьТоварыКОформлениюОтчетовКомитента()

Процедура ОтразитьСвободныеОстатки(ДополнительныеСвойства, Движения, Отказ) Экспорт

	Таблица = ДополнительныеСвойства.ТаблицыДляДвижений.ТаблицаСвободныеОстатки;
	
	Если Отказ ИЛИ Таблица.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;

	Движения.СвободныеОстатки.Записывать = Истина;
	Движения.СвободныеОстатки.Загрузить(Таблица);

КонецПроцедуры

Процедура ОтразитьПланыПродажИВнутреннегоПотребления(ДополнительныеСвойства, Движения, Отказ) Экспорт

	Таблица = ДополнительныеСвойства.ТаблицыДляДвижений.ТаблицаПланыПродажИВнутреннегоПотребления;
	
	Если Отказ ИЛИ Таблица.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;

	Движения.ПланыПродажИВнутреннегоПотребления.Записывать = Истина;
	Движения.ПланыПродажИВнутреннегоПотребления.Загрузить(Таблица);

КонецПроцедуры

Процедура ОтразитьТоварыКОформлениюИзлишковНедостач(ДополнительныеСвойства, Движения, Отказ) Экспорт

	Таблица = ДополнительныеСвойства.ТаблицыДляДвижений.ТаблицаТоварыКОформлениюИзлишковНедостач;

	Если Отказ ИЛИ Таблица.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;

	Движения.ТоварыКОформлениюИзлишковНедостач.Записывать = Истина;
	Движения.ТоварыКОформлениюИзлишковНедостач.Загрузить(Таблица);

КонецПроцедуры

// Процедура формирования движений по регистру "Резервы серий товаров".
//
// Параметры:
//	ДокументОбъект - Текущий документ
//	Отказ - Булево - Признак отказа от проведения документа
//
Процедура ОтразитьРезервыСерийТоваров(ДополнительныеСвойства, Движения, Отказ) Экспорт
	Таблица= ДополнительныеСвойства.ТаблицыДляДвижений.ТаблицаРезервыСерийТоваров;
	
	Если Отказ ИЛИ Таблица.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;

	Движения.РезервыСерийТоваров.Записывать = Истина;
	Движения.РезервыСерийТоваров.Загрузить(Таблица);
КонецПроцедуры

Процедура ОтразитьОбеспечениеЗаказовРаботами(ДополнительныеСвойства, Движения, Отказ) Экспорт
	
	Таблица = ДополнительныеСвойства.ТаблицыДляДвижений.ТаблицаОбеспечениеЗаказовРаботами;
	
	Если Отказ Или Таблица.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;

	Движения.ОбеспечениеЗаказовРаботами.Записывать = Истина;
	Движения.ОбеспечениеЗаказовРаботами.Загрузить(Таблица);

КонецПроцедуры

//////////////////////////////////////////////////////////////////////////////////////
// Процедуры регламентных заданий.
// Процедуры обновления информации о доступности товаров.
//
Процедура ОбновитьИнформациюОДоступностиТоваровДляВнешнихПользователей() Экспорт

	УстановитьПривилегированныйРежим(Истина);

	НаборЗаписей = РегистрыСведений.ДоступностьТоваровДляВнешнихПользователей.СоздатьНаборЗаписей();
	НаборЗаписей.Записать(Истина);

	МассивСкладовБезКонтроляГрафика = Новый Массив;
	МассивСкладовКонтрольГрафика    = Новый Массив;

	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	НастройкаКонтроляОстатков.Склад КАК Склад,
	|	МАКСИМУМ(ВЫБОР
	|			КОГДА НастройкаКонтроляОстатков.ВариантКонтроля = ЗНАЧЕНИЕ(Перечисление.ВариантыКонтроля.ОстаткиСУчетомГрафика)
	|				ТОГДА ИСТИНА
	|			ИНАЧЕ ЛОЖЬ
	|		КОНЕЦ) КАК КонтрольГрафика
	|ИЗ
	|	РегистрСведений.НастройкаКонтроляОстатков КАК НастройкаКонтроляОстатков
	|
	|СГРУППИРОВАТЬ ПО
	|	НастройкаКонтроляОстатков.Склад");
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл

		Если Выборка.КонтрольГрафика Тогда
			МассивСкладовКонтрольГрафика.Добавить(Выборка.Склад);
		Иначе
			МассивСкладовБезКонтроляГрафика.Добавить(Выборка.Склад);
		КонецЕсли;

	КонецЦикла;

	Если МассивСкладовБезКонтроляГрафика.Количество() > 0 Тогда
		ВыгрузитьОстаткиПоСкладу(МассивСкладовБезКонтроляГрафика);
	КонецЕсли;

	Если МассивСкладовКонтрольГрафика.Количество() > 0 Тогда
		ВыгрузитьГрафикДоступностьТоваровПоСкладу(МассивСкладовКонтрольГрафика);
	КонецЕсли;

КонецПроцедуры

//Процедуры обновления стоимости товаров.
//
Процедура РасчетСебестоимости() Экспорт

	Документы.РасчетСебестоимостиТоваров.ВыполнитьРегламентноеЗаданиеРасчетСебестоимости(Ложь);

КонецПроцедуры

Процедура ОбеспечениеЗаказов(ДополнительныеСвойства, Движения, Отказ) Экспорт
	
	Таблица= ДополнительныеСвойства.ТаблицыДляДвижений.ТаблицаОбеспечениеЗаказов;
	
	Если Отказ ИЛИ Таблица.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;

	Движения.ОбеспечениеЗаказов.Записывать = Истина;
	Движения.ОбеспечениеЗаказов.Загрузить(Таблица);

КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

////////////////////////////////////////////////////////////////////////////////
// Процедуры формирования таблицы доступных видов запасов.

// Процедура формирует запрос по данным для заполнения видов запасов документа.
//
Функция ЗапросДанныеЗаполненияВидовЗапасов(МенеджерВременныхТаблиц, ДополнительныеСвойства)
	
	Запрос = Новый Запрос("
	|ВЫБРАТЬ
	|	МАКСИМУМ(ТаблицаТоваров.НомерСтроки) КАК НомерСтроки,
	|	ТаблицаТоваров.Номенклатура КАК Номенклатура,
	|	ТаблицаТоваров.Номенклатура.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|	ТаблицаТоваров.Номенклатура.ПодакцизныйТовар КАК ЭтоПодакцизныйТовар,
	|	ТаблицаТоваров.Номенклатура.ВестиУчетПоГТД КАК ВестиУчетПоГТД,
	|	ТаблицаТоваров.Характеристика КАК Характеристика,
	|	ТаблицаТоваров.Склад КАК Склад,
	|	ТаблицаТоваров.ДокументРеализации КАК ДокументРеализации,
	|
	|	ВЫБОР КОГДА ТаблицаТоваров.Сделка.ОбособленныйУчетТоваровПоСделке
	|		И &ФормироватьВидыЗапасовПоСделкам
	|	ТОГДА
	|		ТаблицаТоваров.Сделка
	|	ИНАЧЕ
	|		ЗНАЧЕНИЕ(Справочник.СделкиСКлиентами.ПустаяСсылка)
	|	КОНЕЦ КАК Сделка,
	|	ТаблицаТоваров.Назначение КАК Назначение,
	|
	|	МАКСИМУМ(ТаблицаТоваров.СтавкаНДС) КАК СтавкаНДС,
	|	СУММА(ТаблицаТоваров.Количество) КАК Количество,
	|	СУММА(ТаблицаТоваров.СуммаСНДС) КАК СуммаСНДС,
	|	СУММА(ТаблицаТоваров.СуммаНДС) КАК СуммаНДС,
	|	СУММА(ТаблицаТоваров.СуммаВознаграждения) КАК СуммаВознаграждения,
	|	СУММА(ТаблицаТоваров.СуммаНДСВознаграждения) КАК СуммаНДСВознаграждения
	|	
	|ПОМЕСТИТЬ ТаблицаДокумента
	|ИЗ
	|	ТаблицаТоваров КАК ТаблицаТоваров
	|ГДЕ
	|	ТаблицаТоваров.Номенклатура.ТипНоменклатуры В (ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Товар),ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара))
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаТоваров.Номенклатура,
	|	ТаблицаТоваров.Номенклатура.ЕдиницаИзмерения,
	|	ТаблицаТоваров.Номенклатура.ПодакцизныйТовар,
	|	ТаблицаТоваров.Номенклатура.ВестиУчетПоГТД,
	|	ТаблицаТоваров.Характеристика,
	|	ТаблицаТоваров.Склад,
	|	ТаблицаТоваров.ДокументРеализации,
	|	ВЫБОР КОГДА ТаблицаТоваров.Сделка.ОбособленныйУчетТоваровПоСделке
	|		И &ФормироватьВидыЗапасовПоСделкам
	|	ТОГДА
	|		ТаблицаТоваров.Сделка
	|	ИНАЧЕ
	|		ЗНАЧЕНИЕ(Справочник.СделкиСКлиентами.ПустаяСсылка)
	|	КОНЕЦ,
	|	ТаблицаТоваров.Назначение
	|;
	|/////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаДанныхДокумента.Организация КАК Организация,
	|	Неопределено КАК Партнер,
	|	Неопределено КАК Контрагент,
	|	ЗНАЧЕНИЕ(Справочник.СоглашенияСПоставщиками.ПустаяСсылка) КАК Соглашение,
	|	ЗНАЧЕНИЕ(Справочник.ДоговорыКонтрагентов.ПустаяСсылка) КАК Договор,
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК Валюта,
	|	ТаблицаДанныхДокумента.НалогообложениеНДС КАК НалогообложениеНДС,
	|	ТаблицаДанныхДокумента.ХозяйственнаяОперация КАК ХозяйственнаяОперация
	|ИЗ
	|	ТаблицаДанныхДокумента КАК ТаблицаДанныхДокумента
	|ГДЕ
	|	ТаблицаДанныхДокумента.ХозяйственнаяОперация <> ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратТоваровКомитенту)
	|	И ТаблицаДанныхДокумента.ХозяйственнаяОперация <> ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПередачаНаКомиссиюВДругуюОрганизацию)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ТаблицаДанныхДокумента.Организация КАК Организация,
	|	ТаблицаДанныхДокумента.Партнер КАК Партнер,
	|	ТаблицаДанныхДокумента.Контрагент КАК Контрагент,
	|	ТаблицаДанныхДокумента.Соглашение КАК Соглашение,
	|	ТаблицаДанныхДокумента.Договор КАК Договор,
	|	ТаблицаДанныхДокумента.Валюта КАК Валюта,
	|	ТаблицаДанныхДокумента.НалогообложениеНДС КАК НалогообложениеНДС,
	|	ТаблицаДанныхДокумента.ХозяйственнаяОперация КАК ХозяйственнаяОперация
	|ИЗ
	|	ТаблицаДанныхДокумента КАК ТаблицаДанныхДокумента
	|ГДЕ
	|	ТаблицаДанныхДокумента.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратТоваровКомитенту)
	|	ИЛИ ТаблицаДанныхДокумента.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПередачаНаКомиссиюВДругуюОрганизацию)
	|;
	|/////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаДокумента.НомерСтроки КАК НомерСтроки,
	|	ТаблицаДокумента.Склад КАК Склад,
	|	ТаблицаДокумента.Сделка КАК Сделка,
	|	ТаблицаДокумента.Номенклатура КАК Номенклатура,
	|	ТаблицаДокумента.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|	ТаблицаДокумента.Характеристика КАК Характеристика,
	|	ТаблицаДокумента.СтавкаНДС КАК СтавкаНДС,
	|	ТаблицаДокумента.Количество КАК Количество
	|ИЗ
	|	ТаблицаДокумента КАК ТаблицаДокумента
	|;
	|/////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВЫБОР КОГДА ЕСТЬNULL(ТоварыОрганизаций.КоличествоОстаток, 0) = 0 ТОГДА
	|		0
	|	КОГДА ТаблицаВидыЗапасов.ВидЗапасов.Предназначение = ЗНАЧЕНИЕ(Перечисление.ТипыПредназначенияВидовЗапасов.ПредназначенДляЗаказа) ТОГДА
	|		1
	|	КОГДА ТаблицаВидыЗапасов.ВидЗапасов.Предназначение = ЗНАЧЕНИЕ(Перечисление.ТипыПредназначенияВидовЗапасов.ПредназначенДляСделки) ТОГДА
	|		4
	|	КОГДА ТаблицаВидыЗапасов.ВидЗапасов.Предназначение = ЗНАЧЕНИЕ(Перечисление.ТипыПредназначенияВидовЗапасов.ПредназначенДляМенеджера) ТОГДА
	|		7
	|	КОГДА ТаблицаВидыЗапасов.ВидЗапасов.Предназначение = ЗНАЧЕНИЕ(Перечисление.ТипыПредназначенияВидовЗапасов.ПредназначенДляПодразделения) ТОГДА
	|		10
	|	КОГДА ЕСТЬNULL(ТоварыОрганизаций.ДатаПоступления, ДАТАВРЕМЯ(2399, 1, 1)) <= ТаблицаДанныхДокумента.Дата ТОГДА
	|		11	
	|	ИНАЧЕ
	|		14
	|	КОНЕЦ КАК Приоритет,
	|	ВЫБОР КОГДА Не &ИспользоватьРаздельныйУчетПоНалогообложению ТОГДА
	|		0
	|	ИНАЧЕ
	|		ВЫБОР КОГДА ТаблицаВидыЗапасов.ВидЗапасов.НалогообложениеНДС = ТаблицаДанныхДокумента.НалогообложениеНДС ТОГДА
	|			1
	|		ИНАЧЕ
	|			2
	|		КОНЕЦ
	|	КОНЕЦ КАК ПриоритетЕНВД,
	|	ТаблицаДокумента.НомерСтроки КАК НомерСтроки,
	|	ТаблицаДокумента.Склад КАК Склад,
	|	ТаблицаДокумента.Сделка КАК Сделка,
	|	ТаблицаДокумента.Назначение КАК Назначение,
	|	ТаблицаДокумента.Номенклатура КАК Номенклатура,
	|	ТаблицаДокумента.ЭтоПодакцизныйТовар КАК ЭтоПодакцизныйТовар,
	|	ТаблицаДокумента.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|	ТаблицаДокумента.Характеристика КАК Характеристика,
	|	ТаблицаДокумента.Количество КАК Количество,
	|	ТаблицаДокумента.СуммаСНДС КАК СуммаСНДС,
	|	ТаблицаДокумента.СтавкаНДС КАК СтавкаНДС,
	|	ТаблицаДокумента.СуммаНДС КАК СуммаНДС,
	|	ТаблицаДокумента.СуммаВознаграждения КАК СуммаВознаграждения,
	|	ТаблицаДокумента.СуммаНДСВознаграждения КАК СуммаНДСВознаграждения,
	|
	|	ТаблицаВидыЗапасов.НомерСтроки КАК НомерСтрокиВидыЗапасов,
	|	ТаблицаВидыЗапасов.ВидЗапасов КАК ВидЗапасов,
	|	ЕСТЬNULL(ТоварыОрганизаций.ВидЗапасовВладельца, Неопределено) КАК ВидЗапасовВладельца,
	|	ЕСТЬNULL(ТоварыОрганизаций.ВидЗапасовПолучателя, Неопределено) КАК ВидЗапасовПолучателя,
	|	ЕСТЬNULL(ТоварыОрганизаций.ВидЗапасовОтгрузки, Неопределено) КАК ВидЗапасовОтгрузки,
	|	ЕСТЬNULL(ТоварыОрганизаций.РеализацияЗапасовДругойОрганизации, Ложь) КАК РеализацияЗапасовДругойОрганизации,
	|	ТаблицаВидыЗапасов.НомерГТД КАК НомерГТД,
	|	ВЫБОР КОГДА ТаблицаДокумента.ВестиУчетПоГТД
	|   	И &ЗапретитьОформлениеОперацийСИмпортнымиТоварамиБезНомеровГТД
	|		И ТаблицаВидыЗапасов.НомерГТД = ЗНАЧЕНИЕ(Справочник.НомераГТД.ПустаяСсылка)
	|	ТОГДА
	|		Истина
	|	ИНАЧЕ
	|		Ложь
	|	КОНЕЦ КАК НеУказанНомерГТД,
	|
	|	ЕСТЬNULL(ТоварыОрганизаций.ДатаПоступления, ДАТАВРЕМЯ(2399, 1, 1)) КАК ДатаПоступления,
	|	ЕСТЬNULL(ТоварыОрганизаций.СкладОтгрузки, Неопределено) КАК СкладОтгрузки,
	|	ЕСТЬNULL(ТоварыОрганизаций.ДокументРеализации, Неопределено) КАК ДокументРеализации,
	|
	|	ВЫБОР КОГДА ТаблицаВидыЗапасов.Количество > 0
	|		И ЕСТЬNULL(ТоварыОрганизаций.КоличествоОстаток, 0) > 0
	|		И ТаблицаВидыЗапасов.Количество > ЕСТЬNULL(ТоварыОрганизаций.КоличествоОстаток, 0)
	|	ТОГДА
	|		ЕСТЬNULL(ТоварыОрганизаций.КоличествоОстаток, 0)
	|	ИНАЧЕ
	|		ТаблицаВидыЗапасов.Количество
	|	КОНЕЦ КАК КоличествоВидыЗапасов,
	|
	|	ЕСТЬNULL(ТоварыОрганизаций.КоличествоОстаток, 0) КАК КоличествоОстаток,
	|	ЕСТЬNULL(ТоварыОрганизаций.СуммаОстаток, 0) КАК СуммаОстаток
	|ИЗ
	|	ТаблицаДокумента КАК ТаблицаДокумента
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		ТаблицаДанныхДокумента КАК ТаблицаДанныхДокумента
	|	ПО
	|		Истина
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		ТаблицаВидыЗапасов КАК ТаблицаВидыЗапасов
	|	ПО
	|		(ТаблицаДокумента.Склад = ТаблицаВидыЗапасов.Склад ИЛИ ТаблицаВидыЗапасов.Склад = ЗНАЧЕНИЕ(Справочник.Склады.ПустаяСсылка))
	|		И ТаблицаДокумента.Сделка = ТаблицаВидыЗапасов.Сделка
	|		И ТаблицаДокумента.Назначение = ТаблицаВидыЗапасов.ВидЗапасов.Назначение
	|		И ТаблицаДокумента.Номенклатура = ТаблицаВидыЗапасов.Номенклатура
	|		И ТаблицаДокумента.Характеристика = ТаблицаВидыЗапасов.Характеристика
	|		И (ТаблицаДокумента.ДокументРеализации = ТаблицаВидыЗапасов.ДокументРеализации
	|			ИЛИ ТаблицаДокумента.ДокументРеализации = НЕОПРЕДЕЛЕНО)
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		ТаблицаОстатков КАК ТоварыОрганизаций
	|	ПО
	|		ТаблицаДокумента.Склад = ТоварыОрганизаций.Склад
	|		И ТаблицаДокумента.Номенклатура = ТоварыОрганизаций.Номенклатура
	|		И ТаблицаДокумента.Характеристика = ТоварыОрганизаций.Характеристика
	|		И ТаблицаВидыЗапасов.ВидЗапасов = ТоварыОрганизаций.ВидЗапасов
	|		И ТаблицаВидыЗапасов.НомерГТД = ТоварыОрганизаций.НомерГТД
	|		И ТаблицаВидыЗапасов.ДокументРеализации = ТоварыОрганизаций.ДокументРеализации
	|		И ТаблицаВидыЗапасов.СкладОтгрузки = ТоварыОрганизаций.СкладОтгрузки
	|	
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ВЫБОР КОГДА ТоварыОрганизаций.Организация = ТаблицаДанныхДокумента.Организация ТОГДА
	|		ВЫБОР КОГДА ТаблицаВидыЗапасов.ВидЗапасов.Предназначение = ЗНАЧЕНИЕ(Перечисление.ТипыПредназначенияВидовЗапасов.ПредназначенДляЗаказа) ТОГДА
	|			2
	|		КОГДА ТоварыОрганизаций.ВидЗапасовВладельца.Предназначение = ЗНАЧЕНИЕ(Перечисление.ТипыПредназначенияВидовЗапасов.ПредназначенДляСделки) ТОГДА
	|			5
	|		КОГДА ТоварыОрганизаций.ВидЗапасовВладельца.Предназначение = ЗНАЧЕНИЕ(Перечисление.ТипыПредназначенияВидовЗапасов.ПредназначенДляМенеджера) ТОГДА
	|			8
	|		КОГДА ТоварыОрганизаций.ВидЗапасовВладельца.Предназначение = ЗНАЧЕНИЕ(Перечисление.ТипыПредназначенияВидовЗапасов.ПредназначенДляПодразделения) ТОГДА
	|			11
	|		КОГДА ЕСТЬNULL(ТоварыОрганизаций.ДатаПоступления, ДАТАВРЕМЯ(2399, 1, 1)) <= ТаблицаДанныхДокумента.Дата ТОГДА
	|			12
	|		ИНАЧЕ
	|			15
	|		КОНЕЦ
	|	ИНАЧЕ
	|		ВЫБОР КОГДА ТаблицаВидыЗапасов.ВидЗапасов.Предназначение = ЗНАЧЕНИЕ(Перечисление.ТипыПредназначенияВидовЗапасов.ПредназначенДляЗаказа) ТОГДА
	|			3
	|		КОГДА ТоварыОрганизаций.ВидЗапасовВладельца.Предназначение = ЗНАЧЕНИЕ(Перечисление.ТипыПредназначенияВидовЗапасов.ПредназначенДляСделки) ТОГДА
	|			6
	|		КОГДА ТоварыОрганизаций.ВидЗапасовВладельца.Предназначение = ЗНАЧЕНИЕ(Перечисление.ТипыПредназначенияВидовЗапасов.ПредназначенДляМенеджера) ТОГДА
	|			9
	|		КОГДА ТоварыОрганизаций.ВидЗапасовВладельца.Предназначение = ЗНАЧЕНИЕ(Перечисление.ТипыПредназначенияВидовЗапасов.ПредназначенДляПодразделения) ТОГДА
	|			12
	|		КОГДА ЕСТЬNULL(ТоварыОрганизаций.ДатаПоступления, ДАТАВРЕМЯ(2399, 1, 1)) <= ТаблицаДанныхДокумента.Дата ТОГДА
	|			13
	|		ИНАЧЕ
	|			16
	|		КОНЕЦ
	|	КОНЕЦ КАК Приоритет,
	|	ВЫБОР КОГДА Не &ИспользоватьРаздельныйУчетПоНалогообложению ТОГДА
	|		0
	|	ИНАЧЕ
	|		ВЫБОР КОГДА ТоварыОрганизаций.ВидЗапасовВладельца.НалогообложениеНДС = ТаблицаДанныхДокумента.НалогообложениеНДС ТОГДА
	|			1
	|		ИНАЧЕ
	|			2
	|		КОНЕЦ
	|	КОНЕЦ КАК ПриоритетЕНВД,
	|	ТаблицаДокумента.НомерСтроки КАК НомерСтроки,
	|	ТаблицаДокумента.Склад КАК Склад,
	|	ТаблицаДокумента.Сделка КАК Сделка,
	|	ТаблицаДокумента.Назначение КАК Назначение,
	|	ТаблицаДокумента.Номенклатура КАК Номенклатура,
	|	ТаблицаДокумента.ЭтоПодакцизныйТовар КАК ЭтоПодакцизныйТовар,
	|	ТаблицаДокумента.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|	ТаблицаДокумента.Характеристика КАК Характеристика,
	|	ТаблицаДокумента.Количество КАК Количество,
	|	ТаблицаДокумента.СуммаСНДС КАК СуммаСНДС,
	|	ТаблицаДокумента.СтавкаНДС КАК СтавкаНДС,
	|	ТаблицаДокумента.СуммаНДС КАК СуммаНДС,
	|	ТаблицаДокумента.СуммаВознаграждения КАК СуммаВознаграждения,
	|	ТаблицаДокумента.СуммаНДСВознаграждения КАК СуммаНДСВознаграждения,
	|
	|	99999 КАК НомерСтрокиВидыЗапасов,
	|	ЕСТЬNULL(ТоварыОрганизаций.ВидЗапасов, Неопределено) КАК ВидЗапасов,
	|	ЕСТЬNULL(ТоварыОрганизаций.ВидЗапасовВладельца, Неопределено) КАК ВидЗапасовВладельца,
	|	ЕСТЬNULL(ТоварыОрганизаций.ВидЗапасовПолучателя, Неопределено) КАК ВидЗапасовПолучателя,
	|	ЕСТЬNULL(ТоварыОрганизаций.ВидЗапасовОтгрузки, Неопределено) КАК ВидЗапасовОтгрузки,
	|	ЕСТЬNULL(ТоварыОрганизаций.РеализацияЗапасовДругойОрганизации, Ложь) КАК РеализацияЗапасовДругойОрганизации,
	|	ЕСТЬNULL(ТоварыОрганизаций.НомерГТД, Неопределено) КАК НомерГТД,
	|	ВЫБОР КОГДА ТаблицаДокумента.ВестиУчетПоГТД
	|   	И &ЗапретитьОформлениеОперацийСИмпортнымиТоварамиБезНомеровГТД
	|		И (ТоварыОрганизаций.НомерГТД = ЗНАЧЕНИЕ(Справочник.НомераГТД.ПустаяСсылка) ИЛИ ТоварыОрганизаций.НомерГТД ЕСТЬ NULL)
	|	ТОГДА
	|		Истина
	|	ИНАЧЕ
	|		Ложь
	|	КОНЕЦ КАК НеУказанНомерГТД,
	|
	|	ЕСТЬNULL(ТоварыОрганизаций.ДатаПоступления, ДАТАВРЕМЯ(2399, 1, 1)) КАК ДатаПоступления,
	|	ЕСТЬNULL(ТоварыОрганизаций.СкладОтгрузки, Неопределено) КАК СкладОтгрузки,
	|	ЕСТЬNULL(ТоварыОрганизаций.ДокументРеализации, Неопределено) КАК ДокументРеализации,
	|
	|	0 КАК КоличествоВидыЗапасов,
	|	ЕСТЬNULL(ТоварыОрганизаций.КоличествоОстаток, 0) КАК КоличествоОстаток,
	|	ЕСТЬNULL(ТоварыОрганизаций.СуммаОстаток, 0) КАК СуммаОстаток
	|ИЗ
	|	ТаблицаДокумента КАК ТаблицаДокумента
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		ТаблицаДанныхДокумента КАК ТаблицаДанныхДокумента
	|	ПО
	|		Истина
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		ТаблицаОстатков КАК ТоварыОрганизаций
	|	ПО
	|		ТаблицаДокумента.Склад = ТоварыОрганизаций.Склад
	|		И ТаблицаДокумента.Номенклатура = ТоварыОрганизаций.Номенклатура
	|		И ТаблицаДокумента.Характеристика = ТоварыОрганизаций.Характеристика
	|		И (ТаблицаДокумента.ДокументРеализации = ТоварыОрганизаций.ДокументРеализации
	|			ИЛИ ТаблицаДокумента.ДокументРеализации = НЕОПРЕДЕЛЕНО)
	|		И (Не ТаблицаДанныхДокумента.ЕстьСделкиВТабличнойЧасти
	|			ИЛИ ТаблицаДокумента.Сделка = ТоварыОрганизаций.Сделка
	|			ИЛИ ТоварыОрганизаций.Сделка = ЗНАЧЕНИЕ(Справочник.СделкиСКлиентами.ПустаяСсылка)
	|			)
	|		И ТаблицаДокумента.Назначение = ТоварыОрганизаций.Назначение
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		ТаблицаВидыЗапасов КАК ТаблицаВидыЗапасов
	|	ПО
	|		(ТаблицаДокумента.Склад = ТаблицаВидыЗапасов.Склад ИЛИ ТаблицаВидыЗапасов.Склад = ЗНАЧЕНИЕ(Справочник.Склады.ПустаяСсылка))
	|		И ТаблицаДокумента.Сделка = ТаблицаВидыЗапасов.Сделка
	|		И ТаблицаДокумента.Номенклатура = ТаблицаВидыЗапасов.Номенклатура
	|		И ТаблицаДокумента.Характеристика = ТаблицаВидыЗапасов.Характеристика
	|		И ТоварыОрганизаций.ВидЗапасов = ТаблицаВидыЗапасов.ВидЗапасов
	|		И ТоварыОрганизаций.НомерГТД = ТаблицаВидыЗапасов.НомерГТД
	|		И ТоварыОрганизаций.ДокументРеализации = ТаблицаВидыЗапасов.ДокументРеализации
	|ГДЕ
	|	ТаблицаВидыЗапасов.ВидЗапасов ЕСТЬ NULL
	|
	|УПОРЯДОЧИТЬ ПО
	|	Приоритет Возр,
	|	ПриоритетЕНВД Возр,
	|	НомерСтроки Возр,
	|	НомерСтрокиВидыЗапасов Возр,
	|	ДатаПоступления Возр
	|
	|ИТОГИ
	|	МАКСИМУМ(Количество),
	|	МАКСИМУМ(СуммаСНДС),
	|	МАКСИМУМ(СтавкаНДС),
	|	МАКСИМУМ(СуммаНДС),
	|	МАКСИМУМ(СуммаВознаграждения),
	|	МАКСИМУМ(СуммаНДСВознаграждения),
	|	СУММА(КоличествоВидыЗапасов),
	|	СУММА(КоличествоОстаток)
	|ПО
	|	НомерСтроки
	|");
	Запрос.УстановитьПараметр("ИспользоватьРаздельныйУчетПоНалогообложению", ПолучитьФункциональнуюОпцию("ИспользоватьРаздельныйУчетПоНалогообложению"));
	Запрос.УстановитьПараметр("ФормироватьВидыЗапасовПоСделкам", ПолучитьФункциональнуюОпцию("ФормироватьВидыЗапасовПоСделкам"));
	Запрос.УстановитьПараметр("ЗапретитьОформлениеОперацийСИмпортнымиТоварамиБезНомеровГТД", ПолучитьФункциональнуюОпцию("ЗапретитьОформлениеОперацийСИмпортнымиТоварамиБезНомеровГТД"));
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	
	Возврат Запрос;
	
КонецФункции

// Процедура удаляет некорректные строки в таблице видов запасов.
//
// Параметры:
//	МенеджерВременныхТаблиц - Менеджер временных таблиц
//	ТаблицаВидыЗапасов - ТаблицаЗначений - таблица видов запасов
//
Процедура УдалитьНекорректныеСтрокиВидовЗапасов(МенеджерВременныхТаблиц, ТаблицаВидыЗапасов)
	
	// Удалим ВидыЗапасов, не соответствующие табличной части Товары.
	Запрос = Новый Запрос("
	|ВЫБРАТЬ
	|	ТаблицаВидыЗапасов.НомерСтроки КАК НомерСтроки
	|ИЗ
	|	ТаблицаВидыЗапасов КАК ТаблицаВидыЗапасов
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		ТаблицаДокумента КАК ТаблицаДокумента
	|	ПО
	|		ТаблицаДокумента.Номенклатура = ТаблицаВидыЗапасов.Номенклатура
	|		И ТаблицаДокумента.Характеристика = ТаблицаВидыЗапасов.Характеристика
	|		И ТаблицаДокумента.Склад = ТаблицаВидыЗапасов.Склад
	|		И ТаблицаДокумента.Сделка = ТаблицаВидыЗапасов.Сделка
	|		И ТаблицаДокумента.Назначение = ТаблицаВидыЗапасов.ВидЗапасов.Назначение
	|		И (ТаблицаДокумента.ДокументРеализации = ТаблицаВидыЗапасов.ДокументРеализации
	|			ИЛИ ТаблицаДокумента.ДокументРеализации = НЕОПРЕДЕЛЕНО)
	|
	|ГДЕ
	|	ТаблицаДокумента.Номенклатура ЕСТЬ NULL
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки Убыв
	|");
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		СтрокаТаблицы = ТаблицаВидыЗапасов.Найти(Выборка.НомерСтроки, "НомерСтроки");
		Если СтрокаТаблицы <> Неопределено Тогда 
			ТаблицаВидыЗапасов.Удалить(СтрокаТаблицы);
		КонецЕсли;
	КонецЦикла;
	
	// Удалим строки видов запасов с нулевым количеством.
	СтруктураОтбора = Новый Структура("Количество", 0);
	МассивСтрок = ТаблицаВидыЗапасов.НайтиСтроки(СтруктураОтбора);
	Для Каждого СтрокаТаблицы Из МассивСтрок Цикл
		ТаблицаВидыЗапасов.Удалить(СтрокаТаблицы);
	КонецЦикла;
	
КонецПроцедуры // УдалитьНекорректныеСтрокиВидовЗапасов()

////////////////////////////////////////////////////////////////////////////////
// Процедуры записи движений в регистр.

Процедура ВыгрузитьГрафикДоступностьТоваровПоСкладу(МассивСкладов)

	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ТекущаяДата",   НачалоДня(ТекущаяДата()));
	Запрос.УстановитьПараметр("МассивСкладов", МассивСкладов);

	Запрос.Текст = 
	"
	|ВЫБРАТЬ
	|	Таблица.Период            КАК Период,
	|	Таблица.Номенклатура      КАК Номенклатура,
	|	Таблица.Характеристика    КАК Характеристика,
	|	Таблица.Склад             КАК Склад,
	|	СУММА(Таблица.Количество) КАК Количество
	|ИЗ
	|	(ВЫБРАТЬ
	|		НАЧАЛОПЕРИОДА(График.Период, ДЕНЬ)      КАК Период,
	|		График.Номенклатура                     КАК Номенклатура,
	|		График.Характеристика                   КАК Характеристика,
	|		График.Склад                            КАК Склад,
	|		График.КоличествоКонечныйОстаток
	|		 + ЕСТЬNULL(Остатки.ВНаличииОстаток, 0) КАК Количество
	|	ИЗ
	|		РегистрНакопления.ГрафикДвиженияТоваров.ОстаткиИОбороты(
	|				КОНЕЦПЕРИОДА(&ТекущаяДата, ДЕНЬ),
	|				,
	|				День,
	|				ДвиженияИГраницыПериода,
	|				Склад В (&МассивСкладов)
	|			) КАК График
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.СвободныеОстатки.Остатки(,
	|				Склад В (&МассивСкладов)
	|			) КАК Остатки
	|			ПО График.Номенклатура      = Остатки.Номенклатура
	|				И График.Характеристика = Остатки.Характеристика
	|				И График.Склад          = Остатки.Склад
	|				И (НАЧАЛОПЕРИОДА(График.Период, ДЕНЬ) > НАЧАЛОПЕРИОДА(&ТекущаяДата, ДЕНЬ))
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.НастройкаКонтроляОстатков КАК НастройкаХарактеристика
	|		ПО График.Склад = НастройкаХарактеристика.Склад
	|			И График.Номенклатура = НастройкаХарактеристика.Номенклатура
	|			И График.Характеристика = НастройкаХарактеристика.Характеристика
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.НастройкаКонтроляОстатков КАК НастройкаНоменклатура
	|		ПО График.Склад = НастройкаНоменклатура.Склад
	|			И График.Номенклатура = НастройкаНоменклатура.Номенклатура
	|			И (НастройкаНоменклатура.Характеристика = ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка))
	|			И (НастройкаХарактеристика.Склад ЕСТЬ NULL )
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.НастройкаКонтроляОстатков КАК НастройкаСклад
	|		ПО График.Склад = НастройкаСклад.Склад
	|			И (НастройкаСклад.Номенклатура = ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка))
	|			И (НастройкаСклад.Характеристика = ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка))
	|			И (НастройкаХарактеристика.Склад ЕСТЬ NULL )
	|			И (НастройкаНоменклатура.Склад ЕСТЬ NULL )
	|	ГДЕ
	|		ВЫБОР
	|				КОГДА ЕСТЬNULL(НастройкаХарактеристика.ВариантКонтроля, ЕСТЬNULL(НастройкаНоменклатура.ВариантКонтроля, НастройкаСклад.ВариантКонтроля)) = ЗНАЧЕНИЕ(Перечисление.ВариантыКонтроля.ОстаткиСУчетомГрафика)
	|					ТОГДА ВЫБОР
	|							КОГДА (НЕ НастройкаХарактеристика.ВариантКонтроля ЕСТЬ NULL )
	|								ТОГДА ВЫБОР
	|										КОГДА НастройкаХарактеристика.ГраницаГрафикаДоступности >= &ТекущаяДата
	|											ТОГДА График.Период <= НастройкаХарактеристика.ГраницаГрафикаДоступности
	|										КОГДА НастройкаХарактеристика.СрокПоставки > 0
	|											ТОГДА График.Период <= ДОБАВИТЬКДАТЕ(&ТекущаяДата, ДЕНЬ, НастройкаХарактеристика.СрокПоставки - 1)
	|										ИНАЧЕ ЛОЖЬ
	|									КОНЕЦ
	|							КОГДА (НЕ НастройкаНоменклатура.ВариантКонтроля ЕСТЬ NULL )
	|								ТОГДА ВЫБОР
	|										КОГДА НастройкаНоменклатура.ГраницаГрафикаДоступности >= &ТекущаяДата
	|											ТОГДА График.Период <= НастройкаНоменклатура.ГраницаГрафикаДоступности
	|										КОГДА НастройкаНоменклатура.СрокПоставки > 0
	|											ТОГДА График.Период <= ДОБАВИТЬКДАТЕ(&ТекущаяДата, ДЕНЬ, НастройкаНоменклатура.СрокПоставки - 1)
	|										ИНАЧЕ ЛОЖЬ
	|									КОНЕЦ
	|							ИНАЧЕ ВЫБОР
	|									КОГДА НастройкаСклад.ГраницаГрафикаДоступности >= &ТекущаяДата
	|										ТОГДА График.Период <= НастройкаСклад.ГраницаГрафикаДоступности
	|									КОГДА НастройкаСклад.СрокПоставки > 0
	|										ТОГДА График.Период <= ДОБАВИТЬКДАТЕ(&ТекущаяДата, ДЕНЬ, НастройкаСклад.СрокПоставки - 1)
	|									ИНАЧЕ ЛОЖЬ
	|								КОНЕЦ
	|						КОНЕЦ
	|				ИНАЧЕ ЛОЖЬ
	|			КОНЕЦ
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		НАЧАЛОПЕРИОДА(&ТекущаяДата, ДЕНЬ),
	|		Остатки.Номенклатура,
	|		Остатки.Характеристика,
	|		Остатки.Склад,
	|		Остатки.ВНаличииОстаток
	|	ИЗ
	|		РегистрНакопления.СвободныеОстатки.Остатки(, Склад В (&МассивСкладов)) КАК Остатки
	|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.НастройкаКонтроляОстатков КАК НастройкаХарактеристика
	|			ПО Остатки.Склад = НастройкаХарактеристика.Склад
	|				И Остатки.Номенклатура = НастройкаХарактеристика.Номенклатура
	|				И Остатки.Характеристика = НастройкаХарактеристика.Характеристика
	|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.НастройкаКонтроляОстатков КАК НастройкаНоменклатура
	|			ПО Остатки.Склад = НастройкаНоменклатура.Склад
	|				И Остатки.Номенклатура = НастройкаНоменклатура.Номенклатура
	|				И (НастройкаНоменклатура.Характеристика = ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка))
	|				И (НастройкаХарактеристика.Склад ЕСТЬ NULL )
	|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.НастройкаКонтроляОстатков КАК НастройкаСклад
	|			ПО Остатки.Склад = НастройкаСклад.Склад
	|				И (НастройкаСклад.Номенклатура = ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка))
	|				И (НастройкаСклад.Характеристика = ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка))
	|				И (НастройкаХарактеристика.Склад ЕСТЬ NULL )
	|				И (НастройкаНоменклатура.Склад ЕСТЬ NULL )
	|	ГДЕ
	|		ЕСТЬNULL(НастройкаХарактеристика.ВариантКонтроля, ЕСТЬNULL(НастройкаНоменклатура.ВариантКонтроля, НастройкаСклад.ВариантКонтроля)) = ЗНАЧЕНИЕ(Перечисление.ВариантыКонтроля.ОстаткиСУчетомГрафика)
	|	) КАК Таблица
	|
	|СГРУППИРОВАТЬ ПО
	|	Таблица.Характеристика,
	|	Таблица.Период,
	|	Таблица.Склад,
	|	Таблица.Номенклатура
	|
	|УПОРЯДОЧИТЬ ПО
	|	Склад,
	|	Номенклатура,
	|	Характеристика,
	|	Период УБЫВ // Обязательно по убыванию.
	|";
	НаборЗаписей = РегистрыСведений.ДоступностьТоваровДляВнешнихПользователей.СоздатьНаборЗаписей();

	Выборка    = Запрос.Выполнить().Выбрать();
	ЕстьЗаписи = Выборка.Следующий();
	Пока ЕстьЗаписи Цикл

		ТекСклад          = Выборка.Склад;
		ТекНоменклатура   = Выборка.Номенклатура;
		ТекХарактеристика = Выборка.Характеристика;

		ИзмениласьЗапись = Ложь;
		МинКоличество    = Выборка.Количество;

		Запись = Неопределено;

		// Цикл по одному сочетанию номенклатура\склад\характеристика.
		Пока Не ИзмениласьЗапись Цикл

			Если МинКоличество > Выборка.Количество Тогда
				МинКоличество = Выборка.Количество;
			КонецЕсли;

			// Добавляется новая запись если:
			// - первый заход в цикл.
			// - изменилось количество свободного товара.
			Если Запись = Неопределено Или МинКоличество <> Запись.Доступно Тогда

				Запись = НаборЗаписей.Добавить();
				ЗаполнитьЗначенияСвойств(Запись, Выборка, "Период, Номенклатура, Характеристика, Склад");
				Запись.Доступно = МинКоличество;

			// Товар становится доступен раньше.
			ИначеЕсли МинКоличество = Запись.Доступно Тогда

				Запись.Период = Выборка.Период;

			КонецЕсли;

			// Переход к следующей записи в выборке.
			ЕстьЗаписи       = Выборка.Следующий();
			ИзмениласьЗапись = Не ЕстьЗаписи Или (Выборка.Номенклатура <> ТекНоменклатура
					Или Выборка.Склад <> ТекСклад Или Выборка.Характеристика <> ТекХарактеристика);
		КонецЦикла;

	КонецЦикла;

	Если НаборЗаписей.Модифицированность() Тогда
		НаборЗаписей.Записать(Ложь);
	КонецЕсли;

КонецПроцедуры

Процедура ВыгрузитьОстаткиПоСкладу(МассивСкладов)

	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("НачалоПериода", НачалоДня(ТекущаяДата()));
	Запрос.УстановитьПараметр("МассивСкладов", МассивСкладов);

	Запрос.Текст = 
	"ВЫБРАТЬ
	|	НачалоПериода(&НачалоПериода, День)КАК Период,
	|	Остатки.Номенклатура               КАК Номенклатура,
	|	Остатки.Характеристика             КАК Характеристика,
	|	Остатки.Склад                      КАК Склад,
	|	Остатки.ВНаличииОстаток
	|	 - ВЫБОР
	|			КОГДА ЕСТЬNULL(НастройкаХарактеристика.ВариантКонтроля, ЕСТЬNULL(НастройкаНоменклатура.ВариантКонтроля, НастройкаСклад.ВариантКонтроля)) = ЗНАЧЕНИЕ(Перечисление.ВариантыКонтроля.ОстаткиСУчетомРезерва) ТОГДА
	|				Остатки.ВРезервеОстаток
	|			ИНАЧЕ 0
	|		КОНЕЦ                          КАК Доступно
	|ИЗ
	|	РегистрНакопления.СвободныеОстатки.Остатки(,
	|			Склад В (&МассивСкладов)
	|	) КАК Остатки
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.НастройкаКонтроляОстатков КАК НастройкаХарактеристика
	|		ПО Остатки.Склад = НастройкаХарактеристика.Склад
	|			И Остатки.Номенклатура = НастройкаХарактеристика.Номенклатура
	|			И Остатки.Характеристика = НастройкаХарактеристика.Характеристика
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.НастройкаКонтроляОстатков КАК НастройкаНоменклатура
	|		ПО Остатки.Склад = НастройкаНоменклатура.Склад
	|			И Остатки.Номенклатура = НастройкаНоменклатура.Номенклатура
	|			И (НастройкаНоменклатура.Характеристика = ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка))
	|			И (НастройкаХарактеристика.Склад ЕСТЬ NULL )
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.НастройкаКонтроляОстатков КАК НастройкаСклад
	|		ПО Остатки.Склад = НастройкаСклад.Склад
	|			И (НастройкаСклад.Номенклатура = ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка))
	|			И (НастройкаСклад.Характеристика = ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка))
	|			И (НастройкаХарактеристика.Склад ЕСТЬ NULL )
	|			И (НастройкаНоменклатура.Склад ЕСТЬ NULL )
	|ГДЕ
	|	ЕСТЬNULL(НастройкаХарактеристика.ВариантКонтроля, ЕСТЬNULL(НастройкаНоменклатура.ВариантКонтроля, НастройкаСклад.ВариантКонтроля)) <> ЗНАЧЕНИЕ(Перечисление.ВариантыКонтроля.ОстаткиСУчетомГрафика)
	|	И Остатки.ВНаличииОстаток >
	|		ВЫБОР
	|			КОГДА Остатки.Склад.ВариантКонтроля = Значение(Перечисление.ВариантыКонтроля.ОстаткиСУчетомРезерва) ТОГДА
	|				Остатки.ВРезервеОстаток
	|			ИНАЧЕ 0
	|		КОНЕЦ
	|
	|УПОРЯДОЧИТЬ ПО
	|	Склад
	|";
	НаборЗаписей = РегистрыСведений.ДоступностьТоваровДляВнешнихПользователей.СоздатьНаборЗаписей();

	Выборка  = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл

		Запись = НаборЗаписей.Добавить();
		ЗаполнитьЗначенияСвойств(Запись, Выборка, "Период, Номенклатура, Характеристика, Склад, Доступно");

	КонецЦикла;

	Если НаборЗаписей.Модифицированность() Тогда
		НаборЗаписей.Записать(Ложь);
	КонецЕсли;

КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// Преобразование типов данных

Функция Массив(ЭлементИлиМассив)
	
	Если Тип("Массив") <> ТипЗнч(ЭлементИлиМассив) Тогда
		Массив = Новый Массив;
		Массив.Добавить(ЭлементИлиМассив);
	Иначе
		Массив = ЭлементИлиМассив;
	КонецЕсли;
	Возврат Массив;
	
КонецФункции
