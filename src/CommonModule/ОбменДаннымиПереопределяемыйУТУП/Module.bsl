////////////////////////////////////////////////////////////////////////////////
// ПРОГРАММНЫЙ ИНТЕРФЕЙС

//Создает список доступных для создания планов обмена
Процедура ПолучитьСписокПлановОбмена(ПланыОбменаПодсистемы) Экспорт
	
	ЭтоБазоваяВерсия = СтандартныеПодсистемыПереопределяемый.ЭтоБазоваяВерсияКонфигурации();
	
	ПланыОбменаПодсистемы.Добавить(Метаданные.ПланыОбмена.ОбменУправлениеТорговлей_11_0_РозничнаяТорговля_1_0);
	ПланыОбменаПодсистемы.Добавить(Метаданные.ПланыОбмена.ОбменУправлениеТорговлейБухгалтерияПредприятия);
	ПланыОбменаПодсистемы.Добавить(Метаданные.ПланыОбмена.ОбменУправлениеТорговлейБухгалтерияПредприятия30);
	Если НЕ ЭтоБазоваяВерсия Тогда
		ПланыОбменаПодсистемы.Добавить(Метаданные.ПланыОбмена.ОбменУправлениеТорговлейБухгалтерияПредприятияКОРП);
	КонецЕсли;
	ПланыОбменаПодсистемы.Добавить(Метаданные.ПланыОбмена.ОбменУправлениеТорговлейРозница);
	Если НЕ ЭтоБазоваяВерсия Тогда
		ПланыОбменаПодсистемы.Добавить(Метаданные.ПланыОбмена.Полный);
	КонецЕсли;
	
	
КонецПроцедуры

//Возвращает признак доступности плана обмена, для базовой или проф версии
Функция ПроверкаВозможностиСозданияУзлаОбмена(ПланОбмена) Экспорт
	
	Если СтандартныеПодсистемыПереопределяемый.ЭтоБазоваяВерсияКонфигурации() Тогда
		Возврат ДоступностьПланаОбменаВБазовойВерсии(ПланОбмена.Имя);
	КонецЕсли;

	Возврат Истина;
	
КонецФункции

Процедура РегистрацияИзмененияДляНачальнойВыгрузки(Получатель, СтандартнаяОбработка, Отбор) Экспорт
	
	Если ТипЗнч(Получатель) = Тип("ПланОбменаСсылка.ОбменУправлениеТорговлей_11_0_РозничнаяТорговля_1_0")
		ИЛИ ТипЗнч(Получатель) = Тип("ПланОбменаСсылка.ОбменУправлениеТорговлейБухгалтерияПредприятия")
		ИЛИ ТипЗнч(Получатель) = Тип("ПланОбменаСсылка.ОбменУправлениеТорговлейБухгалтерияПредприятия30")
		ИЛИ ТипЗнч(Получатель) = Тип("ПланОбменаСсылка.ОбменУправлениеТорговлейБухгалтерияПредприятияКОРП")
		ИЛИ ТипЗнч(Получатель) = Тип("ПланОбменаСсылка.ОбменУправлениеТорговлейРозница") Тогда
		
		СтандартнаяОбработка = Ложь;
		
		ЗначенияРеквизитов = ОбщегоНазначения.ПолучитьЗначенияРеквизитов(Получатель, "ИспользоватьОтборПоОрганизациям, ДатаНачалаВыгрузкиДокументов, Организации");
		
		Организации = ?(ЗначенияРеквизитов.ИспользоватьОтборПоОрганизациям, ЗначенияРеквизитов.Организации.Выгрузить().ВыгрузитьКолонку("Организация"), Неопределено);
		
		Если ТипЗнч(Получатель) = Тип("ПланОбменаСсылка.ОбменУправлениеТорговлейБухгалтерияПредприятия")
			ИЛИ ТипЗнч(Получатель) = Тип("ПланОбменаСсылка.ОбменУправлениеТорговлейБухгалтерияПредприятия30")
			ИЛИ ТипЗнч(Получатель) = Тип("ПланОбменаСсылка.ОбменУправлениеТорговлейБухгалтерияПредприятияКОРП") Тогда
			
			ОбменДаннымиСобытияУТУП.ЗарегистрироватьДанныеПоДатеНачалаВыгрузкиИОрганизациям(Получатель, ЗначенияРеквизитов.ДатаНачалаВыгрузкиДокументов, Организации, Отбор);
			
		Иначе
			ОбменДаннымиСервер.ЗарегистрироватьДанныеПоДатеНачалаВыгрузкиИОрганизациям(Получатель, ЗначенияРеквизитов.ДатаНачалаВыгрузкиДокументов, Организации, Отбор);
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

// Возвращает признак наличия действующих обменов, использующих формирование договоров по заказам.
// 
// Возвращаемое значение:
//  Булево - признак наличия узлов
//
Функция ЕстьОбменыСФормированиемДоговоровПоЗаказам() Экспорт
	
	Запрос = Новый Запрос(
		"ВЫБРАТЬ
		|	Обмены.Ссылка
		|ИЗ
		|	ПланОбмена.ОбменУправлениеТорговлейБухгалтерияПредприятия КАК Обмены
		|ГДЕ
		|	Обмены.ПометкаУдаления = ЛОЖЬ
		|	И Обмены.ПравилаСозданияДоговоровКонтрагентов = ""ПоЗаказам""
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	Обмены.Ссылка
		|ИЗ
		|	ПланОбмена.ОбменУправлениеТорговлейБухгалтерияПредприятия30 КАК Обмены
		|ГДЕ
		|	Обмены.ПометкаУдаления = ЛОЖЬ
		|	И Обмены.ПравилаСозданияДоговоровКонтрагентов = ""ПоЗаказам""
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	Обмены.Ссылка
		|ИЗ
		|	ПланОбмена.ОбменУправлениеТорговлейБухгалтерияПредприятияКОРП КАК Обмены
		|ГДЕ
		|	Обмены.ПометкаУдаления = ЛОЖЬ
		|	И Обмены.ПравилаСозданияДоговоровКонтрагентов = ""ПоЗаказам""");
	
	Возврат Не Запрос.Выполнить().Пустой();
	
КонецФункции

////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

//Возвращает признак доступности плана обмена в базовой версии
Функция ДоступностьПланаОбменаВБазовойВерсии(ИмяПланаОбмена,СообщатьПользователю = Истина)
	
	КоличествоУзловПланаОбмена = 1;
	СписокДоступныхПлановОбмена = ОбменДаннымиПовтИсп.ПланыОбменаБСП();
	
	Если СписокДоступныхПлановОбмена.Найти(ИмяПланаОбмена) <> Неопределено
		И ОбменДаннымиСобытия.ВсеУзлыПланаОбмена(ИмяПланаОбмена).Количество() < КоличествоУзловПланаОбмена Тогда
		Возврат Истина;
	Иначе
		Если СообщатьПользователю тогда
			Сообщение = Новый СообщениеПользователю;
			Сообщение.Текст = НСтр("ru='Используются ограничения базовой версии. Выбранный план обмена создать невозможно.'");
			Сообщение.Сообщить();
		КонецЕсли;
		Возврат Ложь;
	КонецЕсли;
	
КонецФункции
