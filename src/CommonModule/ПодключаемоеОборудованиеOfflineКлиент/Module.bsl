////////////////////////////////////////////////////////////////////////////////
// ПРОГРАММНЫЙ ИНТЕРФЕЙС

////////////////////////////////////////////////////////////////////////////////
// Функции работы с весами с печатью этикеток.

// Функция выгружает измененные данные в весы с печатью этикеток.
//
// Параметры:
//  МассивУстройств          - Массив <СправочникСсылка.ПодключаемоеОборудование> ссылок на устройства в которые
//                             выгрузить изменения.
//  ТекстСообщения           - <Строка> Сообщение об ошибке при выгрузке данных
//  ПоказыватьПредупреждение - <Булево> Флаг, определяющий возможность показа предупреждения об окончании действия
//
// Возвращаемое значение:
//  <Число> - Количество устройств, выгрузка в которые произведена успешно.
//
Функция ВыгрузитьТоварыВВесы(МассивУстройств, ТекстСообщения = "", ПоказыватьПредупреждение = Истина) Экспорт
	
	Состояние(НСтр("ru = 'Выполняется выгрузка товаров в весы с печатью этикеток...'"));
	
	Выполнено          = 0;
	ТребуетсяВыполнить = МассивУстройств.Количество();
	
	ОписаниеОшибок = "";
	
	Для Каждого ИдентификаторУстройства Из МассивУстройств Цикл
		
		ОписаниеОшибки     = "";
		ИдентификаторКлиента = Новый УникальныйИдентификатор;
		Результат = МенеджерОборудованияКлиент.ПодключитьОборудованиеПоИдентификатору(ИдентификаторКлиента, ИдентификаторУстройства, ОписаниеОшибки);
		
		Если Результат Тогда
			
			СтруктураДанные = ПодключаемоеОборудованиеOfflineВызовСервера.ПолучитьДанныеДляВесов(ИдентификаторУстройства, Истина);
			Если СтруктураДанные.Данные.Количество() = 0 Тогда
				Результат = Ложь;
				Если СтруктураДанные.КоличествоНеВыгруженныхСтрокСОшибками = 0 Тогда
					ОписаниеОшибок = СформироватьОписаниеОшибкиДляУстройства(ИдентификаторУстройства, Неопределено, ОписаниеОшибок, НСтр("ru = 'Нет данных для выгрузки!'"));
				Иначе
					ОписаниеОшибок = СформироватьОписаниеОшибкиДляУстройства(ИдентификаторУстройства, Неопределено, ОписаниеОшибок, СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = 'Данные не выгружены. Обнаружено ошибок: %1'"), СтруктураДанные.КоличествоНеВыгруженныхСтрокСОшибками));
				КонецЕсли;
				МенеджерОборудованияКлиент.ОтключитьОборудованиеПоИдентификатору(ИдентификаторКлиента, ИдентификаторУстройства);
				Продолжить;
			КонецЕсли;
			
			ВходныеПараметры  = Новый Массив;
			ВходныеПараметры.Добавить(СтруктураДанные.Данные);
			ВходныеПараметры.Добавить(СтруктураДанные.ЧастичнаяВыгрузка); // Частичная выгрузка.
			ВыходныеПараметры = Неопределено;
			
			Результат = МенеджерОборудованияКлиент.ВыполнитьКоманду(ИдентификаторУстройства,
			                                                        "ВыгрузитьТовары",
			                                                        ВходныеПараметры,
			                                                        ВыходныеПараметры
			);
			
			Если Не Результат Тогда
				ОписаниеОшибок = СформироватьОписаниеОшибкиДляУстройства(ИдентификаторУстройства, ВыходныеПараметры, ОписаниеОшибок, ОписаниеОшибки);
			Иначе
				Выполнено = Выполнено + 1;
				Если СтруктураДанные.КоличествоНеВыгруженныхСтрокСОшибками > 0 Тогда
					ОписаниеОшибок = СформироватьОписаниеОшибкиДляУстройства(ИдентификаторУстройства, Неопределено, ОписаниеОшибок, СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = 'Не выгружены данные о %1 товарах.'"), СтруктураДанные.КоличествоНеВыгруженныхСтрокСОшибками));
				КонецЕсли;
			КонецЕсли;
			
			МенеджерОборудованияКлиент.ОтключитьОборудованиеПоИдентификатору(ИдентификаторКлиента, ИдентификаторУстройства);
			
		Иначе
			ОписаниеОшибок = СформироватьОписаниеОшибкиДляУстройства(ИдентификаторУстройства, Неопределено, ОписаниеОшибок, ОписаниеОшибки);
		КонецЕсли;
		
		ПодключаемоеОборудованиеOfflineВызовСервера.ПриВыгрузкеТоваровВУстройство(ИдентификаторУстройства, СтруктураДанные, Результат);
		
	КонецЦикла;
	
	Если ТребуетсяВыполнить > 0 Тогда
		
		Если Выполнено = ТребуетсяВыполнить И Не ЗначениеЗаполнено(ОписаниеОшибок) Тогда
			ТекстСообщения = НСтр("ru = 'Товары успешно выгружены!'");
		ИначеЕсли Выполнено > 0 Тогда
			ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = 'Товары выгружены для %1 устройств из %2.'"), Выполнено, ТребуетсяВыполнить) + ОписаниеОшибок;
		Иначе
			ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = 'Выгрузить товары не удалось: %1'"), ОписаниеОшибок);
		КонецЕсли;
		
		Если ПоказыватьПредупреждение Тогда
			Предупреждение(ТекстСообщения, 10);
		КонецЕсли;
		
	Иначе
		Если ПоказыватьПредупреждение Тогда
			Предупреждение(НСтр("ru = 'Необходимо выбрать устройство, для которого требуется выгрузить товары.'"), 10);
		КонецЕсли;
	КонецЕсли;
	
	Возврат Выполнено;
	
КонецФункции

// Функция выгружает полный список товаров в весы с печатью этикеток.
//
// Параметры:
//  МассивУстройств          - Массив <СправочникСсылка.ПодключаемоеОборудование> ссылок на устройства в которые
//                             выгрузить изменения.
//  ТекстСообщения           - <Строка> Сообщение об ошибке при выгрузке данных
//  ПоказыватьПредупреждение - <Булево> Флаг, определяющий возможность показа предупреждения об окончании действия
//
// Возвращаемое значение:
//  <Число> - Количество устройств, выгрузка в которые произведена успешно.
//
Функция ВыгрузитьПолныйСписокТоваровВВесы(МассивУстройств, ТекстСообщения = "", ПоказыватьПредупреждение = Истина) Экспорт
	
	Состояние(НСтр("ru = 'Выполняется выгрузка товаров в весы с печатью этикеток...'"));
	
	Выполнено          = 0;
	ТребуетсяВыполнить = МассивУстройств.Количество();
	
	ОписаниеОшибок = "";
	
	Для Каждого ИдентификаторУстройства Из МассивУстройств Цикл
		
		ОписаниеОшибки     = "";
		ИдентификаторКлиента = Новый УникальныйИдентификатор;
		Результат = МенеджерОборудованияКлиент.ПодключитьОборудованиеПоИдентификатору(ИдентификаторКлиента, ИдентификаторУстройства, ОписаниеОшибки);
		
		Если Результат Тогда
		
			СтруктураДанные = ПодключаемоеОборудованиеOfflineВызовСервера.ПолучитьДанныеДляВесов(ИдентификаторУстройства, Ложь);
			Если СтруктураДанные.Данные.Количество() = 0 Тогда
				Результат = Ложь;
				Если СтруктураДанные.КоличествоНеВыгруженныхСтрокСОшибками = 0 Тогда
					ОписаниеОшибок = СформироватьОписаниеОшибкиДляУстройства(ИдентификаторУстройства, Неопределено, ОписаниеОшибок, НСтр("ru = 'Нет данных для выгрузки!'"));
				Иначе
					ОписаниеОшибок = СформироватьОписаниеОшибкиДляУстройства(ИдентификаторУстройства, Неопределено, ОписаниеОшибок, СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = 'Данные не выгружены. Обнаружено ошибок: %1'"), СтруктураДанные.КоличествоНеВыгруженныхСтрокСОшибками));
				КонецЕсли;
				МенеджерОборудованияКлиент.ОтключитьОборудованиеПоИдентификатору(ИдентификаторКлиента, ИдентификаторУстройства);
				Продолжить;
			КонецЕсли;
			
			ВходныеПараметры  = Новый Массив;
			ВходныеПараметры.Добавить(СтруктураДанные.Данные);
			ВходныеПараметры.Добавить(Ложь); // Частичная выгрузка.
			ВыходныеПараметры = Неопределено;
			
			Результат = МенеджерОборудованияКлиент.ВыполнитьКоманду(ИдентификаторУстройства,
			                                                        "ВыгрузитьТовары",
			                                                        ВходныеПараметры,
			                                                        ВыходныеПараметры
			);
			
			МенеджерОборудованияКлиент.ОтключитьОборудованиеПоИдентификатору(ИдентификаторКлиента, ИдентификаторУстройства);
			
			Если Не Результат Тогда
				ОписаниеОшибок = СформироватьОписаниеОшибкиДляУстройства(ИдентификаторУстройства, ВыходныеПараметры, ОписаниеОшибок, ОписаниеОшибки);
			Иначе
				Выполнено = Выполнено + 1;
			КонецЕсли;
			
		Иначе
			ОписаниеОшибок = СформироватьОписаниеОшибкиДляУстройства(ИдентификаторУстройства, Неопределено, ОписаниеОшибок, ОписаниеОшибки);
		КонецЕсли;
		
		ПодключаемоеОборудованиеOfflineВызовСервера.ПриВыгрузкеТоваровВУстройство(ИдентификаторУстройства, СтруктураДанные, Результат);
		
	КонецЦикла;
	
	Если ТребуетсяВыполнить > 0 Тогда
		
		Если Выполнено = ТребуетсяВыполнить Тогда
			ТекстСообщения = НСтр("ru = 'Товары успешно выгружены!'");
		ИначеЕсли Выполнено > 0 Тогда
			ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = 'Товары успешно выгружены для %1 устройств из %2.'"), Выполнено, ТребуетсяВыполнить) + ОписаниеОшибок;
		Иначе
			ТекстСообщения = НСтр("ru = 'Выгрузить товары не удалось:'") + ОписаниеОшибок;
		КонецЕсли;
		
		Если ПоказыватьПредупреждение Тогда
			Предупреждение(ТекстСообщения, 10);
		КонецЕсли;
		
	Иначе
		Если ПоказыватьПредупреждение Тогда
			Предупреждение(НСтр("ru = 'Необходимо выбрать устройство, для которого требуется выгрузить товары.'"), 10);
		КонецЕсли;
	КонецЕсли;
	
	Возврат Выполнено;
	
КонецФункции

// Функция очищает список товаров в весах с печатью этикеток.
//
// Параметры:
//  МассивУстройств          - Массив <СправочникСсылка.ПодключаемоеОборудование> ссылок на устройства в которых
//                             необходимо очистить список товаров.
//  ТекстСообщения           - <Строка> Сообщение об ошибке при очистке списка товаров
//  ПоказыватьПредупреждение - <Булево> Флаг, определяющий возможность показа предупреждения об окончании действия
//
// Возвращаемое значение:
//  <Число> - Количество устройств, очистка в которых произведена успешно.
//
Функция ОчиститьТоварыВВесах(МассивУстройств, ТекстСообщения = "", ПоказыватьПредупреждение = Истина) Экспорт
	
	Состояние(НСтр("ru = 'Выполняется очистка товаров в весы с печатью этикеток...'"));
	
	Выполнено          = 0;
	ТребуетсяВыполнить = МассивУстройств.Количество();
	
	ОписаниеОшибок = "";
	
	Для Каждого ИдентификаторУстройства Из МассивУстройств Цикл
		
		ОписаниеОшибки     = "";
		ИдентификаторКлиента = Новый УникальныйИдентификатор;
		Результат = МенеджерОборудованияКлиент.ПодключитьОборудованиеПоИдентификатору(ИдентификаторКлиента, ИдентификаторУстройства, ОписаниеОшибки);
		
		Если Результат Тогда
		
			ВходныеПараметры  = Неопределено;
			ВыходныеПараметры = Неопределено;
			
			Результат = МенеджерОборудованияКлиент.ВыполнитьКоманду(ИдентификаторУстройства,
			                                                        "ОчиститьБазу",
			                                                        ВходныеПараметры,
			                                                        ВыходныеПараметры
			);
			
			МенеджерОборудованияКлиент.ОтключитьОборудованиеПоИдентификатору(ИдентификаторКлиента, ИдентификаторУстройства);
			
			Если Не Результат Тогда
				ОписаниеОшибок = СформироватьОписаниеОшибкиДляУстройства(ИдентификаторУстройства, ВыходныеПараметры, ОписаниеОшибок, ОписаниеОшибки);
			Иначе
				Выполнено = Выполнено + 1;
			КонецЕсли;
			
		Иначе
			ОписаниеОшибок = СформироватьОписаниеОшибкиДляУстройства(ИдентификаторУстройства, Неопределено, ОписаниеОшибок, ОписаниеОшибки);
		КонецЕсли;
		
		ПодключаемоеОборудованиеOfflineВызовСервера.ПриОчисткеТоваровВУстройстве(ИдентификаторУстройства, Результат);
		
	КонецЦикла;
	
	Если ТребуетсяВыполнить > 0 Тогда
		
		Если Выполнено = ТребуетсяВыполнить Тогда
			ТекстСообщения = НСтр("ru = 'Товары успешно очищены!'");
		ИначеЕсли Выполнено > 0 Тогда
			ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = 'Товары успешно очищены для %1 устройств из %2.'"), Выполнено, ТребуетсяВыполнить) + ОписаниеОшибок;
		Иначе
			ТекстСообщения = НСтр("ru = 'Очистить товары не удалось:'") + ОписаниеОшибок;
		КонецЕсли;
		
		Если ПоказыватьПредупреждение Тогда
			Предупреждение(ТекстСообщения, 10);
		КонецЕсли;
		
	Иначе
		Если ПоказыватьПредупреждение Тогда
			Предупреждение(НСтр("ru = 'Необходимо выбрать устройство, для которого требуется очистить товары.'"), 10);
		КонецЕсли;
	КонецЕсли;
	
	Возврат Выполнено;
	
КонецФункции

////////////////////////////////////////////////////////////////////////////////
// Функции работы с ккм offline.

// Функция выгружает изменения данных товаров в ККМ Offline.
//
// Параметры:
//  МассивУстройств          - Массив <СправочникСсылка.ПодключаемоеОборудование> ссылок на устройства в которые
//                             выгрузить изменения.
//  ТекстСообщения           - <Строка> Сообщение об ошибке при выгрузке данных
//  ПоказыватьПредупреждение - <Булево> Флаг, определяющий возможность показа предупреждения об окончании действия
//
// Возвращаемое значение:
//  <Число> - Количество устройств, выгрузка в которые произведена успешно.
//
Функция ВыгрузитьТоварыВККМOffline(МассивУстройств, ТекстСообщения = "", ПоказыватьПредупреждение = Истина) Экспорт
	
	Состояние(НСтр("ru = 'Выполняется выгрузка товаров в ККМ Offline...'"));
	
	Выполнено          = 0;
	ТребуетсяВыполнить = МассивУстройств.Количество();
	
	ОписаниеОшибок = "";
	
	Для Каждого ИдентификаторУстройства Из МассивУстройств Цикл
		
		ОписаниеОшибки     = "";
		ИдентификаторКлиента = Новый УникальныйИдентификатор;
		Результат = МенеджерОборудованияКлиент.ПодключитьОборудованиеПоИдентификатору(ИдентификаторКлиента, ИдентификаторУстройства, ОписаниеОшибки);
		
		Если Результат Тогда
			
			СтруктураДанные = ПодключаемоеОборудованиеOfflineВызовСервера.ПолучитьДанныеДляКассы(ИдентификаторУстройства, Истина);
			Если СтруктураДанные.Данные.Количество() = 0 Тогда
				Результат = Ложь;
				Если СтруктураДанные.КоличествоНеВыгруженныхСтрокСОшибками = 0 Тогда
					ОписаниеОшибок = СформироватьОписаниеОшибкиДляУстройства(ИдентификаторУстройства, Неопределено, ОписаниеОшибок, НСтр("ru = 'Нет данных для выгрузки!'"));
				Иначе
					ОписаниеОшибок = СформироватьОписаниеОшибкиДляУстройства(ИдентификаторУстройства, Неопределено, ОписаниеОшибок, СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = 'Данные не выгружены. Обнаружено ошибок: %1'"), СтруктураДанные.КоличествоНеВыгруженныхСтрокСОшибками));
				КонецЕсли;
				МенеджерОборудованияКлиент.ОтключитьОборудованиеПоИдентификатору(ИдентификаторКлиента, ИдентификаторУстройства);
				Продолжить;
			КонецЕсли;
			
			ВходныеПараметры  = Новый Массив;
			ВходныеПараметры.Добавить(СтруктураДанные.Данные);
			ВходныеПараметры.Добавить(СтруктураДанные.ЧастичнаяВыгрузка); // Частичная выгрузка.
			ВыходныеПараметры = Неопределено;
			
			Результат = МенеджерОборудованияКлиент.ВыполнитьКоманду(ИдентификаторУстройства,
			                                                        "ВыгрузитьТовары",
			                                                        ВходныеПараметры,
			                                                        ВыходныеПараметры
			);
			
			МенеджерОборудованияКлиент.ОтключитьОборудованиеПоИдентификатору(ИдентификаторКлиента, ИдентификаторУстройства);
			
			Если Не Результат Тогда
				ОписаниеОшибок = СформироватьОписаниеОшибкиДляУстройства(ИдентификаторУстройства, ВыходныеПараметры, ОписаниеОшибок, ОписаниеОшибки);
			Иначе
				Выполнено = Выполнено + 1;
			КонецЕсли;
			
		Иначе
			ОписаниеОшибок = СформироватьОписаниеОшибкиДляУстройства(ИдентификаторУстройства, Неопределено, ОписаниеОшибок, ОписаниеОшибки);
		КонецЕсли;
		
		ПодключаемоеОборудованиеOfflineВызовСервера.ПриВыгрузкеТоваровВУстройство(ИдентификаторУстройства, СтруктураДанные, Результат);
		
	КонецЦикла;
	
	Если ТребуетсяВыполнить > 0 Тогда
		
		Если Выполнено = ТребуетсяВыполнить Тогда
			ТекстСообщения = НСтр("ru = 'Товары успешно выгружены!'");
		ИначеЕсли Выполнено > 0 Тогда
			ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = 'Товары успешно выгружены для %1 устройств из %2.'"), Выполнено, ТребуетсяВыполнить) + ОписаниеОшибок;
		Иначе
			ТекстСообщения = НСтр("ru = 'Выгрузить товары не удалось:'") + ОписаниеОшибок;
		КонецЕсли;
		
		Если ПоказыватьПредупреждение Тогда
			Предупреждение(ТекстСообщения, 10);
		КонецЕсли;
		
	Иначе
		Если ПоказыватьПредупреждение Тогда
			Предупреждение(НСтр("ru = 'Необходимо выбрать устройство, для которого требуется выгрузить товары.'"), 10);
		КонецЕсли;
	КонецЕсли;
	
	Возврат Выполнено;
	
КонецФункции

// Функция выгружает полный список товаров в ККМ Offline.
//
// Параметры:
//  МассивУстройств          - Массив <СправочникСсылка.ПодключаемоеОборудование> ссылок на устройства в которые
//                             необходимо выгрузить изменения.
//  ТекстСообщения           - <Строка> Сообщение об ошибке при выгрузке данных
//  ПоказыватьПредупреждение - <Булево> Флаг, определяющий возможность показа предупреждения об окончании действия
//
// Возвращаемое значение:
//  <Число> - Количество устройств, выгрузка в которые произведена успешно.
//
Функция ВыгрузитьПолныйСписокТоваровВККМOffline(МассивУстройств, ТекстСообщения = "", ПоказыватьПредупреждение = Истина) Экспорт
	
	Состояние(НСтр("ru = 'Выполняется выгрузка товаров в ККМ Offline...'"));
	
	Выполнено          = 0;
	ТребуетсяВыполнить = МассивУстройств.Количество();
	
	ОписаниеОшибок = "";
	
	Для Каждого ИдентификаторУстройства Из МассивУстройств Цикл
		
		ОписаниеОшибки     = "";
		ИдентификаторКлиента = Новый УникальныйИдентификатор;
		Результат = МенеджерОборудованияКлиент.ПодключитьОборудованиеПоИдентификатору(ИдентификаторКлиента, ИдентификаторУстройства, ОписаниеОшибки);
		
		Если Результат Тогда
			
			СтруктураДанные = ПодключаемоеОборудованиеOfflineВызовСервера.ПолучитьДанныеДляКассы(ИдентификаторУстройства, Ложь);
			Если СтруктураДанные.Данные.Количество() = 0 Тогда
				Результат = Ложь;
				Если СтруктураДанные.КоличествоНеВыгруженныхСтрокСОшибками = 0 Тогда
					ОписаниеОшибок = СформироватьОписаниеОшибкиДляУстройства(ИдентификаторУстройства, Неопределено, ОписаниеОшибок, НСтр("ru = 'Нет данных для выгрузки!'"));
				Иначе
					ОписаниеОшибок = СформироватьОписаниеОшибкиДляУстройства(ИдентификаторУстройства, Неопределено, ОписаниеОшибок, СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = 'Данные не выгружены. Обнаружено ошибок: %1'"), СтруктураДанные.КоличествоНеВыгруженныхСтрокСОшибками));
				КонецЕсли;
				МенеджерОборудованияКлиент.ОтключитьОборудованиеПоИдентификатору(ИдентификаторКлиента, ИдентификаторУстройства);
				Продолжить;
			КонецЕсли;
			
			ВходныеПараметры  = Новый Массив;
			ВходныеПараметры.Добавить(СтруктураДанные.Данные);
			ВходныеПараметры.Добавить(Ложь); // Частичная выгрузка.
			ВыходныеПараметры = Неопределено;
			
			Результат = МенеджерОборудованияКлиент.ВыполнитьКоманду(ИдентификаторУстройства,
			                                                        "ВыгрузитьТовары",
			                                                        ВходныеПараметры,
			                                                        ВыходныеПараметры
			);
			
			МенеджерОборудованияКлиент.ОтключитьОборудованиеПоИдентификатору(ИдентификаторКлиента, ИдентификаторУстройства);
			
			Если Не Результат Тогда
				ОписаниеОшибок = СформироватьОписаниеОшибкиДляУстройства(ИдентификаторУстройства, ВыходныеПараметры, ОписаниеОшибок, ОписаниеОшибки);
			Иначе
				Выполнено = Выполнено + 1;
			КонецЕсли;
			
		Иначе
			ОписаниеОшибок = СформироватьОписаниеОшибкиДляУстройства(ИдентификаторУстройства, Неопределено, ОписаниеОшибок, ОписаниеОшибки);
		КонецЕсли;
		
		ПодключаемоеОборудованиеOfflineВызовСервера.ПриВыгрузкеТоваровВУстройство(ИдентификаторУстройства, СтруктураДанные, Результат);
		
	КонецЦикла;
	
	Если ТребуетсяВыполнить > 0 Тогда
		
		Если Выполнено = ТребуетсяВыполнить Тогда
			ТекстСообщения = НСтр("ru = 'Товары успешно выгружены!'");
		ИначеЕсли Выполнено > 0 Тогда
			ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = 'Товары успешно выгружены для %1 устройств из %2.'"), Выполнено, ТребуетсяВыполнить) + ОписаниеОшибок;
		Иначе
			ТекстСообщения = НСтр("ru = 'Выгрузить товары не удалось:'") + ОписаниеОшибок;
		КонецЕсли;
		
		Если ПоказыватьПредупреждение Тогда
			Предупреждение(ТекстСообщения, 10);
		КонецЕсли;
		
	Иначе
		Если ПоказыватьПредупреждение Тогда
			Предупреждение(НСтр("ru = 'Необходимо выбрать устройство, для которого требуется выгрузить товары.'"), 10);
		КонецЕсли;
	КонецЕсли;
	
	Возврат Выполнено;
	
КонецФункции

// Функция очищает список товаров в ККМ Offline.
//
// Параметры:
//  МассивУстройств          - Массив <СправочникСсылка.ПодключаемоеОборудование> ссылок на устройства в которых
//                             необходимо очистить список товаров.
//  ТекстСообщения           - <Строка> Сообщение об ошибке при очистке списка товаров
//  ПоказыватьПредупреждение - <Булево> Флаг, определяющий возможность показа предупреждения об окончании действия
//
// Возвращаемое значение:
//  <Число> - Количество устройств, очистка в которых произведена успешно.
//
Функция ОчиститьТоварыВККМOffline(МассивУстройств, ТекстСообщения = "", ПоказыватьПредупреждение = Истина) Экспорт
	
	Состояние(НСтр("ru = 'Выполняется очистка товаров в весах с печатью этикеток...'"));
	
	Выполнено          = 0;
	ТребуетсяВыполнить = МассивУстройств.Количество();
	
	ОписаниеОшибок     = "";
	
	Для Каждого ИдентификаторУстройства Из МассивУстройств Цикл
		
		ОписаниеОшибки     = "";
		ИдентификаторКлиента = Новый УникальныйИдентификатор;
		Результат = МенеджерОборудованияКлиент.ПодключитьОборудованиеПоИдентификатору(ИдентификаторКлиента, ИдентификаторУстройства, ОписаниеОшибки);
		
		Если Результат Тогда
		
			ВходныеПараметры  = Неопределено;
			ВыходныеПараметры = Неопределено;
			
			Результат = МенеджерОборудованияКлиент.ВыполнитьКоманду(ИдентификаторУстройства,
			                                                        "ОчиститьБазу",
			                                                        ВходныеПараметры,
			                                                        ВыходныеПараметры
			);
			
			МенеджерОборудованияКлиент.ОтключитьОборудованиеПоИдентификатору(ИдентификаторКлиента, ИдентификаторУстройства);
			
			Если Не Результат Тогда
				ОписаниеОшибок = СформироватьОписаниеОшибкиДляУстройства(ИдентификаторУстройства, ВыходныеПараметры, ОписаниеОшибок, ОписаниеОшибки);
			Иначе
				Выполнено = Выполнено + 1;
			КонецЕсли;
			
		Иначе
			ОписаниеОшибок = СформироватьОписаниеОшибкиДляУстройства(ИдентификаторУстройства, Неопределено, ОписаниеОшибок, ОписаниеОшибки);
		КонецЕсли;
		
		ПодключаемоеОборудованиеOfflineВызовСервера.ПриОчисткеТоваровВУстройстве(ИдентификаторУстройства, Результат);
		
	КонецЦикла;
	
	Если ТребуетсяВыполнить > 0 Тогда
		
		Если Выполнено = ТребуетсяВыполнить Тогда
			ТекстСообщения = НСтр("ru = 'Товары успешно очищены!'");
		ИначеЕсли Выполнено > 0 Тогда
			ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = 'Товары успешно очищены для %1 устройств из %2. %3'"), Выполнено, ТребуетсяВыполнить, ОписаниеОшибок);
		Иначе
			ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = 'Очистить товары не удалось: %1'"), ОписаниеОшибок);
		КонецЕсли;
		
		Если ПоказыватьПредупреждение Тогда
			Предупреждение(ТекстСообщения, 10);
		КонецЕсли;
		
	Иначе
		Если ПоказыватьПредупреждение Тогда
			Предупреждение(НСтр("ru = 'Необходимо выбрать устройство, для которого требуется очистить товары.'"), 10);
		КонецЕсли;
	КонецЕсли;
	
	Возврат Выполнено;
	
КонецФункции

// Функция загружает отчет о розничных продажах из ККМ Offline.
//
// Параметры:
//  МассивУстройств          - Массив <СправочникСсылка.ПодключаемоеОборудование> ссылок на устройства из которых
//                             необходимо загрузить отчеты о розничных продажах.
//  ТекстСообщения           - <Строка> Сообщение об ошибке в результате загрузки отчетов о розничных продажах
//  ПоказыватьПредупреждение - <Булево> Флаг, определяющий возможность показа предупреждения об окончании загрузки отчетов
//
// Возвращаемое значение:
//  <Число> - Количество устройств, загрузка из которых произведена успешно.
//
Функция ЗагрузитьОтчетОРозничныхПродажах(МассивУстройств, ТекстСообщения = "", ПоказыватьПредупреждение = Истина) Экспорт
	
	Состояние(НСтр("ru = 'Выполняется загрузка отчетов о розничных продажах из ККМ Offline...'"));
	
	ОтчетыОРозничныхПродажах = Новый Массив;
	
	Выполнено          = 0;
	ТребуетсяВыполнить = МассивУстройств.Количество();
	
	ОписаниеОшибок = "";
	
	Для Каждого ИдентификаторУстройства Из МассивУстройств Цикл
		
		ОписаниеОшибки       = "";
		ИдентификаторКлиента = Новый УникальныйИдентификатор;
		Результат = МенеджерОборудованияКлиент.ПодключитьОборудованиеПоИдентификатору(ИдентификаторКлиента, ИдентификаторУстройства, ОписаниеОшибки);
		
		Если Результат Тогда
		
			ВходныеПараметры  = Новый Массив;
			ВыходныеПараметры = Неопределено;
			
			Результат = МенеджерОборудованияКлиент.ВыполнитьКоманду(ИдентификаторУстройства,
			                                                        "ЗагрузитьОтчет",
			                                                        ВходныеПараметры,
			                                                        ВыходныеПараметры
			);
			
			Если Не Результат Тогда
				ОписаниеОшибок = СформироватьОписаниеОшибкиДляУстройства(ИдентификаторУстройства, ВыходныеПараметры, ОписаниеОшибок, ОписаниеОшибки);
			Иначе
				ОтчетОРозничныхПродажах = ПодключаемоеОборудованиеOfflineВызовСервера.ПриЗагрузкеОтчетаОРозничныхПродажах(ИдентификаторУстройства, ВыходныеПараметры[0]);
				Если ЗначениеЗаполнено(ОтчетОРозничныхПродажах) Тогда
					
					ВходныеПараметры  = Неопределено;
					ВыходныеПараметры = Неопределено;
					
					Результат = МенеджерОборудованияКлиент.ВыполнитьКоманду(ИдентификаторУстройства, "ОтчетЗагружен", ВходныеПараметры, ВыходныеПараметры);
					
					ОтчетыОРозничныхПродажах.Добавить(ОтчетОРозничныхПродажах);
					Выполнено = Выполнено + 1;
					
				КонецЕсли;
			КонецЕсли;
			
			МенеджерОборудованияКлиент.ОтключитьОборудованиеПоИдентификатору(ИдентификаторКлиента, ИдентификаторУстройства);
			
		Иначе
			ОписаниеОшибок = СформироватьОписаниеОшибкиДляУстройства(ИдентификаторУстройства, Неопределено, ОписаниеОшибок, ОписаниеОшибки);
		КонецЕсли;
		
	КонецЦикла;
	
	Если ТребуетсяВыполнить > 0 Тогда
		
		Если Выполнено = ТребуетсяВыполнить Тогда
			ТекстСообщения = НСтр("ru = 'Отчеты о розничных продажах успешно загружены!'");
		ИначеЕсли Выполнено > 0 Тогда
			ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = 'Успешно загружены отчеты о розничных продажах для %1 устройств из %2.'"), Выполнено, ТребуетсяВыполнить) + ОписаниеОшибок;
		Иначе
			ТекстСообщения = НСтр("ru = 'Отчеты о розничных продажах загрузить не удалось:'") + ОписаниеОшибок;
		КонецЕсли;
		
		Для Каждого ОтчетОРозничныхПродажах Из ОтчетыОРозничныхПродажах Цикл
			ОткрытьФорму("Документ.ОтчетОРозничныхПродажах.ФормаОбъекта", Новый Структура("Ключ, ПровестиПриОткрытии", ОтчетОРозничныхПродажах, Истина));
		КонецЦикла;
		
		Если ПоказыватьПредупреждение Тогда
			Предупреждение(ТекстСообщения, 10);
		КонецЕсли;
		
	Иначе
		Если ПоказыватьПредупреждение Тогда
			Предупреждение(НСтр("ru = 'Необходимо выбрать устройство, из которого требуется загрузить отчет о розничных продажах.'"), 10);
		КонецЕсли;
	КонецЕсли;
	
	Возврат Выполнено;
	
КонецФункции

////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

Функция СформироватьОписаниеОшибкиДляУстройства(ИдентификаторУстройства, ВыходныеПараметры, ОписаниеОшибок, ОписаниеОшибки)
	
	Возврат ОписаниеОшибок
	      + Символы.ПС
	      + СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = 'Описание ошибок для устройства %1: %2'"), ИдентификаторУстройства, ОписаниеОшибки)
	      + ?(ВыходныеПараметры <> Неопределено, Символы.ПС + ВыходныеПараметры[1], "");
	
КонецФункции
