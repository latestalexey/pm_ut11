////////////////////////////////////////////////////////////////////////////////
// ПРОГРАММНЫЙ ИНТЕРФЕЙС

//Возвращает строковое представление номенклатуры с характеристикой для отображения в сообщениях
//Параметры
// 		НоменклатураПредставление - строковое предствление номенклатуры или ссылка на элемент справочника "Номенклатура"
// 		ХарактеристикаПредставление - строковое предствление характеристики или ссылка на элемент справочника "Номенклатура"
Функция ПредставлениеНоменклатуры(НоменклатураПредставление, ХарактеристикаПредставление, СерияПредставление = "") Экспорт

	СтрПредставление = СокрЛП(НоменклатураПредставление);

	Если ЗначениеЗаполнено(ХарактеристикаПредставление)Тогда
		СтрПредставление = СтрПредставление + " / " + СокрЛП(ХарактеристикаПредставление);
	КонецЕсли;
	
	Если ЗначениеЗаполнено(СерияПредставление)Тогда
		СтрПредставление = СтрПредставление + " / " + СокрЛП(СерияПредставление);
	КонецЕсли;

	Возврат СтрПредставление;

КонецФункции

// Функция возвращает представление номенклатуры для печати.
//
// Параметры:
// 		НаименованиеНоменклатуры - Строка
// 		Характеристика - Строка
// 		Упаковка - Строка
// 		Серия - Строка
// 		Содержание - Строка
//
// Возвращаемое значение:
// 		Строка - Представление номенклатуры для печати
//
Функция ПредставлениеНоменклатурыДляПечати(НаименованиеНоменклатуры,
	                                       Характеристика = Неопределено,
	                                       Упаковка = Неопределено,
	                                       Серия = Неопределено,
	                                       Содержание = Неопределено,
	                                       ВозвратнаяТара = Ложь) Экспорт
	
	ПредставлениеНоменклатуры = СокрЛП(НаименованиеНоменклатуры);
	
	Если ЗначениеЗаполнено(Содержание) Тогда
		
		ПредставлениеНоменклатуры = Содержание;
		
	ИначеЕсли ЗначениеЗаполнено(Характеристика)
		ИЛИ ЗначениеЗаполнено(Упаковка)
		ИЛИ ЗначениеЗаполнено(Серия) Тогда
		
		ТекстВСкобках = "";
		Если ЗначениеЗаполнено(Характеристика) Тогда
			ТекстВСкобках = ТекстВСкобках + ", " + Характеристика;
		КонецЕсли;
		Если ЗначениеЗаполнено(Упаковка) Тогда
			ТекстВСкобках = ТекстВСкобках + ", " + Упаковка;
		КонецЕсли;
		Если ЗначениеЗаполнено(Серия) Тогда
			ТекстВСкобках = ТекстВСкобках + ", " + Серия;
		КонецЕсли;
		
		Если ВозвратнаяТара Тогда
			ПредставлениеНоменклатуры = ПредставлениеНоменклатуры + " (" + Сред(ТекстВСкобках, 3) + НСтр("ru=', возвратная тара)'");
		Иначе
			ПредставлениеНоменклатуры = ПредставлениеНоменклатуры + " (" + Сред(ТекстВСкобках, 3) + ")";
		КонецЕсли;
		
	ИначеЕсли ВозвратнаяТара Тогда
		
		ПредставлениеНоменклатуры = ПредставлениеНоменклатуры + НСтр("ru=' (возвратная тара)'");
		
	КонецЕсли;
	
	Возврат ПредставлениеНоменклатуры;
	
КонецФункции

// Формирует массив отбора по типам номенклатуры Товар и МногооборотнаяТара
//
// Возвращаемое значение:
// Массив
//
Функция ОтборПоТоваруМногооборотнойТаре() Экспорт
	
	МассивТиповНоменклатуры = Новый Массив;
	МассивТиповНоменклатуры.Добавить(ПредопределенноеЗначение("Перечисление.ТипыНоменклатуры.Товар"));
	МассивТиповНоменклатуры.Добавить(ПредопределенноеЗначение("Перечисление.ТипыНоменклатуры.МногооборотнаяТара"));
	
	Возврат МассивТиповНоменклатуры;
	
КонецФункции

////////////////////////////////////////////////////////////////////////////////
// Процедуры работы с сериями.

// Структура параметров указания серий, возвращаемая соотвествующей процедурой модуля менеджера документа (обработки)
// Содержит свойства:
//
// ОБЯЗАТЕЛЬНЫЕ:
//	ИспользоватьСерииНоменклатуры - признак, нужно ли в документе заполнять статусы указания серий 
//	ПоляСвязиСерий - массив с именами реквизитов ТЧ Товары и ТЧ Серии, по которым устанавливается
//					 связь между табличными частями (поля связи "Номенклатура" и "Характеристика" 
//					 присутсвуют всегда, их отдельно указывать не нужно)
//	СкладскиеОперации - массив значений ПеречислениеСсылка.СкладскиеОперации - складские операции, оформляемые документом
//
// НЕОБЯЗАТЕЛЬНЫЕ:
//  ТолькоПросмотр - признак того, что серии в документе можно только просматривать (значение по умолчанию ЛОЖЬ)
//	ТоварВШапке - признак, что параметры указания серий определены для товара в шапке (иначе - для товара в ТЧ) (значение по умолчанию ЛОЖЬ)
//	БлокироватьДанныеФормы - признак того, что перед открытием форму указания серий, нужно заблокировать форму документа (значение по умолчанию ИСТИНА)
//								если ТолькоПросмотр = Истина, то данные формы не блокируются
//  
//	ИмяТЧТовары - имя табличной части со списком товаров (значение по умолчанию - "Товары")
//  ИмяТЧСерии - имя табличной части со списком серий (значение по умолчанию - "Серии")
//  ИмяПоляКоличество - имя поля в ТЧ "Товары", в котором пользователь редактирует количество (значение по умолчанию - "КоличествоУпаковок")
//  ИмяПоляСклад     - имя реквизита склада (значение по умолчанию - "Склад")
//	ИмяПоляПомещение - имя реквизита помещения, если не задано, значит в документе нет помещений
//	ДокументОтгрузки - если серии указываются в расходном ордере, то в этом параметре записывается значение распоряжения на отгрузку.
//						Оно нужно для отображения остатков серий в форме подбора серий.										
//  
//	ПроцедураЗаполненияСерий - содержит имя документа: если параметр задан, то заполнение статусов указания серий делается
//						одноименной процедурой, размещенной в модуле менеджера документа
//	
//	ЭтоОрдер - признак того, что документ является ордером (значение по умолчанию ЛОЖЬ)
//	ЭтоЗаказ - признак того, что документ является заказом (значение по умолчанию ЛОЖЬ)
//	ЭтоНакладная - признак того, что документ является накладной (значение по умолчанию ЛОЖЬ)
//	
//	ПланированиеОтгрузки - использование параметра политики указания серий "УказыватьПриПланированииОтгрузки" (значение по умолчанию ЛОЖЬ)
//	ПланированиеОтора    - использование параметра политики указания серий "УказыватьПриПланированииОтбора" (значение по умолчанию ЛОЖЬ)
//	ПроверкаОтбора       - на адресном скакладе перед проверкой должны быть заполнены все серии, по которым ведется учет остатков
//	ФактОтбора - использование параметра политики указания серий "УказыватьПоФактуОтбора" (значение по умолчанию ЛОЖЬ)
//  ПодготовкаОрдера - параметр указывает, что ордер находится в статусе, когда происходит подготовка ордера и указание серий не обязательна
//
Функция ПараметрыУказанияСерий() Экспорт
	
	СтруктураПараметров = Новый Структура;
	
	СтруктураПараметров.Вставить("ИспользоватьСерииНоменклатуры",Неопределено);
	СтруктураПараметров.Вставить("СкладскиеОперации",Новый Массив); 
	СтруктураПараметров.Вставить("ПоляСвязи", Новый Массив);
	
	СтруктураПараметров.Вставить("ТолькоПросмотр",Ложь);
	СтруктураПараметров.Вставить("ТоварВШапке",Ложь);
	СтруктураПараметров.Вставить("БлокироватьДанныеФормы",Истина);
	СтруктураПараметров.Вставить("ИмяТЧТовары","Товары");
	СтруктураПараметров.Вставить("ИмяТЧСерии","Серии");
	СтруктураПараметров.Вставить("ИмяПоляКоличество","КоличествоУпаковок");
	СтруктураПараметров.Вставить("ИмяПоляСклад","Склад");
	СтруктураПараметров.Вставить("ИмяПоляПомещение",Неопределено);
	СтруктураПараметров.Вставить("ДокументОтгрузки",Неопределено);
	СтруктураПараметров.Вставить("ПроцедураЗаполненияСерий",Неопределено);
	СтруктураПараметров.Вставить("ЭтоОрдер",Ложь);
	СтруктураПараметров.Вставить("ЭтоЗаказ",Ложь);      
	СтруктураПараметров.Вставить("ЭтоНакладная",Ложь);
	СтруктураПараметров.Вставить("ЭтоПеремещениеМеждуСкладами",Ложь);
	СтруктураПараметров.Вставить("ПланированиеОтгрузки",Ложь);
	СтруктураПараметров.Вставить("ПланированиеОтбора",Ложь);
	СтруктураПараметров.Вставить("ПроверкаОтбора",Ложь);
	СтруктураПараметров.Вставить("ПроверкаДокумента",Ложь);
	СтруктураПараметров.Вставить("ФактОтбора",Ложь);                                    
	СтруктураПараметров.Вставить("ПодготовкаОрдера",Ложь);
	СтруктураПараметров.Вставить("РегистрироватьСерии", Неопределено);
	
	Возврат СтруктураПараметров;
	
КонецФункции

//Процедура обновляет кеш ключевых реквизитов текущей строки товаров. По ключевым реквизитам осуществляется связь
// между ТЧ серий и ТЧ товаров
// Параметры
//		ТаблицаФормы - таблица формы, отображающая ТЧ товаров
//      КэшированныеЗначения - переменная модуля формы, в которой храняться кешируемые значения
//      ПараметрыУказанияСерий - структура параметров указания серий, возвращаемая соотвествующей процедурой модуля менеджера документа
//      Копирование - признак, что кешированная строка скопирована (параметр события ПриНачалеРедактирования)
Процедура ОбновитьКешированныеЗначенияДляУчетаСерий(ТекущаяСтрока,КэшированныеЗначения,ПараметрыУказанияСерий,Копирование = Ложь) Экспорт
	
	Если Не ПараметрыУказанияСерий.ИспользоватьСерииНоменклатуры Тогда
		Возврат;
	КонецЕсли;
	
	Если КэшированныеЗначения = Неопределено Тогда
		КэшированныеЗначения = ОбработкаТабличнойЧастиКлиентСервер.ПолучитьСтруктуруКэшируемыеЗначения();
	КонецЕсли;
	
	Если ПараметрыУказанияСерий.ЭтоЗаказ
		И ПараметрыУказанияСерий.СкладскиеОперации.Найти(ПредопределенноеЗначение("Перечисление.СкладскиеОперации.ОтгрузкаКомплектующихДляСборки")) = Неопределено
		И ПараметрыУказанияСерий.СкладскиеОперации.Найти(ПредопределенноеЗначение("Перечисление.СкладскиеОперации.ОтгрузкаКомплектовДляРазборки")) = Неопределено Тогда
		ЕстьОтменаСтроки = Истина;
	Иначе
		ЕстьОтменаСтроки = Ложь;
	КонецЕсли;
	
	Если ТекущаяСтрока <> Неопределено
		И (Не Копирование
			Или ПараметрыУказанияСерий.ИмяТЧТовары = ПараметрыУказанияСерий.ИмяТЧСерии) Тогда
		
		КэшированныеЗначения.Вставить("Номенклатура",ТекущаяСтрока.Номенклатура);
		КэшированныеЗначения.Вставить("Характеристика",ТекущаяСтрока.Характеристика);
		КэшированныеЗначения.Вставить("Количество",ТекущаяСтрока.Количество);
		
		Для Каждого СтрМас из ПараметрыУказанияСерий.ПоляСвязи Цикл
			КэшированныеЗначения.Вставить(СтрМас,ТекущаяСтрока[СтрМас]);
		КонецЦикла;
		Если ЕстьОтменаСтроки Тогда
			КэшированныеЗначения.Вставить("Отменено",ТекущаяСтрока.Отменено);
			КэшированныеЗначения.Вставить("ВариантОбеспечения",ТекущаяСтрока.ВариантОбеспечения);
		КонецЕсли;
		
	Иначе
		КэшированныеЗначения.Вставить("Номенклатура",Неопределено);
		КэшированныеЗначения.Вставить("Характеристика",Неопределено);
		КэшированныеЗначения.Вставить("Количество",0);
		
		Если ЕстьОтменаСтроки Тогда
			КэшированныеЗначения.Вставить("Отменено", Неопределено);
			КэшированныеЗначения.Вставить("ВариантОбеспечения", Неопределено);
		КонецЕсли;
		
		Для Каждого СтрМас из ПараметрыУказанияСерий.ПоляСвязи Цикл
			КэшированныеЗначения.Вставить(СтрМас,Неопределено);
		КонецЦикла;
	КонецЕсли;
	
КонецПроцедуры

//Функция определяет возможность регистрации новых серий, при указании серий в документе
//Параметры
//      ПараметрыУказанияСерий - структура параметров указания серий, возвращаемая соотвествующей процедурой модуля менеджера документа
//
//Возвращаемоен значение - тип "Булево" - ИСТИНА - можно регистрировать новые серии, ЛОЖЬ - серии можно подбирать только по остаткам
Функция НеобходимоРегистрироватьСерии(ПараметрыУказанияСерий) Экспорт
	
	Если ПараметрыУказанияСерий.РегистрироватьСерии <> Неопределено Тогда
		РегистрироватьСерии = ПараметрыУказанияСерий.РегистрироватьСерии;
	ИначеЕсли (ПараметрыУказанияСерий.СкладскиеОперации.Найти(ПредопределенноеЗначение("Перечисление.СкладскиеОперации.ОтгрузкаКлиенту")) <> Неопределено 
		Или ПараметрыУказанияСерий.СкладскиеОперации.Найти(ПредопределенноеЗначение("Перечисление.СкладскиеОперации.ОтгрузкаКомплектующихДляСборки")) <> Неопределено
		    И Не ПараметрыУказанияСерий.ТоварВШапке
		Или ПараметрыУказанияСерий.СкладскиеОперации.Найти(ПредопределенноеЗначение("Перечисление.СкладскиеОперации.ОтгрузкаКомплектовДляРазборки")) <> Неопределено
		    И ПараметрыУказанияСерий.ТоварВШапке
		Или ПараметрыУказанияСерий.СкладскиеОперации.Найти(ПредопределенноеЗначение("Перечисление.СкладскиеОперации.ОтгрузкаНаВнутренниеНужды")) <> Неопределено 
		Или ПараметрыУказанияСерий.СкладскиеОперации.Найти(ПредопределенноеЗначение("Перечисление.СкладскиеОперации.ОтгрузкаПоВозвратуПоставщику")) <> Неопределено 
		Или ПараметрыУказанияСерий.СкладскиеОперации.Найти(ПредопределенноеЗначение("Перечисление.СкладскиеОперации.ОтгрузкаПоПеремещению")) <> Неопределено 
		Или ПараметрыУказанияСерий.СкладскиеОперации.Найти(ПредопределенноеЗначение("Перечисление.СкладскиеОперации.ПеремещениеМеждуПомещениями")) <> Неопределено)
		И (ПараметрыУказанияСерий.ПланированиеОтгрузки
		   Или ПараметрыУказанияСерий.ПланированиеОтбора  
		   Или ПараметрыУказанияСерий.ПодготовкаОрдера) Тогда
		
		РегистрироватьСерии = Ложь;
	Иначе
		РегистрироватьСерии = Истина;
	КонецЕсли;
	
	Возврат РегистрироватьСерии;
КонецФункции

//Функция возвращает массив типов политик учета серий в зависимости от шаблона серий номенклатуры
//
Функция ПолучитьМассивДопустимыхТиповПолитикУчетаСерий(Параметры) Экспорт
	
	МассивДопустимыхТиповПолитик = Новый Массив;
	
	Если Не Параметры.ИспользоватьСерии Тогда
		Возврат МассивДопустимыхТиповПолитик;
	КонецЕсли;
	
	Если Параметры.НастройкаИспользованияСерий = ПредопределенноеЗначение("Перечисление.НастройкиИспользованияСерийНоменклатуры.ЭкземплярТовара") Тогда
		
		МассивДопустимыхТиповПолитик.Добавить(ПредопределенноеЗначение("Перечисление.ТипыПолитикУказанияСерий.СправочноеУказаниеСерий"));
		
	ИначеЕсли Параметры.НастройкаИспользованияСерий = ПредопределенноеЗначение("Перечисление.НастройкиИспользованияСерийНоменклатуры.ПартияТоваровПоНомеру") Тогда	
		
		МассивДопустимыхТиповПолитик.Добавить(ПредопределенноеЗначение("Перечисление.ТипыПолитикУказанияСерий.СправочноеУказаниеСерий"));
		МассивДопустимыхТиповПолитик.Добавить(ПредопределенноеЗначение("Перечисление.ТипыПолитикУказанияСерий.УправлениеОстаткамиСерий"));
		
	ИначеЕсли Параметры.НастройкаИспользованияСерий = ПредопределенноеЗначение("Перечисление.НастройкиИспользованияСерийНоменклатуры.ПартияТоваровПоНомеруИСрокуГодности")
		Или Параметры.НастройкаИспользованияСерий = ПредопределенноеЗначение("Перечисление.НастройкиИспользованияСерийНоменклатуры.ПартияТоваровПоСрокуГодности") Тогда
		
		МассивДопустимыхТиповПолитик.Добавить(ПредопределенноеЗначение("Перечисление.ТипыПолитикУказанияСерий.СправочноеУказаниеСерий"));
		МассивДопустимыхТиповПолитик.Добавить(ПредопределенноеЗначение("Перечисление.ТипыПолитикУказанияСерий.УправлениеОстаткамиСерий"));
		МассивДопустимыхТиповПолитик.Добавить(ПредопределенноеЗначение("Перечисление.ТипыПолитикУказанияСерий.АвторасчетПоFEFOОстатковСерий"));
		МассивДопустимыхТиповПолитик.Добавить(ПредопределенноеЗначение("Перечисление.ТипыПолитикУказанияСерий.УправлениеПоFEFOОстаткамиСерий"));
		
	КонецЕсли;
	
	Возврат МассивДопустимыхТиповПолитик;
	
КонецФункции

////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ
