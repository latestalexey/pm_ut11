////////////////////////////////////////////////////////////////////////////////
// ПРОГРАММНЫЙ ИНТЕРФЕЙС

////////////////////////////////////////////////////////////////////////////////
// Формы расшифровки показателей.

// Возвращает данные о формах, соответствующих показателям текущих дел
//
// Возвращаемое значение:
//  Структура - структура форм
//		Ключ 	 - имя группы показателей
//		Значение - строка с именем формы 
//		 	или структура (если для разных показателей группы используются разные формы)
//				Ключ 	 - имя показателя
//				Значение - строка с именем формы 
//
Функция ПолучитьФормыПоказателей() Экспорт
	
	СтруктураФорм = Новый Структура;
	СтруктураФорм.Вставить("ВнутренниеПотребленияТоваров", 		 "Документ.ВнутреннееПотреблениеТоваров.Форма.ФормаСпискаДокументов");
	СтруктураФорм.Вставить("ДоверенностиНаПолучениеТоваров", 	 "Документ.ДоверенностьНаПолучениеТоваров.Форма.ФормаСпискаДокументов");
	СтруктураФорм.Вставить("ДоговорыСКлиентами", 				 "Справочник.ДоговорыКонтрагентов.Форма.ФормаСпискаПродажи");
	СтруктураФорм.Вставить("ДоговорыСПоставщиками", 			 "Справочник.ДоговорыКонтрагентов.Форма.ФормаСпискаЗакупки");
	СтруктураФорм.Вставить("ДокументыПоступленияТоваровИУслуг",  "Документ.ПоступлениеТоваровУслуг.Форма.ФормаСпискаДокументов");
	СтруктураФорм.Вставить("ДокументыРеализацииТоваровИУслуг", 	 "ОбщаяФорма.СписокДокументовПродажи");
	СтруктураФорм.Вставить("ДокументыСборкиРазборки", 			 "Документ.СборкаТоваров.Форма.ФормаСпискаДокументов");
	СтруктураФорм.Вставить("ЗаданияТорговымПредставителям", 	 "Документ.ЗаданиеТорговомуПредставителю.Форма.ФормаСписка");
	СтруктураФорм.Вставить("Задачи", 							 "Задача.ЗадачаИсполнителя.Форма.МоиЗадачиДляРабочегоСтола");
	СтруктураФорм.Вставить("ЗаказыКлиентов", 					 "Документ.ЗаказКлиента.Форма.ФормаСпискаДокументов");
	СтруктураФорм.Вставить("ЗаказыПоставщикам", 				 "Документ.ЗаказПоставщику.Форма.ФормаСпискаДокументов");
	СтруктураФорм.Вставить("ЗаявкиНаВозвратТоваровОтКлиентов", 	 "Документ.ЗаявкаНаВозвратТоваровОтКлиента.Форма.ФормаСпискаДокументов");
	СтруктураФорм.Вставить("ЗаявкиНаОплату", 					 "Документ.ЗаявкаНаРасходованиеДенежныхСредств.Форма.ФормаСпискаЗаявокКУтверждению");
	СтруктураФорм.Вставить("ИнвентаризацииТоваров", 			 "Документ.ПересчетТоваров.Форма.ФормаСписка");
	СтруктураФорм.Вставить("ИндивидуальныеСоглашенияСКлиентами", "Справочник.СоглашенияСКлиентами.Форма.ФормаСпискаИндивидуальныхСоглашений");
	СтруктураФорм.Вставить("КоммерческиеПредложенияКлиентам", 	 "Документ.КоммерческоеПредложениеКлиенту.Форма.ФормаСписка");
	СтруктураФорм.Вставить("ОтчетыКомиссионеров", 				 "ЖурналДокументов.ОтчетыКомиссионеров.Форма.ФормаСпискаДокументов");
	СтруктураФорм.Вставить("ОтчетыКомитентам", 					 "ЖурналДокументов.ОтчетыКомитентам.Форма.ФормаСпискаДокументов");
	СтруктураФорм.Вставить("ОформлениеСкладскихАктов", 			 "ЖурналДокументов.СкладскиеАкты.Форма.ФормаСписка");
	СтруктураФорм.Вставить("ПеремещенияТоваров", 				 "Документ.ПеремещениеТоваров.Форма.ФормаСпискаДокументов");
	СтруктураФорм.Вставить("РаспоряженияНаОтгрузку", 			 "Обработка.УправлениеОтгрузкой.Форма.Форма");
	СтруктураФорм.Вставить("РаспоряженияНаПоступление", 		 "Обработка.УправлениеПоступлением.Форма.Форма");
	СтруктураФорм.Вставить("СделкиСКлиентами", 					 "Справочник.СделкиСКлиентами.Форма.ФормаСписка");
	СтруктураФорм.Вставить("СоглашенияСПоставщиками", 			 "Справочник.СоглашенияСПоставщиками.Форма.ФормаСписка");
	СтруктураФорм.Вставить("ТиповыеСоглашенияСКлиентами", 		 "Справочник.СоглашенияСКлиентами.Форма.ФормаСпискаТиповыхСоглашений");
	СтруктураФорм.Вставить("ЭлектронныеДокументы", 				 "Обработка.ЭлектронныеДокументы.Форма.ДокументыНаПодпись");
	
	Возврат СтруктураФорм;
	
КонецФункции

// Формирует структуру параметров для открытия формы показателя
//
// Параметры:
//  ИмяПоказателя 		- имя показателя, для которого требуется получить структуру
//  ДанныеСтрокиТаблицы - данные строки таблицы-показателя, для расшифровки которой требуется получить параметры
//
// Возвращаемое значение:
//  СтруктураПараметров 	- структура, содержащая параметры формы
//  СтруктураБыстрогоОтбора - структура, содержащая данные для быстрого отбора
//
Процедура ПолучитьСтруктуруПараметровФормы(ИмяПоказателя, ДанныеСтрокиТаблицы, СтруктураПараметров, СтруктураБыстрогоОтбора) Экспорт
	
	Пользователь = ПользователиКлиентСервер.ТекущийПользователь();
	ТекущаяДата  = ОбщегоНазначенияКлиент.ДатаСеанса();
	
	// СОГЛАШЕНИЯ С КЛИЕНТАМИ /////////////////////////////////////////////////////
	
	Если ИмяПоказателя = "ТиповыеСоглашенияСКлиентамиНаСогласовании" 
	 ИЛИ ИмяПоказателя = "ИндивидуальныеСоглашенияСКлиентамиНаСогласовании" Тогда
		
		СтруктураБыстрогоОтбора.Вставить("Состояние", 		 ПредопределенноеЗначение("Перечисление.СостоянияСоглашенийСКлиентами.ОжидаетсяСогласование"));
		СтруктураБыстрогоОтбора.Вставить("Актуальность", 	 "Все");
		СтруктураБыстрогоОтбора.Вставить("ДатаАктуальности", '00010101000000');
		СтруктураБыстрогоОтбора.Вставить("Менеджер", 		 Пользователь);
		СтруктураБыстрогоОтбора.Вставить("Регулярность", 	 "");
		
	ИначеЕсли ИмяПоказателя = "ТиповыеСоглашенияСКлиентамиПросроченные" 
	 ИЛИ ИмяПоказателя = "ИндивидуальныеСоглашенияСКлиентамиПросроченные" Тогда
		
		СтруктураБыстрогоОтбора.Вставить("Состояние", 		 Неопределено);
		СтруктураБыстрогоОтбора.Вставить("Актуальность", 	 "Просроченные");
		СтруктураБыстрогоОтбора.Вставить("ДатаАктуальности", '00010101000000');
		СтруктураБыстрогоОтбора.Вставить("Менеджер", 		 Пользователь);
		СтруктураБыстрогоОтбора.Вставить("Регулярность", 	 "");
		
	// ДОГОВОРЫ С КЛИЕНТАМИ ///////////////////////////////////////////////////////
	
	ИначеЕсли ИмяПоказателя = "ДоговорыСКлиентамиНаСогласовании" Тогда
		
		СтруктураБыстрогоОтбора.Вставить("Состояние", 		 ПредопределенноеЗначение("Перечисление.СостоянияДоговоровКонтрагентов.ОжидаетсяСогласование"));
		СтруктураБыстрогоОтбора.Вставить("Актуальность", 	 "Все");
		СтруктураБыстрогоОтбора.Вставить("ДатаАктуальности", '00010101000000');
		СтруктураБыстрогоОтбора.Вставить("Менеджер", 		 Пользователь);
		СтруктураБыстрогоОтбора.Вставить("Организация", 	 Неопределено);
		СтруктураБыстрогоОтбора.Вставить("Контрагент", 		 Неопределено);
	
	ИначеЕсли ИмяПоказателя = "ДоговорыСКлиентамиПросроченные" Тогда
		
		СтруктураБыстрогоОтбора.Вставить("Состояние", 		 Неопределено);
		СтруктураБыстрогоОтбора.Вставить("Актуальность", 	 "Просроченные");
		СтруктураБыстрогоОтбора.Вставить("ДатаАктуальности", '00010101000000');
		СтруктураБыстрогоОтбора.Вставить("Менеджер", 		 Пользователь);
		СтруктураБыстрогоОтбора.Вставить("Организация", 	 Неопределено);
		СтруктураБыстрогоОтбора.Вставить("Контрагент", 		 Неопределено);
		
	// СДЕЛКИ С КЛИЕНТАМИ /////////////////////////////////////////////////////////
	
	ИначеЕсли ИмяПоказателя = "СделкиСКлиентамиВсегоВРаботе" Тогда
		
		СтруктураБыстрогоОтбора.Вставить("Статус", 			 "ВРаботе");
		СтруктураБыстрогоОтбора.Вставить("Ответственный", 	 Пользователь);
		СтруктураБыстрогоОтбора.Вставить("ТолькоКлиент", 	 Истина);
		
	// КОММЕРЧЕСКИЕ ПРЕДЛОЖЕНИЯ КЛИЕНТАМ //////////////////////////////////////////
	
	ИначеЕсли ИмяПоказателя = "КоммерческиеПредложенияКлиентамВсегоВРаботе" Тогда
		
		СтруктураБыстрогоОтбора.Вставить("Состояние", 		 "ВсеВРаботе");
		СтруктураБыстрогоОтбора.Вставить("Актуальность", 	 "Все");
		СтруктураБыстрогоОтбора.Вставить("ДатаАктуальности", '00010101000000');
		СтруктураБыстрогоОтбора.Вставить("Менеджер", 		 Пользователь);
		
	ИначеЕсли ИмяПоказателя = "КоммерческиеПредложенияКлиентамПросроченные" Тогда
		
		СтруктураБыстрогоОтбора.Вставить("Состояние", 		 Неопределено);
		СтруктураБыстрогоОтбора.Вставить("Актуальность", 	 "Просроченные");
		СтруктураБыстрогоОтбора.Вставить("ДатаАктуальности", '00010101000000');
		СтруктураБыстрогоОтбора.Вставить("Менеджер", 		 Пользователь);
		
	// ЗАКАЗЫ КЛИЕНТОВ ////////////////////////////////////////////////////////////
		
	ИначеЕсли ИмяПоказателя = "ЗаказыКлиентовВсегоВРаботе" Тогда
		
		СтруктураБыстрогоОтбора.Вставить("Состояние", 		 "ВсеОткрытые");
		СтруктураБыстрогоОтбора.Вставить("Приоритет", 		 "");
		СтруктураБыстрогоОтбора.Вставить("Актуальность", 	 "Все");
		СтруктураБыстрогоОтбора.Вставить("ДатаАктуальности", '00010101000000');
		СтруктураБыстрогоОтбора.Вставить("Менеджер", 		 Пользователь);
		
	ИначеЕсли ИмяПоказателя = "ЗаказыКлиентовНаСегодня" Тогда
		
		ДатаОтбора   = НачалоДня(ТекущаяДата+86400);
		Актуальность = НСтр("ru='Истекающие на %Дата%'");
		Актуальность = СтрЗаменить(
			Актуальность,
			"%Дата%",
			Формат(ДатаОтбора, "ДФ=dd.MM.yyyy "));
		
		СтруктураБыстрогоОтбора.Вставить("Актуальность", 	 Актуальность);
		СтруктураБыстрогоОтбора.Вставить("ДатаАктуальности", ДатаОтбора);
		СтруктураБыстрогоОтбора.Вставить("Менеджер", 		 Пользователь);
		СтруктураБыстрогоОтбора.Вставить("Состояние", 		 "ВсеОткрытые");
		СтруктураБыстрогоОтбора.Вставить("Приоритет", 		 "");
		
	ИначеЕсли ИмяПоказателя = "ЗаказыКлиентовПросроченаОплата" Тогда
		
		СтруктураБыстрогоОтбора.Вставить("Состояние", 		 "ВсеОжидающиеОплаты");
		СтруктураБыстрогоОтбора.Вставить("Приоритет", 		 "");
		СтруктураБыстрогоОтбора.Вставить("Актуальность", 	 "Просроченные");
		СтруктураБыстрогоОтбора.Вставить("ДатаАктуальности", '00010101000000');
		СтруктураБыстрогоОтбора.Вставить("Менеджер", 		 Пользователь);
		
	ИначеЕсли ИмяПоказателя = "ЗаказыКлиентовПросроченоИсполнение" Тогда
		
		СтруктураБыстрогоОтбора.Вставить("Состояние", 		 "ВсеОжидающиеИсполнения");
		СтруктураБыстрогоОтбора.Вставить("Приоритет", 		 "");
		СтруктураБыстрогоОтбора.Вставить("Актуальность", 	 "Просроченные");
		СтруктураБыстрогоОтбора.Вставить("ДатаАктуальности", '00010101000000');
		СтруктураБыстрогоОтбора.Вставить("Менеджер", 		 Пользователь);
	
	// ЗАДАНИЯ ТОРГОВЫМ ПРЕДСТАВИТЕЛЯМ ////////////////////////////////////////////
		
	ИначеЕсли ИмяПоказателя = "ЗаданияТорговымПредставителямКПодготовке" Тогда
	
		СтруктураБыстрогоОтбора.Вставить("Статус", 			 ПредопределенноеЗначение("Перечисление.СтатусыЗаданийТорговымПредставителям.НеПодготовлено"));
		СтруктураБыстрогоОтбора.Вставить("Куратор", 		 Пользователь);
		СтруктураБыстрогоОтбора.Вставить("НаличиеЗаказов", 	 "");
		СтруктураБыстрогоОтбора.Вставить("Актуальность", 	 "");
		
	ИначеЕсли ИмяПоказателя = "ЗаданияТорговымПредставителямКОформлениюЗаказов" Тогда
		
		СтруктураБыстрогоОтбора.Вставить("Статус", 			 ПредопределенноеЗначение("Перечисление.СтатусыЗаданийТорговымПредставителям.Отработано"));
		СтруктураБыстрогоОтбора.Вставить("Куратор", 		 Пользователь);
		СтруктураБыстрогоОтбора.Вставить("НаличиеЗаказов", 	 "Заказы не оформлены");
		СтруктураБыстрогоОтбора.Вставить("Актуальность", 	 "");
		
	ИначеЕсли ИмяПоказателя = "ЗаданияТорговымПредставителямПросроченные" Тогда
		
		СтруктураБыстрогоОтбора.Вставить("Статус", 			 ПредопределенноеЗначение("Перечисление.СтатусыЗаданийТорговымПредставителям.ПустаяСсылка"));
		СтруктураБыстрогоОтбора.Вставить("Актуальность", 	 "Просроченные");
		СтруктураБыстрогоОтбора.Вставить("НаличиеЗаказов", 	 "");
		СтруктураБыстрогоОтбора.Вставить("Куратор", 		 Пользователь);
		
	// РЕАЛИЗАЦИИ ТОВАРОВ И УСЛУГ /////////////////////////////////////////////////
	
	ИначеЕсли ИмяПоказателя = "РаспоряженияНаОформлениеРеализацийТоваровИУслугВсегоВРаботе" Тогда
		
		СтруктураБыстрогоОтбора.Вставить("Статус", 			 ПредопределенноеЗначение("Перечисление.СтатусыРеализацийТоваровУслуг.КОтгрузке"));
		СтруктураБыстрогоОтбора.Вставить("Склад", 			 ПредопределенноеЗначение("Справочник.Склады.ПустаяСсылка"));
		СтруктураБыстрогоОтбора.Вставить("ДатаОтгрузки", 	 '00010101000000');
		СтруктураБыстрогоОтбора.Вставить("Менеджер", 		 Пользователь);
		
		СтруктураПараметров.Вставить("ИмяТекущейСтраницы", 	 "СтраницаРаспоряженияНаОформление");
		
	ИначеЕсли ИмяПоказателя = "РаспоряженияНаОформлениеРеализацийТоваровИУслугНаСегодня" Тогда
		
		СтруктураБыстрогоОтбора.Вставить("Статус", 			 ПредопределенноеЗначение("Перечисление.СтатусыРеализацийТоваровУслуг.КОтгрузке"));
		СтруктураБыстрогоОтбора.Вставить("Склад", 			 ПредопределенноеЗначение("Справочник.Склады.ПустаяСсылка"));
		СтруктураБыстрогоОтбора.Вставить("ДатаОтгрузки", 	 ТекущаяДата);
		СтруктураБыстрогоОтбора.Вставить("Менеджер", 		 Пользователь);
		
		СтруктураПараметров.Вставить("ИмяТекущейСтраницы", 	 "СтраницаРаспоряженияНаОформление");
		
	ИначеЕсли ИмяПоказателя = "РеализацииТоваровИУслугКПредоплате" Тогда
		
		СтруктураБыстрогоОтбора.Вставить("Статус", 			 ПредопределенноеЗначение("Перечисление.СтатусыРеализацийТоваровУслуг.КПредоплате"));
		СтруктураБыстрогоОтбора.Вставить("Склад", 			 ПредопределенноеЗначение("Справочник.Склады.ПустаяСсылка"));
		СтруктураБыстрогоОтбора.Вставить("ДатаОтгрузки", 	 '00010101000000');
		СтруктураБыстрогоОтбора.Вставить("Менеджер", 		 Пользователь);
		
		СтруктураПараметров.Вставить("ИмяТекущейСтраницы", 	 "СтраницаРеализацииТоваровУслуг");
		
	ИначеЕсли ИмяПоказателя = "РеализацииТоваровИУслугКОтгрузке" Тогда
		
		СтруктураБыстрогоОтбора.Вставить("Статус", 			 ПредопределенноеЗначение("Перечисление.СтатусыРеализацийТоваровУслуг.КОтгрузке"));
		СтруктураБыстрогоОтбора.Вставить("Склад", 			 ПредопределенноеЗначение("Справочник.Склады.ПустаяСсылка"));
		СтруктураБыстрогоОтбора.Вставить("ДатаОтгрузки", 	 '00010101000000');
		СтруктураБыстрогоОтбора.Вставить("Менеджер", 		 Пользователь);
		
		СтруктураПараметров.Вставить("ИмяТекущейСтраницы", 	 "СтраницаРеализацииТоваровУслуг");
	
	// ЗАЯВКИ НА ВОЗВРАТ ТОВАРОВ ОТ КЛИЕНТОВ //////////////////////////////////////
	
	ИначеЕсли ИмяПоказателя = "ЗаявкиНаВозвратТоваровОтКлиентовВсегоВРаботе" Тогда
		
		СтруктураБыстрогоОтбора.Вставить("Состояние", 		 "ВсеОткрытые");
		СтруктураБыстрогоОтбора.Вставить("Приоритет", 		 "");
		СтруктураБыстрогоОтбора.Вставить("Актуальность", 	 "Все");
		СтруктураБыстрогоОтбора.Вставить("ДатаАктуальности", '00010101000000');
		СтруктураБыстрогоОтбора.Вставить("Менеджер", 		 Пользователь);
		
	ИначеЕсли ИмяПоказателя = "ЗаявкиНаВозвратТоваровОтКлиентовНаСегодня" Тогда
		
		ДатаОтбора   = НачалоДня(ТекущаяДата+86400);
		Актуальность = НСтр("ru='Истекающие на %Дата%'");
		Актуальность = СтрЗаменить(
			Актуальность,
			"%Дата%",
			Формат(ДатаОтбора, "ДФ=dd.MM.yyyy "));
		
		СтруктураБыстрогоОтбора.Вставить("Актуальность", 	 Актуальность);
		СтруктураБыстрогоОтбора.Вставить("ДатаАктуальности", ДатаОтбора);
		СтруктураБыстрогоОтбора.Вставить("Менеджер", 		 Пользователь);
		СтруктураБыстрогоОтбора.Вставить("Состояние", 		 "ВсеОткрытые");
		СтруктураБыстрогоОтбора.Вставить("Приоритет", 		 "");
		
	ИначеЕсли ИмяПоказателя = "ЗаявкиНаВозвратТоваровОтКлиентовПросроченаОплата" Тогда
		
		СтруктураБыстрогоОтбора.Вставить("Состояние", 		 "ВсеОжидающиеОплаты");
		СтруктураБыстрогоОтбора.Вставить("Приоритет", 		 "");
		СтруктураБыстрогоОтбора.Вставить("Актуальность", 	 "Просроченные");
		СтруктураБыстрогоОтбора.Вставить("ДатаАктуальности", '00010101000000');
		СтруктураБыстрогоОтбора.Вставить("Менеджер", 		 Пользователь);
		
	ИначеЕсли ИмяПоказателя = "ЗаявкиНаВозвратТоваровОтКлиентовПросроченоИсполнение" Тогда
		
		СтруктураБыстрогоОтбора.Вставить("Состояние", 		 "ВсеОжидающиеИсполнения");
		СтруктураБыстрогоОтбора.Вставить("Приоритет", 		 "");
		СтруктураБыстрогоОтбора.Вставить("Актуальность", 	 "Просроченные");
		СтруктураБыстрогоОтбора.Вставить("ДатаАктуальности", '00010101000000');
		СтруктураБыстрогоОтбора.Вставить("Менеджер", 		 Пользователь);
	
	// ОТЧЕТЫ КОМИССИОНЕРОВ ///////////////////////////////////////////////////////
	
	ИначеЕсли ИмяПоказателя = "ОтчетыКомиссионеровТребуетсяОформить" Тогда
		
		СтруктураБыстрогоОтбора.Вставить("Комиссионер", 	 ПредопределенноеЗначение("Справочник.Партнеры.ПустаяСсылка"));
		
		СтруктураПараметров.Вставить("ИмяТекущейСтраницы", 	 "СтраницаКомиссионеры");
		
	// СОГЛАШЕНИЯ С ПОСТАВЩИКАМИ //////////////////////////////////////////////////
	
	ИначеЕсли ИмяПоказателя = "СоглашенияСПоставщикамиНаСогласовании" Тогда
		
		СтруктураБыстрогоОтбора.Вставить("Состояние", 		 ПредопределенноеЗначение("Перечисление.СостоянияСоглашенийСПоставщиками.ОжидаетсяСогласование"));
		СтруктураБыстрогоОтбора.Вставить("Актуальность", 	 "Все");
		СтруктураБыстрогоОтбора.Вставить("ДатаАктуальности", '00010101000000');
		СтруктураБыстрогоОтбора.Вставить("Менеджер", 		 Пользователь);
		
	ИначеЕсли ИмяПоказателя = "СоглашенияСПоставщикамиПросроченные" Тогда
		
		СтруктураБыстрогоОтбора.Вставить("Состояние", 		 Неопределено);
		СтруктураБыстрогоОтбора.Вставить("Актуальность", 	 "Просроченные");
		СтруктураБыстрогоОтбора.Вставить("ДатаАктуальности", '00010101000000');
		СтруктураБыстрогоОтбора.Вставить("Менеджер", 		 Пользователь);
		
	// ДОГОВОРЫ С ПОСТАВЩИКАМИ ////////////////////////////////////////////////////
	
	ИначеЕсли ИмяПоказателя = "ДоговорыСПоставщикамиНаСогласовании" Тогда
		
		СтруктураБыстрогоОтбора.Вставить("Состояние", 		 ПредопределенноеЗначение("Перечисление.СостоянияДоговоровКонтрагентов.ОжидаетсяСогласование"));
		СтруктураБыстрогоОтбора.Вставить("Актуальность", 	 "Все");
		СтруктураБыстрогоОтбора.Вставить("ДатаАктуальности", '00010101000000');
		СтруктураБыстрогоОтбора.Вставить("Менеджер", 		 Пользователь);
		СтруктураБыстрогоОтбора.Вставить("Организация", 	 Неопределено);
		СтруктураБыстрогоОтбора.Вставить("Контрагент", 		 Неопределено);
	
	ИначеЕсли ИмяПоказателя = "ДоговорыСПоставщикамиПросроченные" Тогда
		
		СтруктураБыстрогоОтбора.Вставить("Состояние", 		 Неопределено);
		СтруктураБыстрогоОтбора.Вставить("Актуальность", 	 "Просроченные");
		СтруктураБыстрогоОтбора.Вставить("ДатаАктуальности", '00010101000000');
		СтруктураБыстрогоОтбора.Вставить("Менеджер", 		 Пользователь);
		СтруктураБыстрогоОтбора.Вставить("Организация", 	 Неопределено);
		СтруктураБыстрогоОтбора.Вставить("Контрагент", 		 Неопределено);
		
	// ЗАКАЗЫ ПОСТАВЩИКАМ /////////////////////////////////////////////////////////
		
	ИначеЕсли ИмяПоказателя = "ЗаказыПоставщикамВсегоВРаботе" Тогда
		
		СтруктураБыстрогоОтбора.Вставить("Состояние", 		 "ВсеОткрытые");
		СтруктураБыстрогоОтбора.Вставить("Приоритет", 		 "");
		СтруктураБыстрогоОтбора.Вставить("Актуальность", 	 "");
		СтруктураБыстрогоОтбора.Вставить("ДатаАктуальности", '00010101000000');
		СтруктураБыстрогоОтбора.Вставить("Менеджер", 		 Пользователь);
		
	ИначеЕсли ИмяПоказателя = "ЗаказыПоставщикамНаСегодня" Тогда
		
		ДатаОтбора   = НачалоДня(ТекущаяДата+86400);
		Актуальность = НСтр("ru='Истекающие на %Дата%'");
		Актуальность = СтрЗаменить(
			Актуальность,
			"%Дата%",
			Формат(ДатаОтбора, "ДФ=dd.MM.yyyy "));
		
		СтруктураБыстрогоОтбора.Вставить("Актуальность", 	 Актуальность);
		СтруктураБыстрогоОтбора.Вставить("ДатаАктуальности", ДатаОтбора);
		СтруктураБыстрогоОтбора.Вставить("Менеджер", 		 Пользователь);
		СтруктураБыстрогоОтбора.Вставить("Состояние", 		 "ВсеОткрытые");
		СтруктураБыстрогоОтбора.Вставить("Приоритет", 		 "");
		
	ИначеЕсли ИмяПоказателя = "ЗаказыПоставщикамПросроченоИсполнениеНами" Тогда
		
		СтруктураБыстрогоОтбора.Вставить("Состояние", 		 "ВсеОжидающиеОплаты");
		СтруктураБыстрогоОтбора.Вставить("Приоритет", 		 "");
		СтруктураБыстрогоОтбора.Вставить("Актуальность", 	 "Просроченные");
		СтруктураБыстрогоОтбора.Вставить("ДатаАктуальности", '00010101000000');
		СтруктураБыстрогоОтбора.Вставить("Менеджер", 		 Пользователь);
		
	ИначеЕсли ИмяПоказателя = "ЗаказыПоставщикамПросроченоИсполнениеПоставщиком" Тогда
		
		СтруктураБыстрогоОтбора.Вставить("Состояние", 		 "ВсеОжидающиеИсполнения");
		СтруктураБыстрогоОтбора.Вставить("Приоритет", 		 "");
		СтруктураБыстрогоОтбора.Вставить("Актуальность", 	 "Просроченные");
		СтруктураБыстрогоОтбора.Вставить("ДатаАктуальности", '00010101000000');
		СтруктураБыстрогоОтбора.Вставить("Менеджер", 		 Пользователь);
		
	ИначеЕсли ИмяПоказателя = "РаспоряженияНаОформлениеПоступленийТоваровИУслугВсегоВРаботе" Тогда
		
		СтруктураБыстрогоОтбора.Вставить("Склад", 			 ПредопределенноеЗначение("Справочник.Склады.ПустаяСсылка"));
		СтруктураБыстрогоОтбора.Вставить("Менеджер", 		 Пользователь);
		
		СтруктураПараметров.Вставить("ИмяТекущейСтраницы", 	 "СтраницаРаспоряженияНаОформление");
		
	// ДОВЕРЕННОСТИ НА ПОЛУЧЕНИЕ ТОВАРОВ //////////////////////////////////////////
	
	ИначеЕсли ИмяПоказателя = "РаспоряженияНаОформлениеДоверенностейНаПолучениеТоваров" Тогда
		
		СтруктураБыстрогоОтбора.Вставить("Состояние", 			  ПредопределенноеЗначение("Перечисление.СтатусыДоверенностейНаПолучениеТоваров.Выдана"));
		СтруктураБыстрогоОтбора.Вставить("Актуальность", 		  "Все");
		СтруктураБыстрогоОтбора.Вставить("ДатаАктуальности", 	  '00010101000000');
		СтруктураБыстрогоОтбора.Вставить("Ответственный", 		  Пользователь);
		СтруктураБыстрогоОтбора.Вставить("ФизЛицо", 			  ПредопределенноеЗначение("Справочник.ФизическиеЛица.ПустаяСсылка"));
		СтруктураБыстрогоОтбора.Вставить("ТребуетсяДоверенность", Истина);
		СтруктураБыстрогоОтбора.Вставить("ЕстьДоверенность", 	  Ложь);
		
		СтруктураПараметров.Вставить("СостояниеРаспоряжения", 	  "Требующие создания доверенности");
		СтруктураПараметров.Вставить("НаличиеДоверенности", 	  Истина);
		СтруктураПараметров.Вставить("ИмяТекущейСтраницы", 		  "СтраницаРаспоряженияНаОформление");
		
	ИначеЕсли ИмяПоказателя = "ВыданныеДоверенностиНаПолучениеТоваров" Тогда
		
		СтруктураБыстрогоОтбора.Вставить("Состояние", 			  ПредопределенноеЗначение("Перечисление.СтатусыДоверенностейНаПолучениеТоваров.Выдана"));
		СтруктураБыстрогоОтбора.Вставить("Актуальность", 		  "Все");
		СтруктураБыстрогоОтбора.Вставить("ДатаАктуальности", 	  '00010101000000');
		СтруктураБыстрогоОтбора.Вставить("Ответственный", 		  Пользователь);
		СтруктураБыстрогоОтбора.Вставить("ФизЛицо", 			  ПредопределенноеЗначение("Справочник.ФизическиеЛица.ПустаяСсылка"));
		СтруктураБыстрогоОтбора.Вставить("ТребуетсяДоверенность", Истина);
		СтруктураБыстрогоОтбора.Вставить("ЕстьДоверенность", 	  Ложь);
		
		СтруктураПараметров.Вставить("СостояниеРаспоряжения", 	  "Требующие создания доверенности");
		СтруктураПараметров.Вставить("НаличиеДоверенности", 	  Истина);
		СтруктураПараметров.Вставить("ИмяТекущейСтраницы", 		  "СтраницаДоверенностиНаПолучениеТоваров");
		
	ИначеЕсли ИмяПоказателя = "ВыданныеДоверенностиНаПолучениеТоваровИстекающиеНаСегодня" Тогда
		
		Актуальность    = НСтр("ru='Истекающие на %Дата%'");
		Актуальность    = СтрЗаменить(
			Актуальность,
			"%Дата%",
			Формат(НачалоДня(ТекущаяДата) + 86400, "ДФ=dd.MM.yyyy "));
		
		СтруктураБыстрогоОтбора.Вставить("Актуальность", 		  Актуальность);
		СтруктураБыстрогоОтбора.Вставить("ДатаАктуальности", 	  НачалоДня(ТекущаяДата) + 86400);
		СтруктураБыстрогоОтбора.Вставить("Ответственный", 		  Пользователь);
		СтруктураБыстрогоОтбора.Вставить("ФизЛицо", 			  ПредопределенноеЗначение("Справочник.ФизическиеЛица.ПустаяСсылка"));
		СтруктураБыстрогоОтбора.Вставить("Состояние", 			  ПредопределенноеЗначение("Перечисление.СтатусыДоверенностейНаПолучениеТоваров.Выдана"));
		СтруктураБыстрогоОтбора.Вставить("ТребуетсяДоверенность", Истина);
		СтруктураБыстрогоОтбора.Вставить("ЕстьДоверенность", 	  Ложь);
		
		СтруктураПараметров.Вставить("СостояниеРаспоряжения", 	  "Требующие создания доверенности");
		СтруктураПараметров.Вставить("НаличиеДоверенности", 	  Истина);
		СтруктураПараметров.Вставить("ИмяТекущейСтраницы", 		  "СтраницаДоверенностиНаПолучениеТоваров");
		
	ИначеЕсли ИмяПоказателя = "ВыданныеДоверенностиНаПолучениеТоваровПросроченные" Тогда
		
		СтруктураБыстрогоОтбора.Вставить("Состояние", 			  ПредопределенноеЗначение("Перечисление.СтатусыДоверенностейНаПолучениеТоваров.Выдана"));
		СтруктураБыстрогоОтбора.Вставить("Актуальность", 		  "Просроченные");
		СтруктураБыстрогоОтбора.Вставить("ДатаАктуальности", 	  ТекущаяДата);
		СтруктураБыстрогоОтбора.Вставить("Ответственный", 		  Пользователь);
		СтруктураБыстрогоОтбора.Вставить("ФизЛицо", 			  ПредопределенноеЗначение("Справочник.ФизическиеЛица.ПустаяСсылка"));
		СтруктураБыстрогоОтбора.Вставить("ТребуетсяДоверенность", Истина);
		СтруктураБыстрогоОтбора.Вставить("ЕстьДоверенность", 	  Ложь);
		
		СтруктураПараметров.Вставить("СостояниеРаспоряжения", 	  "Требующие создания доверенности");
		СтруктураПараметров.Вставить("НаличиеДоверенности", 	  Истина);
	    СтруктураПараметров.Вставить("ИмяТекущейСтраницы", 		  "СтраницаДоверенностиНаПолучениеТоваров");
		
	// ОТЧЕТЫ КОМИТЕНТАМ //////////////////////////////////////////////////////////
	
	ИначеЕсли ИмяПоказателя = "ОтчетыКомитентамТребуетсяОформить" Тогда
		
		СтруктураБыстрогоОтбора.Вставить("Комитент", 		 ПредопределенноеЗначение("Справочник.Партнеры.ПустаяСсылка"));
		
		СтруктураПараметров.Вставить("ИмяТекущейСтраницы", 	 "СтраницаРаспоряженияНаОформление");
		
	// ВНУТРЕННЕЕ ТОВАРОДВИЖЕНИЕ //////////////////////////////////////////////////
	
	ИначеЕсли ИмяПоказателя = "ВнутренниеПотребленияТоваровРаспоряженияНаОформлениеВсегоВРаботе" Тогда
		
		СтруктураБыстрогоОтбора.Вставить("ДатаОтгрузки", 	 '00010101000000');
		СтруктураБыстрогоОтбора.Вставить("Склад", 			 ПредопределенноеЗначение("Справочник.Склады.ПустаяСсылка"));
		
		СтруктураПараметров.Вставить("ИмяТекущейСтраницы", 	 "СтраницаРаспоряженияНаОформление");
		
	ИначеЕсли ИмяПоказателя = "ВнутренниеПотребленияТоваровРаспоряженияНаОформлениеНаСегодня" Тогда
		
		СтруктураБыстрогоОтбора.Вставить("ДатаОтгрузки", 	 ТекущаяДата);
		СтруктураБыстрогоОтбора.Вставить("Склад", 			 ПредопределенноеЗначение("Справочник.Склады.ПустаяСсылка"));
		
		СтруктураПараметров.Вставить("ИмяТекущейСтраницы", 	 "СтраницаРаспоряженияНаОформление");
		
	ИначеЕсли ИмяПоказателя = "ВнутренниеПотребленияТоваровДокументыКОтгрузке" Тогда
		
		СтруктураБыстрогоОтбора.Вставить("ДатаОтгрузки", 	 ТекущаяДата);
		СтруктураБыстрогоОтбора.Вставить("Склад", 			 ПредопределенноеЗначение("Справочник.Склады.ПустаяСсылка"));
		СтруктураБыстрогоОтбора.Вставить("Статус", 			 ПредопределенноеЗначение("Перечисление.СтатусыВнутреннихПотребленийТоваров.КОтгрузке"));
		
		СтруктураПараметров.Вставить("ИмяТекущейСтраницы", 	 "СписокДокументы");
		
	ИначеЕсли ИмяПоказателя = "ПеремещенияТоваровРаспоряженияНаОформлениеВсегоВРаботе" Тогда
		
		СтруктураБыстрогоОтбора.Вставить("ДатаОтгрузки", 	 '00010101000000');
		СтруктураБыстрогоОтбора.Вставить("Склад", 			 ПредопределенноеЗначение("Справочник.Склады.ПустаяСсылка"));
		
		СтруктураПараметров.Вставить("ИмяТекущейСтраницы", 	 "СтраницаРаспоряженияНаОформление");
		
	ИначеЕсли ИмяПоказателя = "ПеремещенияТоваровДокументыКОтгрузке" Тогда
		
		СтруктураБыстрогоОтбора.Вставить("ДатаОтгрузки", 	 ТекущаяДата);
		СтруктураБыстрогоОтбора.Вставить("Склад", 			 ПредопределенноеЗначение("Справочник.Склады.ПустаяСсылка"));
		СтруктураБыстрогоОтбора.Вставить("Статус", 			 ПредопределенноеЗначение("Перечисление.СтатусыПеремещенийТоваров.КОтгрузке"));
		
		СтруктураПараметров.Вставить("ИмяТекущейСтраницы", 	 "СписокДокументы");
		
	ИначеЕсли ИмяПоказателя = "ДокументыСборкиРазборкиРаспоряженияНаОформлениеВсегоВРаботе" Тогда
		
		СтруктураБыстрогоОтбора.Вставить("ДатаОтгрузки", 	 '00010101000000');
		СтруктураБыстрогоОтбора.Вставить("Склад", 			 ПредопределенноеЗначение("Справочник.Склады.ПустаяСсылка"));
		
		СтруктураПараметров.Вставить("ИмяТекущейСтраницы", 	 "СтраницаРаспоряженияНаОформление");
		
	ИначеЕсли ИмяПоказателя = "ДокументыСборкиРазборкиРаспоряженияНаОформлениеНаСегодня" Тогда
		
		СтруктураБыстрогоОтбора.Вставить("ДатаОтгрузки", 	 ТекущаяДата);
		СтруктураБыстрогоОтбора.Вставить("Склад", 			 ПредопределенноеЗначение("Справочник.Склады.ПустаяСсылка"));
		
		СтруктураПараметров.Вставить("ИмяТекущейСтраницы", 	 "СтраницаРаспоряженияНаОформление");
		
	ИначеЕсли ИмяПоказателя = "ДокументыСборкиРазборкиДокументыКСборкеРазборке" Тогда
		
		СтруктураБыстрогоОтбора.Вставить("ДатаОтгрузки", 	 ТекущаяДата);
		СтруктураБыстрогоОтбора.Вставить("Склад", 			 ПредопределенноеЗначение("Справочник.Склады.ПустаяСсылка"));
		СтруктураБыстрогоОтбора.Вставить("Статус", 			 ПредопределенноеЗначение("Перечисление.СтатусыСборокТоваров.КСборкеРазборке"));
		
		СтруктураПараметров.Вставить("ИмяТекущейСтраницы", 	 "СписокДокументы");
		
	// ЗАЯВКИ НА ОПЛАТУ ///////////////////////////////////////////////////////////	
		
	ИначеЕсли ИмяПоказателя = "ЗаявкиНаОплатуКУтверждению" Тогда
		
		СтруктураБыстрогоОтбора.Вставить("Статус", 			 ПредопределенноеЗначение("Перечисление.СтатусыЗаявокНаРасходованиеДенежныхСредств.Согласована"));
		СтруктураБыстрогоОтбора.Вставить("ДатаОплаты", 		 '00010101000000');
		СтруктураБыстрогоОтбора.Вставить("Организация", 	 ПредопределенноеЗначение("Справочник.Организации.ПустаяСсылка"));
		СтруктураБыстрогоОтбора.Вставить("Приоритет", 		 ПредопределенноеЗначение("Перечисление.Приоритеты.ПустаяСсылка"));
		
	ИначеЕсли ИмяПоказателя = "ЗаявкиНаОплатуКУтверждениюПросрочено" Тогда
		
		СтруктураБыстрогоОтбора.Вставить("Статус", 			 ПредопределенноеЗначение("Перечисление.СтатусыЗаявокНаРасходованиеДенежныхСредств.Согласована"));
		СтруктураБыстрогоОтбора.Вставить("ДатаОплаты", 		 НачалоДня(ТекущаяДата-86400));
		СтруктураБыстрогоОтбора.Вставить("Организация", 	 ПредопределенноеЗначение("Справочник.Организации.ПустаяСсылка"));
		СтруктураБыстрогоОтбора.Вставить("Приоритет", 		 ПредопределенноеЗначение("Перечисление.Приоритеты.ПустаяСсылка"));
		
	// ОФОРМЛЕНИЕ СКЛАДСКИХ АКТОВ /////////////////////////////////////////////////	
		
	ИначеЕсли ИмяПоказателя = "ОснованияКОформлениюСкладскихАктов" Тогда
		
		СтруктураПараметров.Вставить("ИмяТекущейСтраницы", 	 "СтраницаОснования");
		
	// ОФОРМЛЕНИЕ ИНВЕНТАРИЗАЦИЙ //////////////////////////////////////////////////
	
	ИначеЕсли ИмяПоказателя = "ОснованияКВыполнениюПересчетов" Тогда
		
		СтруктураБыстрогоОтбора.Вставить("Склад", 			 ПредопределенноеЗначение("Справочник.Склады.ПустаяСсылка"));
		СтруктураБыстрогоОтбора.Вставить("Помещение", 		 ПредопределенноеЗначение("Справочник.СкладскиеПомещения.ПустаяСсылка"));
		
		СтруктураПараметров.Вставить("ИмяТекущейСтраницы", 	 "СтраницаРаспоряжения");
		
	// РАСПОРЯЖЕНИЯ НА ОТГРУЗКУ ///////////////////////////////////////////////////
	
	ИначеЕсли ИмяПоказателя = "РаспоряженияНаОтгрузкуКИсполнению" Тогда
	
		СтруктураБыстрогоОтбора.Вставить("Склад", 			 ДанныеСтрокиТаблицы["Склад"]);
		СтруктураБыстрогоОтбора.Вставить("Помещение", 		 Неопределено);
		СтруктураБыстрогоОтбора.Вставить("ЗонаОтгрузки", 	 Неопределено);
		
	// РАСПОРЯЖЕНИЯ НА ПОСТУПЛЕНИЕ ////////////////////////////////////////////////
	
	ИначеЕсли ИмяПоказателя = "РаспоряженияНаПоступлениеКИсполнению" Тогда
		
		СтруктураБыстрогоОтбора.Вставить("Склад", 			 ДанныеСтрокиТаблицы["Склад"]);
		СтруктураБыстрогоОтбора.Вставить("Помещение", 		 Неопределено);
		СтруктураБыстрогоОтбора.Вставить("ЗонаПриемки", 	 Неопределено);
			
	КонецЕсли;
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// Обработчики событий формы текущих дел.

// Обрабатывает показатели текущих дел перед заполнением значений
//
// Параметры:
// Форма - Ссылка на форму, в которой отображаются показатели
//
Процедура ОбработатьПоказателиПередЗаполнениемЗначений(Форма) Экспорт
	
	// Данные по электронным документам представлены в виде таблицы, поэтому вид показателя устанавливается 1
	СтрокаПоказателя = ТекущиеДелаКлиент.ПолучитьСтрокуДереваПоказателей(
		Форма.ДеревоПоказателей,
		"ЭлектронныеДокументыНаПодпись",
		"ЭлектронныеДокументы");
	
	Если СтрокаПоказателя <> Неопределено Тогда
		СтрокаПоказателя.Вид = 1;
	КонецЕсли;
	
КонецПроцедуры

// Обрабатывает показатели текущих дел после заполнения значений
//
// Параметры:
// Форма - Ссылка на форму, в которой отображаются показатели
//
Процедура ОбработатьПоказателиПослеЗаполненияЗначений(Форма) Экспорт
	
	ИмяПоказателя 	 = "ЭлектронныеДокументыНаПодпись";
	СтрокаПоказателя = ТекущиеДелаКлиент.ПолучитьСтрокуДереваПоказателей(
		Форма.ДеревоПоказателей,
		ИмяПоказателя,
		"ЭлектронныеДокументы");
	
	Если СтрокаПоказателя <> Неопределено Тогда
		
		// Данные по электронным документам представлены в виде таблицы, 
		// но отображается только итог, поэтому вид показателя устанавливается 0
		СтрокаПоказателя.Вид = 0;
		
		ПолучитьДокументыНаПодпись(СтрокаПоказателя);
		
		ТекстПоказателяФормы = НСтр("ru = 'Документы на подпись (%1)'");
		Форма[ИмяПоказателя] = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ТекстПоказателяФормы, СтрокаПоказателя.Значение);
		
	КонецЕсли;
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

Процедура ПолучитьДокументыНаПодпись(СтрокаПоказателя)
	
	Попытка
		
		МассивСтруктурСертификатовПользователя = ЭлектроннаяЦифроваяПодписьКлиент.ПолучитьМассивСтруктурСертификатов(Истина);	
		СписокСтруктурСертификатовБазы 		   = СтрокаПоказателя.ДанныеТаблицы;
		КоличествоДокументовНаПодпись 		   = 0;
	
		Для Каждого СертификатБазы Из СписокСтруктурСертификатовБазы Цикл
			
			ОтпечатокСертификата = СертификатБазы.Значение.Сертификат;
			
			Для Каждого СертификатПользователя Из МассивСтруктурСертификатовПользователя Цикл
				Если СертификатПользователя.Отпечаток = ОтпечатокСертификата Тогда
					КоличествоДокументовНаПодпись = КоличествоДокументовНаПодпись + СертификатБазы.Значение.ЗначениеПоказателя;
					Прервать;
				КонецЕсли;
			КонецЦикла;
			
		КонецЦикла;
		
	Исключение
		
		КоличествоДокументовНаПодпись = 0;
		
	КонецПопытки;
	
	СтрокаПоказателя.Значение = КоличествоДокументовНаПодпись;
	
КонецПроцедуры
