////////////////////////////////////////////////////////////////////////////////
// ПРОГРАММНЫЙ ИНТЕРФЕЙС

// Устанавливает страницу доставки в зависимости от способа доставки
//
//	Параметры:
//		ЭлементыФормы - все элементы формы, в которой устанавливается страница доставки
//		СпособДоставки - способ доставки, в зависимости от которого выбирается страница доставки
//
Процедура УстановитьСтраницуДоставки(ЭлементыФормы, СпособДоставки) Экспорт
	Если СпособДоставки = ПредопределенноеЗначение("Перечисление.СпособыДоставки.ДоКлиента")
				И ЭлементыФормы.Найти("СтраницаДоставкаДоПолучателя") <> Неопределено Тогда
		ЭлементыФормы.СтраницыДоставки.ТекущаяСтраница = ЭлементыФормы.СтраницаДоставкаДоПолучателя;
	ИначеЕсли СпособДоставки = ПредопределенноеЗначение("Перечисление.СпособыДоставки.СиламиПеревозчика")
				И ЭлементыФормы.Найти("СтраницаДоставкаПеревозчиком") <> Неопределено Тогда
		ЭлементыФормы.СтраницыДоставки.ТекущаяСтраница = ЭлементыФормы.СтраницаДоставкаПеревозчиком;
	ИначеЕсли СпособДоставки = ПредопределенноеЗначение("Перечисление.СпособыДоставки.СиламиПеревозчикаПоАдресу") Тогда
		Если ЭлементыФормы.Найти("СтраницаДоставкаПеревозчикомПоАдресу") <> Неопределено Тогда
			ЭлементыФормы.СтраницыДоставки.ТекущаяСтраница = ЭлементыФормы.СтраницаДоставкаПеревозчикомПоАдресу;
		ИначеЕсли ЭлементыФормы.Найти("СтраницаДоставкаПеревозчиком") <> Неопределено Тогда
			ЭлементыФормы.СтраницыДоставки.ТекущаяСтраница = ЭлементыФормы.СтраницаДоставкаПеревозчиком;
		КонецЕсли;
	Иначе
		ЭлементыФормы.СтраницыДоставки.ТекущаяСтраница = ЭлементыФормы.СтраницаСамовывоз;
	КонецЕсли;
КонецПроцедуры

// Возвращает структуру реквизитов доставки, заполненную пустыми значениями
//
// Возвращаемое значение - структура реквизитов доставки с пустыми значениями полей
//
Функция ПолучитьПустуюСтруктуруРеквизитовДоставки() Экспорт
	РеквизитыДоставки = Новый Структура;
	РеквизитыДоставки.Вставить("СпособДоставки",ПредопределенноеЗначение("Перечисление.СпособыДоставки.Самовывоз"));
	РеквизитыДоставки.Вставить("ЗонаДоставки",ПредопределенноеЗначение("Справочник.ЗоныДоставки.ПустаяСсылка"));
	РеквизитыДоставки.Вставить("ВремяДоставкиС",Дата(1,1,1));
	РеквизитыДоставки.Вставить("ВремяДоставкиПо",Дата(1,1,1));
	РеквизитыДоставки.Вставить("ПеревозчикПартнер",ПредопределенноеЗначение("Справочник.Партнеры.ПустаяСсылка"));
	РеквизитыДоставки.Вставить("АдресДоставки","");
	РеквизитыДоставки.Вставить("АдресДоставкиПеревозчика","");
	РеквизитыДоставки.Вставить("АдресДоставкиЗначенияПолей","");
	РеквизитыДоставки.Вставить("АдресДоставкиПеревозчикаЗначенияПолей","");
	РеквизитыДоставки.Вставить("ДополнительнаяИнформацияПоДоставке","");
	Возврат РеквизитыДоставки;
КонецФункции

// Заполняет массив непроверяемых реквизитов распоряжения на доставку в зависимости от способа доставки
//
//	Параметры:
//		ДокументОбъект - объект-распоряжение, в котором проверяется заполнение реквизитов
//		МассивНепроверяемыхРеквизитов - массив реквизитов, заполнение которых не обязательно
//
Процедура ПроверитьЗаполнениеРеквизитовДоставки(ДокументОбъект, МассивНепроверяемыхРеквизитов, Отказ) Экспорт
	Если ДокументОбъект.СпособДоставки = ПредопределенноеЗначение("Перечисление.СпособыДоставки.ДоКлиента") Тогда
		МассивНепроверяемыхРеквизитов.Добавить("ПеревозчикПартнер");
		МассивНепроверяемыхРеквизитов.Добавить("АдресДоставкиПеревозчика");
	ИначеЕсли ДокументОбъект.СпособДоставки = ПредопределенноеЗначение("Перечисление.СпособыДоставки.СиламиПеревозчика") Тогда
		МассивНепроверяемыхРеквизитов.Добавить("АдресДоставкиПеревозчика");
		МассивНепроверяемыхРеквизитов.Добавить("ЗонаДоставки");
	ИначеЕсли ДокументОбъект.СпособДоставки = ПредопределенноеЗначение("Перечисление.СпособыДоставки.СиламиПеревозчикаПоАдресу") Тогда
	Иначе
		МассивНепроверяемыхРеквизитов.Добавить("ПеревозчикПартнер");
		МассивНепроверяемыхРеквизитов.Добавить("АдресДоставки");
		МассивНепроверяемыхРеквизитов.Добавить("АдресДоставкиПеревозчика");
		МассивНепроверяемыхРеквизитов.Добавить("ЗонаДоставки");
	КонецЕсли;
КонецПроцедуры

// Ищет в списке значений элемент-структуру, значение свойства которой равно искомому
//		Если такое значение не найдено, возвращается Неопределено
//	Параметры:
//		Список - список значений, в котором выполняется поиск
//		ИмяПоляСтруктуры - имя искомого свойства структуры
//		ИскомоеЗначение - значение, которое требуется найти
//
// Возвращаемое значение - структура, значение свойства которой совпадает с искомым,
//		если таких несколько, возвращается первая найденная
//
Функция НайтиВСпискеСтруктур(Список, ИмяПоляСтруктуры, ИскомоеЗначение) Экспорт
	Перем НайденноеЗначение;
	Для Каждого Элемент Из Список Цикл
		Элемент.Значение.Свойство(ИмяПоляСтруктуры, НайденноеЗначение);
		Если НайденноеЗначение = ИскомоеЗначение Тогда
			Возврат Элемент;
		КонецЕсли;
	КонецЦикла;
	Возврат Неопределено;
КонецФункции

// Очищает списки выбора адресов доставки и реквизиты доставки
//
//	Параметры:
//		ЭлементыФормы - все элементы формы, в которой очищаются списки выбора адресов доставки
//		ДокОбъект - объект, в котором очищаются реквизиты доставки
//		ИсключаяСпособДоставки - булево - устанавливается в Истина,
//								если не требуется сбрасывать способ доставки в значение Самовывоз
//
Процедура ОчиститьРеквизитыДоставки(ЭлементыФормы, ДокОбъект, ИсключаяСпособДоставки = Ложь) Экспорт
	ЭлементыФормы.АдресДоставкиПолучателя.СписокВыбора.Очистить();
	ЭлементыФормы.АдресДоставкиПолучателя1.СписокВыбора.Очистить();
	Если ЭлементыФормы.Найти("АдресДоставкиПеревозчика") <> Неопределено Тогда
		ЭлементыФормы.АдресДоставкиПеревозчика.СписокВыбора.Очистить();
	КонецЕсли;
	Если ЭлементыФормы.Найти("АдресДоставкиПолучателя2") <> Неопределено Тогда
		ЭлементыФормы.АдресДоставкиПолучателя2.СписокВыбора.Очистить();
	КонецЕсли;
	Если ЭлементыФормы.Найти("ПеревозчикПартнер") <> Неопределено Тогда
		ЭлементыФормы.ПеревозчикПартнер.СписокВыбора.Очистить();
	КонецЕсли;
	Если ЭлементыФормы.Найти("ПеревозчикПартнер1") <> Неопределено Тогда
		ЭлементыФормы.ПеревозчикПартнер1.СписокВыбора.Очистить();
	КонецЕсли;
	ЗаполнитьЗначенияСвойств(ДокОбъект,
		ПолучитьПустуюСтруктуруРеквизитовДоставки(),,
		?(ИсключаяСпособДоставки,"СпособДоставки",""));
	УстановитьСтраницуДоставки(ЭлементыФормы, ДокОбъект.СпособДоставки);
КонецПроцедуры

// Возвращает список значений. Преобразует в список значений строку полей, разделенных символом перевода строки
//
// Параметры:
//	СтрокаПолей - строка, в которой каждое поле начинается с новой строки.
//
// Возвращаемое значение - Список значений - список значений полей.
//
Функция ПреобразоватьСтрокуВСписокПолей(СтрокаПолей) Экспорт
	
	Результат = Новый СписокЗначений;
	ПоследнийЭлемент = Неопределено;
	
	Для Итерация = 1 По СтрЧислоСтрок(СтрокаПолей) Цикл
		ПолученнаяСтрока = СтрПолучитьСтроку(СтрокаПолей, Итерация);
		Если Лев(ПолученнаяСтрока, 1) = Символы.Таб Тогда
			Если ПоследнийЭлемент <> Неопределено Тогда
				ПоследнийЭлемент.Значение = ПоследнийЭлемент.Значение + Символы.ПС + Сред(ПолученнаяСтрока, 2);
			КонецЕсли;
		Иначе
			ПозицияСимвола = Найти(ПолученнаяСтрока, "=");
			Если ПозицияСимвола <> 0 Тогда
				ПоследнийЭлемент = Результат.Добавить(Сред(ПолученнаяСтрока, ПозицияСимвола + 1), Лев(ПолученнаяСтрока, ПозицияСимвола - 1));
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	
	Возврат Результат;
	
КонецФункции

////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ
