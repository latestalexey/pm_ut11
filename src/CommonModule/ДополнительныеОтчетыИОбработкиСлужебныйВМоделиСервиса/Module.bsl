////////////////////////////////////////////////////////////////////////////////
// Подсистема "Дополнительные отчеты и обработки в модели сервиса"
// 
////////////////////////////////////////////////////////////////////////////////

////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЙ ПРОГРАММНЫЙ ИНТЕРФЕЙС

// Для выполнения регламентных заданий в модели сервиса.
// 
// Параметры:
//  РегламентноеЗадание - РегламентноеЗадание - регламентное задание по
//   по выполнению дополнительной обработки
//  Использование - Булево - Истина: задание включено, Ложь: выключено.
// 
Процедура УточнитьПараметрыЗаданияВОчереди(РегламентноеЗадание, Использование) Экспорт
	
	Если ОбщегоНазначенияПовтИсп.РазделениеВключено() Тогда
		Возврат;
	КонецЕсли;
	
	НачатьТранзакцию();
	Попытка
		// Если включено разделение, необходимо заполнить регистр РазделенныеРегламентныеЗадания.
		ИдентификаторЗадания = РегламентноеЗадание.УникальныйИдентификатор;
		
		Блокировка = Новый БлокировкаДанных;
		ЭлементБлокировки = Блокировка.Добавить("РегистрСведений.РазделенныеРегламентныеЗадания");
		ЭлементБлокировки.УстановитьЗначение("РегламентноеЗадание", ИдентификаторЗадания);
		Блокировка.Заблокировать();
		
		НаборЗаписей = РегистрыСведений.РазделенныеРегламентныеЗадания.СоздатьНаборЗаписей();
		НаборЗаписей.Отбор.РегламентноеЗадание.Установить(ИдентификаторЗадания);
		НаборЗаписей.Прочитать();
		Если НаборЗаписей.Количество() = 0 Тогда
			Запись = НаборЗаписей.Добавить();
			Запись.РегламентноеЗадание = ИдентификаторЗадания;
		Иначе
			Запись = НаборЗаписей[0];
		КонецЕсли;
		Запись.Использование           = Использование;
		Запись.ИндивидуальнаяНастройка = Истина;
		
		НаборЗаписей.Записать();
		ЗафиксироватьТранзакцию();
	Исключение
		ОтменитьТранзакцию();
		ВызватьИсключение;
	КонецПопытки;
	
	Отбор = Новый Структура("РегламентноеЗадание", ИдентификаторЗадания);
	Задание = ОчередьЗаданий.ПолучитьЗадание(Отбор);
	
	ПараметрыЗадания = Новый Структура("РегламентноеЗадание, Параметры, ИмяМетода, Использование, Ключ", 
		ИдентификаторЗадания, 
		РегламентноеЗадание.Параметры, 
		РегламентноеЗадание.Метаданные.ИмяМетода, 
		Использование, 
		РегламентноеЗадание.Ключ
	);
		
	Если Задание = Неопределено Тогда
		ОчередьЗаданий.ДобавитьЗадание(ПараметрыЗадания);
	Иначе
		ОчередьЗаданий.ИзменитьЗадание(Задание, ПараметрыЗадания);
	КонецЕсли;
	
КонецПроцедуры
