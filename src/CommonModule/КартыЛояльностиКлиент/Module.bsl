////////////////////////////////////////////////////////////////////////////////
// ПРОГРАММНЫЙ ИНТЕРФЕЙС

// Процедура вызывается из форм списков в момент получения магнитного кода.
// Выполняет поиск карты лояльности в базе данных и вызывает оповещение "СчитанаКартаЛояльности"
// для формы-владельца.
Процедура ОбработатьДанныеСчитывателяМагнитныхКарт(Форма, Данные) Экспорт
	
	КартыЛояльности = КартыЛояльностиВызовСервера.НайтиКартыЛояльностиПоДаннымСоСчитывателяМагнитныхКарт(Данные);
	
	Если КартыЛояльности.ЗарегистрированныеКартыЛояльности.Количество() > 0 Тогда
		
		Если КартыЛояльности.ЗарегистрированныеКартыЛояльности.Количество() = 1 Тогда
			
			Оповестить(
				"СчитанаКартаЛояльности",
				Новый Структура("КартаЛояльности, ФормаВладелец", КартыЛояльности.ЗарегистрированныеКартыЛояльности[0].Ссылка, Форма.УникальныйИдентификатор),
				Неопределено
			);
			
		Иначе
			
			ОткрытьФорму(
				"Справочник.КартыЛояльности.Форма.СчитываниеКартыЛояльности",
				Новый Структура("КодКарты, ТипКода", Данные, ПредопределенноеЗначение("Перечисление.ТипыКодовКарт.МагнитныйКод")),
				Форма,
				Форма.УникальныйИдентификатор
			);
			
		КонецЕсли;
		
	ИначеЕсли КартыЛояльности.НеЗарегистрированныеКартыЛояльности.Количество() > 0 Тогда
		
		ОткрытьФорму(
			"Справочник.КартыЛояльности.Форма.СчитываниеКартыЛояльности",
			Новый Структура("КодКарты, ТипКода", Данные, ПредопределенноеЗначение("Перечисление.ТипыКодовКарт.МагнитныйКод")),
			Форма,
			Форма.УникальныйИдентификатор
		);
		
	КонецЕсли;
	
КонецПроцедуры

// Процедура вызывается из форм списков в момент получения штрихкода.
// Выполняет поиск карты лояльности в базе данных и вызывает оповещение "СчитанаКартаЛояльности"
// для формы-владельца.
Процедура ОбработатьШтрихкоды(Форма, Штрихкоды) Экспорт
	
	Если ТипЗнч(Штрихкоды) = Тип("Массив") Тогда
		МассивШтрихкодов = Штрихкоды;
	Иначе
		МассивШтрихкодов = Новый Массив;
		МассивШтрихкодов.Добавить(Штрихкоды);
	КонецЕсли;
	
	Если МассивШтрихкодов.Количество() = 1 Тогда
		
		КартыЛояльности = КартыЛояльностиВызовСервера.НайтиКартыЛояльностиПоШтрихкоду(МассивШтрихкодов[0].Штрихкод);
		
		Если КартыЛояльности.ЗарегистрированныеКартыЛояльности.Количество() > 0 Тогда
			
			Если КартыЛояльности.ЗарегистрированныеКартыЛояльности.Количество() = 1 Тогда
				
				Оповестить(
					"СчитанаКартаЛояльности",
					Новый Структура("КартаЛояльности, ФормаВладелец", КартыЛояльности.ЗарегистрированныеКартыЛояльности[0].Ссылка, Форма.УникальныйИдентификатор),
					Неопределено
				);
				
			Иначе
				
				ОткрытьФорму(
					"Справочник.КартыЛояльности.Форма.СчитываниеКартыЛояльности",
					Новый Структура("КодКарты, ТипКода", МассивШтрихкодов[0].Штрихкод, ПредопределенноеЗначение("Перечисление.ТипыКодовКарт.Штрихкод")),
					Форма,
					Форма.УникальныйИдентификатор
				);
				
			КонецЕсли;
			
		ИначеЕсли КартыЛояльности.НеЗарегистрированныеКартыЛояльности.Количество() > 0 Тогда
			
			ОткрытьФорму(
				"Справочник.КартыЛояльности.Форма.СчитываниеКартыЛояльности",
				Новый Структура("КодКарты, ТипКода", МассивШтрихкодов[0].Штрихкод, ПредопределенноеЗначение("Перечисление.ТипыКодовКарт.Штрихкод")),
				Форма,
				Форма.УникальныйИдентификатор
			);
			
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

Процедура НачалоВыбораКартыЛояльности(Элемент, СтандартнаяОбработка, Партнер, ДатаДокумента) Экспорт
	
	СтандартнаяОбработка = Ложь;
	
	ОткрытьФорму(
		"Справочник.КартыЛояльности.Форма.ФормаВыбора",
		Новый Структура("ДатаДокумента, Партнер", ДатаДокумента, Партнер),
		Элемент
	);
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// Команды печати анкеты.

// Процедура выполняет печать анкеты в формате "Microsoft word"
Процедура ПечатьАнкетыMicrosoftWord(ПараметрКоманды, ПараметрыВыполненияКоманды) Экспорт
	
	Если ТипЗнч(ПараметрКоманды) = Тип("Массив") Тогда
		СоставДокументов = ПараметрКоманды;
	Иначе
		СоставДокументов = Новый Массив;
		СоставДокументов.Добавить(ПараметрКоманды);
	КонецЕсли;
	
	Состояние(НСтр("ru = 'Выполняется формирование печатных форм'"));
	
	ИмяМакета = "ПФ_DOC_Анкета";
	ТипМакета = "doc";
	
	МакетИДанныеОбъекта = УправлениеПечатьюВызовСервера.ПолучитьМакетыИДанныеОбъектов("Справочник.КартыЛояльности",
		ИмяМакета,
		СоставДокументов
	);
	
	ДвоичныеДанныеМакетов = МакетИДанныеОбъекта.Макеты.ДвоичныеДанныеМакетов;
	
	Секции = МакетИДанныеОбъекта.Макеты.ОписаниеСекций;
	
	Для Каждого Ссылка Из СоставДокументов Цикл
		
		ДанныеОбъекта = МакетИДанныеОбъекта.Данные[Ссылка][ИмяМакета];
		
		Попытка
			
			ПечатнаяФорма = УправлениеПечатьюКлиент.ИнициализироватьПечатнуюФорму(ТипМакета);
			Макет = УправлениеПечатьюКлиент.ИнициализироватьМакет(
				ДвоичныеДанныеМакетов[ИмяМакета], ТипМакета
			);
			
			Область = УправлениеПечатьюКлиент.ПолучитьОбласть(Макет,Секции[ИмяМакета].Заголовок);
			УправлениеПечатьюКлиент.ПрисоединитьОбласть(ПечатнаяФорма, Область, Ложь);
			УправлениеПечатьюКлиент.ЗаполнитьПараметры(ПечатнаяФорма, ДанныеОбъекта);
			
			Если ДанныеОбъекта.ТипКарты = ПредопределенноеЗначение("Перечисление.ТипыКарт.Штриховая")
				ИЛИ ДанныеОбъекта.ТипКарты = ПредопределенноеЗначение("Перечисление.ТипыКарт.Смешанная") Тогда
				Область = УправлениеПечатьюКлиент.ПолучитьОбласть(Макет,Секции[ИмяМакета].Штрихкод);
				УправлениеПечатьюКлиент.ПрисоединитьОбласть(ПечатнаяФорма, Область, Ложь);
				УправлениеПечатьюКлиент.ЗаполнитьПараметры(ПечатнаяФорма, ДанныеОбъекта);
			КонецЕсли;
			
			Если ДанныеОбъекта.ТипКарты = ПредопределенноеЗначение("Перечисление.ТипыКарт.Магнитная")
				ИЛИ ДанныеОбъекта.ТипКарты = ПредопределенноеЗначение("Перечисление.ТипыКарт.Смешанная") Тогда
				Область = УправлениеПечатьюКлиент.ПолучитьОбласть(Макет,Секции[ИмяМакета].МагнитныйКод);
				УправлениеПечатьюКлиент.ПрисоединитьОбласть(ПечатнаяФорма, Область, Ложь);
				УправлениеПечатьюКлиент.ЗаполнитьПараметры(ПечатнаяФорма, ДанныеОбъекта);
			КонецЕсли;
			
			Область = УправлениеПечатьюКлиент.ПолучитьОбласть(Макет,Секции[ИмяМакета].Подвал);
			УправлениеПечатьюКлиент.ПрисоединитьОбласть(ПечатнаяФорма, Область, Ложь);
			УправлениеПечатьюКлиент.ЗаполнитьПараметры(ПечатнаяФорма, ДанныеОбъекта);
			УправлениеПечатьюКлиент.ЗаполнитьПараметры(ПечатнаяФорма, ДанныеОбъекта);
			УправлениеПечатьюКлиент.ЗаполнитьПараметры(ПечатнаяФорма, ДанныеОбъекта);
			
			УправлениеПечатьюКлиент.ПоказатьДокумент(ПечатнаяФорма);
			
		Исключение
			
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(КраткоеПредставлениеОшибки(ИнформацияОбОшибке()));
			
			УправлениеПечатьюКлиент.ОчиститьСсылки(ПечатнаяФорма);
			УправлениеПечатьюКлиент.ОчиститьСсылки(Макет);
			
			Возврат;
			
		КонецПопытки;
		
		УправлениеПечатьюКлиент.ОчиститьСсылки(ПечатнаяФорма, Ложь);
		УправлениеПечатьюКлиент.ОчиститьСсылки(Макет);
		
	КонецЦикла;
	
	Состояние(НСтр("ru = 'Формирование печатных форм завершено'"));
	
КонецПроцедуры

// Процедура выполняет печать анкеты в формате "Open Office"
Процедура ПечатьАнкетыOpenOfficeOrgWriter(ПараметрКоманды, ПараметрыВыполненияКоманды) Экспорт
	
	Если ТипЗнч(ПараметрКоманды) = Тип("Массив") Тогда
		СоставДокументов = ПараметрКоманды;
	Иначе
		СоставДокументов = Новый Массив;
		СоставДокументов.Добавить(ПараметрКоманды);
	КонецЕсли;
	
	Состояние(НСтр("ru = 'Выполняется формирование печатных форм'"));
	
	ИмяМакета = "ПФ_ODT_Анкета";
	ТипМакета = "odt";
	
	МакетИДанныеОбъекта = УправлениеПечатьюВызовСервера.ПолучитьМакетыИДанныеОбъектов("Справочник.КартыЛояльности",
		ИмяМакета,
		СоставДокументов
	);
	
	ДвоичныеДанныеМакетов = МакетИДанныеОбъекта.Макеты.ДвоичныеДанныеМакетов;
	
	Секции = МакетИДанныеОбъекта.Макеты.ОписаниеСекций;
	
	Для Каждого Ссылка Из СоставДокументов Цикл
		
		ДанныеОбъекта = МакетИДанныеОбъекта.Данные[Ссылка][ИмяМакета];
		
		Попытка
			
			ПечатнаяФорма = УправлениеПечатьюКлиент.ИнициализироватьПечатнуюФорму(ТипМакета);
			Макет = УправлениеПечатьюКлиент.ИнициализироватьМакет(ДвоичныеДанныеМакетов[ИмяМакета], ТипМакета);
			
			Область = УправлениеПечатьюКлиент.ПолучитьОбласть(Макет,Секции[ИмяМакета].Заголовок);
			УправлениеПечатьюКлиент.ПрисоединитьОбласть(ПечатнаяФорма, Область, Ложь);
			УправлениеПечатьюКлиент.ЗаполнитьПараметры(ПечатнаяФорма, ДанныеОбъекта);
			
			Если ДанныеОбъекта.ТипКарты = ПредопределенноеЗначение("Перечисление.ТипыКарт.Штриховая")
				ИЛИ ДанныеОбъекта.ТипКарты = ПредопределенноеЗначение("Перечисление.ТипыКарт.Смешанная") Тогда
				Область = УправлениеПечатьюКлиент.ПолучитьОбласть(Макет,Секции[ИмяМакета].Штрихкод);
				УправлениеПечатьюКлиент.ПрисоединитьОбласть(ПечатнаяФорма, Область, Ложь);
				УправлениеПечатьюКлиент.ЗаполнитьПараметры(ПечатнаяФорма, ДанныеОбъекта);
			КонецЕсли;
			
			Если ДанныеОбъекта.ТипКарты = ПредопределенноеЗначение("Перечисление.ТипыКарт.Магнитная")
				ИЛИ ДанныеОбъекта.ТипКарты = ПредопределенноеЗначение("Перечисление.ТипыКарт.Смешанная") Тогда
				Область = УправлениеПечатьюКлиент.ПолучитьОбласть(Макет,Секции[ИмяМакета].МагнитныйКод);
				УправлениеПечатьюКлиент.ПрисоединитьОбласть(ПечатнаяФорма, Область, Ложь);
				УправлениеПечатьюКлиент.ЗаполнитьПараметры(ПечатнаяФорма, ДанныеОбъекта);
			КонецЕсли;
			
			Область = УправлениеПечатьюКлиент.ПолучитьОбласть(Макет,Секции[ИмяМакета].Подвал);
			УправлениеПечатьюКлиент.ПрисоединитьОбласть(ПечатнаяФорма, Область, Ложь);
			УправлениеПечатьюКлиент.ЗаполнитьПараметры(ПечатнаяФорма, ДанныеОбъекта);
			
			УправлениеПечатьюКлиент.ПоказатьДокумент(ПечатнаяФорма);
			
		Исключение
		
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(КраткоеПредставлениеОшибки(ИнформацияОбОшибке()));
			
			УправлениеПечатьюКлиент.ОчиститьСсылки(ПечатнаяФорма);
			УправлениеПечатьюКлиент.ОчиститьСсылки(Макет);
			
			Возврат;
			
		КонецПопытки;

		УправлениеПечатьюКлиент.ОчиститьСсылки(ПечатнаяФорма, Ложь);
		УправлениеПечатьюКлиент.ОчиститьСсылки(Макет);
		
	КонецЦикла;
	
	Состояние(НСтр("ru = 'Формирование печатных форм завершено'"));
	
КонецПроцедуры

// Процедура выполняет печать анкеты в формате "MXL"
Процедура ПечатьАнкетыMXL(ПараметрКоманды, ПараметрыВыполненияКоманды) Экспорт
	
	УправлениеПечатьюКлиент.ВыполнитьКомандуПечати(
		"Справочник.КартыЛояльности",
		"Анкета",
		ПараметрКоманды,
		Неопределено
	);
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ
