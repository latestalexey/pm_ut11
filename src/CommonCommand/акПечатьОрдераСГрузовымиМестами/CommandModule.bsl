//{ ООО "АСТЭК" Разработчик: Бурыкин Александр  22.11.2013


&НаКлиенте
Процедура ОбработкаКоманды(ПараметрКоманды, ПараметрыВыполненияКоманды)
	Если УправлениеПечатьюКлиент.ПроверитьДокументыПроведены(ПараметрКоманды, ПараметрыВыполненияКоманды.Источник) Тогда 
		    Документ = ПараметрыВыполненияКоманды.Источник.Объект.ссылка;
		ТабДок = ПечатьПриходногоОрдераНаТоварыСГрузовымиМестами(Документ);
		  ТабДок.Показать();
////		
////		ПараметрыОткрытия = Новый Структура("ИмяМенеджераПечати,ИменаМакетов,ПараметрКоманды,ПараметрыПечати");
//////	ПараметрыОткрытия.ИмяМенеджераПечати = ИмяМенеджераПечати;
////	ПараметрыОткрытия.ИменаМакетов		 = "акОрдерНаТоварыСГрузовымиМестами";  //  ИменаМакетов;
//////	ПараметрыОткрытия.ПараметрКоманды	 = ПараметрКоманды;
//////	ПараметрыОткрытия.ПараметрыПечати	 = ПараметрыПечати;

////		ФормаПечати = ПолучитьФорму("ОбщаяФорма.ПечатьДокументов", ПараметрыОткрытия);//, ВладелецФормы, КлючУникальности);
////		
//////			УправлениеПечатьюКлиент.ВыполнитьКомандуПечати("ОбщаяКоманда.акПечатьОрдераСГрузовымиМестами", "общийМакет.акОрдерНаТоварыСГрузовымиМестами", ПараметрКоманды,Неопределено,Новый Структура);


////				// ОткрытьФорму("ОбщаяФорма.ПечатьДокументов");
////				   

	КонецЕсли;
	
     //    ОткрытьФорму("ОбщаяФорма.ПечатьДокументов", ПараметрыОткрытия, ВладелецФормы, КлючУникальности);
 
КонецПроцедуры

 //Универсальная функция для заполнения грузовых мест в ордерах для макета акОрдерНаТоварыСГрузовымиМестами
  //Документ - документ по которому надо заполнить
 //Макет - имя макета который надо заполнить
&НаСервере
функция ПечатьПриходногоОрдераНаТоварыСГрузовымиМестами(СсылкаНаДокумент) 
	
	//Если   ТИП(СсылкаНаДокумент) = ТИП(Документы.ПриходныйОрдерНаТовары) Тогда
		ДокументОбъект = СсылкаНаДокумент.получитьОбъект();
		ТабличнаяЧастьТовары = ДокументОбъект.Товары.выгрузить();	
		ТабличнаяЧастьГрузовыеМеста = ДокументОбъект.акГрузовыеМеста.выгрузить();	
		
		ТаблицаДляПечати = новый ТаблицаЗначений;
		ТаблицаДляПечати.Колонки.Добавить("Номенклатура");
		//ТаблицаДляПечати.колонки.добавить("ЕдиницаИзмерения");
		ТаблицаДляПечати.колонки.Добавить("КоличествоФакт");
		ТаблицаДляПечати.колонки.Добавить("ГрузовоеМесто");
		ТаблицаДляПечати.колонки.Добавить("КоличествоГрузовыхМестФакт");
		ТаблицаДляПечати.колонки.Добавить("КоличествоПринято");
		ТаблицаДляПечати.колонки.Добавить("Упаковка");

				
		Для каждого СтрокаТовары Из ТабличнаяЧастьТовары Цикл
			НоваяСтрока =	ТаблицаДляПечати.Добавить(); 
			НоваяСтрока.Номенклатура = СтрокаТовары.номенклатура;
			//НоваяСтрока.ЕдиницаИзмерения = СтрокаТовары.
			НоваяСтрока.КоличествоФакт = СтрокаТовары.Количество;
			НоваяСтрока.КоличествоГрузовыхМестФакт = СтрокаТовары.акКоличествоГрузовыхМестФакт;
			НоваяСтрока.Упаковка = СтрокаТовары.Упаковка;
			
			Отбор = новый структура("Номенклатура",СтрокаТовары.Номенклатура);
		Для каждого СтрокаОтбора из ТабличнаяЧастьГрузовыеМеста.найтиСтроки(Отбор) Цикл
		      НоваяСтрока =	ТаблицаДляПечати.Добавить(); 
              НоваяСтрока.номенклатура = СтрокаОтбора.НаименованиеГрузовогоМеста;
			  НоваяСтрока.КоличествоПринято = СтрокаОтбора.КоличествоПринято;
		КонецЦикла;
	КонецЦикла;

	
	Макет = ПолучитьОбщийМакет(Метаданные.ОбщиеМакеты.акОрдерНаТоварыСГрузовымиМестами.Имя);
	
	ОбластьШтрихкода = макет.ПолучитьОбласть("ОбластьШтрихкода");
	
	Заголовок = макет.ПолучитьОбласть("Заголовок");
	Поставщик = макет.ПолучитьОбласть("Поставщик");
	Шапка = макет.ПолучитьОбласть("Шапка");
	ШапкаТоваров = макет.ПолучитьОбласть("ШапкаТаблицы");
	
	СтрокаТаблицы = макет.ПолучитьОбласть("СтрокаТаблицы");
	СтрокаГрузовыхМест = макет.ПолучитьОбласть("СтрокаГрузовыхМест");
	
	ПодвалТаблицы = макет.ПолучитьОбласть("ПодвалТаблицы");
	Подписи = макет.ПолучитьОбласть("Подписи");
	
	
	
	ТабличныйДокумент = Новый ТабличныйДокумент;
	
	ТабличныйДокумент.Вывести(ОбластьШтрихкода);
	
	Заголовок.Параметры.ТекстЗаголовка = Строка(СсылкаНаДокумент);	
	ТабличныйДокумент.Вывести(Заголовок);
	
	Поставщик.Параметры.ПредставлениеПартнера = СсылкаНаДокумент.распоряжение.партнер;	
	ТабличныйДокумент.Вывести(Поставщик);
	
	Шапка.Параметры.ПредставлениеСклада = СсылкаНаДокумент.склад;
	Шапка.Параметры.ПредставлениеРаспоряжения = СсылкаНаДокумент.распоряжение;
	ТабличныйДокумент.Вывести(Шапка); 
	
	ШапкаТоваров.Параметры.ИмяКолонкиКодов = "Артикул";
	ТабличныйДокумент.Вывести(ШапкаТоваров);
	
	НомерСтроки = 0;
	Для каждого СтрокаТаблицыПечати ИЗ ТаблицаДляПечати Цикл
		 НомерСтроки = НомерСтроки+1;
		Если ТИП("СправочникСсылка.Номенклатура") = ТипЗнч(СтрокаТаблицыПечати.номенклатура) Тогда
		СтрокаТаблицы.Параметры.номерСтроки = НомерСтроки; 
		СтрокаТаблицы.Параметры.артикул = СтрокаТаблицыПечати.номенклатура.артикул;
		СтрокаТаблицы.Параметры.товар = СтрокаТаблицыПечати.номенклатура;
		СтрокаТаблицы.Параметры.Количество   =  СтрокаТаблицыПечати.КоличествоФакт;
	//	СтрокаТаблицы.Параметры.ПредставлениеБазовойЕдиницыИзмерения = нету в ТЧ
		 СтрокаТаблицы.Параметры.ИтогГрузовыхМест   =  СтрокаТаблицыПечати.КоличествоГрузовыхМестФакт;	
		 ТабличныйДокумент.Вывести(СтрокаТаблицы);
		Иначе
		СтрокаГрузовыхМест.Параметры.номерСтроки = номерСтроки;
		СтрокаГрузовыхМест.Параметры.грузовоеМесто = СтрокаТаблицыПечати.номенклатура;
		СтрокаГрузовыхМест.Параметры.КоличествоГрузовыхМест = СтрокаТаблицыПечати.количествоПринято;
        ТабличныйДокумент.Вывести(СтрокаГрузовыхМест);
        КонецЕсли;

	КонецЦикла;

	ТабличныйДокумент.Вывести(ПодвалТаблицы);
	
    Подписи.Параметры.итоговаяСтрока = "Количество товаров: " + Строка(СсылкаНаДокумент.товары.количество());
	Подписи.Параметры.ПредставлениеОтветственного =  Пользователи.ТекущийПользователь();
	ТабличныйДокумент.Вывести(Подписи);
	
	
	       
	 
	 
	 
	 
	 	Возврат ТабличныйДокумент;	
		
	
КонецФункции
//}
