#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

////////////////////////////////////////////////////////////////////////////////
// ПРОГРАММНЫЙ ИНТЕРФЕЙС

// Возвращает массив имен ролей с правом "Добавление" для данного документа
//
// Возвращаемое значение:
//	Массив - Массив с именами ролей
//
Функция ИменаРолейСПравомДобавления() Экспорт
	
	МассивРолей = Новый Массив;
	
	МассивРолей.Добавить("ПолныеПрава");
	МассивРолей.Добавить("ДобавлениеИзменениеЗаказовНаСборку");
	
	Возврат МассивРолей;
	
КонецФункции

// Формирует запрос проверки при смене статуса списка документов
//
// Параметры:
//	МассивДокументов - Массив - Массив ссылок на документы, которые надо проверять
//	НовыйСтатус - Строка - Имя нового статуса
//	ДополнительныеПараметры - Структура - Структура дополнительных параметров
//
// Возвращаемое значение:
//	Запрос - Запрос проверки перед сменой статуса
//
Функция СформироватьЗапросПроверкиПриСменеСтатуса(МассивДокументов, НовыйСтатус, ДополнительныеПараметры) Экспорт
	
	ЗначениеНовогоСтатуса = Перечисления.СтатусыВнутреннихЗаказов[НовыйСтатус];
	
	Если ДополнительныеПараметры <> Неопределено И ДополнительныеПараметры.Свойство("КонтрольВыполненияЗаказа") Тогда
		
		ТекстЗапроса =
		"ВЫБРАТЬ
		|	Остатки.ЗаказНаСборку КАК ЗаказНаСборку
		|ПОМЕСТИТЬ
		|	втОстаткиПоЗаказам
		|ИЗ
		|	РегистрНакопления.ЗаказыНаСборку.Остатки(, ЗаказНаСборку В (&МассивДокументов)) КАК Остатки
		|СГРУППИРОВАТЬ ПО
		|	Остатки.ЗаказНаСборку
		|;
		|ВЫБРАТЬ
		|	ТаблицаДокументов.Ссылка КАК Ссылка,
		|	ПРЕДСТАВЛЕНИЕ(ТаблицаДокументов.Ссылка) КАК Представление,
		|	ПРЕДСТАВЛЕНИЕ(ТаблицаДокументов.Статус) КАК ПредставлениеТекущегоСтатуса,
		|	ПРЕДСТАВЛЕНИЕ(&Статус) КАК ПредставлениеНовогоСтатуса,
		|	ВЫБОР
		|		КОГДА ТаблицаДокументов.Статус = &Статус
		|			ТОГДА ИСТИНА
		|		ИНАЧЕ ЛОЖЬ
		|	КОНЕЦ КАК СтатусСовпадает,
		|	ТаблицаДокументов.Проведен КАК Проведен,
		|	ТаблицаДокументов.ПометкаУдаления КАК ПометкаУдаления,
		|	ИСТИНА КАК ЗаписьПроведением,
		|	ВЫБОР
		|		КОГДА втОстаткиПоЗаказам.ЗаказНаСборку ЕСТЬ NULL 
		|			ТОГДА ЛОЖЬ
		|		ИНАЧЕ ИСТИНА
		|	КОНЕЦ КАК ЕстьОстаткиПоЗаказу
		|ИЗ
		|	Документ.ЗаказНаСборку КАК ТаблицаДокументов
		|ЛЕВОЕ СОЕДИНЕНИЕ
		|	втОстаткиПоЗаказам
		|ПО
		|	ТаблицаДокументов.Ссылка = втОстаткиПоЗаказам.ЗаказНаСборку
		|ГДЕ
		|	ТаблицаДокументов.Ссылка В (&МассивДокументов)
		|";
		
	Иначе
		
		ТекстЗапроса =
		"ВЫБРАТЬ
		|	ТаблицаДокументов.Ссылка КАК Ссылка,
		|	ПРЕДСТАВЛЕНИЕ(ТаблицаДокументов.Ссылка) КАК Представление,
		|	ПРЕДСТАВЛЕНИЕ(ТаблицаДокументов.Статус) КАК ПредставлениеТекущегоСтатуса,
		|	ПРЕДСТАВЛЕНИЕ(&Статус) КАК ПредставлениеНовогоСтатуса,
		|	ВЫБОР
		|		КОГДА ТаблицаДокументов.Статус = &Статус
		|			ТОГДА ИСТИНА
		|		ИНАЧЕ ЛОЖЬ
		|	КОНЕЦ КАК СтатусСовпадает,
		|	ТаблицаДокументов.Проведен КАК Проведен,
		|	ТаблицаДокументов.ПометкаУдаления КАК ПометкаУдаления,
		|	ИСТИНА КАК ЗаписьПроведением
		|ИЗ
		|	Документ.ЗаказНаСборку КАК ТаблицаДокументов
		|ГДЕ
		|	ТаблицаДокументов.Ссылка В(&МассивДокументов)
		|";
		
	КонецЕсли;
	
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.УстановитьПараметр("Статус", ЗначениеНовогоСтатуса);
	Запрос.УстановитьПараметр("МассивДокументов", МассивДокументов);
	
	Возврат Запрос;
	
КонецФункции

// Возвращает результат проверки при смене статуса документа
//
// Параметры:
//	ВыборкаПроверки - ВыборкаИзРезультатаЗапроса - Текущая строка выборки
//	НовыйСтатус - Перечисление - Новый статус
//	ДополнительныеПараметры - Структура - Структура дополнительных параметров
//
// Возвращаемое значение:
//	Булево - Истина, в случае успешного завершения проверки
//
Функция ПроверкаПередСменойСтатуса(ВыборкаПроверки, НовыйСтатус, ДополнительныеПараметры) Экспорт
	
	Отказ = Ложь;
	
	Если ДополнительныеПараметры = Неопределено Тогда
		
		Возврат Не Отказ;
		
	КонецЕсли;
	
	Если ДополнительныеПараметры.Свойство("КонтрольВыполненияЗаказа") И ВыборкаПроверки.ЕстьОстаткиПоЗаказу Тогда
		
		ТекстОшибки = НСтр("ru='У документа %Документ% статус ""%Статус%"" не установлен, т.к. заказ выполнен не полностью'");
		ТекстОшибки = СтрЗаменить(ТекстОшибки, "%Документ%", ВыборкаПроверки.Ссылка);
		ТекстОшибки = СтрЗаменить(ТекстОшибки, "%Статус%", ВыборкаПроверки.ПредставлениеНовогоСтатуса);
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстОшибки, ВыборкаПроверки.Ссылка);
		Отказ = Истина;
		
	КонецЕсли;
	
	Возврат Не Отказ;
	
КонецФункции

Функция ТаблицаНеобеспеченнойПотребности(ЗаказНаСборку) Экспорт

	УстановитьПривилегированныйРежим(Истина);

	Запрос = Новый Запрос(
	"
	|ВЫБРАТЬ
	|	Заказы.Номенклатура               КАК Номенклатура,
	|	Заказы.Характеристика             КАК Характеристика,
	|	Заказы.ЗаказНаСборку.Склад        КАК Склад,
	|	СУММА(Заказы.ЗаказаноОстаток)     КАК Заказано,
	|
	|	ВЫБОР КОГДА Заказы.ЗаказНаСборку.Назначение <> ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка) ТОГДА
	|			Заказы.ЗаказНаСборку.Назначение 
	|		ИНАЧЕ
	|			Заказы.ЗаказНаСборку.НазначениеТовары 
	|	КОНЕЦ                             КАК Назначение,
	|
	|	ВЫБОР КОГДА МАКСИМУМ(Товары.Упаковка) <> МИНИМУМ(Товары.Упаковка) ТОГДА
	|		ЗНАЧЕНИЕ(Справочник.УпаковкиНоменклатуры.ПустаяСсылка)
	|	ИНАЧЕ
	|		МАКСИМУМ(Товары.Упаковка)
	|	КОНЕЦ                        КАК Упаковка,
	|
	|	МАКСИМУМ(Товары.НомерСтроки) КАК НомерСтроки
	|
	|ПОМЕСТИТЬ НоменклатураЗаказа
	|
	|ИЗ
	|	РегистрНакопления.ЗаказыНаСборку.Остатки(,
	|			ЗаказНаСборку = &ЗаказНаСборку
	|		) КАК Заказы
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ЗаказНаСборку.Товары КАК Товары
	|		ПО Заказы.ЗаказНаСборку     = Товары.Ссылка
	|			И Заказы.Номенклатура   = Товары.Номенклатура
	|			И Заказы.Характеристика = Товары.Характеристика
	|			И Заказы.КодСтроки      = Товары.КодСтроки
	|ГДЕ
	|	Товары.ВариантОбеспечения = ЗНАЧЕНИЕ(Перечисление.ВариантыОбеспечения.ПодЗаказ)
	|
	|СГРУППИРОВАТЬ ПО
	|	Заказы.Номенклатура,
	|	Заказы.Характеристика,
	|	Заказы.ЗаказНаСборку
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Обеспечение.Номенклатура    КАК Номенклатура,
	|	Обеспечение.Характеристика  КАК Характеристика,
	|	Обеспечение.Склад           КАК Склад,
	|	Обеспечение.Назначение      КАК Назначение,
	|	Обеспечение.КЗаказуОстаток  КАК Заказать
	|
	|ПОМЕСТИТЬ Потребность
	|
	|ИЗ
	|	РегистрНакопления.ОбеспечениеЗаказов.Остатки(
	|			,
	|			(Номенклатура, Характеристика, Склад, Назначение) В
	|				(ВЫБРАТЬ
	|					Т.Номенклатура,
	|					Т.Характеристика,
	|					Т.Склад,
	|					Т.Назначение
	|				ИЗ
	|					НоменклатураЗаказа КАК Т)
	|			) КАК Обеспечение
	|ГДЕ
	|	Обеспечение.КЗаказуОстаток > 0
	|	
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Т.Номенклатура   КАК Номенклатура,
	|	Т.Характеристика КАК Характеристика,
	|	Т.Склад          КАК Склад,
	|	Т.Назначение     КАК Назначение,
	|	Т.Заказать       КАК Заказать
	|
	|ИЗ
	|	Потребность КАК Т
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Т.Номенклатура                                КАК Номенклатура,
	|	Т.Номенклатура.СтавкаНДС                      КАК СтавкаНДС,
	|	Т.Характеристика                              КАК Характеристика,
	|	Т.Склад                                       КАК Склад,
	|	Т.Заказано                                    КАК Количество,
	|	Т.Заказано/ЕСТЬNULL(Т.Упаковка.Коэффициент,1) КАК КоличествоУпаковок,
	|	ЕСТЬNULL(Т.Упаковка.Коэффициент,1)            КАК УпаковкаКоэффициент,
	|	Т.Упаковка                                    КАК Упаковка,
	|	Т.НомерСтроки                                 КАК НомерСтроки,
	|	ЗНАЧЕНИЕ(Перечисление.ВариантыОбеспечения.ПодЗаказ) КАК ВариантОбеспечения,
	|	Т.Назначение                                  КАК Назначение
	|ИЗ
	|	НоменклатураЗаказа КАК Т
	|ГДЕ
	|	(Т.Номенклатура, Т.Характеристика, Т.Склад, Т.Назначение)
	|			В (ВЫБРАТЬ
	|				Т.Номенклатура,
	|				Т.Характеристика,
	|				Т.Склад,
	|				Т.Назначение
	|			ИЗ
	|				Потребность КАК Т)
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки
	|");
	Запрос.УстановитьПараметр("ЗаказНаСборку", ЗаказНаСборку);
	МассивРезультатов = Запрос.ВыполнитьПакет();

	ТаблицаПотребностей = МассивРезультатов[2].Выгрузить();

	ТаблицаТовары = МассивРезультатов[3].Выгрузить();
	ТаблицаТовары.Индексы.Добавить("Номенклатура, Характеристика, Склад");

	СтруктураПоиска = Новый Структура("Номенклатура, Характеристика, Склад");

	Для Каждого СтрокаПотребности Из ТаблицаПотребностей Цикл

		ЗаполнитьЗначенияСвойств(СтруктураПоиска, СтрокаПотребности);
		СтрокиТоваров = ТаблицаТовары.НайтиСтроки(СтруктураПоиска);
		Для Каждого СтрокаТоваров Из СтрокиТоваров Цикл

			Заказать = Мин(СтрокаПотребности.Заказать, СтрокаТоваров.Количество);

			Если Заказать > 0 Тогда

				Если Заказать < СтрокаТоваров.Количество Тогда 

					СтрокаТоваров.Количество         = Заказать;
					СтрокаТоваров.КоличествоУпаковок = СтрокаТоваров.Количество/СтрокаТоваров.УпаковкаКоэффициент;

				КонецЕсли;
			Иначе

				ТаблицаТовары.Удалить(СтрокаТоваров);

			КонецЕсли;

			СтрокаПотребности.Заказать = СтрокаПотребности.Заказать - Заказать;

		КонецЦикла;
	КонецЦикла;

	Возврат ТаблицаТовары;

КонецФункции

//Имена реквизитов, от значений которых зависят параметры указания серий
//
//	Возвращаемое значение:
//		Строка - имена реквизитов, перечисленные через запятую
//
Функция ИменаРеквизитовДляЗаполненияПараметровУказанияСерий() Экспорт
	ИменаРеквизитов = "Склад,ТипОперации";
	
	Возврат ИменаРеквизитов;
КонецФункции

//Возвращает параметры указания серий для товаров, указанных в документе
//
//	Параметры
//			Объект - Структура - структура значений реквизитов объекта, необходимых для заполнения параметров указания серий
//	Возвращаемое значение
//			Тип Структура
//				Состав полей задается в функции ОбработкаТабличнойЧастиКлиентСервер.ПараметрыУказанияСерий
//
Функция ПараметрыУказанияСерий(Объект) Экспорт
	
	Шапка = НоменклатураКлиентСервер.ПараметрыУказанияСерий();
	
	ИспользоватьСерии = ПолучитьФункциональнуюОпцию("ИспользоватьСерииНоменклатурыСклад", Новый Структура("Склад", Объект.Склад));
	
	Если Объект.ТипОперации = Перечисления.ТипыОперацийЗаказаНаСборку.СборкаИзКомплектующих Тогда
		Шапка.Вставить("ИспользоватьСерииНоменклатуры", Ложь);
		Шапка.СкладскиеОперации.Добавить(Перечисления.СкладскиеОперации.ПустаяСсылка());
	Иначе
		Шапка.Вставить("ИспользоватьСерииНоменклатуры", ИспользоватьСерии);
		Шапка.СкладскиеОперации.Добавить(Перечисления.СкладскиеОперации.ОтгрузкаКомплектовДляРазборки);
	КонецЕсли;	
	
	Шапка.ПоляСвязи.Добавить("УказыватьСерии");
	
	Шапка.ЭтоЗаказ = Истина;
	Шапка.ПланированиеОтгрузки = Истина;
	Шапка.ТоварВШапке = Истина;
	
	ТЧ = НоменклатураКлиентСервер.ПараметрыУказанияСерий();
	
	Если Объект.ТипОперации = Перечисления.ТипыОперацийЗаказаНаСборку.СборкаИзКомплектующих Тогда
		ТЧ.Вставить("ИспользоватьСерииНоменклатуры", ИспользоватьСерии);
		ТЧ.СкладскиеОперации.Добавить(Перечисления.СкладскиеОперации.ОтгрузкаКомплектующихДляСборки);
	Иначе
		ТЧ.Вставить("ИспользоватьСерииНоменклатуры", Ложь);
		ТЧ.СкладскиеОперации.Добавить(Перечисления.СкладскиеОперации.ПустаяСсылка());
	КонецЕсли;	
	
	ТЧ.ПоляСвязи.Добавить("УказыватьСерии");
	
	ТЧ.ЭтоЗаказ = Истина;
	ТЧ.ПланированиеОтгрузки = Истина;
	ТЧ.ТоварВШапке = Ложь;
	
	ПараметрыУказанияСерий = Новый Структура;
	
	ПараметрыУказанияСерий.Вставить("Шапка",Шапка);
	ПараметрыУказанияСерий.Вставить("ТЧ",ТЧ);	
	
	Возврат ПараметрыУказанияСерий;

КонецФункции

////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

////////////////////////////////////////////////////////////////////////////////
// Проведение

Процедура ИнициализироватьДанныеДокумента(ДокументСсылка, ДополнительныеСвойства) Экспорт

	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Ссылка", ДокументСсылка);
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ЗаказНаСборку.Статус                  КАК Статус,
	|	ЗаказНаСборку.Дата                    КАК Период,
	|	ЗаказНаСборку.Склад                   КАК Склад,
	|	ЗаказНаСборку.ТипОперации             КАК ТипОперации,
	|	ЗаказНаСборку.НачалоСборкиРазборки    КАК НачалоСборкиРазборки,
	|	ЗаказНаСборку.ОкончаниеСборкиРазборки КАК ОкончаниеСборкиРазборки,
	|	ЗаказНаСборку.Назначение              КАК Назначение,
	|	ЗаказНаСборку.НазначениеТовары        КАК НазначениеТовары,
	|	ЗаказНаСборку.Склад.ИспользоватьОрдернуюСхемуПриПоступлении КАК ИспользоватьОрдернуюСхему
	|ИЗ
	|	Документ.ЗаказНаСборку КАК ЗаказНаСборку
	|ГДЕ
	|	ЗаказНаСборку.Ссылка = &Ссылка
	|";
	Реквизиты = Запрос.Выполнить().Выбрать();
	Реквизиты.Следующий();

	Запрос.УстановитьПараметр("Склад",                   Реквизиты.Склад);
	Запрос.УстановитьПараметр("Период",                  Реквизиты.Период);
	Запрос.УстановитьПараметр("Статус",                  Реквизиты.Статус);
	Запрос.УстановитьПараметр("НачалоСборкиРазборки",    Реквизиты.НачалоСборкиРазборки);
	Запрос.УстановитьПараметр("ОкончаниеСборкиРазборки", Реквизиты.ОкончаниеСборкиРазборки);
	Запрос.УстановитьПараметр("СборкаКомплектующих",     Реквизиты.ТипОперации = Перечисления.ТипыОперацийЗаказаНаСборку.СборкаИзКомплектующих);
	Запрос.УстановитьПараметр("Назначение",              Реквизиты.Назначение);
	Запрос.УстановитьПараметр("НазначениеТовары",        Реквизиты.НазначениеТовары);
	Запрос.УстановитьПараметр("ИспользоватьОрдернуюСхему", Реквизиты.ИспользоватьОрдернуюСхему);

	Запрос.Текст = 
	// 0 ТаблицаЗаказыНаСборку
	"
	|ВЫБРАТЬ
	|	1                                      КАК Порядок,
	|	0                                      КАК НомерСтроки,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	&Период                                КАК Период,
	|	ЗаказНаСборку.Ссылка                   КАК ЗаказНаСборку,
	|	ЗаказНаСборку.Номенклатура             КАК Номенклатура,
	|	ЗаказНаСборку.Характеристика           КАК Характеристика,
	|	1                                      КАК КодСтроки,
	|	ВЫБОР КОГДА &СборкаКомплектующих ТОГДА
	|			ЗНАЧЕНИЕ(Перечисление.ТипыДвиженияЗапасов.Поступление)
	|		ИНАЧЕ
	|			ЗНАЧЕНИЕ(Перечисление.ТипыДвиженияЗапасов.Отгрузка)
	|	КОНЕЦ                                  КАК ТипСборки,
	|	0                                      КАК КОформлению,
	|	ЗаказНаСборку.Количество               КАК Заказано
	|ИЗ
	|	Документ.ЗаказНаСборку КАК ЗаказНаСборку
	|ГДЕ
	|	ЗаказНаСборку.Ссылка = &Ссылка
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	2                                      КАК Порядок,
	|	0                                      КАК НомерСтроки,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	&НачалоСборкиРазборки                  КАК Период,
	|	ЗаказНаСборку.Ссылка                   КАК ЗаказНаСборку,
	|	ЗаказНаСборку.Номенклатура             КАК Номенклатура,
	|	ЗаказНаСборку.Характеристика           КАК Характеристика,
	|	1                                      КАК КодСтроки,
	|	ВЫБОР КОГДА &СборкаКомплектующих ТОГДА
	|			ЗНАЧЕНИЕ(Перечисление.ТипыДвиженияЗапасов.Поступление)
	|		ИНАЧЕ
	|			ЗНАЧЕНИЕ(Перечисление.ТипыДвиженияЗапасов.Отгрузка)
	|	КОНЕЦ                                  КАК ТипСборки,
	|	ЗаказНаСборку.Количество               КАК КОформлению,
	|	0                                      КАК Заказано
	|ИЗ
	|	Документ.ЗаказНаСборку КАК ЗаказНаСборку
	|ГДЕ
	|	ЗаказНаСборку.Ссылка = &Ссылка
	|	И  &Статус В (ЗНАЧЕНИЕ(Перечисление.СтатусыВнутреннихЗаказов.КВыполнению),
	|					ЗНАЧЕНИЕ(Перечисление.СтатусыВнутреннихЗаказов.Закрыт))
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	3,
	|	ТаблицаКомплектующие.НомерСтроки       КАК НомерСтроки,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	&Период                                КАК Период,
	|	ТаблицаКомплектующие.Ссылка            КАК ЗаказНаСборку,
	|	ТаблицаКомплектующие.Номенклатура      КАК Номенклатура,
	|	ТаблицаКомплектующие.Характеристика    КАК Характеристика,
	|	ТаблицаКомплектующие.КодСтроки         КАК КодСтроки,

	|	ВЫБОР КОГДА &СборкаКомплектующих ТОГДА
	|			ЗНАЧЕНИЕ(Перечисление.ТипыДвиженияЗапасов.Отгрузка)
	|		ИНАЧЕ
	|			ЗНАЧЕНИЕ(Перечисление.ТипыДвиженияЗапасов.Поступление)
	|	КОНЕЦ                                  КАК ТипСборки,
	|	0                                      КАК КОформлению,
	|	ТаблицаКомплектующие.Количество        КАК Заказано
	|ИЗ
	|	Документ.ЗаказНаСборку.Товары КАК ТаблицаКомплектующие
	|ГДЕ
	|	ТаблицаКомплектующие.Ссылка = &Ссылка
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	4,
	|	ТаблицаКомплектующие.НомерСтроки       КАК НомерСтроки,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	&НачалоСборкиРазборки                  КАК Период,
	|	ТаблицаКомплектующие.Ссылка            КАК ЗаказНаСборку,
	|	ТаблицаКомплектующие.Номенклатура      КАК Номенклатура,
	|	ТаблицаКомплектующие.Характеристика    КАК Характеристика,
	|	ТаблицаКомплектующие.КодСтроки         КАК КодСтроки,
	|	ВЫБОР КОГДА &СборкаКомплектующих ТОГДА
	|			ЗНАЧЕНИЕ(Перечисление.ТипыДвиженияЗапасов.Отгрузка)
	|		ИНАЧЕ
	|			ЗНАЧЕНИЕ(Перечисление.ТипыДвиженияЗапасов.Поступление)
	|	КОНЕЦ                                  КАК ТипСборки,
	|	ТаблицаКомплектующие.Количество        КАК КОформлению,
	|	0                                      КАК Заказано
	|ИЗ
	|	Документ.ЗаказНаСборку.Товары КАК ТаблицаКомплектующие
	|ГДЕ
	|	ТаблицаКомплектующие.Ссылка = &Ссылка
	|	И  &Статус В (ЗНАЧЕНИЕ(Перечисление.СтатусыВнутреннихЗаказов.КВыполнению),
	|					ЗНАЧЕНИЕ(Перечисление.СтатусыВнутреннихЗаказов.Закрыт))
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки,
	|	Порядок
	|;
	|////////////////////////////////////////////////////////////////////////////////
	// 1 ТаблицаСвободныеОстатки
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)              КАК ВидДвижения,
	|	&Период                                             КАК Период,
	|	ЗаказНаСборку.Номенклатура                          КАК Номенклатура,
	|	ЗаказНаСборку.Характеристика                        КАК Характеристика,
	|	ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка) КАК Серия,
	|	&Склад                                              КАК Склад,
	|	ЗаказНаСборку.Количество                            КАК ВРезерве,
	|	0                                                   КАК ВНаличии
	|ИЗ
	|	Документ.ЗаказНаСборку КАК ЗаказНаСборку
	|ГДЕ
	|	ЗаказНаСборку.Ссылка = &Ссылка
	|	И ЗаказНаСборку.СтатусУказанияСерий <> 10
	|	И (НЕ &СборкаКомплектующих)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)              КАК ВидДвижения,
	|	&Период                                             КАК Период,
	|	ТаблицаКомплектующие.Номенклатура                   КАК Номенклатура,
	|	ТаблицаКомплектующие.Характеристика                 КАК Характеристика,
	|	ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка) КАК Серия,
	|	&Склад                                              КАК Склад,
	|	ТаблицаКомплектующие.Количество                     КАК ВРезерве,
	|	0                                                   КАК ВНаличии
	|ИЗ
	|	Документ.ЗаказНаСборку.Товары КАК ТаблицаКомплектующие
	|ГДЕ
	|	ТаблицаКомплектующие.Ссылка = &Ссылка
	|	И ТаблицаКомплектующие.СтатусУказанияСерий <> 10
	|	И ТаблицаКомплектующие.ВариантОбеспечения = ЗНАЧЕНИЕ(Перечисление.ВариантыОбеспечения.ПустаяСсылка)
	|	И &СборкаКомплектующих
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)              КАК ВидДвижения,
	|	&Период                                             КАК Период,
	|	ТаблицаКомплектующие.Номенклатура                   КАК Номенклатура,
	|	ТаблицаКомплектующие.Характеристика                 КАК Характеристика,
	|	ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка) КАК Серия,
	|	&Склад                                              КАК Склад,
	|	0                                                   КАК ВРезерве,
	|	ТаблицаКомплектующие.Количество                     КАК ВНаличии
	|ИЗ
	|	Документ.ЗаказНаСборку.Товары КАК ТаблицаКомплектующие
	|ГДЕ
	|	ТаблицаКомплектующие.Ссылка = &Ссылка
	|	И (ТаблицаКомплектующие.СтатусУказанияСерий = 10
	|		ИЛИ ТаблицаКомплектующие.ВариантОбеспечения = ЗНАЧЕНИЕ(Перечисление.ВариантыОбеспечения.СоСклада))
	|	И &СборкаКомплектующих
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)              КАК ВидДвижения,
	|	&Период                                             КАК Период,
	|	ТаблицаСерии.Номенклатура                           КАК Номенклатура,
	|	ТаблицаСерии.Характеристика                         КАК Характеристика,
	|	ТаблицаСерии.Серия                                  КАК Серия,
	|	&Склад                                              КАК Склад,
	|	0                                                   КАК ВРезерве,
	|	ТаблицаСерии.Количество                             КАК ВНаличии
	|ИЗ
	|	Документ.ЗаказНаСборку.Серии КАК ТаблицаСерии
	|ГДЕ
	|	ТаблицаСерии.Ссылка = &Ссылка
	|	И ТаблицаСерии.Количество > 0
	|
	|;
	|////////////////////////////////////////////////////////////////////////////////
	// 2 ТаблицаДвижениеТоваров
	|ВЫБРАТЬ
	|	&НачалоСборкиРазборки        КАК Период,
	|	ЗаказНаСборку.Ссылка         КАК Распоряжение,
	|	ЗаказНаСборку.Склад          КАК Склад,
	|	ЗаказНаСборку.Номенклатура   КАК Номенклатура,
	|	ЗаказНаСборку.Характеристика КАК Характеристика,
	|	НЕОПРЕДЕЛЕНО                 КАК ВариантОбеспечения,
	|	НЕОПРЕДЕЛЕНО                 КАК Назначение,
	|	0                            КАК ПланируемоеПоступление,
	|	ЗаказНаСборку.Количество     КАК ПланируемаяОтгрузка
	|ИЗ
	|	Документ.ЗаказНаСборку КАК ЗаказНаСборку
	|ГДЕ
	|	ЗаказНаСборку.Ссылка = &Ссылка
	|	И НЕ &СборкаКомплектующих
	|	И ЗаказНаСборку.СтатусУказанияСерий <> 10
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	&НачалоСборкиРазборки                   КАК Период,
	|	ТаблицаКомплектующие.Ссылка             КАК Распоряжение,
	|	&Склад                                  КАК Склад,
	|	ТаблицаКомплектующие.Номенклатура       КАК Номенклатура,
	|	ТаблицаКомплектующие.Характеристика     КАК Характеристика,
	|	ТаблицаКомплектующие.ВариантОбеспечения КАК ВариантОбеспечения,
	|
	|	ВЫБОР КОГДА ТаблицаКомплектующие.ВариантОбеспечения <> ЗНАЧЕНИЕ(Перечисление.ВариантыОбеспечения.ПустаяСсылка) ТОГДА
	|		ВЫБОР КОГДА &Назначение = ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка) ТОГДА
	|			&НазначениеТовары
	|		ИНАЧЕ
	|			&Назначение
	|		КОНЕЦ
	|	ИНАЧЕ
	|		НЕОПРЕДЕЛЕНО
	|	КОНЕЦ                                   КАК Назначение,
	|	0                                       КАК ПланируемоеПоступление,
	|	ТаблицаКомплектующие.Количество         КАК ПланируемаяОтгрузка
	|ИЗ
	|	Документ.ЗаказНаСборку.Товары  КАК ТаблицаКомплектующие
	|ГДЕ
	|	ТаблицаКомплектующие.Ссылка = &Ссылка
	|	И ТаблицаКомплектующие.СтатусУказанияСерий <> 10
	|	И &СборкаКомплектующих
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	&ОкончаниеСборкиРазборки     КАК Период,
	|	ЗаказНаСборку.Ссылка         КАК Распоряжение,
	|	&Склад                       КАК Склад,
	|	ЗаказНаСборку.Номенклатура   КАК Номенклатура,
	|	ЗаказНаСборку.Характеристика КАК Характеристика,
	|	НЕОПРЕДЕЛЕНО                 КАК ВариантОбеспечения,
	|	&Назначение                  КАК Назначение,
	|	ЗаказНаСборку.Количество     КАК ПланируемоеПоступление,
	|	0                            КАК ПланируемаяОтгрузка
	|ИЗ
	|	Документ.ЗаказНаСборку КАК ЗаказНаСборку
	|ГДЕ
	|	ЗаказНаСборку.Ссылка = &Ссылка
	|	И &СборкаКомплектующих
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	&ОкончаниеСборкиРазборки            КАК Период,
	|	ТаблицаКомплектующие.Ссылка         КАК Распоряжение,
	|	&Склад                              КАК Склад,
	|	ТаблицаКомплектующие.Номенклатура   КАК Номенклатура,
	|	ТаблицаКомплектующие.Характеристика КАК Характеристика,
	|	НЕОПРЕДЕЛЕНО                        КАК ВариантОбеспечения,
	|	НЕОПРЕДЕЛЕНО                        КАК Назначение,
	|	ТаблицаКомплектующие.Количество     КАК ПланируемоеПоступление,
	|	0                                   КАК ПланируемаяОтгрузка
	|ИЗ
	|	Документ.ЗаказНаСборку.Товары КАК ТаблицаКомплектующие
	|ГДЕ
	|	ТаблицаКомплектующие.Ссылка = &Ссылка
	|	И НЕ &СборкаКомплектующих
	|;
	|////////////////////////////////////////////////////////////////////////////////
	// 3 ТаблицаРезервыСерийТоваров
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	&Период КАК Период,
	|	&Ссылка КАК ДокументРезерва,
	|	&Склад КАК Склад,
	|	ТаблицаСерии.Номенклатура КАК Номенклатура,
	|	ТаблицаСерии.Характеристика КАК Характеристика,
	|	ТаблицаСерии.Серия КАК Серия,
	|	ТаблицаСерии.Количество КАК Количество
	|ИЗ
	|	Документ.ЗаказНаСборку.Серии КАК ТаблицаСерии
	|ГДЕ
	|	ТаблицаСерии.Ссылка = &Ссылка
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход),
	|	&Период,
	|	&Ссылка,
	|	&Склад,
	|	ТаблицаТовары.Номенклатура,
	|	ТаблицаТовары.Характеристика,
	|	ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка),
	|	ТаблицаТовары.Количество
	|ИЗ
	|	Документ.ЗаказНаСборку.Товары КАК ТаблицаТовары
	|ГДЕ
	|	ТаблицаТовары.Ссылка = &Ссылка
	|	И ТаблицаТовары.СтатусУказанияСерий В (11,12)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход),
	|	&Период,
	|	&Ссылка,
	|	&Склад,
	|	ТаблицаТовары.Номенклатура,
	|	ТаблицаТовары.Характеристика,
	|	ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка),
	|	ТаблицаТовары.Количество
	|ИЗ
	|	Документ.ЗаказНаСборку КАК ТаблицаТовары
	|ГДЕ
	|	ТаблицаТовары.Ссылка = &Ссылка
	|	И ТаблицаТовары.СтатусУказанияСерий В (11,12)
	|;
	|////////////////////////////////////////////////////////////////////////////////
	//4.ТаблицаОбеспечениеЗаказов
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	&Период                                КАК Период,
	|	&Склад                                 КАК Склад,
	|	ЗаказНаСборку.Номенклатура             КАК Номенклатура,
	|	ЗаказНаСборку.Характеристика           КАК Характеристика,
	|	&Назначение                            КАК Назначение,
	|	0                                      КАК Потребность,
	|	-ЗаказНаСборку.Количество              КАК КЗаказу,
	|	ЗаказНаСборку.Количество               КАК Заказано,
	|	0                                      КАК НаличиеСоСклада
	|ИЗ
	|	Документ.ЗаказНаСборку КАК ЗаказНаСборку
	|ГДЕ
	|	ЗаказНаСборку.Ссылка = &Ссылка
	|	И &СборкаКомплектующих
	|	И ЗаказНаСборку.Назначение <> ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	&Период                                КАК Период,
	|	&Склад                                 КАК Склад,
	|	ТаблицаТовары.Номенклатура             КАК Номенклатура,
	|	ТаблицаТовары.Характеристика           КАК Характеристика,
	|	ВЫБОР КОГДА &Назначение = ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка) ТОГДА
	|		&НазначениеТовары
	|	ИНАЧЕ
	|		&Назначение
	|	КОНЕЦ                                  КАК Назначение,
	|	ВЫБОР КОГДА ТаблицаТовары.ВариантОбеспечения = ЗНАЧЕНИЕ(Перечисление.ВариантыОбеспечения.СоСклада) ТОГДА
	|		0
	|	ИНАЧЕ
	|		ТаблицаТовары.Количество
	|	КОНЕЦ                                  КАК Потребность,
	|	ВЫБОР КОГДА ТаблицаТовары.ВариантОбеспечения = ЗНАЧЕНИЕ(Перечисление.ВариантыОбеспечения.СоСклада) ТОГДА
	|		0
	|	ИНАЧЕ
	|		ТаблицаТовары.Количество
	|	КОНЕЦ                                  КАК КЗаказу,
	|	0                                      КАК Заказано,
	|	ВЫБОР КОГДА ТаблицаТовары.ВариантОбеспечения = ЗНАЧЕНИЕ(Перечисление.ВариантыОбеспечения.СоСклада) ТОГДА
	|		ТаблицаТовары.Количество
	|	ИНАЧЕ
	|		0
	|	КОНЕЦ                                  КАК НаличиеСоСклада
	|
	|ИЗ
	|	Документ.ЗаказНаСборку.Товары КАК ТаблицаТовары
	|ГДЕ
	|	ТаблицаТовары.Ссылка = &Ссылка
	|	И ТаблицаТовары.ВариантОбеспечения <> ЗНАЧЕНИЕ(Перечисление.ВариантыОбеспечения.ПустаяСсылка)
	|";
	
	Результат = Запрос.ВыполнитьПакет();
	ТаблицыДляДвижений = ДополнительныеСвойства.ТаблицыДляДвижений;
	ТаблицыДляДвижений.Вставить("ТаблицаЗаказыНаСборку",      Результат[0].Выгрузить());
	ТаблицыДляДвижений.Вставить("ТаблицаСвободныеОстатки",    Результат[1].Выгрузить());
	ТаблицыДляДвижений.Вставить("ТаблицаДвижениеТоваров",     Результат[2].Выгрузить());
 	ТаблицыДляДвижений.Вставить("ТаблицаРезервыСерийТоваров", Результат[3].Выгрузить());
	ТаблицыДляДвижений.Вставить("ТаблицаОбеспечениеЗаказов",  Результат[4].Выгрузить());

КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// Печать

////////////////////////////////////////////////////////////////////////////////
// Обновление информационной базы

////////////////////////////////////////////////////////////////////////////////
// Прочее

Функция ЕстьСборкаПоЗаказу(ЗаказНаСборку) Экспорт

	УстановитьПривилегированныйРежим(Истина);

	Запрос = Новый Запрос(
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	1 КАК ЕстьЗаписи
	|ИЗ
	|	РегистрНакопления.ЗаказыНаСборку КАК Таблица
	|ГДЕ
	|	Таблица.ЗаказНаСборку = &ЗаказНаСборку
	|	И Таблица.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|	И Таблица.КОформлению <> 0
	|");
	Запрос.УстановитьПараметр("ЗаказНаСборку", ЗаказНаСборку);
	Возврат Не Запрос.Выполнить().Пустой();

КонецФункции


#КонецЕсли