#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

////////////////////////////////////////////////////////////////////////////////
// Печать

// Формирует печатные формы объектов
//
// Параметры:
//   ИменаМакетов - Строка - Имена макетов, перечисленные через запятую
//   МассивОбъектов - Массив - Массив ссылок на объекты которые нужно распечатать
//   ПараметрыПечати - Структура - Структура дополнительных параметров печати
//   КоллекцияПечатныхФорм - Таблица значений - Сформированные табличные документы
//   ПараметрыВывода - Структура - Параметры сформированных табличных документов
//
Процедура Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт
	
	ИмяМакета = "";
	СинонимМакета = "";
	ТабличныйДокумент = Неопределено;
	
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "ТОРГ2") Тогда
		
		ИмяМакета = "ТОРГ2";
		СинонимМакета = НСтр("ru='ТОРГ-2'");
		ТабличныйДокумент = ПолучитьПечатнуюФормуТОРГ(ИмяМакета, ПараметрыПечати["ПечатьВНоменклатуреПоставщика"], МассивОбъектов, ОбъектыПечати);
		
	ИначеЕсли УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "ТОРГ3") Тогда
		
		ИмяМакета = "ТОРГ3";
		СинонимМакета = НСтр("ru='ТОРГ-3'");
		ТабличныйДокумент = ПолучитьПечатнуюФормуТОРГ(ИмяМакета, ПараметрыПечати["ПечатьВНоменклатуреПоставщика"], МассивОбъектов, ОбъектыПечати);
		
	КонецЕсли;
	
	Если ТабличныйДокумент <> Неопределено Тогда
		
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(
			КоллекцияПечатныхФорм,
			ИмяМакета,
			СинонимМакета,
			ТабличныйДокумент
		);
		
	КонецЕсли;
	
	ФормированиеПечатныхФорм.ЗаполнитьПараметрыОтправки(ПараметрыВывода.ПараметрыОтправки, МассивОбъектов, КоллекцияПечатныхФорм);
	
КонецПроцедуры

// Функция формирует и возвращает печатную форму ТОРГ2 или ТОРГ3 в зависимости от имени макета
//
// Параметры:
// 		ИмяМакета - Строка - Строка имени макета
// 		ПечатьВНоменклатуреПоставщика - Булево
// 		МассивОбъектов - Массив - массив документов для печати
// 		ОбъектыПечати - СписокЗначений
//
// Возвращаемое значение:
// 		ТабличныйДокумент
//
Функция ПолучитьПечатнуюФормуТОРГ(ИмяМакета, ПечатьВНоменклатуреПоставщика, МассивОбъектов, ОбъектыПечати)
	
	ТабличныйДокумент = Новый ТабличныйДокумент;
	
	УстановитьПривилегированныйРежим(Истина);
	
	МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	ОтветственныеЛицаСервер.СформироватьВременнуюТаблицуОтветственныхЛицДокументов(МассивОбъектов, МенеджерВременныхТаблиц);	
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("МассивОбъектов", МассивОбъектов);
	Запрос.УстановитьПараметр("ВалютаРегламентированногоУчета", Константы.ВалютаРегламентированногоУчета.Получить());
	Запрос.УстановитьПараметр("ПечатьВНоменклатуреПоставщика", ПечатьВНоменклатуреПоставщика);
	СформироватьТекстЗапросаПоДокументам(ИмяМакета, Запрос.Текст);
	
	ЗаполнитьТабличныйДокументТОРГ(Имямакета, ПечатьВНоменклатуреПоставщика, ТабличныйДокумент, Запрос, ОбъектыПечати);
	
	Если ПривилегированныйРежим() Тогда
		УстановитьПривилегированныйРежим(Ложь);
	КонецЕсли;
	
	Возврат ТабличныйДокумент;
	
КонецФункции

// Производит пересчет ценовых показателей таблицы товаров в валюте регламентированного учета
//
// Параметры:
// 	ТаблицаТоваров - ТаблицаЗначений - Таблица по товарам
// 	ТаблицаВалют - ТаблицаЗначений - Таблица значений курсов валют
//
Процедура ПересчитатьСуммыВВалютеРегламентированногоУчета(ТаблицаТоваров, ТаблицаВалют)
	
	СоответствиеСсылок = Новый Соответствие;	// Ключ - <ДокументСсылка.АктПриемкиТоваров>
												// Значение - <Структура>
	
	Для Каждого Строка Из ТаблицаТоваров Цикл
		
		ТекущаяСсылка = СоответствиеСсылок[Строка.Ссылка];
		
		Если ТекущаяСсылка = Неопределено Тогда
			
			ТекущаяСсылка = Новый Структура;
			
			ОписаниеКурсовВалют = ТаблицаВалют.Найти(Строка.Ссылка, "Ссылка");
			Если ОписаниеКурсовВалют = Неопределено ИЛИ ОписаниеКурсовВалют.ПересчетНеТребуется Тогда
				ТекущаяСсылка.Вставить("ТребуетсяПересчет", Ложь);
			Иначе
				ТекущаяСсылка.Вставить("ТребуетсяПересчет", Истина);
				
				ТекущаяСсылка.Вставить("КоэффициентПересчета",
					ОписаниеКурсовВалют.КурсВалютыДокумента * ОписаниеКурсовВалют.КратностьВалютыРегламентированногоУчета
					/ (ОписаниеКурсовВалют.КратностьВалютыДокумента * ОписаниеКурсовВалют.КурсВалютыРегламентированногоУчета)
				);
				
				ТекущаяСсылка.Вставить("ЦенаВключаетНДСПоДокументам", Строка.ЦенаВключаетНДСПоДокументам);
				ТекущаяСсылка.Вставить("ЦенаВключаетНДСПоФакту", Строка.ЦенаВключаетНДСПоФакту);
				
				ТекущаяСсылка.Вставить("ИтогПоДокументам", 0);
				ТекущаяСсылка.Вставить("МассивПоДокументам", Новый Массив);
				ТекущаяСсылка.Вставить("ИтогПоФакту", 0);
				ТекущаяСсылка.Вставить("МассивПоФакту", Новый Массив);
				
			КонецЕсли;
			
			СоответствиеСсылок.Вставить(Строка.Ссылка, ТекущаяСсылка);
			
		КонецЕсли;
		
		Если ТекущаяСсылка.ТребуетсяПересчет Тогда
			
			Если Строка.СуммаПоДокументам <> 0 Тогда
				СуммаПоДокументам = ?(ТекущаяСсылка.ЦенаВключаетНДСПоДокументам,
					Строка.СуммаПоДокументам,
					Строка.СуммаПоДокументам+Строка.СуммаНДСПоДокументам)
					* ТекущаяСсылка.КоэффициентПересчета;
				ТекущаяСсылка.ИтогПоДокументам = ТекущаяСсылка.ИтогПоДокументам + СуммаПоДокументам;
				ТекущаяСсылка.МассивПоДокументам.Добавить(СуммаПоДокументам);
			КонецЕсли;
			Если Строка.СуммаПоФакту <> 0 Тогда
				СуммаПоФакту = ?(ТекущаяСсылка.ЦенаВключаетНДСПоФакту,
					Строка.СуммаПоФакту,
					Строка.СуммаПоФакту+Строка.СуммаНДСПоФакту)
					* ТекущаяСсылка.КоэффициентПересчета;
				ТекущаяСсылка.ИтогПоФакту = ТекущаяСсылка.ИтогПоФакту + СуммаПоФакту;
				ТекущаяСсылка.МассивПоФакту.Добавить(СуммаПоФакту);
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЦикла;
	
	Для Каждого ТекущаяСсылка Из СоответствиеСсылок Цикл
		
		Если НЕ ТекущаяСсылка.Значение.ТребуетсяПересчет Тогда
			Продолжить;
		КонецЕсли;
		
		ТекущаяСсылка.Значение.МассивПоДокументам = ОбщегоНазначения.РаспределитьСуммуПропорциональноКоэффициентам(
			ТекущаяСсылка.Значение.ИтогПоДокументам, ТекущаяСсылка.Значение.МассивПоДокументам
		);
		ТекущаяСсылка.Значение.МассивПоФакту = ОбщегоНазначения.РаспределитьСуммуПропорциональноКоэффициентам(
			ТекущаяСсылка.Значение.ИтогПоФакту, ТекущаяСсылка.Значение.МассивПоФакту
		);
		
	КонецЦикла;
	
	Для Каждого Строка Из ТаблицаТоваров Цикл
		
		ТекущаяСсылка = СоответствиеСсылок[Строка.Ссылка];
		Если ТекущаяСсылка = Неопределено ИЛИ НЕ ТекущаяСсылка.ТребуетсяПересчет Тогда
			Продолжить;
		КонецЕсли;
		
		Если ТекущаяСсылка.МассивПоДокументам <> Неопределено И Строка.СуммаПоДокументам<>0 Тогда
			СтавкаНДСЧислом = ЦенообразованиеКлиентСервер.ПолучитьСтавкуНДСЧислом(Строка.СтавкаНДСПоДокументам);
			СуммаСНДС = ТекущаяСсылка.МассивПоДокументам[0];
			Строка.СуммаНДСПоДокументам = Окр(СуммаСНДС / (1 + СтавкаНДСЧислом) * СтавкаНДСЧислом,2);
			Строка.СуммаПоДокументам = ?(ТекущаяСсылка.ЦенаВключаетНДСПоДокументам, СуммаСНДС, СуммаСНДС - Строка.СуммаНДСПоДокументам);
			ТекущаяСсылка.МассивПоДокументам.Удалить(0);
			Если Строка.КоличествоПоДокументам > 0 Тогда
				Строка.ЦенаПоДокументам = Строка.СуммаПоДокументам / Строка.КоличествоПоДокументам;
			КонецЕсли;
		КонецЕсли;
		
		Если ТекущаяСсылка.МассивПоФакту <> Неопределено И Строка.СуммаПоФакту <> 0 Тогда
			СтавкаНДСЧислом = ЦенообразованиеКлиентСервер.ПолучитьСтавкуНДСЧислом(Строка.СтавкаНДСПоФакту);
			СуммаСНДСПоФакту = ТекущаяСсылка.МассивПоФакту[0];
			Строка.СуммаНДСПоФакту = Окр(СуммаСНДСПоФакту / (1 + СтавкаНДСЧислом) * СтавкаНДСЧислом,2);
			Строка.СуммаПоФакту = ?(ТекущаяСсылка.ЦенаВключаетНДСПоФакту, СуммаСНДСПоФакту, СуммаСНДСПоФакту - Строка.СуммаНДСПоФакту);
			ТекущаяСсылка.МассивПоФакту.Удалить(0);
			Если Строка.КоличествоПоФакту > 0 Тогда
				Строка.ЦенаПоФакту = Строка.СуммаПоФакту / Строка.КоличествоПоФакту;
			КонецЕсли;
		Иначе
			Строка.ЦенаПоФакту = Строка.ЦенаПоДокументам;
		КонецЕсли;
		
		Если ТекущаяСсылка.МассивПоДокументам <> Неопределено И Строка.СуммаПоДокументам<>0 Тогда
			Строка.ЦенаПоФакту = Строка.ЦенаПоДокументам;
		КонецЕсли;
		
		Строка.СуммаИзлишек = ?(Строка.СуммаПоФакту>Строка.СуммаПоДокументам, Строка.СуммаПоФакту-Строка.СуммаПоДокументам, 0);
		Строка.СуммаНедостача = ?(Строка.СуммаПоФакту<Строка.СуммаПоДокументам, Строка.СуммаПоДокументам-Строка.СуммаПоФакту, 0);
		
	КонецЦикла;
	
КонецПроцедуры

// Возвращает соответствие строки номера паспорта по строкам таблицы товаров
//
// Параметры:
// 	ТаблицаТоваров - ТаблицаЗначений - Таблица с товарами
// 	ТаблицаПаспортов - ТаблицаЗначений - Таблица с сертификатами
//
// Возвращаемое значение:
// 	Соответствие - Соответствие с ключами типа "СтрокаТаблицыЗначений" и значениями типа "Строка"
//
Функция ПолучитьСоотвествиеПаспортов(ТаблицаТоваров, ТаблицаПаспортов)
	
	СоответствиеПаспортов = Новый Соответствие;
	
	Для Каждого СтрокаТовара Из ТаблицаТоваров Цикл
		
		СтрокаПаспортов = "";
		
		СтруктураОтбора = Новый Структура;
		СтруктураОтбора.Вставить("Ссылка", СтрокаТовара.Ссылка);
		СтруктураОтбора.Вставить("НоменклатураПоставщика", СтрокаТовара.НоменклатураПоставщика);
		СтруктураОтбора.Вставить("Номенклатура", СтрокаТовара.Номенклатура);
		СтруктураОтбора.Вставить("Характеристика", СтрокаТовара.Характеристика);
		СтруктураОтбора.Вставить("ЕдиницаИзмерения", СтрокаТовара.ЕдиницаИзмерения);
		СтруктураОтбора.Вставить("Упаковка", СтрокаТовара.Упаковка);
		СтруктураОтбора.Вставить("Цена", СтрокаТовара.ЦенаПоФакту);
		
		НайденныеСтроки = ТаблицаПаспортов.НайтиСтроки(СтруктураОтбора);
		
		ПерваяСтрока = Истина;
		Для Каждого Строка Из НайденныеСтроки Цикл
			СтрокаПаспортов = СтрокаПаспортов + ?(ПерваяСтрока, "", ", ") + Строка.НомерПаспорта;
			ПерваяСтрока = Ложь;
		КонецЦикла;
		
		СоответствиеПаспортов.Вставить(СтрокаТовара, СтрокаПаспортов);
		
	КонецЦикла;
	
	Возврат СоответствиеПаспортов;
	
КонецФункции

//Процедура заполняет табличный документ ТОРГ2 и ТОРГ3
//
// Параметры:
// 	ИмяМакета - Строка - Строка имени макета
// 	ПечатьВНоменклатуреПоставщика - Булево
// 	ТабличныйДокумент - ТабличныйДокумент - Табличный документ для вывода печатной формы
// 	Запрос - Запрос - Запрос по данным документов
// 	ОбъектыПечати - СписокЗначений
//
Процедура ЗаполнитьТабличныйДокументТОРГ(ИмяМакета, ПечатьВНоменклатуреПоставщика, ТабличныйДокумент, Запрос, ОбъектыПечати)
	
	ПечатьТорг2 = (ИмяМакета="ТОРГ2");
	
	ТабличныйДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_АктОРасхожденияхПриПоступленииТоваров_" + ИмяМакета;
	
	Макет = УправлениеПечатью.ПолучитьМакет("Документ.АктОРасхожденияхПриПоступленииТоваров.ПФ_MXL_" + ИмяМакета);
	
	ПакетРезультатов = Запрос.ВыполнитьПакет();
	ДанныеСчетовФактур = ПакетРезультатов[0].Выбрать();
	ДанныеПечати = ПакетРезультатов[1].Выбрать();
	ТаблицаТоваров = ПакетРезультатов[4].Выгрузить();
	ТаблицаПаспортов = ПакетРезультатов[5].Выгрузить();
	
	СоответствиеПаспортов = ПолучитьСоотвествиеПаспортов(ТаблицаТоваров, ТаблицаПаспортов);
	
	Если ПечатьТорг2 Тогда
		
		ТаблицаТоваровПоДокументам = ПакетРезультатов[6].Выгрузить();
		ТаблицаКурсовВалют = ПакетРезультатов[7].Выгрузить();
		
		ПересчитатьСуммыВВалютеРегламентированногоУчета(ТаблицаТоваров, ТаблицаКурсовВалют);
		
	КонецЕсли;
	
	ПервыйДокумент = Истина;
	
	КолонкаКодов = ФормированиеПечатныхФорм.ИмяДополнительнойКолонки();
	Если НЕ ЗначениеЗаполнено(КолонкаКодов) Тогда
		КолонкаКодов = ?(ПечатьТорг2, "Артикул", "Код");
	КонецЕсли;
	
	Пока ДанныеПечати.Следующий() Цикл
		
		Если ДанныеПечати.ОшибкаНетРасхождений Тогда
			Текст = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				НСтр("ru = 'В документе %1 нет расхождений. Печать акта об установленном расхождении по количеству и качеству при приемке %2 не требуется.'"),
				ДанныеПечати.Ссылка,
				?(ПечатьТорг2,
					НСтр("ru='товарно-материальных ценностей'"),
					НСтр("ru='импортных товаров'")
				)
				);
				
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
				Текст,
				ДанныеПечати.Ссылка
			);
			Продолжить;
		КонецЕсли;
		
		Если ПервыйДокумент Тогда
			ПервыйДокумент = Ложь;
		Иначе
			ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		
		НомерСтрокиНачало = ТабличныйДокумент.ВысотаТаблицы + 1;
		
		ТекстНДСВШапкеТаблицы = ?(ДанныеПечати.ЦенаВключаетНДС, "", " " + НСтр("ru='(Без НДС)'"));
		
		// Страница №1 ////////////////////////////////////////////////////////////////////////////////////////////////////
		// Вывод шапки
		Область = Макет.ПолучитьОбласть("ШапкаПервойСтраницы");
		Область.Параметры.Заполнить(ДанныеПечати);
		Область.Параметры.НомерДокумента = ПрефиксацияОбъектовКлиентСервер.ПолучитьНомерНаПечать(ДанныеПечати.НомерДокумента, Ложь, Истина);
		Область.Параметры.ПредставлениеОрганизации = ФормированиеПечатныхФорм.ОписаниеОрганизации(ФормированиеПечатныхФорм.СведенияОЮрФизЛице(ДанныеПечати.Организация, ДанныеПечати.ДатаДокумента), "ПолноеНаименование,ЮридическийАдрес,Телефоны,");
		Область.Параметры.Грузоотправитель = ФормированиеПечатныхФорм.ОписаниеОрганизации(ФормированиеПечатныхФорм.СведенияОЮрФизЛице(ДанныеПечати.Грузоотправитель, ДанныеПечати.ДатаДокумента), "ПолноеНаименование,ЮридическийАдрес,Телефоны,");
		Область.Параметры.Производитель = ДанныеПечати.Производитель;
		Область.Параметры.Поставщик = ФормированиеПечатныхФорм.ОписаниеОрганизации(ФормированиеПечатныхФорм.СведенияОЮрФизЛице(ДанныеПечати.Поставщик, ДанныеПечати.ДатаДокумента), "ПолноеНаименование,ЮридическийАдрес,Телефоны,");
		Область.Параметры.СтраховаяКомпания = ФормированиеПечатныхФорм.ОписаниеОрганизации(ФормированиеПечатныхФорм.СведенияОЮрФизЛице(ДанныеПечати.СтраховаяКомпания, ДанныеПечати.ДатаДокумента), "ПолноеНаименование,ЮридическийАдрес,Телефоны,");
		Область.Параметры.Заполнить(ПолучитьСтруктуруПоДате("ДатаДоставкиТоваров", ДанныеПечати.ДатаДоставкиТоваров));
		Область.Параметры.Заполнить(ПолучитьСтруктуруПоДате("ДатаОтправленияТоваров", ДанныеПечати.ДатаОтправленияТоваров));
		Область.Параметры.Заполнить(ПолучитьСтруктуруПоДате("ДатаДоговораПоставки", ДанныеПечати.ДатаДоговораПоставки));
		ДанныеСчетовФактур.Сбросить();
		Если ДанныеСчетовФактур.НайтиСледующий(Новый Структура("ДокументОснование", ДанныеПечати.ДокументОснование)) Тогда
			Область.Параметры.Заполнить(ДанныеСчетовФактур);
			Область.Параметры.Заполнить(ПолучитьСтруктуруПоДате("ДатаСчетаФактуры", ДанныеСчетовФактур.ДатаСчетаФактуры));
		КонецЕсли;
		Область.Параметры.Заполнить(ПолучитьСтруктуруПоДате("ДатаКоммерческогоАкта", ДанныеПечати.ДатаКоммерческогоАкта));
		Область.Параметры.Заполнить(ПолучитьСтруктуруПоДате("ДатаВетеринарногоСвидетельства", ДанныеПечати.ДатаВетеринарногоСвидетельства));
		Область.Параметры.Заполнить(ПолучитьСтруктуруПоДате("ДатаЖелезнодорожнойНакладной", ДанныеПечати.ДатаЖелезнодорожнойНакладной));
		Область.Параметры.Заполнить(ПолучитьСтруктуруПоДате("ДатаДокументаОВызовеПредставителяПартнера", ДанныеПечати.ДатаДокументаОВызовеПредставителяПартнера));
		Область.Параметры.Заполнить(ПолучитьСтруктуруПоДате("ДатаКоносамента", ДанныеПечати.ДатаКоносамента));
		Область.Параметры.Заполнить(ПолучитьСтруктуруПоДате("ДатаВскрытияТары", ДанныеПечати.ДатаВскрытияТары));
		Область.Параметры.ВызваемыйПредставительПартнера = ПолучитьЗначениеРеквизитаПоШаблону(ДанныеПечати.ВызваемыйПредставительПартнера, НСтр("ru='грузоотправителя, поставщика, производителя'"));
		Область.Параметры.ВидДокументаОВызовеПредставителяПартнера = ПолучитьЗначениеРеквизитаПоШаблону(ДанныеПечати.ВидДокументаОВызовеПредставителяПартнера, НСтр("ru='телеграмма, факс, телефонограмма, радиограмма'"));
		Область.Параметры.ОснованиеДляСоставленияАкта = ПолучитьЗначениеРеквизитаПоШаблону(ДанныеПечати.ОснованиеДляСоставленияАкта, НСтр("ru='приказ, распоряжение'"));
		Область.Параметры.РуководительФИО = ДанныеПечати.Руководитель;
		
		ШтрихкодированиеПечатныхФорм.ВывестиШтрихкодВТабличныйДокумент(ТабличныйДокумент, Макет, Область, ДанныеПечати.Ссылка);
		ТабличныйДокумент.Вывести(Область);
		
		// Вывод таблицы приемки товаров
		Если ПечатьТорг2 Тогда
			Область = Макет.ПолучитьОбласть("ТаблицаПриемкиТоваровШапка");
			ТабличныйДокумент.Вывести(Область);
			ТаблицаПриемкиТоваров = ДанныеПечати.ТаблицаПриемкиТоваров.Выгрузить();
			Для Каждого Строка Из ТаблицаПриемкиТоваров Цикл
				Область = Макет.ПолучитьОбласть("ТаблицаПриемкиТоваровСтрока");
				Область.Параметры.Заполнить(Строка);
				ТабличныйДокумент.Вывести(Область);
			КонецЦикла;
			Область = Макет.ПолучитьОбласть("ТаблицаПриемкиТоваровПодвал");
			ТабличныйДокумент.Вывести(Область);
		КонецЕсли;
		
		ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		
		// Страница №2 ////////////////////////////////////////////////////////////////////////////////////////////////////
		
		// Вывод шапки
		Область = Макет.ПолучитьОбласть("ШапкаВторойСтраницы");
		ТабличныйДокумент.Вывести(Область);
		
		Если ПечатьТорг2 Тогда
			
			// Вывод состояния транспорта по документам
			ВывестиМногострочноеПоле(ТабличныйДокумент, Макет, ДанныеПечати, "СостояниеТранспортаПоДокументам", 4);
			
			// Вывод таблицы товаров по документам
			Область = Макет.ПолучитьОбласть("ТаблицаТоваровПоДокументамШапка");
			ТабличныйДокумент.Вывести(Область);
			Строки = ТаблицаТоваровПоДокументам.НайтиСтроки(Новый Структура("Ссылка",ДанныеПечати.Ссылка));
			Для Каждого Строка Из Строки Цикл
				Область = Макет.ПолучитьОбласть("ТаблицаТоваровПоДокументамСтрока");
				Область.Параметры.Заполнить(Строка);
				Если ПечатьВНоменклатуреПоставщика Тогда
					Область.Параметры.Товар = Строка.НоменклатураПоставщика;
				Иначе
					Область.Параметры.Товар = НоменклатураКлиентСервер.ПредставлениеНоменклатурыДляПечати(
						Строка.НоменклатураНаименование,
						Строка.ХарактеристикаНаименование
					);
				КонецЕсли;
				ТабличныйДокумент.Вывести(Область);
			КонецЦикла;
			Область = Макет.ПолучитьОбласть("ТаблицаТоваровПоДокументамПодвал");
			ТабличныйДокумент.Вывести(Область);
			
			// Вывод состояния транспорта по факту
			ВывестиМногострочноеПоле(ТабличныйДокумент, Макет, ДанныеПечати, "СостояниеТранспортаПоФакту", 4);
			
			// Вывод таблицы итогов
			Область = Макет.ПолучитьОбласть("ТаблицаИтогов");
			Область.Параметры.Заполнить(ДанныеПечати);
			ТабличныйДокумент.Вывести(Область);
			
		Иначе
			
			// Вывод таблицы брутто по документам
			Область = Макет.ПолучитьОбласть("ТаблицаБруттоПоДокументам");
			ТабличныйДокумент.Вывести(Область);
			
			// Вывод Условия Хранения Товара До Вскрытия
			ВывестиМногострочноеПоле(ТабличныйДокумент, Макет, ДанныеПечати, "УсловияХраненияТовараДоВскрытия", 4);
			
		КонецЕсли;
		
		// Вывод первой части таблицы товаров
		Область = Макет.ПолучитьОбласть("ТаблицаТоваров1Шапка");
		Область.Параметры.НДС = ТекстНДСВШапкеТаблицы;
		Если НЕ ПечатьТорг2 Тогда
			Область.Параметры.Валюта = ДанныеПечати.Валюта;
		КонецЕсли;
		ТабличныйДокумент.Вывести(Область);
		Область = Макет.ПолучитьОбласть("ТаблицаТоваров1Строка");
		Товары = ТаблицаТоваров.НайтиСтроки(Новый Структура("Ссылка", ДанныеПечати.Ссылка));
		Для Каждого Товар Из Товары Цикл
			Область.Параметры.Заполнить(Товар);
			Если ПечатьВНоменклатуреПоставщика Тогда
				Область.Параметры.Товар = Товар.НоменклатураПоставщика;
			Иначе
				Область.Параметры.Товар = НоменклатураКлиентСервер.ПредставлениеНоменклатурыДляПечати(
					Товар.НоменклатураНаименование,
					Товар.ХарактеристикаНаименование
				);
			КонецЕсли;
			Область.Параметры.ЗначениеКода = Товар[КолонкаКодов];
			ТабличныйДокумент.Вывести(Область);
		КонецЦикла;
		Область = Макет.ПолучитьОбласть("ТаблицаТоваров1Подвал");
		ТабличныйДокумент.Вывести(Область);
		
		ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		
		// Страница №3 ////////////////////////////////////////////////////////////////////////////////////////////////////
		
		// Вывод шапки
		Область = Макет.ПолучитьОбласть("ШапкаТретьейСтраницы");
		ТабличныйДокумент.Вывести(Область);
		
		Если ПечатьТорг2 Тогда
			
			// Вывод Условий Хранения Товара До Вскрытия
			ВывестиМногострочноеПоле(ТабличныйДокумент, Макет, ДанныеПечати, "УсловияХраненияТовараДоВскрытия", 4);
			
			// Вывод Температуры При Разгрузке
			Область = Макет.ПолучитьОбласть("ТемператураПриРазгрузке");
			Область.Параметры.ТемператураПриРазгрузке = ДанныеПечати.ТемператураПриРазгрузке;
			ТабличныйДокумент.Вывести(Область);
			
		Иначе
			
			// Вывод таблицы итогов
			Область = Макет.ПолучитьОбласть("ТаблицаИтогов");
			Область.Параметры.Заполнить(ДанныеПечати);
			ТабличныйДокумент.Вывести(Область);
			
		КонецЕсли;
		
		// Вывод Состояния Тары И Упаковки
		ВывестиМногострочноеПоле(ТабличныйДокумент, Макет, ДанныеПечати, "СостояниеТарыИУпаковки", 4);
		
		Если ПечатьТорг2 Тогда
			
			// Вывод содержания наружной маркировки
			ВывестиМногострочноеПоле(ТабличныйДокумент, Макет, ДанныеПечати, "СодержаниеНаружнойМаркировки", 4);
			
			// Вывод даты вскрытия тары
			Область = Макет.ПолучитьОбласть("ДатаВскрытияТары");
			Область.Параметры.Заполнить(ПолучитьСтруктуруПоДате("ДатаВскрытияТары", ДанныеПечати.ДатаВскрытияТары));
			ТабличныйДокумент.Вывести(Область);
			
			// Вывод Организации Взвесившей И Опломбировавшей Товар
			ВывестиМногострочноеПоле(ТабличныйДокумент, Макет, ДанныеПечати, "ОрганизацияВзвесившаяИОпломбировавшаяТовар", 4);
			
			// Вывод Порядока Отбора Товара Для Выборочной Проверки
			ВывестиМногострочноеПоле(ТабличныйДокумент, Макет, ДанныеПечати, "ПорядокОтбораТовараДляВыборочнойПроверки", 4);
			
		КонецЕсли;
		
		// Вывод второй части таблицы товаров
		Область = Макет.ПолучитьОбласть("ТаблицаТоваров2Шапка");
		Область.Параметры.НДС = ТекстНДСВШапкеТаблицы;
		Если НЕ ПечатьТорг2 Тогда
			Область.Параметры.Валюта = ДанныеПечати.Валюта;
		КонецЕсли;
		ТабличныйДокумент.Вывести(Область);
		Область = Макет.ПолучитьОбласть("ТаблицаТоваров2Строка");
		Для Каждого Товар Из Товары Цикл
			Область.Параметры.Заполнить(Товар);
			Если ПечатьТорг2 И ЗначениеЗаполнено(КолонкаКодов) Тогда
				Область.Параметры.ЗначениеКода = Товар[КолонкаКодов];
			КонецЕсли;
			Область.Параметры.НомерПаспорта = СоответствиеПаспортов[Товар];
			ТабличныйДокумент.Вывести(Область);
		КонецЦикла;
		Область = Макет.ПолучитьОбласть("ТаблицаТоваров2Подвал");
		ТабличныйДокумент.Вывести(Область);
		
		ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		
		// Страница №4 ////////////////////////////////////////////////////////////////////////////////////////////////////
		
		// Вывод шапки
		Область = Макет.ПолучитьОбласть("ШапкаЧетвертойСтраницы");
		ТабличныйДокумент.Вывести(Область);
		
		// Вывод способа определения количества
		Область = Макет.ПолучитьОбласть("СпособОпределенияКоличества");
		Область.Параметры.Заполнить(ДанныеПечати);
		ТабличныйДокумент.Вывести(Область);
		// Вывод места определения количества
		ВывестиМногострочноеПоле(ТабличныйДокумент, Макет, ДанныеПечати, "МестоОпределенияКоличества", 4);
		// Вывод сведений об исправности весоизмерительных приборов
		ВывестиМногострочноеПоле(ТабличныйДокумент, Макет, ДанныеПечати, "СведенияОбИсправностиВесоизмерительныхПриборов", 4);
		// Вывод прочих данных
		ВывестиМногострочноеПоле(ТабличныйДокумент, Макет, ДанныеПечати, "ПрочиеДанные", 4);
		// Вывод подробного описания дефектов
		ВывестиМногострочноеПоле(ТабличныйДокумент, Макет, ДанныеПечати, "ПодробноеОписаниеДефектов", 4);
		// Вывод заключения комиссии
		ВывестиМногострочноеПоле(ТабличныйДокумент, Макет, ДанныеПечати, "ЗаключениеКомиссии", 4);
		// Вывод приложения
		ВывестиМногострочноеПоле(ТабличныйДокумент, Макет, ДанныеПечати, "Приложение", 4);
		
		// Вывод членов комиссии
		Область = Макет.ПолучитьОбласть("ЧленыКомиссии");
		Область.Параметры.Заполнить(ДанныеПечати);
		Область.Параметры.Заполнить(ПолучитьСтруктуруПоДате("ДатаВыдачиДокументаУдостоверяющегоПолномочияПредставителяПартнера", ДанныеПечати.ДатаВыдачиДокументаУдостоверяющегоПолномочияПредставителяПартнера));
		Область.Параметры.ПредседательКомиссииФИО = ФизическиеЛица.ФамилияИнициалыФизЛица(ДанныеПечати.ПредседательКомиссии);
		Область.Параметры.ЧленКомиссии1ФИО = ФизическиеЛица.ФамилияИнициалыФизЛица(ДанныеПечати.ЧленКомиссии1);
		Область.Параметры.ЧленКомиссии2ФИО = ФизическиеЛица.ФамилияИнициалыФизЛица(ДанныеПечати.ЧленКомиссии2);
		Область.Параметры.ЧленКомиссии3ФИО = ФизическиеЛица.ФамилияИнициалыФизЛица(ДанныеПечати.ЧленКомиссии3);
		Область.Параметры.ГлавныйБухгалтерФИО = ДанныеПечати.ГлавныйБухгалтер;
		ТабличныйДокумент.Вывести(Область);
		
		// Вывод решения руководителя
		ВывестиМногострочноеПоле(ТабличныйДокумент, Макет, ДанныеПечати, "РешениеРуководителя", 4);
		
		// Вывод кладовщика
		Область = Макет.ПолучитьОбласть("Кладовщик");
		Область.Параметры.КладовщикПринявшийТоварФИО = ФизическиеЛица.ФамилияИнициалыФизЛица(ДанныеПечати.КладовщикПринявшийТовар);
		ТабличныйДокумент.Вывести(Область);
		
		УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабличныйДокумент, НомерСтрокиНачало, ОбъектыПечати, ДанныеПечати.Ссылка);
		
	КонецЦикла;
	
	ТабличныйДокумент.АвтоМасштаб = Истина;
	
КонецПроцедуры

// Выводит многострочное поле в табличный документ
//
// Параметры:
// 	ТабличныйДокумент - ТабличныйДокумент
// 	Макет - ТабличныйДокумент - Макет табличного документа
// 	ДанныеПечати - ВыборкаИзРезультатаЗапроса
// 	ИмяПоля - Строка - Имя реквизита результата запроса, имя области макета, имя параметра области макета
// 	КоличествоСтрокРучногоВвода - Число - Количество строк ручного заполнения
//
Процедура ВывестиМногострочноеПоле(ТабличныйДокумент, Макет, ДанныеПечати, ИмяПоля, КоличествоСтрокРучногоВвода=4)
	
	Область = Макет.ПолучитьОбласть(ИмяПоля);
	ТабличныйДокумент.Вывести(Область);
	Если ЗначениеЗаполнено(ДанныеПечати[ИмяПоля]) Тогда
		
		Область = Макет.ПолучитьОбласть("МногострочноеПоле");
		Область.Параметры.Значение = ДанныеПечати[ИмяПоля];
		ТабличныйДокумент.Вывести(Область);
		
	Иначе
		ОбластьСтрокиРучногоЗаполнения = Макет.ПолучитьОбласть("СтрокаРучногоЗаполнения");
		Для Счет =1 По КоличествоСтрокРучногоВвода Цикл
			ТабличныйДокумент.Вывести(ОбластьСтрокиРучногоЗаполнения);
		КонецЦикла;
		
	КонецЕсли;
	
	ОбластьСтрокиПробела = Макет.ПолучитьОбласть("СтрокаПробела");
	ТабличныйДокумент.Вывести(ОбластьСтрокиПробела);
	
КонецПроцедуры

// Получает заполненную структуру по дате и имени параметра
//
// Параметры:
// 	ИмяПараметра - Строка - Строка префикса имён параметров структуры
// 	Дата - Дата - Дата, которую необходимо разбить на параметры
//
// Возвращаемое значение:
// 	Структура даты - Структура - содержит данные указанной даты 
//
Функция ПолучитьСтруктуруПоДате(ИмяПараметра, Дата)
	
	СтруктураДаты = Новый Структура;
	Если НЕ ЗначениеЗаполнено(Дата) Тогда
		Возврат СтруктураДаты;
	КонецЕсли;
	СтруктураДаты.Вставить(ИмяПараметра+"День", День(Дата));
	СтруктураДаты.Вставить(ИмяПараметра+"Месяц", Сред(Формат(Дата,"ДФ=dd.MMMM"), 4));
	СтруктураДаты.Вставить(ИмяПараметра+"Год", Формат(Год(Дата), "ЧГ=0"));
	
	Возврат СтруктураДаты;
	
КонецФункции

// Возвращает реквизит или шаблонную строку
//
// Параметры:
// 	Значение - ПроизвольноеЗначение - Значение реквизита документа для преобразования
// 	ШаблонПустогоЗначения - Строка - Строка, возвращаемая в случае если параметр "Значение" на заполнен
//
// Возвращаемое значение:
// 	Строка
//
Функция ПолучитьЗначениеРеквизитаПоШаблону(Значение, ШаблонПустогоЗначения)
	
	Если ЗначениеЗаполнено(Значение) Тогда
		Возврат Строка(Значение);
	Иначе
		Возврат ШаблонПустогоЗначения;
	КонецЕсли;
	
КонецФункции

// Процедура формирует текст запроса по данным для заполнения форм ТОРГ-2 и ТОРГ-3
//
// Параметры:
// 	ТекстЗапроса - Строка - Строка для записи текста запроса
//
Процедура СформироватьТекстЗапросаПоДокументам(ИмяМакета, ТекстЗапроса)
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	СчетФактураПолученныйДокументыОснования.ДокументОснование КАК ДокументОснование,
	|	СчетФактураПолученныйДокументыОснования.Ссылка.Номер КАК НомерСчетаФактуры,
	|	СчетФактураПолученныйДокументыОснования.Ссылка.Дата КАК ДатаСчетаФактуры
	|ИЗ
	|	Документ.СчетФактураПолученный.ДокументыОснования КАК СчетФактураПолученныйДокументыОснования
	|ГДЕ
	|	СчетФактураПолученныйДокументыОснования.ДокументОснование В
	|			(ВЫБРАТЬ
	|				АктОРасхожденияхПриПоступленииТоваров.ДокументОснование
	|			ИЗ
	|				Документ.АктОРасхожденияхПриПоступленииТоваров КАК АктОРасхожденияхПриПоступленииТоваров
	|			ГДЕ
	|				АктОРасхожденияхПриПоступленииТоваров.Ссылка В (&МассивОбъектов))
	|	И НЕ СчетФактураПолученныйДокументыОснования.Ссылка.ПометкаУдаления
	|
	|УПОРЯДОЧИТЬ ПО
	|	СчетФактураПолученныйДокументыОснования.Ссылка.НомерИсправления УБЫВ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	АктОРасхожденияхПриПоступленииТоваров.Ссылка КАК Ссылка,
	|	АктОРасхожденияхПриПоступленииТоваров.Номер КАК НомерДокумента,
	|	АктОРасхожденияхПриПоступленииТоваров.Дата КАК ДатаДокумента,
	|	АктОРасхожденияхПриПоступленииТоваров.ДокументОснование КАК ДокументОснование,
	|	АктОРасхожденияхПриПоступленииТоваров.Организация КАК Организация,
	|	АктОРасхожденияхПриПоступленииТоваров.Организация.Префикс КАК Префикс,
	|	ТаблицаОтветственныеЛица.РуководительНаименование  КАК Руководитель,
	|	ТаблицаОтветственныеЛица.РуководительДолжность КАК ДолжностьРуководителя,
	|	ТаблицаОтветственныеЛица.ГлавныйБухгалтерНаименование КАК ГлавныйБухгалтер,
	|	АктОРасхожденияхПриПоступленииТоваров.Подразделение КАК ПредставлениеПодразделения,
	|	АктОРасхожденияхПриПоступленииТоваров.МестоПриемкиТовара КАК МестоПриемкиТовара,
	|	АктОРасхожденияхПриПоступленииТоваров.Валюта КАК Валюта,
	|	АктОРасхожденияхПриПоступленииТоваров.ОснованиеДляСоставленияАкта КАК ОснованиеДляСоставленияАкта,
	|	АктОРасхожденияхПриПоступленииТоваров.ДатаДоставкиТоваров КАК ДатаДоставкиТоваров,
	|	АктОРасхожденияхПриПоступленииТоваров.ДатаОтправленияТоваров КАК ДатаОтправленияТоваров,
	|	АктОРасхожденияхПриПоступленииТоваров.ПереченьСопроводительныхДокументов КАК ПереченьСопроводительныхДокументов,
	|	АктОРасхожденияхПриПоступленииТоваров.ВызываемыйПредставительПартнера КАК ВызваемыйПредставительПартнера,
	|	АктОРасхожденияхПриПоступленииТоваров.ВидДокументаВызоваПредставителяПартнера КАК ВидДокументаОВызовеПредставителяПартнера,
	|	АктОРасхожденияхПриПоступленииТоваров.НомерДокументаОВызовеПредставителяПартнера КАК НомерДокументаОВызовеПредставителяПартнера,
	|	АктОРасхожденияхПриПоступленииТоваров.ДатаДокументаОВызовеПредставителяПартнера КАК ДатаДокументаОВызовеПредставителяПартнера,
	|	АктОРасхожденияхПриПоступленииТоваров.Грузоотправитель КАК Грузоотправитель,
	|	АктОРасхожденияхПриПоступленииТоваров.Производитель КАК Производитель,
	|	АктОРасхожденияхПриПоступленииТоваров.Контрагент КАК Поставщик,
	|	АктОРасхожденияхПриПоступленииТоваров.КонтрагентСтраховойКомпании КАК СтраховаяКомпания,
	|	АктОРасхожденияхПриПоступленииТоваров.НомерДоговораПоставки КАК НомерДоговораПоставки,
	|	АктОРасхожденияхПриПоступленииТоваров.ДатаДоговораПоставки КАК ДатаДоговораПоставки,
	|	АктОРасхожденияхПриПоступленииТоваров.НомерКоммерческогоАкта КАК НомерКоммерческогоАкта,
	|	АктОРасхожденияхПриПоступленииТоваров.ДатаКоммерческогоАкта КАК ДатаКоммерческогоАкта,
	|	АктОРасхожденияхПриПоступленииТоваров.НомерУдостоверенияОКачестве КАК НомерУдостоверенияОКачестве,
	|	АктОРасхожденияхПриПоступленииТоваров.ДатаУдостоверенияОКачестве КАК ДатаУдостоверенияОКачестве,
	|	АктОРасхожденияхПриПоступленииТоваров.НомерВетеринарногоСвидетельства КАК НомерВетеринарногоСвидетельства,
	|	АктОРасхожденияхПриПоступленииТоваров.ДатаВетеринарногоСвидетельства КАК ДатаВетеринарногоСвидетельства,
	|	АктОРасхожденияхПриПоступленииТоваров.НомерЖелезнодорожнойНакладной КАК НомерЖелезнодорожнойНакладной,
	|	АктОРасхожденияхПриПоступленииТоваров.ДатаЖелезнодорожнойНакладной КАК ДатаЖелезнодорожнойНакладной,
	|	АктОРасхожденияхПриПоступленииТоваров.НомерКоносамента КАК НомерКоносамента,
	|	АктОРасхожденияхПриПоступленииТоваров.ДатаКоносамента КАК ДатаКоносамента,
	|	АктОРасхожденияхПриПоступленииТоваров.СпособДоставки КАК СпособДоставки,
	|	АктОРасхожденияхПриПоступленииТоваров.НомерТранспортногоСредства КАК НомерТранспортногоСредства,
	|	АктОРасхожденияхПриПоступленииТоваров.ДатаОтправленияТоваров КАК ДатаОтправленияТовара,
	|	АктОРасхожденияхПриПоступленииТоваров.ПунктОтправления КАК ПунктОтправления,
	|	АктОРасхожденияхПриПоступленииТоваров.СкладОтправителяТовара КАК СкладОтправителяТовара,
	|	АктОРасхожденияхПриПоступленииТоваров.СведенияОСостоянииТранспортаПоСопроводительнымДокументам КАК СостояниеТранспортаПоДокументам,
	|	АктОРасхожденияхПриПоступленииТоваров.СведенияОСостоянииТранспортаПоФакту КАК СостояниеТранспортаПоФакту,
	|	АктОРасхожденияхПриПоступленииТоваров.УсловияХраненияТовараДоВскрытияНаСкладеПолучателя КАК УсловияХраненияТовараДоВскрытия,
	|	АктОРасхожденияхПриПоступленииТоваров.СведенияОТемпературеПриРазгрузке КАК ТемператураПриРазгрузке,
	|	АктОРасхожденияхПриПоступленииТоваров.СостояниеТарыИУпаковки КАК СостояниеТарыИУпаковки,
	|	АктОРасхожденияхПриПоступленииТоваров.СодержаниеНаружнойМаркировки КАК СодержаниеНаружнойМаркировки,
	|	АктОРасхожденияхПриПоступленииТоваров.ДатаВскрытияТары КАК ДатаВскрытияТары,
	|	АктОРасхожденияхПриПоступленииТоваров.ОрганизацияВзвесившаяИОпломбировавшаяТовар КАК ОрганизацияВзвесившаяИОпломбировавшаяТовар,
	|	АктОРасхожденияхПриПоступленииТоваров.ПорядокОтбораТовараДляВыборочнойПроверки КАК ПорядокОтбораТовараДляВыборочнойПроверки,
	|	АктОРасхожденияхПриПоступленииТоваров.СпособОпределенияКоличества КАК СпособОпределенияКоличества,
	|	АктОРасхожденияхПриПоступленииТоваров.МестоОпределенияКоличества КАК МестоОпределенияКоличества,
	|	АктОРасхожденияхПриПоступленииТоваров.СведенияОбИсправностиВесоизмерительныхПриборов КАК СведенияОбИсправностиВесоизмерительныхПриборов,
	|	АктОРасхожденияхПриПоступленииТоваров.ПрочиеДанные КАК ПрочиеДанные,
	|	АктОРасхожденияхПриПоступленииТоваров.ПодробноеОписаниеДефектов КАК ПодробноеОписаниеДефектов,
	|	АктОРасхожденияхПриПоступленииТоваров.ЗаключениеКомиссии КАК ЗаключениеКомиссии,
	|	АктОРасхожденияхПриПоступленииТоваров.Приложение КАК Приложение,
	|	АктОРасхожденияхПриПоступленииТоваров.ДокументУдостоверяющийПолномочияПредставителяПартнера КАК ДокументУдостоверяющийПолномочияПредставителяПартнера,
	|	АктОРасхожденияхПриПоступленииТоваров.НомерДокументаУдостоверяющегоПолномочияПредставителяПартнера КАК НомерДокументаУдостоверяющегоПолномочияПредставителяПартнера,
	|	АктОРасхожденияхПриПоступленииТоваров.ДатаВыдачиДокументаУдостоверяющегоПолномочияПредставителяПартнера КАК ДатаВыдачиДокументаУдостоверяющегоПолномочияПредставителяПартнера,
	|	АктОРасхожденияхПриПоступленииТоваров.КоличествоЛистовПриложения КАК КоличествоЛистовПриложения,
	|	АктОРасхожденияхПриПоступленииТоваров.РешениеРуководителя КАК РешениеРуководителя,
	|	АктОРасхожденияхПриПоступленииТоваров.КладовщикПринявшийТовар КАК КладовщикПринявшийТовар,
	|	АктОРасхожденияхПриПоступленииТоваров.ПредседательКомиссии КАК ПредседательКомиссии,
	|	АктОРасхожденияхПриПоступленииТоваров.ДолжностьПредседателяКомиссии КАК ДолжностьПредседателяКомиссии,
	|	АктОРасхожденияхПриПоступленииТоваров.ЧленКомиссии1 КАК ЧленКомиссии1,
	|	АктОРасхожденияхПриПоступленииТоваров.ДолжностьЧленаКомиссии1 КАК ДолжностьЧленаКомиссии1,
	|	АктОРасхожденияхПриПоступленииТоваров.ЧленКомиссии2 КАК ЧленКомиссии2,
	|	АктОРасхожденияхПриПоступленииТоваров.ДолжностьЧленаКомиссии2 КАК ДолжностьЧленаКомиссии2,
	|	АктОРасхожденияхПриПоступленииТоваров.ЧленКомиссии3 КАК ЧленКомиссии3,
	|	АктОРасхожденияхПриПоступленииТоваров.ДолжностьЧленаКомиссии3 КАК ДолжностьЧленаКомиссии3,
	|	АктОРасхожденияхПриПоступленииТоваров.ПриемкаТоваров.(
	|		НомерСтроки КАК НомерСтроки,
	|		ДатаПрибытияВПунктНазначения КАК ДатаПрибытияВПунктНазначения,
	|		ДатаВскрытия КАК ДатаВскрытия,
	|		ДатаВыдачиОрганизациейТранспорта КАК ДатаВыдачи,
	|		ДатаДоставкиНаСкладПолучателя КАК ДатаДоставкиНаСклад,
	|		ДатаНачалаРазгрузки КАК ДатаНачалаРазгрузки,
	|		ДатаНачалаПриемки КАК ДатаНачалаПриемки,
	|		ДатаПриостановленияПриемки КАК ДатаПриостановленияПриемки,
	|		ДатаВозобновленияПриемки КАК ДатаВозабновленияПриемки,
	|		ДатаОкончанияПриемки КАК ДатаОкончанияПриемки
	|	) КАК ТаблицаПриемкиТоваров,
	|	АктОРасхожденияхПриПоступленииТоваров.МассаБруттоПоДаннымПроизводителя КАК МассаБруттоПоДаннымПроизводителя,
	|	АктОРасхожденияхПриПоступленииТоваров.МассаБруттоВПунктеОтправления КАК МассаБруттоВПунктеОтправления,
	|	АктОРасхожденияхПриПоступленииТоваров.МассаБруттоВПунктеНазначения КАК МассаБруттоВПунктеНазначения,
	|	АктОРасхожденияхПриПоступленииТоваров.КоличествоМестПоДокументамГрузоотправителя КАК КоличествоМестПоДокументам,
	|	АктОРасхожденияхПриПоступленииТоваров.КоличествоМестПоФакту КАК КоличествоМестПоФакту,
	|	АктОРасхожденияхПриПоступленииТоваров.КоличествоМестПоФакту - АктОРасхожденияхПриПоступленииТоваров.КоличествоМестПоДокументамГрузоотправителя КАК КоличествоМестРасхождение,
	|	АктОРасхожденияхПриПоступленииТоваров.МассаБруттоПоДокументамГрузоотправителя КАК МассаБруттоПоДокументам,
	|	АктОРасхожденияхПриПоступленииТоваров.МассаБруттоПоФакту КАК МассаБруттоПоФакту,
	|	АктОРасхожденияхПриПоступленииТоваров.МассаБруттоПоФакту - АктОРасхожденияхПриПоступленииТоваров.МассаБруттоПоДокументамГрузоотправителя КАК МассаБруттоРасхождение,
	|	АктОРасхожденияхПриПоступленииТоваров.МассаНеттоПоДокументамГрузоотправителя КАК МассаНеттоПоДокументам,
	|	АктОРасхожденияхПриПоступленииТоваров.МассаНеттоПоФакту КАК МассаНеттоПоФакту,
	|	АктОРасхожденияхПриПоступленииТоваров.МассаНеттоПоФакту - АктОРасхожденияхПриПоступленииТоваров.МассаНеттоПоДокументамГрузоотправителя КАК МассаНеттоРасхождение,
	|	АктОРасхожденияхПриПоступленииТоваров.МассаТарыПоДокументамГрузоотправителя КАК МассаТарыПоДокументам,
	|	АктОРасхожденияхПриПоступленииТоваров.МассаТарыПоФакту КАК МассаТарыПоФакту,
	|	АктОРасхожденияхПриПоступленииТоваров.МассаТарыПоФакту - АктОРасхожденияхПриПоступленииТоваров.МассаТарыПоДокументамГрузоотправителя КАК МассаТарыРасхождение,
	|	АктОРасхожденияхПриПоступленииТоваров.СтепеньЗаполненияПоДокументамГрузоотправителя КАК СтепеньЗаполненияПоДокументам,
	|	АктОРасхожденияхПриПоступленииТоваров.СтепеньЗаполненияПоФакту КАК СтепеньЗаполненияПоФакту,
	|	ВЫБОР
	|		КОГДА НЕ АктОРасхожденияхПриПоступленииТоваров.ДокументОснование.ЕстьРасхождения
	|				ИЛИ АктОРасхожденияхПриПоступленииТоваров.ДокументОснование.СуммаИзлишков = 0
	|					И АктОРасхожденияхПриПоступленииТоваров.ДокументОснование.СуммаНедостачи = 0
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК ОшибкаНетРасхождений,
	|	ВЫБОР
	|		КОГДА АктОРасхожденияхПриПоступленииТоваров.ДокументОснование.НалогообложениеНДС <> ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаНеОблагаетсяНДС)
	|			ТОГДА АктОРасхожденияхПриПоступленииТоваров.ДокументОснование.ЦенаВключаетНДС
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ КАК ЦенаВключаетНДС
	|ИЗ
	|	Документ.АктОРасхожденияхПриПоступленииТоваров КАК АктОРасхожденияхПриПоступленииТоваров
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		ТаблицаОтветственныеЛица КАК ТаблицаОтветственныеЛица
	|		ПО АктОРасхожденияхПриПоступленииТоваров.Ссылка = ТаблицаОтветственныеЛица.Ссылка
	|ГДЕ
	|	АктОРасхожденияхПриПоступленииТоваров.Ссылка В(&МассивОбъектов)
	|
	|УПОРЯДОЧИТЬ ПО
	|	Ссылка,
	|	НомерСтроки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	АктОРасхожденияхПриПоступленииТоваров.Ссылка КАК Ссылка,
	|	ПоступлениеТоваровУслугТовары.НоменклатураПоставщика,
	|	ПоступлениеТоваровУслугТовары.Номенклатура КАК Номенклатура,
	|	ПоступлениеТоваровУслугТовары.Характеристика КАК Характеристика,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(ПоступлениеТоваровУслугТовары.Упаковка.Коэффициент, 1) = 1
	|			ТОГДА НЕОПРЕДЕЛЕНО
	|		ИНАЧЕ ПоступлениеТоваровУслугТовары.Упаковка
	|	КОНЕЦ КАК Упаковка,
	|	ВЫБОР
	|		КОГДА ПоступлениеТоваровУслугТовары.Упаковка = ЗНАЧЕНИЕ(Справочник.УпаковкиНоменклатуры.ПустаяСсылка)
	|			ТОГДА ПоступлениеТоваровУслугТовары.Номенклатура.ЕдиницаИзмерения
	|		ИНАЧЕ ПоступлениеТоваровУслугТовары.Упаковка.ЕдиницаИзмерения
	|	КОНЕЦ КАК ЕдиницаИзмерения,
	|	СУММА(ЕСТЬNULL(ПоступлениеТоваровУслугТовары.КоличествоУпаковок, 0)) КАК Количество,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(ПоступлениеТоваровУслугТовары.СуммаРучнойСкидки, 0) <> 0
	|			ТОГДА ЕСТЬNULL(ПоступлениеТоваровУслугТовары.Сумма, 0) / ЕСТЬNULL(ПоступлениеТоваровУслугТовары.КоличествоУпаковок, 1)
	|		ИНАЧЕ ЕСТЬNULL(ПоступлениеТоваровУслугТовары.Цена, 0)
	|	КОНЕЦ КАК Цена,
	|	СУММА(ЕСТЬNULL(ПоступлениеТоваровУслугТовары.Сумма, 0)) КАК Сумма,
	|	ПоступлениеТоваровУслугТовары.СтавкаНДС КАК СтавкаНДС,
	|	СУММА(ЕСТЬNULL(ПоступлениеТоваровУслугТовары.СуммаНДС, 0)) КАК СуммаНДС,
	|	ПоступлениеТоваровУслугТовары.Номенклатура.НаименованиеПолное КАК НоменклатураНаименование,
	|	ПоступлениеТоваровУслугТовары.Характеристика.НаименованиеПолное КАК ХарактеристикаНаименование,
	|	ВЫБОР
	|		КОГДА &ПечатьВНоменклатуреПоставщика = ИСТИНА
	|			ТОГДА ПоступлениеТоваровУслугТовары.НоменклатураПоставщика.Код
	|		ИНАЧЕ ПоступлениеТоваровУслугТовары.Номенклатура.Код
	|	КОНЕЦ КАК Код,
	|	ВЫБОР
	|		КОГДА &ПечатьВНоменклатуреПоставщика = ИСТИНА
	|			ТОГДА ПоступлениеТоваровУслугТовары.НоменклатураПоставщика.Артикул
	|		ИНАЧЕ ПоступлениеТоваровУслугТовары.Номенклатура.Артикул
	|	КОНЕЦ КАК Артикул,
	|	ПоступлениеТоваровУслугТовары.Ссылка.ЦенаВключаетНДС КАК ЦенаВключаетНДС,
	|	МИНИМУМ(ПоступлениеТоваровУслугТовары.НомерСтроки + 1000) КАК НомерСтроки
	|ПОМЕСТИТЬ ТоварыПоФакту
	|ИЗ
	|	Документ.АктОРасхожденияхПриПоступленииТоваров КАК АктОРасхожденияхПриПоступленииТоваров
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ПоступлениеТоваровУслуг.Товары КАК ПоступлениеТоваровУслугТовары
	|		ПО АктОРасхожденияхПриПоступленииТоваров.ДокументОснование = ПоступлениеТоваровУслугТовары.Ссылка
	|ГДЕ
	|	АктОРасхожденияхПриПоступленииТоваров.Ссылка В(&МассивОбъектов)
	|	И ПоступлениеТоваровУслугТовары.Номенклатура.ТипНоменклатуры В 
	|		(ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Товар),ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара))
	|
	|СГРУППИРОВАТЬ ПО
	|	АктОРасхожденияхПриПоступленииТоваров.Ссылка,
	|	ПоступлениеТоваровУслугТовары.НоменклатураПоставщика,
	|	ПоступлениеТоваровУслугТовары.Номенклатура,
	|	ПоступлениеТоваровУслугТовары.Характеристика,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(ПоступлениеТоваровУслугТовары.СуммаРучнойСкидки, 0) <> 0
	|			ТОГДА ЕСТЬNULL(ПоступлениеТоваровУслугТовары.Сумма, 0) / ЕСТЬNULL(ПоступлениеТоваровУслугТовары.КоличествоУпаковок, 1)
	|		ИНАЧЕ ЕСТЬNULL(ПоступлениеТоваровУслугТовары.Цена, 0)
	|	КОНЕЦ,
	|	ПоступлениеТоваровУслугТовары.СтавкаНДС,
	|	ПоступлениеТоваровУслугТовары.Номенклатура.НаименованиеПолное,
	|	ПоступлениеТоваровУслугТовары.Характеристика.НаименованиеПолное,
	|	ПоступлениеТоваровУслугТовары.Ссылка.ЦенаВключаетНДС,
	|	ВЫБОР
	|		КОГДА &ПечатьВНоменклатуреПоставщика = ИСТИНА
	|			ТОГДА ПоступлениеТоваровУслугТовары.НоменклатураПоставщика.Код
	|		ИНАЧЕ ПоступлениеТоваровУслугТовары.Номенклатура.Код
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА &ПечатьВНоменклатуреПоставщика = ИСТИНА
	|			ТОГДА ПоступлениеТоваровУслугТовары.НоменклатураПоставщика.Артикул
	|		ИНАЧЕ ПоступлениеТоваровУслугТовары.Номенклатура.Артикул
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА ПоступлениеТоваровУслугТовары.Упаковка = ЗНАЧЕНИЕ(Справочник.УпаковкиНоменклатуры.ПустаяСсылка)
	|			ТОГДА ПоступлениеТоваровУслугТовары.Номенклатура.ЕдиницаИзмерения
	|		ИНАЧЕ ПоступлениеТоваровУслугТовары.Упаковка.ЕдиницаИзмерения
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(ПоступлениеТоваровУслугТовары.Упаковка.Коэффициент, 1) = 1
	|			ТОГДА НЕОПРЕДЕЛЕНО
	|		ИНАЧЕ ПоступлениеТоваровУслугТовары.Упаковка
	|	КОНЕЦ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	АктОРасхожденияхПриПоступленииТоваров.Ссылка КАК Ссылка,
	|	ПоступлениеТоваровУслугТоварыПоДаннымПоставщика.НоменклатураПоставщика,
	|	ПоступлениеТоваровУслугТоварыПоДаннымПоставщика.Номенклатура КАК Номенклатура,
	|	ПоступлениеТоваровУслугТоварыПоДаннымПоставщика.Характеристика КАК Характеристика,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(ПоступлениеТоваровУслугТоварыПоДаннымПоставщика.Упаковка.Коэффициент, 1) = 1
	|			ТОГДА НЕОПРЕДЕЛЕНО
	|		ИНАЧЕ ПоступлениеТоваровУслугТоварыПоДаннымПоставщика.Упаковка
	|	КОНЕЦ КАК Упаковка,
	|	ВЫБОР
	|		КОГДА ПоступлениеТоваровУслугТоварыПоДаннымПоставщика.Упаковка = ЗНАЧЕНИЕ(Справочник.УпаковкиНоменклатуры.ПустаяСсылка)
	|			ТОГДА ПоступлениеТоваровУслугТоварыПоДаннымПоставщика.Номенклатура.ЕдиницаИзмерения
	|		ИНАЧЕ ПоступлениеТоваровУслугТоварыПоДаннымПоставщика.Упаковка.ЕдиницаИзмерения
	|	КОНЕЦ КАК ЕдиницаИзмерения,
	|	СУММА(ЕСТЬNULL(ПоступлениеТоваровУслугТоварыПоДаннымПоставщика.КоличествоУпаковок, 0)) КАК Количество,
	|	ЕСТЬNULL(ПоступлениеТоваровУслугТоварыПоДаннымПоставщика.Цена, 0) КАК Цена,
	|	СУММА(ЕСТЬNULL(ПоступлениеТоваровУслугТоварыПоДаннымПоставщика.Сумма, 0)) КАК Сумма,
	|	ЕСТЬNULL(ПоступлениеТоваровУслугТоварыПоДаннымПоставщика.СтавкаНДС, 0) КАК СтавкаНДС,
	|	СУММА(ЕСТЬNULL(ПоступлениеТоваровУслугТоварыПоДаннымПоставщика.СуммаНДС, 0)) КАК СуммаНДС,
	|	ПоступлениеТоваровУслугТоварыПоДаннымПоставщика.Номенклатура.НаименованиеПолное КАК НоменклатураНаименование,
	|	ПоступлениеТоваровУслугТоварыПоДаннымПоставщика.Характеристика.НаименованиеПолное КАК ХарактеристикаНаименование,
	|	ВЫБОР
	|		КОГДА &ПечатьВНоменклатуреПоставщика
	|			ТОГДА ПоступлениеТоваровУслугТоварыПоДаннымПоставщика.НоменклатураПоставщика.Код
	|		ИНАЧЕ ПоступлениеТоваровУслугТоварыПоДаннымПоставщика.Номенклатура.Код
	|	КОНЕЦ КАК Код,
	|	ВЫБОР
	|		КОГДА &ПечатьВНоменклатуреПоставщика
	|			ТОГДА ПоступлениеТоваровУслугТоварыПоДаннымПоставщика.НоменклатураПоставщика.Артикул
	|		ИНАЧЕ ПоступлениеТоваровУслугТоварыПоДаннымПоставщика.Номенклатура.Артикул
	|	КОНЕЦ КАК Артикул,
	|	ПоступлениеТоваровУслугТоварыПоДаннымПоставщика.Ссылка.ЦенаВключаетНДС КАК ЦенаВключаетНДС,
	|	МИНИМУМ(ПоступлениеТоваровУслугТоварыПоДаннымПоставщика.НомерСтроки) КАК НомерСтроки
	|ПОМЕСТИТЬ ТоварыПоДокументам
	|ИЗ
	|	Документ.АктОРасхожденияхПриПоступленииТоваров КАК АктОРасхожденияхПриПоступленииТоваров
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ПоступлениеТоваровУслуг.ТоварыПоДаннымПоставщика КАК ПоступлениеТоваровУслугТоварыПоДаннымПоставщика
	|		ПО АктОРасхожденияхПриПоступленииТоваров.ДокументОснование = ПоступлениеТоваровУслугТоварыПоДаннымПоставщика.Ссылка
	|ГДЕ
	|	АктОРасхожденияхПриПоступленииТоваров.Ссылка В(&МассивОбъектов)
	|	И ПоступлениеТоваровУслугТоварыПоДаннымПоставщика.Номенклатура.ТипНоменклатуры В
	|		(ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Товар),ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара))
	|
	|СГРУППИРОВАТЬ ПО
	|	АктОРасхожденияхПриПоступленииТоваров.Ссылка,
	|	ПоступлениеТоваровУслугТоварыПоДаннымПоставщика.НоменклатураПоставщика,
	|	ПоступлениеТоваровУслугТоварыПоДаннымПоставщика.Номенклатура,
	|	ПоступлениеТоваровУслугТоварыПоДаннымПоставщика.Характеристика,
	|	ЕСТЬNULL(ПоступлениеТоваровУслугТоварыПоДаннымПоставщика.Цена, 0),
	|	ЕСТЬNULL(ПоступлениеТоваровУслугТоварыПоДаннымПоставщика.СтавкаНДС, 0),
	|	ПоступлениеТоваровУслугТоварыПоДаннымПоставщика.Номенклатура.НаименованиеПолное,
	|	ПоступлениеТоваровУслугТоварыПоДаннымПоставщика.Характеристика.НаименованиеПолное,
	|	ПоступлениеТоваровУслугТоварыПоДаннымПоставщика.Ссылка.ЦенаВключаетНДС,
	|	ВЫБОР
	|		КОГДА &ПечатьВНоменклатуреПоставщика
	|			ТОГДА ПоступлениеТоваровУслугТоварыПоДаннымПоставщика.НоменклатураПоставщика.Код
	|		ИНАЧЕ ПоступлениеТоваровУслугТоварыПоДаннымПоставщика.Номенклатура.Код
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА &ПечатьВНоменклатуреПоставщика
	|			ТОГДА ПоступлениеТоваровУслугТоварыПоДаннымПоставщика.НоменклатураПоставщика.Артикул
	|		ИНАЧЕ ПоступлениеТоваровУслугТоварыПоДаннымПоставщика.Номенклатура.Артикул
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА ПоступлениеТоваровУслугТоварыПоДаннымПоставщика.Упаковка = ЗНАЧЕНИЕ(Справочник.УпаковкиНоменклатуры.ПустаяСсылка)
	|			ТОГДА ПоступлениеТоваровУслугТоварыПоДаннымПоставщика.Номенклатура.ЕдиницаИзмерения
	|		ИНАЧЕ ПоступлениеТоваровУслугТоварыПоДаннымПоставщика.Упаковка.ЕдиницаИзмерения
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(ПоступлениеТоваровУслугТоварыПоДаннымПоставщика.Упаковка.Коэффициент, 1) = 1
	|			ТОГДА НЕОПРЕДЕЛЕНО
	|		ИНАЧЕ ПоступлениеТоваровУслугТоварыПоДаннымПоставщика.Упаковка
	|	КОНЕЦ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЕСТЬNULL(ТоварыПоДокументам.Ссылка, ТоварыПоФакту.Ссылка) КАК Ссылка,
	|	ЕСТЬNULL(ТоварыПоДокументам.НоменклатураПоставщика, ТоварыПоФакту.НоменклатураПоставщика) КАК НоменклатураПоставщика,
	|	ЕСТЬNULL(ТоварыПоДокументам.Номенклатура, ТоварыПоФакту.Номенклатура) КАК Номенклатура,
	|	ЕСТЬNULL(ТоварыПоДокументам.Характеристика, ТоварыПоФакту.Характеристика) КАК Характеристика,
	|	ЕСТЬNULL(ТоварыПоДокументам.Упаковка, ТоварыПоФакту.Упаковка) КАК Упаковка,
	|	ЕСТЬNULL(ТоварыПоДокументам.Количество, 0) КАК КоличествоПоДокументам,
	|	ЕСТЬNULL(ТоварыПоДокументам.Цена, ТоварыПоФакту.Цена) КАК ЦенаПоДокументам,
	|	ЕСТЬNULL(ТоварыПоДокументам.Сумма, 0) КАК СуммаПоДокументам,
	|	ТоварыПоДокументам.СтавкаНДС КАК СтавкаНДСПоДокументам,
	|	ЕСТЬNULL(ТоварыПоДокументам.СуммаНДС, 0) КАК СуммаНДСПоДокументам,
	|	ЕСТЬNULL(ТоварыПоФакту.Количество, 0) КАК КоличествоПоФакту,
	|	ЕСТЬNULL(ТоварыПоФакту.Цена, ТоварыПоДокументам.Цена) КАК ЦенаПоФакту,
	|	ЕСТЬNULL(ТоварыПоФакту.Сумма, 0) КАК СуммаПоФакту,
	|	ТоварыПоФакту.СтавкаНДС КАК СтавкаНДСПоФакту,
	|	ЕСТЬNULL(ТоварыПоФакту.СуммаНДС, 0) КАК СуммаНДСПоФакту,
	|	ЕСТЬNULL(ТоварыПоДокументам.Код, ТоварыПоФакту.Код) КАК Код,
	|	ЕСТЬNULL(ТоварыПоДокументам.Артикул, ТоварыПоФакту.Артикул) КАК Артикул,
	|	ЕСТЬNULL(ТоварыПоДокументам.ЕдиницаИзмерения, ТоварыПоФакту.ЕдиницаИзмерения) КАК ЕдиницаИзмерения,
	|	ЕСТЬNULL(ТоварыПоДокументам.ЕдиницаИзмерения.Код, ТоварыПоФакту.ЕдиницаИзмерения.Код) КАК КодПоОКЕИ,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(ТоварыПоФакту.Количество, 0) - ЕСТЬNULL(ТоварыПоДокументам.Количество, 0) > 0
	|			ТОГДА ЕСТЬNULL(ТоварыПоФакту.Количество, 0) - ЕСТЬNULL(ТоварыПоДокументам.Количество, 0)
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК КоличествоИзлишек,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(ТоварыПоДокументам.Количество, 0) - ЕСТЬNULL(ТоварыПоФакту.Количество, 0) > 0
	|			ТОГДА ЕСТЬNULL(ТоварыПоДокументам.Количество, 0) - ЕСТЬNULL(ТоварыПоФакту.Количество, 0)
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК КоличествоНедостача,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(ТоварыПоФакту.Сумма, 0) - ЕСТЬNULL(ТоварыПоДокументам.Сумма, 0) > 0
	|			ТОГДА ЕСТЬNULL(ТоварыПоФакту.Сумма, 0) - ЕСТЬNULL(ТоварыПоДокументам.Сумма, 0)
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК СуммаИзлишек,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(ТоварыПоДокументам.Сумма, 0) - ЕСТЬNULL(ТоварыПоФакту.Сумма, 0) > 0
	|			ТОГДА ЕСТЬNULL(ТоварыПоДокументам.Сумма, 0) - ЕСТЬNULL(ТоварыПоФакту.Сумма, 0)
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК СуммаНедостача,
	|	ЕСТЬNULL(ТоварыПоДокументам.НоменклатураНаименование, ТоварыПоФакту.НоменклатураНаименование) КАК НоменклатураНаименование,
	|	ЕСТЬNULL(ТоварыПоДокументам.ХарактеристикаНаименование, ТоварыПоФакту.ХарактеристикаНаименование) КАК ХарактеристикаНаименование,
	|	ЕСТЬNULL(ТоварыПоФакту.ЦенаВключаетНДС, ЛОЖЬ) КАК ЦенаВключаетНДСПоФакту,
	|	ЕСТЬNULL(ТоварыПоДокументам.ЦенаВключаетНДС, ЛОЖЬ) КАК ЦенаВключаетНДСПоДокументам,
	|	ЕСТЬNULL(ТоварыПоДокументам.НомерСтроки, ТоварыПоФакту.НомерСтроки) КАК НомерСтроки
	|ИЗ
	|	ТоварыПоДокументам КАК ТоварыПоДокументам
	|		ПОЛНОЕ СОЕДИНЕНИЕ ТоварыПоФакту КАК ТоварыПоФакту
	|		ПО ТоварыПоДокументам.Ссылка = ТоварыПоФакту.Ссылка
	|			И ТоварыПоДокументам.Номенклатура = ТоварыПоФакту.Номенклатура
	|			И ТоварыПоДокументам.Характеристика = ТоварыПоФакту.Характеристика
	|			И ТоварыПоДокументам.Упаковка = ТоварыПоФакту.Упаковка
	|			И ТоварыПоДокументам.Цена = ТоварыПоФакту.Цена
	|			И ТоварыПоДокументам.ЕдиницаИзмерения = ТоварыПоФакту.ЕдиницаИзмерения
	|			И ТоварыПоДокументам.НоменклатураПоставщика = ТоварыПоФакту.НоменклатураПоставщика
	|			И ТоварыПоДокументам.СтавкаНДС = ТоварыПоФакту.СтавкаНДС
	|ГДЕ
	|	ЕСТЬNULL(ТоварыПоФакту.Сумма, 0) <> ЕСТЬNULL(ТоварыПоДокументам.Сумма, 0)
	|
	|УПОРЯДОЧИТЬ ПО
	|	Ссылка,
	|	НомерСтроки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	АктОРасхожденияхПриПоступленииТоваров.Ссылка КАК Ссылка,
	|	ПоступлениеТоваровУслугТовары.НоменклатураПоставщика КАК НоменклатураПоставщика,
	|	ПоступлениеТоваровУслугТовары.Номенклатура КАК Номенклатура,
	|	ПоступлениеТоваровУслугТовары.Характеристика КАК Характеристика,
	|	ПоступлениеТоваровУслугТовары.Упаковка КАК Упаковка,
	|	ВЫБОР
	|		КОГДА ПоступлениеТоваровУслугТовары.Упаковка = ЗНАЧЕНИЕ(Справочник.УпаковкиНоменклатуры.ПустаяСсылка)
	|			ТОГДА ПоступлениеТоваровУслугТовары.Номенклатура.ЕдиницаИзмерения
	|		ИНАЧЕ ПоступлениеТоваровУслугТовары.Упаковка.ЕдиницаИзмерения
	|	КОНЕЦ КАК ЕдиницаИзмерения,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(ПоступлениеТоваровУслугТовары.СуммаРучнойСкидки, 0) <> 0
	|			ТОГДА ЕСТЬNULL(ПоступлениеТоваровУслугТовары.Сумма, 0) / ЕСТЬNULL(ПоступлениеТоваровУслугТовары.КоличествоУпаковок, 1)
	|		ИНАЧЕ ЕСТЬNULL(ПоступлениеТоваровУслугТовары.Цена, 0)
	|	КОНЕЦ КАК Цена,
	|	ПоступлениеТоваровУслугТовары.СтавкаНДС КАК СтавкаНДС,
	|	ПоступлениеТоваровУслугТовары.НомерПаспорта КАК НомерПаспорта
	|ИЗ
	|	Документ.АктОРасхожденияхПриПоступленииТоваров КАК АктОРасхожденияхПриПоступленииТоваров
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ПоступлениеТоваровУслуг.Товары КАК ПоступлениеТоваровУслугТовары
	|		ПО АктОРасхожденияхПриПоступленииТоваров.ДокументОснование = ПоступлениеТоваровУслугТовары.Ссылка
	|ГДЕ
	|	АктОРасхожденияхПриПоступленииТоваров.Ссылка В(&МассивОбъектов)
	|	И ПоступлениеТоваровУслугТовары.Номенклатура.ТипНоменклатуры В
	|		(ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Товар),ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара))
	|	И ПоступлениеТоваровУслугТовары.НомерПаспорта <> """"
	|
	|СГРУППИРОВАТЬ ПО
	|	АктОРасхожденияхПриПоступленииТоваров.Ссылка,
	|	ПоступлениеТоваровУслугТовары.НоменклатураПоставщика,
	|	ПоступлениеТоваровУслугТовары.Номенклатура,
	|	ПоступлениеТоваровУслугТовары.Характеристика,
	|	ПоступлениеТоваровУслугТовары.Упаковка,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(ПоступлениеТоваровУслугТовары.СуммаРучнойСкидки, 0) <> 0
	|			ТОГДА ЕСТЬNULL(ПоступлениеТоваровУслугТовары.Сумма, 0) / ЕСТЬNULL(ПоступлениеТоваровУслугТовары.КоличествоУпаковок, 1)
	|		ИНАЧЕ ЕСТЬNULL(ПоступлениеТоваровУслугТовары.Цена, 0)
	|	КОНЕЦ,
	|	ПоступлениеТоваровУслугТовары.СтавкаНДС,
	|	ПоступлениеТоваровУслугТовары.НомерПаспорта,
	|	ВЫБОР
	|		КОГДА ПоступлениеТоваровУслугТовары.Упаковка = ЗНАЧЕНИЕ(Справочник.УпаковкиНоменклатуры.ПустаяСсылка)
	|			ТОГДА ПоступлениеТоваровУслугТовары.Номенклатура.ЕдиницаИзмерения
	|		ИНАЧЕ ПоступлениеТоваровУслугТовары.Упаковка.ЕдиницаИзмерения
	|	КОНЕЦ";
	
	Если ИмяМакета <> "ТОРГ2" Тогда
		Возврат;
	КонецЕсли;
	
	ТекстЗапроса = ТекстЗапроса + ";" + Символы.ПС +
	"ВЫБРАТЬ
	|	ТоварыПоДокументам.Ссылка КАК Ссылка,
	|	ТоварыПоДокументам.Упаковка,
	|	ТоварыПоДокументам.ЕдиницаИзмерения,
	|	ПРЕДСТАВЛЕНИЕ(ТоварыПоДокументам.НоменклатураПоставщика) КАК НоменклатураПоставщика,
	|	ТоварыПоДокументам.НоменклатураНаименование,
	|	ТоварыПоДокументам.ХарактеристикаНаименование,
	|	ТоварыПоДокументам.НомерСтроки КАК НомерСтроки
	|ИЗ
	|	ТоварыПоДокументам КАК ТоварыПоДокументам
	|
	|УПОРЯДОЧИТЬ ПО
	|	Ссылка,
	|	НомерСтроки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПериодыКурсовВалютДокументов.Ссылка КАК Ссылка,
	|	МАКСИМУМ(ВЫБОР
	|			КОГДА ПериодыКурсовВалютДокументов.Ссылка.Валюта = КурсыВалют.Валюта
	|				ТОГДА ЕСТЬNULL(КурсыВалют.Курс, 1)
	|		КОНЕЦ) КАК КурсВалютыДокумента,
	|	МАКСИМУМ(ВЫБОР
	|			КОГДА ПериодыКурсовВалютДокументов.Ссылка.Валюта = КурсыВалют.Валюта
	|				ТОГДА ЕСТЬNULL(КурсыВалют.Кратность, 1)
	|		КОНЕЦ) КАК КратностьВалютыДокумента,
	|	МАКСИМУМ(ВЫБОР
	|			КОГДА &ВалютаРегламентированногоУчета = КурсыВалют.Валюта
	|				ТОГДА ЕСТЬNULL(КурсыВалют.Курс, 1)
	|		КОНЕЦ) КАК КурсВалютыРегламентированногоУчета,
	|	МАКСИМУМ(ВЫБОР
	|			КОГДА &ВалютаРегламентированногоУчета = КурсыВалют.Валюта
	|				ТОГДА ЕСТЬNULL(КурсыВалют.Кратность, 1)
	|		КОНЕЦ) КАК КратностьВалютыРегламентированногоУчета,
	|	ВЫБОР
	|		КОГДА &ВалютаРегламентированногоУчета = ПериодыКурсовВалютДокументов.Ссылка.Валюта
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК ПересчетНеТребуется
	|ИЗ
	|	(ВЫБРАТЬ
	|		ДанныеДокумента.Ссылка КАК Ссылка,
	|		МАКСИМУМ(ВЫБОР
	|				КОГДА ДанныеДокумента.Валюта = КурсыВалют.Валюта
	|					ТОГДА КурсыВалют.Период
	|			КОНЕЦ) КАК ПериодВалютаДокумента,
	|		МАКСИМУМ(ВЫБОР
	|				КОГДА &ВалютаРегламентированногоУчета = КурсыВалют.Валюта
	|					ТОГДА КурсыВалют.Период
	|			КОНЕЦ) КАК ПериодВалютаРегламентированногоУчета
	|	ИЗ
	|		Документ.АктОРасхожденияхПриПоступленииТоваров КАК ДанныеДокумента
	|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КурсыВалют КАК КурсыВалют
	|			ПО ДанныеДокумента.Дата >= КурсыВалют.Период
	|				И (ДанныеДокумента.Валюта = КурсыВалют.Валюта
	|					ИЛИ &ВалютаРегламентированногоУчета = КурсыВалют.Валюта)
	|	ГДЕ
	|		ДанныеДокумента.Ссылка В(&МассивОбъектов)
	|	
	|	СГРУППИРОВАТЬ ПО
	|		ДанныеДокумента.Ссылка) КАК ПериодыКурсовВалютДокументов
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КурсыВалют КАК КурсыВалют
	|		ПО (ПериодыКурсовВалютДокументов.Ссылка.Валюта = КурсыВалют.Валюта
	|					И ПериодыКурсовВалютДокументов.ПериодВалютаДокумента = КурсыВалют.Период
	|				ИЛИ &ВалютаРегламентированногоУчета = КурсыВалют.Валюта
	|					И ПериодыКурсовВалютДокументов.ПериодВалютаРегламентированногоУчета = КурсыВалют.Период)
	|
	|СГРУППИРОВАТЬ ПО
	|	ПериодыКурсовВалютДокументов.Ссылка,
	|	ВЫБОР
	|		КОГДА &ВалютаРегламентированногоУчета = ПериодыКурсовВалютДокументов.Ссылка.Валюта
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ
	|
	|УПОРЯДОЧИТЬ ПО
	|	Ссылка";
	
КонецПроцедуры

Процедура ЗаполнитьСтруктуруПолучателейПечатныхФорм(СтруктураДанныхОбъектаПечати) Экспорт
	
	СтруктураДанныхОбъектаПечати.ОсновнойПолучатель = "Партнер";
	
	СтруктураДанныхОбъектаПечати.МассивРеквизитовПолучателей.Добавить("Партнер");
	Если ПолучитьФункциональнуюОпцию("ИспользоватьПартнеровИКонтрагентов") Тогда 
		СтруктураДанныхОбъектаПечати.МассивРеквизитовПолучателей.Добавить("Контрагент");
	КонецЕсли;
	СтруктураДанныхОбъектаПечати.МассивРеквизитовПолучателей.Добавить("КонтактноеЛицо");
	СтруктураДанныхОбъектаПечати.МассивРеквизитовПолучателей.Добавить("Грузоотправитель");
	СтруктураДанныхОбъектаПечати.МассивРеквизитовПолучателей.Добавить("СтраховаяКомпания");
	СтруктураДанныхОбъектаПечати.МассивРеквизитовПолучателей.Добавить("КонтрагентСтраховойКомпании");
	
КонецПроцедуры

#КонецЕсли