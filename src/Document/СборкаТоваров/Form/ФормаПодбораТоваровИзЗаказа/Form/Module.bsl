
////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ


&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)

	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;
	КонецЕсли;

	Заголовок = "Подбор товаров: " + Строка(Параметры.Заказ);

	ЗаполнитьТаблицуТоваров();

КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)

	Если Не ПустаяСтрока(ТекстСообщенияПользователю) Тогда

		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщенияПользователю);

	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытием(Отказ, СтандартнаяОбработка)

	Если Модифицированность Тогда

		Ответ = Вопрос(НСтр("ru = 'Данные были изменены. Перенести изменения в документ?'"), РежимДиалогаВопрос.ДаНетОтмена);

		Если Ответ = КодВозвратаДиалога.Да Тогда

			Отказ = Истина;
			// Снятие модифицированности, т.к. перед закрытием признак проверяется.
			Модифицированность = Ложь;

			ПеренестиСтрокиВДокумент();

		ИначеЕсли Ответ = КодВозвратаДиалога.Отмена Тогда

			Отказ = Истина;

		КонецЕсли;

	КонецЕсли;

КонецПроцедуры


////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ КОМАНД

&НаКлиенте
Процедура ПеренестиВДокумент(Команда)

	ПеренестиСтрокиВДокумент();

КонецПроцедуры

&НаКлиенте
Процедура ВыбратьСтроки(Команда)

	ОтметитьСтроки(Истина);

КонецПроцедуры

&НаКлиенте
Процедура ИсключитьСтроки(Команда)

	ОтметитьСтроки(Ложь);

КонецПроцедуры


////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

////////////////////////////////////////////////////////////////////////////////
//Прочее

&НаСервере
Функция ПоместитьТоварыВХранилище()

	АдресВХранилище = ПоместитьВоВременноеХранилище(Новый Структура("Товары",
			ТаблицаТовары.Выгрузить(Новый Структура("СтрокаВыбрана", Истина))));

	Возврат АдресВХранилище;

КонецФункции

&НаКлиенте
Процедура ПеренестиСтрокиВДокумент()

	// Снятие модифицированности, т.к. перед закрытием признак проверяется.
	Модифицированность = Ложь;

	АдресВХранилище = ПоместитьТоварыВХранилище();

	Закрыть();

	ОповеститьОВыборе(Новый Структура("ВыполняемаяОперация, АдресВХранилище",
						"ПодборТоваровИзЗаказа", АдресВХранилище));

КонецПроцедуры

&НаСервере
Процедура ЗаполнитьТаблицуТоваров()

	Выборка = Документы.СборкаТоваров.ПолучитьРезультатЗапросаПоОстаткамЗаказа(
				Параметры.Заказ,
				Параметры.Накладная).РезультатЗапросаПоКомплектующим.Выбрать();

	Пока Выборка.Следующий() Цикл

		СтрокаТоваров = ТаблицаТовары.Добавить();
		ЗаполнитьЗначенияСвойств(СтрокаТоваров,
				Выборка,
				"Номенклатура, Характеристика, КодСтроки, Упаковка, ДоляСтоимости, Количество");

		// Если упаковка заполнена нужно определить количество упаковок.
		Если ЗначениеЗаполнено(СтрокаТоваров.Упаковка) Тогда
			СтрокаТоваров.КоличествоУпаковок = СтрокаТоваров.Количество / Выборка.Коэффициент;
		Иначе
			СтрокаТоваров.КоличествоУпаковок = Выборка.Количество;
		КонецЕсли;

		СтрокаТоваров.ПрисутствуетВДокументе = Параметры.МассивКодовСтрок.Найти(СтрокаТоваров.КодСтроки) <> Неопределено;
		// Если в документе строки нет-пометим ее для добавления.
		СтрокаТоваров.СтрокаВыбрана          = Не СтрокаТоваров.ПрисутствуетВДокументе;

	КонецЦикла;

	Если ТаблицаТовары.Количество() = 0 Тогда

		ТекстСообщенияПользователю = СтрЗаменить(НСтр("ru = 'Нет данных для заполнения по документу ""%Заказ%"" .'"),
					"%Заказ%",
					Параметры.Заказ);

	КонецЕсли;

КонецПроцедуры

&НаСервере
Процедура ОтметитьСтроки(Значение)

	Для Каждого СтрокаТЧ Из ТаблицаТовары.НайтиСтроки(Новый Структура("СтрокаВыбрана", Не Значение)) Цикл

		СтрокаТЧ.СтрокаВыбрана = Значение;

	КонецЦикла;

КонецПроцедуры
