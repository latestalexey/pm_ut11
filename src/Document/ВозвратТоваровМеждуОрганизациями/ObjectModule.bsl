#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда


////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ 

Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	
	ПроверитьОрганизации(Отказ);
	
	МассивНепроверяемыхРеквизитов = Новый Массив;
	
	Если Не РасчетыЧерезОтдельногоКонтрагента Тогда
		МассивНепроверяемыхРеквизитов.Добавить("Партнер");
		МассивНепроверяемыхРеквизитов.Добавить("Контрагент");
	КонецЕсли;
	Если Не ПредъявленСчетФактура Или Не РасчетыЧерезОтдельногоКонтрагента Тогда
		МассивНепроверяемыхРеквизитов.Добавить("НомерСчетаФактуры");
		МассивНепроверяемыхРеквизитов.Добавить("ДатаСчетаФактуры");
		МассивНепроверяемыхРеквизитов.Добавить("ВалютаСчетаФактуры");
	КонецЕсли;
	Если ХозяйственнаяОперация=Перечисления.ХозяйственныеОперации.ВозвратПоКомиссииМеждуОрганизациями Тогда
		МассивНепроверяемыхРеквизитов.Добавить("РасшифровкаПлатежа.Сумма");
	КонецЕсли;

	Если ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВозвратТоваровМеждуОрганизациями Тогда
		СуммаПроверки = ЦенообразованиеКлиентСервер.ПолучитьСуммуДокумента(Товары,ЦенаВключаетНДС);
		ДенежныеСредстваСервер.ПроверитьЗаполнениеРасшифровкиПлатежа(ЭтотОбъект,СуммаПроверки,ХозяйственнаяОперация,Отказ);
	КонецЕсли;
	
	НоменклатураСервер.ПроверитьЗаполнениеХарактеристик(ЭтотОбъект,МассивНепроверяемыхРеквизитов,Отказ);
	ОбщегоНазначенияУТ.ПроверитьЗаполнениеКоличества(ЭтотОбъект,ПроверяемыеРеквизиты,Отказ);
	
	ОбщегоНазначения.УдалитьНепроверяемыеРеквизитыИзМассива(ПроверяемыеРеквизиты,МассивНепроверяемыхРеквизитов);
	
	ОтветственныеЛицаСервер.ПроверитьЗаполнениеОтветственныхЛицДокумента(ЭтотОбъект, Отказ);
	
КонецПроцедуры

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	ПроведениеСервер.УстановитьРежимПроведения(ЭтотОбъект,РежимЗаписи,РежимПроведения);
	ДополнительныеСвойства.Вставить("ЭтоНовый",ЭтоНовый());
	ДополнительныеСвойства.Вставить("РежимЗаписи",РежимЗаписи);
	
	СуммаДокумента = ЦенообразованиеКлиентСервер.ПолучитьСуммуДокумента(Товары,ЦенаВключаетНДС);
	Документы.СчетФактураВыданный.ПроверитьРеквизитыСчетФактуры(Ссылка, ПометкаУдаления, Организация, Валюта);
	Документы.СчетФактураПолученный.ПроверитьРеквизитыСчетФактуры(Ссылка, ПометкаУдаления, ОрганизацияПолучатель);
	
	Если Не РасчетыЧерезОтдельногоКонтрагента Тогда
		Партнер = Неопределено;
		Контрагент = Неопределено;
		БанковскийСчетКонтрагента = Неопределено;
		ДатаВходящегоДокумента = Неопределено;
		НомерВходящегоДокумента = "";
		ПредъявленСчетФактура = Ложь;
	КонецЕсли;
	ЗакупкиСервер.ОчиститьНомерДатуСчетаФактуры(ЭтотОбъект);
	
	Если РежимЗаписи=РежимЗаписиДокумента.Проведение Тогда
		Если ХозяйственнаяОперация=Перечисления.ХозяйственныеОперации.ВозвратПоКомиссииМеждуОрганизациями Тогда
			РасшифровкаПлатежа.Очистить();
		Иначе
			Если РасшифровкаПлатежа.Количество()=0 Тогда
				НоваяСтрока = РасшифровкаПлатежа.Добавить();
				НоваяСтрока.Заказ = ДокументПоступления;
				НоваяСтрока.Сумма = СуммаДокумента;
			КонецЕсли;
			ВзаиморасчетыСервер.ЗаполнитьСуммуВзаиморасчетовВТабличнойЧасти(Валюта,Дата,РасшифровкаПлатежа);
		КонецЕсли;
		ВидыЗапасовПолучателяУказаныВручную = ВидыЗапасовПолучателяУказаныВручную И ИзмененияВидовЗапасовПолучателяРазрешены();
		ЗаполнитьВидыЗапасов(Отказ);
		Если ДокументПоступления.Пустая() Тогда
			ЗаполнитьКлючиАналитикиУчетаПартийДокумента();
		КонецЕсли;
		ВзаиморасчетыСервер.ЗаполнитьИдентификаторыСтрокВТабличнойЧасти(ВидыЗапасов);
		ВзаиморасчетыСервер.ЗаполнитьИдентификаторыСтрокВТабличнойЧасти(ВидыЗапасовПолучателя);
	КонецЕсли;
	
КонецПроцедуры

Процедура ОбработкаУдаленияПроведения(Отказ)
	ПроведениеСервер.ИнициализироватьДополнительныеСвойстваДляПроведения(Ссылка, ДополнительныеСвойства);
	ПроведениеСервер.ПодготовитьНаборыЗаписейКРегистрацииДвижений(ЭтотОбъект);
	ПроведениеСервер.ЗаписатьНаборыЗаписей(ЭтотОбъект);
	ПроведениеСервер.ОчиститьДополнительныеСвойстваДляПроведения(ДополнительныеСвойства);
КонецПроцедуры

Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	ПроведениеСервер.ИнициализироватьДополнительныеСвойстваДляПроведения(Ссылка, ДополнительныеСвойства, РежимПроведения);
	Документы.ВозвратТоваровМеждуОрганизациями.ИнициализироватьДанныеДокумента(Ссылка, ДополнительныеСвойства);
	ПроведениеСервер.ПодготовитьНаборыЗаписейКРегистрацииДвижений(ЭтотОбъект);

	ВзаиморасчетыСервер.ОтразитьРасчетыСКлиентами(ДополнительныеСвойства,Движения,Отказ);
	ВзаиморасчетыСервер.ОтразитьРасчетыСКлиентамиПоследовательность(ДополнительныеСвойства,ПринадлежностьПоследовательностям,Отказ);
	ВзаиморасчетыСервер.ОтразитьРасчетыСПоставщиками(ДополнительныеСвойства,Движения,Отказ);
	ВзаиморасчетыСервер.ОтразитьРасчетыСПоставщикамиПоследовательность(ДополнительныеСвойства,ПринадлежностьПоследовательностям,Отказ);

	ЗапасыСервер.ОтразитьТоварыОрганизаций(ДополнительныеСвойства, Движения, Отказ);
	ЗапасыСервер.ОтразитьТоварыОрганизацийКПередаче(ДополнительныеСвойства, Движения, Отказ);
	ЗапасыСервер.ОтразитьТоварыКОформлениюОтчетовКомитента(ДополнительныеСвойства, Движения, Отказ);
	ПартионныйУчетСервер.ОтразитьПартииТоваровОрганизацийПоследовательность(ДополнительныеСвойства, ПринадлежностьПоследовательностям, Отказ);
	ПартионныйУчетСервер.ОтразитьДвиженияПартийТоваровОрганизаций(ДополнительныеСвойства, Движения, Отказ);
	ВзаиморасчетыСервер.ОтразитьСуммыДокументаВВалютеРегл(ДополнительныеСвойства, Движения, Отказ);

	ДоходыИРасходыСервер.ОтразитьСебестоимостьТоваров(ДополнительныеСвойства, Движения, Отказ);
	ДоходыИРасходыСервер.ОтразитьВыручкуИСебестоимостьПродаж(ДополнительныеСвойства, Движения, Отказ);
	
	ДоходыИРасходыСервер.ОтразитьНДСЗаписиКнигиПродаж(ДополнительныеСвойства, Движения, Отказ);
	
	ПроведениеСервер.ЗаписатьНаборыЗаписей(ЭтотОбъект);
	ПроведениеСервер.ОчиститьДополнительныеСвойстваДляПроведения(ДополнительныеСвойства);
КонецПроцедуры

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, СтандартнаяОбработка)
	
	Если ТипЗнч(ДанныеЗаполнения) = Тип("Структура") И ДанныеЗаполнения.Свойство("ЗаполнятьПоСхеме") Тогда
		Организация = ДанныеЗаполнения.Организация;
		ОрганизацияПолучатель = ДанныеЗаполнения.ОрганизацияПолучатель;
		Склад = ДанныеЗаполнения.Склад;
		ХозяйственнаяОперация = ДанныеЗаполнения.ХозяйственнаяОперация;
		ПоТоварамКОформлению = ДанныеЗаполнения.ЗаполнятьПоСхеме;
		
		Документы.ВозвратТоваровМеждуОрганизациями.ЗаполнитьРеквизитыПоУмолчанию(ЭтотОбъект);
		Документы.ВозвратТоваровМеждуОрганизациями.ЗаполнитьТоварыПоОстаткамКВозврату(ЭтотОбъект,ДанныеЗаполнения.КонецПериода);
		Документы.ВозвратТоваровМеждуОрганизациями.ЗаполнитьНалогобложениеИЦеныПоУмолчанию(ЭтотОбъект);
	КонецЕсли;
	
	ИнициализироватьДокумент(ДанныеЗаполнения);
	
КонецПроцедуры

Процедура ПриЗаписи(Отказ)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;	
	
	Документы.СчетФактураВыданный.АктуализироватьСчетФактуру(ЭтотОбъект.Ссылка, ЭтотОбъект.Проведен,
		?(ЭтотОбъект.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВозвратПоКомиссииМеждуОрганизациями,Истина,Ложь));
		
	Документы.СчетФактураПолученный.АктуализироватьСчетФактуру(ЭтотОбъект.Ссылка, ЭтотОбъект.Проведен,
		?(ЭтотОбъект.РасчетыЧерезОтдельногоКонтрагента,Ложь,Истина));
		
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

////////////////////////////////////////////////////////////////////////////////
// Инициализация и заполнение

Процедура ИнициализироватьДокумент(ДанныеЗаполнения = Неопределено)
	
	Документы.ВозвратТоваровМеждуОрганизациями.ЗаполнитьРеквизитыПоУмолчанию(ЭтотОбъект);
	ОтветственныеЛицаСервер.ЗаполнитьОтветственныхЛицДокумента(ЭтотОбъект);
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// Виды запасов

Процедура ЗаполнитьВидыЗапасов(Отказ)
	УстановитьПривилегированныйРежим(Истина);
	
	МенеджерВременныхТаблиц = ВременныеТаблицыДанныхДокумента();
	ПерезаполнитьВидыЗапасов = ДополнительныеСвойства.Свойство("ПерезаполнитьВидыЗапасов");
	РеквизитыИзменены = РеквизитыДокументаИзменились(МенеджерВременныхТаблиц);
	ТаблицаОшибок = ЗапасыСервер.ТаблицаОшибокЗаполненияВидовЗапасов();
	//возврат поставщику:
	Если Не Проведен Или ПерезаполнитьВидыЗапасов Или РеквизитыИзменены
		Или ЗапасыСервер.ПроверитьИзменениеТоваровПоКоличествуИСумме(МенеджерВременныхТаблиц)
	Тогда 
		Если ПоТоварамКОформлению Тогда
			ОстаткиКВозвратуПоТоварамКОформлению(МенеджерВременныхТаблиц);
		Иначе
			СформироватьДоступныеВидыЗапасов(МенеджерВременныхТаблиц);
			ЗапасыСервер.УстановитьБлокировкуОстатковТоваровОрганизаций(МенеджерВременныхТаблиц);
			ЗапасыСервер.ТаблицаОстатковТоваровОрганизаций(Ссылка, Организация, Дата, ДополнительныеСвойства, МенеджерВременныхТаблиц);
		КонецЕсли;
		ЗапасыСервер.ЗаполнитьВидыЗапасовДокумента(
			МенеджерВременныхТаблиц,
			ДополнительныеСвойства,
			ВидыЗапасов,
			ТаблицаОшибок,
			Отказ
		);
		ВидыЗапасов.Свернуть("Номенклатура,Характеристика,ВидЗапасов,НомерГТД,СтавкаНДС","Количество,СуммаСНДС,СуммаНДС");
		ЗаполнитьДопКолонкиВидовЗапасов();
		СообщитьОбОшибкахЗаполненияВидовЗапасов(ТаблицаОшибок);
	КонецЕсли;
	//возврат клиента:
	Если Не Отказ Тогда
		МенеджерВременныхТаблиц.Закрыть();
		МенеджерВременныхТаблиц = ВременныеТаблицыДокументаПолучателя();
		Если Не Проведен Или ПерезаполнитьВидыЗапасов Или РеквизитыИзменены Или ТоварыДокументаИзменились(МенеджерВременныхТаблиц) Тогда
			Если ПоТоварамКОформлению Тогда
				ОстаткиКПоступлениюПоТоварамКОформлению(МенеджерВременныхТаблиц);
			Иначе
				ОстаткиПереданныхТоваров(МенеджерВременныхТаблиц);
			КонецЕсли;
			// Виды запасов получателя заполняются всегда, Отказ игнорируется.
			ЗапасыСервер.ЗаполнитьВидыЗапасовДокумента(МенеджерВременныхТаблиц, ДополнительныеСвойства, ВидыЗапасовПолучателя, ТаблицаОшибок);
			ВидыЗапасовПолучателя.Свернуть("Номенклатура,Характеристика,ВидЗапасов,НомерГТД,СтавкаНДС","Количество,СуммаСНДС,СуммаНДС");
		КонецЕсли;
		ТаблицаОшибок.Очистить();
		СопоставитьВидыЗапасов(ТаблицаОшибок, Отказ);
		СообщитьОбОшибкахЗаполненияВидовЗапасов(ТаблицаОшибок);
	КонецЕсли;
КонецПроцедуры

Процедура СопоставитьВидыЗапасов(Ошибки, Отказ)
	Для Каждого Запас Из ВидыЗапасов Цикл
		Если ЗначениеЗаполнено(Запас.ВидЗапасовПолучателя) Тогда
			Запас.ВидЗапасовПолучателя = Неопределено;
		КонецЕсли;
	КонецЦикла;
	
	Отбор = Новый Структура("Номенклатура, Характеристика, НомерГТД, СтавкаНДС");
	Для Каждого ЗапасПолучателя Из ВидыЗапасовПолучателя Цикл
		Распределить = ЗапасПолучателя.Количество;
		ПроцентНДС = ЦенообразованиеКлиентСервер.ПолучитьСтавкуНДСЧислом(ЗапасПолучателя.СтавкаНДС);
		
		ЗаполнитьЗначенияСвойств(Отбор, ЗапасПолучателя);
		Запасы = ВидыЗапасов.НайтиСтроки(Отбор);
		Для Каждого Запас Из Запасы Цикл
			Если ЗначениеЗаполнено(Запас.ВидЗапасовПолучателя) Тогда
				Продолжить;
			КонецЕсли;
			
			Если Распределить >= Запас.Количество Тогда
				Запас.ВидЗапасовПолучателя = ЗапасПолучателя.ВидЗапасов;
				Распределить = Распределить - Запас.Количество;
			ИначеЕсли Распределить > 0. И Распределить < Запас.Количество Тогда
				НовыйЗапас = ВидыЗапасов.Добавить();
				ЗаполнитьЗначенияСвойств(НовыйЗапас, Запас, "Номенклатура, Характеристика, НомерГТД, СтавкаНДС, ВидЗапасов");
				
				НовыйЗапас.Количество = Запас.Количество - Распределить;
				НовыйЗапас.СуммаСНДС = НовыйЗапас.Количество * Запас.СуммаСНДС / Запас.Количество;
				НовыйЗапас.СуммаНДС = ЦенообразованиеКлиентСервер.РассчитатьСуммуНДС(НовыйЗапас.СуммаСНДС, ПроцентНДС, ЦенаВключаетНДС);
				// запаса получателя не хватает, новый запас будет заполнен следующим запасом получателя
				
				Запас.Количество = Распределить;
				Запас.СуммаСНДС = Запас.СуммаСНДС - НовыйЗапас.СуммаСНДС;
				Запас.СуммаНДС = Запас.СуммаНДС - НовыйЗапас.СуммаНДС;
				Запас.ВидЗапасовПолучателя = ЗапасПолучателя.ВидЗапасов;
				
				Распределить = 0;
			КонецЕсли;
		КонецЦикла;
		
		Если Распределить > 0 Тогда
			Ошибка = Ошибки.Добавить();
			ЗаполнитьЗначенияСвойств(Ошибка, ЗапасПолучателя);
			Ошибка.Количество = Распределить;
			Ошибка.ЕдиницаИзмерения = ОбщегоНазначения.ПолучитьЗначениеРеквизита(ЗапасПолучателя.Номенклатура, "ЕдиницаИзмерения");
			Отказ = Истина;
		КонецЕсли;
	КонецЦикла;
	
	Если Отказ Тогда
		ДополнительныеСвойства.Вставить("Ошибки_СопоставитьВидыЗапасов", Истина);
	КонецЕсли;
КонецПроцедуры

Процедура СообщитьОбОшибкахЗаполненияВидовЗапасов(ТаблицаОшибок)
	Если ДополнительныеСвойства.Свойство("Ошибки_СопоставитьВидыЗапасов") Тогда
		ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			НСтр("ru = 'Возврат превышает количество товара, ранее переданного от организации <%1> в организацию <%2>.
				|Укажите вручную виды запасов и номера ГТД получателя.'"),
			ОрганизацияПолучатель, Организация
		);
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, Ссылка);
	ИначеЕсли ТаблицаОшибок.Количество() > 0 Тогда
		Если ПоТоварамКОформлению Тогда
			ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				НСтр("ru = 'Возврат превышает количество товара в распоряжении к оформлению возврата на складе <%1> по налогообложению <%2>.'"),
				Склад, НалогообложениеНДС
			);
		Иначе
			ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				НСтр("ru = 'Возврат превышает остаток товара организации <%1> на складе <%2> по налогообложению <%3>.'"),
				Организация, Склад, НалогообложениеНДС
			);
		КонецЕсли;
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, Ссылка);
	КонецЕсли;
	Для Каждого СтрокаТаблицы Из ТаблицаОшибок Цикл
		ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				НСтр("ru = 'Номенклатура <%1>, превышение на %2 %3'"),
				НоменклатураКлиентСервер.ПредставлениеНоменклатуры(СтрокаТаблицы.Номенклатура, СтрокаТаблицы.Характеристика),
				СтрокаТаблицы.Количество, СтрокаТаблицы.ЕдиницаИзмерения
			);
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, Ссылка);
	КонецЦикла;
КонецПроцедуры

Процедура СформироватьДоступныеВидыЗапасов(МенеджерВременныхТаблиц) Экспорт
	Запрос = Новый Запрос("
		|ВЫБРАТЬ // Собственные товары
		|	ВидыЗапасов.Ссылка КАК ВидЗапасов,
		|	ВидыЗапасов.Ссылка КАК ВидЗапасовПродавца
		|ПОМЕСТИТЬ
		|	ДоступныеВидыЗапасов
		|ИЗ
		|	Справочник.ВидыЗапасов КАК ВидыЗапасов
		|ГДЕ
		|	Не ВидыЗапасов.РеализацияЗапасовДругойОрганизации И ВидыЗапасов.Организация=&Организация
		|	И Не ВидыЗапасов.ПометкаУдаления
		|	И ( ВидыЗапасов.Поставщик в (&Получатель,Неопределено) // Собственные товары
		|		И ВидыЗапасов.ТипЗапасов=ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.Товар)
		|		И &ХозяйственнаяОперация=ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратТоваровМеждуОрганизациями)
		|		ИЛИ
		|		ВидыЗапасов.Комитент в (&Получатель,Неопределено) // Комиссионные товары
		|		И ВидыЗапасов.ТипЗапасов=ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.КомиссионныйТовар)
		|		И &ХозяйственнаяОперация=ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратПоКомиссииМеждуОрганизациями)
		|	)
		|;
		|/////////////////////////////////////////////////////////////////////////////
		|");
	Запрос.УстановитьПараметр("Организация",Организация);
	Запрос.УстановитьПараметр("Получатель",ОрганизацияПолучатель);
	Запрос.УстановитьПараметр("ХозяйственнаяОперация",ХозяйственнаяОперация);
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.Выполнить();
КонецПроцедуры

// Заполнение данных документа для списания с отправителя
Функция ВременныеТаблицыДанныхДокумента() Экспорт
	Запрос = Новый Запрос(
		ТекстЗапросаТаблицаДанныхДокумента()
		+ ТекстЗапросаТаблицаВидовЗапасов()
		+ ТекстЗапросаТаблицаТоваров()
	);
	
	МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	УстановитьПараметрыЗапросаВременныхТаблиц(Запрос, МенеджерВременныхТаблиц);
	Запрос.УстановитьПараметр("Организация", Организация);
	Запрос.УстановитьПараметр("ОрганизацияПолучатель", ОрганизацияПолучатель);
	Запрос.УстановитьПараметр("ТаблицаВидыЗапасов", ЗапасыСервер.ТаблицаДополненнаяОбязательнымиКолонками(ВидыЗапасов.Выгрузить()));
	Запрос.Выполнить();
	Возврат МенеджерВременныхТаблиц;
КонецФункции

// Заполнение данных документа для приходования на получателя
Функция ВременныеТаблицыДокументаПолучателя()
	Запрос = Новый Запрос(
		ТекстЗапросаТаблицаДанныхДокумента()
		+ ТекстЗапросаТаблицаВидовЗапасов()
		+ ТекстЗапросаТаблицаТоваров()
		);
	МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	УстановитьПараметрыЗапросаВременныхТаблиц(Запрос, МенеджерВременныхТаблиц);
	Запрос.УстановитьПараметр("Организация",ОрганизацияПолучатель);
	Запрос.УстановитьПараметр("ОрганизацияПолучатель", Организация);
	Запрос.УстановитьПараметр("ТаблицаВидыЗапасов", ЗапасыСервер.ТаблицаДополненнаяОбязательнымиКолонками(ВидыЗапасовПолучателя.Выгрузить()));
	Запрос.Выполнить();
	Возврат МенеджерВременныхТаблиц;
КонецФункции

Функция ИзмененияВидовЗапасовПолучателяРазрешены()
	// Дублирование метода с методом формы сознательное
	Возврат
		Не ПоТоварамКОформлению
		И ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВозвратТоваровМеждуОрганизациями;
КонецФункции

Функция РеквизитыДокументаИзменились(МенеджерВременныхТаблиц)
	Запрос = Новый Запрос("
		|ВЫБРАТЬ
		|	ВЫБОР
		|	КОГДА ДанныеДокумента.Организация<>СохраненныеДанные.Организация
		|		ИЛИ ДанныеДокумента.Склад<>СохраненныеДанные.Склад
		|		ИЛИ ДанныеДокумента.ХозяйственнаяОперация<>СохраненныеДанные.ХозяйственнаяОперация
		|		ИЛИ ДанныеДокумента.НалогообложениеНДС<>СохраненныеДанные.НалогообложениеНДС
		|		ИЛИ ДанныеДокумента.ДокументПоступления<>СохраненныеДанные.ДокументПоступления
		|		ИЛИ ДанныеДокумента.ВидыЗапасовПолучателяУказаныВручную<>СохраненныеДанные.ВидыЗапасовПолучателяУказаныВручную
		|		ИЛИ ДанныеДокумента.Партнер<>СохраненныеДанные.Партнер
		|		ИЛИ ДанныеДокумента.ОрганизацияПолучатель<>СохраненныеДанные.ОрганизацияПолучатель
		|		ИЛИ ДанныеДокумента.Контрагент<>СохраненныеДанные.Контрагент
		|	ТОГДА Истина
		|	ИНАЧЕ Ложь
		|	КОНЕЦ КАК РеквизитыИзменены
		|ИЗ
		|	ТаблицаДанныхДокумента КАК ДанныеДокумента
		|	ЛЕВОЕ СОЕДИНЕНИЕ Документ.ВозвратТоваровМеждуОрганизациями КАК СохраненныеДанные
		|		ПО СохраненныеДанные.Ссылка=&Ссылка
		|");
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Выборка = Запрос.Выполнить().Выбрать();
	Возврат Выборка.Следующий() И Выборка.РеквизитыИзменены;
КонецФункции

Функция ТоварыДокументаИзменились(МенеджерВременныхТаблиц)
	Запрос = Новый Запрос("
		|// Проверим соответствие табличных частей Товары и ВидыЗапасов
		|ВЫБРАТЬ
		|	Сравнение.Номенклатура КАК Номенклатура, Сравнение.Характеристика КАК Характеристика, Сравнение.СтавкаНДС КАК СтавкаНДС
		|ИЗ (
		|	ВЫБРАТЬ
		|		Товары.Номенклатура КАК Номенклатура, Товары.Характеристика КАК Характеристика, Товары.СтавкаНДС КАК СтавкаНДС,
		|		Товары.Количество КАК Количество, Товары.СуммаСНДС КАК СуммаСНДС, Товары.СуммаНДС КАК СуммаНДС
		|	ИЗ ТаблицаТоваров КАК Товары
		|	ОБЪЕДИНИТЬ ВСЕ
		|	ВЫБРАТЬ
		|		Запасы.Номенклатура, Запасы.Характеристика, Запасы.СтавкаНДС,
		|		-Запасы.Количество, -Запасы.СуммаСНДС, -Запасы.СуммаНДС
		|	ИЗ ТаблицаВидыЗапасов КАК Запасы
		|) КАК Сравнение
		|СГРУППИРОВАТЬ ПО
		|	Сравнение.Номенклатура, Сравнение.Характеристика, Сравнение.СтавкаНДС
		|ИМЕЮЩИЕ
		|	СУММА(Сравнение.Количество)<>0 ИЛИ СУММА(Сравнение.СуммаСНДС)<>0 ИЛИ СУММА(Сравнение.СуммаНДС)<>0
		|;
		|////////////////////////////////////////////////////////////////////////////////
		|");
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Возврат Не Запрос.Выполнить().Пустой();
КонецФункции

Функция ТекстЗапросаТаблицаДанныхДокумента()
	Возврат "
		|ВЫБРАТЬ
		|	&Дата КАК Дата,
		|	&Организация КАК Организация,
		|	&Склад КАК Склад,
		|	&НалогообложениеНДС КАК НалогообложениеНДС,
		|	&ХозяйственнаяОперация КАК ХозяйственнаяОперация,
		|	&ДокументПоступления КАК ДокументПоступления,
		|	Ложь КАК ЕстьСделкиВТабличнойЧасти,
		|	&ОрганизацияПолучатель КАК ОрганизацияПолучатель,
		|	&РасчетыЧерезОтдельногоКонтрагента КАК РасчетыЧерезОтдельногоКонтрагента,
		|	&Партнер КАК Партнер,
		|	ЗНАЧЕНИЕ(Справочник.СоглашенияСПоставщиками.ПустаяСсылка) КАК Соглашение,
		|	ЗНАЧЕНИЕ(Справочник.ДоговорыКонтрагентов.ПустаяСсылка) КАК Договор,
		|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК Валюта,
		|	&Контрагент КАК Контрагент,
		|	&ПоТоварамКОформлению КАК ПоТоварамКОформлению,
		|	&ВидыЗапасовПолучателяУказаныВручную КАК ВидыЗапасовПолучателяУказаныВручную
		|ПОМЕСТИТЬ ТаблицаДанныхДокумента
		|;
		|////////////////////////////////////////////////////////////////////////////////";
КонецФункции

Функция ТекстЗапросаТаблицаВидовЗапасов()
	Возврат "
		|ВЫБРАТЬ
		|	ТаблицаВидыЗапасов.НомерСтроки КАК НомерСтроки,
		|	ТаблицаВидыЗапасов.Номенклатура КАК Номенклатура,
		|	ТаблицаВидыЗапасов.Характеристика КАК Характеристика,
		|	ТаблицаВидыЗапасов.ДокументРеализации КАК ДокументРеализации,
		|	ТаблицаВидыЗапасов.ВидЗапасов КАК ВидЗапасов,
		|	ТаблицаВидыЗапасов.НомерГТД КАК НомерГТД,
		|	ТаблицаВидыЗапасов.Количество КАК Количество,
		|	ТаблицаВидыЗапасов.СтавкаНДС КАК СтавкаНДС,
		|	ТаблицаВидыЗапасов.СуммаСНДС КАК СуммаСНДС,
		|	ТаблицаВидыЗапасов.СуммаНДС КАК СуммаНДС,
		|	0 КАК СуммаВознаграждения,
		|	0 КАК СуммаНДСВознаграждения,
		|	ЗНАЧЕНИЕ(Справочник.Склады.ПустаяСсылка) КАК СкладОтгрузки,
		|	&Склад КАК Склад,
		|	&Сделка как Сделка
		|ПОМЕСТИТЬ ТаблицаВидыЗапасов
		|ИЗ
		|	&ТаблицаВидыЗапасов КАК ТаблицаВидыЗапасов
		|ИНДЕКСИРОВАТЬ ПО
		|	Номенклатура, Характеристика
		|;
		|////////////////////////////////////////////////////////////////////////////////";
КонецФункции

Функция ТекстЗапросаТаблицаТоваров()
	Возврат "
		|ВЫБРАТЬ
		|	ТаблицаТоваров.НомерСтроки КАК НомерСтроки,
		|	ТаблицаТоваров.Номенклатура КАК Номенклатура,
		|	ТаблицаТоваров.Характеристика КАК Характеристика,
		|	ТаблицаТоваров.ДокументРеализации КАК ДокументРеализации,
		|	ТаблицаТоваров.Количество КАК Количество,
		|	ТаблицаТоваров.СтавкаНДС КАК СтавкаНДС,
		|	ТаблицаТоваров.СуммаСНДС КАК СуммаСНДС,
		|	ТаблицаТоваров.СуммаНДС КАК СуммаНДС,
		|	0 КАК СуммаВознаграждения,
		|	0 КАК СуммаНДСВознаграждения,
		|	&Склад КАК Склад,
		|	&Сделка как Сделка,
		|	ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка) КАК Назначение
		|	
		|ПОМЕСТИТЬ ТаблицаТоваров
		|ИЗ
		|	&ТаблицаТоваров КАК ТаблицаТоваров
		|;
		|////////////////////////////////////////////////////////////////////////////////";
КонецФункции

Процедура УстановитьПараметрыЗапросаВременныхТаблиц(Запрос, МенеджерВременныхТаблиц)
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("Дата", Дата);
	Запрос.УстановитьПараметр("Партнер", Партнер);
	Запрос.УстановитьПараметр("Контрагент", Контрагент);
	Запрос.УстановитьПараметр("РасчетыЧерезОтдельногоКонтрагента", РасчетыЧерезОтдельногоКонтрагента);
	Запрос.УстановитьПараметр("ПоТоварамКОформлению", ПоТоварамКОформлению);
	Запрос.УстановитьПараметр("Склад", Склад);
	Запрос.УстановитьПараметр("НалогообложениеНДС", НалогообложениеНДС);
	Запрос.УстановитьПараметр("ХозяйственнаяОперация", ХозяйственнаяОперация);
	Запрос.УстановитьПараметр("ДокументПоступления", ДокументПоступления);
	Запрос.УстановитьПараметр("Сделка", Справочники.СделкиСКлиентами.ПустаяСсылка());
	Запрос.УстановитьПараметр("ВидыЗапасовПолучателяУказаныВручную", ВидыЗапасовПолучателяУказаныВручную);
	Запрос.УстановитьПараметр("ТаблицаТоваров", ЗапасыСервер.ТаблицаДополненнаяОбязательнымиКолонками(Товары.Выгрузить()));
КонецПроцедуры

// Остатки отправителя по товарам к оформлению
Процедура ОстаткиКВозвратуПоТоварамКОформлению(МенеджерВременныхТаблиц)
	Запрос = Новый Запрос("
		|ВЫБРАТЬ
		|	ТоварыОрганизаций.Организация КАК Организация,
		|	ТоварыОрганизаций.Склад КАК Склад,
		|	ЗНАЧЕНИЕ(Справочник.Склады.ПустаяСсылка) КАК СкладОтгрузки,
		|	ЗНАЧЕНИЕ(Справочник.СделкиСКлиентами.ПустаяСсылка) КАК Сделка,
		|	ТоварыОрганизаций.Номенклатура КАК Номенклатура,
		|	ТоварыОрганизаций.Характеристика КАК Характеристика,
		|	НЕОПРЕДЕЛЕНО КАК ДокументРеализации,
		|	ТоварыОрганизаций.ВидЗапасов КАК ВидЗапасов,
		|	ТоварыОрганизаций.ВидЗапасовВладельца КАК ВидЗапасовВладельца,
		|	НЕОПРЕДЕЛЕНО КАК ВидЗапасовПолучателя,
		|	НЕОПРЕДЕЛЕНО КАК ВидЗапасовОтгрузки,
		|	Ложь КАК РеализацияЗапасовДругойОрганизации,
		|	ТоварыОрганизаций.НомерГТД КАК НомерГТД,
		|	МАКСИМУМ(ТоварыОрганизаций.ДатаПоступления) КАК ДатаПоступления,
		|	ТоварыОрганизаций.ВидЗапасовВладельца.Назначение КАК Назначение,
		|	СУММА(ТоварыОрганизаций.Количество) КАК КоличествоОстаток,
		|	СУММА(ТоварыОрганизаций.Количество) КАК КоличествоОстатокНаКонецМесяца,
		|	0 КАК СуммаОстаток,
		|	0 КАК СуммаОстатокНаКонецМесяца
		|
		|ПОМЕСТИТЬ ТаблицаОстатков
		|ИЗ (
		|	ВЫБРАТЬ // ВидыЗапасов, ранее возвращенные данным документом.
		|		КПередаче.ОрганизацияВладелец КАК Организация,
		|		КПередаче.Склад КАК Склад,
		|		КПередаче.Номенклатура КАК Номенклатура,
		|		КПередаче.Характеристика КАК Характеристика,
		|		КПередаче.ВидЗапасовПродавца КАК ВидЗапасов,
		|		КПередаче.ВидЗапасовПродавца.ВидЗапасовВладельца КАК ВидЗапасовВладельца,
		|		КПередаче.НомерГТД КАК НомерГТД,
		|		КПередаче.Возвращено КАК Количество,
		|		&НачалоВремен КАК ДатаПоступления
		|	ИЗ
		|		РегистрНакопления.ТоварыОрганизацийКПередаче КАК КПередаче
		|	ГДЕ
		|		КПередаче.Регистратор = &Ссылка
		|
		|	ОБЪЕДИНИТЬ ВСЕ
		|
		|	ВЫБРАТЬ // ВидыЗапасов, возвращенные другими документами, например возвратом от клиента на остатки организации-владельца.
		|		КПередаче.ОрганизацияВладелец КАК Организация,
		|		КПередаче.Склад КАК Склад,
		|		КПередаче.Номенклатура КАК Номенклатура,
		|		КПередаче.Характеристика КАК Характеристика,
		|		КПередаче.ВидЗапасовПродавца КАК ВидЗапасов,
		|		КПередаче.ВидЗапасовПродавца.ВидЗапасовВладельца КАК ВидЗапасовВладельца,
		|		КПередаче.НомерГТД КАК НомерГТД,
		|		КПередаче.ВозвращеноОстаток КАК Количество,
		|		&НачалоВремен КАК ДатаПоступления
		|	ИЗ
		|		РегистрНакопления.ТоварыОрганизацийКПередаче.Остатки(,
		|			ОрганизацияВладелец = &ОрганизацияПолучатель
		|			И Склад = &Склад
		|			И ВидЗапасовПродавца.Организация = &Организация
		|			И ВидЗапасовПродавца.РеализацияЗапасовДругойОрганизации
		|			И ВидЗапасовПродавца.ТипЗапасов = &ТипЗапасов
		|			И (Номенклатура, Характеристика) В (
		|				ВЫБРАТЬ РАЗЛИЧНЫЕ
		|					ТаблицаТоваров.Номенклатура,
		|					ТаблицаТоваров.Характеристика
		|				ИЗ
		|					ТаблицаТоваров
		|				)
		|		) КАК КПередаче
		|
		|	) КАК ТоварыОрганизаций
		|
		|ГДЕ &ПоТоварамКОформлению
		|
		|СГРУППИРОВАТЬ ПО
		|	ТоварыОрганизаций.Организация,
		|	ТоварыОрганизаций.Склад,
		|	ТоварыОрганизаций.Номенклатура,
		|	ТоварыОрганизаций.Характеристика,
		|	ТоварыОрганизаций.ВидЗапасов,
		|	ТоварыОрганизаций.ВидЗапасовВладельца,
		|	ТоварыОрганизаций.НомерГТД
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Номенклатура,
		|	Характеристика,
		|	Склад
		|;
		|///////////////////////////////////////////////////////////////////////////////
		|");
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	Запрос.УстановитьПараметр("НачалоВремен", '00010101');
	Запрос.УстановитьПараметр("Организация", Организация);
	Запрос.УстановитьПараметр("ОрганизацияПолучатель", ОрганизацияПолучатель);
	Запрос.УстановитьПараметр("Склад", Склад);
	Запрос.УстановитьПараметр("ТипЗапасов", Документы.ВозвратТоваровМеждуОрганизациями.ТипЗапасовОперации(ХозяйственнаяОперация));
	Запрос.УстановитьПараметр("ПоТоварамКОформлению", ПоТоварамКОформлению);
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.Выполнить();
КонецПроцедуры

// Остатки для видов запасов получателя, по ОстаткамТоваров.
//	В запросе &Организация = ЭтотОбъект.Организация, &ОрганизацияПолучатель = ЭтотОбъект.ОрганизацияПолучатель
// Сценарий работы:
//	1. Берем разность между передачами и возвратами по
//		кортежу (Отправитель,Получатель,Партнер,Контрагент,Номенклатура,Характеристика)
//	2. Берем виды запасов получателя, когда ВЗ установлены пользователем вручную.
Процедура ОстаткиПереданныхТоваров(МенеджерВременныхТаблиц)	
	Запрос = Новый Запрос("
		|ВЫБРАТЬ Документы.Ссылка КАК Ссылка // все подходящие передачи
		|ПОМЕСТИТЬ Реализации
		|ИЗ	Документ.ПередачаТоваровМеждуОрганизациями КАК Документы
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ ТаблицаДанныхДокумента КАК ДанныеДокумента
		|		ПО Документы.Организация = ДанныеДокумента.Организация И Документы.ОрганизацияПолучатель = ДанныеДокумента.ОрганизацияПолучатель
		|ГДЕ НЕ &ПоТоварамКОформлению И Документы.Проведен И НЕ Документы.ПоТоварамКОформлению
		|	
		|ИНДЕКСИРОВАТЬ ПО Ссылка; // Реализации
		|/////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ Документы.Ссылка КАК Ссылка // все подходящие возвраты
		|ПОМЕСТИТЬ Возвраты
		|ИЗ Документ.ВозвратТоваровМеждуОрганизациями КАК Документы
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ ТаблицаДанныхДокумента КАК ДанныеДокумента
		|		ПО Документы.Организация = ДанныеДокумента.ОрганизацияПолучатель И Документы.ОрганизацияПолучатель = ДанныеДокумента.Организация
		|ГДЕ Не &ПоТоварамКОформлению И Документы.Проведен И Не Документы.ПоТоварамКОформлению
		|ИНДЕКСИРОВАТЬ ПО Ссылка; // Возвраты
		|/////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	&ОрганизацияПолучатель КАК Организация,
		|	ТоварыОрганизаций.Склад КАК Склад,
		|	ЗНАЧЕНИЕ(Справочник.Склады.ПустаяСсылка) КАК СкладОтгрузки,
		|	ТоварыОрганизаций.Номенклатура КАК Номенклатура,
		|	ТоварыОрганизаций.Характеристика КАК Характеристика,
		|	НЕОПРЕДЕЛЕНО КАК ДокументРеализации,
		|	ТоварыОрганизаций.ВидЗапасов КАК ВидЗапасов,
		|	ТоварыОрганизаций.ВидЗапасов КАК ВидЗапасовВладельца,
		|	НЕОПРЕДЕЛЕНО КАК ВидЗапасовПолучателя,
		|	НЕОПРЕДЕЛЕНО КАК ВидЗапасовОтгрузки,
		|	Ложь КАК РеализацияЗапасовДругойОрганизации,
		|	ТоварыОрганизаций.ВидЗапасов.Назначение КАК Назначение,
		|	ТоварыОрганизаций.НомерГТД КАК НомерГТД,
		|	МАКСИМУМ(ТоварыОрганизаций.ДатаПоступления) КАК ДатаПоступления,
		|	СУММА(ТоварыОрганизаций.Количество) КАК КоличествоОстаток,
		|	СУММА(ТоварыОрганизаций.Количество) КАК КоличествоОстатокНаКонецМесяца,
		|	0 КАК СуммаОстаток,
		|	0 КАК СуммаОстатокНаКонецМесяца,
		|	ЗНАЧЕНИЕ(Справочник.СделкиСКлиентами.ПустаяСсылка) КАК Сделка
		|ПОМЕСТИТЬ ТаблицаОстатков
		|ИЗ (
		// возврат по остаткам переданных товаров, точнее по разнице переданного и ранее возвращенного товара
		|	ВЫБРАТЬ // запасы и количество товара переданного от получателя возврата к отправителю возврата
		|		&Склад КАК Склад,
		|		Отгружено.Номенклатура КАК Номенклатура,
		|		Отгружено.Характеристика КАК Характеристика,
		|		Отгружено.ВидЗапасов КАК ВидЗапасов,
		|		Отгружено.НомерГТД КАК НомерГТД,
		|		Отгружено.Количество КАК Количество,
		|		ЕСТЬNULL(ДатыПоступлений.ДатаПоступления, &НачалоВремен) КАК ДатаПоступления
		|	ИЗ
		|		РегистрНакопления.ТоварыОрганизаций КАК Отгружено
		|
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ
		|			Реализации КАК Реализации
		|		ПО
		|			Отгружено.Регистратор = Реализации.Ссылка
		|			И Отгружено.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
		|
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ
		|			ТаблицаТоваров КАК Товары
		|		ПО
		|			Отгружено.Номенклатура = Товары.Номенклатура
		|			И Отгружено.Характеристика = Товары.Характеристика
		|
		|		ЛЕВОЕ СОЕДИНЕНИЕ
		|			РегистрСведений.ДатыПоступленияТоваровОрганизаций КАК ДатыПоступлений
		|		ПО
		|			Отгружено.Номенклатура = ДатыПоступлений.Номенклатура
		|			И Отгружено.Характеристика = ДатыПоступлений.Характеристика
		|			И Отгружено.ВидЗапасов = ДатыПоступлений.ВидЗапасов
		|			И Отгружено.НомерГТД = ДатыПоступлений.НомерГТД
		|	ГДЕ
		|		Не &ПоТоварамКОформлению
		|	
		|	ОБЪЕДИНИТЬ ВСЕ
		|
		|	ВЫБРАТЬ // запасы и количество товара возвращенного от отправителя возврата к получателю возврата
		|		&Склад КАК Склад,
		|		Возвращено.Номенклатура КАК Номенклатура,
		|		Возвращено.Характеристика КАК Характеристика,
		|		Возвращено.ВидЗапасов КАК ВидЗапасов,
		|		Возвращено.НомерГТД КАК НомерГТД,
		|		Возвращено.Количество КАК Количество,
		|		ЕСТЬNULL(ДатыПоступлений.ДатаПоступления, &НачалоВремен) КАК ДатаПоступления
		|	ИЗ
		|		РегистрНакопления.ТоварыОрганизаций КАК Возвращено
		|
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ
		|			Возвраты КАК Возвраты
		|		ПО
		|			Возвращено.Регистратор = Возвраты.Ссылка
		|			И Возвращено.Организация = &ОрганизацияПолучатель
		|			И Возвращено.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
		|			И Возвращено.Количество < 0
		|
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ
		|			ТаблицаТоваров КАК Товары
		|		ПО
		|			Возвращено.Номенклатура = Товары.Номенклатура
		|			И Возвращено.Характеристика = Товары.Характеристика
		|
		|		ЛЕВОЕ СОЕДИНЕНИЕ
		|			РегистрСведений.ДатыПоступленияТоваровОрганизаций КАК ДатыПоступлений
		|		ПО
		|			Возвращено.Номенклатура = ДатыПоступлений.Номенклатура
		|			И Возвращено.Характеристика = ДатыПоступлений.Характеристика
		|			И Возвращено.ВидЗапасов = ДатыПоступлений.ВидЗапасов
		|			И Возвращено.НомерГТД = ДатыПоступлений.НомерГТД
		|	ГДЕ
		|		Не &ПоТоварамКОформлению
		|
		// ВидыЗапасовПолучателя, явно указанные в документе возврата
		|	ОБЪЕДИНИТЬ ВСЕ
		|	ВЫБРАТЬ
		|		&Склад КАК Склад,
		|		ТаблицаВидыЗапасов.Номенклатура КАК Номенклатура,
		|		ТаблицаВидыЗапасов.Характеристика КАК Характеристика,
		|		ТаблицаВидыЗапасов.ВидЗапасов КАК ВидЗапасов,
		|		ТаблицаВидыЗапасов.НомерГТД КАК НомерГТД,
		|		ТаблицаВидыЗапасов.Количество КАК Количество,
		|		&НачалоВремен КАК ДатаПоступления
		|	ИЗ
		|		ТаблицаВидыЗапасов КАК ТаблицаВидыЗапасов
		|	ГДЕ
		|		&ВидыЗапасовПолучателяУказаныВручную
		|
		|) КАК ТоварыОрганизаций
		|
		|СГРУППИРОВАТЬ ПО
		|	&ОрганизацияПолучатель,
		|	ТоварыОрганизаций.Склад,
		|	ТоварыОрганизаций.Номенклатура,
		|	ТоварыОрганизаций.Характеристика,
		|	ТоварыОрганизаций.ВидЗапасов,
		|	ТоварыОрганизаций.НомерГТД
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Номенклатура,
		|	Характеристика,
		|	Склад
		|;
		|///////////////////////////////////////////////////////////////////////////////
		|");
	Запрос.УстановитьПараметр("Ссылка",Ссылка);
	Запрос.УстановитьПараметр("НачалоВремен",'00010101');
	Запрос.УстановитьПараметр("ОрганизацияПолучатель",ОрганизацияПолучатель);
	Запрос.УстановитьПараметр("Склад", Склад);
	Запрос.УстановитьПараметр("ПоТоварамКОформлению", ПоТоварамКОформлению);
	Запрос.УстановитьПараметр("ВидыЗапасовПолучателяУказаныВручную", ВидыЗапасовПолучателяУказаныВручную);
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.Выполнить();
КонецПроцедуры

// Остатки для видов запасов получателя по товарам к оформлению, при этом
// виды запасов отправителя уже заполнены и работаем ТОЛЬКО по ним.
// Выбираем из видов запасов отправителя значения видов запасов владельца
// как виды запасов получателя.
Процедура ОстаткиКПоступлениюПоТоварамКОформлению(МенеджерВременныхТаблиц)
	Запрос = Новый Запрос("
	    |ВЫБРАТЬ ВидыЗапасов.Номенклатура, ВидыЗапасов.Характеристика, ВидыЗапасов.ВидЗапасов, ВидыЗапасов.НомерГТД, ВидыЗапасов.Количество
		|ПОМЕСТИТЬ Запасы
		|ИЗ &ВидыЗапасов КАК ВидыЗапасов
		|ГДЕ &ПоТоварамКОформлению
		|ИНДЕКСИРОВАТЬ ПО ВидЗапасов
		|;
		|///////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	&ОрганизацияПолучатель КАК Организация,
		|	&Склад КАК Склад,
		|	ЗНАЧЕНИЕ(Справочник.Склады.ПустаяСсылка) КАК СкладОтгрузки,
		|	ЗНАЧЕНИЕ(Справочник.СделкиСКлиентами.ПустаяСсылка) КАК Сделка,
		|	ТоварыОрганизаций.Номенклатура КАК Номенклатура,
		|	ТоварыОрганизаций.Характеристика КАК Характеристика,
		|	НЕОПРЕДЕЛЕНО КАК ДокументРеализации,
		|	ТоварыОрганизаций.ВидЗапасов КАК ВидЗапасов,
		|	ТоварыОрганизаций.ВидЗапасовВладельца КАК ВидЗапасовВладельца,
		|	НЕОПРЕДЕЛЕНО КАК ВидЗапасовПолучателя,
		|	НЕОПРЕДЕЛЕНО КАК ВидЗапасовОтгрузки,
		|	Ложь КАК РеализацияЗапасовДругойОрганизации,
		|	ТоварыОрганизаций.ВидЗапасовВладельца.Назначение КАК Назначение,
		|	ТоварыОрганизаций.НомерГТД КАК НомерГТД,
		|	&НачалоВремен КАК ДатаПоступления,
		|	СУММА(ТоварыОрганизаций.Количество) КАК КоличествоОстаток,
		|	СУММА(ТоварыОрганизаций.Количество) КАК КоличествоОстатокНаКонецМесяца,
		|	0 КАК СуммаОстаток,
		|	0 КАК СуммаОстатокНаКонецМесяца
		|
		|ПОМЕСТИТЬ ТаблицаОстатков
		|ИЗ (
		|   ВЫБРАТЬ
		|		Запасы.Номенклатура КАК Номенклатура,
		|		Запасы.Характеристика КАК Характеристика,
		|		ВидыЗапасов.ВидЗапасовВладельца КАК ВидЗапасов,
		|		ВидыЗапасов.ВидЗапасовВладельца КАК ВидЗапасовВладельца,
		|		Запасы.НомерГТД КАК НомерГТД,
		|		Запасы.Количество КАК Количество
		|	ИЗ
		|		Запасы КАК Запасы
		|
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ
		|			Справочник.ВидыЗапасов
		|		КАК
		|			ВидыЗапасов
		|		ПО
		|			Запасы.ВидЗапасов = ВидыЗапасов.Ссылка
		|	) КАК ТоварыОрганизаций
		|
		|СГРУППИРОВАТЬ ПО
		|	ТоварыОрганизаций.Номенклатура,
		|	ТоварыОрганизаций.Характеристика,
		|	ТоварыОрганизаций.ВидЗапасов,
		|	ТоварыОрганизаций.ВидЗапасовВладельца,
		|	ТоварыОрганизаций.НомерГТД
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Номенклатура,
		|	Характеристика,
		|	Склад
		|;
		|///////////////////////////////////////////////////////////////////////////////
		|");
	Запрос.УстановитьПараметр("ВидыЗапасов", ВидыЗапасов.Выгрузить());
	Запрос.УстановитьПараметр("НачалоВремен",'00010101');
	Запрос.УстановитьПараметр("ОрганизацияПолучатель", ОрганизацияПолучатель);
	Запрос.УстановитьПараметр("Склад", Склад);
	Запрос.УстановитьПараметр("ПоТоварамКОформлению",ПоТоварамКОформлению);
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.Выполнить();
КонецПроцедуры

Процедура ПроверитьОрганизации(Отказ)
	
	Если ЗначениеЗаполнено(Организация)
		И ЗначениеЗаполнено(ОрганизацияПолучатель) Тогда
		
		Если Организация = ОрганизацияПолучатель Тогда
			
			Текст = НСтр("ru = 'Одна и та же организация не может являться отправителем и получателем одновременно'");
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
				Текст,
				ЭтотОбъект,
				"Организация",
				,
				Отказ
			);
			
		ИначеЕсли ПолучитьФункциональнуюОпцию("ИспользоватьОбособленныеПодразделенияВыделенныеНаБаланс")
			И Справочники.Организации.ОрганизацииВзаимосвязаныПоОрганизациционнойСтруктуре(Организация, ОрганизацияПолучатель) Тогда
			
			Текст = НСтр("ru = 'Организация-получатель не должна быть взаимосвязана с организацией-отправителем по организационной структуре.'");
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
				Текст,
				ЭтотОбъект,
				"ОрганизацияПолучатель",
				,
				Отказ
			);
			
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

Процедура ЗаполнитьДопКолонкиВидовЗапасов() Экспорт
	
	ТаблицаТовары = Товары.Выгрузить(, "Номенклатура, Характеристика, Упаковка, Количество, КоличествоУпаковок");
	ТаблицаТовары.Свернуть("Номенклатура, Характеристика, Упаковка", "Количество, КоличествоУпаковок");
	
	СтруктураПоиска = Новый Структура("Номенклатура, Характеристика");
	Для Каждого СтрокаТоваров Из ТаблицаТовары Цикл
		
		КоличествоТоваров = СтрокаТоваров.Количество;
		КоличествоУпаковок = СтрокаТоваров.КоличествоУпаковок;
		
		ЗаполнитьЗначенияСвойств(СтруктураПоиска, СтрокаТоваров);
		Для Каждого СтрокаЗапасов Из ВидыЗапасов.НайтиСтроки(СтруктураПоиска) Цикл
			
			Если СтрокаЗапасов.Количество = 0 Тогда
				Продолжить;
			КонецЕсли;
			
			Количество = Мин(КоличествоТоваров, СтрокаЗапасов.Количество);
			
			НоваяСтрока = ВидыЗапасов.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаЗапасов);
			
			НоваяСтрока.Упаковка = СтрокаТоваров.Упаковка;
			НоваяСтрока.КоличествоУпаковок = ?(КоличествоТоваров <> 0, КоличествоУпаковок * Количество / КоличествоТоваров, 0);
			НоваяСтрока.Количество = Количество;
			НоваяСтрока.СуммаСНДС = ?(СтрокаЗапасов.Количество <> 0, Количество * СтрокаЗапасов.СуммаСНДС / СтрокаЗапасов.Количество, 0);
			НоваяСтрока.СуммаНДС = ?(СтрокаЗапасов.Количество <> 0, Количество * СтрокаЗапасов.СуммаНДС / СтрокаЗапасов.Количество, 0);
			
			СтрокаЗапасов.Количество = СтрокаЗапасов.Количество - НоваяСтрока.Количество;
			СтрокаЗапасов.СуммаСНДС = СтрокаЗапасов.СуммаСНДС - НоваяСтрока.СуммаСНДС;
			СтрокаЗапасов.СуммаНДС = СтрокаЗапасов.СуммаНДС - НоваяСтрока.СуммаНДС;
			
			КоличествоТоваров = КоличествоТоваров - НоваяСтрока.Количество;
			КоличествоУпаковок = КоличествоУпаковок - НоваяСтрока.КоличествоУпаковок;
			
			Если КоличествоТоваров = 0 Тогда
				Прервать;
			КонецЕсли;
			
		КонецЦикла;
		
	КонецЦикла;
	
	МассивУдаляемыхСтрок = ВидыЗапасов.НайтиСтроки(Новый Структура("Количество", 0));
	Для Каждого СтрокаТаблицы Из МассивУдаляемыхСтрок Цикл
		ВидыЗапасов.Удалить(СтрокаТаблицы);
	КонецЦикла;
	
КонецПроцедуры

Процедура ЗаполнитьКлючиАналитикиУчетаПартийДокумента() Экспорт
	
	Запрос = Новый Запрос("
	|ВЫБРАТЬ
	|	ТаблицаТоваров.НомерСтроки 				КАК НомерСтроки,
	|	ТаблицаТоваров.Номенклатура 			КАК Номенклатура,
	|	ТаблицаТоваров.СтавкаНДС 				КАК СтавкаНДС,
	|	ТаблицаТоваров.АналитикаУчетаПартий 	КАК АналитикаУчетаПартий
	|
	|ПОМЕСТИТЬ ТаблицаТоваровДокумента
	|
	|ИЗ
	|	&ТаблицаТоваров КАК ТаблицаТоваров
	|;
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаТоваров.НомерСтроки 				КАК НомерСтроки,
	|	ТаблицаТоваров.Номенклатура 			КАК Номенклатура,
	|	ТаблицаТоваров.СтавкаНДС 				КАК СтавкаНДС,
	|	&Поставщик 								КАК Поставщик,
	|	&Контрагент 							КАК Контрагент,
	|	&НалогообложениеНДС 					КАК НалогообложениеНДС,
	|	ТаблицаТоваров.АналитикаУчетаПартий		КАК АналитикаУчетаПартий
	|
	|ПОМЕСТИТЬ ИсходнаяТаблицаТоваров
	|
	|ИЗ
	|	ТаблицаТоваровДокумента КАК ТаблицаТоваров
	|ГДЕ
	|	ТаблицаТоваров.АналитикаУчетаПартий = ЗНАЧЕНИЕ(Справочник.КлючиАналитикиУчетаПартий.ПустаяСсылка)
	|");

	МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("ТаблицаТоваров"		, 
							ВидыЗапасов.Выгрузить(,"НомерСтроки, Номенклатура, СтавкаНДС, АналитикаУчетаПартий")
							);
	Запрос.УстановитьПараметр("НалогообложениеНДС"	, Справочники.Организации.НалогообложениеНДС(Организация,Склад, Дата));
	Запрос.УстановитьПараметр("Поставщик"			, Партнер);
	Запрос.УстановитьПараметр("Контрагент"			, Контрагент);
				
	Запрос.Выполнить();
	
	ПартионныйУчетСервер.ЗаполнитьАналитикуУчетаПартийВТабличнойЧастиТовары(МенеджерВременныхТаблиц, ВидыЗапасов);
	
КонецПроцедуры

#КонецЕсли