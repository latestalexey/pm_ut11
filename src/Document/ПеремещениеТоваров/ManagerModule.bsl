#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда


////////////////////////////////////////////////////////////////////////////////
// ПРОГРАММНЫЙ ИНТЕРФЕЙС

// Функция возвращает таблицу реквизитов, зависимых от хозяйственной операции документа.
//
Функция ПолучитьМассивыРеквизитов(ХозяйственнаяОперация, МассивВсехРеквизитов, МассивРеквизитовОперации) Экспорт
	
	МассивВсехРеквизитов = Новый Массив;
	МассивВсехРеквизитов.Добавить("ОрганизацияПолучатель");
	
	МассивРеквизитовОперации = Новый Массив;
	Если ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВнутренняяПередачаТоваров Тогда
		МассивРеквизитовОперации.Добавить("ОрганизацияПолучатель");
		
	КонецЕсли;
	
КонецФункции

// Формирует результат запроса по невыполненной части заказов
//
// Параметры:
// ДанныеОтбора     - Структура - поля, по которым будут отобраны остатки заказов
// Дата             - Дата - дата, на которую будут отобраны остатки заказов
// МассивЗаказов      Массив - заказы, по которым будут отобраны остатки
//
// Вовращаемое значение:
// Результат запроса - результат запроса по невыполненной части заказов
//
Функция ПолучитьРезультатЗапросаПоОстаткамЗаказов(ДанныеОтбора,
	                                             Дата = Неопределено,
	                                             МассивЗаказов = Неопределено)
	
	Запрос = Новый Запрос;
	
	Запрос.УстановитьПараметр("Регистратор",      ДанныеОтбора.Ссылка);
	Запрос.УстановитьПараметр("Организация",      ДанныеОтбора.Организация);
	Запрос.УстановитьПараметр("Подразделение",    ДанныеОтбора.Подразделение);
	Запрос.УстановитьПараметр("СкладОтправитель", ДанныеОтбора.СкладОтправитель);
	Запрос.УстановитьПараметр("СкладПолучатель",  ДанныеОтбора.СкладПолучатель);
	Запрос.УстановитьПараметр("МассивЗаказов",    МассивЗаказов);
	Запрос.УстановитьПараметр("ОтобратьПоЗаказу", МассивЗаказов <> Неопределено);
	
	Если Дата <> Неопределено Тогда
		Запрос.УстановитьПараметр("Период", КонецДня(Дата));
		Запрос.УстановитьПараметр("ГраницаПериод", Новый Граница(КонецДня(Дата), ВидГраницы.Включая));
	Иначе
		Запрос.УстановитьПараметр("Период", '00010101');
		Запрос.УстановитьПараметр("ГраницаПериод", Неопределено);
	КонецЕсли;
	
	Запрос.Текст =
	"
	|ВЫБРАТЬ 
	|	ЗаказНаПеремещение.Ссылка КАК Заказ
	|
	|ПОМЕСТИТЬ ВТЗаказыОтбор
	|ИЗ
	|	Документ.ЗаказНаПеремещение КАК ЗаказНаПеремещение
	|
	|ГДЕ
	|
	|	ВЫБОР
	|		КОГДА &ОтобратьПоЗаказу ТОГДА
	|
	|			ЗаказНаПеремещение.Ссылка В (&МассивЗаказов)
	|
	|		ИНАЧЕ
	|			ЗаказНаПеремещение.Подразделение      = &Подразделение
	|			И ЗаказНаПеремещение.Организация      = &Организация
	|	КОНЕЦ
	|	И ЗаказНаПеремещение.СкладОтправитель = &СкладОтправитель
	|	И ЗаказНаПеремещение.СкладПолучатель  = &СкладПолучатель
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|
	|ВЫБРАТЬ
	|	Заказы.ЗаказНаПеремещение КАК ЗаказНаПеремещение,
	|	Заказы.Номенклатура       КАК Номенклатура,
	|	Заказы.Характеристика     КАК Характеристика,
	|	Заказы.КодСтроки          КАК КодСтроки,
	|	СУММА(Заказы.КОформлению) КАК Количество
	|
	|ПОМЕСТИТЬ ТаблицаОстатки
	|
	|ИЗ
	|	(ВЫБРАТЬ
	|		Заказы.ЗаказНаПеремещение КАК ЗаказНаПеремещение,
	|		Заказы.Номенклатура       КАК Номенклатура,
	|		Заказы.Характеристика     КАК Характеристика,
	|		Заказы.КодСтроки          КАК КодСтроки,
	|		Заказы.КОформлениюОстаток КАК КОформлению
	|	ИЗ
	|		РегистрНакопления.ЗаказыНаПеремещение.Остатки(
	|				&ГраницаПериод,
	|
	|				ЗаказНаПеремещение В (ВЫБРАТЬ Т.Заказ Из ВТЗаказыОтбор КАК Т)
	|
	|				) КАК Заказы
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		Заказы.ЗаказНаПеремещение,
	|		Заказы.Номенклатура,
	|		Заказы.Характеристика,
	|		Заказы.КодСтроки,
	|		ВЫБОР
	|			КОГДА Заказы.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|				ТОГДА -Заказы.КОформлению
	|			ИНАЧЕ Заказы.КОформлению
	|		КОНЕЦ
	|	ИЗ
	|		РегистрНакопления.ЗаказыНаПеремещение КАК Заказы
	|	ГДЕ
	|		Заказы.Регистратор = &Регистратор
	|		И Заказы.ЗаказНаПеремещение В (ВЫБРАТЬ Т.Заказ Из ВТЗаказыОтбор КАК Т)
	|		И Заказы.Активность
	|		И ВЫБОР
	|				КОГДА &Период <> ДАТАВРЕМЯ(1, 1, 1)
	|					ТОГДА Заказы.Период <= &Период
	|				ИНАЧЕ ИСТИНА
	|			КОНЕЦ) КАК Заказы
	|
	|СГРУППИРОВАТЬ ПО
	|	Заказы.Номенклатура,
	|	Заказы.Характеристика,
	|	Заказы.КодСтроки,
	|	Заказы.ЗаказНаПеремещение
	|
	|ИМЕЮЩИЕ
	|	СУММА(Заказы.КОформлению) > 0
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Товары.Ссылка,
	|	МАКСИМУМ(Товары.НомерСтроки) КАК НомерСтроки,
	|	Товары.Номенклатура          КАК Номенклатура,
	|	Товары.Характеристика        КАК Характеристика,
	|	Товары.Назначение            КАК Назначение,
	|	Товары.КодСтроки             КАК КодСтроки,
	|	ВЫБОР
	|		КОГДА Товары.УказыватьСерии
	|			ТОГДА Товары.Ссылка
	|		ИНАЧЕ
	|			ЗНАЧЕНИЕ(Документ.ЗаказНаПеремещение.ПустаяСсылка)
	|	КОНЕЦ                           КАК ДокументРезерваСерий,
	|	МАКСИМУМ(Товары.Упаковка)       КАК Упаковка,
	|	МАКСИМУМ(Товары.НачалоОтгрузки) КАК ДатаОтгрузки,
	|	Товары.Ссылка.Сделка            КАК Сделка
	|
	|ПОМЕСТИТЬ ТаблицаТовары
	|
	|ИЗ
	|	Документ.ЗаказНаПеремещение.Товары КАК Товары
	|ГДЕ
	|	Товары.Ссылка В (ВЫБРАТЬ Т.Заказ Из ВТЗаказыОтбор КАК Т)
	|
	|СГРУППИРОВАТЬ ПО
	|	Товары.Номенклатура,
	|	Товары.Характеристика,
	|	Товары.Назначение,
	|	Товары.КодСтроки,
	|	ВЫБОР
	|		КОГДА Товары.УказыватьСерии
	|			ТОГДА Товары.Ссылка
	|		ИНАЧЕ ЗНАЧЕНИЕ(Документ.ЗаказНаПеремещение.ПустаяСсылка)
	|	КОНЕЦ,
	|	Товары.Ссылка,
	|	Товары.Ссылка.Сделка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаОстатки.ЗаказНаПеремещение  КАК ЗаказНаПеремещение,
	|	ТаблицаОстатки.Номенклатура        КАК Номенклатура,
	|	ТаблицаОстатки.Характеристика      КАК Характеристика,
	|	ТаблицаТовары.Назначение           КАК Назначение,
	|	ТаблицаОстатки.КодСтроки           КАК КодСтроки,
	|	ТаблицаОстатки.Количество          КАК Количество,
	|	ТаблицаТовары.Упаковка             КАК Упаковка,
	|	ТаблицаТовары.Упаковка.Коэффициент КАК Коэффициент,
	|	ТаблицаТовары.ДатаОтгрузки         КАК ДатаОтгрузки,
	|	ТаблицаТовары.ДокументРезерваСерий КАК ДокументРезерваСерий,
	|	ТаблицаТовары.Сделка               КАК Сделка
	|ИЗ
	|	ТаблицаОстатки КАК ТаблицаОстатки
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ТаблицаТовары КАК ТаблицаТовары
	|		ПО ТаблицаОстатки.Номенклатура          = ТаблицаТовары.Номенклатура
	|			И ТаблицаОстатки.Характеристика     = ТаблицаТовары.Характеристика
	|			И ТаблицаОстатки.КодСтроки          = ТаблицаТовары.КодСтроки
	|			И ТаблицаОстатки.ЗаказНаПеремещение = ТаблицаТовары.Ссылка
	|
	|УПОРЯДОЧИТЬ ПО
	|	ТаблицаОстатки.ЗаказНаПеремещение.Дата,
	|	ТаблицаОстатки.ЗаказНаПеремещение,
	|	ТаблицаТовары.НомерСтроки
	|";
	
	УстановитьПривилегированныйРежим(Истина);
	Возврат Запрос.Выполнить();

КонецФункции

// Заполняет таблицу товаров по данным отбора или массиву заказов
//
// Параметры:
// ДанныеОтбора            - Структура - поля, по которым будут отобраны остатки заказов для заполнения документа
// Товары                  - ДанныеФормыКоллекция - таблица товаров, в которую будут помещены остатки заказов
// МассивЗаказов           - Массив - заказы, по которым будут отобраны остатки
// ЗаполнятьНаДатуОтгрузки - Булево - указывает на необходимость заполнения по остаткам на дату, переданную в качестве поля в ДанныеОтбора
//
Процедура ЗаполнитьПоОстаткамЗаказов(ДанныеОтбора,
	                                 Товары,
	                                 МассивЗаказов=Неопределено,
	                                 ЗаполнятьНаДатуОтгрузки=Ложь) Экспорт
	
	// Данные по остаткам товаров заказа.
	Выборка = ПолучитьРезультатЗапросаПоОстаткамЗаказов(
		ДанныеОтбора,
		?(ЗаполнятьНаДатуОтгрузки, ДанныеОтбора.Дата, Неопределено),
		МассивЗаказов
	).Выбрать();
	
	Пока Выборка.Следующий() Цикл
		
		СтрокаТоваров = Товары.Добавить();
		ЗаполнитьЗначенияСвойств(СтрокаТоваров, Выборка);
		
		// Если упаковка заполнена нужно определить количество упаковок.
		Если ЗначениеЗаполнено(СтрокаТоваров.Упаковка) Тогда
			СтрокаТоваров.КоличествоУпаковок = СтрокаТоваров.Количество / Выборка.Коэффициент;
		Иначе
			СтрокаТоваров.КоличествоУпаковок = СтрокаТоваров.Количество;
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

//Имена реквизитов, от значений которых зависят параметры указания серий
//
//	Возвращаемое значение:
//		Строка - имена реквизитов, перечисленные через запятую
//
Функция ИменаРеквизитовДляЗаполненияПараметровУказанияСерий() Экспорт
	ИменаРеквизитов = "СкладОтправитель,СкладПолучатель,Статус";
	
	Возврат ИменаРеквизитов;
КонецФункции

//Возвращает параметры указания серий для товаров, указанных в документе
//
//	Параметры
//			Объект - Структура - структура значений реквизитов объекта, необходимых для заполнения параметров указания серий
//	Возвращаемое значение
//			Тип Структура
//				Состав полей задается в функции ОбработкаТабличнойЧастиКлиентСервер.ПараметрыУказанияСерий
//
Функция ПараметрыУказанияСерий(Объект) Экспорт
	
	ПараметрыУказанияСерий = НоменклатураКлиентСервер.ПараметрыУказанияСерий();
	
	ИспользованиеСерийСкладОтправитель = ПолучитьФункциональнуюОпцию("ИспользоватьСерииНоменклатурыСклад", Новый Структура("Склад", Объект.СкладОтправитель));
	ИспользованиеСерийСкладПолучатель = (ПолучитьФункциональнуюОпцию("ИспользоватьСерииНоменклатурыСклад", Новый Структура("Склад", Объект.СкладПолучатель))
									И Не ПолучитьФункциональнуюОпцию("ИспользоватьОрдернуюСхемуПриПоступлении",  Новый Структура("Склад", Объект.СкладПолучатель)));
									
	ПараметрыУказанияСерий.ИспользоватьСерииНоменклатуры = ИспользованиеСерийСкладОтправитель
														Или ИспользованиеСерийСкладПолучатель;
	
	ПараметрыУказанияСерий.СкладскиеОперации.Добавить(Перечисления.СкладскиеОперации.ОтгрузкаПоПеремещению);
	Если Объект.Статус = Перечисления.СтатусыПеремещенийТоваров.Принято Тогда
		ПараметрыУказанияСерий.СкладскиеОперации.Добавить(Перечисления.СкладскиеОперации.ПриемкаПоПеремещению);
	КонецЕсли;
	ПараметрыУказанияСерий.ПоляСвязи.Добавить("ДокументРезерваСерий");
	                        
	ПараметрыУказанияСерий.ЭтоНакладная = Истина;
	ПараметрыУказанияСерий.ЭтоПеремещениеМеждуСкладами = Истина;
	ПараметрыУказанияСерий.ИмяПоляСклад = "СкладОтправитель";
	ПараметрыУказанияСерий.ПроцедураЗаполненияСерий = "ПеремещениеТоваров";
	
	ПараметрыУказанияСерий.ПланированиеОтгрузки = Объект.Статус = Перечисления.СтатусыПеремещенийТоваров.КОтгрузке;
	ПараметрыУказанияСерий.ПланированиеОтбора   = Объект.Статус = Перечисления.СтатусыПеремещенийТоваров.КОтгрузке;
	ПараметрыУказанияСерий.ФактОтбора           =  Объект.Статус = Перечисления.СтатусыПеремещенийТоваров.Отгружено
																Или Объект.Статус = Перечисления.СтатусыПеремещенийТоваров.Принято;
	
	Возврат ПараметрыУказанияСерий;
КонецФункции

//Процедура заполняет статусы указания серий, вызывается из фукнции ОбработкаТабличнойЧастиСервер.ЗаполнитьСтатусыУказанияСерий
Процедура ЗаполнитьСтатусыУказанияСерий(Объект,ПараметрыУказанияСерий,СтрокиТоваровДляОбработки,СтрокиСерийДляОбработки) Экспорт
	
	Если Не ПараметрыУказанияСерий.ИспользоватьСерииНоменклатуры Тогда
		
		Если ПолучитьФункциональнуюОпцию("ИспользоватьСерииНоменклатуры") Тогда
			Для Каждого СтрТабл из Объект.Товары Цикл
				СтрТабл.СтатусУказанияСерий = 0;	
				СтрТабл.СтатусУказанияСерийОтправитель = 0;
				СтрТабл.СтатусУказанияСерийПолучатель  = 0;
			КонецЦикла;
		КонецЕсли;
		
		Возврат;
	КонецЕсли;
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ТаблицаТоваров.Номенклатура,
	|	ТаблицаТоваров.Характеристика,
	|	ТаблицаТоваров.ДокументРезерваСерий,
	|	ТаблицаТоваров.Количество,
	|	ТаблицаТоваров.СтатусУказанияСерийОтправитель,
	|	ТаблицаТоваров.СтатусУказанияСерийПолучатель,
	|	ТаблицаТоваров.НомерСтроки
	|ПОМЕСТИТЬ ТаблицаТоваров
	|ИЗ
	|	&ТаблицаТоваров КАК ТаблицаТоваров
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаТоваров.Номенклатура,
	|	ТаблицаТоваров.Характеристика,
	|	ТаблицаТоваров.ДокументРезерваСерий,
	|	СУММА(ТаблицаТоваров.Количество) КАК Количество,
	|	ВЫРАЗИТЬ(ТаблицаТоваров.Номенклатура КАК Справочник.Номенклатура).ВидНоменклатуры КАК ВидНоменклатуры
	|ПОМЕСТИТЬ ТаблицаТоваровДляЗапроса
	|ИЗ
	|	ТаблицаТоваров КАК ТаблицаТоваров
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаТоваров.Номенклатура,
	|	ТаблицаТоваров.Характеристика,
	|	ТаблицаТоваров.ДокументРезерваСерий,
	|	ВЫРАЗИТЬ(ТаблицаТоваров.Номенклатура КАК Справочник.Номенклатура).ВидНоменклатуры
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаСерий.Номенклатура,
	|	ТаблицаСерий.Характеристика,
	|	ТаблицаСерий.ДокументРезерваСерий,
	|	ТаблицаСерий.Количество
	|ПОМЕСТИТЬ ТаблицаСерий
	|ИЗ
	|	&ТаблицаСерий КАК ТаблицаСерий
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаСерий.Номенклатура,
	|	ТаблицаСерий.Характеристика,
	|	ТаблицаСерий.ДокументРезерваСерий,
	|	СУММА(ТаблицаСерий.Количество) КАК Количество
	|ПОМЕСТИТЬ ТаблицаСерийДляЗапроса
	|ИЗ
	|	ТаблицаСерий КАК ТаблицаСерий
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаСерий.Номенклатура,
	|	ТаблицаСерий.Характеристика,
	|	ТаблицаСерий.ДокументРезерваСерий
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаТоваров.НомерСтроки КАК НомерСтроки,
	|	ВЫБОР
	|		КОГДА (НЕ СкладОтправительПолитикиУчетаСерий.ПолитикаУчетаСерий ЕСТЬ NULL )
	|			ТОГДА ВЫБОР
	|					КОГДА СкладОтправительПолитикиУчетаСерий.ПолитикаУчетаСерий.УказыватьПриПланированииОтгрузки
	|						ТОГДА ВЫБОР
	|								КОГДА ТаблицаТоваровДляЗапроса.Количество = ЕСТЬNULL(ТаблицаСерийДляЗапроса.Количество, 0)
	|										И ТаблицаТоваровДляЗапроса.Количество > 0
	|									ТОГДА 10
	|								ИНАЧЕ 9
	|							КОНЕЦ
	|					КОГДА СкладОтправительПолитикиУчетаСерий.ПолитикаУчетаСерий.УказыватьПриПланированииОтбора
	|							И (НЕ СкладОтправитель.ИспользоватьОрдернуюСхемуПриОтгрузке)
	|						ТОГДА ВЫБОР
	|								КОГДА ТаблицаТоваровДляЗапроса.Количество = ЕСТЬNULL(ТаблицаСерийДляЗапроса.Количество, 0)
	|										И ТаблицаТоваровДляЗапроса.Количество > 0
	|									ТОГДА ВЫБОР
	|											КОГДА СкладОтправительПолитикиУчетаСерий.ПолитикаУчетаСерий.УчетСерийПоFEFO
	|												ТОГДА 6
	|											ИНАЧЕ 8
	|										КОНЕЦ
	|								ИНАЧЕ ВЫБОР
	|										КОГДА СкладОтправительПолитикиУчетаСерий.ПолитикаУчетаСерий.УчетСерийПоFEFO
	|											ТОГДА 5
	|										ИНАЧЕ 7
	|									КОНЕЦ
	|							КОНЕЦ
	|					КОГДА СкладОтправительПолитикиУчетаСерий.ПолитикаУчетаСерий.УказыватьПоФактуОтбора
	|							И СкладОтправительПолитикиУчетаСерий.ПолитикаУчетаСерий.УказыватьПриОтгрузкеПоПеремещению
	|							И (НЕ СкладОтправитель.ИспользоватьОрдернуюСхемуПриОтгрузке)
	|							И &ФактОтбора
	|						ТОГДА ВЫБОР
	|								КОГДА ТаблицаТоваровДляЗапроса.Количество = ЕСТЬNULL(ТаблицаСерийДляЗапроса.Количество, 0)
	|										И ТаблицаТоваровДляЗапроса.Количество > 0
	|									ТОГДА ВЫБОР
	|											КОГДА СкладОтправительПолитикиУчетаСерий.ПолитикаУчетаСерий.УчитыватьОстаткиСерий
	|												ТОГДА 4
	|											ИНАЧЕ 2
	|										КОНЕЦ
	|								ИНАЧЕ ВЫБОР
	|										КОГДА СкладОтправительПолитикиУчетаСерий.ПолитикаУчетаСерий.УчитыватьОстаткиСерий
	|											ТОГДА 3
	|										ИНАЧЕ 1
	|									КОНЕЦ
	|							КОНЕЦ
	|					ИНАЧЕ 0
	|				КОНЕЦ
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК СтатусУказанияСерийОтправитель,
	|	ВЫБОР
	|		КОГДА (НЕ СкладПолучательПолитикиУчетаСерий.ПолитикаУчетаСерий ЕСТЬ NULL )
	|				И (НЕ СкладПолучатель.ИспользоватьОрдернуюСхемуПриПоступлении)
	|				И &ПриемкаПоПеремещению
	|			ТОГДА ВЫБОР
	|					КОГДА СкладПолучательПолитикиУчетаСерий.ПолитикаУчетаСерий.УказыватьПриПланированииОтгрузки
	|						ТОГДА ВЫБОР
	|								КОГДА ТаблицаТоваровДляЗапроса.Количество = ЕСТЬNULL(ТаблицаСерийДляЗапроса.Количество, 0)
	|										И ТаблицаТоваровДляЗапроса.Количество > 0
	|									ТОГДА 10
	|								ИНАЧЕ 9
	|							КОНЕЦ
	|					КОГДА СкладПолучательПолитикиУчетаСерий.ПолитикаУчетаСерий.УказыватьПриПланированииОтбора
	|						ТОГДА ВЫБОР
	|								КОГДА ТаблицаТоваровДляЗапроса.Количество = ЕСТЬNULL(ТаблицаСерийДляЗапроса.Количество, 0)
	|										И ТаблицаТоваровДляЗапроса.Количество > 0
	|									ТОГДА 8
	|								ИНАЧЕ 7
	|							КОНЕЦ
	|					КОГДА СкладПолучательПолитикиУчетаСерий.ПолитикаУчетаСерий.УказыватьПриПриемке
	|							И СкладПолучательПолитикиУчетаСерий.ПолитикаУчетаСерий.УказыватьПриПриемкеПоПеремещению
	|						ТОГДА ВЫБОР
	|								КОГДА ТаблицаТоваровДляЗапроса.Количество = ЕСТЬNULL(ТаблицаСерийДляЗапроса.Количество, 0)
	|										И ТаблицаТоваровДляЗапроса.Количество > 0
	|									ТОГДА ВЫБОР
	|											КОГДА СкладПолучательПолитикиУчетаСерий.ПолитикаУчетаСерий.УчитыватьОстаткиСерий
	|												ТОГДА 4
	|											ИНАЧЕ 2
	|										КОНЕЦ
	|								ИНАЧЕ ВЫБОР
	|										КОГДА СкладПолучательПолитикиУчетаСерий.ПолитикаУчетаСерий.УчитыватьОстаткиСерий
	|											ТОГДА 3
	|										ИНАЧЕ 1
	|									КОНЕЦ
	|							КОНЕЦ
	|					ИНАЧЕ 0
	|				КОНЕЦ
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК СтатусУказанияСерийПолучатель,
	|	ТаблицаТоваров.СтатусУказанияСерийОтправитель КАК СтатусУказанияСерийОтправительСтарый,
	|	ТаблицаТоваров.СтатусУказанияСерийПолучатель КАК СтатусУказанияСерийПолучательСтарый
	|ПОМЕСТИТЬ ТаблицаСтатусов
	|ИЗ
	|	ТаблицаТоваровДляЗапроса КАК ТаблицаТоваровДляЗапроса
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ТаблицаТоваров КАК ТаблицаТоваров
	|		ПО ТаблицаТоваровДляЗапроса.Номенклатура = ТаблицаТоваров.Номенклатура
	|			И ТаблицаТоваровДляЗапроса.Характеристика = ТаблицаТоваров.Характеристика
	|			И ТаблицаТоваровДляЗапроса.ДокументРезерваСерий = ТаблицаТоваров.ДокументРезерваСерий
	|		ЛЕВОЕ СОЕДИНЕНИЕ ТаблицаСерийДляЗапроса КАК ТаблицаСерийДляЗапроса
	|		ПО ТаблицаТоваровДляЗапроса.Номенклатура = ТаблицаСерийДляЗапроса.Номенклатура
	|			И ТаблицаТоваровДляЗапроса.Характеристика = ТаблицаСерийДляЗапроса.Характеристика
	|			И ТаблицаТоваровДляЗапроса.ДокументРезерваСерий = ТаблицаСерийДляЗапроса.ДокументРезерваСерий
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ВидыНоменклатуры.ПолитикиУчетаСерий КАК СкладОтправительПолитикиУчетаСерий
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Склады КАК СкладОтправитель
	|			ПО СкладОтправительПолитикиУчетаСерий.Склад = СкладОтправитель.Ссылка
	|		ПО (СкладОтправительПолитикиУчетаСерий.Склад = &СкладОтправитель)
	|			И ТаблицаТоваровДляЗапроса.ВидНоменклатуры = СкладОтправительПолитикиУчетаСерий.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ВидыНоменклатуры.ПолитикиУчетаСерий КАК СкладПолучательПолитикиУчетаСерий
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Склады КАК СкладПолучатель
	|			ПО СкладПолучательПолитикиУчетаСерий.Склад = СкладПолучатель.Ссылка
	|		ПО (СкладПолучательПолитикиУчетаСерий.Склад = &СкладПолучатель)
	|			И ТаблицаТоваровДляЗапроса.ВидНоменклатуры = СкладПолучательПолитикиУчетаСерий.Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаСтатусов.НомерСтроки,
	|	ТаблицаСтатусов.СтатусУказанияСерийОтправитель,
	|	ТаблицаСтатусов.СтатусУказанияСерийПолучатель,
	|	ВЫБОР
	|		КОГДА ТаблицаСтатусов.СтатусУказанияСерийОтправитель В (5, 6)
	|			ТОГДА ТаблицаСтатусов.СтатусУказанияСерийОтправитель
	|		КОГДА ТаблицаСтатусов.СтатусУказанияСерийОтправитель > ТаблицаСтатусов.СтатусУказанияСерийПолучатель
	|			ТОГДА ТаблицаСтатусов.СтатусУказанияСерийОтправитель
	|		ИНАЧЕ ТаблицаСтатусов.СтатусУказанияСерийПолучатель
	|	КОНЕЦ КАК СтатусУказанияСерий
	|ИЗ
	|	ТаблицаСтатусов КАК ТаблицаСтатусов
	|ГДЕ
	|	(ТаблицаСтатусов.СтатусУказанияСерийОтправитель <> ТаблицаСтатусов.СтатусУказанияСерийОтправительСтарый
	|			ИЛИ ТаблицаСтатусов.СтатусУказанияСерийПолучатель <> ТаблицаСтатусов.СтатусУказанияСерийПолучательСтарый)
	|
	|УПОРЯДОЧИТЬ ПО
	|	ТаблицаСтатусов.НомерСтроки";
	
	Запрос = Новый Запрос;
	Запрос.Текст = ТекстЗапроса;
	
	Запрос.УстановитьПараметр("СкладПолучатель", Объект.СкладПолучатель);
	Запрос.УстановитьПараметр("СкладОтправитель", Объект.СкладОтправитель);
	
	Если ПараметрыУказанияСерий.СкладскиеОперации.Найти(Перечисления.СкладскиеОперации.ПриемкаПоПеремещению) <> Неопределено Тогда
		Запрос.УстановитьПараметр("ПриемкаПоПеремещению", Истина);
	Иначе
		Запрос.УстановитьПараметр("ПриемкаПоПеремещению", Ложь);
	КонецЕсли;
	
	Запрос.УстановитьПараметр("ФактОтбора", ПараметрыУказанияСерий.ФактОтбора);
	
	Если СтрокиСерийДляОбработки <> Неопределено
		И СтрокиТоваровДляОбработки <> Неопределено Тогда
		Запрос.УстановитьПараметр("ТаблицаТоваров", Объект.Товары.Выгрузить(СтрокиТоваровДляОбработки,"Номенклатура, Характеристика,ДокументРезерваСерий,Количество,НомерСтроки,СтатусУказанияСерийОтправитель,СтатусУказанияСерийПолучатель"));
		Запрос.УстановитьПараметр("ТаблицаСерий", Объект.Серии.Выгрузить(СтрокиСерийДляОбработки,"Номенклатура, Характеристика,ДокументРезерваСерий,Количество"));
	Иначе
		Запрос.УстановитьПараметр("ТаблицаТоваров", Объект.Товары.Выгрузить(,"Номенклатура, Характеристика, ДокументРезерваСерий,Количество,НомерСтроки,СтатусУказанияСерийОтправитель,СтатусУказанияСерийПолучатель"));
		Запрос.УстановитьПараметр("ТаблицаСерий", Объект.Серии.Выгрузить(,"Номенклатура, Характеристика, ДокументРезерваСерий, Количество"));
	КонецЕсли;
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		СтрТабл = Объект.Товары[Выборка.НомерСтроки - 1];
		
		СтрТабл.СтатусУказанияСерий            = Выборка.СтатусУказанияСерий;
		СтрТабл.СтатусУказанияСерийОтправитель = Выборка.СтатусУказанияСерийОтправитель;
		СтрТабл.СтатусУказанияСерийПолучатель  = Выборка.СтатусУказанияСерийПолучатель;
	КонецЦикла;
	
КонецПроцедуры

//Процедура заполняет серии товаров по расходным ордерам, выписанным на основе этого документа
//	Объект - ДокументОбъект или ДанныеФормыСтуктура - заполняемый документ
Процедура ЗаполнитьСерииПоОтгрузке(Объект) Экспорт
	
	//Заполнять серии нужно только при особом сочетании признаков складов
	Если ПолучитьФункциональнуюОпцию("ИспользоватьОрдернуюСхемуПриОтгрузке",Новый Структура("Склад", Объект.СкладОтправитель))
		И ПолучитьФункциональнуюОпцию("ИспользоватьСерииНоменклатурыСклад",Новый Структура("Склад", Объект.СкладОтправитель))
		И Не ПолучитьФункциональнуюОпцию("ИспользоватьОрдернуюСхемуПриПоступлении",Новый Структура("Склад", Объект.СкладПолучатель))
		И ПолучитьФункциональнуюОпцию("ИспользоватьСерииНоменклатурыСклад",Новый Структура("Склад", Объект.СкладПолучатель)) Тогда
		
		УстановитьПривилегированныйРежим(Истина);
		
		Запрос = Новый Запрос;
		Запрос.Текст =
		"ВЫБРАТЬ
		|	РасходныйОрдерНаТоварыСерии.Серия,
		|	СУММА(РасходныйОрдерНаТоварыСерии.Количество) КАК Количество,
		|	РасходныйОрдерНаТоварыСерии.Номенклатура,
		|	РасходныйОрдерНаТоварыСерии.Характеристика
		|ИЗ
		|	Документ.РасходныйОрдерНаТовары.Серии КАК РасходныйОрдерНаТоварыСерии
		|ГДЕ
		|	РасходныйОрдерНаТоварыСерии.Ссылка.Распоряжение = &Распоряжение
		|	И РасходныйОрдерНаТоварыСерии.Ссылка.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыРасходныхОрдеров.Отгружен)
		|	И РасходныйОрдерНаТоварыСерии.Ссылка.Проведен
		|
		|СГРУППИРОВАТЬ ПО
		|	РасходныйОрдерНаТоварыСерии.Серия,
		|	РасходныйОрдерНаТоварыСерии.Характеристика,
		|	РасходныйОрдерНаТоварыСерии.Номенклатура";
		
		Запрос.УстановитьПараметр("Распоряжение",Объект.Ссылка);
		
		//Загружаем все серии, те, политики которых не поддерживаются в складе-получателе
		//очистятся перед записью документа, т.к. у строки товаров по этим сериям статус будет 0
		Объект.Серии.Загрузить(Запрос.Выполнить().Выгрузить());
		
	КонецЕсли;
	
КонецПроцедуры

// Формирует запрос проверки при смене статуса списка документов
//
// Параметры:
// 		МассивДокументов - Массив - Массив ссылок на документы, которые надо проверять
// 		НовыйСтатус - Строка - Имя нового статуса
// 		ДополнительныеПараметры - Структура - Структура дополнительных параметров
//
// Возвращаемое значение:
// 		Запрос - Запрос проверки перед сменой статуса
//
Функция СформироватьЗапросПроверкиПриСменеСтатуса(МассивДокументов, НовыйСтатус, ДополнительныеПараметры) Экспорт
	
	ЗначениеНовогоСтатуса = Перечисления.СтатусыПеремещенийТоваров[НовыйСтатус];
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ТаблицаДокументов.Ссылка                КАК Ссылка,
	|	ПРЕДСТАВЛЕНИЕ(ТаблицаДокументов.Ссылка) КАК Представление,
	|	ПРЕДСТАВЛЕНИЕ(ТаблицаДокументов.Статус) КАК ПредставлениеТекущегоСтатуса,
	|	ПРЕДСТАВЛЕНИЕ(&Статус)                  КАК ПредставлениеНовогоСтатуса,
	|	ВЫБОР
	|		КОГДА ТаблицаДокументов.Статус = &Статус ТОГДА
	|			ИСТИНА
	|		ИНАЧЕ
	|			ЛОЖЬ
	|	КОНЕЦ                                    КАК СтатусСовпадает,
	|	ТаблицаДокументов.Проведен               КАК Проведен,
	|	ТаблицаДокументов.ПометкаУдаления        КАК ПометкаУдаления,
	|	ИСТИНА                                   КАК ЗаписьПроведением
	|ИЗ
	|	Документ.ПеремещениеТоваров КАК ТаблицаДокументов
	|ГДЕ
	|	ТаблицаДокументов.Ссылка В(&МассивДокументов)
	|";
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.УстановитьПараметр("Статус", ЗначениеНовогоСтатуса);
	Запрос.УстановитьПараметр("МассивДокументов", МассивДокументов);
	
	Возврат Запрос;
	
КонецФункции// СформироватьЗапросПроверкиПриСменеСтатуса();

// Возвращает результат проверки при смене статуса документа
//
// Параметры:
// 		ВыборкаПроверки - ВыборкаИзРезультатаЗапроса - Текущая строка выборки
// 		НовыйСтатус - Перечисление - Новый статус
// 		ДополнительныеПараметры - Структура - Структура дополнительных параметров
//
// Возвращаемое значение:
// 		Булево - Истина, в случае успешного завершения проверки
//
Функция ПроверкаПередСменойСтатуса(ВыборкаПроверки, НовыйСтатус, ДополнительныеПараметры) Экспорт
	
	Возврат Истина; // Для документа "ПеремещениеТоваров" отсутствуют дополнительные проверки
	
КонецФункции

////////////////////////////////////////////////////////////////////////////////
// Проведение по регл. учету

Функция ТекстОтраженияВРеглУчете() Экспорт
	
	ТекстПеремещениеКомиссионныхТоваров = "
	|ВЫБРАТЬ //// Перемещение комиссионных товаров (Дт 004.01 :: Кт 004.01)
	|
	|	Операция.Дата КАК Период,
	|	Операция.Организация КАК Организация,
	|	НЕОПРЕДЕЛЕНО КАК ИдентификаторСтроки,
	|
	|	0 КАК Сумма,
	|
	|	НЕОПРЕДЕЛЕНО КАК ВидСчетаДт,
	|	ВЫБОР
	|		КОГДА &ФормироватьВидыЗапасовПоГруппамФинансовогоУчета
	|			ТОГДА Строки.ВидЗапасовПолучателя.ГруппаФинансовогоУчета
	|		ИНАЧЕ Строки.Номенклатура.ГруппаФинансовогоУчета
	|	КОНЕЦ КАК АналитикаУчетаДт,
	|	Операция.СкладПолучатель КАК МестоУчетаДт,
	|
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаДт,
	|	Операция.СкладПолучатель.Подразделение КАК ПодразделениеДт,
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ТоварыНаСкладе) КАК СчетДт,
	|
	|	Строки.Номенклатура КАК СубконтоДт1,
	|	Операция.СкладПолучатель КАК СубконтоДт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт3,
	|
	|	0 КАК ВалютнаяСуммаДт,
	|	Строки.Количество КАК КоличествоДт,
	|	0 КАК СуммаНУДт,
	|	0 КАК СуммаПРДт,
	|	0 КАК СуммаВРДт,
	|
	|	НЕОПРЕДЕЛЕНО КАК ВидСчетаКт,
	|	ВЫБОР
	|		КОГДА &ФормироватьВидыЗапасовПоГруппамФинансовогоУчета
	|			ТОГДА Строки.ВидЗапасов.ГруппаФинансовогоУчета
	|		ИНАЧЕ Строки.Номенклатура.ГруппаФинансовогоУчета
	|	КОНЕЦ КАК АналитикаУчетаКт,
	|	Операция.СкладОтправитель КАК МестоУчетаКт,
	|
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаКт,
	|	Операция.СкладОтправитель.Подразделение КАК ПодразделениеКт,
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ТоварыНаСкладе) КАК СчетКт,
	|
	|	Строки.Номенклатура КАК СубконтоКт1,
	|	Операция.СкладОтправитель КАК СубконтоКт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
	|			
	|	0 КАК ВалютнаяСуммаКт,
	|	Строки.Количество КАК КоличествоКт,
	|	0 КАК СуммаНУКт,
	|	0 КАК СуммаПРКт,
	|	0 КАК СуммаВРКт
	|
	|ИЗ
	|	Документ.ПеремещениеТоваров КАК Операция
	|
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ 
	|			Документ.ПеремещениеТоваров.ВидыЗапасов КАК Строки
	|		ПО 
	|			(Строки.Ссылка = Операция.Ссылка)
	|
	|ГДЕ
	|	Операция.Ссылка = &Ссылка
	|	И Строки.ВидЗапасов.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.КомиссионныйТовар)
	|	И Операция.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПеремещениеТоваров)
	|";
	
	ТекстПеремещениеСобственныхТоваров = "
	|ВЫБРАТЬ //// Перемещение собственных товаров (Дт 41.01 :: Кт 41.01)
	|
	|	Операция.Дата КАК Период,
	|	Операция.Организация КАК Организация,
	|	НЕОПРЕДЕЛЕНО КАК ИдентификаторСтроки,
	|
	|	ЕСТЬNULL(СтоимостьТоваров.СтоимостьРегл * Строки.Количество,0) КАК Сумма,
	|
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.НаСкладе) КАК ВидСчетаДт,
	|	ВЫБОР
	|		КОГДА &ФормироватьВидыЗапасовПоГруппамФинансовогоУчета
	|			ТОГДА Строки.ВидЗапасовПолучателя.ГруппаФинансовогоУчета
	|		ИНАЧЕ Строки.Номенклатура.ГруппаФинансовогоУчета
	|	КОНЕЦ КАК АналитикаУчетаДт,
	|	Операция.СкладПолучатель КАК МестоУчетаДт,
	|
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаДт,
	|	Операция.СкладПолучатель.Подразделение КАК ПодразделениеДт,
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетДт,
	|
	|	Строки.Номенклатура КАК СубконтоДт1,
	|	Операция.СкладПолучатель КАК СубконтоДт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт3,   
	|
	|	0 КАК ВалютнаяСуммаДт,
	|	Строки.Количество КАК КоличествоДт,
	|	0 КАК СуммаНУДт,
	|	0 КАК СуммаПРДт,
	|	0 КАК СуммаВРДт,
	|
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.НаСкладе) КАК ВидСчетаКт,
	|	ВЫБОР
	|		КОГДА &ФормироватьВидыЗапасовПоГруппамФинансовогоУчета
	|			ТОГДА Строки.ВидЗапасов.ГруппаФинансовогоУчета
	|		ИНАЧЕ Строки.Номенклатура.ГруппаФинансовогоУчета
	|	КОНЕЦ КАК АналитикаУчетаКт,
	|	Операция.СкладОтправитель КАК МестоУчетаКт,
	|
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаКт,
	|	Операция.СкладОтправитель.Подразделение КАК ПодразделениеКт,
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетКт,
	|
	|	Строки.Номенклатура КАК СубконтоКт1,
	|	Операция.СкладОтправитель КАК СубконтоКт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
	|
	|	0 КАК ВалютнаяСуммаКт,
	|	Строки.Количество КАК КоличествоКт,
	|	0 КАК СуммаНУКт,
	|	0 КАК СуммаПРКт,
	|	0 КАК СуммаВРКт
	|
	|ИЗ
	|	Документ.ПеремещениеТоваров КАК Операция
	|
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ 
	|			Документ.ПеремещениеТоваров.ВидыЗапасов КАК Строки
	|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СтоимостьТоваров КАК СтоимостьТоваров
	|			ПО Строки.Номенклатура = СтоимостьТоваров.АналитикаУчетаНоменклатуры.Номенклатура
	|				И Строки.Характеристика = СтоимостьТоваров.АналитикаУчетаНоменклатуры.Характеристика
	|				И Строки.Ссылка.СкладОтправитель = СтоимостьТоваров.АналитикаУчетаНоменклатуры.Склад
	|				И Строки.Ссылка.Организация = СтоимостьТоваров.Организация
	|				И НАЧАЛОПЕРИОДА(Строки.Ссылка.Дата, Месяц) = СтоимостьТоваров.Период
	|				И (Строки.ВидЗапасов = СтоимостьТоваров.ВидЗапасов И &УчитыватьСебестоимостьТоваровПоВидамЗапасов 
	|				ИЛИ Не &УчитыватьСебестоимостьТоваровПоВидамЗапасов)
	|		ПО 
	|			(Строки.Ссылка = Операция.Ссылка)
	|
	|ГДЕ
	|	Операция.Ссылка = &Ссылка
	|	И Строки.ВидЗапасов.ТипЗапасов <> ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.КомиссионныйТовар)
	|	И Операция.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПеремещениеТоваров)
	|";
	
	ТекстПередачаКомиссионныхТоваровСОбособленногоПодразделения = "
	|ВЫБРАТЬ //// Передача комиссионных товаров с обособленного подразделения (Дт  :: Кт 004.01)
	|
	|	Операция.Дата КАК Период,
	|	Операция.Организация КАК Организация,
	|	НЕОПРЕДЕЛЕНО КАК ИдентификаторСтроки,
	|
	|	0 КАК Сумма,
	|
	|	НЕОПРЕДЕЛЕНО КАК ВидСчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаУчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаДт,
	|
	|	НЕОПРЕДЕЛЕНО КАК ВалютаДт,
	|	НЕОПРЕДЕЛЕНО КАК ПодразделениеДт,
	|	НЕОПРЕДЕЛЕНО КАК СчетДт,
	|
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт3,
	|
	|	0 КАК ВалютнаяСуммаДт,
	|	0 КАК КоличествоДт,
	|	0 КАК СуммаНУДт,
	|	0 КАК СуммаПРДт,
	|	0 КАК СуммаВРДт,
	|
	|	НЕОПРЕДЕЛЕНО КАК ВидСчетаКт,
	|	ВЫБОР
	|		КОГДА &ФормироватьВидыЗапасовПоГруппамФинансовогоУчета
	|			ТОГДА Строки.ВидЗапасов.ГруппаФинансовогоУчета
	|		ИНАЧЕ Строки.Номенклатура.ГруппаФинансовогоУчета
	|	КОНЕЦ КАК АналитикаУчетаКт,
	|	Операция.СкладОтправитель КАК МестоУчетаКт,
	|
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаКт,
	|	Операция.СкладОтправитель.Подразделение КАК ПодразделениеКт,
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ТоварыНаСкладе) КАК СчетКт,
	|
	|	Строки.Номенклатура КАК СубконтоКт1,
	|	Операция.СкладОтправитель КАК СубконтоКт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
	|						
	|	0 КАК ВалютнаяСуммаКт,
	|	Строки.Количество КАК КоличествоКт,
	|	0 КАК СуммаНУКт,
	|	0 КАК СуммаПРКт,
	|	0 КАК СуммаВРКт
	|
	|ИЗ
	|	Документ.ПеремещениеТоваров КАК Операция
	|
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ 
	|			Документ.ПеремещениеТоваров.ВидыЗапасов КАК Строки
	|		ПО 
	|			(Строки.Ссылка = Операция.Ссылка)
	|
	|ГДЕ
	|	Операция.Ссылка = &Ссылка
	|	И Строки.ВидЗапасов.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.КомиссионныйТовар)
	|	И Операция.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВнутренняяПередачаТоваров)
	|";
	
	ТекстПередачаКомиссионныхТоваровНаОбособленноеПодразделение = "
	|ВЫБРАТЬ //// Передача комиссионных товаров на обособленное подразделение (Дт 004.01 :: Кт )
	|
	|	Операция.Дата КАК Период,
	|	Операция.ОрганизацияПолучатель КАК Организация,
	|	НЕОПРЕДЕЛЕНО КАК ИдентификаторСтроки,
	|
	|	0 КАК Сумма,
	|
	|	НЕОПРЕДЕЛЕНО КАК ВидСчетаДт,
	|	ВЫБОР
	|		КОГДА &ФормироватьВидыЗапасовПоГруппамФинансовогоУчета
	|			ТОГДА Строки.ВидЗапасовПолучателя.ГруппаФинансовогоУчета
	|		ИНАЧЕ Строки.Номенклатура.ГруппаФинансовогоУчета
	|	КОНЕЦ КАК АналитикаУчетаДт,
	|	Операция.СкладПолучатель КАК МестоУчетаДт,
	|
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаДт,
	|	Операция.СкладПолучатель.Подразделение КАК ПодразделениеДт,
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ТоварыНаСкладе) КАК СчетДт,
	|
	|	Строки.Номенклатура КАК СубконтоДт1,
	|	Операция.СкладПолучатель КАК СубконтоДт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт3,
	|
	|	0 КАК ВалютнаяСуммаДт,
	|	Строки.Количество КАК КоличествоДт,
	|	0 КАК СуммаНУДт,
	|	0 КАК СуммаПРДт,
	|	0 КАК СуммаВРДт,
	|
	|	НЕОПРЕДЕЛЕНО КАК ВидСчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаУчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаКт,
	|
	|	НЕОПРЕДЕЛЕНО КАК ВалютаКт,
	|	НЕОПРЕДЕЛЕНО КАК ПодразделениеКт,
	|	НЕОПРЕДЕЛЕНО КАК СчетКт,
	|
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
	|			
	|	0 КАК ВалютнаяСуммаКт,
	|	0 КАК КоличествоКт,
	|	0 КАК СуммаНУКт,
	|	0 КАК СуммаПРКт,
	|	0 КАК СуммаВРКт
	|
	|ИЗ
	|	Документ.ПеремещениеТоваров КАК Операция
	|
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ 
	|			Документ.ПеремещениеТоваров.ВидыЗапасов КАК Строки
	|		ПО 
	|			(Строки.Ссылка = Операция.Ссылка)
	|
	|ГДЕ
	|	Операция.Ссылка = &Ссылка
	|	И Строки.ВидЗапасов.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.КомиссионныйТовар)
	|	И Операция.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВнутренняяПередачаТоваров)
	|";
	
	ТекстПередачаСобственныхТоваровСОбособленногоПодразделения = "
	|ВЫБРАТЬ //// Передача собственных товаров с обособленного подразделения (Дт 41.01 :: Кт 79.01)
	|
	|	Операция.Дата КАК Период,
	|	Операция.ОрганизацияПолучатель КАК Организация,
	|	НЕОПРЕДЕЛЕНО КАК ИдентификаторСтроки,
	|
	|	ЕСТЬNULL(СтоимостьТоваров.СтоимостьРегл * Строки.Количество,0) КАК Сумма,
	|
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.НаСкладе) КАК ВидСчетаДт,
	|	ВЫБОР
	|		КОГДА &ФормироватьВидыЗапасовПоГруппамФинансовогоУчета
	|			ТОГДА Строки.ВидЗапасовПолучателя.ГруппаФинансовогоУчета
	|		ИНАЧЕ Строки.Номенклатура.ГруппаФинансовогоУчета
	|	КОНЕЦ КАК АналитикаУчетаДт,
	|	Операция.СкладПолучатель КАК МестоУчетаДт,
	|
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаДт,
	|	Операция.СкладПолучатель.Подразделение КАК ПодразделениеДт,
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетДт,
	|
	|	Строки.Номенклатура КАК СубконтоДт1,
	|	Операция.СкладПолучатель КАК СубконтоДт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт3,
	|
	|	0 КАК ВалютнаяСуммаДт,
	|	Строки.Количество КАК КоличествоДт,
	|	0 КАК СуммаНУДт,
	|	0 КАК СуммаПРДт,
	|	0 КАК СуммаВРДт,
	|
	|	НЕОПРЕДЕЛЕНО КАК ВидСчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаУчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаКт,
	|
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаКт,
	|	НЕОПРЕДЕЛЕНО КАК ПодразделениеКт,
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.РасчетыПоВыделенномуИмуществу) КАК СчетКт,
	|
	|	Операция.Организация КАК СубконтоКт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
	|
	|	0 КАК ВалютнаяСуммаКт,
	|	0 КАК КоличествоКт,
	|	0 КАК СуммаНУКт,
	|	0 КАК СуммаПРКт,
	|	0 КАК СуммаВРКт
	|
	|ИЗ
	|	Документ.ПеремещениеТоваров КАК Операция
	|
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ 
	|			Документ.ПеремещениеТоваров.ВидыЗапасов КАК Строки
	|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СтоимостьТоваров КАК СтоимостьТоваров
	|			ПО Строки.Номенклатура = СтоимостьТоваров.АналитикаУчетаНоменклатуры.Номенклатура
	|				И Строки.Характеристика = СтоимостьТоваров.АналитикаУчетаНоменклатуры.Характеристика
	|				И Строки.Ссылка.СкладОтправитель = СтоимостьТоваров.АналитикаУчетаНоменклатуры.Склад
	|				И Строки.Ссылка.Организация = СтоимостьТоваров.Организация
	|				И НАЧАЛОПЕРИОДА(Строки.Ссылка.Дата, Месяц) = СтоимостьТоваров.Период
	|				И (Строки.ВидЗапасов = СтоимостьТоваров.ВидЗапасов И &УчитыватьСебестоимостьТоваровПоВидамЗапасов 
	|				ИЛИ Не &УчитыватьСебестоимостьТоваровПоВидамЗапасов)
	|		ПО 
	|			(Строки.Ссылка = Операция.Ссылка)
	|
	|ГДЕ
	|	Операция.Ссылка = &Ссылка
	|	И Строки.ВидЗапасов.ТипЗапасов <> ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.КомиссионныйТовар)
	|	И Операция.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВнутренняяПередачаТоваров)
	|";
	
	ТекстПередачаСобственныхТоваровНаОбособленноеПодразделение = "
	|ВЫБРАТЬ //// Передача собственных товаров на обособленное подразделение (Дт 79.01 :: Кт 41.01)
	|
	|	Операция.Дата КАК Период,
	|	Операция.Организация КАК Организация,
	|	НЕОПРЕДЕЛЕНО КАК ИдентификаторСтроки,
	|
	|	ЕСТЬNULL(СтоимостьТоваров.СтоимостьРегл * Строки.Количество,0) КАК Сумма,
	|
	|	НЕОПРЕДЕЛЕНО КАК ВидСчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаУчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаДт,
	|
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаДт,
	|	НЕОПРЕДЕЛЕНО КАК ПодразделениеДт,
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.РасчетыПоВыделенномуИмуществу) КАК СчетДт,
	|
	|	Операция.ОрганизацияПолучатель КАК СубконтоДт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт3,
	|
	|	0 КАК ВалютнаяСуммаДт,
	|	0 КАК КоличествоДт,
	|	0 КАК СуммаНУДт,
	|	0 КАК СуммаПРДт,
	|	0 КАК СуммаВРДт,
	|
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.НаСкладе) КАК ВидСчетаКт,
	|	ВЫБОР
	|		КОГДА &ФормироватьВидыЗапасовПоГруппамФинансовогоУчета
	|			ТОГДА Строки.ВидЗапасов.ГруппаФинансовогоУчета
	|		ИНАЧЕ Строки.Номенклатура.ГруппаФинансовогоУчета
	|	КОНЕЦ КАК АналитикаУчетаКт,
	|	Операция.СкладОтправитель КАК МестоУчетаКт,
	|
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаКт,
	|	Операция.СкладОтправитель.Подразделение КАК ПодразделениеКт,
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетКт,
	|
	|	Строки.Номенклатура КАК СубконтоКт1,
	|	Операция.СкладОтправитель КАК СубконтоКт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
	|
	|	0 КАК ВалютнаяСуммаКт,
	|	Строки.Количество КАК КоличествоКт,
	|	0 КАК СуммаНУКт,
	|	0 КАК СуммаПРКт,
	|	0 КАК СуммаВРКт
	|
	|ИЗ
	|	Документ.ПеремещениеТоваров КАК Операция
	|
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ 
	|			Документ.ПеремещениеТоваров.ВидыЗапасов КАК Строки
	|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СтоимостьТоваров КАК СтоимостьТоваров
	|			ПО Строки.Номенклатура = СтоимостьТоваров.АналитикаУчетаНоменклатуры.Номенклатура
	|				И Строки.Характеристика = СтоимостьТоваров.АналитикаУчетаНоменклатуры.Характеристика
	|				И Строки.Ссылка.СкладОтправитель = СтоимостьТоваров.АналитикаУчетаНоменклатуры.Склад
	|				И Строки.Ссылка.Организация = СтоимостьТоваров.Организация
	|				И Строки.ВидЗапасов = СтоимостьТоваров.ВидЗапасов
	|				И НАЧАЛОПЕРИОДА(Строки.Ссылка.Дата, Месяц) = СтоимостьТоваров.Период
	|				И (Строки.ВидЗапасов = СтоимостьТоваров.ВидЗапасов И &УчитыватьСебестоимостьТоваровПоВидамЗапасов 
	|				ИЛИ Не &УчитыватьСебестоимостьТоваровПоВидамЗапасов)
	|		ПО 
	|			(Строки.Ссылка = Операция.Ссылка)
	|
	|ГДЕ
	|	Операция.Ссылка = &Ссылка
	|	И Строки.ВидЗапасов.ТипЗапасов <> ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.КомиссионныйТовар)
	|	И Операция.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВнутренняяПередачаТоваров)
	|";
	
	Возврат
	ТекстПеремещениеКомиссионныхТоваров
	+ " ОБЪЕДИНИТЬ ВСЕ " + ТекстПеремещениеСобственныхТоваров  
	+ " ОБЪЕДИНИТЬ ВСЕ " + ТекстПередачаКомиссионныхТоваровСОбособленногоПодразделения 
	+ " ОБЪЕДИНИТЬ ВСЕ " + ТекстПередачаКомиссионныхТоваровНаОбособленноеПодразделение 
	+ " ОБЪЕДИНИТЬ ВСЕ " + ТекстПередачаСобственныхТоваровСОбособленногоПодразделения
	+ " ОБЪЕДИНИТЬ ВСЕ " + ТекстПередачаСобственныхТоваровНаОбособленноеПодразделение;
	
КонецФункции

////////////////////////////////////////////////////////////////////////////////
//Проведение

Процедура ИнициализироватьДанныеДокумента(ДокументСсылка, ДополнительныеСвойства) Экспорт

	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Ссылка", ДокументСсылка);
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ДанныеДокумента.Ссылка                КАК Ссылка,
	|	ДанныеДокумента.Дата                  КАК Период,
	|	ДанныеДокумента.Организация           КАК Организация,
	|	ДанныеДокумента.ОрганизацияПолучатель КАК КорОрганизация,
	|	ДанныеДокумента.СкладОтправитель      КАК СкладОтправитель,
	|	ДанныеДокумента.СкладПолучатель       КАК СкладПолучатель,
	|	ДанныеДокумента.ЗаказНаПеремещение    КАК ЗаказНаПеремещение,
	|	ДанныеДокумента.ПеремещениеПоЗаказам  КАК ПеремещениеПоЗаказам,
	|	ДанныеДокумента.ДатаРаспоряжения      КАК ДатаРаспоряжения,
	|	ДанныеДокумента.Статус                КАК Статус,
	|	ДанныеДокумента.ПеремещениеПодДеятельность КАК ПеремещениеПодДеятельность,
	|	ДанныеДокумента.ХозяйственнаяОперация КАК ХозяйственнаяОперация,
	|	ДанныеДокумента.СкладОтправитель.ИспользоватьОрдернуюСхемуПриОтгрузке   КАК ОрдернаяСхемаПриОтгрузке,
	|	ДанныеДокумента.СкладПолучатель.ИспользоватьОрдернуюСхемуПриПоступлении КАК ОрдернаяСхемаПриПоступлении,
	|
	|	ВЫБОР КОГДА ДанныеДокумента.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВнутренняяПередачаТоваров) ТОГДА
	|		ДанныеДокумента.ОрганизацияПолучатель
	|	ИНАЧЕ
	|		ДанныеДокумента.Организация
	|	КОНЕЦ КАК ОрганизацияПолучатель
	|ИЗ
	|	Документ.ПеремещениеТоваров КАК ДанныеДокумента
	|
	|ГДЕ
	|	ДанныеДокумента.Ссылка = &Ссылка
	|";
	Реквизиты = Запрос.Выполнить().Выбрать();
	Реквизиты.Следующий();

	ИнициализироватьКлючиАналитикиНоменклатуры(Реквизиты);

	Запрос.УстановитьПараметр("Период",                      Реквизиты.Период);
	Запрос.УстановитьПараметр("Статус",                      Реквизиты.Статус);
	Запрос.УстановитьПараметр("ДатаРаспоряжения",            Реквизиты.ДатаРаспоряжения);
	Запрос.УстановитьПараметр("Организация",                 Реквизиты.Организация);
	Запрос.УстановитьПараметр("ОрганизацияПолучатель",       Реквизиты.ОрганизацияПолучатель);
	Запрос.УстановитьПараметр("СкладПолучатель",             Реквизиты.СкладПолучатель);
	Запрос.УстановитьПараметр("СкладОтправитель",            Реквизиты.СкладОтправитель);
	Запрос.УстановитьПараметр("ЗаказНаПеремещение",          Реквизиты.ЗаказНаПеремещение);
	Запрос.УстановитьПараметр("ПоЗаказуНаПеремещение",       Реквизиты.ПеремещениеПоЗаказам);
	Запрос.УстановитьПараметр("ПеремещениеПодДеятельность",  Реквизиты.ПеремещениеПодДеятельность);
	Запрос.УстановитьПараметр("ХозяйственнаяОперация",       Реквизиты.ХозяйственнаяОперация);
	Запрос.УстановитьПараметр("КорОрганизация",             ?(Реквизиты.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВнутренняяПередачаТоваров, Реквизиты.КорОрганизация, Неопределено));
	Запрос.УстановитьПараметр("ОрдернаяСхемаПриОтгрузке",    Реквизиты.ОрдернаяСхемаПриОтгрузке);
	Запрос.УстановитьПараметр("ОрдернаяСхемаПриПоступлении", Реквизиты.ОрдернаяСхемаПриПоступлении);
	Запрос.УстановитьПараметр("УчитыватьСебестоимостьТоваровПоВидамЗапасов", ПолучитьФункциональнуюОпцию("УчитыватьСебестоимостьТоваровПоВидамЗапасов"));
	Запрос.УстановитьПараметр("ИспользоватьОбособленноеОбеспечениеЗаказов",	ПолучитьФункциональнуюОпцию("ИспользоватьОбособленноеОбеспечениеЗаказов"));

	Запрос.Текст = "
	// 0 ВтТаблицаСерииТоваровОтправитель
	|ВЫБРАТЬ
	|	ТаблицаТовары.Номенклатура КАК Номенклатура,
	|	ТаблицаТовары.Характеристика КАК Характеристика,
	|	ТаблицаТовары.Количество КАК Количество,
	|	ТаблицаТовары.СтатусУказанияСерий КАК СтатусУказанияСерий,
	|	ТаблицаТовары.ДокументРезерваСерий КАК ДокументРезерваСерий,
	|	ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка) КАК Серия,
	|	ТаблицаТовары.НомерСтроки,
	|	0 КАК Порядок
	|ПОМЕСТИТЬ ВтТаблицаСерииТоваровОтправитель
	|ИЗ
	|	Документ.ПеремещениеТоваров.Товары КАК ТаблицаТовары
	|ГДЕ
	|	ТаблицаТовары.Ссылка = &Ссылка
	|	И ТаблицаТовары.Количество <> 0
	|	И (НЕ ТаблицаТовары.СтатусУказанияСерийОтправитель В (4, 6, 8, 10))
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ТаблицаСерии.Номенклатура,
	|	ТаблицаСерии.Характеристика,
	|	ТаблицаСерии.Количество,
	|	МАКСИМУМ(ТаблицаТовары.СтатусУказанияСерийОтправитель),
	|	ТаблицаСерии.ДокументРезерваСерий,
	|	ТаблицаСерии.Серия,
	|	МИНИМУМ(ТаблицаСерии.НомерСтроки),
	|	1
	|ИЗ
	|	Документ.ПеремещениеТоваров.Серии КАК ТаблицаСерии
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ПеремещениеТоваров.Товары КАК ТаблицаТовары
	|		ПО ТаблицаСерии.Ссылка = ТаблицаТовары.Ссылка
	|			И ТаблицаСерии.Номенклатура = ТаблицаТовары.Номенклатура
	|			И ТаблицаСерии.Характеристика = ТаблицаТовары.Характеристика
	|			И ТаблицаСерии.ДокументРезерваСерий = ТаблицаТовары.ДокументРезерваСерий
	|ГДЕ
	|	ТаблицаСерии.Ссылка = &Ссылка
	|	И ТаблицаТовары.Ссылка = &Ссылка
	|	И ТаблицаСерии.Количество <> 0
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаСерии.Номенклатура,
	|	ТаблицаСерии.Характеристика,
	|	ТаблицаСерии.Серия,
	|	ТаблицаСерии.Количество,
	|	ТаблицаСерии.ДокументРезерваСерий
	|
	|ИМЕЮЩИЕ
	|	МАКСИМУМ(ТаблицаТовары.СтатусУказанияСерийОтправитель) В (4, 6, 8, 10)
	|;
	// 1 ВтТаблицаСерииТоваровПолучатель
	|
	|ВЫБРАТЬ
	|	ТаблицаТовары.Номенклатура КАК Номенклатура,
	|	ТаблицаТовары.Характеристика КАК Характеристика,
	|	ТаблицаТовары.Количество КАК Количество,
	|	ТаблицаТовары.СтатусУказанияСерий КАК СтатусУказанияСерий,
	|	ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка) КАК Серия,
	|	ТаблицаТовары.НомерСтроки,
	|	2 КАК Порядок
	|ПОМЕСТИТЬ ВтТаблицаСерииТоваровПолучатель
	|ИЗ
	|	Документ.ПеремещениеТоваров.Товары КАК ТаблицаТовары
	|ГДЕ
	|	ТаблицаТовары.Ссылка = &Ссылка
	|	И ТаблицаТовары.Количество <> 0
	|	И (НЕ ТаблицаТовары.СтатусУказанияСерийПолучатель В (4, 6, 8, 10))
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ТаблицаСерии.Номенклатура,
	|	ТаблицаСерии.Характеристика,
	|	ТаблицаСерии.Количество,
	|	МАКСИМУМ(ТаблицаТовары.СтатусУказанияСерийПолучатель),
	|	ТаблицаСерии.Серия,
	|	МИНИМУМ(ТаблицаСерии.НомерСтроки),
	|	3
	|ИЗ
	|	Документ.ПеремещениеТоваров.Серии КАК ТаблицаСерии
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ПеремещениеТоваров.Товары КАК ТаблицаТовары
	|		ПО ТаблицаСерии.Ссылка = ТаблицаТовары.Ссылка
	|			И ТаблицаСерии.Номенклатура = ТаблицаТовары.Номенклатура
	|			И ТаблицаСерии.Характеристика = ТаблицаТовары.Характеристика
	|			И ТаблицаСерии.ДокументРезерваСерий = ТаблицаТовары.ДокументРезерваСерий
	|ГДЕ
	|	ТаблицаСерии.Ссылка = &Ссылка
	|	И ТаблицаТовары.Ссылка = &Ссылка
	|	И ТаблицаСерии.Количество <> 0
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаСерии.Номенклатура,
	|	ТаблицаСерии.Характеристика,
	|	ТаблицаСерии.Серия,
	|	ТаблицаСерии.Количество
	|
	|ИМЕЮЩИЕ
	|	МАКСИМУМ(ТаблицаТовары.СтатусУказанияСерийПолучатель) В (4, 6, 8, 10)
	|;
	|////////////////////////////////////////////////////////////////////////////////
	// 2 ВтТовары
	|ВЫБРАТЬ
	|	ТаблицаТовары.Номенклатура             КАК Номенклатура,
	|	ТаблицаТовары.Характеристика           КАК Характеристика,
	|	ТаблицаТовары.ЗаказНаПеремещение       КАК ЗаказНаПеремещение,
	|	ТаблицаТовары.КодСтроки                КАК КодСтроки,
	|
	|	ТаблицаТовары.Назначение               КАК Назначение,
	|
	|	ВЫБОР КОГДА &ПоЗаказуНаПеремещение ТОГДА
	|			ТоварыЗаказа.ВариантОбеспечения
	|		ИНАЧЕ
	|			НЕОПРЕДЕЛЕНО
	|	КОНЕЦ                                  КАК ВариантОбеспечения,
	|	ВЫБОР КОГДА &ПоЗаказуНаПеремещение
	|			И ТоварыЗаказа.ВариантОбеспечения
	|							В 	(ЗНАЧЕНИЕ(Перечисление.ВариантыОбеспечения.ПодЗаказ),
	|									ЗНАЧЕНИЕ(Перечисление.ВариантыОбеспечения.СоСклада)) ТОГДА
	|			ИСТИНА
	|		ИНАЧЕ
	|			ЛОЖЬ
	|	КОНЕЦ                                  КАК ОбособленнаяСтрока,
	|
	|	ВЫБОР КОГДА &ПоЗаказуНаПеремещение И ТаблицаТовары.СтатусУказанияСерий = 10
	|			И ТаблицаТовары.ДокументРезерваСерий <> Неопределено ТОГДА
	|			ИСТИНА
	|		ИНАЧЕ
	|			ЛОЖЬ
	|	КОНЕЦ                                  КАК СтрокаОбеспеченаЗаказом, //Такие строчки из свободных остатков списывает заказ
	|	ТаблицаТовары.Количество               КАК Количество,
	|	ТаблицаТовары.СтатусУказанияСерий      КАК СтатусУказанияСерий,
	|	ТаблицаТовары.ДокументРезерваСерий     КАК ДокументРезерваСерий
	|
	|ПОМЕСТИТЬ ВтТовары
	|
	|ИЗ
	|	Документ.ПеремещениеТОваров.Товары КАК ТаблицаТовары
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ЗаказНаПеремещение.Товары КАК ТоварыЗаказа
	|		ПО ТаблицаТовары.ЗаказНаПеремещение= ТоварыЗаказа.Ссылка
	|			И ТаблицаТовары.Номенклатура   = ТоварыЗаказа.Номенклатура
	|			И ТаблицаТовары.Характеристика = ТоварыЗаказа.Характеристика
	|			И ТаблицаТовары.КодСтроки      = ТоварыЗаказа.КодСтроки
	|			И &ПоЗаказуНаПеремещение
	|
	|ГДЕ
	|	ТаблицаТовары.Ссылка = &Ссылка
	|	И ТаблицаТовары.Номенклатура.ТипНоменклатуры В
	|		(ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Товар),ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара))
	|;
	|
	// 3 ТаблицаЗаказыНаПеремещение
	|ВЫБРАТЬ
	|	ТаблицаТовары.НомерСтроки              КАК НомерСтроки,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
	|	&ДатаРаспоряжения                      КАК Период,
	|	ТаблицаТовары.Номенклатура             КАК Номенклатура,
	|	ТаблицаТовары.Характеристика           КАК Характеристика,
	|	ТаблицаТовары.КодСтроки                КАК КодСтроки,
	|	ТаблицаТовары.ЗаказНаПеремещение       КАК ЗаказНаПеремещение,
	|	ТаблицаТовары.Количество               КАК Заказано,
	|	ТаблицаТовары.Количество               КАК КОформлению
	|ИЗ
	|	Документ.ПеремещениеТоваров.Товары КАК ТаблицаТовары
	|ГДЕ
	|	ТаблицаТовары.Ссылка = &Ссылка
	|	И &ПоЗаказуНаПеремещение
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки

	|;
	|////////////////////////////////////////////////////////////////////////////////
	// 4 ТаблицаСвободныеОстатки
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
	|	&Период                                КАК Период,
	|	&СкладОтправитель                      КАК Склад,
	|	ТаблицаТовары.Номенклатура             КАК Номенклатура,
	|	ТаблицаТовары.Характеристика           КАК Характеристика,
	|	ВЫБОР КОГДА &ПоЗаказуНаПеремещение Тогда
	|			ТаблицаТовары.Количество
	|		ИНАЧЕ
	|			0
	|	КОНЕЦ                                  КАК ВРезерве, //если по заказу-то резерв
	|	ТаблицаТовары.Количество               КАК ВНаличии
	|ИЗ
	|	ВтТовары КАК ТаблицаТовары
	|ГДЕ
	|	НЕ ТаблицаТовары.СтрокаОбеспеченаЗаказом 
	|	И НЕ ТаблицаТовары.ОбособленнаяСтрока
	|
	|ОБЪЕДИНИТЬ ВСЕ
	// Для получателя нужно оприходовать свободные остатки.
	|
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	&Период                                КАК Период,
	|	&СкладПолучатель                       КАК Склад,
	|	ТаблицаТовары.Номенклатура             КАК Номенклатура,
	|	ТаблицаТовары.Характеристика           КАК Характеристика,
	|	0                                      КАК ВРезерве,
	|	ТаблицаТовары.Количество               КАК ВНаличии
	|ИЗ
	|	ВтТовары КАК ТаблицаТовары
	|
	|ГДЕ
	|	(НЕ &ОрдернаяСхемаПриПоступлении
	|			ИЛИ &ИспользоватьОбособленноеОбеспечениеЗаказов)
	|	И ТаблицаТовары.Назначение = ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
	|	И &Статус В (ЗНАЧЕНИЕ(Перечисление.СтатусыПеремещенийТоваров.Принято))
	|
	|;
	|////////////////////////////////////////////////////////////////////////////////
	// 5 ТаблицаТоварыНаСкладах
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	&Период                                КАК Период,
	|	&СкладОтправитель                      КАК Склад,
	|	ТаблицаТовары.Номенклатура             КАК Номенклатура,
	|	ТаблицаТовары.Характеристика           КАК Характеристика,
	|	ТаблицаТовары.НомерСтроки              КАК НомерСтроки,
	|	ТаблицаТовары.Порядок                  КАК Порядок,
	|	ТаблицаТовары.Серия                    КАК Серия,
	|	0                                      КАК ВНаличии,
	|	ТаблицаТовары.Количество               КАК КОтгрузке,
	|	ВЫБОР
	|		КОГДА ТаблицаТовары.СтатусУказанияСерий В (6, 8) ТОГДА
	|			ИСТИНА
	|		ИНАЧЕ
	|			ЛОЖЬ
	|	КОНЕЦ КАК КонтролироватьОстатки
	|ИЗ
	|	ВтТаблицаСерииТоваровОтправитель КАК ТаблицаТовары
	|ГДЕ
	|	(НЕ &ОрдернаяСхемаПриОтгрузке)
	|	И &Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыПеремещенийТоваров.КОтгрузке)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход),
	|	&Период,
	|	&СкладОтправитель,
	|	ТаблицаТовары.Номенклатура,
	|	ТаблицаТовары.Характеристика,
	|	ТаблицаТовары.НомерСтроки,
	|	ТаблицаТовары.Порядок,
	|	ТаблицаТовары.Серия,
	|	ТаблицаТовары.Количество,
	|	0,
	|	ВЫБОР
	|		КОГДА ТаблицаТовары.СтатусУказанияСерий В (6, 8)
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ
	|ИЗ
	|	ВтТаблицаСерииТоваровОтправитель КАК ТаблицаТовары
	|ГДЕ
	|	(НЕ &ОрдернаяСхемаПриОтгрузке)
	|	И &Статус В (ЗНАЧЕНИЕ(Перечисление.СтатусыПеремещенийТоваров.Отгружено), ЗНАЧЕНИЕ(Перечисление.СтатусыПеремещенийТоваров.Принято)) 
	|
	|ОБЪЕДИНИТЬ ВСЕ
	// Для получателя нужно оприходовать товары на склад
	|
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход),
	|	&Период,
	|	&СкладПолучатель,
	|	ТаблицаТовары.Номенклатура,
	|	ТаблицаТовары.Характеристика,
	|	ТаблицаТовары.НомерСтроки,
	|	ТаблицаТовары.Порядок,
	|	ТаблицаТовары.Серия,
	|	ТаблицаТовары.Количество,
	|	0,
	|	ЛОЖЬ
	|ИЗ
	|	ВтТаблицаСерииТоваровПолучатель КАК ТаблицаТовары
	|ГДЕ
	|	(НЕ &ОрдернаяСхемаПриПоступлении)
	|	И &Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыПеремещенийТоваров.Принято)
	|
	|УПОРЯДОЧИТЬ ПО
	|	Порядок,
	|	НомерСтроки
	|;
	|////////////////////////////////////////////////////////////////////////////////
	// 6 ТаблицаДвижениеТоваров
	|ВЫБРАТЬ
	|	1                                КАК Порядок,
	|	&Период                          КАК Период,
	|	&СкладПолучатель                 КАК Склад,
	|	ТаблицаТовары.ЗаказНаПеремещение КАК Распоряжение,
	|	ТаблицаТовары.Номенклатура       КАК Номенклатура,
	|	ТаблицаТовары.Характеристика     КАК Характеристика,
	|	ТаблицаТовары.Назначение         КАК Назначение,
	|	ТаблицаТовары.ВариантОбеспечения КАК ВариантОбеспечения,
	|	0                                КАК ПланируемаяОтгрузка,
	|	-ТаблицаТовары.Количество        КАК ПланируемоеПоступление
	|ИЗ
	|	ВтТовары КАК ТаблицаТовары
	|
	|ГДЕ
	|	&ПоЗаказуНаПеремещение 
	|	И (НЕ &ОрдернаяСхемаПриПоступлении ИЛИ &ИспользоватьОбособленноеОбеспечениеЗаказов)
	|	И НЕ ТаблицаТовары.СтрокаОбеспеченаЗаказом
	|	И &Статус В (ЗНАЧЕНИЕ(Перечисление.СтатусыПеремещенийТоваров.Принято))
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	2                                КАК Порядок,
	|	&Период                          КАК Период,
	|	&СкладОтправитель                КАК Склад,
	|	ТаблицаТовары.ЗаказНаПеремещение КАК Распоряжение,
	|	ТаблицаТовары.Номенклатура       КАК Номенклатура,
	|	ТаблицаТовары.Характеристика     КАК Характеристика,
	|	ВЫБОР КОГДА ТаблицаТовары.Назначение = ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
	|			И ТаблицаТовары.ВариантОбеспечения = ЗНАЧЕНИЕ(Перечисление.ВариантыОбеспечения.ПодЗаказ) ТОГДА
	|		ТаблицаТовары.ЗаказНаПеремещение.Назначение
	|	ИНАЧЕ
	|		ТаблицаТовары.Назначение
	|	КОНЕЦ                            КАК Назначение,
	|	ТаблицаТовары.ВариантОбеспечения КАК ВариантОбеспечения,
	|	-ТаблицаТовары.Количество        КАК ПланируемаяОтгрузка,
	|	0                                КАК ПланируемоеПоступление
	|ИЗ
	|	ВтТовары КАК ТаблицаТовары
	|
	|ГДЕ
	|	&ПоЗаказуНаПеремещение
	|	И НЕ ТаблицаТовары.СтрокаОбеспеченаЗаказом
	|
	|УПОРЯДОЧИТЬ ПО
	|	Порядок
	|;
	|////////////////////////////////////////////////////////////////////////////////
	// 7 ТаблицаТоварыКОтгрузке
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	&Период                                КАК Период,
	|	&СкладОтправитель                      КАК Склад,
	|	ТаблицаТовары.Номенклатура             КАК Номенклатура,
	|	ТаблицаТовары.Характеристика           КАК Характеристика,
	|	ТаблицаТовары.НомерСтроки КАК НомерСтроки,
	|	ТаблицаТовары.Порядок КАК Порядок,
	|	ВЫБОР
	|		КОГДА ТаблицаТовары.СтатусУказанияСерий = 10
	|			ТОГДА ТаблицаТовары.Серия
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)
	|	КОНЕЦ КАК Серия,
	|	&Ссылка                                КАК ДокументОтгрузки,
	|	ТаблицаТовары.Количество               КАК КОтгрузке
	|ИЗ
	|	ВтТаблицаСерииТоваровОтправитель КАК ТаблицаТовары
	|ГДЕ
	|	&ОрдернаяСхемаПриОтгрузке
	|
	|УПОРЯДОЧИТЬ ПО
	|	Порядок,
	|	НомерСтроки
	|;
	|////////////////////////////////////////////////////////////////////////////////
	// 8 ТаблицаТоварыКПоступлению
	|ВЫБРАТЬ
	|	ТаблицаТовары.НомерСтроки              КАК НомерСтроки,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	&Период                                КАК Период,
	|	&СкладПолучатель                       КАК Склад,
	|	ТаблицаТовары.Номенклатура             КАК Номенклатура,
	|	ТаблицаТовары.Характеристика           КАК Характеристика,
	|	ВЫБОР КОГДА &ПоЗаказуНаПеремещение ТОГДА
	|		ТаблицаТовары.ЗаказНаПеремещение
	|	ИНАЧЕ
	|		ТаблицаТовары.Ссылка
	|	КОНЕЦ                                  КАК ДокументПоступления,
	|	ТаблицаТовары.Количество               КАК КПоступлению
	|ИЗ
	|	Документ.ПеремещениеТоваров.Товары КАК ТаблицаТовары
	|ГДЕ
	|	ТаблицаТовары.Ссылка = &Ссылка
	|	И &ОрдернаяСхемаПриПоступлении
	|	И &Статус В (ЗНАЧЕНИЕ(Перечисление.СтатусыПеремещенийТоваров.Отгружено),
	|					ЗНАЧЕНИЕ(Перечисление.СтатусыПеремещенийТоваров.Принято))
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки
	|;
	|////////////////////////////////////////////////////////////////////////////////
	// 9 ТаблицаДвиженияСерийТоваров
	|ВЫБРАТЬ
	|	ТаблицаСерии.Номенклатура КАК Номенклатура,
	|	ТаблицаСерии.Характеристика КАК Характеристика,
	|	ТаблицаСерии.Серия КАК Серия,
	|	ТаблицаСерии.Количество КАК Количество,
	|	&СкладОтправитель КАК Склад,
	|	ЗНАЧЕНИЕ(Справочник.СкладскиеПомещения.ПустаяСсылка) КАК Помещение,
	|	ЗНАЧЕНИЕ(Перечисление.СкладскиеОперации.ОтгрузкаПоПеремещению) КАК СкладскаяОперация,
	|	&Ссылка КАК Документ,
	|	&Период КАК Период,
	|	ТаблицаСерии.НомерСтроки КАК НомерСтроки,
	|	0 КАК Порядок
	|ИЗ
	|	Документ.ПеремещениеТоваров.Серии КАК ТаблицаСерии
	|ГДЕ
	|	ТаблицаСерии.Ссылка = &Ссылка
	|	И ТаблицаСерии.Количество <> 0
	|	И (НЕ &ОрдернаяСхемаПриОтгрузке)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ТаблицаСерии.Номенклатура,
	|	ТаблицаСерии.Характеристика,
	|	ТаблицаСерии.Серия,
	|	ТаблицаСерии.Количество,
	|	&СкладПолучатель,
	|	ЗНАЧЕНИЕ(Справочник.СкладскиеПомещения.ПустаяСсылка),
	|	ЗНАЧЕНИЕ(Перечисление.СкладскиеОперации.ПриемкаПоПеремещению),
	|	&Ссылка,
	|	&Период,
	|	ТаблицаСерии.НомерСтроки,
	|	1
	|ИЗ
	|	Документ.ПеремещениеТоваров.Серии КАК ТаблицаСерии
	|ГДЕ
	|	ТаблицаСерии.Ссылка = &Ссылка
	|	И ТаблицаСерии.Количество <> 0
	|	И (НЕ &ОрдернаяСхемаПриПоступлении)
	|
	|УПОРЯДОЧИТЬ ПО
	|	Порядок,
	|	НомерСтроки
	|;
	|////////////////////////////////////////////////////////////////////////////////
	// 10 ТаблицаРезервыСерийТоваров
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
	|	&Период                                КАК Период,
	|	ТаблицаСерии.ДокументРезерваСерий      КАК ДокументРезерва,
	|	&СкладОтправитель                      КАК Склад,
	|	ТаблицаСерии.Номенклатура              КАК Номенклатура,
	|	ТаблицаСерии.Характеристика КАК Характеристика,
	|	ТаблицаСерии.Серия КАК Серия,
	|	ТаблицаСерии.Количество КАК Количество,
	|	ТаблицаСерии.НомерСтроки КАК НомерСтроки,
	|	ТаблицаСерии.Порядок КАК Порядок
	|ИЗ
	|	ВтТаблицаСерииТоваровОтправитель КАК ТаблицаСерии
	|ГДЕ
	|	ТаблицаСерии.ДокументРезерваСерий <> ЗНАЧЕНИЕ(Документ.ЗаказНаПеремещение.ПустаяСсылка)
	|	И &ПоЗаказуНаПеремещение
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход),
	|	&Период,
	|	ТаблицаТовары.ЗаказНаПеремещение,
	|	&СкладОтправитель,
	|	ТаблицаТовары.Номенклатура,
	|	ТаблицаТовары.Характеристика,
	|	ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка),
	|	ТаблицаТовары.Количество,
	|	ТаблицаТовары.НомерСтроки,
	|	5
	|ИЗ
	|	Документ.ПеремещениеТоваров.Товары КАК ТаблицаТовары
	|ГДЕ
	|	ТаблицаТовары.Ссылка = &Ссылка
	|	И &ПоЗаказуНаПеремещение
	|	И ТаблицаТовары.СтатусУказанияСерийОтправитель = 10
	|	И ТаблицаТовары.ДокументРезерваСерий = ЗНАЧЕНИЕ(Документ.ЗаказНаПеремещение.ПустаяСсылка)
	|
	|УПОРЯДОЧИТЬ ПО
	|	Порядок,
	|	НомерСтроки
	|;
	|/////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	1                                         КАК Порядок,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)    КАК ВидДвижения,
	|	&Период                                   КАК Период,
	|	&СкладОтправитель                         КАК Склад,
	|	ТаблицаТовары.Номенклатура                КАК Номенклатура,
	|	ТаблицаТовары.Характеристика              КАК Характеристика,
	|	ВЫБОР КОГДА ТаблицаТовары.Назначение <> ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка) ТОГДА
	|			ТаблицаТовары.Назначение
	|		ИНАЧЕ
	|			ТаблицаТовары.ЗаказНаПеремещение.Назначение
	|	КОНЕЦ                                     КАК Назначение, 
	|	0                                         КАК Заказано,
	|	ВЫБОР
	|		КОГДА ТаблицаТовары.ВариантОбеспечения = ЗНАЧЕНИЕ(Перечисление.ВариантыОбеспечения.ПодЗаказ) ТОГДА
	|			ТаблицаТовары.Количество
	|		ИНАЧЕ 0
	|	КОНЕЦ                                    КАК Потребность,
	|	0                                        КАК КЗаказу,
	|	ВЫБОР КОГДА ТаблицаТовары.ВариантОбеспечения = ЗНАЧЕНИЕ(Перечисление.ВариантыОбеспечения.СоСклада) ТОГДА
	|		ТаблицаТовары.Количество
	|	ИНАЧЕ
	|		0
	|	КОНЕЦ                                    КАК НаличиеСоСклада,
	|	ВЫБОР КОГДА ТаблицаТовары.ВариантОбеспечения = ЗНАЧЕНИЕ(Перечисление.ВариантыОбеспечения.ПодЗаказ) ТОГДА
	|		ТаблицаТовары.Количество
	|	ИНАЧЕ
	|		0
	|	КОНЕЦ                                     КАК НаличиеПодЗаказ
	|ИЗ
	|	ВтТовары КАК ТаблицаТовары
	|
	|ГДЕ
	|	ТаблицаТовары.ВариантОбеспечения <> ЗНАЧЕНИЕ(Перечисление.ВариантыОбеспечения.ПустаяСсылка)
	|	И &ПоЗаказуНаПеремещение
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	// Для получателя нужно оприходовать свободные остатки.
	|ВЫБРАТЬ
	|	2                                         КАК Порядок,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)    КАК ВидДвижения,
	|	&Период                                   КАК Период,
	|	&СкладПолучатель                          КАК Склад,
	|	ТаблицаТовары.Номенклатура                КАК Номенклатура,
	|	ТаблицаТовары.Характеристика              КАК Характеристика,
	|	ТаблицаТовары.Назначение                  КАК Назначение,
	|	ВЫБОР КОГДА &ПоЗаказуНаПеремещение ТОГДА
	|			-ТаблицаТовары.Количество
	|		ИНАЧЕ
	|			0
	|	КОНЕЦ                                     КАК Заказано,
	|	0                                         КАК Потребность,
	|	ВЫБОР КОГДА &ПоЗаказуНаПеремещение ТОГДА
	|			0
	|		ИНАЧЕ
	|			-ТаблицаТовары.Количество
	|	КОНЕЦ                                     КАК КЗаказу,
	|	0                                         КАК НаличиеСоСклада,
	|	ТаблицаТовары.Количество                  КАК НаличиеПодЗаказ
	|ИЗ
	|	ВтТовары КАК ТаблицаТовары
	|
	|
	|ГДЕ
	|	ТаблицаТовары.Назначение <> ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
	|	И &Статус В (ЗНАЧЕНИЕ(Перечисление.СтатусыПеремещенийТоваров.Принято))
	|
	|УПОРЯДОЧИТЬ ПО
	|	Порядок
	|;
	|";
	Запрос.Текст = Запрос.Текст
		+ ТекстЗапросаВтВидыЗапасов()
		+ ТекстЗапросаТаблицаТоварыОрганизаций()
		+ ТекстЗапросаТаблицаСебестоимостьТоваров()
		+ ТекстЗапросаТаблицаПартииТоваровОрганизацийПоследовательность()
		+ ТекстЗапросаТаблицаТоварыОрганизацийКПередаче()
	;
		
	Результат = Запрос.ВыполнитьПакет();
	ТаблицыДляДвижений = ДополнительныеСвойства.ТаблицыДляДвижений;
	// Результат[0] - ВтТаблицаСерииТоваровОтправитель
	// Результат[1] - ВтТаблицаСерииТоваровПолучатель
	// Результат[2] - ВтТаблицаТовары
	ТаблицыДляДвижений.Вставить("ТаблицаЗаказыНаПеремещение",     Результат[3].Выгрузить());
	ТаблицыДляДвижений.Вставить("ТаблицаСвободныеОстатки",        Результат[4].Выгрузить());
	ТаблицыДляДвижений.Вставить("ТаблицаТоварыНаСкладах",         Результат[5].Выгрузить());
	ТаблицыДляДвижений.Вставить("ТаблицаДвижениеТоваров",         Результат[6].Выгрузить());
	ТаблицыДляДвижений.Вставить("ТаблицаТоварыКОтгрузке",         Результат[7].Выгрузить());
	ТаблицыДляДвижений.Вставить("ТаблицаТоварыКПоступлению",      Результат[8].Выгрузить());
	ТаблицыДляДвижений.Вставить("ТаблицаДвиженияСерийТоваров",    Результат[9].Выгрузить());
	ТаблицыДляДвижений.Вставить("ТаблицаРезервыСерийТоваров",     Результат[10].Выгрузить());
	ТаблицыДляДвижений.Вставить("ТаблицаОбеспечениеЗаказов",      Результат[11].Выгрузить());
	// Результат[12] - ВтВидыЗапасов
	ТаблицыДляДвижений.Вставить("ТаблицаТоварыОрганизаций",       Результат[13].Выгрузить());
	ТаблицыДляДвижений.Вставить("ТаблицаСебестоимостьТоваров",    Результат[14].Выгрузить());
	ТаблицыДляДвижений.Вставить("ТаблицаПартииТоваровОрганизацийПоследовательность", Результат[15].Выгрузить());
	ТаблицыДляДвижений.Вставить("ТаблицаТоварыОрганизацийКПередаче", Результат[16].Выгрузить());

КонецПроцедуры

Процедура ИнициализироватьКлючиАналитикиНоменклатуры(Реквизиты)

	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Ссылка",           Реквизиты.Ссылка);
	Запрос.УстановитьПараметр("СкладПолучатель",  Реквизиты.СкладПолучатель);
	Запрос.УстановитьПараметр("СкладОтправитель", Реквизиты.СкладОтправитель);
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ТаблицаТовары.Склад          КАК Склад,
	|	ТаблицаТовары.Номенклатура   КАК Номенклатура,
	|	ТаблицаТовары.Характеристика КАК Характеристика
	|ИЗ
	|	(ВЫБРАТЬ
	|		&СкладОтправитель КАК Склад,
	|		ТаблицаВидыЗапасов.Номенклатура КАК Номенклатура,
	|		ТаблицаВидыЗапасов.Характеристика КАК Характеристика
	|	ИЗ
	|		Документ.ПеремещениеТоваров.ВидыЗапасов КАК ТаблицаВидыЗапасов
	|	ГДЕ
	|		ТаблицаВидыЗапасов.Ссылка = &Ссылка
	|
	|	ОБЪЕДИНИТЬ ВСЕ
	|
	|	ВЫБРАТЬ
	|		&СкладПолучатель КАК Склад,
	|		ТаблицаВидыЗапасов.Номенклатура КАК Номенклатура,
	|		ТаблицаВидыЗапасов.Характеристика КАК Характеристика
	|	ИЗ
	|		Документ.ПеремещениеТоваров.ВидыЗапасов КАК ТаблицаВидыЗапасов
	|	ГДЕ
	|		ТаблицаВидыЗапасов.Ссылка = &Ссылка
	|	) КАК ТаблицаТовары
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РегистрСведений.АналитикаУчетаНоменклатуры КАК Аналитика
	|	ПО
	|		ТаблицаТовары.Номенклатура     = Аналитика.Номенклатура
	|		И ТаблицаТовары.Характеристика = Аналитика.Характеристика
	|		И ТаблицаТовары.Склад          = Аналитика.Склад
	|ГДЕ
	|	Аналитика.Номенклатура ЕСТЬ NULL
	|";
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		РегистрыСведений.АналитикаУчетаНоменклатуры.СоздатьКлючАналитики(Выборка);
	КонецЦикла;

КонецПроцедуры

Функция ТекстЗапросаВтВидыЗапасов()
	
	ТекстЗапроса = "
	|ВЫБРАТЬ
	|	ТаблицаВидыЗапасов.НомерСтроки КАК НомерСтроки,
	|	ТаблицаВидыЗапасов.Номенклатура КАК Номенклатура,
	|	ТаблицаВидыЗапасов.Характеристика КАК Характеристика,
	|	АналитикаНоменклатурыОтправитель.КлючАналитики КАК АналитикаНоменклатурыОтправитель,
	|	АналитикаНоменклатурыПолучатель.КлючАналитики  КАК АналитикаНоменклатурыПолучатель,
	|
	|	ТаблицаВидыЗапасов.ВидЗапасов КАК ВидЗапасов,
	|	ТаблицаВидыЗапасов.ВидЗапасовПолучателя КАК ВидЗапасовОприходование,
	|	ТаблицаВидыЗапасов.НомерГТД КАК НомерГТД,
	|	ТаблицаВидыЗапасов.Количество КАК Количество
	|
	|ПОМЕСТИТЬ ВтВидыЗапасов
	|ИЗ
	|	Документ.ПеремещениеТоваров.ВидыЗапасов КАК ТаблицаВидыЗапасов
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РегистрСведений.АналитикаУчетаНоменклатуры КАК АналитикаНоменклатурыОтправитель
	|	ПО
	|		ТаблицаВидыЗапасов.Номенклатура = АналитикаНоменклатурыОтправитель.Номенклатура
	|		И ТаблицаВидыЗапасов.Характеристика = АналитикаНоменклатурыОтправитель.Характеристика
	|		И АналитикаНоменклатурыОтправитель.Склад = &СкладОтправитель
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РегистрСведений.АналитикаУчетаНоменклатуры КАК АналитикаНоменклатурыПолучатель
	|	ПО
	|		ТаблицаВидыЗапасов.Номенклатура = АналитикаНоменклатурыПолучатель.Номенклатура
	|		И ТаблицаВидыЗапасов.Характеристика = АналитикаНоменклатурыПолучатель.Характеристика
	|		И АналитикаНоменклатурыПолучатель.Склад = &СкладПолучатель
	|ГДЕ
	|	ТаблицаВидыЗапасов.Ссылка = &Ссылка
	|;
	|/////////////////////////////////////////////////////////////////////////////
	|";
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаТоварыОрганизаций()
	
	ТекстЗапроса = "
	|ВЫБРАТЬ
	|	1 КАК Порядок,
	|	ТаблицаВидыЗапасов.НомерСтроки КАК НомерСтроки,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
	|	&Период КАК Период,
	|	ВЫБОР КОГДА ТаблицаВидыЗапасов.ВидЗапасов.РеализацияЗапасовДругойОрганизации ТОГДА
	|		ТаблицаВидыЗапасов.ВидЗапасов.ВидЗапасовВладельца.Организация
	|	ИНАЧЕ
	|		&Организация
	|	КОНЕЦ КАК Организация,
	|	&Организация КАК ОрганизацияОтгрузки,
	|	&СкладОтправитель КАК Склад,
	|	ТаблицаВидыЗапасов.Номенклатура КАК Номенклатура,
	|	ТаблицаВидыЗапасов.Характеристика КАК Характеристика,
	|	ВЫБОР КОГДА ТаблицаВидыЗапасов.ВидЗапасов.РеализацияЗапасовДругойОрганизации ТОГДА
	|		ТаблицаВидыЗапасов.ВидЗапасов.ВидЗапасовВладельца
	|	ИНАЧЕ
	|		ТаблицаВидыЗапасов.ВидЗапасов
	|	КОНЕЦ КАК ВидЗапасов,
	|	ТаблицаВидыЗапасов.НомерГТД КАК НомерГТД,
	|	ТаблицаВидыЗапасов.Количество КАК Количество,
	|	&ХозяйственнаяОперация КАК ХозяйственнаяОперация,
	|	ТаблицаВидыЗапасов.АналитикаНоменклатурыОтправитель КАК АналитикаУчетаНоменклатуры,
	|	&ПеремещениеПодДеятельность КАК НалогообложениеНДС,
	|	ТаблицаВидыЗапасов.ВидЗапасовОприходование КАК КорВидЗапасов
	|ИЗ
	|	ВтВидыЗапасов КАК ТаблицаВидыЗапасов
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	2,
	|	ТаблицаВидыЗапасов.НомерСтроки,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход),
	|	&Период,
	|	&ОрганизацияПолучатель,
	|	НЕОПРЕДЕЛЕНО,
	|	&СкладПолучатель,
	|	ТаблицаВидыЗапасов.Номенклатура,
	|	ТаблицаВидыЗапасов.Характеристика,
	|	ТаблицаВидыЗапасов.ВидЗапасовОприходование,
	|	ТаблицаВидыЗапасов.НомерГТД,
	|	ТаблицаВидыЗапасов.Количество,
	|	&ХозяйственнаяОперация,
	|	ТаблицаВидыЗапасов.АналитикаНоменклатурыПолучатель КАК АналитикаУчетаНоменклатуры,
	|	NULL,
	|	ТаблицаВидыЗапасов.ВидЗапасов КАК КорВидЗапасов
	|ИЗ
	|	ВтВидыЗапасов КАК ТаблицаВидыЗапасов
	|ГДЕ
	|	&Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыПеремещенийТоваров.Принято)
	|
	|УПОРЯДОЧИТЬ ПО
	|	Порядок,
	|	НомерСтроки
	|;
	|/////////////////////////////////////////////////////////////////////////////
	|";
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаСебестоимостьТоваров()

	ТекстЗапроса = "
	|ВЫБРАТЬ
	|	1 КАК Порядок,
	|	ВидыЗапасов.НомерСтроки КАК НомерСтрокиДокумента,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
	|	&Период КАК Период,
	|	ВидыЗапасов.АналитикаНоменклатурыОтправитель КАК АналитикаУчетаНоменклатуры,
	|	&Организация КАК Организация,
	|	ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыНаСкладах) КАК РазделУчета,
	|
	|	ВЫБОР КОГДА &УчитыватьСебестоимостьТоваровПоВидамЗапасов ТОГДА
	|   	ВидыЗапасов.ВидЗапасов
	|	ИНАЧЕ
	|		Неопределено
	|	КОНЕЦ КАК ВидЗапасов,
	|
	|	ВидыЗапасов.Количество КАК Количество,
	|	ВидыЗапасов.АналитикаНоменклатурыПолучатель КАК КорАналитикаУчетаНоменклатуры,
	|	ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыНаСкладах) КАК КорРазделУчета,
	|
	|	ВЫБОР КОГДА &УчитыватьСебестоимостьТоваровПоВидамЗапасов ТОГДА
	|   	ВидыЗапасов.ВидЗапасовОприходование
	|	ИНАЧЕ
	|		Неопределено
	|	КОНЕЦ КАК КорВидЗапасов,
	|
	|	&ХозяйственнаяОперация КАК ХозяйственнаяОперация,
	|	&КорОрганизация КАК КорОрганизация
	|
	|ИЗ
	|	ВтВидыЗапасов КАК ВидыЗапасов
	|ГДЕ
	|	ВидыЗапасов.ВидЗапасов.ТипЗапасов <> ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.КомиссионныйТовар)
	|	И &Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыПеремещенийТоваров.Принято)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	2 КАК Порядок,
	|	ВидыЗапасов.НомерСтроки КАК НомерСтрокиДокумента,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	&Период КАК Период,
	|	ВидыЗапасов.АналитикаНоменклатурыПолучатель КАК АналитикаУчетаНоменклатуры,
	|	&ОрганизацияПолучатель КАК Организация,
	|	ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыНаСкладах) КАК РазделУчета,
	|
	|	ВЫБОР КОГДА &УчитыватьСебестоимостьТоваровПоВидамЗапасов ТОГДА
	|   	ВидыЗапасов.ВидЗапасовОприходование
	|	ИНАЧЕ
	|		Неопределено
	|	КОНЕЦ КАК ВидЗапасов,
	|
	|	ВидыЗапасов.Количество КАК Количество,
	|	НЕОПРЕДЕЛЕНО КАК КорАналитикаУчетаНоменклатуры,
	|	НЕОПРЕДЕЛЕНО КАК КорРазделУчета,
	|	НЕОПРЕДЕЛЕНО КАК КорВидЗапасов,
	|	&ХозяйственнаяОперация КАК ХозяйственнаяОперация,
	|	НЕОПРЕДЕЛЕНО КАК КорОрганизация
	|
	|ИЗ
	|	ВтВидыЗапасов КАК ВидыЗапасов
	|ГДЕ
	|	ВидыЗапасов.ВидЗапасов.ТипЗапасов <> ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.КомиссионныйТовар)
	|	И &Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыПеремещенийТоваров.Принято)
	|
	|УПОРЯДОЧИТЬ ПО
	|	Порядок, НомерСтрокиДокумента
	|;
	|////////////////////////////////////////////////////////////////////////////////
	|";

	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаПартииТоваровОрганизацийПоследовательность()
	
	ТекстЗапроса = "
	|ВЫБРАТЬ
	|	&Ссылка КАК Регистратор,
	|	&Период КАК Период,
	|	ТаблицаВидыЗапасов.Номенклатура КАК Номенклатура,
	|	ТаблицаВидыЗапасов.Характеристика КАК Характеристика
	|ИЗ
	|	Документ.ПеремещениеТоваров.ВидыЗапасов КАК ТаблицаВидыЗапасов
	|ГДЕ
	|	ТаблицаВидыЗапасов.Ссылка = &Ссылка
	|;
	|/////////////////////////////////////////////////////////////////////////////
	|";
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаТоварыОрганизацийКПередаче()
	
	ТекстЗапроса = "
	|ВЫБРАТЬ
	|	Запасы.НомерСтроки КАК НомерСтроки,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	&Период КАК Период,
	|	&СкладОтправитель КАК Склад,
	|	Запасы.ВидЗапасов.ВидЗапасовВладельца.Организация КАК ОрганизацияВладелец,
	|	Запасы.Номенклатура КАК Номенклатура,
	|	Запасы.Характеристика КАК Характеристика,
	|	Запасы.ВидЗапасов КАК ВидЗапасовПродавца,
	|	Запасы.НомерГТД КАК НомерГТД,
	|	Запасы.Количество КАК Количество
	|ИЗ
	|	ВтВидыЗапасов КАК Запасы
	|
	|ГДЕ
	|	Запасы.ВидЗапасов.РеализацияЗапасовДругойОрганизации
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки
	|;
	|/////////////////////////////////////////////////////////////////////////////
	|";
	Возврат ТекстЗапроса;
	
КонецФункции

////////////////////////////////////////////////////////////////////////////////
// Печать

// Процедура печати документа.
//
Процедура Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт
	
	ПараметрыВывода.ДоступнаПечатьПоКомплектно = Истина;
	
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "ТОРГ13") Тогда
		
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(
			КоллекцияПечатныхФорм,
			"ТОРГ13",
			"ТОРГ-13",
			СформироватьПечатнуюФормуТОРГ13(МассивОбъектов, ОбъектыПечати, Неопределено)
		);
		
	КонецЕсли;
	
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "НакладнаяНаПеремещение") Тогда
		
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(
			КоллекцияПечатныхФорм,
			"НакладнаяНаПеремещение",
			"Накладная на перемещение",
			СформироватьПечатнуюФормуНакладнойНаПеремещениеТоваров(МассивОбъектов, ОбъектыПечати, Неопределено)
		);
		
	КонецЕсли;
	
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "КомплектДокументов") Тогда
		КоллекцияПечатныхФорм.Очистить();
		СформироватьКомплектПечатныхФорм(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати);
	КонецЕсли;
	
	ФормированиеПечатныхФорм.ЗаполнитьПараметрыОтправки(ПараметрыВывода.ПараметрыОтправки, МассивОбъектов, КоллекцияПечатныхФорм);
	
КонецПроцедуры

Функция СформироватьКомплектПечатныхФорм(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати) Экспорт
	
	Перем АдресКомплектаПечатныхФорм;
	
	Если ТипЗнч(ПараметрыПечати) = Тип("Структура") И ПараметрыПечати.Свойство("АдресКомплектаПечатныхФорм", АдресКомплектаПечатныхФорм) Тогда
		
		КомплектПечатныхФорм = ПолучитьИзВременногоХранилища(АдресКомплектаПечатныхФорм);
		
	Иначе
		КомплектПечатныхФорм = РегистрыСведений.НастройкиПечатиОбъектов.КомплектПечатныхФорм(
			Метаданные.Документы.ПеремещениеТоваров.ПолноеИмя(),
			МассивОбъектов, Неопределено
		);
		
	КонецЕсли;
		
	Если КомплектПечатныхФорм = Неопределено Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	СтруктураТипов = Новый Соответствие;
	СтруктураТипов.Вставить("Документ.ПеремещениеТоваров", МассивОбъектов);
	
	ИмяМакета = "НакладнаяНаПеремещение";
	ТекущийКомплект = КомплектПечатныхФорм.Скопировать(Новый Структура("Имя,Печатать,",ИмяМакета,Истина));
	Если ТекущийКомплект.Количество() > 0 Тогда
		Если ТекущийКомплект.Колонки.Найти("Ссылка") <> Неопределено И ЗначениеЗаполнено(ТекущийКомплект[0].Ссылка) Тогда
			РегистрыСведений.НастройкиПечатиОбъектов.СкопироватьПечатнуюФормуВКоллекциюОдинЭкземпляр(КоллекцияПечатныхФорм, ИмяМакета);
			ТаблицаСсылок = ТекущийКомплект.Скопировать(,"Ссылка");
			ТаблицаСсылок.Свернуть("Ссылка");
			ТекущийМассивОбъектов = ТаблицаСсылок.ВыгрузитьКолонку("Ссылка");
		Иначе
			РегистрыСведений.НастройкиПечатиОбъектов.СкопироватьПечатнуюФормуВКоллекцию(КоллекцияПечатныхФорм, ТекущийКомплект[0]);
			ТекущийМассивОбъектов = МассивОбъектов
		КонецЕсли;
		
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(
			КоллекцияПечатныхФорм,
			ИмяМакета,
			ТекущийКомплект[0].Представление,
			СформироватьПечатнуюФормуНакладнойНаПеремещениеТоваров(ТекущийМассивОбъектов, ОбъектыПечати, ТекущийКомплект)
		);
	КонецЕсли;
	
	ИмяМакета = "ТОРГ13";
	ТекущийКомплект = КомплектПечатныхФорм.Скопировать(Новый Структура("Имя,Печатать,",ИмяМакета,Истина));
	Если ТекущийКомплект.Количество() > 0 Тогда
		Если ТекущийКомплект.Колонки.Найти("Ссылка") <> Неопределено И ЗначениеЗаполнено(ТекущийКомплект[0].Ссылка) Тогда
			РегистрыСведений.НастройкиПечатиОбъектов.СкопироватьПечатнуюФормуВКоллекциюОдинЭкземпляр(КоллекцияПечатныхФорм, ИмяМакета);
			ТаблицаСсылок = ТекущийКомплект.Скопировать(,"Ссылка");
			ТаблицаСсылок.Свернуть("Ссылка");
			ТекущийМассивОбъектов = ТаблицаСсылок.ВыгрузитьКолонку("Ссылка");
		Иначе
			РегистрыСведений.НастройкиПечатиОбъектов.СкопироватьПечатнуюФормуВКоллекцию(КоллекцияПечатныхФорм, ТекущийКомплект[0]);
			ТекущийМассивОбъектов = МассивОбъектов
		КонецЕсли;
		
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(
			КоллекцияПечатныхФорм,
			ИмяМакета,
			ТекущийКомплект[0].Представление,
			СформироватьПечатнуюФормуТОРГ13(ТекущийМассивОбъектов, ОбъектыПечати, ТекущийКомплект)
		);
	КонецЕсли;
	
	ИмяМакета = "ТТН";
	ТекущийКомплект = КомплектПечатныхФорм.Скопировать(Новый Структура("Имя,Печатать,",ИмяМакета,Истина));
	Если ТекущийКомплект.Количество() > 0 Тогда
		Если ТекущийКомплект.Колонки.Найти("Ссылка") <> Неопределено И ЗначениеЗаполнено(ТекущийКомплект[0].Ссылка) Тогда
			РегистрыСведений.НастройкиПечатиОбъектов.СкопироватьПечатнуюФормуВКоллекциюОдинЭкземпляр(КоллекцияПечатныхФорм, ИмяМакета);
			ТаблицаСсылок = ТекущийКомплект.Скопировать(,"Ссылка");
			ТаблицаСсылок.Свернуть("Ссылка");
			ТекущийМассивОбъектов = ТаблицаСсылок.ВыгрузитьКолонку("Ссылка");
		Иначе
			РегистрыСведений.НастройкиПечатиОбъектов.СкопироватьПечатнуюФормуВКоллекцию(КоллекцияПечатныхФорм, ТекущийКомплект[0]);
			ТекущийМассивОбъектов = МассивОбъектов
		КонецЕсли;
		
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(
			КоллекцияПечатныхФорм,
			ИмяМакета,
			ТекущийКомплект[0].Представление,
			Обработки.ПечатьТТН.СформироватьПечатнуюФормуТТН(ТекущийМассивОбъектов, ОбъектыПечати, ПараметрыПечати, ТекущийКомплект)
		);
	КонецЕсли;
	
	ИмяМакета = "М11";
	ТекущийКомплект = КомплектПечатныхФорм.Скопировать(Новый Структура("Имя,Печатать,",ИмяМакета,Истина));
	Если ТекущийКомплект.Количество() > 0 Тогда
		Если ТекущийКомплект.Колонки.Найти("Ссылка") <> Неопределено И ЗначениеЗаполнено(ТекущийКомплект[0].Ссылка) Тогда
			РегистрыСведений.НастройкиПечатиОбъектов.СкопироватьПечатнуюФормуВКоллекциюОдинЭкземпляр(КоллекцияПечатныхФорм, ИмяМакета);
			ТаблицаСсылок = ТекущийКомплект.Скопировать(,"Ссылка");
			ТаблицаСсылок.Свернуть("Ссылка");
			ТекущаяСтруктураТипов = Новый Соответствие;
			ТекущаяСтруктураТипов.Вставить("Документ.ПеремещениеТоваров", ТаблицаСсылок.ВыгрузитьКолонку("Ссылка"));
		Иначе
			РегистрыСведений.НастройкиПечатиОбъектов.СкопироватьПечатнуюФормуВКоллекцию(КоллекцияПечатныхФорм, ТекущийКомплект[0]);
			ТекущаяСтруктураТипов = СтруктураТипов;
		КонецЕсли;
		
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(
			КоллекцияПечатныхФорм,
			ИмяМакета,
			ТекущийКомплект[0].Представление,
			Обработки.ПечатьМ11.СформироватьПечатнуюФормуМ11(ТекущаяСтруктураТипов, ОбъектыПечати, ПараметрыПечати, ТекущийКомплект)
		);
	КонецЕсли;
	
	ИмяМакета = "ТранспортнаяНакладная";
	ТекущийКомплект = КомплектПечатныхФорм.Скопировать(Новый Структура("Имя,Печатать,",ИмяМакета,Истина));
	Если ТекущийКомплект.Количество() > 0 Тогда
		Если ТекущийКомплект.Колонки.Найти("Ссылка") <> Неопределено И ЗначениеЗаполнено(ТекущийКомплект[0].Ссылка) Тогда
			РегистрыСведений.НастройкиПечатиОбъектов.СкопироватьПечатнуюФормуВКоллекциюОдинЭкземпляр(КоллекцияПечатныхФорм, ИмяМакета);
			ТаблицаСсылок = ТекущийКомплект.Скопировать(,"Ссылка");
			ТаблицаСсылок.Свернуть("Ссылка");
			ТекущийМассивОбъектов = ТаблицаСсылок.ВыгрузитьКолонку("Ссылка");
		Иначе
			РегистрыСведений.НастройкиПечатиОбъектов.СкопироватьПечатнуюФормуВКоллекцию(КоллекцияПечатныхФорм, ТекущийКомплект[0]);
			ТекущийМассивОбъектов = МассивОбъектов
		КонецЕсли;
		
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(
			КоллекцияПечатныхФорм,
			ИмяМакета,
			ТекущийКомплект[0].Представление,
			Обработки.ПечатьТранспортнойНакладной.СформироватьПечатнуюФормуТранспортнойНакладной(ТекущийМассивОбъектов, ОбъектыПечати, ТекущийКомплект)
		);
	КонецЕсли;
	
	РегистрыСведений.НастройкиПечатиОбъектов.СформироватьКомплектВнешнихПечатныхФорм(
		"Документ.ПеремещениеТоваров",
		МассивОбъектов,
		ПараметрыПечати,
		КоллекцияПечатныхФорм,
		ОбъектыПечати
	);
	
КонецФункции

Функция КомплектПечатныхФорм() Экспорт
	
	КомплектПечатныхФорм = РегистрыСведений.НастройкиПечатиОбъектов.ПодготовитьКомплектПечатныхФорм();
	РегистрыСведений.НастройкиПечатиОбъектов.ДобавитьПечатнуюФормуВКомплект(КомплектПечатныхФорм, "НакладнаяНаПеремещение", "Накладная на перемещение",                     0);
	РегистрыСведений.НастройкиПечатиОбъектов.ДобавитьПечатнуюФормуВКомплект(КомплектПечатныхФорм, "ТОРГ13", "ТОРГ-13",                                                      2);
	РегистрыСведений.НастройкиПечатиОбъектов.ДобавитьПечатнуюФормуВКомплект(КомплектПечатныхФорм, "ТТН", "1-Т (Товарно-транспортная накладная)",                            0);
	РегистрыСведений.НастройкиПечатиОбъектов.ДобавитьПечатнуюФормуВКомплект(КомплектПечатныхФорм, "М11","М-11",                                                             0);
	РегистрыСведений.НастройкиПечатиОбъектов.ДобавитьПечатнуюФормуВКомплект(КомплектПечатныхФорм, "ТранспортнаяНакладная", "Транспортная накладная",                        0);
	
	Возврат КомплектПечатныхФорм;
	
КонецФункции

// Функция получает данные для формирования печатной формы Транспортная накладная.
//
Функция ПолучитьДанныеДляПечатнойФормыТранспортнаяНакладная(МассивДокументов) Экспорт
	МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	ОтветственныеЛицаСервер.СформироватьВременнуюТаблицуОтветственныхЛицДокументов(МассивДокументов, МенеджерВременныхТаблиц);	
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ПеремещениеТоваров.Ссылка КАК Ссылка,
	|	ПеремещениеТоваров.Номер КАК Номер,
	|	ПеремещениеТоваров.Дата КАК Дата,
	|	ПеремещениеТоваров.Организация КАК Организация,
	|	ВЫБОР
	|		КОГДА ПеремещениеТоваров.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВнутренняяПередачаТоваров)
	|			ТОГДА ПеремещениеТоваров.ОрганизацияПолучатель
	|		ИНАЧЕ ПеремещениеТоваров.Организация
	|	КОНЕЦ КАК Грузополучатель,
	|	ПеремещениеТоваров.Организация КАК Грузоотправитель,
	|	ПеремещениеТоваров.Организация КАК Контрагент,
	|	ПеремещениеТоваров.Организация КАК ЗаказчикПеревозок,
	|	ПеремещениеТоваров.Организация.Префикс КАК Префикс,
	|	ПеремещениеТоваров.СкладОтправитель.ТекущийОтветственный КАК Кладовщик,
	|	ПеремещениеТоваров.СкладОтправитель.ТекущаяДолжностьОтветственного КАК ДолжностьКладовщика,
	|	ТаблицаОтветственныеЛица.РуководительНаименование КАК Руководитель,
	|	ТаблицаОтветственныеЛица.РуководительДолжность КАК ДолжностьРуководителя,
	|	ТаблицаОтветственныеЛица.ГлавныйБухгалтерНаименование КАК ГлавныйБухгалтер,
	|	ПеремещениеТоваров.Перевозчик КАК Перевозчик,
	|	ПеремещениеТоваров.Водитель КАК Водитель,
	|	ПеремещениеТоваров.Автомобиль.ВидПеревозки КАК ВидПеревозки,
	|	ПеремещениеТоваров.Автомобиль.Марка КАК МаркаАвтомобиля,
	|	ПеремещениеТоваров.Автомобиль.Код КАК ГосНомерАвтомобиля,
	|	СкладыКонтактнаяОтправитель.Представление КАК ПунктПогрузки,
	|	СкладыКонтактнаяПолучатель.Представление КАК ПунктРазгрузки,
	|	ПеремещениеТоваров.СрокДоставки КАК СрокДоставки,
	|	ПеремещениеТоваров.Автомобиль.ГрузоподъемностьВТоннах КАК ГрузоподъемностьВТоннахАвтомобиля,
	|	ПеремещениеТоваров.Автомобиль.ВместимостьВКубическихМетрах КАК ВместимостьВКубическихМетрахАвтомобиля,
	|	ПеремещениеТоваров.Автомобиль.Тип КАК ТипАвтомобиля
	|ИЗ
	|	Документ.ПеремещениеТоваров КАК ПеремещениеТоваров
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Склады.КонтактнаяИнформация КАК СкладыКонтактнаяПолучатель
	|		ПО ПеремещениеТоваров.СкладПолучатель = СкладыКонтактнаяПолучатель.Ссылка
	|			И (СкладыКонтактнаяПолучатель.Вид = ЗНАЧЕНИЕ(Справочник.ВидыКонтактнойИнформации.АдресСклада))
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Склады.КонтактнаяИнформация КАК СкладыКонтактнаяОтправитель
	|		ПО ПеремещениеТоваров.СкладОтправитель = СкладыКонтактнаяОтправитель.Ссылка
	|			И (СкладыКонтактнаяОтправитель.Вид = ЗНАЧЕНИЕ(Справочник.ВидыКонтактнойИнформации.АдресСклада))
	|		ЛЕВОЕ СОЕДИНЕНИЕ ТаблицаОтветственныеЛица КАК ТаблицаОтветственныеЛица
	|		ПО ПеремещениеТоваров.Ссылка = ТаблицаОтветственныеЛица.Ссылка
	|ГДЕ
	|	ПеремещениеТоваров.Ссылка В(&МассивДокументов)
	|
	|УПОРЯДОЧИТЬ ПО
	|	Ссылка";
	
	Запрос.УстановитьПараметр("МассивДокументов", МассивДокументов);
	
	ТаблицаРезульта = Запрос.Выполнить().Выгрузить();
	
	Возврат ТаблицаРезульта
КонецФункции

// Функция получает данные для формирования формы "1-Т"
// на основании документа "ПеремещениеТоваров".
//
Функция ПолучитьДанныеДляПечатнойФормыТТН(ПараметрыПечати, МассивОбъектов) Экспорт
	
	КолонкаКодов = ФормированиеПечатныхФорм.ИмяДополнительнойКолонки();
	Если Не ЗначениеЗаполнено(КолонкаКодов) Тогда
		КолонкаКодов = "Код";
	КонецЕсли;
	
	МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	ОтветственныеЛицаСервер.СформироватьВременнуюТаблицуОтветственныхЛицДокументов(МассивОбъектов, МенеджерВременныхТаблиц);	
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ПеремещениеТоваровТовары.Ссылка КАК Ссылка,
	|	МАКСИМУМ(ПеремещениеТоваровТовары.НомерСтроки) КАК НомерСтроки,
	|	ПеремещениеТоваровТовары.Номенклатура КАК Номенклатура,
	|	ПеремещениеТоваровТовары.Характеристика КАК Характеристика,
	|	ПеремещениеТоваровТовары.Упаковка КАК Упаковка,
	|	СУММА(ПеремещениеТоваровТовары.КоличествоУпаковок) КАК КоличествоУпаковок,
	|	СУММА(ПеремещениеТоваровТовары.Количество) КАК Количество,
	|	ПеремещениеТоваровТовары.Ссылка.ВидЦены КАК ВидЦен,
	|	ПеремещениеТоваровТовары.Ссылка.Дата КАК Дата
	|ПОМЕСТИТЬ ПеремещениеТоваровТовары
	|ИЗ
	|	Документ.ПеремещениеТоваров.Товары КАК ПеремещениеТоваровТовары
	|ГДЕ
	|	ПеремещениеТоваровТовары.Ссылка В(&МассивДокументов)
	|
	|СГРУППИРОВАТЬ ПО
	|	ПеремещениеТоваровТовары.Ссылка,
	|	ПеремещениеТоваровТовары.Номенклатура,
	|	ПеремещениеТоваровТовары.Характеристика,
	|	ПеремещениеТоваровТовары.Упаковка,
	|	ПеремещениеТоваровТовары.Ссылка.Дата,
	|	ПеремещениеТоваровТовары.Ссылка.ВидЦены
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПеремещениеТоваровТовары.Ссылка КАК Ссылка,
	|	ПеремещениеТоваровТовары.Номенклатура КАК Номенклатура,
	|	ПеремещениеТоваровТовары.Характеристика КАК Характеристика,
	|	МАКСИМУМ(ЦеныНоменклатуры.Период) КАК Период,
	|	ЦеныНоменклатуры.ВидЦены КАК ВидЦены
	|ПОМЕСТИТЬ ТаблицаПериодовЦен
	|ИЗ
	|	ПеремещениеТоваровТовары КАК ПеремещениеТоваровТовары
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ЦеныНоменклатуры КАК ЦеныНоменклатуры
	|		ПО ПеремещениеТоваровТовары.ВидЦен = ЦеныНоменклатуры.ВидЦены
	|			И ПеремещениеТоваровТовары.Номенклатура = ЦеныНоменклатуры.Номенклатура
	|			И ПеремещениеТоваровТовары.Характеристика = ЦеныНоменклатуры.Характеристика
	|			И ПеремещениеТоваровТовары.Дата >= ЦеныНоменклатуры.Период
	|
	|СГРУППИРОВАТЬ ПО
	|	ПеремещениеТоваровТовары.Ссылка,
	|	ПеремещениеТоваровТовары.Номенклатура,
	|	ПеремещениеТоваровТовары.Характеристика,
	|	ЦеныНоменклатуры.ВидЦены
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СУММА(1) КАК Количество,
	|	СписокТоваров.Ссылка КАК Ссылка
	|ПОМЕСТИТЬ КоличествоТоваров
	|ИЗ
	|	(ВЫБРАТЬ РАЗЛИЧНЫЕ
	|		ПеремещениеТоваровТовары.Ссылка КАК Ссылка,
	|		ПеремещениеТоваровТовары.Номенклатура КАК Номенклатура,
	|		ПеремещениеТоваровТовары.Характеристика КАК Характеристика
	|	ИЗ
	|		Документ.ПеремещениеТоваров.Товары КАК ПеремещениеТоваровТовары
	|	ГДЕ
	|		ПеремещениеТоваровТовары.Ссылка В(&МассивДокументов)) КАК СписокТоваров
	|
	|СГРУППИРОВАТЬ ПО
	|	СписокТоваров.Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПеремещениеТоваров.Ссылка КАК Ссылка,
	|	ПеремещениеТоваров.Номер КАК Номер,
	|	ПеремещениеТоваров.Дата КАК Дата,
	|	ПеремещениеТоваров.Организация КАК Организация,
	|	ВЫБОР
	|		КОГДА ПеремещениеТоваров.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВнутренняяПередачаТоваров)
	|			ТОГДА ПеремещениеТоваров.ОрганизацияПолучатель
	|		ИНАЧЕ ПеремещениеТоваров.Организация
	|	КОНЕЦ КАК Грузополучатель,
	|	ПеремещениеТоваров.Организация КАК Грузоотправитель,
	|	ПеремещениеТоваров.Организация КАК Контрагент,
	|	ПеремещениеТоваров.Организация КАК ЗаказчикПеревозок,
	|	ПеремещениеТоваров.Организация.Префикс КАК Префикс,
	|	ПеремещениеТоваров.СкладОтправитель.ТекущийОтветственный КАК Кладовщик,
	|	ПеремещениеТоваров.СкладОтправитель.ТекущаяДолжностьОтветственного КАК ДолжностьКладовщика,
	|	ТаблицаОтветственныеЛица.РуководительНаименование КАК Руководитель,
	|	ТаблицаОтветственныеЛица.РуководительДолжность КАК ДолжностьРуководителя,
	|	ТаблицаОтветственныеЛица.ГлавныйБухгалтерНаименование КАК ГлавныйБухгалтер,
	|	ПеремещениеТоваров.БанковскийСчетОрганизации КАК БанковскийСчетОрганизации,
	|	ПеремещениеТоваров.БанковскийСчетОрганизации КАК БанковскийСчетКонтрагента,
	|	ПеремещениеТоваров.БанковскийСчетОрганизации КАК БанковскийСчетГрузоотправителя,
	|	ПеремещениеТоваров.БанковскийСчетОрганизации КАК БанковскийСчетГрузополучателя,
	|	ПеремещениеТоваров.БанковскийСчетОрганизации КАК БанковскийСчетЗаказчикаПеревозок,
	|	ПеремещениеТоваров.БанковскийСчетПеревозчика КАК БанковскийСчетПеревозчика,
	|	ПеремещениеТоваров.Перевозчик КАК Перевозчик,
	|	ПеремещениеТоваров.Водитель КАК Водитель,
	|	ПеремещениеТоваров.Автомобиль.ВидПеревозки КАК ВидПеревозки,
	|	ПеремещениеТоваров.Автомобиль.ЛицензионнаяКарточкаРегистрационныйНомер КАК ЛицензионнаяКарточкаРегистрационныйНомер,
	|	ПеремещениеТоваров.Автомобиль.ЛицензионнаяКарточкаСерия КАК ЛицензионнаяКарточкаСерия,
	|	ПеремещениеТоваров.Автомобиль.ЛицензионнаяКарточкаНомер КАК ЛицензионнаяКарточкаНомер,
	|	ПеремещениеТоваров.Автомобиль.ЛицензионнаяКарточкаВид КАК ЛицензионнаяКарточкаВид,
	|	ПеремещениеТоваров.Автомобиль.Марка КАК МаркаАвтомобиля,
	|	ПеремещениеТоваров.Автомобиль.Код КАК ГосНомерАвтомобиля,
	|	ПеремещениеТоваров.Автомобиль.Прицеп КАК Прицеп,
	|	ПеремещениеТоваров.Автомобиль.ГосударственныйНомерПрицепа КАК ГосНомерПрицепа,
	|	"""" КАК ДоверенностьНомер,
	|	"""" КАК ДоверенностьДата,
	|	"""" КАК ДоверенностьВыдана,
	|	"""" КАК ДоверенностьЛицо,
	|	ЕСТЬNULL(ПеремещениеТоваров.ВидЦены.ЦенаВключаетНДС, ЛОЖЬ) КАК ЦенаВключаетНДС,
	|	ЕСТЬNULL(ПеремещениеТоваров.ВидЦены.ВалютаЦены, ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка)) КАК Валюта,
	|	СкладыКонтактнаяОтправитель.Представление КАК ПунктПогрузки,
	|	СкладыКонтактнаяПолучатель.Представление КАК ПунктРазгрузки,
	|	ПеремещениеТоваров.СрокДоставки КАК СрокДоставки,
	|	КоличествоТоваров.Количество КАК КоличествоНаименований
	|ИЗ
	|	Документ.ПеремещениеТоваров КАК ПеремещениеТоваров
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Склады.КонтактнаяИнформация КАК СкладыКонтактнаяПолучатель
	|		ПО ПеремещениеТоваров.СкладПолучатель = СкладыКонтактнаяПолучатель.Ссылка
	|			И (СкладыКонтактнаяПолучатель.Вид = ЗНАЧЕНИЕ(Справочник.ВидыКонтактнойИнформации.АдресСклада))
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Склады.КонтактнаяИнформация КАК СкладыКонтактнаяОтправитель
	|		ПО ПеремещениеТоваров.СкладОтправитель = СкладыКонтактнаяОтправитель.Ссылка
	|			И (СкладыКонтактнаяОтправитель.Вид = ЗНАЧЕНИЕ(Справочник.ВидыКонтактнойИнформации.АдресСклада))
	|		ЛЕВОЕ СОЕДИНЕНИЕ КоличествоТоваров КАК КоличествоТоваров
	|		ПО ПеремещениеТоваров.Ссылка = КоличествоТоваров.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ ТаблицаОтветственныеЛица КАК ТаблицаОтветственныеЛица
	|		ПО ПеремещениеТоваров.Ссылка = ТаблицаОтветственныеЛица.Ссылка
	|ГДЕ
	|	ПеремещениеТоваров.Ссылка В(&МассивДокументов)
	|
	|УПОРЯДОЧИТЬ ПО
	|	Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПеремещениеТоваров.Ссылка КАК Ссылка,
	|	ПеремещениеТоваров.Номенклатура КАК Номенклатура,
	|	ПеремещениеТоваров.Номенклатура."+КолонкаКодов+" КАК ТоварКод,
	|	ПеремещениеТоваров.Номенклатура.НаименованиеПолное КАК ТоварНаименование,
	|	ПеремещениеТоваров.Характеристика.НаименованиеПолное КАК Характеристика,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(ПеремещениеТоваров.Упаковка.Коэффициент, 1) = 1
	|			ТОГДА НЕОПРЕДЕЛЕНО
	|		ИНАЧЕ ПеремещениеТоваров.Упаковка.Наименование
	|	КОНЕЦ КАК Упаковка,
	|	ПеремещениеТоваров.КоличествоУпаковок КАК Количество,
	|	ВЫБОР
	|		КОГДА ПеремещениеТоваров.Упаковка = ЗНАЧЕНИЕ(Справочник.УпаковкиНоменклатуры.ПустаяСсылка)
	|			ТОГДА ПеремещениеТоваров.Номенклатура.ЕдиницаИзмерения.Наименование
	|		ИНАЧЕ ПеремещениеТоваров.Упаковка.ЕдиницаИзмерения.Наименование
	|	КОНЕЦ КАК ВидУпаковки,
	|	ВЫБОР
	|		КОГДА ПеремещениеТоваров.Упаковка = ЗНАЧЕНИЕ(Справочник.УпаковкиНоменклатуры.ПустаяСсылка)
	|			ТОГДА ПеремещениеТоваров.Номенклатура.ЕдиницаИзмерения.Наименование
	|		ИНАЧЕ ПеремещениеТоваров.Упаковка.ЕдиницаИзмерения.Наименование
	|	КОНЕЦ КАК БазоваяЕдиницаНаименование,
	|	ВЫБОР
	|		КОГДА НЕ ЦеныНоменклатуры.Упаковка.Коэффициент ЕСТЬ NULL 
	|				И ЦеныНоменклатуры.Упаковка.Коэффициент <> 0
	|			ТОГДА ЕСТЬNULL(ЦеныНоменклатуры.Цена, 0) / ЦеныНоменклатуры.Упаковка.Коэффициент
	|		ИНАЧЕ ЕСТЬNULL(ЦеныНоменклатуры.Цена, 0)
	|	КОНЕЦ * ЕСТЬNULL(ПеремещениеТоваров.Упаковка.Коэффициент, 1) КАК Цена,
	|	ВЫБОР
	|		КОГДА ПеремещениеТоваров.Упаковка.Вес ЕСТЬ NULL 
	|			ТОГДА ПеремещениеТоваров.Количество * ПеремещениеТоваров.Номенклатура.Вес
	|		ИНАЧЕ ПеремещениеТоваров.КоличествоУпаковок * ПеремещениеТоваров.Упаковка.Вес
	|	КОНЕЦ КАК МассаБрутто,
	|	ПеремещениеТоваров.Количество * ПеремещениеТоваров.Номенклатура.Вес КАК МассаНетто,
	|	ПеремещениеТоваров.КоличествоУпаковок КАК КоличествоМест,
	|	ВЫБОР
	|		КОГДА НЕ ЦеныНоменклатуры.Упаковка.Коэффициент ЕСТЬ NULL 
	|				И ЦеныНоменклатуры.Упаковка.Коэффициент <> 0
	|			ТОГДА ЕСТЬNULL(ЦеныНоменклатуры.Цена, 0) / ЦеныНоменклатуры.Упаковка.Коэффициент
	|		ИНАЧЕ ЕСТЬNULL(ЦеныНоменклатуры.Цена, 0)
	|	КОНЕЦ * ЕСТЬNULL(ПеремещениеТоваров.Упаковка.Коэффициент, 1) * ПеремещениеТоваров.КоличествоУпаковок КАК Сумма,
	|	0 КАК СуммаНДС,
	|	ПеремещениеТоваров.НомерСтроки КАК НомерСтроки,
	|	ЛОЖЬ КАК Весовой,
	|	ЛОЖЬ КАК ЭтоВозвратнаяТара
	|ИЗ
	|	ПеремещениеТоваровТовары КАК ПеремещениеТоваров
	|		ЛЕВОЕ СОЕДИНЕНИЕ ТаблицаПериодовЦен КАК ТаблицаПериодовЦен
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ЦеныНоменклатуры КАК ЦеныНоменклатуры
	|			ПО ТаблицаПериодовЦен.ВидЦены = ЦеныНоменклатуры.ВидЦены
	|				И ТаблицаПериодовЦен.Номенклатура = ЦеныНоменклатуры.Номенклатура
	|				И ТаблицаПериодовЦен.Характеристика = ЦеныНоменклатуры.Характеристика
	|				И ТаблицаПериодовЦен.Период = ЦеныНоменклатуры.Период
	|		ПО ПеремещениеТоваров.Ссылка = ТаблицаПериодовЦен.Ссылка
	|			И ПеремещениеТоваров.Номенклатура = ТаблицаПериодовЦен.Номенклатура
	|			И ПеремещениеТоваров.Характеристика = ТаблицаПериодовЦен.Характеристика
	|
	|УПОРЯДОЧИТЬ ПО
	|	ПеремещениеТоваров.Ссылка,
	|	ПеремещениеТоваров.НомерСтроки
	|ИТОГИ ПО
	|	Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ПеремещениеТоваровТовары
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ТаблицаПериодовЦен
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ КоличествоТоваров";
	
	Запрос.УстановитьПараметр("МассивДокументов", МассивОбъектов);
	ТаблицаКурсовВалют = ПолучитьТаблицуКурсовВалют(МассивОбъектов);
	
	МассивРезультатов			= Запрос.ВыполнитьПакет();
	РезультатПоШапке			= МассивРезультатов[3];
	РезультатПоТабличнойЧасти	= МассивРезультатов[4];
	
	СтруктураДанныхДляПечати = Новый Структура(
		"РезультатПоШапке, РезультатПоТабличнойЧасти, ТаблицаКурсовВалют",
		РезультатПоШапке,
		РезультатПоТабличнойЧасти,
		ТаблицаКурсовВалют
	);
	
	Возврат СтруктураДанныхДляПечати;
	
КонецФункции

// Функция получает данные для формирования печатной формы отбора/размещения товаров.
//
Функция ПолучитьДанныеДляПечатнойФормыОтборРазмещениеТоваров(ПараметрыПечати, МассивДокументов) Экспорт
	
	ВидСклада = ?(ПараметрыПечати.ИмяФормы = "ЗаданиеНаРазмещение" , "Получатель", "Отправитель");
	
	Запрос = Новый Запрос;
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ПеремещениеТоваров.Ссылка КАК Ссылка,
	|	ПРЕДСТАВЛЕНИЕ(ПеремещениеТоваров.Ссылка) КАК СсылкаПредставление,
	|	ПРЕДСТАВЛЕНИЕ(ПеремещениеТоваров.Склад" + ВидСклада + ") КАК СкладПредставление,
	|	NULL КАК ПомещениеПредставление,
	|	ПеремещениеТоваров.Дата КАК Дата,
	|	ЛОЖЬ КАК СкладыВТЧ,
	|	ПеремещениеТоваров.Номер КАК Номер,
	|	NULL КАК ВидОперации,";
	Если ВидСклада = "Получатель" Тогда
		ТекстЗапроса = ТекстЗапроса + "
		|	ПеремещениеТоваров.СкладПолучатель.ИспользоватьОрдернуюСхемуПриПоступлении КАК НарушенаОрдернаяСхема,
		|	ПеремещениеТоваров.СкладПолучатель.ИспользоватьАдресноеХранениеСправочно КАК ИспользуетсяСправочноеХранение,
		|	ПеремещениеТоваров.СкладПолучатель.ИспользоватьСерииНоменклатуры КАК ИспользоватьСерииНоменклатуры ";
	Иначе
		ТекстЗапроса = ТекстЗапроса + "
		|	ПеремещениеТоваров.СкладОтправитель.ИспользоватьОрдернуюСхемуПриОтгрузке КАК НарушенаОрдернаяСхема,
		|	ПеремещениеТоваров.СкладОтправитель.ИспользоватьАдресноеХранениеСправочно КАК ИспользуетсяСправочноеХранение,
		|	ПеремещениеТоваров.СкладОтправитель.ИспользоватьСерииНоменклатуры КАК ИспользоватьСерииНоменклатуры ";
	КонецЕсли;
	ТекстЗапроса = ТекстЗапроса + "
	|ИЗ
	|	Документ.ПеремещениеТоваров КАК ПеремещениеТоваров
	|ГДЕ
	|	ПеремещениеТоваров.Ссылка В(&МассивОбъектов)
	|
	|УПОРЯДОЧИТЬ ПО
	|	Ссылка
	|;
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаТовары.Ссылка КАК Ссылка,
	|	ТаблицаТовары.Номенклатура КАК Номенклатура,
	|	ТаблицаТовары.Характеристика КАК Характеристика,
	|	NULL КАК Серия,
	|	ВЫБОР
	|		КОГДА
	|			ТаблицаТовары.Упаковка = ЗНАЧЕНИЕ(Справочник.УпаковкиНоменклатуры.ПустаяСсылка)
	|		ТОГДА
	|			ТаблицаТовары.Номенклатура.ЕдиницаИзмерения
	|		ИНАЧЕ
	|			ТаблицаТовары.Упаковка
	|	КОНЕЦ КАК Упаковка,
	|	ТаблицаТовары.КоличествоУпаковок КАК КоличествоУпаковок,
	|	ТаблицаТовары.Количество КАК Количество
	|ПОМЕСТИТЬ
	|	ТаблицаТовары
	|ИЗ
	|	Документ.ПеремещениеТоваров.Товары КАК ТаблицаТовары
	|ГДЕ
	|	ТаблицаТовары.Ссылка В(&МассивОбъектов)
	|	И (НЕ ТаблицаТовары.СтатусУказанияСерий В (2, 4, 6, 8, 10))
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ТаблицаСерии.Ссылка КАК Ссылка,
	|	ТаблицаСерии.Номенклатура КАК Номенклатура,
	|	ТаблицаСерии.Характеристика КАК Характеристика,
	|	ТаблицаСерии.Серия КАК Серия,
	|	ТаблицаСерии.Номенклатура.ЕдиницаИзмерения КАК Упаковка,
	|	ТаблицаСерии.Количество КАК КоличествоУпаковок,
	|	ТаблицаСерии.Количество КАК Количество
	|ИЗ
	|	Документ.ПеремещениеТоваров.Серии КАК ТаблицаСерии
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ПеремещениеТоваров.Товары КАК ТаблицаТовары
	|		ПО ТаблицаСерии.Ссылка = ТаблицаТовары.Ссылка
	|			И ТаблицаСерии.Номенклатура = ТаблицаТовары.Номенклатура
	|			И ТаблицаСерии.Характеристика = ТаблицаТовары.Характеристика
	|			И ТаблицаСерии.ДокументРезерваСерий = ТаблицаТовары.ДокументРезерваСерий
	|	
	|ГДЕ
	|	ТаблицаСерии.Ссылка В(&МассивОбъектов)
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаСерии.Ссылка,
	|	ТаблицаСерии.Номенклатура,
	|	ТаблицаСерии.Характеристика,
	|	ТаблицаСерии.Серия,
	|	ТаблицаСерии.ДокументРезерваСерий,
	|	ТаблицаСерии.Количество,
	|	ТаблицаСерии.НомерСтроки
	|
	|ИМЕЮЩИЕ
	|	МАКСИМУМ(ТаблицаТовары.СтатусУказанияСерий) В (2, 4, 6, 8, 10)
	|;
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаТовары.Ссылка КАК Ссылка,
	|	ТаблицаТовары.Номенклатура КАК Номенклатура,
	|	ТаблицаТовары.Серия КАК Серия,
	|	ТаблицаТовары.Номенклатура.Код КАК Код,
	|	ТаблицаТовары.Номенклатура.Артикул КАК Артикул,
	|	ТаблицаТовары.Номенклатура.НаименованиеПолное КАК ПредставлениеНоменклатуры,
	|	ПРЕДСТАВЛЕНИЕ(ТаблицаТовары.Номенклатура.ЕдиницаИзмерения) КАК ПредставлениеБазовойЕдиницыИзмерения,
	|	ТаблицаТовары.Характеристика.НаименованиеПолное КАК ПредставлениеХарактеристики,
	|	ТаблицаТовары.Упаковка.Наименование КАК ПредставлениеЕдининицыИзмеренияУпаковки,
	|	ТаблицаТовары.Серия.Наименование КАК ПредставлениеСерии,
	|	СУММА(ТаблицаТовары.КоличествоУпаковок) КАК КоличествоУпаковок,
	|	СУММА(ТаблицаТовары.Количество) КАК Количество,
	|	ЕСТЬNULL(РазмещениеОсновнаяЯчейка.Ячейка.РабочийУчасток, ЗНАЧЕНИЕ(Справочник.РабочиеУчастки.ПустаяСсылка)) КАК РабочийУчасток,
	|	ЕСТЬNULL(РазмещениеОсновнаяЯчейка.Ячейка.ПорядокОбхода, 0) КАК ПорядокОбхода,
	|	ЕСТЬNULL(РазмещениеОсновнаяЯчейка.Ячейка, ЗНАЧЕНИЕ(Справочник.СкладскиеЯчейки.ПустаяСсылка)) КАК ОсновнаяЯчейка,
	|	ЕСТЬNULL(РазмещениеОстальныеЯчейки.Ячейка.ПорядокОбхода, 0) КАК ПорядокОбходаДополнительнаяЯчейка,
	|	ПРЕДСТАВЛЕНИЕ(РазмещениеОсновнаяЯчейка.Ячейка.РабочийУчасток) КАК ПредставлениеРабочегоУчастка,
	|	РазмещениеОсновнаяЯчейка.Ячейка.Код КАК ОсновнаяЯчейкаПредставление,
	|	РазмещениеОстальныеЯчейки.Ячейка.Код КАК ЯчейкаПредставление
	|ИЗ
	|	ТаблицаТовары КАК ТаблицаТовары
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РазмещениеНоменклатурыПоСкладскимЯчейкам КАК РазмещениеОсновнаяЯчейка
	|		ПО ТаблицаТовары.Номенклатура = РазмещениеОсновнаяЯчейка.Номенклатура
	|			И (РазмещениеОсновнаяЯчейка.ОсновнаяЯчейка = ИСТИНА)
	|			И (РазмещениеОсновнаяЯчейка.Склад = ТаблицаТовары.Ссылка.Склад" 	+ ВидСклада + ")
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РазмещениеНоменклатурыПоСкладскимЯчейкам КАК РазмещениеОстальныеЯчейки
	|		ПО ТаблицаТовары.Номенклатура = РазмещениеОстальныеЯчейки.Номенклатура
	|			И (РазмещениеОстальныеЯчейки.ОсновнаяЯчейка = ЛОЖЬ)
	|			И (РазмещениеОстальныеЯчейки.Склад = ТаблицаТовары.Ссылка.Склад" 	+ ВидСклада + ")
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаТовары.Ссылка,
	|	ТаблицаТовары.Номенклатура,
	|	ТаблицаТовары.Характеристика,
	|	ТаблицаТовары.Серия,
	|	ТаблицаТовары.Упаковка,
	|	РазмещениеОсновнаяЯчейка.Ячейка,
	|	РазмещениеОстальныеЯчейки.Ячейка
	|УПОРЯДОЧИТЬ ПО
	|	Ссылка,
	|	ПорядокОбхода,
	|	ОсновнаяЯчейкаПредставление,
	|	ПредставлениеНоменклатуры,
	|	ПредставлениеХарактеристики,
	|	ПредставлениеСерии,
	|	ПредставлениеЕдининицыИзмеренияУпаковки,
	|	ПорядокОбходаДополнительнаяЯчейка,
	|	ЯчейкаПредставление
	|ИТОГИ ПО
	|	Ссылка,
	|	РабочийУчасток,
	|	ОсновнаяЯчейка,
	|	Номенклатура,
	|	Характеристика,
	|	Серия,
	|	Упаковка
	|";
	
	Запрос.Текст = ТекстЗапроса;
	
	Запрос.УстановитьПараметр("МассивОбъектов", МассивДокументов); 
	МассивРезультатов 			= Запрос.ВыполнитьПакет();
	РезультатПоШапке			= МассивРезультатов[0];
	РезультатПоТабличнойЧасти 	= МассивРезультатов[2];
	СтруктураДанныхДляПечати 	= Новый Структура("РезультатПоШапке, РезультатПоТабличнойЧасти",РезультатПоШапке, РезультатПоТабличнойЧасти);
	
	Возврат СтруктураДанныхДляПечати;
КонецФункции

// Функция получает данные для формирования печатной формы М-11
//
Функция ПолучитьДанныеДляПечатнойФормыМ11(ПараметрыПечати, МассивДокументов) Экспорт
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	Товары.Ссылка КАК Ссылка,
	|	Товары.НомерСтроки КАК НомерСтроки,
	|	Товары.Номенклатура КАК Номенклатура,
	|	Товары.Характеристика КАК Характеристика,
	|	Товары.Упаковка КАК Упаковка,
	|	Товары.КоличествоУпаковок КАК КоличествоУпаковок,
	|	КОНЕЦПЕРИОДА(Товары.Ссылка.Дата, ДЕНЬ) КАК ДатаПолученияЦены,
	|	Товары.Ссылка.ВидЦены КАК ВидЦены,
	|	Товары.Ссылка.ВидЦены.ВалютаЦены КАК ВалютаЦены
	|ПОМЕСТИТЬ Товары
	|ИЗ
	|	Документ.ПеремещениеТоваров.Товары КАК Товары
	|ГДЕ
	|	Товары.Ссылка В(&МассивДокументов)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПериодыЦенНоменклатуры.Ссылка,
	|	ПериодыЦенНоменклатуры.НомерСтроки,
	|	ЦеныНоменклатуры.Цена,
	|	ЦеныНоменклатуры.Упаковка
	|ПОМЕСТИТЬ Цены
	|ИЗ
	|	(ВЫБРАТЬ
	|		Товары.Ссылка КАК Ссылка,
	|		Товары.НомерСтроки КАК НомерСтроки,
	|		ЦеныНоменклатуры.ВидЦены КАК ВидЦены,
	|		ЦеныНоменклатуры.Номенклатура КАК Номенклатура,
	|		ЦеныНоменклатуры.Характеристика КАК Характеристика,
	|		МАКСИМУМ(ЦеныНоменклатуры.Период) КАК Период
	|	ИЗ
	|		Товары КАК Товары
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ЦеныНоменклатуры КАК ЦеныНоменклатуры
	|			ПО Товары.ВидЦены = ЦеныНоменклатуры.ВидЦены
	|				И Товары.Номенклатура = ЦеныНоменклатуры.Номенклатура
	|				И Товары.Характеристика = ЦеныНоменклатуры.Характеристика
	|				И Товары.ДатаПолученияЦены >= ЦеныНоменклатуры.Период
	|				И Товары.ВалютаЦены = ЦеныНоменклатуры.Валюта
	|	
	|	СГРУППИРОВАТЬ ПО
	|		Товары.Ссылка,
	|		Товары.НомерСтроки,
	|		ЦеныНоменклатуры.ВидЦены,
	|		ЦеныНоменклатуры.Номенклатура,
	|		ЦеныНоменклатуры.Характеристика) КАК ПериодыЦенНоменклатуры
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ЦеныНоменклатуры КАК ЦеныНоменклатуры
	|		ПО ПериодыЦенНоменклатуры.Период = ЦеныНоменклатуры.Период
	|			И ПериодыЦенНоменклатуры.ВидЦены = ЦеныНоменклатуры.ВидЦены
	|			И ПериодыЦенНоменклатуры.Номенклатура = ЦеныНоменклатуры.Номенклатура
	|			И ПериодыЦенНоменклатуры.Характеристика = ЦеныНоменклатуры.Характеристика
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПериодыКурсовВалютПоДокументам.Ссылка,
	|	КурсыВалют.Валюта,
	|	КурсыВалют.Курс,
	|	КурсыВалют.Кратность
	|ПОМЕСТИТЬ КурсыВалют
	|ИЗ
	|	(ВЫБРАТЬ
	|		Документы.Ссылка КАК Ссылка,
	|		МАКСИМУМ(КурсыВалют.Период) КАК Период,
	|		КурсыВалют.Валюта КАК Валюта
	|	ИЗ
	|		Документ.ПеремещениеТоваров КАК Документы
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.КурсыВалют КАК КурсыВалют
	|			ПО Документы.ВидЦены.ВалютаЦены = КурсыВалют.Валюта
	|				И Документы.Дата >= КурсыВалют.Период
	|	ГДЕ
	|		Документы.Ссылка В(&МассивДокументов)
	|	
	|	СГРУППИРОВАТЬ ПО
	|		Документы.Ссылка,
	|		КурсыВалют.Валюта) КАК ПериодыКурсовВалютПоДокументам
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.КурсыВалют КАК КурсыВалют
	|		ПО ПериодыКурсовВалютПоДокументам.Период = КурсыВалют.Период
	|			И ПериодыКурсовВалютПоДокументам.Валюта = КурсыВалют.Валюта
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Документы.Ссылка КАК Ссылка,
	|	Документы.Номер КАК Номер,
	|	Документы.Дата КАК ДатаДокумента,
	|	Документы.Дата КАК ДатаСоставления,
	|	Документы.Организация КАК Организация,
	|	Документы.Организация.Префикс КАК Префикс,
	|	Документы.СкладОтправитель КАК Склад,
	|	Документы.СкладПолучатель КАК Подразделение,
	|	Документы.СкладОтправитель.ТекущийОтветственный КАК КладовщикОтправитель,
	|	Документы.СкладОтправитель.ТекущаяДолжностьОтветственного КАК ДолжностьКладовщикаОтправителя,
	|	Документы.ВидЦены КАК УчетныйВидЦены,
	|	Документы.ВидЦены.ВалютаЦены КАК УчетныйВидЦеныВалютаЦены
	|ИЗ
	|	Документ.ПеремещениеТоваров КАК Документы
	|ГДЕ
	|	Документы.Ссылка В(&МассивДокументов)
	|
	|УПОРЯДОЧИТЬ ПО
	|	ДатаДокумента,
	|	Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Товары.Ссылка КАК Ссылка,
	|	Товары.Номенклатура КАК Номенклатура,
	|	Товары.Номенклатура.НаименованиеПолное КАК НоменклатураНаименование,
	|	Товары.Номенклатура.Код КАК НоменклатурныйНомерКод,
	|	Товары.Номенклатура.Артикул КАК НоменклатурныйНомерАртикул,
	|	Товары.Характеристика.НаименованиеПолное КАК Характеристика,
	|	ВЫБОР КОГДА ЕСТЬNULL(Товары.Упаковка.Коэффициент, 1) = 1
	|		ТОГДА НЕОПРЕДЕЛЕНО
	|		ИНАЧЕ Товары.Упаковка.Наименование
	|	КОНЕЦ КАК Упаковка,
	|	ВЫБОР
	|		КОГДА Товары.Упаковка <> ЗНАЧЕНИЕ(Справочник.УпаковкиНоменклатуры.ПустаяСсылка)
	|			ТОГДА ПРЕДСТАВЛЕНИЕССЫЛКИ(Товары.Упаковка.ЕдиницаИзмерения)
	|		ИНАЧЕ ПРЕДСТАВЛЕНИЕССЫЛКИ(Товары.Номенклатура.ЕдиницаИзмерения)
	|	КОНЕЦ КАК ЕдиницаИзмеренияНаименование,
	|	ВЫБОР
	|		КОГДА Товары.Упаковка <> ЗНАЧЕНИЕ(Справочник.УпаковкиНоменклатуры.ПустаяСсылка)
	|			ТОГДА Товары.Упаковка.ЕдиницаИзмерения.Код
	|		ИНАЧЕ Товары.Номенклатура.ЕдиницаИзмерения.Код
	|	КОНЕЦ КАК ЕдиницаИзмеренияКод,
	|	Товары.КоличествоУпаковок КАК Количество,
	|	(ВЫРАЗИТЬ(ЕСТЬNULL(Цены.Цена, 0) / ЕСТЬNULL(Цены.Упаковка.Коэффициент, 1) * ЕСТЬNULL(Товары.Упаковка.Коэффициент, 1) * ЕСТЬNULL(КурсыВалют.Курс, 1) / ЕСТЬNULL(КурсыВалют.Кратность, 1) КАК ЧИСЛО(15, 2))) * Товары.КоличествоУпаковок КАК Сумма,
	|	ВЫРАЗИТЬ(ЕСТЬNULL(Цены.Цена, 0) / ЕСТЬNULL(Цены.Упаковка.Коэффициент, 1) * ЕСТЬNULL(Товары.Упаковка.Коэффициент, 1) * ЕСТЬNULL(КурсыВалют.Курс, 1) / ЕСТЬNULL(КурсыВалют.Кратность, 1) КАК ЧИСЛО(15, 2)) КАК Цена,
	|	Товары.НомерСтроки КАК НомерСтроки
	|ИЗ
	|	Товары КАК Товары
	|		ЛЕВОЕ СОЕДИНЕНИЕ КурсыВалют КАК КурсыВалют
	|		ПО Товары.Ссылка = КурсыВалют.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ Цены КАК Цены
	|		ПО Товары.Ссылка = Цены.Ссылка
	|			И Товары.НомерСтроки = Цены.НомерСтроки
	|
	|УПОРЯДОЧИТЬ ПО
	|	Ссылка,
	|	НомерСтроки
	|ИТОГИ ПО
	|	Ссылка");
	
	Запрос.УстановитьПараметр("МассивДокументов", МассивДокументов);
	
	РезультатПакетаЗапросов = Запрос.ВыполнитьПакет();
	// Пакет запросов:
	// 		[0] - Временная таблица по табличной части документа
	// 		[1] - Временная таблица по ценам номенклатуры табличной части
	// 		[2] - Временная таблица по курсам валют документов
	// 		[3] - Выборка по шапкам документов
	// 		[4] - Выборка по табличным частям документов
	
	Возврат Новый Структура(
		"РезультатПоШапке, РезультатПоТабличнойЧасти",
		РезультатПакетаЗапросов[3],
		РезультатПакетаЗапросов[4]
	);
	
КонецФункции

// Функция помещает необходимые данные в структуру. Структура помещается во временное хранилище.
//
// Возвращаемое значение:
//   Адрес   - адрес структуры данных во временном хранилище
//
Функция ПолучитьДанныеДляПечатиЭтикеток(МассивДокументов) Экспорт

	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ПеремещениеТоваровТовары.Номенклатура      КАК Номенклатура,
	|	ПеремещениеТоваровТовары.Характеристика    КАК Характеристика,
	|	ПеремещениеТоваровТовары.Упаковка          КАК Упаковка,
	|	МИНИМУМ(ПеремещениеТоваровТовары.НомерСтроки) КАК Порядок,
	|	СУММА(ПеремещениеТоваровТовары.Количество)    КАК Количество
	|ИЗ
	|	Документ.ПеремещениеТоваров.Товары КАК ПеремещениеТоваровТовары
	|ГДЕ
	|	ПеремещениеТоваровТовары.Ссылка В(&МассивДокументов)
	|
	|СГРУППИРОВАТЬ ПО
	|	ПеремещениеТоваровТовары.Номенклатура,
	|	ПеремещениеТоваровТовары.Характеристика,
	|	ПеремещениеТоваровТовары.Упаковка
	|
	|УПОРЯДОЧИТЬ ПО
	|	Порядок
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ПеремещениеТоваров.Организация                      КАК Организация,
	|	ПеремещениеТоваров.СкладПолучатель                  КАК Склад,
	|	ПеремещениеТоваров.СкладПолучатель.РозничныйВидЦены КАК ВидЦены
	|ИЗ
	|	Документ.ПеремещениеТоваров КАК ПеремещениеТоваров
	|ГДЕ
	|	ПеремещениеТоваров.Ссылка В(&МассивДокументов)";
	
	Запрос.УстановитьПараметр("МассивДокументов", МассивДокументов);
	
	МассивРезультатов = Запрос.ВыполнитьПакет();
	
	ТаблицаРеквизитыДокументов = МассивРезультатов[1].Выгрузить();
	МассивОрганизаций = ОбщегоНазначенияУТ.СвернутьТаблицуЗначенийПоРеквизиту(ТаблицаРеквизитыДокументов, "Организация").ВыгрузитьКолонку(0);
	МассивСкладов     = ОбщегоНазначенияУТ.СвернутьТаблицуЗначенийПоРеквизиту(ТаблицаРеквизитыДокументов, "Склад").ВыгрузитьКолонку(0);
	МассивВидовЦен    = ОбщегоНазначенияУТ.СвернутьТаблицуЗначенийПоРеквизиту(ТаблицаРеквизитыДокументов, "ВидЦены").ВыгрузитьКолонку(0);
	
	// Подготовка структуры действий для обработки печати ценников и этикеток
	СтруктураДействий = Новый Структура;
	СтруктураДействий.Вставить("ЗаполнитьОрганизацию", ?(МассивОрганизаций.Количество() = 1, МассивОрганизаций[0], Неопределено));
	СтруктураДействий.Вставить("ЗаполнитьСклад",       ?(МассивСкладов.Количество() = 1,     МассивСкладов[0],     МассивСкладов));
	СтруктураДействий.Вставить("ЗаполнитьВидЦены",     ?(МассивВидовЦен.Количество() = 1,    МассивВидовЦен[0],    Неопределено));
	СтруктураДействий.Вставить("ПоказыватьКолонкуКоличествоВДокументе", Истина);
	СтруктураДействий.Вставить("УстановитьРежимПечатиИзДокумента");
	СтруктураДействий.Вставить("УстановитьРежим", "ПечатьЭтикеток");
	СтруктураДействий.Вставить("ЗаполнитьКоличествоЭтикетокПоДокументу");
	СтруктураДействий.Вставить("ЗаполнитьТаблицуТоваров");
	
	// Подготовка данных для заполенения табличной части обработки печати ценников и этикеток
	СтруктураРезультат = Новый Структура;
	СтруктураРезультат.Вставить("Товары", МассивРезультатов[0].Выгрузить());
	СтруктураРезультат.Вставить("СтруктураДействий", СтруктураДействий);
	
	Возврат ПоместитьВоВременноеХранилище(СтруктураРезультат);
	
КонецФункции

// Функция помещает необходимые данные в структуру. Структура помещается во временное хранилище.
//
// Возвращаемое значение:
//   Адрес   - адрес структуры данных во временном хранилище
//
Функция ПолучитьДанныеДляПечатиЦенников(МассивДокументов) Экспорт

	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ПеремещениеТоваровТовары.Номенклатура      КАК Номенклатура,
	|	ПеремещениеТоваровТовары.Характеристика    КАК Характеристика,
	|	ПеремещениеТоваровТовары.Упаковка          КАК Упаковка,
	|	МИНИМУМ(ПеремещениеТоваровТовары.НомерСтроки) КАК Порядок,
	|	СУММА(ПеремещениеТоваровТовары.Количество)    КАК Количество
	|ИЗ
	|	Документ.ПеремещениеТоваров.Товары КАК ПеремещениеТоваровТовары
	|ГДЕ
	|	ПеремещениеТоваровТовары.Ссылка В(&МассивДокументов)
	|
	|СГРУППИРОВАТЬ ПО
	|	ПеремещениеТоваровТовары.Номенклатура,
	|	ПеремещениеТоваровТовары.Характеристика,
	|	ПеремещениеТоваровТовары.Упаковка
	|
	|УПОРЯДОЧИТЬ ПО
	|	Порядок
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ПеремещениеТоваров.Организация                      КАК Организация,
	|	ПеремещениеТоваров.СкладПолучатель                  КАК Склад,
	|	ПеремещениеТоваров.СкладПолучатель.РозничныйВидЦены КАК ВидЦены
	|ИЗ
	|	Документ.ПеремещениеТоваров КАК ПеремещениеТоваров
	|ГДЕ
	|	ПеремещениеТоваров.Ссылка В(&МассивДокументов)";
	
	Запрос.УстановитьПараметр("МассивДокументов", МассивДокументов);
	
	МассивРезультатов = Запрос.ВыполнитьПакет();
	
	ТаблицаРеквизитыДокументов = МассивРезультатов[1].Выгрузить();
	МассивОрганизаций = ОбщегоНазначенияУТ.СвернутьТаблицуЗначенийПоРеквизиту(ТаблицаРеквизитыДокументов, "Организация").ВыгрузитьКолонку(0);
	МассивСкладов     = ОбщегоНазначенияУТ.СвернутьТаблицуЗначенийПоРеквизиту(ТаблицаРеквизитыДокументов, "Склад").ВыгрузитьКолонку(0);
	МассивВидовЦен    = ОбщегоНазначенияУТ.СвернутьТаблицуЗначенийПоРеквизиту(ТаблицаРеквизитыДокументов, "ВидЦены").ВыгрузитьКолонку(0);
	
	// Подготовка структуры действий для обработки печати ценников и этикеток
	СтруктураДействий = Новый Структура;
	СтруктураДействий.Вставить("ЗаполнитьОрганизацию", ?(МассивОрганизаций.Количество() = 1, МассивОрганизаций[0], Неопределено));
	СтруктураДействий.Вставить("ЗаполнитьСклад",       ?(МассивСкладов.Количество() = 1,     МассивСкладов[0],     МассивСкладов));
	СтруктураДействий.Вставить("ЗаполнитьВидЦены",     ?(МассивВидовЦен.Количество() = 1,    МассивВидовЦен[0],    Неопределено));
	СтруктураДействий.Вставить("ПоказыватьКолонкуКоличествоВДокументе", Истина);
	СтруктураДействий.Вставить("УстановитьРежимПечатиИзДокумента");
	СтруктураДействий.Вставить("УстановитьРежим", "ПечатьЦенников");
	СтруктураДействий.Вставить("ЗаполнитьКоличествоЦенниковПоДокументу");
	СтруктураДействий.Вставить("ЗаполнитьТаблицуТоваров");
	
	// Подготовка данных для заполенения табличной части обработки печати ценников и этикеток
	СтруктураРезультат = Новый Структура;
	СтруктураРезультат.Вставить("Товары", МассивРезультатов[0].Выгрузить());
	СтруктураРезультат.Вставить("СтруктураДействий", СтруктураДействий);
	
	Возврат ПоместитьВоВременноеХранилище(СтруктураРезультат);
	
КонецФункции

// Функция формирует табличный документ с печатной формой накладной,
// разработанной методистами
//
// Возвращаемое значение:
//  Табличный документ - печатная форма накладной
//
Функция СформироватьПечатнуюФормуНакладнойНаПеремещениеТоваров(МассивОбъектов, ОбъектыПечати, КомплектыПечати)
	
	УстановитьПривилегированныйРежим(Истина);
	
	Колонка = ФормированиеПечатныхФорм.ИмяДополнительнойКолонки();
	ВыводитьКоды = ЗначениеЗаполнено(Колонка);
	
	ИспользоватьУпаковкиНоменклатуры = ПолучитьФункциональнуюОпцию("ИспользоватьУпаковкиНоменклатуры");

	ТабличныйДокумент = Новый ТабличныйДокумент;
	ТабличныйДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_ПеремещениеТоваров_Накладная";
	Макет = УправлениеПечатью.ПолучитьМакет("Документ.ПеремещениеТоваров.ПФ_MXL_НакладнаяНаПеремещение");
	
	ОбластьЗаголовка  = Макет.ПолучитьОбласть("Заголовок");
	
	Если ВыводитьКоды Тогда
		ОбластьКодовШапка  = Макет.ПолучитьОбласть("ШапкаТаблицы|КолонкаКодов");
		ОбластьКодовШапка.Параметры.ИмяКолонкиКодов = Колонка;
		
		ОбластьКодовСтрока = Макет.ПолучитьОбласть("Строка|КолонкаКодов");
		ОбластьКодовПодвал = Макет.ПолучитьОбласть("Подвал|КолонкаКодов");
	Иначе
		ОбластьТовары = Макет.Область("Товар");
		ОбластьТовары.ШиринаКолонки = ОбластьТовары.ШиринаКолонки + Макет.Область("КолонкаКодов").ШиринаКолонки;
	КонецЕсли;
	
	Если ИспользоватьУпаковкиНоменклатуры Тогда
		ОбластьУпаковокШапка  =  Макет.ПолучитьОбласть("ШапкаТаблицы|КолонкаУпаковок");
		ОбластьУпаковокСтрока =  Макет.ПолучитьОбласть("Строка|КолонкаУпаковок");
		ОбластьУпаковокПодвал =  Макет.ПолучитьОбласть("Подвал|КолонкаУпаковок");
	Иначе
		ОбластьТовары = Макет.Область("Товар");
		ОбластьТовары.ШиринаКолонки = ОбластьТовары.ШиринаКолонки 
									  + Макет.Область("КолонкаУпаковокКоличество").ШиринаКолонки
									  + Макет.Область("КолонкаУпаковокПредставление").ШиринаКолонки;
	КонецЕсли;
	
	ОбластьНомераШапка = Макет.ПолучитьОбласть("ШапкаТаблицы|НомерСтроки");
	ОбластьДанныхШапка = Макет.ПолучитьОбласть("ШапкаТаблицы|Товар");
	ОбластьКонецСтрокиШапка = Макет.ПолучитьОбласть("ШапкаТаблицы|КонецСтроки");
	
	ОбластьНомераСтрока = Макет.ПолучитьОбласть("Строка|НомерСтроки");
	ОбластьДанныхСтрока = Макет.ПолучитьОбласть("Строка|Товар");
	ОбластьКонецСтрокиСтрока = Макет.ПолучитьОбласть("Строка|КонецСтроки");
	
	ОбластьНомераПодвал = Макет.ПолучитьОбласть("Подвал|НомерСтроки");
	ОбластьДанныхПодвал = Макет.ПолучитьОбласть("Подвал|Товар");
	ОбластьКонецСтрокиПодвал = Макет.ПолучитьОбласть("Подвал|КонецСтроки");
	
	ОбластьПодписей = Макет.ПолучитьОбласть("Подписи");
	
	ЗапросПоШапке = Новый Запрос;
	ЗапросПоШапке.Текст = 
	"ВЫБРАТЬ
	|	ПеремещениеТоваров.Ссылка                              КАК Ссылка,
	|	ПеремещениеТоваров.Номер                               КАК Номер,
	|	ПеремещениеТоваров.Дата                                КАК Дата,
	|	ПеремещениеТоваров.Организация.Префикс                 КАК Префикс,
	|	ПеремещениеТоваров.СкладОтправитель.Представление      КАК ОтправительПредставление,
	|	ПеремещениеТоваров.СкладПолучатель.Представление       КАК ПолучательПредставление,
	|	ПеремещениеТоваров.Организация.НаименованиеСокращенное КАК ОрганизацияПредставление,
	|	ВЫБОР КОГДА ПеремещениеТоваров.СкладОтправитель.ИспользоватьСерииНоменклатуры
	|	 ИЛИ ПеремещениеТоваров.СкладПолучатель.ИспользоватьСерииНоменклатуры ТОГДА
	|		ИСТИНА
	|	ИНАЧЕ
	|		ЛОЖЬ
	|	КОНЕЦ КАК ИспользоватьСерииНоменклатуры
	|ИЗ
	|	Документ.ПеремещениеТоваров КАК ПеремещениеТоваров
	|ГДЕ
	|	ПеремещениеТоваров.Ссылка В(&МассивДокументов)
	|
	|УПОРЯДОЧИТЬ ПО
	|	Ссылка
	|ИТОГИ ПО
	|	ИспользоватьСерииНоменклатуры
	|";
	
	ЗапросПоШапке.УстановитьПараметр("МассивДокументов", МассивОбъектов);
	
	ДеревоОбъектов = ЗапросПоШапке.Выполнить().Выгрузить(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	Для Каждого ИспользованиеСерий Из ДеревоОбъектов.Строки Цикл
						
		Если ИспользованиеСерий.ИспользоватьСерииНоменклатуры Тогда
			
			ТекстЗапросаПоТоварам = 
			"ВЫБРАТЬ
			|	ТаблицаТовары.Ссылка КАК Ссылка,
			|	ТаблицаТовары.Номенклатура КАК Товар,
			|	ТаблицаТовары.Номенклатура.НаименованиеПолное КАК ТоварНаименование,
			|	ТаблицаТовары.Номенклатура.Код КАК Код,
			|	ТаблицаТовары.Номенклатура.Артикул КАК Артикул,
			|	ТаблицаТовары.Характеристика.НаименованиеПолное КАК Характеристика,
			|	"""" КАК Серия,
			|	ВЫБОР КОГДА ТаблицаТовары.Упаковка = ЗНАЧЕНИЕ(Справочник.УпаковкиНоменклатуры.ПустаяСсылка) ТОГДА
			|		ПРЕДСТАВЛЕНИЕССЫЛКИ(ТаблицаТовары.Номенклатура.ЕдиницаИзмерения)
			|	ИНАЧЕ
			|		ПРЕДСТАВЛЕНИЕССЫЛКИ(ТаблицаТовары.Упаковка)
			|	КОНЕЦ КАК ПредставлениеЕдининицыИзмеренияУпаковки,
			|	ПРЕДСТАВЛЕНИЕССЫЛКИ(ТаблицаТовары.Номенклатура.ЕдиницаИзмерения) КАК ПредставлениеБазовойЕдиницыИзмерения,
			|	ТаблицаТовары.КоличествоУпаковок КАК КоличествоУпаковок,
			|	ТаблицаТовары.Количество         КАК Количество
			|ИЗ
			|	Документ.ПеремещениеТоваров.Товары КАК ТаблицаТовары
			|ГДЕ
			|	ТаблицаТовары.Ссылка В(&МассивОбъектов)
			|	И (НЕ ТаблицаТовары.СтатусУказанияСерий В (2, 4, 6, 8, 10))
			|
			|ОБЪЕДИНИТЬ ВСЕ
			|
			|ВЫБРАТЬ
			|	ТаблицаСерии.Ссылка КАК Ссылка,
			|	ТаблицаСерии.Номенклатура КАК Товар,
			|	ТаблицаСерии.Номенклатура.НаименованиеПолное КАК ТоварНаименование,
			|	ТаблицаСерии.Номенклатура.Код КАК Код,
			|	ТаблицаСерии.Номенклатура.Артикул КАК Артикул,
			|	ТаблицаСерии.Характеристика.НаименованиеПолное КАК Характеристика,
			|	ТаблицаСерии.Серия.Наименование КАК Серия,
			|	ТаблицаСерии.Номенклатура.ЕдиницаИзмерения КАК ПредставлениеЕдининицыИзмеренияУпаковки,
			|	ПРЕДСТАВЛЕНИЕССЫЛКИ(ТаблицаСерии.Номенклатура.ЕдиницаИзмерения) КАК ПредставлениеБазовойЕдиницыИзмерения,
			|	ТаблицаСерии.Количество КАК КоличествоУпаковок,
			|	ТаблицаСерии.Количество КАК Количество
			|ИЗ
			|	Документ.ПеремещениеТоваров.Серии КАК ТаблицаСерии
			|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ПеремещениеТоваров.Товары КАК ТаблицаТовары
			|		ПО ТаблицаСерии.Ссылка = ТаблицаТовары.Ссылка
			|			И ТаблицаСерии.Номенклатура = ТаблицаТовары.Номенклатура
			|			И ТаблицаСерии.Характеристика = ТаблицаТовары.Характеристика
			|			И ТаблицаСерии.ДокументРезерваСерий = ТаблицаТовары.ДокументРезерваСерий
			|	
			|ГДЕ
			|	ТаблицаСерии.Ссылка В(&МассивОбъектов)
			|
			|СГРУППИРОВАТЬ ПО
			|	ТаблицаСерии.Ссылка,
			|	ТаблицаСерии.Номенклатура,
			|	ТаблицаСерии.Характеристика,
			|	ТаблицаСерии.Серия,
			|	ТаблицаСерии.Количество,
			|	ТаблицаСерии.НомерСтроки
			|
			|ИМЕЮЩИЕ
			|	МАКСИМУМ(ТаблицаТовары.СтатусУказанияСерий) В (2, 4, 6, 8, 10)
			|
			|УПОРЯДОЧИТЬ ПО
			|	Ссылка,
			|	ТоварНаименование,
			|	Характеристика,
			|	Серия
			|
			|ИТОГИ ПО
			|	Ссылка
			|";
			
		Иначе
			
			ТекстЗапросаПоТоварам = 
			"ВЫБРАТЬ
			|	ТаблицаТовары.Ссылка КАК Ссылка,
			|	ТаблицаТовары.Номенклатура КАК Товар,
			|	ТаблицаТовары.Номенклатура.НаименованиеПолное КАК ТоварНаименование,
			|	ТаблицаТовары.Номенклатура.Код КАК Код,
			|	ТаблицаТовары.Номенклатура.Артикул КАК Артикул,
			|	ТаблицаТовары.Характеристика.НаименованиеПолное КАК Характеристика,
			|	"""" КАК Серия,
			|	ВЫБОР КОГДА ТаблицаТовары.Упаковка = ЗНАЧЕНИЕ(Справочник.УпаковкиНоменклатуры.ПустаяСсылка) ТОГДА
			|		ПРЕДСТАВЛЕНИЕССЫЛКИ(ТаблицаТовары.Номенклатура.ЕдиницаИзмерения)
			|	ИНАЧЕ
			|		ПРЕДСТАВЛЕНИЕССЫЛКИ(ТаблицаТовары.Упаковка)
			|	КОНЕЦ КАК ПредставлениеЕдининицыИзмеренияУпаковки,
			|	ПРЕДСТАВЛЕНИЕССЫЛКИ(ТаблицаТовары.Номенклатура.ЕдиницаИзмерения) КАК ПредставлениеБазовойЕдиницыИзмерения,
			|	ТаблицаТовары.КоличествоУпаковок КАК КоличествоУпаковок,
			|	ТаблицаТовары.Количество         КАК Количество
			|ИЗ
			|	Документ.ПеремещениеТоваров.Товары КАК ТаблицаТовары
			|ГДЕ
			|	ТаблицаТовары.Ссылка В(&МассивОбъектов)
			|
			|УПОРЯДОЧИТЬ ПО
			|	Ссылка, НомерСтроки
			|ИТОГИ ПО
			|	Ссылка
			|";
			
		КонецЕсли;
		
		ЗапросПоТоварам = Новый Запрос;
		ЗапросПоТоварам.Текст = ТекстЗапросаПоТоварам;
		ЗапросПоТоварам.УстановитьПараметр("МассивОбъектов", ИспользованиеСерий.Строки.ВыгрузитьКолонку("Ссылка"));
		ВыборкаПоТабличнымЧастям = ЗапросПоТоварам.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		
		ПервыйДокумент = Истина;

		Для Каждого Шапка Из ИспользованиеСерий.Строки Цикл
			
			// Для печати комплектов
			Если КомплектыПечати <> Неопределено И КомплектыПечати.Колонки.Найти("Ссылка") <> Неопределено Тогда
				КомплектПечатиПоСсылке = КомплектыПечати.Найти(Шапка.Ссылка,"Ссылка");
				Если КомплектПечатиПоСсылке = Неопределено Тогда
					КомплектПечатиПоСсылке = КомплектыПечати[0];
				КонецЕсли;
				Если КомплектПечатиПоСсылке.Экземпляров = 0 Тогда
					Продолжить
				КонецЕсли;
			КонецЕсли;
			
			НомерСтрокиНачало = ТабличныйДокумент.ВысотаТаблицы + 1;
			Если Не ПервыйДокумент Тогда
				ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
			КонецЕсли;
			ПервыйДокумент = Ложь;
			
			// Выводим шапку накладной
			ОбластьЗаголовка.Параметры.ТекстЗаголовка = ОбщегоНазначенияУТКлиентСервер.СформироватьЗаголовокДокумента(Шапка, "Накладная на перемещение");
			ОбластьЗаголовка.Параметры.Заполнить(Шапка);
			ШтрихкодированиеПечатныхФорм.ВывестиШтрихкодВТабличныйДокумент(ТабличныйДокумент, Макет, ОбластьЗаголовка, Шапка.Ссылка);
			ТабличныйДокумент.Вывести(ОбластьЗаголовка);
			
			ТабличныйДокумент.Вывести(ОбластьНомераШапка);
			
			Если ВыводитьКоды Тогда
				ТабличныйДокумент.Присоединить(ОбластьКодовШапка);
			КонецЕсли;
			
			ТабличныйДокумент.Присоединить(ОбластьДанныхШапка);
			
			Если ИспользоватьУпаковкиНоменклатуры Тогда
				ТабличныйДокумент.Присоединить(ОбластьУпаковокШапка);
			КонецЕсли;
			
			ТабличныйДокумент.Присоединить(ОбластьКонецСтрокиШапка);
			
			// Выборка товаров
			Если НЕ ВыборкаПоТабличнымЧастям.НайтиСледующий(Новый Структура("Ссылка",Шапка.Ссылка)) Тогда
				Продолжить;
			КонецЕсли;
			
			ВыборкаСтрокТовары = ВыборкаПоТабличнымЧастям.Выбрать();
			
			НомерСтроки = 1;
			
			Пока ВыборкаСтрокТовары.Следующий() Цикл

				ОбластьНомераСтрока.Параметры.НомерСтроки = НомерСтроки;
				ТабличныйДокумент.Вывести(ОбластьНомераСтрока);
				
				Если ВыводитьКоды Тогда
					ОбластьКодовСтрока.Параметры.Артикул = ВыборкаСтрокТовары[Колонка];
					ТабличныйДокумент.Присоединить(ОбластьКодовСтрока);
				КонецЕсли;
				
				ОбластьДанныхСтрока.Параметры.Заполнить(ВыборкаСтрокТовары);
				ОбластьДанныхСтрока.Параметры.Товар = НоменклатураКлиентСервер.ПредставлениеНоменклатурыДляПечати(
					СокрЛП(ВыборкаСтрокТовары.ТоварНаименование),
					СокрЛП(ВыборкаСтрокТовары.Характеристика),
					, // Упаковка
					СокрЛП(ВыборкаСтрокТовары.Серия)
				);
				
				ТабличныйДокумент.Присоединить(ОбластьДанныхСтрока);
				
				Если ИспользоватьУпаковкиНоменклатуры Тогда
					ОбластьУпаковокСтрока.Параметры.Заполнить(ВыборкаСтрокТовары);
					ТабличныйДокумент.Присоединить(ОбластьУпаковокСтрока);
				КонецЕсли;
				
				ОбластьКонецСтрокиСтрока.Параметры.Заполнить(ВыборкаСтрокТовары);
				ТабличныйДокумент.Присоединить(ОбластьКонецСтрокиСтрока);
				
				НомерСтроки = НомерСтроки + 1;
				
			КонецЦикла;
			
			ТабличныйДокумент.Вывести(ОбластьНомераПодвал);
			
			Если ВыводитьКоды Тогда
				ТабличныйДокумент.Присоединить(ОбластьКодовПодвал);
			КонецЕсли;
			
			ТабличныйДокумент.Присоединить(ОбластьДанныхПодвал);
			
			Если ИспользоватьУпаковкиНоменклатуры Тогда
				ТабличныйДокумент.Присоединить(ОбластьУпаковокПодвал);
			КонецЕсли;
			
			ТабличныйДокумент.Присоединить(ОбластьКонецСтрокиПодвал);
			
			// Вывести подписи.
			ТабличныйДокумент.Вывести(ОбластьПодписей);
			
			// Выведем нужное количество экземпляров (при печати комплектов)
			Если КомплектыПечати <> Неопределено И КомплектыПечати.Колонки.Найти("Ссылка") <> Неопределено И КомплектПечатиПоСсылке.Экземпляров > 1 Тогда
				ОбластьКопирования = ТабличныйДокумент.ПолучитьОбласть(НомерСтрокиНачало,,ТабличныйДокумент.ВысотаТаблицы);
				Для Итератор = 2 По КомплектПечатиПоСсылке.Экземпляров Цикл
					ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
					ТабличныйДокумент.Вывести(ОбластьКопирования);
				КонецЦикла;
			КонецЕсли;
			
			УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабличныйДокумент, НомерСтрокиНачало, ОбъектыПечати, Шапка.Ссылка);
			
		КонецЦикла;
		
	КонецЦикла;
	
	ТабличныйДокумент.АвтоМасштаб = Истина;
	
	Возврат ТабличныйДокумент;

КонецФункции

// Формирует табличный документ по унифицированной форме ТОРГ-13
// 
// Возвращаемое значение
//  Табличный документ - унифицированная форма ТОРГ-13
//
Функция СформироватьПечатнуюФормуТОРГ13(МассивОбъектов, ОбъектыПечати, КомплектыПечати)
	
	УстановитьПривилегированныйРежим(Истина);
	
	ТоварКод = ФормированиеПечатныхФорм.ИмяДополнительнойКолонки();
	Если Не ЗначениеЗаполнено(ТоварКод) Тогда
		ТоварКод = "Код";
	КонецЕсли;

	ВалютаРеглУчета = Константы.ВалютаРегламентированногоУчета.Получить();

	Макет = УправлениеПечатью.ПолучитьМакет("Документ.ПеремещениеТоваров.ПФ_MXL_ТОРГ13");
	
	ТабличныйДокумент = Новый ТабличныйДокумент;
	
	ТабДокумент = Новый ТабличныйДокумент;
	// Зададим параметры макета по-умолчанию
	ТабДокумент.ОриентацияСтраницы = ОриентацияСтраницы.Ландшафт;
	ТабДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_ПеремещениеТоваров_ТОРГ13_";

	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	Перемещение.Ссылка                                          КАК Ссылка,
	|	Перемещение.Номер                                           КАК Номер,
	|	Перемещение.Дата                                            КАК ДатаДокумента,
	|	Перемещение.Организация                                     КАК Организация,
	|	Перемещение.Организация.Префикс                             КАК Префикс,
	|	ПРЕДСТАВЛЕНИЕССЫЛКИ(Перемещение.СкладОтправитель)           КАК ОтправительПодразделение,
	|	ПРЕДСТАВЛЕНИЕССЫЛКИ(Перемещение.СкладПолучатель)            КАК ПолучательПодразделение,
	|	Перемещение.СкладОтправитель.ТекущийОтветственный           КАК КладовщикОтправитель,
	|	Перемещение.СкладОтправитель.ТекущаяДолжностьОтветственного КАК ДолжностьКладовщикаОтправителя,
	|	Перемещение.СкладПолучатель.ТекущийОтветственный            КАК КладовщикПолучатель,
	|	Перемещение.СкладПолучатель.ТекущаяДолжностьОтветственного  КАК ДолжностьКладовщикаПолучателя,
	|	Перемещение.ВидЦены                                         КАК УчетныйВидЦены,
	|	Перемещение.ВидЦены.ВалютаЦены                              КАК УчетныйВидЦеныВалютаЦены
	|ИЗ
	|	Документ.ПеремещениеТоваров КАК Перемещение
	|ГДЕ
	|	Перемещение.Ссылка В(&МассивПеремещений)
	|
	|УПОРЯДОЧИТЬ ПО
	|	ДатаДокумента, Ссылка
	|");
	Запрос.УстановитьПараметр("МассивПеремещений", МассивОбъектов);
	Шапка = Запрос.Выполнить().Выбрать();

	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	ПеремещениеТоваров.Номенклатура                    КАК Товар,
	|	ПеремещениеТоваров.Номенклатура.НаименованиеПолное КАК ТоварНаименование,
	|	ВЫБОР КОГДА &ТоварКод = ""Код"" ТОГДА
	|		ПеремещениеТоваров.Номенклатура.Код
	|	ИНАЧЕ
	|		ПеремещениеТоваров.Номенклатура.Артикул
	|	КОНЕЦ                                                  КАК ТоварКод,
	|
	|	ПеремещениеТоваров.Характеристика.НаименованиеПолное   КАК Характеристика,
	|	ВЫБОР КОГДА ЕСТЬNULL(ПеремещениеТоваров.Упаковка.Коэффициент, 1) = 1
	|		ТОГДА НЕОПРЕДЕЛЕНО 
	|		ИНАЧЕ ПеремещениеТоваров.Упаковка.Наименование
	|	КОНЕЦ                                                  КАК Упаковка,
	|
	|	ВЫБОР
	|		КОГДА ПеремещениеТоваров.Упаковка <> ЗНАЧЕНИЕ(Справочник.УпаковкиНоменклатуры.ПустаяСсылка) ТОГДА
	|			ПРЕДСТАВЛЕНИЕССЫЛКИ(ПеремещениеТоваров.Упаковка.ЕдиницаИзмерения)
	|		ИНАЧЕ
	|			ПРЕДСТАВЛЕНИЕССЫЛКИ(ПеремещениеТоваров.Номенклатура.ЕдиницаИзмерения)
	|	КОНЕЦ КАК ЕдиницаИзмеренияНаименование,
	|
	|	ВЫБОР
	|		КОГДА ПеремещениеТоваров.Упаковка <> ЗНАЧЕНИЕ(Справочник.УпаковкиНоменклатуры.ПустаяСсылка) ТОГДА
	|			ПеремещениеТоваров.Упаковка.ЕдиницаИзмерения.Код
	|		ИНАЧЕ
	|			ПеремещениеТоваров.Номенклатура.ЕдиницаИзмерения.Код
	|	КОНЕЦ КАК ЕдиницаИзмеренияКодПоОКЕИ,
	|
	|	ПеремещениеТоваров.КоличествоУпаковок КАК Количество,
	|
	|	ВЫРАЗИТЬ(ЕСТЬNULL(ЦеныНоменклатурыСрезПоследних.Цена, 0)
	|			/ ЕСТЬNULL(ЦеныНоменклатурыСрезПоследних.Упаковка.Коэффициент, 1)
	|			* ЕСТЬNULL(ПеремещениеТоваров.Упаковка.Коэффициент, 1)
	|		КАК ЧИСЛО(15,2)) * ПеремещениеТоваров.КоличествоУпаковок КАК Сумма,
	|
	|	ВЫРАЗИТЬ(ЕСТЬNULL(ЦеныНоменклатурыСрезПоследних.Цена, 0)
	|			/ ЕСТЬNULL(ЦеныНоменклатурыСрезПоследних.Упаковка.Коэффициент, 1)
	|			* ЕСТЬNULL(ПеремещениеТоваров.Упаковка.Коэффициент, 1)
	|		КАК ЧИСЛО(15,2)) КАК Цена,
	|
	|	ВЫБОР
	|		КОГДА ПеремещениеТоваров.Упаковка = ЗНАЧЕНИЕ(Справочник.УпаковкиНоменклатуры.ПустаяСсылка) ТОГДА
	|			ПеремещениеТоваров.Номенклатура.Вес * ПеремещениеТоваров.Количество
	|		ИНАЧЕ
	|			ПеремещениеТоваров.Упаковка.Вес * ПеремещениеТоваров.КоличествоУпаковок
	|	КОНЕЦ КАК МассаБрутто,
	|
	|	ПеремещениеТоваров.Номенклатура.Вес * ПеремещениеТоваров.Количество КАК МассаНетто
	|
	|ИЗ
	|	Документ.ПеремещениеТоваров.Товары КАК ПеремещениеТоваров
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЦеныНоменклатуры.СрезПоследних(
	|			КОНЕЦПЕРИОДА(&ДатаДокумента, ДЕНЬ),
	|			(Номенклатура, Характеристика, ВидЦены)
	|				В 
	|				(ВЫБРАТЬ
	|					Т.Номенклатура,
	|					Т.Характеристика,
	|					&УчетныйВидЦены
	|				ИЗ
	|					Документ.ПеремещениеТоваров.Товары КАК Т
	|				ГДЕ
	|					Т.Ссылка = &ПеремещениеТоваров)
	|
	|		) КАК ЦеныНоменклатурыСрезПоследних
	|		ПО ПеремещениеТоваров.Номенклатура = ЦеныНоменклатурыСрезПоследних.Номенклатура
	|			И ПеремещениеТоваров.Характеристика = ЦеныНоменклатурыСрезПоследних.Характеристика
	|ГДЕ
	|	ПеремещениеТоваров.Ссылка = &ПеремещениеТоваров
	|
	|УПОРЯДОЧИТЬ ПО
	|	ПеремещениеТоваров.НомерСтроки
	|");
	Запрос.УстановитьПараметр("ТоварКод", ТоварКод);

	МассивВыводимыхОбластей = Новый Массив;
	Пока Шапка.Следующий() Цикл
		
		// Для печати комплектов
		Если КомплектыПечати <> Неопределено И КомплектыПечати.Колонки.Найти("Ссылка") <> Неопределено Тогда
			КомплектПечатиПоСсылке = КомплектыПечати.Найти(Шапка.Ссылка,"Ссылка");
			Если КомплектПечатиПоСсылке = Неопределено Тогда
				КомплектПечатиПоСсылке = КомплектыПечати[0];
			КонецЕсли;
			Если КомплектПечатиПоСсылке.Экземпляров = 0 Тогда
				Продолжить
			КонецЕсли;
		КонецЕсли;

		НомерСтрокиНачало = ТабличныйДокумент.ВысотаТаблицы + 1;

		Запрос.УстановитьПараметр("ПеремещениеТоваров", Шапка.Ссылка);
		Запрос.УстановитьПараметр("ДатаДокумента", Шапка.ДатаДокумента);
		Запрос.УстановитьПараметр("УчетныйВидЦены", Шапка.УчетныйВидЦены);
		ВыборкаСтрокТовары = Запрос.Выполнить().Выбрать();

		// Выводим общие реквизиты шапки.
		СведенияОбОрганизации = ФормированиеПечатныхФорм.СведенияОЮрФизЛице(Шапка.Организация, Шапка.ДатаДокумента);

		// Вывод шапки таблицы.
		ОбластьМакетаШапка    = Макет.ПолучитьОбласть("Шапка");
		ОбластьМакетаШапка.Параметры.Заполнить(Шапка);
		ОбластьМакетаШапка.Параметры.ПредставлениеОрганизации = ФормированиеПечатныхФорм.ОписаниеОрганизации(СведенияОбОрганизации);
		ОбластьМакетаШапка.Параметры.НомерДокумента           = ПрефиксацияОбъектовКлиентСервер.ПолучитьНомерНаПечать(Шапка.Номер, Ложь, Истина);
		ОбластьМакетаШапка.Параметры.ДатаДокумента            = Шапка.ДатаДокумента;
		ШтрихкодированиеПечатныхФорм.ВывестиШтрихкодВТабличныйДокумент(ТабличныйДокумент, Макет, ОбластьМакетаШапка, Шапка.Ссылка);
		ТабличныйДокумент.Вывести(ОбластьМакетаШапка);

		НомерСтраницы = 1;

		// Вывод заголовка таблицы.
		ОбластьЗаголовокТаблицы = Макет.ПолучитьОбласть("ЗаголовокТаблицы");
		ОбластьЗаголовокТаблицы.Параметры.НомерСтраницы = "Страница " + НомерСтраницы; 
		ТабличныйДокумент.Вывести(ОбластьЗаголовокТаблицы);

		// Инициализация итогов по странице
		ИтогКоличествоМестПоСтранице = 0;
		ИтогМассаБруттоПоСтранице    = 0;
		ИтогМассыНеттоПоСтранице     = 0;
		ИтогСуммыПоСтранице          = 0;

		// Инициализация итогов по документу
		ИтогоКоличество  = 0;
		ИтогоМассаБрутто = 0;
		ИтогоМассаНетто  = 0;
		ИтогоСумма       = 0;

		// Области макета.
		ОбластьИтоговПоСтранице = Макет.ПолучитьОбласть("ИтогиПоСтранице");
		ОбластьМакетаСтрока     = Макет.ПолучитьОбласть("Строка");
		ОбластьМакетаВсего      = Макет.ПолучитьОбласть("Всего");
		ОбластьМакетаПодвал     = Макет.ПолучитьОбласть("Подвал");

		Ном = 0;
		КоличествоСтрок = ВыборкаСтрокТовары.Количество();
		Пока ВыборкаСтрокТовары.Следующий() Цикл
			
			Ном = Ном + 1;
			
			ОбластьМакетаСтрока.Параметры.Заполнить(ВыборкаСтрокТовары);
			ОбластьМакетаСтрока.Параметры.КоличествоМест    = Формат(ВыборкаСтрокТовары.Количество, "ЧЦ=15; ЧДЦ=3");
			ОбластьМакетаСтрока.Параметры.ТоварНаименование = НоменклатураКлиентСервер.ПредставлениеНоменклатурыДляПечати(
				СокрЛП(ВыборкаСтрокТовары.ТоварНаименование),
				СокрЛП(ВыборкаСтрокТовары.Характеристика),
				СокрЛП(ВыборкаСтрокТовары.Упаковка)
			);
			
			СуммаСтроки = ВыборкаСтрокТовары.Количество * ВыборкаСтрокТовары.Цена;
			ОбластьМакетаСтрока.Параметры.Сумма = СуммаСтроки;
			
			Если Ном > 1 Тогда
			
				// Умещаются ли области на страницу при печати.
				МассивВыводимыхОбластей.Очистить();
				МассивВыводимыхОбластей.Добавить(ОбластьМакетаСтрока);
				МассивВыводимыхОбластей.Добавить(ОбластьИтоговПоСтранице);
				Если Ном = КоличествоСтрок Тогда
					МассивВыводимыхОбластей.Добавить(ОбластьМакетаВсего);
					МассивВыводимыхОбластей.Добавить(ОбластьМакетаПодвал);
				КонецЕсли;
				
				Если Не ТабличныйДокумент.ПроверитьВывод(МассивВыводимыхОбластей) Тогда
					
					// Вывод итогов по странице.
					ОбластьИтоговПоСтранице.Параметры.ИтогКоличествоМестПоСтранице = ИтогКоличествоМестПоСтранице;
					ОбластьИтоговПоСтранице.Параметры.ИтогМассаБруттоПоСтранице    = ИтогМассаБруттоПоСтранице;
					ОбластьИтоговПоСтранице.Параметры.ИтогМассыНеттоПоСтранице     = ИтогМассыНеттоПоСтранице;
					ОбластьИтоговПоСтранице.Параметры.ИтогСуммыПоСтранице          = ИтогСуммыПоСтранице;
					ТабличныйДокумент.Вывести(ОбластьИтоговПоСтранице);
					
					// Инициализация итогов по странице.
					ИтогКоличествоМестПоСтранице = 0;
					ИтогМассаБруттоПоСтранице    = 0;
					ИтогМассаНеттоПоСтранице     = 0;
					ИтогСуммыПоСтранице          = 0;

					НомерСтраницы = НомерСтраницы + 1;
					ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();

					// Вывод заголовка таблицы.
					ОбластьЗаголовокТаблицы.Параметры.НомерСтраницы = "Страница " + НомерСтраницы;
					ТабличныйДокумент.Вывести(ОбластьЗаголовокТаблицы);

				КонецЕсли;

			КонецЕсли;

			ТабличныйДокумент.Вывести(ОбластьМакетаСтрока);

			// Обновление итоги по странице
			ИтогКоличествоМестПоСтранице = ИтогКоличествоМестПоСтранице + ВыборкаСтрокТовары.Количество;
			ИтогМассаБруттоПоСтранице    = ИтогМассаБруттоПоСтранице    + ВыборкаСтрокТовары.МассаБрутто;
			ИтогМассыНеттоПоСтранице     = ИтогМассыНеттоПоСтранице     + ВыборкаСтрокТовары.МассаНетто;
			ИтогСуммыПоСтранице          = ИтогСуммыПоСтранице          + СуммаСтроки;

			// Обновление итогов по документу
			ИтогоКоличество  = ИтогоКоличество  + ВыборкаСтрокТовары.Количество;
			ИтогоМассаБрутто = ИтогоМассаБрутто + ВыборкаСтрокТовары.МассаБрутто;
			ИтогоМассаНетто  = ИтогоМассаНетто  + ВыборкаСтрокТовары.МассаНетто;
			ИтогоСумма       = ИтогоСумма       + СуммаСтроки;

		КонецЦикла;

		// Вывод итогов по странице.
		ОбластьИтоговПоСтранице.Параметры.ИтогКоличествоМестПоСтранице = ИтогКоличествоМестПоСтранице;
		ОбластьИтоговПоСтранице.Параметры.ИтогМассаБруттоПоСтранице    = ИтогМассаБруттоПоСтранице;
		ОбластьИтоговПоСтранице.Параметры.ИтогМассыНеттоПоСтранице     = ИтогМассыНеттоПоСтранице;
		ОбластьИтоговПоСтранице.Параметры.ИтогСуммыПоСтранице          = ИтогСуммыПоСтранице;
		ТабличныйДокумент.Вывести(ОбластьИтоговПоСтранице);

		// Вывод итогов по документу в целом.
		ОбластьМакетаВсего.Параметры.ИтогоКоличествоМест = ИтогоКоличество;
		ОбластьМакетаВсего.Параметры.ИтогоМассаБрутто    = ИтогоМассаБрутто;
		ОбластьМакетаВсего.Параметры.ИтогоМассаНетто     = ИтогоМассаНетто;
		ОбластьМакетаВсего.Параметры.ИтогоСумма          = ИтогоСумма;
		ТабличныйДокумент.Вывести(ОбластьМакетаВсего);

		// Вывод подвала документа.
		ОбластьМакетаПодвал.Параметры.Заполнить(Шапка);
		ОбластьМакетаПодвал.Параметры.ДолжностьОтправителя = Шапка.ДолжностьКладовщикаОтправителя;
		ОбластьМакетаПодвал.Параметры.ФИООтправителя       = ФизическиеЛица.ФамилияИнициалыФизЛица(Шапка.КладовщикОтправитель);
		ОбластьМакетаПодвал.Параметры.ДолжностьПолучателя  = Шапка.ДолжностьКладовщикаПолучателя;
		ОбластьМакетаПодвал.Параметры.ФИОПолучателя        = ФизическиеЛица.ФамилияИнициалыФизЛица(Шапка.КладовщикПолучатель);
		ОбластьМакетаПодвал.Параметры.ИтогоСуммаПрописью   = РаботаСКурсамиВалют.СформироватьСуммуПрописью(Цел(ИтогоСумма), ВалютаРеглУчета, Истина);
		ОбластьМакетаПодвал.Параметры.ИтогоСуммаКоп        = Формат(Цел((ИтогоСумма-Цел(ИтогоСумма))*100), "ЧЦ=2; ЧН=00");
		ТабличныйДокумент.Вывести(ОбластьМакетаПодвал);

		// Выведем нужное количество экземпляров (при печати комплектов)
		Если КомплектыПечати <> Неопределено И КомплектыПечати.Колонки.Найти("Ссылка") <> Неопределено И КомплектПечатиПоСсылке.Экземпляров > 1 Тогда
			ОбластьКопирования = ТабличныйДокумент.ПолучитьОбласть(НомерСтрокиНачало,,ТабличныйДокумент.ВысотаТаблицы);
			Для Итератор = 2 По КомплектПечатиПоСсылке.Экземпляров Цикл
				ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
				ТабличныйДокумент.Вывести(ОбластьКопирования);
			КонецЦикла;
		КонецЕсли;
		
		ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабличныйДокумент, НомерСтрокиНачало, ОбъектыПечати, Шапка.Ссылка);

	КонецЦикла;

	Возврат ТабличныйДокумент;

КонецФункции

Процедура ЗаполнитьСтруктуруПолучателейПечатныхФорм(СтруктураДанныхОбъектаПечати) Экспорт
	
	Если НЕ ПолучитьФункциональнуюОпцию("ИспользоватьУправлениеДоставкой") Тогда
		Возврат;
	КонецЕсли;
	
	СтруктураДанныхОбъектаПечати.ОсновнойПолучатель = "ПеревозчикПартнер";
	
	СтруктураДанныхОбъектаПечати.МассивРеквизитовПолучателей.Добавить("ПеревозчикПартнер");
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
//Прочее

// Функция формирует таблицу курсов валют по дням.
//
Функция ПолучитьТаблицуКурсовВалют(МассивДокументов)
	
	ВалютаРегламентированногоУчета = Константы.ВалютаРегламентированногоУчета.Получить();
	
	Запрос = Новый Запрос("ВЫБРАТЬ РАЗЛИЧНЫЕ
	                      |	НАЧАЛОПЕРИОДА(ПеремещениеТоваров.Дата, ДЕНЬ) КАК Дата,
	                      |	ПеремещениеТоваров.ВидЦены.ВалютаЦены КАК Валюта
	                      |ИЗ
	                      |	Документ.ПеремещениеТоваров КАК ПеремещениеТоваров
	                      |ГДЕ
	                      |	ПеремещениеТоваров.Ссылка В(&МассивДокументов)
	                      |	И ПеремещениеТоваров.ВидЦены.ВалютаЦены <> &ВалютаРегламентированногоУчета
	                      |
	                      |УПОРЯДОЧИТЬ ПО
	                      |	Валюта,
	                      |	Дата");
	Запрос.УстановитьПараметр("ВалютаРегламентированногоУчета", ВалютаРегламентированногоУчета);
	Запрос.УстановитьПараметр("МассивДокументов", МассивДокументов);
	
	ТаблицаКурсовВалют = Новый ТаблицаЗначений;
	ТаблицаКурсовВалют.Колонки.Добавить("Валюта",    Новый ОписаниеТипов("СправочникСсылка.Валюты"));
	ТаблицаКурсовВалют.Колонки.Добавить("Дата",      Новый ОписаниеТипов("Дата"));
	ТаблицаКурсовВалют.Колонки.Добавить("Курс",      Новый ОписаниеТипов("Число"));
	ТаблицаКурсовВалют.Колонки.Добавить("Кратность", Новый ОписаниеТипов("Число"));
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		
		НоваяСтрока = ТаблицаКурсовВалют.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, Выборка);
		
		КурсыВалюты = РаботаСКурсамиВалют.ПолучитьКурсВалюты(Выборка.Валюта, Выборка.Дата);
		НоваяСтрока.Курс = КурсыВалюты.Курс;
		НоваяСтрока.Кратность = КурсыВалюты.Кратность;
		
	КонецЦикла;
	
	Возврат ТаблицаКурсовВалют;
	
КонецФункции

////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

// Функция определяет реквизиты выбранного перемещения товаров.
//
// Параметры:
//  ДокументСсылка - ДокументСсылка.ПеремещениеТоваров - Ссылка на документ
//
// Возвращаемое значение:
//	Структура - реквизиты перемещения товаров
//
Функция ПолучитьРеквизитыДокумента(ДокументСсылка) Экспорт
	
	Запрос = Новый Запрос("
	|ВЫБРАТЬ
	|	ДанныеДокумента.Дата КАК Дата,
	|	ДанныеДокумента.Организация КАК Организация
	|ИЗ
	|	Документ.ПеремещениеТоваров КАК ДанныеДокумента
	|ГДЕ
	|	ДанныеДокумента.Ссылка = &ДокументСсылка
	|");
	
	Запрос.УстановитьПараметр("ДокументСсылка", ДокументСсылка);
	
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда
		Дата = Выборка.Дата;
		Организация = Выборка.Организация;
	Иначе
		Дата = Дата(1,1,1);
		Организация = Неопределено;
	КонецЕсли;
	
	СтруктураРеквизитов = Новый Структура("Дата, Организация",
		Дата,
		Организация,
	);
	
	Возврат СтруктураРеквизитов;

КонецФункции // ПолучитьРеквизитыДокумента()

////////////////////////////////////////////////////////////////////////////////
//Обновление информационной базы

// Обработчик обновления УТ 11.1.0.0
// Заполняет реквизит "СпособДоставки" значением по умолчанию "Самовывоз"
//
Процедура ЗаполнитьСпособДоставкиСамовывоз() Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ПеремещениеТоваров.Ссылка
	|ИЗ
	|	Документ.ПеремещениеТоваров КАК ПеремещениеТоваров
	|ГДЕ
	|	ПеремещениеТоваров.СпособДоставки = &ПустойСпособДоставки";
	
	Запрос.УстановитьПараметр("ПустойСпособДоставки", Перечисления.СпособыДоставки.ПустаяСсылка());
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		
		ДокОбъект = Выборка.Ссылка.ПолучитьОбъект();
		
		ДокОбъект.СпособДоставки = Перечисления.СпособыДоставки.Самовывоз;
		
		ДокОбъект.Записать(РежимЗаписиДокумента.Запись);
		
	КонецЦикла;
	
КонецПроцедуры

// Обновление на 11.1.0.0 - заполнение реквизита ПеремещениеТоваров.ВидыЗапасов.ВидЗапасаПолучателя
Процедура ЗаполнитьВидыЗапасовПолучателей() Экспорт
	Запрос = Новый Запрос("
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	Операция.Ссылка КАК Ссылка
		|ИЗ
		|	Документ.ПеремещениеТоваров КАК Операция
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ПеремещениеТоваров.ВидыЗапасов КАК Строки
		|		ПО Строки.Ссылка = Операция.Ссылка
		|ГДЕ
		|	Операция.Проведен И Строки.ВидЗапасовПолучателя = ЗНАЧЕНИЕ(Справочник.ВидыЗапасов.ПустаяСсылка)
		|");
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		Перемещение = Выборка.Ссылка.ПолучитьОбъект();
		Перемещение.ЗаполнитьВидЗапасовПолучателя();
		Перемещение.ОбменДанными.Загрузка = Истина;
		Перемещение.Записать(РежимЗаписиДокумента.Запись);
	КонецЦикла;
КонецПроцедуры

Функция ТекстЗапросаДляРассчетаСостоянийОтгрузки() Экспорт
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ПеремещениеТоваров.Ссылка КАК Ссылка,
	|	ПеремещениеТоваров.Проведен КАК Проведен,
	|	ВЫБОР
	|		КОГДА ПеремещениеТоваров.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыПеремещенийТоваров.КОтгрузке)
	|			ТОГДА ""КОтгрузке""
	|		КОГДА ПеремещениеТоваров.Статус В (ЗНАЧЕНИЕ(Перечисление.СтатусыПеремещенийТоваров.Принято), ЗНАЧЕНИЕ(Перечисление.СтатусыПеремещенийТоваров.Отгружено))
	|			ТОГДА ""Отгружено""
	|	КОНЕЦ КАК Статус,
	|	ПеремещениеТоваров.СпособДоставки КАК СпособДоставки,
	|	ПеремещениеТоваров.СкладОтправитель КАК Склад,
	|	ПеремещениеТоваров.СкладОтправитель.ИспользоватьОрдернуюСхемуПриОтгрузке КАК ИспользоватьОрдернуюСхемуПриОтгрузке,
	|	ПеремещениеТоваров.СкладОтправитель.НачинатьОтгрузкуПослеФормированияЗаданияНаПеревозку КАК НачинатьОтгрузкуПослеФормированияЗаданияНаПеревозку
	|ИЗ
	|	Документ.ПеремещениеТоваров КАК ПеремещениеТоваров
	|ГДЕ
	|	ПеремещениеТоваров.Ссылка В(&ДокументыОтгрузки)";
				   
	Возврат ТекстЗапроса;
	
КонецФункции

#КонецЕсли