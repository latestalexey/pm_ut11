
///////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// Обработчик механизма "ВерсионированиеОбъектов"
	ВерсионированиеОбъектов.ПриСозданииНаСервере(ЭтаФорма);
	
	// Обработчик подсистемы "Внешние обработки"
	ДополнительныеОтчетыИОбработки.ПриСозданииНаСервере(ЭтаФорма);
	
	Если Параметры.Свойство("ЗаполнятьПоОснованию") Тогда
		ДокументОбъект = РеквизитФормыВЗначение("Объект");
		ДокументОбъект.Заполнить(Параметры.Основание);
		ЗначениеВРеквизитФормы(ДокументОбъект, "Объект");
		УстановитьМодифицированность = Истина;
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(Объект.Ссылка) Тогда
		ПриЧтенииСозданииНаСервере();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	Если УстановитьМодифицированность Тогда
		Модифицированность = Истина;
		РассчитатьСуммуДокумента();
	КонецЕсли;
	
	ОбновитьОтметкуНезаполненныхТабличныхЧастей();
	
	
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
	// Обработчик механизма "ДатыЗапретаИзменения"
	ДатыЗапретаИзменения.ОбъектПриЧтенииНаСервере(ЭтаФорма, ТекущийОбъект);
	
	ПриЧтенииСозданииНаСервере();
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаВыбора(РезультатВыбора, ИсточникВыбора)

	Если ИсточникВыбора.ИмяФормы = "Документ.ВыпискаПоРасчетномуСчету.Форма.ФормаПодбораПлатежей" Тогда
		
		ПолучитьПлатежиИзХранилища(
			РезультатВыбора.ПодборВходящихПлатежей,
			РезультатВыбора.АдресПлатежейВХранилище
		);
		РассчитатьСуммуДокумента();
		ОбновитьОтметкуНезаполненныхТабличныхЧастей();
		
	КонецЕсли;
	
	Если Окно <> Неопределено Тогда
		Окно.Активизировать();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	
	Оповестить("Запись_ВыпискаПоРасчетномуСчету", ПараметрыЗаписи, Объект.Ссылка); // Используется для автоматического обновления формы списка выписок
	
КонецПроцедуры

///////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ ШАПКИ ФОРМЫ

&НаКлиенте
Процедура ДатаПриИзменении(Элемент)
	
	ЗаполнитьДанныеОбОстаткеДенежныхСредств();
	
КонецПроцедуры

&НаСервере
Процедура БанковскийСчетПриИзмененииСервер()
	
	СтруктураРеквизитов = Справочники.БанковскиеСчетаОрганизаций.ПолучитьРеквизитыБанковскогоСчетаОрганизации(Объект.БанковскийСчет);
	Объект.Организация = СтруктураРеквизитов.Организация;
	Валюта = СтруктураРеквизитов.Валюта;
	
	УстановитьЗаголовкиСуммПлатежей();
	ЗаполнитьДанныеОбОстаткеДенежныхСредств();
	
КонецПроцедуры

&НаКлиенте
Процедура БанковскийСчетПриИзменении(Элемент)
	
	БанковскийСчетПриИзмененииСервер();
	
КонецПроцедуры

///////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ ТАБЛИЦЫ ФОРМЫ ВХОДЯЩИЕ ПЛАТЕЖИ

&НаКлиенте
Процедура ВходящиеПлатежиПриИзменении(Элемент)
	
	ОбновитьОтметкуНезаполненныхТабличныхЧастей();
	
КонецПроцедуры

&НаКлиенте
Процедура ВходящиеПлатежиВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	Если Поле.Имя = "ВходящиеПлатежиПлатежныйДокумент" И ЗначениеЗаполнено(Элемент.ТекущиеДанные.ПлатежныйДокумент) Тогда
		ОткрытьЗначение(Элемент.ТекущиеДанные.ПлатежныйДокумент);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ВходящиеПлатежиПриОкончанииРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования)
	
	РассчитатьСуммуДокумента();
	
КонецПроцедуры

&НаКлиенте
Процедура ВходящиеПлатежиПослеУдаления(Элемент)
	
	РассчитатьСуммуДокумента();
	
КонецПроцедуры

&НаКлиенте
Процедура ВходящиеПлатежиПлатежныйДокументПриИзменении(Элемент)
	
	СтрокаТаблицы = Элементы.ВходящиеПлатежи.ТекущиеДанные;
	СтрокаТаблицы.Сумма = СуммаВходящегоДокумента(СтрокаТаблицы.ПлатежныйДокумент);
	
КонецПроцедуры

///////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ ТАБЛИЦЫ ФОРМЫ ИСХОДЯЩИЕ ПЛАТЕЖИ

&НаКлиенте
Процедура ИсходящиеПлатежиПриИзменении(Элемент)
	
	ОбновитьОтметкуНезаполненныхТабличныхЧастей();
	
КонецПроцедуры

&НаКлиенте
Процедура ИсходящиеПлатежиВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	Если Поле.Имя = "ИсходящиеПлатежиПлатежныйДокумент" И ЗначениеЗаполнено(Элемент.ТекущиеДанные.ПлатежныйДокумент) Тогда
		ОткрытьЗначение(Элемент.ТекущиеДанные.ПлатежныйДокумент);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ИсходящиеПлатежиПриОкончанииРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования)
	
	РассчитатьСуммуДокумента();
	
КонецПроцедуры

&НаКлиенте
Процедура ИсходящиеПлатежиПослеУдаления(Элемент)
	
	РассчитатьСуммуДокумента();
	
КонецПроцедуры

&НаКлиенте
Процедура ИсходящиеПлатежиПлатежныйДокументПриИзменении(Элемент)
	
	СтрокаТаблицы = Элементы.ИсходящиеПлатежи.ТекущиеДанные;
	СтрокаТаблицы.Сумма = СуммаИсходящегоДокумента(СтрокаТаблицы.ПлатежныйДокумент);
	
КонецПроцедуры

///////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ КОМАНД ФОРМЫ

&НаКлиенте
Процедура ПодборВходящихПлатежейВыполнить()
	
	СтруктураРеквизитов = Новый Структура;
	СтруктураРеквизитов.Вставить("БанковскийСчет");
	СтруктураРеквизитов.Вставить("Дата");
	
	Если ОбщегоНазначенияУТКлиент.ВозможноЗаполнениеТабличнойЧасти(ЭтаФорма, Неопределено, СтруктураРеквизитов) Тогда

		АдресПлатежейВХранилище = ПоместитьВходящиеПлатежиВХранилище();
		
		ПараметрыПодбора = Новый Структура("
			|АдресПлатежейВХранилище, 
			|Организация, 
			|БанковскийСчет,
			|Дата,
			|ВыпискаПоРасчетномуСчету,
			|ПодборВходящихПлатежей
			|",
			АдресПлатежейВХранилище,
			Объект.Организация, 
			Объект.БанковскийСчет,
			Объект.Дата,
			Объект.Ссылка,
			Истина
		);
		ОткрытьФорму(
			"Документ.ВыпискаПоРасчетномуСчету.Форма.ФормаПодбораПлатежей", 
			ПараметрыПодбора, 
			ЭтаФорма
			);
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПодборИсходящихПлатежейВыполнить()
	
	СтруктураРеквизитов = Новый Структура;
	СтруктураРеквизитов.Вставить("БанковскийСчет");
	СтруктураРеквизитов.Вставить("Дата");
	
	Если ОбщегоНазначенияУТКлиент.ВозможноЗаполнениеТабличнойЧасти(ЭтаФорма, Неопределено, СтруктураРеквизитов) Тогда

		АдресПлатежейВХранилище = ПоместитьИсходящиеПлатежиВХранилище();
		
		ПараметрыПодбора = Новый Структура("
			|АдресПлатежейВХранилище, 
			|Организация, 
			|БанковскийСчет,
			|Дата,
			|ВыпискаПоРасчетномуСчету
			|", 
			АдресПлатежейВХранилище,
			Объект.Организация, 
			Объект.БанковскийСчет,
			Объект.Дата,
			Объект.Ссылка
		);
		ОткрытьФорму(
			"Документ.ВыпискаПоРасчетномуСчету.Форма.ФормаПодбораПлатежей", 
			ПараметрыПодбора, 
			ЭтаФорма
		);
		
	КонецЕсли;
	
КонецПроцедуры

///////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

///////////////////////////////////////////////////////////////////////////////
// Прочее

&НаСервере
Процедура ПриЧтенииСозданииНаСервере()
	
	СтруктураРеквизитов = Справочники.БанковскиеСчетаОрганизаций.ПолучитьРеквизитыБанковскогоСчетаОрганизации(Объект.БанковскийСчет);
	Валюта = СтруктураРеквизитов.Валюта;
	УстановитьЗаголовкиСуммПлатежей();
	ЗаполнитьДанныеОбОстаткеДенежныхСредств();
	
КонецПроцедуры

&НаСервере
Функция ПоместитьВходящиеПлатежиВХранилище() 

	АдресПлатежейВХранилище = ПоместитьВоВременноеХранилище(
		Объект.ВходящиеПлатежи.Выгрузить(,"ПлатежныйДокумент, Сумма"), 
		УникальныйИдентификатор
	);
		
	Возврат АдресПлатежейВХранилище;
	
КонецФункции

&НаСервере
Функция ПоместитьИсходящиеПлатежиВХранилище() 

	АдресПлатежейВХранилище = ПоместитьВоВременноеХранилище(
		Объект.ИсходящиеПлатежи.Выгрузить(,"ПлатежныйДокумент, Сумма"),
		УникальныйИдентификатор
	);
	
	Возврат АдресПлатежейВХранилище;
	
КонецФункции

&НаСервере
Процедура ПолучитьПлатежиИзХранилища(ПодборВходящихПлатежей, АдресПлатежейВХранилище)

	Если ПодборВходящихПлатежей Тогда
		Объект.ВходящиеПлатежи.Загрузить(ПолучитьИзВременногоХранилища(АдресПлатежейВХранилище));
	Иначе
		Объект.ИсходящиеПлатежи.Загрузить(ПолучитьИзВременногоХранилища(АдресПлатежейВХранилище));
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьДанныеОбОстаткеДенежныхСредств()
	
	Запрос = Новый Запрос("
	|ВЫБРАТЬ
	|	ДенежныеСредства.СуммаОстаток КАК Сумма
	|ИЗ
	|	РегистрНакопления.ДенежныеСредстваБезналичные.Остатки(&Граница, 
	|		Организация = &Организация
	|		И БанковскийСчет = &БанковскийСчет
	|	) КАК ДенежныеСредства
	|");
	Если Не ЗначениеЗаполнено(Объект.Ссылка) Тогда
		Граница = Новый Граница(КонецДня(ТекущаяДата()), ВидГраницы.Включая);
	Иначе
		Граница = Новый Граница(Объект.Дата, ВидГраницы.Исключая);
	КонецЕсли;
	Запрос.УстановитьПараметр("Граница", Граница);
	Запрос.УстановитьПараметр("Организация", Объект.Организация);
	Запрос.УстановитьПараметр("БанковскийСчет", Объект.БанковскийСчет);
	
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда
		НачальныйОстаток = Выборка.Сумма;
	Иначе
		НачальныйОстаток = 0;
	КонецЕсли;
	
	КонечныйОстаток = НачальныйОстаток 
		+ Объект.СуммаПоступленияВсего
		- Объект.СуммаСписанияВсего;
	
КонецПроцедуры

&НаКлиенте
Процедура РассчитатьСуммуДокумента()
	
	Объект.СуммаПоступленияВсего = Объект.ВходящиеПлатежи.Итог("Сумма");
	Объект.СуммаСписанияВсего = Объект.ИсходящиеПлатежи.Итог("Сумма");
	КонечныйОстаток = НачальныйОстаток 
		+ Объект.СуммаПоступленияВсего
		- Объект.СуммаСписанияВсего;
	
КонецПроцедуры

&НаСервере
Процедура УстановитьЗаголовкиСуммПлатежей()
	
	Элементы.ВходящиеПлатежиСумма.Заголовок = "Сумма (" + Строка(Валюта) + ")";
	Элементы.ИсходящиеПлатежиСумма.Заголовок = "Сумма (" + Строка(Валюта) + ")";
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция СуммаВходящегоДокумента(Документ)
	
	Запрос = Новый Запрос("
	|ВЫБРАТЬ
	|	ДенежныеСредства.СуммаПриход КАК СуммаДокумента
	|ИЗ
	|	РегистрНакопления.ДенежныеСредстваКПоступлениюБезналичные.Обороты КАК ДенежныеСредства
	|ГДЕ
	|	ДенежныеСредства.Документ = &Документ
	|");
	Запрос.УстановитьПараметр("Документ", Документ);
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда
		СуммаДокумента = Выборка.СуммаДокумента;
	Иначе
		СуммаДокумента = 0;
	КонецЕсли;
	
	Возврат СуммаДокумента;
	
КонецФункции

&НаСервереБезКонтекста
Функция СуммаИсходящегоДокумента(Документ)
	
	Запрос = Новый Запрос("
	|ВЫБРАТЬ
	|	ДенежныеСредства.СуммаРасход КАК СуммаДокумента
	|ИЗ
	|	РегистрНакопления.ДенежныеСредстваКСписаниюБезналичные.Обороты КАК ДенежныеСредства
	|ГДЕ
	|	ДенежныеСредства.Документ = &Документ
	|");
	Запрос.УстановитьПараметр("Документ", Документ);
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда
		СуммаДокумента = Выборка.СуммаДокумента;
	Иначе
		СуммаДокумента = 0;
	КонецЕсли;
	
	Возврат СуммаДокумента;
	
КонецФункции

&НаКлиенте
Процедура ОбновитьОтметкуНезаполненныхТабличныхЧастей()
	
	ТребуютсяВходящиеПлатежи  = Объект.ИсходящиеПлатежи.Количество() = 0;
	ТребуютсяИсходящиеПлатежи = Объект.ВходящиеПлатежи.Количество() = 0;
	
	Элементы.ВходящиеПлатежи.АвтоОтметкаНезаполненного = ТребуютсяВходящиеПлатежи;
	Элементы.ВходящиеПлатежи.ОтметкаНезаполненного     = ТребуютсяВходящиеПлатежи;
	
	Элементы.ИсходящиеПлатежи.АвтоОтметкаНезаполненного = ТребуютсяИсходящиеПлатежи;
	Элементы.ИсходящиеПлатежи.ОтметкаНезаполненного     = ТребуютсяИсходящиеПлатежи;
	
КонецПроцедуры
