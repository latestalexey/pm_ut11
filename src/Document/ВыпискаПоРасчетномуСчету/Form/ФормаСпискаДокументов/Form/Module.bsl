
///////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ОбщегоНазначенияУТ.НастроитьПодключаемоеОборудование(ЭтаФорма);
	
	// Обработчик подсистемы "Внешние обработки"
	ДополнительныеОтчетыИОбработки.ПриСозданииНаСервере(ЭтаФорма);
	
	УправлениеЭлементамиФормы();
	ЗаполнитьСпискиХозяйственныхОпераций();
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	МенеджерОборудованияКлиент.ПодключитьОборудованиеПриОткрытииФормы(ЭтаФорма, "СканерШтрихкода");
	
КонецПроцедуры

&НаКлиенте
Процедура ПриЗакрытии()
	
	МенеджерОборудованияКлиент.ОтключитьОборудованиеПриЗакрытииФормы(ЭтаФорма);
	
	СохранитьРабочиеЗначенияПолейФормы(Истина);
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	// ПодключаемоеОборудование
	Если Источник = "ПодключаемоеОборудование" И ВводДоступен() Тогда
		Если ИмяСобытия = "ScanData" Тогда
			ОбработатьШтрихкоды(МенеджерОборудованияКлиент.ПреобразоватьДанныеСоСканераВСтруктуру(Параметр));
		КонецЕсли;
	КонецЕсли;
	// Конец ПодключаемоеОборудование
	
	Если ИмяСобытия = "Запись_ВыпискаПоРасчетномуСчету" Тогда
		Элементы.ПоступленияДенежныхСредств.Обновить();
		Элементы.СписанияДенежныхСредств.Обновить();
	КонецЕсли;

КонецПроцедуры

&НаСервере
Процедура ПриЗагрузкеДанныхИзНастроекНаСервере(Настройки)
	
	Организация    = Настройки.Получить("Организация");
	БанковскийСчет = Настройки.Получить("БанковскийСчет");
	
	УстановитьОтборДинамическихСписков();
	
КонецПроцедуры

///////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ ШАПКИ ФОРМЫ

&НаКлиенте
Процедура БанковскийСчетОтборПриИзменении(Элемент)
	
	БанковскийСчетОтборПриИзмененииСервер();
	
КонецПроцедуры

&НаКлиенте
Процедура ПоступленияДенежныхСредствВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	ОткрытьЗначение(Элементы.ПоступленияДенежныхСредств.ТекущиеДанные.Ссылка);
	
КонецПроцедуры

&НаКлиенте
Процедура СписанияДенежныхСредствВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	ОткрытьЗначение(Элементы.СписанияДенежныхСредств.ТекущиеДанные.Ссылка);
	
КонецПроцедуры

&НаКлиенте
Процедура ГруппаСтраницыПриСменеСтраницы(Элемент, ТекущаяСтраница)
	
	Если ТекущаяСтраница = Элементы.СтраницаВходящиеПлатежи Тогда
		Элементы.ПоступленияДенежныхСредств.Обновить();
		
	ИначеЕсли ТекущаяСтраница = Элементы.СтраницаИсходящиеПлатежи Тогда
		Элементы.СписанияДенежныхСредств.Обновить();
		
	КонецЕсли;
	
КонецПроцедуры

///////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ КОМАНД ФОРМЫ

&НаКлиенте
Процедура СоздатьПоступлениеОплатыОтКлиента(Команда)
	
	СоздатьПоступлениеБезналичныхДенежныхСредств(0);
	
КонецПроцедуры

&НаКлиенте
Процедура СоздатьВозвратДенежныхСредствОтПоставщика()

	СоздатьПоступлениеБезналичныхДенежныхСредств(1);
	
КонецПроцедуры

&НаКлиенте
Процедура СоздатьПрочиеДоходы(Команда)
	
	СоздатьПоступлениеБезналичныхДенежныхСредств(2);
	
КонецПроцедуры

&НаКлиенте
Процедура СоздатьПрочееПоступлениеДенежныхСредств()

	СоздатьПоступлениеБезналичныхДенежныхСредств(3);
	
КонецПроцедуры

&НаКлиенте
Процедура СоздатьОплатаПоставщику(Команда)
	
	СоздатьСписаниеБезналичныхДенежныхСредств(0);
	
КонецПроцедуры

&НаКлиенте
Процедура СоздатьВыдачаПодотчетнику()

	СоздатьСписаниеБезналичныхДенежныхСредств(1);
	
КонецПроцедуры

&НаКлиенте
Процедура СоздатьПеречислениеНаДругойСчет()

	СоздатьСписаниеБезналичныхДенежныхСредств(2);
	
КонецПроцедуры

&НаКлиенте
Процедура СоздатьВозвратОплатыКлиенту()

	СоздатьСписаниеБезналичныхДенежныхСредств(3);
	
КонецПроцедуры

&НаКлиенте
Процедура СоздатьПеречислениеВДругуюОрганизацию(Команда)
	
	СоздатьСписаниеБезналичныхДенежныхСредств(4);
	
КонецПроцедуры

&НаКлиенте
Процедура СоздатьПрочиеРасходы(Команда)
	
	СоздатьСписаниеБезналичныхДенежныхСредств(5);
	
КонецПроцедуры

&НаКлиенте
Процедура СоздатьПеречислениеВБюджет(Команда)
	
	СоздатьСписаниеБезналичныхДенежныхСредств(6);
	
КонецПроцедуры

&НаКлиенте
Процедура СоздатьПрочаяВыдачаДенежныхСредств(Команда)

	СоздатьСписаниеБезналичныхДенежныхСредств(7);
	
КонецПроцедуры

&НаКлиенте
Процедура СоздатьПеречислениеТаможне(Команда)
	
	СоздатьСписаниеБезналичныхДенежныхСредств(8);
	
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьОтчетОстаткиИДвиженияДенежныхСредств(Команда)
	
	ПараметрыФормы = Новый Структура("Отбор, КлючНазначенияИспользования, КлючВарианта, СформироватьПриОткрытии");
	ПараметрыФормы.СформироватьПриОткрытии = Истина;
	
	ПараметрыФормы.КлючНазначенияИспользования = "БезналичныеДенежныеСредства";
	ПараметрыФормы.КлючВарианта = "БезналичныеДенежныеСредства";
	Если ЗначениеЗаполнено(БанковскийСчет) Тогда
		ПараметрыФормы.Отбор = Новый Структура("БанковскийСчет", БанковскийСчет);
	КонецЕсли;
	
	ОткрытьФорму("Отчет.ОстаткиИДвиженияДенежныхСредств.Форма",
		ПараметрыФормы,
		ЭтаФорма,
		БанковскийСчет
	);
	
КонецПроцедуры

///////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

///////////////////////////////////////////////////////////////////////////////
// Штрихкоды и торговое оборудование

&НаКлиенте
Функция СсылкаНаЭлементСпискаПоШтрихкоду(Штрихкод)
	
	Менеджеры = Новый Массив();
	Менеджеры.Добавить(ПредопределенноеЗначение("Документ.ВыпискаПоРасчетномуСчету.ПустаяСсылка"));
	Возврат ШтрихкодированиеПечатныхФормКлиент.ПолучитьСсылкуПоШтрихкодуТабличногоДокумента(Штрихкод, Менеджеры);
	
КонецФункции

&НаКлиенте
Процедура ОбработатьШтрихкоды(Данные)
	
	МассивСсылок = СсылкаНаЭлементСпискаПоШтрихкоду(Данные.Штрихкод);
	Если МассивСсылок.Количество() > 0 Тогда
		
		Ссылка = МассивСсылок[0];
		Если ТипЗнч(Ссылка) = Тип("ДокументСсылка.ВыпискаПоРасчетномуСчету") Тогда
			Элементы.ВыпискиИзБанка.ТекущаяСтрока = Ссылка;
			Элементы.ГруппаСтраницы.ТекущаяСтраница = Элементы.ГруппаСтраницы.ПодчиненныеЭлементы.СтраницаВыписки;
		КонецЕсли;
		
		ОткрытьЗначение(Ссылка);
		
	Иначе
		ШтрихкодированиеПечатныхФормКлиент.ОбъектНеНайден(Данные.Штрихкод);
	КонецЕсли;
	
КонецПроцедуры

///////////////////////////////////////////////////////////////////////////////
// Управление элементами формы

&НаСервере
Процедура УправлениеЭлементамиФормы()
	
	Если Не ПолучитьФункциональнуюОпцию("ИспользоватьЗаказыКлиентов") Тогда
		Элементы.ЗаказыКОплатеСуммаКОплате.Видимость = Ложь;
	КонецЕсли;
	
	Элементы.БанковскийСчетОтбор.Видимость = ПолучитьФункциональнуюОпцию("ИспользоватьНесколькоРасчетныхСчетов");
	
КонецПроцедуры

///////////////////////////////////////////////////////////////////////////////
// Создание документов

&НаКлиенте
Процедура СоздатьПоступлениеБезналичныхДенежныхСредств(ХозяйственнаяОперацияИндекс)

	ХозяйственнаяОперация = СписокХозяйственныхОперацийПриход[ХозяйственнаяОперацияИндекс].Значение;

	СтруктураПараметры = Новый Структура;
	СтруктураПараметры.Вставить("Основание", Новый Структура("ХозяйственнаяОперация", ХозяйственнаяОперация));
	ОткрытьФорму("Документ.ПоступлениеБезналичныхДенежныхСредств.ФормаОбъекта", СтруктураПараметры, Элементы.ПоступленияДенежныхСредств);
	
КонецПроцедуры

&НаКлиенте
Процедура СоздатьСписаниеБезналичныхДенежныхСредств(ХозяйственнаяОперацияИндекс)

	ХозяйственнаяОперация = СписокХозяйственныхОперацийРасход[ХозяйственнаяОперацияИндекс].Значение;

	СтруктураПараметры = Новый Структура;
	СтруктураПараметры.Вставить("Основание", Новый Структура("ХозяйственнаяОперация", ХозяйственнаяОперация));
	ОткрытьФорму("Документ.СписаниеБезналичныхДенежныхСредств.ФормаОбъекта", СтруктураПараметры, Элементы.СписанияДенежныхСредств);
	
КонецПроцедуры

///////////////////////////////////////////////////////////////////////////////
// Прочее

&НаСервере
Процедура УстановитьВидимость()
	
	БанковскийСчетВидимость = Не ЗначениеЗаполнено(БанковскийСчет);
	Элементы.ПоступленияДенежныхСредствБанковскийСчет.Видимость = БанковскийСчетВидимость;
	Элементы.СписанияДенежныхСредствБанковскийСчет.Видимость = БанковскийСчетВидимость;
	Элементы.ВыпискиИзБанкаБанковскийСчет.Видимость = БанковскийСчетВидимость;
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьСпискиХозяйственныхОпераций()
	
	СписокХозяйственныхОперацийПриход.Очистить();
	СписокХозяйственныхОперацийПриход.Добавить(Перечисления.ХозяйственныеОперации.ПоступлениеОплатыОтКлиента);
	СписокХозяйственныхОперацийПриход.Добавить(Перечисления.ХозяйственныеОперации.ВозвратДенежныхСредствОтПоставщика);
	СписокХозяйственныхОперацийПриход.Добавить(Перечисления.ХозяйственныеОперации.ПрочиеДоходы);
	СписокХозяйственныхОперацийПриход.Добавить(Перечисления.ХозяйственныеОперации.ПрочееПоступлениеДенежныхСредств);
	
	СписокХозяйственныхОперацийРасход.Очистить();
	СписокХозяйственныхОперацийРасход.Добавить(Перечисления.ХозяйственныеОперации.ОплатаПоставщику);
	СписокХозяйственныхОперацийРасход.Добавить(Перечисления.ХозяйственныеОперации.ВыдачаДенежныхСредствПодотчетнику);
	СписокХозяйственныхОперацийРасход.Добавить(Перечисления.ХозяйственныеОперации.ПеречислениеДенежныхСредствНаДругойСчет);
	СписокХозяйственныхОперацийРасход.Добавить(Перечисления.ХозяйственныеОперации.ВозвратОплатыКлиенту);
	СписокХозяйственныхОперацийРасход.Добавить(Перечисления.ХозяйственныеОперации.ОплатаДенежныхСредствВДругуюОрганизацию);
	СписокХозяйственныхОперацийРасход.Добавить(Перечисления.ХозяйственныеОперации.ПрочиеРасходы);
	СписокХозяйственныхОперацийРасход.Добавить(Перечисления.ХозяйственныеОперации.ПеречислениеВБюджет);
	СписокХозяйственныхОперацийРасход.Добавить(Перечисления.ХозяйственныеОперации.ПрочаяВыдачаДенежныхСредств);
	СписокХозяйственныхОперацийРасход.Добавить(Перечисления.ХозяйственныеОперации.ПеречислениеТаможне);
	
КонецПроцедуры

&НаСервере
Процедура СохранитьРабочиеЗначенияПолейФормы(СохранитьНеопределено = Ложь)

	ОбщегоНазначения.ХранилищеОбщихНастроекСохранить("ТекущаяОрганизация", , ?(СохранитьНеопределено, Неопределено, Организация));
	ОбщегоНазначения.ХранилищеОбщихНастроекСохранить("ТекущийБанковскийСчет", , ?(СохранитьНеопределено, Неопределено, БанковскийСчет));

КонецПроцедуры

&НаСервере
Функция МассивДинамическихСписков()

	МассивСписков = Новый Массив;
	МассивСписков.Добавить(ПоступленияДенежныхСредств);
	МассивСписков.Добавить(СписанияДенежныхСредств);
	МассивСписков.Добавить(ВыпискиИзБанка);
		
	Возврат МассивСписков;

КонецФункции

&НаСервере
Процедура УстановитьОтборДинамическихСписков()
	
	Для каждого ДинамическийСписок Из МассивДинамическихСписков() Цикл
		ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбора(ДинамическийСписок.Отбор, "Организация", Организация, ВидСравненияКомпоновкиДанных.Равно,, ЗначениеЗаполнено(Организация));
		ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбора(ДинамическийСписок.Отбор, "БанковскийСчет", БанковскийСчет, ВидСравненияКомпоновкиДанных.Равно,, ЗначениеЗаполнено(БанковскийСчет));
	КонецЦикла;
	
	СохранитьРабочиеЗначенияПолейФормы();
	УстановитьВидимость();
	
КонецПроцедуры

&НаСервере
Процедура БанковскийСчетОтборПриИзмененииСервер()
	
	Организация = Справочники.БанковскиеСчетаОрганизаций.ПолучитьРеквизитыБанковскогоСчетаОрганизации(БанковскийСчет).Организация;
	
	УстановитьОтборДинамическихСписков();
	
КонецПроцедуры
