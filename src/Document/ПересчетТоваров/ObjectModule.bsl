#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ 

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, СтандартнаяОбработка)
	
	Если ТипЗнч(ДанныеЗаполнения) = Тип("Структура") Тогда
		ЗаполнитьЗначенияСвойств(ЭтотОбъект,ДанныеЗаполнения);
	ИначеЕсли ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.РаспоряжениеНаИнвентаризациюТоваров") Тогда
		ДокументОснование = ДанныеЗаполнения;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ДокументОснование) Тогда
		
		РеквизитыОснования = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(ДокументОснование,
								Новый Структура("Проведен,Статус,ДатаНачала,ДатаОкончания"));
		
		Если ПолучитьФункциональнуюОпцию("ИспользоватьРаспоряженияНаИнвентаризацию")
				И Не (РеквизитыОснования.Проведен
					И РеквизитыОснования.Статус = Перечисления.СтатусыРаспоряженийНаПроведениеИнвентаризацийТоваров.ВРаботе
					И РеквизитыОснования.ДатаНачала <= ТекущаяДата()
					И КонецДня(РеквизитыОснования.ДатаОкончания) >= ТекущаяДата()) Тогда
			ТекстСообщения = НСтр("ru='Ввод пересчета товаров возможен только на основании действующего распоряжения на инвентаризацию.'");
			ВызватьИсключение ТекстСообщения;
		КонецЕсли;
		
	ИначеЕсли ПолучитьФункциональнуюОпцию("ИспользоватьРаспоряженияНаИнвентаризацию") Тогда
		
		ТекстСообщения = НСтр("ru='Ввод пересчета товаров возможен только на основании распоряжения на инвентаризацию.'");
		ВызватьИсключение ТекстСообщения;
		
	КонецЕсли;
	
	Если Не ПолучитьФункциональнуюОпцию("ИспользоватьНесколькоВидовЦен") Тогда
		ИсточникИнформацииОЦенахДляПечати = Перечисления.ИсточникиИнформацииОЦенахДляПечати.ПоСебестоимости;
	КонецЕсли;
	
	ИнициализироватьДокумент(ДанныеЗаполнения);
	
КонецПроцедуры

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	УстановитьПривилегированныйРежим(Истина);
	
	ПроведениеСервер.УстановитьРежимПроведения(ЭтотОбъект,  РежимЗаписи, РежимПроведения);
	
	ДополнительныеСвойства.Вставить("ЭтоНовый",    ЭтоНовый());
	ДополнительныеСвойства.Вставить("РежимЗаписи", РежимЗаписи);
	
	Если РежимЗаписи = РежимЗаписиДокумента.Проведение Тогда
		
		Если СкладыСервер.ИспользоватьАдресноеХранение(Склад, Помещение) Тогда
			ПроверитьЯчейкиПередБлокировкой(Отказ);
		Иначе
			ПроверитьДругиеПересчеты(Отказ);
		КонецЕсли;
		
		Если Не УчетныеДанныеЗаполнены 
			И Не Отказ Тогда
			ЗаполнитьКоличествоПоУчету();
		КонецЕсли;
	ИначеЕсли  РежимЗаписи = РежимЗаписиДокумента.ОтменаПроведения Тогда	
		УчетныеДанныеЗаполнены = Ложь;
	КонецЕсли;	
	
КонецПроцедуры

Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	
	ПроведениеСервер.ИнициализироватьДополнительныеСвойстваДляПроведения(Ссылка, ДополнительныеСвойства, РежимПроведения);
	
	Документы.ПересчетТоваров.ИнициализироватьДанныеДокумента(Ссылка, ДополнительныеСвойства);
	
	ПроведениеСервер.ПодготовитьНаборыЗаписейКРегистрацииДвижений(ЭтотОбъект);
	
	ЗапасыСервер.ОтразитьТоварыКОформлениюИзлишковНедостач(ДополнительныеСвойства, Движения, Отказ);
	
	СкладыСервер.ОтразитьТоварыВСкладскихЯчейках(ДополнительныеСвойства, Движения, Отказ);
	СкладыСервер.ОтразитьБлокировкиСкладскихЯчеек(ДополнительныеСвойства, Движения, Отказ);
	СкладыСервер.ОтразитьДвиженияСерийТоваров(ДополнительныеСвойства, Движения, Отказ);
	
	СформироватьСписокРегистровДляКонтроля();
	
	ПроведениеСервер.ЗаписатьНаборыЗаписей(ЭтотОбъект);
	
	ПроведениеСервер.ВыполнитьКонтрольРезультатовПроведения(ЭтотОбъект, Отказ);
	
	ПроведениеСервер.ОчиститьДополнительныеСвойстваДляПроведения(ДополнительныеСвойства);
КонецПроцедуры

Процедура ОбработкаУдаленияПроведения(Отказ)
	ПроведениеСервер.ИнициализироватьДополнительныеСвойстваДляПроведения(Ссылка, ДополнительныеСвойства);
	
	ПроведениеСервер.ПодготовитьНаборыЗаписейКРегистрацииДвижений(ЭтотОбъект);
	
	СформироватьСписокРегистровДляКонтроля();
	
	ПроведениеСервер.ЗаписатьНаборыЗаписей(ЭтотОбъект);
	
	ПроведениеСервер.ВыполнитьКонтрольРезультатовПроведения(ЭтотОбъект, Отказ);
	
	ПроведениеСервер.ОчиститьДополнительныеСвойстваДляПроведения(ДополнительныеСвойства);
КонецПроцедуры

Процедура ПриКопировании(ОбъектКопирования)

	ИнициализироватьДокумент();

КонецПроцедуры

Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	
	Если НЕ Проведен
	 И Статус <> Перечисления.СтатусыПересчетовТоваров.ВРаботе
	 И СкладыСервер.ИспользоватьАдресноеХранение(Склад, Помещение) Тогда
		
		ТекстСообщения = НСтр("ru = 'Документ должен быть проведен сначала в статусе ""%Статус%""'");
		ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Статус%", Перечисления.СтатусыПересчетовТоваров.ВРаботе);
		
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения,ЭтотОбъект, "Статус", "Объект", Отказ);
		
	КонецЕсли;
	
	ПараметрыПроверки = Новый Структура("СуффиксДопРеквизита", "Факт");
	ОбщегоНазначенияУТ.ПроверитьЗаполнениеКоличества(ЭтотОбъект, ПроверяемыеРеквизиты, Отказ, ПараметрыПроверки);
	
	МассивНепроверяемыхРеквизитов = Новый Массив;
	
	Если НЕ СкладыСервер.ИспользоватьСкладскиеПомещения(Склад) Тогда
		МассивНепроверяемыхРеквизитов.Добавить("Помещение");
	КонецЕсли;
	
	Если НЕ ИспользоватьОтдельнуюЯчейкуИзлишков Тогда
		МассивНепроверяемыхРеквизитов.Добавить("ЯчейкаКонсолидацииИзлишковТоваров");
	КонецЕсли;
	Если НЕ ИспользоватьОтдельнуюЯчейкуПорчи Тогда
		МассивНепроверяемыхРеквизитов.Добавить("ЯчейкаКонсолидацииИспорченныхТоваров");
	КонецЕсли;
	
	Если Не СкладыСервер.ИспользоватьАдресноеХранение(Склад, Помещение) Тогда
		
		МассивНепроверяемыхРеквизитов.Добавить("Товары.Упаковка");
		МассивНепроверяемыхРеквизитов.Добавить("Товары.Ячейка");
		
	ИначеЕсли Не ПолучитьФункциональнуюОпцию("ИспользоватьУпаковкиНоменклатуры") Тогда
		
		МассивНепроверяемыхРеквизитов.Добавить("Товары.Упаковка");
		
		ТекстСообщения = НСтр("ru='В настройках программы не включено использование упаковок номенклатуры, 
			|поэтому нельзя оформить документ по складу с адресным хранением остатков. Обратитесь к администратору'");
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения,,,,Отказ);
		
	КонецЕсли;
	
	Если НЕ УчетныеДанныеЗаполнены Тогда
		
		КлючевыеРеквизиты = Новый Массив;
		КлючевыеРеквизиты.Добавить("Номенклатура");
		КлючевыеРеквизиты.Добавить("Характеристика");
		КлючевыеРеквизиты.Добавить("Серия");
		КлючевыеРеквизиты.Добавить("Ячейка");
		КлючевыеРеквизиты.Добавить("Упаковка");
		
		ОбщегоНазначенияУТ.ПроверитьНаличиеДублейСтрокТЧ(ЭтотОбъект, "Товары", КлючевыеРеквизиты, Отказ)
		
	КонецЕсли;
	
	НоменклатураСервер.ПроверитьЗаполнениеХарактеристик(
		ЭтотОбъект,
		МассивНепроверяемыхРеквизитов,
		Отказ);
	НоменклатураСервер.ПроверитьЗаполнениеСерий(
		ЭтотОбъект,
		НоменклатураСервер.ПараметрыУказанияСерий(ЭтотОбъект, Документы.ПересчетТоваров),
		Отказ,
		МассивНепроверяемыхРеквизитов);
	
	ОбщегоНазначения.УдалитьНепроверяемыеРеквизитыИзМассива(ПроверяемыеРеквизиты, МассивНепроверяемыхРеквизитов);

КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

////////////////////////////////////////////////////////////////////////////////
// Инициализация и заполнение

Процедура ИнициализироватьДокумент(ДанныеЗаполнения = Неопределено)

	Дата          = ТекущаяДата();
	Ответственный = Пользователи.ТекущийПользователь();
	Статус        = Метаданные().Реквизиты.Статус.ЗначениеЗаполнения;
	Если ЗначениеЗаполнено(ДокументОснование) Тогда
		Склад = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ДокументОснование, "Склад");
	КонецЕсли;
	
	ПечататьКоличествоПоУчету = Документы.ПересчетТоваров.ПолучитьЗначениеПризнакаПечататьКоличествоПоУчетуПоУмолчанию(Ссылка, Ответственный);
	
	СтруктураЯчеек = Документы.ПересчетТоваров.ПолучитьЯчейкиИзлишковИБракаПоУмолчанию(Ссылка, Склад, Помещение);
	ЗаполнитьЗначенияСвойств(ЭтотОбъект, СтруктураЯчеек);

	Склад = ЗначениеНастроекПовтИсп.ПолучитьСкладПоУмолчанию(Склад);
	
	Если НЕ ДокументОснование = Документы.РаспоряжениеНаИнвентаризациюТоваров.ПустаяСсылка() Тогда
		ИсточникИнформацииОЦенахДляПечати = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ДокументОснование, "ИсточникИнформацииОЦенахДляПечати");
		ВидЦены = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ДокументОснование, "ВидЦены");
	КонецЕсли;
	
КонецПроцедуры

Процедура ЗаполнитьКоличествоПоУчету()
	
	Запрос = Новый Запрос;
	
	Если СкладыСервер.ИспользоватьАдресноеХранение(Склад, Помещение) Тогда
		Запрос.Текст =
		"ВЫБРАТЬ
		|	Таблица.Номенклатура КАК Номенклатура,
		|	Таблица.Упаковка КАК Упаковка,
		|	Таблица.Характеристика КАК Характеристика,
		|	Таблица.Серия КАК Серия,
		|	Таблица.Ячейка КАК Ячейка,
		|	Таблица.КоличествоФакт КАК КоличествоФакт,
		|	Таблица.КоличествоУпаковокФакт КАК КоличествоУпаковокФакт,
		|	Таблица.НомерСтроки
		|ПОМЕСТИТЬ ТаблицаНоменклатуры
		|ИЗ
		|	&ТаблицаНоменклатуры КАК Таблица
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ТаблицаТоваровСОстатками.Номенклатура,
		|	ТаблицаТоваровСОстатками.Характеристика,
		|	ТаблицаТоваровСОстатками.Упаковка,
		|	ТаблицаТоваровСОстатками.Ячейка,
		|	ТаблицаТоваровСОстатками.Серия КАК Серия,
		|	СУММА(ТаблицаТоваровСОстатками.КоличествоУпаковок) КАК КоличествоУпаковок,
		|	СУММА(ТаблицаТоваровСОстатками.Количество) КАК Количество,
		|	СУММА(ТаблицаТоваровСОстатками.КоличествоФакт) КАК КоличествоФакт,
		|	СУММА(ТаблицаТоваровСОстатками.КоличествоУпаковокФакт) КАК КоличествоУпаковокФакт
		|ПОМЕСТИТЬ ТаблицаТоваровСОстатками
		|ИЗ
		|	(ВЫБРАТЬ
		|		ТаблицаНоменклатуры.Номенклатура КАК Номенклатура,
		|		ТаблицаНоменклатуры.Характеристика КАК Характеристика,
		|		ТаблицаНоменклатуры.Упаковка КАК Упаковка,
		|		ТаблицаНоменклатуры.Серия КАК Серия,
		|		ТаблицаНоменклатуры.Ячейка КАК Ячейка,
		|		0 КАК КоличествоУпаковок,
		|		0 КАК Количество,
		|		ТаблицаНоменклатуры.КоличествоФакт КАК КоличествоФакт,
		|		ТаблицаНоменклатуры.КоличествоУпаковокФакт КАК КоличествоУпаковокФакт
		|	ИЗ
		|		ТаблицаНоменклатуры КАК ТаблицаНоменклатуры
		|	
		|	ОБЪЕДИНИТЬ ВСЕ
		|	
		|	ВЫБРАТЬ
		|		ТоварыВЯчейкахОстатки.Номенклатура,
		|		ТоварыВЯчейкахОстатки.Характеристика,
		|		ТоварыВЯчейкахОстатки.Упаковка,
		|		ТоварыВЯчейкахОстатки.Серия,
		|		ТоварыВЯчейкахОстатки.Ячейка,
		|		ТоварыВЯчейкахОстатки.ВНаличииОстаток,
		|		ТоварыВЯчейкахОстатки.ВНаличииОстаток * ТоварыВЯчейкахОстатки.Упаковка.Коэффициент,
		|		0,
		|		0
		|	ИЗ
		|		РегистрНакопления.ТоварыВЯчейках.Остатки(
		|				&ДатаОстатков,
		|				(Номенклатура, Характеристика, Упаковка, Ячейка) В
		|					(ВЫБРАТЬ
		|						Таблица.Номенклатура,
		|						Таблица.Характеристика,
		|						Таблица.Упаковка,
		|						Таблица.Ячейка
		|					ИЗ
		|						ТаблицаНоменклатуры КАК Таблица)) КАК ТоварыВЯчейкахОстатки) КАК ТаблицаТоваровСОстатками
		|
		|СГРУППИРОВАТЬ ПО
		|	ТаблицаТоваровСОстатками.Ячейка,
		|	ТаблицаТоваровСОстатками.Упаковка,
		|	ТаблицаТоваровСОстатками.Характеристика,
		|	ТаблицаТоваровСОстатками.Номенклатура,
		|	ТаблицаТоваровСОстатками.Серия
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ТаблицаТоваровСОстатками.Номенклатура КАК Номенклатура,
		|	ТаблицаТоваровСОстатками.Характеристика КАК Характеристика,
		|	ТаблицаТоваровСОстатками.Упаковка КАК Упаковка,
		|	ТаблицаТоваровСОстатками.Ячейка КАК Ячейка,
		|	ТаблицаТоваровСОстатками.Серия КАК Серия,
		|	ТаблицаТоваровСОстатками.КоличествоУпаковок,
		|	ТаблицаТоваровСОстатками.Количество,
		|	ТаблицаТоваровСОстатками.КоличествоФакт,
		|	ТаблицаТоваровСОстатками.КоличествоУпаковокФакт,
		|	ТаблицаНоменклатуры.НомерСтроки КАК НомерСтроки,
		|	ЛОЖЬ КАК ИзлишекПорча
		|ИЗ
		|	ТаблицаТоваровСОстатками КАК ТаблицаТоваровСОстатками
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ТаблицаНоменклатуры КАК ТаблицаНоменклатуры
		|		ПО ТаблицаТоваровСОстатками.Номенклатура = ТаблицаНоменклатуры.Номенклатура
		|			И ТаблицаТоваровСОстатками.Характеристика = ТаблицаНоменклатуры.Характеристика
		|			И ТаблицаТоваровСОстатками.Упаковка = ТаблицаНоменклатуры.Упаковка
		|			И ТаблицаТоваровСОстатками.Ячейка = ТаблицаНоменклатуры.Ячейка
		|			И ТаблицаТоваровСОстатками.Серия = ТаблицаНоменклатуры.Серия
		|
		|УПОРЯДОЧИТЬ ПО
		|	НомерСтроки,
		|	ТаблицаТоваровСОстатками.Серия.Номер,
		|	ТаблицаТоваровСОстатками.Серия.ГоденДо
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ ТаблицаНоменклатуры
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ ТаблицаТоваровСОстатками";
		
		Запрос.УстановитьПараметр("ТаблицаНоменклатуры", Товары.Выгрузить());
		Запрос.УстановитьПараметр("ДатаОстатков", Дата);
			
	Иначе
		Запрос.Текст =
		"ВЫБРАТЬ
		|	Таблица.Номенклатура КАК Номенклатура,
		|	Таблица.Характеристика КАК Характеристика,
		|	Таблица.Серия КАК Серия,
		|	Таблица.КоличествоФакт КАК КоличествоФакт,
		|	Таблица.КоличествоУпаковокФакт КАК КоличествоУпаковокФакт,
		|	Таблица.НомерСтроки
		|ПОМЕСТИТЬ ТаблицаНоменклатуры
		|ИЗ
		|	&ТаблицаНоменклатуры КАК Таблица
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ТаблицаТоваровСОстатками.Номенклатура КАК Номенклатура,
		|	ТаблицаТоваровСОстатками.Характеристика КАК Характеристика,
		|	ТаблицаТоваровСОстатками.Серия КАК Серия,
		|	СУММА(ТаблицаТоваровСОстатками.КоличествоУпаковок) КАК КоличествоУпаковок,
		|	СУММА(ТаблицаТоваровСОстатками.Количество) КАК Количество,
		|	СУММА(ТаблицаТоваровСОстатками.КоличествоФакт) КАК КоличествоФакт,
		|	СУММА(ТаблицаТоваровСОстатками.КоличествоУпаковокФакт) КАК КоличествоУпаковокФакт
		|ПОМЕСТИТЬ ТаблицаТоваровСОстатками
		|ИЗ
		|	(ВЫБРАТЬ
		|		ТаблицаНоменклатуры.Номенклатура КАК Номенклатура,
		|		ТаблицаНоменклатуры.Характеристика КАК Характеристика,
		|		ТаблицаНоменклатуры.Серия КАК Серия,
		|		0 КАК КоличествоУпаковок,
		|		0 КАК Количество,
		|		ТаблицаНоменклатуры.КоличествоФакт КАК КоличествоФакт,
		|		ТаблицаНоменклатуры.КоличествоУпаковокФакт КАК КоличествоУпаковокФакт
		|	ИЗ
		|		ТаблицаНоменклатуры КАК ТаблицаНоменклатуры
		|	
		|	ОБЪЕДИНИТЬ ВСЕ
		|	
		|	ВЫБРАТЬ
		|		ТоварыНаСкладахОстатки.Номенклатура,
		|		ТоварыНаСкладахОстатки.Характеристика,
		|		ТоварыНаСкладахОстатки.Серия,
		|		ТоварыНаСкладахОстатки.ВНаличииОстаток,
		|		ТоварыНаСкладахОстатки.ВНаличииОстаток,
		|		0,
		|		0
		|	ИЗ
		|		РегистрНакопления.ТоварыНаСкладах.Остатки(
		|				&ДатаОстатков,
		|				(Номенклатура, Характеристика, Склад, Помещение) В
		|					(ВЫБРАТЬ
		|						Таблица.Номенклатура,
		|						Таблица.Характеристика,
		|						&Склад,
		|						&Помещение
		|					ИЗ
		|						ТаблицаНоменклатуры КАК Таблица)) КАК ТоварыНаСкладахОстатки) КАК ТаблицаТоваровСОстатками
		|
		|СГРУППИРОВАТЬ ПО
		|	ТаблицаТоваровСОстатками.Номенклатура,
		|	ТаблицаТоваровСОстатками.Характеристика,
		|	ТаблицаТоваровСОстатками.Серия
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ТаблицаТоваровСОстатками.Номенклатура,
		|	ТаблицаТоваровСОстатками.Характеристика,
		|	ТаблицаТоваровСОстатками.Серия КАК Серия,
		|	ТаблицаТоваровСОстатками.КоличествоУпаковок КАК КоличествоУпаковок,
		|	ТаблицаТоваровСОстатками.Количество КАК Количество,
		|	ТаблицаТоваровСОстатками.КоличествоФакт КАК КоличествоФакт,
		|	ТаблицаТоваровСОстатками.КоличествоУпаковокФакт КАК КоличествоУпаковокФакт,
		|	ТаблицаНоменклатуры.НомерСтроки КАК НомерСтроки,
		|	ЛОЖЬ КАК ИзлишекПорча
		|ИЗ
		|	ТаблицаНоменклатуры КАК ТаблицаНоменклатуры
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ТаблицаТоваровСОстатками КАК ТаблицаТоваровСОстатками
		|		ПО ТаблицаНоменклатуры.Номенклатура = ТаблицаТоваровСОстатками.Номенклатура
		|			И ТаблицаНоменклатуры.Характеристика = ТаблицаТоваровСОстатками.Характеристика
		|			И ТаблицаНоменклатуры.Серия = ТаблицаТоваровСОстатками.Серия
		|
		|УПОРЯДОЧИТЬ ПО
		|	НомерСтроки,
		|	ТаблицаТоваровСОстатками.Серия.Номер,
		|	ТаблицаТоваровСОстатками.Серия.ГоденДо
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ ТаблицаНоменклатуры
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ ТаблицаТоваровСОстатками";
		
		Запрос.УстановитьПараметр("Ссылка", Ссылка);
		Запрос.УстановитьПараметр("Склад", Склад);
		Запрос.УстановитьПараметр("Помещение", Помещение);
		Запрос.УстановитьПараметр("ТаблицаНоменклатуры", Товары.Выгрузить());
		Запрос.УстановитьПараметр("ДатаОстатков", Дата);
	КонецЕсли;	
	
	Товары.Загрузить(Запрос.Выполнить().Выгрузить());
	
	НоменклатураСервер.ЗаполнитьСтатусыУказанияСерий(ЭтотОбъект,
НоменклатураСервер.ПараметрыУказанияСерий(ЭтотОбъект, 		Документы.ПересчетТоваров));
	
	УчетныеДанныеЗаполнены = Истина;
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// Прочее

Процедура ПроверитьЯчейкиПередБлокировкой(Отказ)
	
	Блокировка = Новый БлокировкаДанных;
	ЭлементБлокировки = Блокировка.Добавить("РегистрСведений.БлокировкиСкладскихЯчеек");
	ЭлементБлокировки.Режим          = РежимБлокировкиДанных.Исключительный;
	ЭлементБлокировки.ИсточникДанных = Товары;
	ЭлементБлокировки.ИспользоватьИзИсточникаДанных("Ячейка", "Ячейка");
	
	ЭлементБлокировки = Блокировка.Добавить("РегистрНакопления.ТоварыВЯчейках");
	ЭлементБлокировки.Режим          = РежимБлокировкиДанных.Исключительный;   
	ЭлементБлокировки.ИсточникДанных = Товары;
	ЭлементБлокировки.ИспользоватьИзИсточникаДанных("Ячейка", "Ячейка");
	
	Блокировка.Заблокировать();
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ТаблицаНоменклатуры.Ячейка КАК Ячейка,
	|	ТаблицаНоменклатуры.НомерСтроки КАК НомерСтроки
	|ПОМЕСТИТЬ ТаблицаЯчеекДляЗапроса
	|ИЗ
	|	&ТаблицаНоменклатуры КАК ТаблицаНоменклатуры
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаЯчеекДляЗапроса.Ячейка КАК Ячейка,
	|	МИНИМУМ(ТаблицаЯчеекДляЗапроса.НомерСтроки) КАК НомерСтроки
	|ПОМЕСТИТЬ ТаблицаЯчеек
	|ИЗ
	|	ТаблицаЯчеекДляЗапроса КАК ТаблицаЯчеекДляЗапроса
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаЯчеекДляЗапроса.Ячейка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаЯчеек.Ячейка КАК Ячейка,
	|	ТаблицаЯчеек.НомерСтроки,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(ТоварыВЯчейкахОстатки.КОтборуОстаток, 0) <> 0
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК ЕстьЗаданияНаОтбор,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(ТоварыВЯчейкахОстатки.КРазмещениюОстаток, 0) <> 0
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК ЕстьЗаданияНаРазмещение,
	|	ВЫБОР
	|		КОГДА БлокировкиСкладскихЯчеек.ТипБлокировки ЕСТЬ NULL 
	|			ТОГДА ЛОЖЬ
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ КАК ЕстьБлокировкиПоЯчейке
	|ИЗ
	|	ТаблицаЯчеек КАК ТаблицаЯчеек
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ТоварыВЯчейках.Остатки(
	|				,
	|				Ячейка В
	|					(ВЫБРАТЬ
	|						ТаблицаЯчеек.Ячейка КАК Ячейка
	|					ИЗ
	|						ТаблицаЯчеек КАК ТаблицаЯчеек)) КАК ТоварыВЯчейкахОстатки
	|		ПО ТаблицаЯчеек.Ячейка = ТоварыВЯчейкахОстатки.Ячейка
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.БлокировкиСкладскихЯчеек КАК БлокировкиСкладскихЯчеек
	|		ПО (ТаблицаЯчеек.Ячейка = БлокировкиСкладскихЯчеек.Ячейка
	|				И БлокировкиСкладскихЯчеек.Регистратор <> &Ссылка)
	|ГДЕ
	|	(ЕСТЬNULL(ТоварыВЯчейкахОстатки.КОтборуОстаток, 0) <> 0
	|			ИЛИ ЕСТЬNULL(ТоварыВЯчейкахОстатки.КРазмещениюОстаток, 0) <> 0
	|			ИЛИ (НЕ БлокировкиСкладскихЯчеек.ТипБлокировки ЕСТЬ NULL ))
	|
	|УПОРЯДОЧИТЬ ПО
	|	Ячейка";
	Запрос.УстановитьПараметр("ТаблицаНоменклатуры", Товары.Выгрузить());
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		ТекстСообщения = НСтр("ru='Невозможно заблокировать ячейку %Ячейка%:
		|%Причина%'");
		
		Если Выборка.ЕстьБлокировкиПоЯчейке Тогда
			ТекстПричины = НСтр("ru='ячейка заблокирована другим документом'");
		Иначе	
			Если Выборка.ЕстьЗаданияНаОтбор <> 0
				И Выборка.ЕстьЗаданияНаРазмещение <> 0 Тогда
				ТекстПричины = НСтр("ru='есть невыполненные задания на отбор и размещение товара в ячейку'");
			ИначеЕсли Выборка.ЕстьЗаданияНаОтбор <> 0 Тогда
				ТекстПричины = НСтр("ru='есть невыполненные задания на отбор товара из ячейки'");
			ИначеЕсли Выборка.ЕстьЗаданияНаРазмещение <> 0 Тогда
				ТекстПричины = НСтр("ru='есть невыполненные задания на размещение в ячейку'");
			КонецЕсли;
		КонецЕсли;
		
		ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Причина%", ТекстПричины);
		ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Ячейка%", Выборка.Ячейка);
		
		Поле = ОбщегоНазначенияКлиентСервер.ПутьКТабличнойЧасти("Товары", Выборка.НомерСтроки, "Ячейка");
		
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения,ЭтотОбъект,Поле,"Объект",Отказ);
	КонецЦикла;
КонецПроцедуры

Процедура ПроверитьДругиеПересчеты(Отказ)
	
	Блокировка = Новый БлокировкаДанных;
	ЭлементБлокировки = Блокировка.Добавить("РегистрНакопления.ТоварыКОформлениюИзлишковНедостач");
	
	ЭлементБлокировки.Режим = РежимБлокировкиДанных.Разделяемый;
	ЭлементБлокировки.УстановитьЗначение("Склад", Склад);
	ЭлементБлокировки.УстановитьЗначение("Помещение", Помещение);
	ЭлементБлокировки.ИсточникДанных = Товары;
	ЭлементБлокировки.ИспользоватьИзИсточникаДанных("Номенклатура", "Номенклатура");
	ЭлементБлокировки.ИспользоватьИзИсточникаДанных("Характеристика", "Характеристика");
	ЭлементБлокировки.ИспользоватьИзИсточникаДанных("Серия", "Серия");
	
	СтатусБыл = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Ссылка, "Статус");
	
	Если Статус = Перечисления.СтатусыПересчетовТоваров.Выполнено
		ИЛИ СтатусБыл = Перечисления.СтатусыПересчетовТоваров.Выполнено Тогда
		ЭлементБлокировки.Режим = РежимБлокировкиДанных.Исключительный;
	Иначе
		ЭлементБлокировки.Режим = РежимБлокировкиДанных.Разделяемый;
	КонецЕсли;
	
	Если ПолучитьФункциональнуюОпцию("ИспользоватьРаспоряженияНаИнвентаризацию") Тогда
		ЭлементБлокировки.УстановитьЗначение("ДокументОснование", ДокументОснование);
	Иначе
		ЭлементБлокировки.УстановитьЗначение("ДокументОснование", Ссылка);
	КонецЕсли;
	
	Блокировка.Заблокировать();
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ТаблицаТовары.Номенклатура,
	|	ТаблицаТовары.Характеристика,
	|	ТаблицаТовары.Серия,
	|	ТаблицаТовары.КоличествоФакт,
	|	ТаблицаТовары.Количество,
	|	ТаблицаТовары.НомерСтроки
	|ПОМЕСТИТЬ ВТТаблицаТовары
	|ИЗ
	|	&ТаблицаТовары КАК ТаблицаТовары
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаИзменений.Номенклатура,
	|	ТаблицаИзменений.Характеристика,
	|	ТаблицаИзменений.Серия,
	|	МАКСИМУМ(ТаблицаИзменений.НомерСтроки) КАК НомерСтроки
	|ПОМЕСТИТЬ ВТИзмененияТоваров
	|ИЗ
	|	(ВЫБРАТЬ
	|		ПересчетТоваровТовары.Номенклатура КАК Номенклатура,
	|		ПересчетТоваровТовары.Характеристика КАК Характеристика,
	|		ПересчетТоваровТовары.Серия КАК Серия,
	|		1 КАК Проверка,
	|		-1 КАК НомерСтроки
	|	ИЗ
	|		Документ.ПересчетТоваров.Товары КАК ПересчетТоваровТовары
	|	ГДЕ
	|		ПересчетТоваровТовары.Ссылка = &Ссылка
	|		И ПересчетТоваровТовары.Ссылка.Склад = &Склад
	|		И ПересчетТоваровТовары.Ссылка.Помещение = &Помещение
	|		И ПересчетТоваровТовары.Ссылка.Проведен
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ПересчетТоварыОбъект.Номенклатура,
	|		ПересчетТоварыОбъект.Характеристика,
	|		ПересчетТоварыОбъект.Серия,
	|		-1,
	|		ПересчетТоварыОбъект.НомерСтроки
	|	ИЗ
	|		ВТТаблицаТовары КАК ПересчетТоварыОбъект) КАК ТаблицаИзменений
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаИзменений.Номенклатура,
	|	ТаблицаИзменений.Характеристика,
	|	ТаблицаИзменений.Серия
	|
	|ИМЕЮЩИЕ
	|	СУММА(ТаблицаИзменений.Проверка) < 0
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаИзменений.Номенклатура,
	|	ТаблицаИзменений.Характеристика,
	|	ТаблицаИзменений.Серия,
	|	МАКСИМУМ(ТаблицаИзменений.НомерСтроки) КАК НомерСтроки
	|ПОМЕСТИТЬ ВТИзмененияКОформлению
	|ИЗ
	|	(ВЫБРАТЬ
	|		ПересчетТоваровТовары.Номенклатура КАК Номенклатура,
	|		ПересчетТоваровТовары.Характеристика КАК Характеристика,
	|		ПересчетТоваровТовары.Серия КАК Серия,
	|		1 КАК Проверка,
	|		ПересчетТоваровТовары.КоличествоФакт - ПересчетТоваровТовары.Количество КАК КОформлению,
	|		-1 КАК НомерСтроки
	|	ИЗ
	|		Документ.ПересчетТоваров.Товары КАК ПересчетТоваровТовары
	|	ГДЕ
	|		ПересчетТоваровТовары.Ссылка = &Ссылка
	|		И ПересчетТоваровТовары.Ссылка.Склад = &Склад
	|		И ПересчетТоваровТовары.Ссылка.Помещение = &Помещение
	|		И ПересчетТоваровТовары.Ссылка.Проведен
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ПересчетТоварыОбъект.Номенклатура,
	|		ПересчетТоварыОбъект.Характеристика,
	|		ПересчетТоварыОбъект.Серия,
	|		-1,
	|		-(ПересчетТоварыОбъект.КоличествоФакт - ПересчетТоварыОбъект.Количество),
	|		ПересчетТоварыОбъект.НомерСтроки
	|	ИЗ
	|		ВТТаблицаТовары КАК ПересчетТоварыОбъект) КАК ТаблицаИзменений
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаИзменений.Номенклатура,
	|	ТаблицаИзменений.Характеристика,
	|	ТаблицаИзменений.Серия
	|
	|ИМЕЮЩИЕ
	|	(СУММА(ТаблицаИзменений.КОформлению) <> 0
	|			И СУММА(ТаблицаИзменений.Проверка) = 0
	|		ИЛИ СУММА(ТаблицаИзменений.Проверка) < 0)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТИзменения.НомерСтроки
	|ИЗ
	|	Документ.ПересчетТоваров.Товары КАК ПересчетТоваровТовары
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТИзмененияТоваров КАК ВТИзменения
	|		ПО (ВТИзменения.Номенклатура = ПересчетТоваровТовары.Номенклатура)
	|			И (ВТИзменения.Характеристика = ПересчетТоваровТовары.Характеристика)
	|			И (ВТИзменения.Серия = ПересчетТоваровТовары.Серия)
	|ГДЕ
	|	ПересчетТоваровТовары.Ссылка.Склад = &Склад
	|	И ПересчетТоваровТовары.Ссылка.Помещение = &Помещение
	|	И ПересчетТоваровТовары.Ссылка.Проведен
	|	И НЕ ПересчетТоваровТовары.Ссылка = &Ссылка
	|	И ПересчетТоваровТовары.Ссылка.Статус В (ЗНАЧЕНИЕ(Перечисление.СтатусыПересчетовТоваров.ВРаботе), ЗНАЧЕНИЕ(Перечисление.СтатусыПересчетовТоваров.ВнесениеРезультатов))
	|
	|СГРУППИРОВАТЬ ПО
	|	ВТИзменения.НомерСтроки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	МАКСИМУМ(ТоварыКОформлению.НомерСтроки) КАК НомерСтроки
	|ИЗ
	|	(ВЫБРАТЬ
	|		ТоварыКОформлениюИзлишковНедостачОстатки.КОформлениюАктовОстаток КАК КОформлениюАктовОстаток,
	|		ТоварыКОформлениюИзлишковНедостачОстатки.КОформлениюОрдеровОстаток КАК КОформлениюОрдеровОстаток,
	|		ВТИзменения.НомерСтроки КАК НомерСтроки,
	|		ТоварыКОформлениюИзлишковНедостачОстатки.Номенклатура КАК Номенклатура,
	|		ТоварыКОформлениюИзлишковНедостачОстатки.Характеристика КАК Характеристика,
	|		ТоварыКОформлениюИзлишковНедостачОстатки.Серия КАК Серия
	|	ИЗ
	|		РегистрНакопления.ТоварыКОформлениюИзлишковНедостач.Остатки(
	|				,
	|				Склад = &Склад
	|					И Помещение = &Помещение) КАК ТоварыКОформлениюИзлишковНедостачОстатки
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТИзмененияКОформлению КАК ВТИзменения
	|			ПО (ВТИзменения.Номенклатура = ТоварыКОформлениюИзлишковНедостачОстатки.Номенклатура)
	|				И (ВТИзменения.Характеристика = ТоварыКОформлениюИзлишковНедостачОстатки.Характеристика)
	|				И (ВТИзменения.Серия = ТоварыКОформлениюИзлишковНедостачОстатки.Серия)
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ВЫБОР
	|			КОГДА ТоварыКОформлениюИзлишковНедостач.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|				ТОГДА -ТоварыКОформлениюИзлишковНедостач.КОформлениюАктов
	|			ИНАЧЕ ТоварыКОформлениюИзлишковНедостач.КОформлениюАктов
	|		КОНЕЦ,
	|		ВЫБОР
	|			КОГДА ТоварыКОформлениюИзлишковНедостач.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|				ТОГДА -ТоварыКОформлениюИзлишковНедостач.КОформлениюОрдеров
	|			ИНАЧЕ ТоварыКОформлениюИзлишковНедостач.КОформлениюОрдеров
	|		КОНЕЦ,
	|		ВТИзменения.НомерСтроки,
	|		ТоварыКОформлениюИзлишковНедостач.Номенклатура,
	|		ТоварыКОформлениюИзлишковНедостач.Характеристика,
	|		ТоварыКОформлениюИзлишковНедостач.Серия
	|	ИЗ
	|		РегистрНакопления.ТоварыКОформлениюИзлишковНедостач КАК ТоварыКОформлениюИзлишковНедостач
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТИзмененияКОформлению КАК ВТИзменения
	|			ПО (ВТИзменения.Номенклатура = ТоварыКОформлениюИзлишковНедостач.Номенклатура)
	|				И (ВТИзменения.Характеристика = ТоварыКОформлениюИзлишковНедостач.Характеристика)
	|				И (ВТИзменения.Серия = ТоварыКОформлениюИзлишковНедостач.Серия)
	|	ГДЕ
	|		ТоварыКОформлениюИзлишковНедостач.Регистратор = &Ссылка) КАК ТоварыКОформлению
	|
	|СГРУППИРОВАТЬ ПО
	|	ТоварыКОформлению.Номенклатура,
	|	ТоварыКОформлению.Характеристика,
	|	ТоварыКОформлению.Серия
	|
	|ИМЕЮЩИЕ
	|	ВЫБОР
	|		КОГДА &ИспользуютсяОрдера
	|			ТОГДА СУММА(ТоварыКОформлению.КОформлениюОрдеровОстаток)
	|		ИНАЧЕ СУММА(ТоварыКОформлению.КОформлениюАктовОстаток)
	|	КОНЕЦ <> 0";
	
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	Запрос.УстановитьПараметр("Склад", Склад);
	Запрос.УстановитьПараметр("Помещение", Помещение);
	Запрос.УстановитьПараметр("ТаблицаТовары", Товары.Выгрузить());
	ИспользуютсяОрдера = ПолучитьФункциональнуюОпцию("ИспользоватьОрдерныеСклады")
		И ПолучитьФункциональнуюОпцию("ИспользоватьОрдернуюСхемуПриОтраженииИзлишковНедостач", Новый Структура("Склад",Склад));
	Запрос.УстановитьПараметр("ИспользуютсяОрдера", ИспользуютсяОрдера);
	
	МассивРезультатовЗапроса = Запрос.ВыполнитьПакет();
	ВыборкаПересчеты = МассивРезультатовЗапроса[3].Выбрать();
	Пока ВыборкаПересчеты.Следующий() Цикл
		ТекстСообщения = НСтр("ru = 'Товар в строке %НомерСтроки% уже включен в пересчеты товаров в статусе ""В работе"" или ""Внесение результатов"".'");
		ТекстСообщения = СтрЗаменить(ТекстСообщения, "%НомерСтроки%", ВыборкаПересчеты.НомерСтроки);
		Поле = ОбщегоНазначенияКлиентСервер.ПутьКТабличнойЧасти("Товары", ВыборкаПересчеты.НомерСтроки, "НомерСтроки");
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения,ЭтотОбъект,Поле,"Объект",Отказ);
	КонецЦикла;
	
	ВыборкаКОформлению = МассивРезультатовЗапроса[4].Выбрать();
	Пока ВыборкаКОформлению.Следующий() Цикл
		ТекстСообщения = НСтр("ru = 'По товару в строке %НомерСтроки% есть ненулевые остатки к оформлению излишков или недостач.'");
		ТекстСообщения = СтрЗаменить(ТекстСообщения, "%НомерСтроки%", ВыборкаКОформлению.НомерСтроки);
		Поле = ОбщегоНазначенияКлиентСервер.ПутьКТабличнойЧасти("Товары", ВыборкаКОформлению.НомерСтроки, "НомерСтроки");
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения,ЭтотОбъект,Поле,"Объект",Отказ);
	КонецЦикла;
	
КонецПроцедуры

Процедура СформироватьСписокРегистровДляКонтроля()

	Массив = Новый Массив;

	ДополнительныеСвойства.ДляПроведения.Вставить("РегистрыДляКонтроля", Массив);

КонецПроцедуры

#КонецЕсли