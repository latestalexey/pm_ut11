#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

////////////////////////////////////////////////////////////////////////////////
// ПРОГРАММНЫЙ ИНТЕРФЕЙС

//Имена реквизитов, от значений которых зависят параметры указания серий
//
//	Возвращаемое значение:
//		Строка - имена реквизитов, перечисленные через запятую
//
Функция ИменаРеквизитовДляЗаполненияПараметровУказанияСерий() Экспорт
	ИменаРеквизитов = "Склад,Помещение";
	
	Возврат ИменаРеквизитов;
КонецФункции

//Возвращает параметры указания серий для товаров, указанных в документе
//
//	Параметры
//			Объект - Структура - структура значений реквизитов объекта, необходимых для заполнения параметров указания серий
//	Возвращаемое значение
//			Тип Структура
//				Состав полей задается в функции ОбработкаТабличнойЧастиКлиентСервер.ПараметрыУказанияСерий
//
Функция ПараметрыУказанияСерий(Объект) Экспорт
	
	ПараметрыУказанияСерий = НоменклатураКлиентСервер.ПараметрыУказанияСерий();
	
	ПараметрыУказанияСерий.ИспользоватьСерииНоменклатуры = 
						ПолучитьФункциональнуюОпцию("ИспользоватьСерииНоменклатурыСклад",Новый Структура("Склад",Объект.Склад));
		
	ПараметрыУказанияСерий.СкладскиеОперации.Добавить(Перечисления.СкладскиеОперации.Пересчет);
	
	Если СкладыСервер.ИспользоватьАдресноеХранение(Объект.Склад,Объект.Помещение) Тогда
		ПараметрыУказанияСерий.ПоляСвязи.Добавить("Ячейка");
		ПараметрыУказанияСерий.ПоляСвязи.Добавить("Упаковка");
	КонецЕсли;
	
	ПараметрыУказанияСерий.ЭтоОрдер = Истина;
	ПараметрыУказанияСерий.ИмяТЧСерии = "Товары";
	
	Возврат ПараметрыУказанияСерий;
КонецФункции

////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

////////////////////////////////////////////////////////////////////////////////
// Проведение

Процедура ИнициализироватьДанныеДокумента(ДокументСсылка, ДополнительныеСвойства) Экспорт

	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Ссылка", ДокументСсылка);
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ПересчетТоваров.Дата КАК Период,
	|	ПересчетТоваров.Статус КАК Статус,
	|	ПересчетТоваров.Склад КАК Склад,
	|	ПересчетТоваров.Склад.ИспользоватьОрдернуюСхемуПриОтраженииИзлишковНедостач КАК ИспользоватьОрдернуюСхемуПриОтраженииИзлишковНедостач,
	|	ВЫБОР
	|		КОГДА ПересчетТоваров.Склад.ИспользоватьСкладскиеПомещения
	|			ТОГДА ПересчетТоваров.Помещение.ИспользоватьАдресноеХранение
	|		ИНАЧЕ ПересчетТоваров.Склад.ИспользоватьАдресноеХранение
	|	КОНЕЦ КАК ИспользоватьАдресноеХранение,
	|	ПересчетТоваров.Помещение КАК Помещение,
	|	ПересчетТоваров.БлокироватьЯчейки КАК БлокироватьЯчейки,
	|	ВЫБОР
	|		КОГДА ПересчетТоваров.ДокументОснование = ЗНАЧЕНИЕ(Документ.РаспоряжениеНаИнвентаризациюТоваров.ПустаяСсылка)
	|			ТОГДА &Ссылка
	|		ИНАЧЕ ПересчетТоваров.ДокументОснование
	|	КОНЕЦ КАК ДокументОснование
	|ИЗ
	|	Документ.ПересчетТоваров КАК ПересчетТоваров
	|ГДЕ
	|	ПересчетТоваров.Ссылка = &Ссылка";
	Реквизиты = Запрос.Выполнить().Выбрать();
	Реквизиты.Следующий();

	Запрос.УстановитьПараметр("Статус",      Реквизиты.Статус);
	Запрос.УстановитьПараметр("Период",      Реквизиты.Период);
	Запрос.УстановитьПараметр("ИспользоватьАдресноеХранение", Реквизиты.ИспользоватьАдресноеХранение);
	Запрос.УстановитьПараметр("ИспользоватьОрдернуюСхемуПриОтраженииИзлишковНедостач",Реквизиты.ИспользоватьОрдернуюСхемуПриОтраженииИзлишковНедостач);
	Запрос.УстановитьПараметр("Склад", Реквизиты.Склад);
	Запрос.УстановитьПараметр("Помещение", Реквизиты.Помещение);
 	Запрос.УстановитьПараметр("ДокументОснование", Реквизиты.ДокументОснование);
 	Запрос.УстановитьПараметр("БлокироватьЯчейки", Реквизиты.БлокироватьЯчейки);
                               
	Запрос.Текст =
	"
	// 0 ТаблицаТоварыКОформлениюИзлишковНедостач
	|ВЫБРАТЬ
	|	ПересчетТоваровТовары.Номенклатура КАК Номенклатура,
	|	ПересчетТоваровТовары.Характеристика КАК Характеристика,
	|	ВЫБОР
	|		КОГДА &ИспользоватьОрдернуюСхемуПриОтраженииИзлишковНедостач
	|			ТОГДА СУММА(ПересчетТоваровТовары.КоличествоФакт - ПересчетТоваровТовары.Количество)
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК КОформлениюОрдеров,
	|	ВЫБОР
	|		КОГДА &ИспользоватьОрдернуюСхемуПриОтраженииИзлишковНедостач
	|			ТОГДА 0
	|		ИНАЧЕ СУММА(ПересчетТоваровТовары.КоличествоФакт - ПересчетТоваровТовары.Количество)
	|	КОНЕЦ КАК КОформлениюАктов,
	|	ПересчетТоваровТовары.Серия КАК Серия,
	|	&Период КАК Период,
	|	&Склад КАК Склад,
	|	&Помещение КАК Помещение,
	|	&ДокументОснование КАК ДокументОснование,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	МАКСИМУМ(ПересчетТоваровТовары.НомерСтроки) КАК НомерСтроки
	|ИЗ
	|	Документ.ПересчетТоваров.Товары КАК ПересчетТоваровТовары
	|ГДЕ
	|	&Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыПересчетовТоваров.Выполнено)
	|	И ПересчетТоваровТовары.Ссылка = &Ссылка
	|
	|СГРУППИРОВАТЬ ПО
	|	ПересчетТоваровТовары.Номенклатура,
	|	ПересчетТоваровТовары.Характеристика,
	|	ПересчетТоваровТовары.Серия
	|
	|ИМЕЮЩИЕ
	|	СУММА(ПересчетТоваровТовары.КоличествоФакт - ПересчетТоваровТовары.Количество) > 0
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ПересчетТоваровТовары.Номенклатура,
	|	ПересчетТоваровТовары.Характеристика,
	|	ВЫБОР
	|		КОГДА &ИспользоватьОрдернуюСхемуПриОтраженииИзлишковНедостач
	|			ТОГДА -СУММА(ПересчетТоваровТовары.КоличествоФакт - ПересчетТоваровТовары.Количество)
	|		ИНАЧЕ 0
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА &ИспользоватьОрдернуюСхемуПриОтраженииИзлишковНедостач
	|			ТОГДА 0
	|		ИНАЧЕ -СУММА(ПересчетТоваровТовары.КоличествоФакт - ПересчетТоваровТовары.Количество)
	|	КОНЕЦ,
	|	ПересчетТоваровТовары.Серия КАК Серия,
	|	&Период,
	|	&Склад,
	|	&Помещение,
	|	&ДокументОснование,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход),
	|	МАКСИМУМ(ПересчетТоваровТовары.НомерСтроки)
	|ИЗ
	|	Документ.ПересчетТоваров.Товары КАК ПересчетТоваровТовары
	|ГДЕ
	|	&Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыПересчетовТоваров.Выполнено)
	|	И ПересчетТоваровТовары.Ссылка = &Ссылка
	|
	|СГРУППИРОВАТЬ ПО
	|	ПересчетТоваровТовары.Номенклатура,
	|	ПересчетТоваровТовары.Характеристика,
	|	ПересчетТоваровТовары.Серия
	|
	|ИМЕЮЩИЕ
	|	СУММА(ПересчетТоваровТовары.КоличествоФакт - ПересчетТоваровТовары.Количество) < 0
	|;
	// 1 ТаблицаТоварыВСкладскихЯчейках
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаТовары.Номенклатура КАК Номенклатура,
	|	ТаблицаТовары.Упаковка КАК Упаковка,
	|	ТаблицаТовары.Характеристика КАК Характеристика,
	|	ВЫБОР
	|		КОГДА ТаблицаТовары.СтатусУказанияСерий В (4, 6, 8, 10)
	|			ТОГДА ТаблицаТовары.Серия
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)
	|	КОНЕЦ КАК Серия,
	|	ТаблицаТовары.КоличествоУпаковокФакт - ТаблицаТовары.КоличествоУпаковок КАК ВНаличии,
	|	ТаблицаТовары.Ячейка КАК Ячейка,
	|	&Период КАК Период,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	ТаблицаТовары.НомерСтроки КАК НомерСтроки
	|ИЗ
	|	Документ.ПересчетТоваров.Товары КАК ТаблицаТовары
	|ГДЕ
	|	&ИспользоватьАдресноеХранение
	|	И &Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыПересчетовТоваров.Выполнено)
	|	И ТаблицаТовары.Ссылка = &Ссылка
	|	И ТаблицаТовары.КоличествоУпаковокФакт - ТаблицаТовары.КоличествоУпаковок > 0
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ТаблицаТовары.Номенклатура,
	|	ТаблицаТовары.Упаковка,
	|	ТаблицаТовары.Характеристика,
	|	ВЫБОР
	|		КОГДА ТаблицаТовары.СтатусУказанияСерий В (4, 6, 8, 10)
	|			ТОГДА ТаблицаТовары.Серия
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)
	|	КОНЕЦ КАК Серия,
	|	-(ТаблицаТовары.КоличествоУпаковокФакт - ТаблицаТовары.КоличествоУпаковок),
	|	ТаблицаТовары.Ячейка,
	|	&Период,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход),
	|	ТаблицаТовары.НомерСтроки
	|ИЗ
	|	Документ.ПересчетТоваров.Товары КАК ТаблицаТовары
	|ГДЕ
	|	&ИспользоватьАдресноеХранение
	|	И &Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыПересчетовТоваров.Выполнено)
	|	И ТаблицаТовары.Ссылка = &Ссылка
	|	И ТаблицаТовары.КоличествоУпаковокФакт - ТаблицаТовары.КоличествоУпаковок < 0
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки
	|;
	|
	// 2 ТаблицаБлокировкиСкладскихЯчеек
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПересчетТоваровТовары.Ячейка КАК Ячейка,
	|	ЗНАЧЕНИЕ(Перечисление.ТипыБлокировокСкладскихЯчеек.Полная) КАК ТипБлокировки,
	|	МАКСИМУМ(ПересчетТоваровТовары.НомерСтроки) КАК НомерСтроки
	|ИЗ
	|	Документ.ПересчетТоваров.Товары КАК ПересчетТоваровТовары
	|ГДЕ
	|	&ИспользоватьАдресноеХранение
	|	И &БлокироватьЯчейки
	|	И ПересчетТоваровТовары.Ссылка = &Ссылка
	|
	|СГРУППИРОВАТЬ ПО
	|	ПересчетТоваровТовары.Ячейка
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки
	|;	
	// 3 ТаблицаДвиженияСерийТоваров
	|ВЫБРАТЬ
	|	ТаблицаСерии.Номенклатура             КАК Номенклатура,
	|	ТаблицаСерии.Характеристика           КАК Характеристика,
	|	ТаблицаСерии.Серия                    КАК Серия,
	|	ТаблицаСерии.КоличествоФакт           КАК Количество,
	|	&Ссылка                               КАК Документ,
	|	&Период                               КАК Период,
	|	&Ссылка                               КАК Регистратор,
	|	&Склад                                КАК Склад,
	|	&Помещение                            КАК Помещение,
	|	ЗНАЧЕНИЕ(Перечисление.СкладскиеОперации.Пересчет) КАК СкладскаяОперация	
	|ИЗ
	|	Документ.ПересчетТоваров.Товары КАК ТаблицаСерии
	|
	|ГДЕ
	|	ТаблицаСерии.Ссылка = &Ссылка
	|	И &Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыПересчетовТоваров.Выполнено)
	|	И ТаблицаСерии.Серия <> ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки";
	
	Результат = Запрос.ВыполнитьПакет();

	ДополнительныеСвойства.ТаблицыДляДвижений.Вставить("ТаблицаТоварыКОформлениюИзлишковНедостач", Результат[0].Выгрузить());
 	ДополнительныеСвойства.ТаблицыДляДвижений.Вставить("ТаблицаТоварыВСкладскихЯчейках",           Результат[1].Выгрузить());
  	ДополнительныеСвойства.ТаблицыДляДвижений.Вставить("ТаблицаБлокировкиСкладскихЯчеек",          Результат[2].Выгрузить());
  	ДополнительныеСвойства.ТаблицыДляДвижений.Вставить("ТаблицаДвиженияСерийТоваров",              Результат[3].Выгрузить());

КонецПроцедуры // ИнициализироватьДанныеДокумента()

////////////////////////////////////////////////////////////////////////////////
// Печать

Процедура Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "ЗаданиеНаПересчет") Тогда
		
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(
			КоллекцияПечатныхФорм,
			"ЗаданиеНаПересчет",
			"Задание на пересчет товаров",
			ПечатьЗадания(МассивОбъектов, ОбъектыПечати, ПараметрыПечати)
		);
	КонецЕсли;
	
КонецПроцедуры

Функция ПечатьЗадания(МассивОбъектов, ОбъектыПечати, ПараметрыПечати)
	КолонкаКодов = ФормированиеПечатныхФорм.ИмяДополнительнойКолонки();
	
	ВыводитьКоды 	= ЗначениеЗаполнено(КолонкаКодов);
	ВыводитьГрадацииКачества    = ПараметрыПечати.ВыводитьГрадацииКачества;
	ВыводитьРезультатыПересчета = ПараметрыПечати.ВыводитьРезультатыПересчета;
	
	ТабличныйДокумент = Новый ТабличныйДокумент;
	ТабличныйДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_ПересчетТоваров_ЗаданиеНаПересчетТоваров";
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ПересчетТоваров.Ссылка КАК Ссылка,
	|	ПересчетТоваров.Представление КАК ПредставлениеДокумента,
	|	ПересчетТоваров.Дата КАК Дата,
	|	ПересчетТоваров.Номер КАК Номер,
	|	ПересчетТоваров.Склад КАК Склад,
	|	ПересчетТоваров.Помещение КАК Помещение,
	|	ПересчетТоваров.ЯчейкаКонсолидацииИзлишковТоваров КАК ЯчейкаИзлишков,
	|	ПересчетТоваров.ЯчейкаКонсолидацииИспорченныхТоваров КАК ЯчейкаИспорченных,
	|	ПРЕДСТАВЛЕНИЕ(ПересчетТоваров.Склад) КАК СкладПредставление,
	|	ПРЕДСТАВЛЕНИЕ(ПересчетТоваров.Помещение) КАК ПомещениеПредставление,
	|	ПересчетТоваров.Исполнитель.ФизическоеЛицо КАК Исполнитель,
	|	ПересчетТоваров.ПечататьКоличествоПоУчету КАК ПечататьКоличествоПоУчету,
	|	ПересчетТоваров.Статус КАК Статус
	|ИЗ
	|	Документ.ПересчетТоваров КАК ПересчетТоваров
	|ГДЕ
	|	ПересчетТоваров.Ссылка В(&МассивОбъектов)
	|
	|УПОРЯДОЧИТЬ ПО
	|	ПересчетТоваров.Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПересчетТоваровТовары.НомерСтроки 									КАК НомерСтроки,
	|	ПересчетТоваровТовары.Количество 									КАК Количество,
	|	ПересчетТоваровТовары.КоличествоУпаковок 							КАК КоличествоУпаковок,";
	Если ВыводитьРезультатыПересчета Тогда
		ТекстЗапроса = ТекстЗапроса + "
		|	ПересчетТоваровТовары.КоличествоФакт								КАК КоличествоФакт,
		|	ПересчетТоваровТовары.КоличествоУпаковокФакт						КАК КоличествоУпаковокФакт,";
	Иначе
		ТекстЗапроса = ТекстЗапроса + "
		|	0								                                   КАК КоличествоФакт,
		|	0						                                           КАК КоличествоУпаковокФакт,";
	КонецЕсли;
	ТекстЗапроса = ТекстЗапроса + "
	|	ПересчетТоваровТовары.Номенклатура.НаименованиеПолное 				КАК НоменклатураПредставление,
	|	ПересчетТоваровТовары.Характеристика.НаименованиеПолное 			КАК ХарактеристикаПредставление,
	|	ВЫБОР КОГДА ЕСТЬNULL(ПересчетТоваровТовары.Упаковка.Коэффициент, 1) = 1
	|		ТОГДА НЕОПРЕДЕЛЕНО
	|		ИНАЧЕ ПересчетТоваровТовары.Упаковка.Наименование
	|	КОНЕЦ 																КАК УпаковкаПредставление,
	|	ПересчетТоваровТовары.Серия.Наименование                			КАК СерияПредставление,
	|	ПРЕДСТАВЛЕНИЕ(ПересчетТоваровТовары.Номенклатура.ЕдиницаИзмерения) 	КАК ЕдиницаИзмеренияПредставлениеНоменклатура,
	|	ПРЕДСТАВЛЕНИЕ(ПересчетТоваровТовары.Упаковка.ЕдиницаИзмерения) 		КАК ЕдиницаИзмеренияПредставлениеУпаковка,
	|	ПРЕДСТАВЛЕНИЕ(ПересчетТоваровТовары.Ячейка) 						КАК ЯчейкаПредставление,
	|	ПересчетТоваровТовары.Номенклатура.Код 								КАК Код,
	|	ПересчетТоваровТовары.Номенклатура.Артикул 							КАК Артикул,
	|	ПересчетТоваровТовары.Ссылка 										КАК Ссылка
	|ИЗ
	|	Документ.ПересчетТоваров.Товары КАК ПересчетТоваровТовары
	|ГДЕ
	|	ПересчетТоваровТовары.Ссылка В(&МассивОбъектов)
	|
	|УПОРЯДОЧИТЬ ПО
	|	Ссылка,
	|	НомерСтроки
	|ИТОГИ ПО
	|	Ссылка";
	Запрос = Новый Запрос;
	Запрос.Текст = ТекстЗапроса; 
	Запрос.УстановитьПараметр("МассивОбъектов", МассивОбъектов);
	
	Результаты = Запрос.ВыполнитьПакет();
	
	ВыборкаПоДокументам = Результаты[0].Выбрать();
	ВыборкаПоТабличнымЧастям = Результаты[1].Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	ПервыйДокумент = Истина;
	
	
	Если ВыводитьРезультатыПересчета Тогда
		СинонимДокумента = НСтр("ru='Результаты пересчета товаров'");
	Иначе
		СинонимДокумента = НСтр("ru='Задание на пересчет товаров'");
	КонецЕсли;
	
	Пока ВыборкаПоДокументам.Следующий() Цикл
		РеквизитыДокумента = Новый Структура("Номер, Дата, Префикс");
		ЗаполнитьЗначенияСвойств(РеквизитыДокумента, ВыборкаПоДокументам);
		Заголовок = ОбщегоНазначенияУТКлиентСервер.СформироватьЗаголовокДокумента(РеквизитыДокумента, СинонимДокумента);
		
		Если ВыводитьРезультатыПересчета
			И Не ВыборкаПоДокументам.Статус = Перечисления.СтатусыПересчетовТоваров.Выполнено Тогда
			
			ТекстСообщения = НСтр("ru = 'Документ ""%ПредставлениеДокумента%"" находится в статусе ""%Статус%"". Печать результатов пересчета возможна только в статусе ""Выполнено""'");
			
			РеквизитыДокумента.Вставить("Представление",ВыборкаПоДокументам.ПредставлениеДокумента);
			ПредставлениеДокумента = ОбщегоНазначенияУТКлиентСервер.СформироватьЗаголовокДокумента(РеквизитыДокумента);
			
			ТекстСообщения = СтрЗаменить(ТекстСообщения,"%ПредставлениеДокумента%",ПредставлениеДокумента);
			ТекстСообщения = СтрЗаменить(ТекстСообщения,"%Статус%",ВыборкаПоДокументам.Статус);
			
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения);
			Продолжить;
			
		КонецЕсли;

		
		ВыводитьПоУчету = ВыборкаПоДокументам.ПечататьКоличествоПоУчету Или ВыводитьРезультатыПересчета;
		ПоАдресномуСкладу = СкладыСервер.ИспользоватьАдресноеХранение(ВыборкаПоДокументам.Склад, ВыборкаПоДокументам.Помещение);
		Макет = УправлениеПечатью.ПолучитьМакет("Документ.ПересчетТоваров.ПФ_MXL_ЗаданиеПересчетТоваров");
			
		ОбластьЗаголовок 		= Макет.ПолучитьОбласть("Заголовок");
		ОбластьСкладИсполнитель = Макет.ПолучитьОбласть("СкладИсполнитель");
		ОбластьЯчейкаИзлишков	= Макет.ПолучитьОбласть("ОбластьЯчейкаИзлишков");
		ОбластьЯчейкаИспорченных	= Макет.ПолучитьОбласть("ОбластьЯчейкаИспорченных");
		
		Если ПоАдресномуСкладу Тогда
			
			Если ВыводитьКоды Тогда
				ОбластьШапкаТаблицыНачало 			= Макет.ПолучитьОбласть("ШапкаТаблицыЯчейкаКодУчет|НачалоСтроки");
				ОбластьСтрокаТаблицыНачало 			= Макет.ПолучитьОбласть("СтрокаТаблицыЯчейкаКодУчет|НачалоСтроки");
				ОбластьПодвалТаблицыНачало 			= Макет.ПолучитьОбласть("ПодвалТаблицыЯчейкаКодУчет|НачалоСтроки");
				ОбластьШапкаТаблицыКолонкаКодов 	= Макет.ПолучитьОбласть("ШапкаТаблицыЯчейкаКодУчет|КолонкаКодов");
				ОбластьСтрокаТаблицыКолонкаКодов 	= Макет.ПолучитьОбласть("СтрокаТаблицыЯчейкаКодУчет|КолонкаКодов");
				ОбластьПодвалТаблицыКолонкаКодов 	= Макет.ПолучитьОбласть("ПодвалТаблицыЯчейкаКодУчет|КолонкаКодов");
				ОбластьШапкаТаблицыКолонкаТоваров 	= Макет.ПолучитьОбласть("ШапкаТаблицыЯчейкаКодУчет|КолонкаТоваровКодЯчейка");
				ОбластьСтрокаТаблицыКолонкаТоваров 	= Макет.ПолучитьОбласть("СтрокаТаблицыЯчейкаКодУчет|КолонкаТоваровКодЯчейка");
				ОбластьПодвалТаблицыКолонкаТоваров 	= Макет.ПолучитьОбласть("ПодвалТаблицыЯчейкаКодУчет|КолонкаТоваровКодЯчейка");
			Иначе
				ОбластьШапкаТаблицыНачало 			= Макет.ПолучитьОбласть("ШапкаТаблицыЯчейка|НачалоСтроки");
				ОбластьСтрокаТаблицыНачало 			= Макет.ПолучитьОбласть("СтрокаТаблицыЯчейка|НачалоСтроки");
				ОбластьПодвалТаблицыНачало 			= Макет.ПолучитьОбласть("ПодвалТаблицыЯчейка|НачалоСтроки");
				ОбластьШапкаТаблицыКолонкаТоваров 	= Макет.ПолучитьОбласть("ШапкаТаблицыЯчейка|КолонкаТоваровБезКодовЯчейки");
				ОбластьСтрокаТаблицыКолонкаТоваров 	= Макет.ПолучитьОбласть("СтрокаТаблицыЯчейка|КолонкаТоваровБезКодовЯчейки");
				ОбластьПодвалТаблицыКолонкаТоваров 	= Макет.ПолучитьОбласть("ПодвалТаблицыЯчейка|КолонкаТоваровБезКодовЯчейки");
			КонецЕсли;
		Иначе 
			ОбластьШапкаТаблицыНачало 			= Макет.ПолучитьОбласть("ШапкаТаблицы|Номер");
			ОбластьСтрокаТаблицыНачало 			= Макет.ПолучитьОбласть("СтрокаТаблицы|Номер");
			ОбластьПодвалТаблицыНачало 			= Макет.ПолучитьОбласть("ПодвалТаблицы|Номер");
			
			Если ВыводитьКоды Тогда
				
				ОбластьШапкаТаблицыКолонкаКодов 	= Макет.ПолучитьОбласть("ШапкаТаблицыКодУчет|КолонкаЯчейкаКод");
				ОбластьСтрокаТаблицыКолонкаКодов 	= Макет.ПолучитьОбласть("СтрокаТаблицыКодУчет|КолонкаЯчейкаКод");
				ОбластьПодвалТаблицыКолонкаКодов 	= Макет.ПолучитьОбласть("ПодвалТаблицыКодУчет|КолонкаЯчейкаКод");
				ОбластьШапкаТаблицыКолонкаТоваров 	= Макет.ПолучитьОбласть("ШапкаТаблицыКодУчет|КолонкаТоваровБезКодовЯчейки");
				ОбластьСтрокаТаблицыКолонкаТоваров 	= Макет.ПолучитьОбласть("СтрокаТаблицыКодУчет|КолонкаТоваровБезКодовЯчейки");
				ОбластьПодвалТаблицыКолонкаТоваров 	= Макет.ПолучитьОбласть("ПодвалТаблицыКодУчет|КолонкаТоваровБезКодовЯчейки");
			Иначе 
				ОбластьШапкаТаблицыКолонкаТоваров 	= Макет.ПолучитьОбласть("ШапкаТаблицы|КолонкаТоваров");
				ОбластьСтрокаТаблицыКолонкаТоваров 	= Макет.ПолучитьОбласть("СтрокаТаблицы|КолонкаТоваров");
				ОбластьПодвалТаблицыКолонкаТоваров 	= Макет.ПолучитьОбласть("ПодвалТаблицы|КолонкаТоваров");
			КонецЕсли; 
		КонецЕсли;
		
				ОбластьШапкаТаблицыУпаковки 	= Макет.ПолучитьОбласть("ШапкаТаблицы|КолонкаУпаковок");
				ОбластьСтрокаТаблицыУпаковки 	= Макет.ПолучитьОбласть(?(ПоАдресномуСкладу, "СтрокаТаблицыЯчейка|КолонкаУпаковок", "СтрокаТаблицы|КолонкаУпаковок"));
				ОбластьПодвалТаблицыУпаковки 	= Макет.ПолучитьОбласть("ПодвалТаблицы|КолонкаУпаковок");
				
		Если ВыводитьКоды Тогда
			
			ОбластьШапкаТаблицыКолонкаКодов.Параметры.ИмяКолонкиКодов = КолонкаКодов; 
			
		КонецЕсли;	
		
		Если Не ВыводитьПоУчету Тогда
			Если ВыводитьГрадацииКачества Тогда
				ОбластьШапкаТаблицыФакт 	= Макет.ПолучитьОбласть("ШапкаТаблицыГрадацииКачества|ГрадацииКачества");
				ОбластьСтрокаТаблицыФакт 	= Макет.ПолучитьОбласть("СтрокаТаблицыГрадацииКачества|ГрадацииКачества");
				ОбластьПодвалТаблицыФакт 	= Макет.ПолучитьОбласть("ПодвалТаблицыГрадацииКачества|ГрадацииКачества");
			Иначе 	
				ОбластьШапкаТаблицыФакт 	= Макет.ПолучитьОбласть("ШапкаТаблицы|ФактБезКоличестваПоУчету");
				ОбластьСтрокаТаблицыФакт 	= Макет.ПолучитьОбласть("СтрокаТаблицы|ФактБезКоличестваПоУчету");
				ОбластьПодвалТаблицыФакт 	= Макет.ПолучитьОбласть("ПодвалТаблицы|ФактБезКоличестваПоУчету");
			КонецЕсли;	
		Иначе
			
			ОбластьШапкаТаблицыПоУчету 		= Макет.ПолучитьОбласть("ШапкаТаблицыКодУчет|КолонкаПоУчету");
			ОбластьСтрокаТаблицыПоУчету 	= Макет.ПолучитьОбласть("СтрокаТаблицыКодУчет|КолонкаПоУчету");
			ОбластьПодвалТаблицыПоУчету 	= Макет.ПолучитьОбласть("ПодвалТаблицыКодУчет|КолонкаПоУчету");
			Если ВыводитьГрадацииКачества Тогда
				ОбластьШапкаТаблицыФакт 	= Макет.ПолучитьОбласть("ШапкаТаблицыГрадацииКачества|ГрадацииКачества");
				ОбластьСтрокаТаблицыФакт 	= Макет.ПолучитьОбласть("СтрокаТаблицыГрадацииКачества|ГрадацииКачества");
				ОбластьПодвалТаблицыФакт 	= Макет.ПолучитьОбласть("ПодвалТаблицыГрадацииКачества|ГрадацииКачества");
			Иначе 
				ОбластьШапкаТаблицыФакт 	= Макет.ПолучитьОбласть("ШапкаТаблицыКодУчет|КолонкаФакт");
				ОбластьСтрокаТаблицыФакт 	= Макет.ПолучитьОбласть("СтрокаТаблицыКодУчет|КолонкаФакт");
				ОбластьПодвалТаблицыФакт 	= Макет.ПолучитьОбласть("ПодвалТаблицыКодУчет|КолонкаФакт");
			КонецЕсли;	
		КонецЕсли;		
		
			
		Если НЕ ВыборкаПоТабличнымЧастям.НайтиСледующий(Новый Структура("Ссылка",ВыборкаПоДокументам.Ссылка)) Тогда
			Продолжить;
		КонецЕсли;
			
		ВыборкаПоСтрокамТЧ = ВыборкаПоТабличнымЧастям.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		
		Если Не ПервыйДокумент Тогда
			ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		
		ПервыйДокумент = Ложь;
		НомерСтрокиНачало = ТабличныйДокумент.ВысотаТаблицы + 1;
		
		ОбластьЗаголовок.Параметры.ТекстЗаголовка = Заголовок;
		
		ШтрихкодированиеПечатныхФорм.ВывестиШтрихкодВТабличныйДокумент(ТабличныйДокумент, Макет, ОбластьЗаголовок, ВыборкаПоДокументам.Ссылка);
		ТабличныйДокумент.Вывести(ОбластьЗаголовок);
		
		ОбластьСкладИсполнитель.Параметры.ИсполнительПредставление	= ФизическиеЛица.ФамилияИнициалыФизЛица(ВыборкаПоДокументам.Исполнитель);
		ОбластьСкладИсполнитель.Параметры.СкладПредставление		= СкладыСервер.ПолучитьПредставлениеСклада(ВыборкаПоДокументам.СкладПредставление,ВыборкаПоДокументам.ПомещениеПредставление);
		
		ТабличныйДокумент.Вывести(ОбластьСкладИсполнитель);
		
		Если ЗначениеЗаполнено(ВыборкаПоДокументам.ЯчейкаИзлишков) Тогда
			ЗаполнитьЗначенияСвойств(ОбластьЯчейкаИзлишков.Параметры, ВыборкаПоДокументам);
			ТабличныйДокумент.Вывести(ОбластьЯчейкаИзлишков);
		КонецЕсли;
		
		Если ЗначениеЗаполнено(ВыборкаПоДокументам.ЯчейкаИспорченных) Тогда
			ЗаполнитьЗначенияСвойств(ОбластьЯчейкаИспорченных.Параметры, ВыборкаПоДокументам);
			ТабличныйДокумент.Вывести(ОбластьЯчейкаИспорченных);
		КонецЕсли;
		
		ТабличныйДокумент.Вывести(ОбластьШапкаТаблицыНачало);
		
		Если ВыводитьКоды Тогда
			ТабличныйДокумент.Присоединить(ОбластьШапкаТаблицыКолонкаКодов);
		КонецЕсли;
		ТабличныйДокумент.Присоединить(ОбластьШапкаТаблицыКолонкаТоваров);
		ТабличныйДокумент.Присоединить(ОбластьШапкаТаблицыУпаковки);
		
		Если ВыводитьПоУчету Тогда
			ТабличныйДокумент.ПолеСправа = 5;
			ТабличныйДокумент.Присоединить(ОбластьШапкаТаблицыПоУчету);
		КонецЕсли;
		
		ТабличныйДокумент.Присоединить(ОбластьШапкаТаблицыФакт);
		
		Пока ВыборкаПоСтрокамТЧ.Следующий() Цикл
			
			ОбластьСтрокаТаблицыНачало.Параметры.Заполнить(ВыборкаПоСтрокамТЧ);
			ТабличныйДокумент.Вывести(ОбластьСтрокаТаблицыНачало);
			
			Если ВыводитьКоды Тогда
				ОбластьСтрокаТаблицыКолонкаКодов.Параметры.Артикул = ВыборкаПоСтрокамТЧ[КолонкаКодов];
				ТабличныйДокумент.Присоединить(ОбластьСтрокаТаблицыКолонкаКодов);
			КонецЕсли;
			
			ОбластьСтрокаТаблицыКолонкаТоваров.Параметры.Товар = НоменклатураКлиентСервер.ПредставлениеНоменклатурыДляПечати(
				ВыборкаПоСтрокамТЧ.НоменклатураПредставление,
				ВыборкаПоСтрокамТЧ.ХарактеристикаПредставление,
				,
				ВыборкаПоСтрокамТЧ.СерияПредставление
			);
			ТабличныйДокумент.Присоединить(ОбластьСтрокаТаблицыКолонкаТоваров);
			
			ОбластьСтрокаТаблицыУпаковки.Параметры.Заполнить(ВыборкаПоСтрокамТЧ);
			
			ТабличныйДокумент.Присоединить(ОбластьСтрокаТаблицыУпаковки);	
			
			Если ВыводитьПоУчету Тогда
				ОбластьСтрокаТаблицыПоУчету.Параметры.Заполнить(ВыборкаПоСтрокамТЧ);
				ТабличныйДокумент.Присоединить(ОбластьСтрокаТаблицыПоУчету);
			КонецЕсли;
			
			ОбластьСтрокаТаблицыФакт.Параметры.Заполнить(ВыборкаПоСтрокамТЧ);
			
			ТабличныйДокумент.Присоединить(ОбластьСтрокаТаблицыФакт);
		КонецЦикла;
		
		ТабличныйДокумент.Вывести(ОбластьПодвалТаблицыНачало);
		Если ВыводитьКоды Тогда
			ТабличныйДокумент.Присоединить(ОбластьПодвалТаблицыКолонкаКодов);
		КонецЕсли;
		
		ТабличныйДокумент.Присоединить(ОбластьПодвалТаблицыКолонкаТоваров);
		ТабличныйДокумент.Присоединить(ОбластьПодвалТаблицыУпаковки);
		Если ВыводитьПоУчету Тогда
			ТабличныйДокумент.Присоединить(ОбластьПодвалТаблицыПоУчету);
		КонецЕсли;
		ТабличныйДокумент.Присоединить(ОбластьПодвалТаблицыФакт);
		УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабличныйДокумент, НомерСтрокиНачало, ОбъектыПечати, ВыборкаПоДокументам.Ссылка);
	КонецЦикла;
	
	ТабличныйДокумент.АвтоМасштаб = Истина;
	
	Возврат ТабличныйДокумент;	
КонецФункции

Функция ПолучитьДанныеДляПечатнойФормыОтборРазмещениеТоваров(ПараметрыПечати, МассивДокументов) Экспорт
	Запрос = Новый Запрос;
	Запрос.Текст = 
	
	"ВЫБРАТЬ
	|	ПРЕДСТАВЛЕНИЕ(ПересчетТоваров.Склад) КАК СкладПредставление,
	|	ПРЕДСТАВЛЕНИЕ(ПересчетТоваров.Помещение) КАК ПомещениеПредставление,
	|	ПРЕДСТАВЛЕНИЕ(ПересчетТоваров.Исполнитель.ФизическоеЛицо) КАК ИсполнительПредставление,
	|	ПРЕДСТАВЛЕНИЕ(ПересчетТоваров.Ссылка) КАК СсылкаПредставление,
	|	ПересчетТоваров.Ссылка КАК Ссылка,
	|	ПересчетТоваров.ПечататьКоличествоПоУчету КАК ВыводитьПоУчету,
	|	ПересчетТоваров.Дата КАК Дата,
	|	ПересчетТоваров.Номер КАК Номер,
	|	ЛОЖЬ КАК НарушенаОрдернаяСхема,
	|	ЛОЖЬ КАК СкладыВТЧ,
	|	NULL КАК ВидОперации,
	|	ВЫБОР
	|		КОГДА ПересчетТоваров.Склад.ИспользоватьСкладскиеПомещения
	|			ТОГДА ПересчетТоваров.Помещение.ИспользоватьАдресноеХранениеСправочно
	|		ИНАЧЕ ПересчетТоваров.Склад.ИспользоватьАдресноеХранениеСправочно
	|	КОНЕЦ КАК ИспользуетсяСправочноеХранение
	|ИЗ
	|	Документ.ПересчетТоваров КАК ПересчетТоваров
	|ГДЕ
	|	ПересчетТоваров.Ссылка В(&МассивОбъектов)
	|
	|УПОРЯДОЧИТЬ ПО
	|	Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаТовары.Ссылка КАК Ссылка,
	|	ТаблицаТовары.НомерСтроки КАК НомерСтроки,
	|	ТаблицаТовары.Номенклатура.Код КАК Код,
	|	ТаблицаТовары.Номенклатура КАК Номенклатура,
	|	ТаблицаТовары.Характеристика КАК Характеристика,
	|	ТаблицаТовары.Упаковка КАК Упаковка,
	|	ТаблицаТовары.Упаковка.Наименование КАК ПредставлениеУпаковки,
	|	ТаблицаТовары.Номенклатура.Артикул КАК Артикул,
	|	ТаблицаТовары.Номенклатура.НаименованиеПолное КАК ПредставлениеНоменклатуры,
	|	ПРЕДСТАВЛЕНИЕ(ТаблицаТовары.Номенклатура.ЕдиницаИзмерения) КАК ПредставлениеБазовойЕдиницыИзмерения,
	|	ТаблицаТовары.Характеристика.НаименованиеПолное КАК ПредставлениеХарактеристики,
	|	ТаблицаТовары.Серия.Наименование КАК ПредставлениеСерии,
	|	ВЫБОР
	|		КОГДА ТаблицаТовары.Упаковка = ЗНАЧЕНИЕ(Справочник.УпаковкиНоменклатуры.ПустаяСсылка)
	|			ТОГДА ПРЕДСТАВЛЕНИЕ(ТаблицаТовары.Номенклатура.ЕдиницаИзмерения)
	|		ИНАЧЕ ПРЕДСТАВЛЕНИЕ(ТаблицаТовары.Упаковка)
	|	КОНЕЦ КАК ПредставлениеЕдининицыИзмеренияУпаковки,
	|	ТаблицаТовары.Количество КАК КоличествоУпаковок,
	|	0 КАК Количество,
	|	ЕСТЬNULL(РазмещениеОсновнаяЯчейка.Ячейка.РабочийУчасток, ЗНАЧЕНИЕ(Справочник.РабочиеУчастки.ПустаяСсылка)) КАК РабочийУчасток,
	|	ЕСТЬNULL(РазмещениеОсновнаяЯчейка.Ячейка.ПорядокОбхода, 0) КАК ПорядокОбхода,
	|	ЕСТЬNULL(РазмещениеОсновнаяЯчейка.Ячейка, ЗНАЧЕНИЕ(Справочник.СкладскиеЯчейки.ПустаяСсылка)) КАК ОсновнаяЯчейка,
	|	ЕСТЬNULL(РазмещениеОстальныеЯчейки.Ячейка.ПорядокОбхода, 0) КАК ПорядокОбходаДополнительнаяЯчейка,
	|	ПРЕДСТАВЛЕНИЕ(РазмещениеОсновнаяЯчейка.Ячейка.РабочийУчасток) КАК ПредставлениеРабочегоУчастка,
	|	РазмещениеОсновнаяЯчейка.Ячейка.Код КАК ОсновнаяЯчейкаПредставление,
	|	РазмещениеОстальныеЯчейки.Ячейка.Код КАК ЯчейкаПредставление,
	|	ТаблицаТовары.Серия КАК Серия
	|ИЗ
	|	Документ.ПересчетТоваров.Товары КАК ТаблицаТовары
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РазмещениеНоменклатурыПоСкладскимЯчейкам КАК РазмещениеОсновнаяЯчейка
	|		ПО ТаблицаТовары.Номенклатура = РазмещениеОсновнаяЯчейка.Номенклатура
	|			И (РазмещениеОсновнаяЯчейка.ОсновнаяЯчейка = ИСТИНА)
	|			И (ВЫБОР
	|				КОГДА ТаблицаТовары.Ссылка.Склад.ИспользоватьСкладскиеПомещения
	|					ТОГДА РазмещениеОсновнаяЯчейка.Помещение = ТаблицаТовары.Ссылка.Помещение
	|				ИНАЧЕ
	|					РазмещениеОсновнаяЯчейка.Склад = ТаблицаТовары.Ссылка.Склад
	|			КОНЕЦ)
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РазмещениеНоменклатурыПоСкладскимЯчейкам КАК РазмещениеОстальныеЯчейки
	|		ПО ТаблицаТовары.Номенклатура = РазмещениеОстальныеЯчейки.Номенклатура
	|			И (РазмещениеОстальныеЯчейки.ОсновнаяЯчейка = ЛОЖЬ)
	|			И (ВЫБОР
	|				КОГДА ТаблицаТовары.Ссылка.Склад.ИспользоватьСкладскиеПомещения
	|					ТОГДА РазмещениеОстальныеЯчейки.Помещение = ТаблицаТовары.Ссылка.Помещение
	|				ИНАЧЕ
	|					РазмещениеОстальныеЯчейки.Склад = ТаблицаТовары.Ссылка.Склад
	|				КОНЕЦ)
	|ГДЕ
	|	ТаблицаТовары.Ссылка В(&МассивОбъектов)
	|	И ТаблицаТовары.Номенклатура.ТипНоменклатуры В
	|		(ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Товар),ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара))
	|	И ВЫБОР
	|			КОГДА ТаблицаТовары.Ссылка.Склад.ИспользоватьСкладскиеПомещения
	|				ТОГДА ТаблицаТовары.Ссылка.Помещение.ИспользоватьАдресноеХранениеСправочно
	|			ИНАЧЕ ТаблицаТовары.Ссылка.Склад.ИспользоватьАдресноеХранениеСправочно
	|		КОНЕЦ
	|
	|УПОРЯДОЧИТЬ ПО
	|	ТаблицаТовары.Ссылка,
	|	ПорядокОбхода,
	|	ОсновнаяЯчейкаПредставление,
	|	ПредставлениеНоменклатуры,
	|	ПредставлениеХарактеристики,
	|	ПредставлениеСерии,
	|	ПредставлениеУпаковки,
	|	ПорядокОбходаДополнительнаяЯчейка,
	|	ЯчейкаПредставление
	|ИТОГИ ПО
	|	Ссылка,
	|	РабочийУчасток,
	|	ОсновнаяЯчейка,
	|	Номенклатура,
	|	Характеристика,
	|	Серия,
	|	Упаковка";
	
	Запрос.УстановитьПараметр("МассивОбъектов", МассивДокументов); 
	МассивРезультатов 			= Запрос.ВыполнитьПакет();
	РезультатПоШапке			= МассивРезультатов[0];
	РезультатПоТабличнойЧасти 	= МассивРезультатов[1];
	СтруктураДанныхДляПечати 	= Новый Структура("РезультатПоШапке, РезультатПоТабличнойЧасти",РезультатПоШапке, РезультатПоТабличнойЧасти);
	
	Возврат СтруктураДанныхДляПечати;
			
КонецФункции

Функция ПолучитьЯчейкиИзлишковИБракаПоУмолчанию(Ссылка,Склад,Помещение) Экспорт
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	ПересчетТоваров.ЯчейкаКонсолидацииИзлишковТоваров,
	|	ПересчетТоваров.ЯчейкаКонсолидацииИспорченныхТоваров,
	|	ПересчетТоваров.ИспользоватьОтдельнуюЯчейкуИзлишков,
	|	ПересчетТоваров.ИспользоватьОтдельнуюЯчейкуПорчи
	|ИЗ
	|	Документ.ПересчетТоваров КАК ПересчетТоваров
	|ГДЕ
	|	ПересчетТоваров.Проведен
	|	И ПересчетТоваров.Склад = &Склад
	|	И ПересчетТоваров.Помещение = &Помещение
	|	И ПересчетТоваров.Ссылка <> &Ссылка
	|
	|УПОРЯДОЧИТЬ ПО
	|	ПересчетТоваров.Дата УБЫВ";
	
	Запрос.УстановитьПараметр("Склад",Склад);
	Запрос.УстановитьПараметр("Помещение",Помещение);
	Запрос.УстановитьПараметр("Ссылка",Ссылка);
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	СтруктураВозврата = Новый Структура("ЯчейкаКонсолидацииИзлишковТоваров,ЯчейкаКонсолидацииИспорченныхТоваров,ИспользоватьОтдельнуюЯчейкуИзлишков,ИспользоватьОтдельнуюЯчейкуПорчи");
	
	Если Выборка.Следующий() Тогда
		ЗаполнитьЗначенияСвойств(СтруктураВозврата,Выборка);
	КонецЕсли;
	
	Возврат СтруктураВозврата;
КонецФункции

Функция ПолучитьЗначениеПризнакаПечататьКоличествоПоУчетуПоУмолчанию(Ссылка,Ответственный) Экспорт
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ ПЕРВЫЕ 1
	|	ПересчетТоваров.ПечататьКоличествоПоУчету
	|ИЗ
	|	Документ.ПересчетТоваров КАК ПересчетТоваров
	|ГДЕ
	|	ПересчетТоваров.Проведен
	|	И ПересчетТоваров.Ответственный = &Ответственный
	|	И ПересчетТоваров.Ссылка <> &Ссылка
	|
	|УПОРЯДОЧИТЬ ПО
	|	ПересчетТоваров.Дата УБЫВ";
	
	Запрос.УстановитьПараметр("Ответственный",Ответственный);
	Запрос.УстановитьПараметр("Ссылка",Ссылка);
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Если Выборка.Следующий() Тогда
		ПечататьКоличествоПоУчету = Выборка.ПечататьКоличествоПоУчету;
	КонецЕсли;
	
	Возврат ПечататьКоличествоПоУчету;
КонецФункции

// Функция получает данные для формирования печатной формы ИНВ3
//
Функция ПолучитьДанныеДляПечатнойФормыИНВ3(ПараметрыПечати, ДокументОснование) Экспорт
	
	КолонкаКодов = ФормированиеПечатныхФорм.ИмяДополнительнойКолонки();
	Если Не ЗначениеЗаполнено(КолонкаКодов) Тогда
		КолонкаКодов = "Код";
	КонецЕсли;
		
	ЗапросПредварительныхДанных = Новый Запрос;
	ЗапросПредварительныхДанных.Текст = 
	"ВЫБРАТЬ
	|	РасчетСебестоимостиТоваровОрганизации.Ссылка.ПредварительныйРасчет КАК ПредварительныйРасчет,
	|	ПересчетТоваров.ИсточникИнформацииОЦенахДляПечати КАК ИсточникИнформацииОЦенахДляПечати
	|ИЗ
	|	Документ.ПересчетТоваров КАК ПересчетТоваров
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.РасчетСебестоимостиТоваров.Организации КАК РасчетСебестоимостиТоваровОрганизации
	|		ПО (РасчетСебестоимостиТоваровОрганизации.Организация = &Организация)
	|			И (РасчетСебестоимостиТоваровОрганизации.Ссылка.Проведен)
	|			И (РасчетСебестоимостиТоваровОрганизации.Ссылка.Дата МЕЖДУ НАЧАЛОПЕРИОДА(ПересчетТоваров.Дата, МЕСЯЦ) И КОНЕЦПЕРИОДА(ПересчетТоваров.Дата, МЕСЯЦ))
	|ГДЕ
	|	ПересчетТоваров.Ссылка = &ДокументОснование
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ ПЕРВЫЕ 1
	|	ДатыДокументов.Дата КАК Дата
	|ИЗ
	|	(ВЫБРАТЬ
	|		ПересортицаТоваров.Дата КАК Дата
	|	ИЗ
	|		Документ.ПересортицаТоваров КАК ПересортицаТоваров
	|	ГДЕ
	|		ПересортицаТоваров.Проведен = ИСТИНА
	|		И ПересортицаТоваров.Организация = &Организация
	|		И ПересортицаТоваров.ДокументОснование = &ДокументОснование
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ОприходованиеИзлишковТоваров.Дата
	|	ИЗ
	|		Документ.ОприходованиеИзлишковТоваров КАК ОприходованиеИзлишковТоваров
	|	ГДЕ
	|		ОприходованиеИзлишковТоваров.Проведен = ИСТИНА
	|		И ОприходованиеИзлишковТоваров.Организация = &Организация
	|		И ОприходованиеИзлишковТоваров.ДокументОснование = &ДокументОснование
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		СписаниеНедостачТоваров.Дата
	|	ИЗ
	|		Документ.СписаниеНедостачТоваров КАК СписаниеНедостачТоваров
	|	ГДЕ
	|		СписаниеНедостачТоваров.Проведен = ИСТИНА
	|		И СписаниеНедостачТоваров.Организация = &Организация
	|		И СписаниеНедостачТоваров.ДокументОснование = &ДокументОснование
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ПорчаТоваров.Дата
	|	ИЗ
	|		Документ.ПорчаТоваров КАК ПорчаТоваров
	|	ГДЕ
	|		ПорчаТоваров.Проведен = ИСТИНА
	|		И ПорчаТоваров.Организация = &Организация
	|		И ПорчаТоваров.ДокументОснование = &ДокументОснование) КАК ДатыДокументов
	|
	|УПОРЯДОЧИТЬ ПО
	|	Дата УБЫВ";
	
		
	ЗапросПредварительныхДанных.УстановитьПараметр("ДокументОснование", ДокументОснование);
	ЗапросПредварительныхДанных.УстановитьПараметр("Организация", ПараметрыПечати.Организация);
	
 	ПредварительныеДанные = ЗапросПредварительныхДанных.ВыполнитьПакет();
	
	ПредварительныеДанныеРезультат = ПредварительныеДанные[0].Выбрать();
	
	Если НЕ ПредварительныеДанныеРезультат.Следующий() Тогда
		Возврат Неопределено
	КонецЕсли;
	
	ПредварительныйРасчет = ПредварительныеДанныеРезультат.ПредварительныйРасчет;
	ИсточникИнформацииОЦенахДляПечати = ПредварительныеДанныеРезультат.ИсточникИнформацииОЦенахДляПечати;
	
	СтруктураРеквизитов = Новый Структура("Дата, ВидЦены, Склад");
	СтруктураРеквизитов = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(ДокументОснование,СтруктураРеквизитов);
	
	МаксДатаСкладскихАктовВыборка = ПредварительныеДанные[1].Выбрать();

	Если МаксДатаСкладскихАктовВыборка.Следующий() Тогда
		МаксДатаСкладскихАктов = МаксДатаСкладскихАктовВыборка.Дата;
	Иначе МаксДатаСкладскихАктов = СтруктураРеквизитов.Дата;	
	КонецЕсли;
	
	МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
		
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("ДокументОснование", ДокументОснование);
	Запрос.УстановитьПараметр("ДатаОстатков", КонецДня(МаксДатаСкладскихАктов));
	Запрос.УстановитьПараметр("Организация", ПараметрыПечати.Организация);
	Запрос.УстановитьПараметр("ВидЦены", СтруктураРеквизитов.ВидЦены);
	
	УчитыватьСебестоимостьТоваровПоВидамЗапасов = ПолучитьФункциональнуюОпцию("УчитыватьСебестоимостьТоваровПоВидамЗапасов");
	Запрос.УстановитьПараметр("УчитыватьСебестоимостьТоваровПоВидамЗапасов", УчитыватьСебестоимостьТоваровПоВидамЗапасов);
	
	// Ответственные лица в печатной форме
	СтруктураОтветственных = ОтветственныеЛицаСервер.ПолучитьОтветственныеЛицаОрганизации(ПараметрыПечати.Организация, СтруктураРеквизитов.Дата);
	Запрос.УстановитьПараметр("Руководитель", 		   СтруктураОтветственных.Руководитель);
	Запрос.УстановитьПараметр("ДолжностьРуководителя", СтруктураОтветственных.РуководительДолжность);
	Запрос.УстановитьПараметр("ГлавныйБухгалтер", 	   СтруктураОтветственных.ГлавныйБухгалтер);
	
	Если ИсточникИнформацииОЦенахДляПечати = Перечисления.ИсточникиИнформацииОЦенахДляПечати.ПоСебестоимости Тогда
		
		Если ПредварительныйРасчет = Null Тогда
			
			ТекстСообщения = НСтр("ru = 'Не удалось получить цены по себестоимости для документа %Документ%: на %Период% не произведен расчет себестоимости.'");
			
			ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Документ%", ДокументОснование.Ссылка);
			ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Период%", Формат(НачалоМесяца(МаксДатаСкладскихАктов),"ДЛФ=DD"));
			
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения);
			
			Возврат Неопределено;
			
		КонецЕсли;
		
		Если ПредварительныйРасчет Тогда
			
			ТекстСообщения = НСтр("ru = 'При печати документа %Документ% использовались данные предварительного расчета себестоимости.'");
			ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Документ%", ДокументОснование.Ссылка);
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения);
			
			Запрос.Текст =
			"ВЫБРАТЬ РАЗЛИЧНЫЕ
			|	ПересчетТоваровТовары.Номенклатура,
			|	ПересчетТоваровТовары.Характеристика,
			|	&Организация,
			|	ПересчетТоваровТовары.Ссылка.Склад КАК Склад
			|ПОМЕСТИТЬ ТаблицаНоменклатуры
			|ИЗ
			|	Документ.ПересчетТоваров.Товары КАК ПересчетТоваровТовары
			|ГДЕ
			|	ПересчетТоваровТовары.Ссылка = &ДокументОснование
			|	И ПересчетТоваровТовары.Ссылка.Проведен
			|	И ПересчетТоваровТовары.Ссылка.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыПересчетовТоваров.Выполнено)
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	ТоварыОрганизаций.Номенклатура КАК Номенклатура,
			|	ТоварыОрганизаций.Характеристика КАК Характеристика,
			|	ТоварыОрганизаций.ВидЗапасов КАК ВидЗапасов,
			|	ВЫБОР
			|		КОГДА ТоварыОрганизаций.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
			|			ТОГДА -ТоварыОрганизаций.Количество
			|		ИНАЧЕ ТоварыОрганизаций.Количество
			|	КОНЕЦ КАК КоличествоОтклонение,
			|	ВЫБОР
			|		КОГДА ТоварыОрганизаций.ВидЗапасов.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.КомиссионныйТовар)
			|			ТОГДА ВЫБОР
			|					КОГДА ТоварыОрганизаций.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
			|						ТОГДА -ТоварыОрганизаций.Количество
			|					ИНАЧЕ ТоварыОрганизаций.Количество
			|				КОНЕЦ
			|			ИНАЧЕ 0
			|	КОНЕЦ КАК КоличествоПоУчету
			|ПОМЕСТИТЬ ТоварыИнвентаризации
			|ИЗ
			|	РегистрНакопления.ТоварыОрганизаций КАК ТоварыОрганизаций
			|ГДЕ
			|	ТоварыОрганизаций.Регистратор ССЫЛКА Документ.СписаниеНедостачТоваров
			|	И ВЫРАЗИТЬ(ТоварыОрганизаций.Регистратор КАК Документ.СписаниеНедостачТоваров).ДокументОснование = &ДокументОснование
			|	И ТоварыОрганизаций.Организация = &Организация
			|
			|ОБЪЕДИНИТЬ ВСЕ
			|
			|ВЫБРАТЬ
			|	ТоварыОрганизаций.Номенклатура,
			|	ТоварыОрганизаций.Характеристика,
			|	ТоварыОрганизаций.ВидЗапасов,
			|	ВЫБОР
			|		КОГДА ТоварыОрганизаций.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
			|			ТОГДА -ТоварыОрганизаций.Количество
			|		ИНАЧЕ ТоварыОрганизаций.Количество
			|	КОНЕЦ,
			|	0
			|ИЗ
			|	РегистрНакопления.ТоварыОрганизаций КАК ТоварыОрганизаций
			|ГДЕ
			|	ТоварыОрганизаций.Регистратор ССЫЛКА Документ.ОприходованиеИзлишковТоваров
			|	И ВЫРАЗИТЬ(ТоварыОрганизаций.Регистратор КАК Документ.ОприходованиеИзлишковТоваров).ДокументОснование = &ДокументОснование
			|	И ТоварыОрганизаций.Организация = &Организация
			|
			|ОБЪЕДИНИТЬ ВСЕ
			|
			|ВЫБРАТЬ
			|	ТоварыОрганизаций.Номенклатура,
			|	ТоварыОрганизаций.Характеристика,
			|	ТоварыОрганизаций.ВидЗапасов,
			|	ВЫБОР
			|		КОГДА ТоварыОрганизаций.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
			|			ТОГДА -ТоварыОрганизаций.Количество
			|		ИНАЧЕ ТоварыОрганизаций.Количество
			|	КОНЕЦ,
			|	ВЫБОР
			|		КОГДА ТоварыОрганизаций.ВидЗапасов.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.КомиссионныйТовар)
			|			ТОГДА ВЫБОР
			|					КОГДА ТоварыОрганизаций.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
			|						ТОГДА -ТоварыОрганизаций.Количество
			|					ИНАЧЕ ТоварыОрганизаций.Количество
			|				КОНЕЦ
			|			ИНАЧЕ 0
			|	КОНЕЦ
			|ИЗ
			|	РегистрНакопления.ТоварыОрганизаций КАК ТоварыОрганизаций
			|ГДЕ
			|	ТоварыОрганизаций.Регистратор ССЫЛКА Документ.ПересортицаТоваров
			|	И ВЫРАЗИТЬ(ТоварыОрганизаций.Регистратор КАК Документ.ПересортицаТоваров).ДокументОснование = &ДокументОснование
			|	И ТоварыОрганизаций.Организация = &Организация
			|
			|ОБЪЕДИНИТЬ ВСЕ
			|
			|ВЫБРАТЬ
			|	ТоварыОрганизацийОстатки.Номенклатура,
			|	ТоварыОрганизацийОстатки.Характеристика,
			|	ТоварыОрганизацийОстатки.ВидЗапасов,
			|	0,
			|	ТоварыОрганизацийОстатки.КоличествоОстаток
			|ИЗ
			|	РегистрНакопления.ТоварыОрганизаций.Остатки(
			|			&ДатаОстатков,
			|			(Номенклатура, Характеристика, Организация, Склад) В
			|				(ВЫБРАТЬ
			|					Таблица.Номенклатура,
			|					Таблица.Характеристика,
			|					Таблица.Организация,
			|					Таблица.Склад
			|				ИЗ
			|					ТаблицаНоменклатуры КАК Таблица)
			|				И ВидЗапасов.ТипЗапасов <> ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.КомиссионныйТовар)) КАК ТоварыОрганизацийОстатки
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	СправочникКлючейАналитики.Ссылка КАК КлючАналитикиУчетаНоменклатуры,
			|	ТоварыИнвентаризации.Номенклатура,
			|	ТоварыИнвентаризации.Характеристика,
			|	ТоварыИнвентаризации.ВидЗапасов,
			|	&Организация КАК Организация,
			|	СУММА(ТоварыИнвентаризации.КоличествоПоУчету) КАК КоличествоПоУчету,
			|	СУММА(ТоварыИнвентаризации.КоличествоПоУчету + ТоварыИнвентаризации.КоличествоОтклонение) КАК КоличествоФактическое
			|ПОМЕСТИТЬ ТаблицаИнвентаризации
			|ИЗ
			|	ТоварыИнвентаризации КАК ТоварыИнвентаризации
			|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.КлючиАналитикиУчетаНоменклатуры КАК СправочникКлючейАналитики
			|		ПО (СправочникКлючейАналитики.Номенклатура = ТоварыИнвентаризации.Номенклатура)
			|			И (СправочникКлючейАналитики.Характеристика = ТоварыИнвентаризации.Характеристика)
			|			И (СправочникКлючейАналитики.Склад = ВЫРАЗИТЬ(&ДокументОснование КАК Документ.ПересчетТоваров).Склад)
			|
			|СГРУППИРОВАТЬ ПО
			|	ТоварыИнвентаризации.Номенклатура,
			|	ТоварыИнвентаризации.Характеристика,
			|	ТоварыИнвентаризации.ВидЗапасов,
			|	СправочникКлючейАналитики.Ссылка
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	&Руководитель КАК Руководитель,
			|	&ДолжностьРуководителя КАК ДолжностьРуководителя,
			|	&ГлавныйБухгалтер КАК ГлавныйБухгалтер,
			|	ВЫРАЗИТЬ(&Организация КАК Справочник.Организации).НаименованиеСокращенное КАК ОрганизацияПредставление,
			|	ВЫРАЗИТЬ(&Организация КАК Справочник.Организации).КодПоОКПО КАК ОрганизацияПоОКПО,
			|	ВЫРАЗИТЬ(&Организация КАК Справочник.Организации).Префикс КАК Префикс,
			|	ПересчетТоваров.Склад.ТекущийОтветственный КАК Кладовщик,
			|	ПересчетТоваров.Склад.ТекущаяДолжностьОтветственного КАК ДолжностьКладовщика,
			|	ПересчетТоваров.Склад.Наименование КАК ПодразделениеПредставление,
			|	ПересчетТоваров.Дата КАК ДатаНачала,
			|	ПересчетТоваров.Дата КАК ДатаОкончания,
			|	ПересчетТоваров.Дата КАК ОснованиеДата,
			|	ПересчетТоваров.Номер КАК ОснованиеНомер,
			|	ПересчетТоваров.Номер КАК НомерДокумента,
			|	ПересчетТоваров.Дата КАК ДатаДокумента,
			|	ПересчетТоваров.Ссылка КАК Ссылка,
			|	&ДатаОстатков КАК ДатаСнятияОстатков
			|ИЗ
			|	Документ.ПересчетТоваров КАК ПересчетТоваров
			|ГДЕ
			|	ПересчетТоваров.Ссылка = &ДокументОснование
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	ТаблицаИнвентаризации.Номенклатура,
			|	ТаблицаИнвентаризации.Характеристика.НаименованиеПолное КАК Характеристика,
			|	СУММА(ТаблицаИнвентаризации.КоличествоПоУчету) КАК КоличествоПоУчету,
			|	СУММА(ТаблицаИнвентаризации.КоличествоФактическое) КАК КоличествоФактическое,
			|	ЕСТЬNULL(ЦеныНоменклатуры.СтоимостьРегл, 0) КАК Цена,
			|	СУММА(ТаблицаИнвентаризации.КоличествоПоУчету * ЕСТЬNULL(ЦеныНоменклатуры.СтоимостьРегл, 0)) КАК СуммаПоУчету,
			|	СУММА(ТаблицаИнвентаризации.КоличествоФактическое * ЕСТЬNULL(ЦеныНоменклатуры.СтоимостьРегл, 0)) КАК СуммаФактическая,
			|	ТаблицаИнвентаризации.Номенклатура." + КолонкаКодов + " КАК ТоварКод,
			|	ТаблицаИнвентаризации.Номенклатура.ЕдиницаИзмерения.Код КАК ЕдиницаИзмеренияКод,
			|	ТаблицаИнвентаризации.Номенклатура.ЕдиницаИзмерения.Наименование КАК ЕдиницаИзмеренияНаименование,
			|	ТаблицаИнвентаризации.Номенклатура.НаименованиеПолное КАК ТоварНаименование,
			|	ЛОЖЬ КАК ЭтоВозвратнаяТара
			|ИЗ
			|	ТаблицаИнвентаризации КАК ТаблицаИнвентаризации
			|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СтоимостьТоваров.СрезПоследних(
			|				КОНЕЦПЕРИОДА(&ДатаОстатков, ДЕНЬ),
			|				(АналитикаУчетаНоменклатуры, ВидЗапасов, Организация) В
			|					(ВЫБРАТЬ
			|						Таблица.КлючАналитикиУчетаНоменклатуры,
			|						Таблица.ВидЗапасов,
			|						Таблица.Организация
			|					ИЗ
			|						ТаблицаИнвентаризации КАК Таблица)) КАК ЦеныНоменклатуры
			|		ПО ТаблицаИнвентаризации.КлючАналитикиУчетаНоменклатуры = ЦеныНоменклатуры.АналитикаУчетаНоменклатуры
			|			И (ТаблицаИнвентаризации.ВидЗапасов = ЦеныНоменклатуры.ВидЗапасов И &УчитыватьСебестоимостьТоваровПоВидамЗапасов
			|				ИЛИ НЕ &УчитыватьСебестоимостьТоваровПоВидамЗапасов)
			|			И (ЦеныНоменклатуры.Организация = &Организация)
			|
			|СГРУППИРОВАТЬ ПО
			|	ТаблицаИнвентаризации.Номенклатура,
			|	ТаблицаИнвентаризации.Характеристика.НаименованиеПолное,
			|	ЕСТЬNULL(ЦеныНоменклатуры.СтоимостьРегл, 0),
			|	ТаблицаИнвентаризации.Номенклатура.ЕдиницаИзмерения.Код,
			|	ТаблицаИнвентаризации.Номенклатура.ЕдиницаИзмерения.Наименование,
			|	ТаблицаИнвентаризации.Номенклатура.НаименованиеПолное
			|
			|УПОРЯДОЧИТЬ ПО
			|	ТоварНаименование";
			
		Иначе
			//Фактический расчет
			Запрос.Текст =
			"ВЫБРАТЬ РАЗЛИЧНЫЕ
			|	ПересчетТоваровТовары.Номенклатура,
			|	ПересчетТоваровТовары.Характеристика,
			|	&Организация,
			|	ПересчетТоваровТовары.Ссылка.Склад КАК Склад
			|ПОМЕСТИТЬ ТаблицаНоменклатуры
			|ИЗ
			|	Документ.ПересчетТоваров.Товары КАК ПересчетТоваровТовары
			|ГДЕ
			|	ПересчетТоваровТовары.Ссылка.ДокументОснование = &ДокументОснование
			|	И ПересчетТоваровТовары.Ссылка.Проведен
			|	И ПересчетТоваровТовары.Ссылка.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыПересчетовТоваров.Выполнено)
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	ТоварыОрганизаций.Номенклатура КАК Номенклатура,
			|	ТоварыОрганизаций.Характеристика КАК Характеристика,
			|	ТоварыОрганизаций.ВидЗапасов КАК ВидЗапасов,
			|	ВЫБОР
			|		КОГДА ТоварыОрганизаций.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
			|			ТОГДА -ТоварыОрганизаций.Количество
			|		ИНАЧЕ ТоварыОрганизаций.Количество
			|	КОНЕЦ КАК КоличествоОтклонение,
			|	ВЫБОР
			|		КОГДА ТоварыОрганизаций.ВидЗапасов.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.КомиссионныйТовар)
			|			ТОГДА ВЫБОР
			|					КОГДА ТоварыОрганизаций.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
			|						ТОГДА -ТоварыОрганизаций.Количество
			|					ИНАЧЕ ТоварыОрганизаций.Количество
			|				КОНЕЦ
			|			ИНАЧЕ 0
			|	КОНЕЦ КАК КоличествоПоУчету
			|ПОМЕСТИТЬ ТоварыИнвентаризации
			|ИЗ
			|	РегистрНакопления.ТоварыОрганизаций КАК ТоварыОрганизаций
			|ГДЕ
			|	ТоварыОрганизаций.Регистратор ССЫЛКА Документ.СписаниеНедостачТоваров
			|	И ВЫРАЗИТЬ(ТоварыОрганизаций.Регистратор КАК Документ.СписаниеНедостачТоваров).ДокументОснование = &ДокументОснование
			|	И ТоварыОрганизаций.Организация = &Организация
			|
			|ОБЪЕДИНИТЬ ВСЕ
			|
			|ВЫБРАТЬ
			|	ТоварыОрганизаций.Номенклатура,
			|	ТоварыОрганизаций.Характеристика,
			|	ТоварыОрганизаций.ВидЗапасов,
			|	ВЫБОР
			|		КОГДА ТоварыОрганизаций.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
			|			ТОГДА -ТоварыОрганизаций.Количество
			|		ИНАЧЕ ТоварыОрганизаций.Количество
			|	КОНЕЦ,
			|	0
			|ИЗ
			|	РегистрНакопления.ТоварыОрганизаций КАК ТоварыОрганизаций
			|ГДЕ
			|	ТоварыОрганизаций.Регистратор ССЫЛКА Документ.ОприходованиеИзлишковТоваров
			|	И ВЫРАЗИТЬ(ТоварыОрганизаций.Регистратор КАК Документ.ОприходованиеИзлишковТоваров).ДокументОснование = &ДокументОснование
			|	И ТоварыОрганизаций.Организация = &Организация
			|
			|ОБЪЕДИНИТЬ ВСЕ
			|
			|ВЫБРАТЬ
			|	ТоварыОрганизаций.Номенклатура,
			|	ТоварыОрганизаций.Характеристика,
			|	ТоварыОрганизаций.ВидЗапасов,
			|	ВЫБОР
			|		КОГДА ТоварыОрганизаций.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
			|			ТОГДА -ТоварыОрганизаций.Количество
			|		ИНАЧЕ ТоварыОрганизаций.Количество
			|	КОНЕЦ,
			|	ВЫБОР
			|		КОГДА ТоварыОрганизаций.ВидЗапасов.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.КомиссионныйТовар)
			|			ТОГДА ВЫБОР
			|					КОГДА ТоварыОрганизаций.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
			|						ТОГДА -ТоварыОрганизаций.Количество
			|					ИНАЧЕ ТоварыОрганизаций.Количество
			|				КОНЕЦ
			|			ИНАЧЕ 0
			|	КОНЕЦ
			|ИЗ
			|	РегистрНакопления.ТоварыОрганизаций КАК ТоварыОрганизаций
			|ГДЕ
			|	ТоварыОрганизаций.Регистратор ССЫЛКА Документ.ПересортицаТоваров
			|	И ВЫРАЗИТЬ(ТоварыОрганизаций.Регистратор КАК Документ.ПересортицаТоваров).ДокументОснование = &ДокументОснование
			|	И ТоварыОрганизаций.Организация = &Организация
			|
			|ОБЪЕДИНИТЬ ВСЕ
			|
			|ВЫБРАТЬ
			|	ТоварыОрганизацийОстатки.Номенклатура,
			|	ТоварыОрганизацийОстатки.Характеристика,
			|	ТоварыОрганизацийОстатки.ВидЗапасов,
			|	0,
			|	ТоварыОрганизацийОстатки.КоличествоОстаток
			|ИЗ
			|	РегистрНакопления.ТоварыОрганизаций.Остатки(
			|			&ДатаОстатков,
			|			(Номенклатура, Характеристика, Организация, Склад) В
			|				(ВЫБРАТЬ
			|					Таблица.Номенклатура,
			|					Таблица.Характеристика,
			|					Таблица.Организация,
			|					Таблица.Склад
			|				ИЗ
			|					ТаблицаНоменклатуры КАК Таблица)
			|				И ВидЗапасов.ТипЗапасов <> ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.КомиссионныйТовар)) КАК ТоварыОрганизацийОстатки
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	СправочникКлючейАналитики.Ссылка КАК КлючАналитикиУчетаНоменклатуры,
			|	ТоварыИнвентаризации.Номенклатура,
			|	ТоварыИнвентаризации.Характеристика,
			|	ТоварыИнвентаризации.ВидЗапасов,
			|	&Организация КАК Организация,
			|	СУММА(ТоварыИнвентаризации.КоличествоПоУчету) КАК КоличествоПоУчету,
			|	СУММА(ТоварыИнвентаризации.КоличествоПоУчету + ТоварыИнвентаризации.КоличествоОтклонение) КАК КоличествоФактическое
			|ПОМЕСТИТЬ ТаблицаИнвентаризации
			|ИЗ
			|	ТоварыИнвентаризации КАК ТоварыИнвентаризации
			|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.КлючиАналитикиУчетаНоменклатуры КАК СправочникКлючейАналитики
			|		ПО (СправочникКлючейАналитики.Номенклатура = ТоварыИнвентаризации.Номенклатура)
			|			И (СправочникКлючейАналитики.Характеристика = ТоварыИнвентаризации.Характеристика)
			|			И (СправочникКлючейАналитики.Склад = ВЫРАЗИТЬ(&ДокументОснование КАК Документ.ПересчетТоваров).Склад)
			|
			|СГРУППИРОВАТЬ ПО
			|	ТоварыИнвентаризации.Номенклатура,
			|	ТоварыИнвентаризации.Характеристика,
			|	ТоварыИнвентаризации.ВидЗапасов,
			|	СправочникКлючейАналитики.Ссылка
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	&Руководитель КАК Руководитель,
			|	&ДолжностьРуководителя КАК ДолжностьРуководителя,
			|	&ГлавныйБухгалтер КАК ГлавныйБухгалтер,
			|	ВЫРАЗИТЬ(&Организация КАК Справочник.Организации).НаименованиеСокращенное КАК ОрганизацияПредставление,
			|	ВЫРАЗИТЬ(&Организация КАК Справочник.Организации).КодПоОКПО КАК ОрганизацияПоОКПО,
			|	ВЫРАЗИТЬ(&Организация КАК Справочник.Организации).Префикс КАК Префикс,
			|	ПересчетТоваров.Склад.ТекущийОтветственный КАК Кладовщик,
			|	ПересчетТоваров.Склад.ТекущаяДолжностьОтветственного КАК ДолжностьКладовщика,
			|	ПересчетТоваров.Склад.Наименование КАК ПодразделениеПредставление,
			|	ПересчетТоваров.Дата КАК ДатаНачала,
			|	ПересчетТоваров.Дата КАК ДатаОкончания,
			|	ПересчетТоваров.Дата КАК ОснованиеДата,
			|	ПересчетТоваров.Номер КАК ОснованиеНомер,
			|	ПересчетТоваров.Номер КАК НомерДокумента,
			|	ПересчетТоваров.Дата КАК ДатаДокумента,
			|	ПересчетТоваров.Ссылка КАК Ссылка,
			|	&ДатаОстатков КАК ДатаСнятияОстатков
			|ИЗ
			|	Документ.ПересчетТоваров КАК ПересчетТоваров
			|ГДЕ
			|	ПересчетТоваров.Ссылка = &ДокументОснование
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	ТаблицаИнвентаризации.Номенклатура,
			|	ТаблицаИнвентаризации.Характеристика.НаименованиеПолное КАК Характеристика,
			|	СУММА(ТаблицаИнвентаризации.КоличествоПоУчету) КАК КоличествоПоУчету,
			|	СУММА(ТаблицаИнвентаризации.КоличествоФактическое) КАК КоличествоФактическое,
			|	ВЫБОР
			|		КОГДА ЕСТЬNULL(СебестоимостьТоваров.КоличествоОстаток, 0) = 0
			|			ТОГДА 0
			|		ИНАЧЕ ЕСТЬNULL(СебестоимостьТоваров.СтоимостьРеглОстаток, 0) / СебестоимостьТоваров.КоличествоОстаток
			|	КОНЕЦ КАК Цена,
			|	СУММА(ТаблицаИнвентаризации.КоличествоПоУчету * ВЫБОР 
			|														КОГДА ЕСТЬNULL(СебестоимостьТоваров.КоличествоОстаток, 0) = 0 
			|															ТОГДА 0 
			|														ИНАЧЕ ЕСТЬNULL(СебестоимостьТоваров.СтоимостьРеглОстаток, 0) / СебестоимостьТоваров.КоличествоОстаток
			|													КОНЕЦ) КАК СуммаПоУчету,
			|	СУММА(ТаблицаИнвентаризации.КоличествоФактическое * ВЫБОР 
			|															КОГДА ЕСТЬNULL(СебестоимостьТоваров.КоличествоОстаток, 0) = 0 
			|																ТОГДА 0 
			|															ИНАЧЕ ЕСТЬNULL(СебестоимостьТоваров.СтоимостьРеглОстаток, 0) / СебестоимостьТоваров.КоличествоОстаток 
			|														КОНЕЦ) КАК СуммаФактическая,
			|	ТаблицаИнвентаризации.Номенклатура." + КолонкаКодов + " КАК ТоварКод,
			|	ТаблицаИнвентаризации.Номенклатура.ЕдиницаИзмерения.Код КАК ЕдиницаИзмеренияКод,
			|	ТаблицаИнвентаризации.Номенклатура.ЕдиницаИзмерения.Наименование КАК ЕдиницаИзмеренияНаименование,
			|	ТаблицаИнвентаризации.Номенклатура.НаименованиеПолное КАК ТоварНаименование,
			|	ЛОЖЬ КАК ЭтоВозвратнаяТара
			|ИЗ	
			|ТаблицаИнвентаризации КАК ТаблицаИнвентаризации
			|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.СебестоимостьТоваров.Остатки(КОНЕЦПЕРИОДА(&ДатаОстатков, МЕСЯЦ), Организация = &Организация) КАК СебестоимостьТоваров
			|		ПО ТаблицаИнвентаризации.КлючАналитикиУчетаНоменклатуры = СебестоимостьТоваров.АналитикаУчетаНоменклатуры
			|			И (ТаблицаИнвентаризации.ВидЗапасов = СебестоимостьТоваров.ВидЗапасов И &УчитыватьСебестоимостьТоваровПоВидамЗапасов
			|				ИЛИ НЕ &УчитыватьСебестоимостьТоваровПоВидамЗапасов)
			|			И (СебестоимостьТоваров.Организация = &Организация)
			|СГРУППИРОВАТЬ ПО
			|	ТаблицаИнвентаризации.Номенклатура,
			|	ТаблицаИнвентаризации.Характеристика.НаименованиеПолное,
			|	ВЫБОР
			|		КОГДА ЕСТЬNULL(СебестоимостьТоваров.КоличествоОстаток, 0) = 0
			|			ТОГДА 0
			|		ИНАЧЕ ЕСТЬNULL(СебестоимостьТоваров.СтоимостьРеглОстаток, 0) / СебестоимостьТоваров.КоличествоОстаток
			|	КОНЕЦ,
			|	ТаблицаИнвентаризации.Номенклатура.ЕдиницаИзмерения.Код,
			|	ТаблицаИнвентаризации.Номенклатура.ЕдиницаИзмерения.Наименование,
			|	ТаблицаИнвентаризации.Номенклатура.НаименованиеПолное
			|
			|УПОРЯДОЧИТЬ ПО
			|	ТоварНаименование";
			
		КонецЕсли;
		
		Результаты = Запрос.ВыполнитьПакет();
		РезультатПоШапке = Результаты[3];
		РезультатПоТабличнойЧасти = Результаты[4];
		РезультатКурсВалюты = Неопределено;
		

	ИначеЕсли ИсточникИнформацииОЦенахДляПечати = Перечисления.ИсточникиИнформацииОЦенахДляПечати.ПоВидуЦен Тогда 
		
		Запрос.Текст =
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ПересчетТоваровТовары.Номенклатура,
		|	ПересчетТоваровТовары.Характеристика,
		|	&Организация,
		|	ПересчетТоваровТовары.Ссылка.Склад КАК Склад
		|ПОМЕСТИТЬ ТаблицаНоменклатуры
		|ИЗ
		|	Документ.ПересчетТоваров.Товары КАК ПересчетТоваровТовары
		|ГДЕ
		|	ПересчетТоваровТовары.Ссылка.ДокументОснование = &ДокументОснование
		|	И ПересчетТоваровТовары.Ссылка.Проведен
		|	И ПересчетТоваровТовары.Ссылка.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыПересчетовТоваров.Выполнено)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ТоварыОрганизаций.Номенклатура КАК Номенклатура,
		|	ТоварыОрганизаций.Характеристика КАК Характеристика,
		|	ВЫБОР
		|		КОГДА ТоварыОрганизаций.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
		|			ТОГДА -ТоварыОрганизаций.Количество
		|		ИНАЧЕ ТоварыОрганизаций.Количество
		|	КОНЕЦ КАК КоличествоОтклонение,
		|	ВЫБОР
		|		КОГДА ТоварыОрганизаций.ВидЗапасов.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.КомиссионныйТовар)
		|			ТОГДА ВЫБОР
		|					КОГДА ТоварыОрганизаций.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
		|						ТОГДА -ТоварыОрганизаций.Количество
		|					ИНАЧЕ ТоварыОрганизаций.Количество
		|				КОНЕЦ
		|			ИНАЧЕ 0
		|	КОНЕЦ КАК КоличествоПоУчету
		|ПОМЕСТИТЬ ТоварыИнвентаризации
		|ИЗ
		|	РегистрНакопления.ТоварыОрганизаций КАК ТоварыОрганизаций
		|ГДЕ
		|	ТоварыОрганизаций.Регистратор ССЫЛКА Документ.СписаниеНедостачТоваров
		|	И ВЫРАЗИТЬ(ТоварыОрганизаций.Регистратор КАК Документ.СписаниеНедостачТоваров).ДокументОснование = &ДокументОснование
		|	И ТоварыОрганизаций.Организация = &Организация
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ТоварыОрганизаций.Номенклатура,
		|	ТоварыОрганизаций.Характеристика,
		|	ВЫБОР
		|		КОГДА ТоварыОрганизаций.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
		|			ТОГДА -ТоварыОрганизаций.Количество
		|		ИНАЧЕ ТоварыОрганизаций.Количество
		|	КОНЕЦ,
		|	0
		|ИЗ
		|	РегистрНакопления.ТоварыОрганизаций КАК ТоварыОрганизаций
		|ГДЕ
		|	ТоварыОрганизаций.Регистратор ССЫЛКА Документ.ОприходованиеИзлишковТоваров
		|	И ВЫРАЗИТЬ(ТоварыОрганизаций.Регистратор КАК Документ.ОприходованиеИзлишковТоваров).ДокументОснование = &ДокументОснование
		|	И ТоварыОрганизаций.Организация = &Организация
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ТоварыОрганизаций.Номенклатура,
		|	ТоварыОрганизаций.Характеристика,
		|	ВЫБОР
		|		КОГДА ТоварыОрганизаций.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
		|			ТОГДА -ТоварыОрганизаций.Количество
		|		ИНАЧЕ ТоварыОрганизаций.Количество
		|	КОНЕЦ,
		|	ВЫБОР
		|		КОГДА ТоварыОрганизаций.ВидЗапасов.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.КомиссионныйТовар)
		|			ТОГДА ВЫБОР
		|					КОГДА ТоварыОрганизаций.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
		|						ТОГДА -ТоварыОрганизаций.Количество
		|					ИНАЧЕ ТоварыОрганизаций.Количество
		|				КОНЕЦ
		|		ИНАЧЕ 0
		|	КОНЕЦ
		|ИЗ
		|	РегистрНакопления.ТоварыОрганизаций КАК ТоварыОрганизаций
		|ГДЕ
		|	ТоварыОрганизаций.Регистратор ССЫЛКА Документ.ПересортицаТоваров
		|	И ВЫРАЗИТЬ(ТоварыОрганизаций.Регистратор КАК Документ.ПересортицаТоваров).ДокументОснование = &ДокументОснование
		|	И ТоварыОрганизаций.Организация = &Организация
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ТоварыОрганизацийОстатки.Номенклатура,
		|	ТоварыОрганизацийОстатки.Характеристика,
		|	0,
		|	ТоварыОрганизацийОстатки.КоличествоОстаток
		|ИЗ
		|	РегистрНакопления.ТоварыОрганизаций.Остатки(
		|			&ДатаОстатков,
		|			(Номенклатура, Характеристика, Организация, Склад) В
		|					(ВЫБРАТЬ
		|						Таблица.Номенклатура,
		|						Таблица.Характеристика,
		|						Таблица.Организация,
		|						Таблица.Склад
		|					ИЗ
		|						ТаблицаНоменклатуры КАК Таблица)
		|				И ВидЗапасов.ТипЗапасов <> ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.КомиссионныйТовар)) КАК ТоварыОрганизацийОстатки
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ТоварыИнвентаризации.Номенклатура,
		|	ТоварыИнвентаризации.Характеристика,
		|	СУММА(ТоварыИнвентаризации.КоличествоПоУчету) КАК КоличествоПоУчету,
		|	СУММА(ТоварыИнвентаризации.КоличествоПоУчету + ТоварыИнвентаризации.КоличествоОтклонение) КАК КоличествоФактическое
		|ПОМЕСТИТЬ ТаблицаИнвентаризации
		|ИЗ
		|	ТоварыИнвентаризации КАК ТоварыИнвентаризации
		|
		|СГРУППИРОВАТЬ ПО
		|	ТоварыИнвентаризации.Номенклатура,
		|	ТоварыИнвентаризации.Характеристика
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	&Руководитель КАК Руководитель,
		|	&ДолжностьРуководителя КАК ДолжностьРуководителя,
		|	&ГлавныйБухгалтер КАК ГлавныйБухгалтер,
		|	ВЫРАЗИТЬ(&Организация КАК Справочник.Организации).НаименованиеСокращенное КАК ОрганизацияПредставление,
		|	ВЫРАЗИТЬ(&Организация КАК Справочник.Организации).КодПоОКПО КАК ОрганизацияПоОКПО,
		|	ВЫРАЗИТЬ(&Организация КАК Справочник.Организации).Префикс КАК Префикс,
		|	ПересчетТоваров.Склад.ТекущийОтветственный КАК Кладовщик,
		|	ПересчетТоваров.Склад.ТекущаяДолжностьОтветственного КАК ДолжностьКладовщика,
		|	ПересчетТоваров.Склад.Наименование КАК ПодразделениеПредставление,
		|	ПересчетТоваров.Дата КАК ДатаНачала,
		|	ПересчетТоваров.Дата КАК ДатаОкончания,
		|	ПересчетТоваров.Дата КАК ОснованиеДата,
		|	ПересчетТоваров.Номер КАК ОснованиеНомер,
		|	ПересчетТоваров.Номер КАК НомерДокумента,
		|	ПересчетТоваров.Дата КАК ДатаДокумента,
		|	ПересчетТоваров.Ссылка КАК Ссылка,
		|	&ДатаОстатков КАК ДатаСнятияОстатков
		|ИЗ
		|	Документ.ПересчетТоваров КАК ПересчетТоваров
		|ГДЕ
		|	ПересчетТоваров.Ссылка = &ДокументОснование
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ТаблицаИнвентаризации.Номенклатура,
		|	ТаблицаИнвентаризации.Характеристика.НаименованиеПолное КАК Характеристика,
		|	ТаблицаИнвентаризации.КоличествоПоУчету,
		|	ТаблицаИнвентаризации.КоличествоФактическое,
		|	ВЫБОР
		|		КОГДА НЕ ЦеныНоменклатуры.Упаковка.Коэффициент ЕСТЬ NULL 
		|				И ЦеныНоменклатуры.Упаковка.Коэффициент <> 0
		|			ТОГДА ЕСТЬNULL(ЦеныНоменклатуры.Цена, 0) / ЦеныНоменклатуры.Упаковка.Коэффициент
		|		ИНАЧЕ ЕСТЬNULL(ЦеныНоменклатуры.Цена, 0)
		|	КОНЕЦ КАК Цена,
		|	ТаблицаИнвентаризации.КоличествоПоУчету * ВЫБОР
		|		КОГДА НЕ ЦеныНоменклатуры.Упаковка.Коэффициент ЕСТЬ NULL 
		|				И ЦеныНоменклатуры.Упаковка.Коэффициент <> 0
		|			ТОГДА ЕСТЬNULL(ЦеныНоменклатуры.Цена, 0) / ЦеныНоменклатуры.Упаковка.Коэффициент
		|		ИНАЧЕ ЕСТЬNULL(ЦеныНоменклатуры.Цена, 0)
		|	КОНЕЦ КАК СуммаПоУчету,
		|	ТаблицаИнвентаризации.КоличествоФактическое * ВЫБОР
		|		КОГДА НЕ ЦеныНоменклатуры.Упаковка.Коэффициент ЕСТЬ NULL 
		|				И ЦеныНоменклатуры.Упаковка.Коэффициент <> 0
		|			ТОГДА ЕСТЬNULL(ЦеныНоменклатуры.Цена, 0) / ЦеныНоменклатуры.Упаковка.Коэффициент
		|		ИНАЧЕ ЕСТЬNULL(ЦеныНоменклатуры.Цена, 0)
		|	КОНЕЦ КАК СуммаФактическая,
		|	ТаблицаИнвентаризации.Номенклатура.ЕдиницаИзмерения.Код КАК ЕдиницаИзмеренияКод,
		|	ТаблицаИнвентаризации.Номенклатура." + КолонкаКодов + " КАК ТоварКод,
		|	ТаблицаИнвентаризации.Номенклатура.ЕдиницаИзмерения.Наименование КАК ЕдиницаИзмеренияНаименование,
		|	ТаблицаИнвентаризации.Номенклатура.НаименованиеПолное КАК ТоварНаименование,
		|	ЛОЖЬ КАК ЭтоВозвратнаяТара
		|ИЗ
		|	ТаблицаИнвентаризации КАК ТаблицаИнвентаризации
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЦеныНоменклатуры.СрезПоследних(
		|				КОНЕЦПЕРИОДА(&ДатаОстатков, ДЕНЬ),
		|				(ВидЦены, Номенклатура, Характеристика) В
		|					(ВЫБРАТЬ
		|						&ВидЦены,
		|						Таблица.Номенклатура,
		|						Таблица.Характеристика
		|					ИЗ
		|						ТаблицаИнвентаризации КАК Таблица)) КАК ЦеныНоменклатуры
		|		ПО ТаблицаИнвентаризации.Номенклатура = ЦеныНоменклатуры.Номенклатура
		|			И ТаблицаИнвентаризации.Характеристика = ЦеныНоменклатуры.Характеристика
		|
		|УПОРЯДОЧИТЬ ПО
		|	ТоварНаименование
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ ПЕРВЫЕ 1
		|	КурсыВалютСрезПоследних.Курс / КурсыВалютСрезПоследних.Кратность КАК КоэффициентПересчета
		|ИЗ
		|	РегистрСведений.КурсыВалют.СрезПоследних(&ДатаОстатков, Валюта = &ВидЦены) КАК КурсыВалютСрезПоследних";
		
		Результаты = Запрос.ВыполнитьПакет();
		РезультатПоШапке = Результаты[3];
		РезультатПоТабличнойЧасти = Результаты[4];
		РезультатКурсВалюты = Результаты[5];
		
	КонецЕсли;
	
	Возврат Новый Структура(
		"РезультатПоШапке, РезультатПоТабличнойЧасти, РезультатКурсВалюты",
		РезультатПоШапке,
		РезультатПоТабличнойЧасти,
		РезультатКурсВалюты
	);
	
КонецФункции

// Функция получает данные для формирования печатной формы ИНВ19
//
Функция ПолучитьДанныеДляПечатнойФормыИНВ19(ПараметрыПечати, ДокументОснование) Экспорт
	
	КолонкаКодов = ФормированиеПечатныхФорм.ИмяДополнительнойКолонки();
	Если Не ЗначениеЗаполнено(КолонкаКодов) Тогда
		КолонкаКодов = "Код";
	КонецЕсли;
			
	ЗапросПредварительныхДанных = Новый Запрос;
	ЗапросПредварительныхДанных.Текст = 
	"ВЫБРАТЬ
	|	РасчетСебестоимостиТоваровОрганизации.Ссылка.ПредварительныйРасчет КАК ПредварительныйРасчет,
	|	ПересчетТоваров.ИсточникИнформацииОЦенахДляПечати КАК ИсточникИнформацииОЦенахДляПечати 
	|ИЗ
	|	Документ.ПересчетТоваров КАК ПересчетТоваров
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.РасчетСебестоимостиТоваров.Организации КАК РасчетСебестоимостиТоваровОрганизации
	|		ПО (РасчетСебестоимостиТоваровОрганизации.Организация = &Организация)
	|			И (РасчетСебестоимостиТоваровОрганизации.Ссылка.Проведен)
	|			И (РасчетСебестоимостиТоваровОрганизации.Ссылка.Дата МЕЖДУ НАЧАЛОПЕРИОДА(ПересчетТоваров.Дата, МЕСЯЦ) И КОНЕЦПЕРИОДА(ПересчетТоваров.Дата, МЕСЯЦ))
	|ГДЕ
	|	ПересчетТоваров.Ссылка = &ДокументОснование
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ ПЕРВЫЕ 1
	|	ДатыДокументов.Дата КАК Дата
	|ИЗ
	|	(ВЫБРАТЬ
	|		ПересортицаТоваров.Дата КАК Дата
	|	ИЗ
	|		Документ.ПересортицаТоваров КАК ПересортицаТоваров
	|	ГДЕ
	|		ПересортицаТоваров.Проведен = ИСТИНА
	|		И ПересортицаТоваров.Организация = &Организация
	|		И ПересортицаТоваров.ДокументОснование = &ДокументОснование
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ОприходованиеИзлишковТоваров.Дата
	|	ИЗ
	|		Документ.ОприходованиеИзлишковТоваров КАК ОприходованиеИзлишковТоваров
	|	ГДЕ
	|		ОприходованиеИзлишковТоваров.Проведен = ИСТИНА
	|		И ОприходованиеИзлишковТоваров.Организация = &Организация
	|		И ОприходованиеИзлишковТоваров.ДокументОснование = &ДокументОснование
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		СписаниеНедостачТоваров.Дата
	|	ИЗ
	|		Документ.СписаниеНедостачТоваров КАК СписаниеНедостачТоваров
	|	ГДЕ
	|		СписаниеНедостачТоваров.Проведен = ИСТИНА
	|		И СписаниеНедостачТоваров.Организация = &Организация
	|		И СписаниеНедостачТоваров.ДокументОснование = &ДокументОснование) КАК ДатыДокументов
	|
	|УПОРЯДОЧИТЬ ПО
	|	Дата УБЫВ";
	
	ЗапросПредварительныхДанных.УстановитьПараметр("ДокументОснование", ДокументОснование); 
	ЗапросПредварительныхДанных.УстановитьПараметр("Организация", ПараметрыПечати.Организация);
	
 	ПредварительныеДанные = ЗапросПредварительныхДанных.ВыполнитьПакет();
	
	ПредварительныеДанныеРезультат = ПредварительныеДанные[0].Выбрать();
	
	Если НЕ ПредварительныеДанныеРезультат.Следующий() Тогда
		Возврат Неопределено
	КонецЕсли;
	
	МаксДатаСкладскихАктовВыборка = ПредварительныеДанные[1].Выбрать();
	МаксДатаСкладскихАктовВыборка.Следующий();
	МаксДатаСкладскихАктов = МаксДатаСкладскихАктовВыборка.Дата;
	
	МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("ДокументОснование", ДокументОснование);
	Запрос.УстановитьПараметр("ДатаОстатков", КонецДня(МаксДатаСкладскихАктов));
	Запрос.УстановитьПараметр("Организация", ПараметрыПечати.Организация);
	
	УчитыватьСебестоимостьТоваровПоВидамЗапасов = ПолучитьФункциональнуюОпцию("УчитыватьСебестоимостьТоваровПоВидамЗапасов");
	Запрос.УстановитьПараметр("УчитыватьСебестоимостьТоваровПоВидамЗапасов", УчитыватьСебестоимостьТоваровПоВидамЗапасов);
		
	// Ответственные лица в печатной форме
	СтруктураОтветственных = ОтветственныеЛицаСервер.ПолучитьОтветственныеЛицаОрганизации(ПараметрыПечати.Организация, ДокументОснование.Дата);
	Запрос.УстановитьПараметр("Руководитель", 		   СтруктураОтветственных.Руководитель);
	Запрос.УстановитьПараметр("ДолжностьРуководителя", СтруктураОтветственных.РуководительДолжность);
	Запрос.УстановитьПараметр("ГлавныйБухгалтер", 	   СтруктураОтветственных.ГлавныйБухгалтер);
	
	Если ПредварительныеДанныеРезультат.ИсточникИнформацииОЦенахДляПечати = Перечисления.ИсточникиИнформацииОЦенахДляПечати.ПоСебестоимости Тогда
		
		Если ПредварительныеДанныеРезультат.ПредварительныйРасчет = Null Тогда
			
			ТекстСообщения = НСтр("ru = 'Не удалось получить цены по себестоимости для документа %Документ%: на %Период% не произведен расчет себестоимости.'");
			
			ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Документ%", ДокументОснование.Ссылка);
			ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Период%", Формат(НачалоМесяца(МаксДатаСкладскихАктов),"ДЛФ=DD"));
			
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения);
			
			Возврат Неопределено;
			
		КонецЕсли;
		
		Если ПредварительныеДанныеРезультат.ПредварительныйРасчет Тогда
			
			ТекстСообщения = НСтр("ru = 'При печати документа %Документ% использовались данные предварительного расчета себестоимости.'");
			ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Документ%", ДокументОснование.Ссылка);
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения);
			
			Запрос.Текст = 
			"ВЫБРАТЬ
			|	СписаниеНедостачТоваровВидЗапасов.Номенклатура КАК Номенклатура,
			|	СписаниеНедостачТоваровВидЗапасов.Характеристика КАК Характеристика,
			|	СписаниеНедостачТоваровВидЗапасов.ВидЗапасов КАК ВидЗапасов,
			|	СписаниеНедостачТоваровВидЗапасов.Количество КАК КоличествоНедостачи,
			|	0 КАК КоличествоИзлишков,
			|	""1_Списание"" КАК Операция,
			|	СправочникКлючейАналитики.Ссылка КАК КлючАналитикиУчетаНоменклатуры
			|ПОМЕСТИТЬ КоличествоНоменктарурыПоВидамЗапасов
			|ИЗ
			|	Документ.СписаниеНедостачТоваров.ВидыЗапасов КАК СписаниеНедостачТоваровВидЗапасов
			|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.КлючиАналитикиУчетаНоменклатуры КАК СправочникКлючейАналитики
			|		ПО (СправочникКлючейАналитики.Номенклатура = СписаниеНедостачТоваровВидЗапасов.Номенклатура)
			|			И (СправочникКлючейАналитики.Характеристика = СписаниеНедостачТоваровВидЗапасов.Характеристика)
			|			И (СправочникКлючейАналитики.Склад = ВЫРАЗИТЬ(&ДокументОснование КАК Документ.ПересчетТоваров).Склад)
			|ГДЕ
			|	СписаниеНедостачТоваровВидЗапасов.Ссылка.ДокументОснование = &ДокументОснование
			|	И СписаниеНедостачТоваровВидЗапасов.Ссылка.Организация = &Организация
			|	И СписаниеНедостачТоваровВидЗапасов.Ссылка.Проведен
			|
			|ОБЪЕДИНИТЬ ВСЕ
			|
			|ВЫБРАТЬ
			|	ОприходованиеИзлишковТоваровТовары.Номенклатура,
			|	ОприходованиеИзлишковТоваровТовары.Характеристика,
			|	ОприходованиеИзлишковТоваровТовары.ВидЗапасов,
			|	0  КАК КоличествоНедостачи,
			|	ОприходованиеИзлишковТоваровТовары.Количество КАК КоличествоИзлишков,
			|	""2_Оприходование"",
			|	СправочникКлючейАналитики.Ссылка
			|ИЗ
			|	Документ.ОприходованиеИзлишковТоваров.Товары КАК ОприходованиеИзлишковТоваровТовары
			|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.КлючиАналитикиУчетаНоменклатуры КАК СправочникКлючейАналитики
			|		ПО (СправочникКлючейАналитики.Номенклатура = ОприходованиеИзлишковТоваровТовары.Номенклатура)
			|			И (СправочникКлючейАналитики.Характеристика = ОприходованиеИзлишковТоваровТовары.Характеристика)
			|			И (СправочникКлючейАналитики.Склад = ВЫРАЗИТЬ(&ДокументОснование КАК Документ.ПересчетТоваров).Склад)
			|ГДЕ
			|	ОприходованиеИзлишковТоваровТовары.Ссылка.ДокументОснование = &ДокументОснование
			|	И ОприходованиеИзлишковТоваровТовары.Ссылка.Организация = &Организация
			|	И ОприходованиеИзлишковТоваровТовары.Ссылка.Проведен
			|
			|ОБЪЕДИНИТЬ ВСЕ
			|
			|ВЫБРАТЬ
			|	ПересортицаТоваровТовары.Номенклатура,
			|	ПересортицаТоваровТовары.Характеристика,
			|	ПересортицаТоваровТовары.ВидЗапасов,
			|	ПересортицаТоваровТовары.Количество КАК КоличествоНедостачи,
			|	0 КАК КоличествоИзлишков,
			|	""3_ПересортицаСписание"",
			|	СправочникКлючейАналитики.Ссылка
			|ИЗ
			|	Документ.ПересортицаТоваров.ВидыЗапасов КАК ПересортицаТоваровТовары 	 
			|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.КлючиАналитикиУчетаНоменклатуры КАК СправочникКлючейАналитики
			|		ПО (СправочникКлючейАналитики.Номенклатура = ПересортицаТоваровТовары.Номенклатура)
			|			И (СправочникКлючейАналитики.Характеристика = ПересортицаТоваровТовары.Характеристика)
			|			И (СправочникКлючейАналитики.Склад = ВЫРАЗИТЬ(&ДокументОснование КАК Документ.ПересчетТоваров).Склад)
			|ГДЕ
			|	ПересортицаТоваровТовары.Ссылка.ДокументОснование = &ДокументОснование
			|	И ПересортицаТоваровТовары.Ссылка.Организация = &Организация
			|	И ПересортицаТоваровТовары.Ссылка.Проведен
			|
			|ОБЪЕДИНИТЬ ВСЕ
			|
			|ВЫБРАТЬ
			|	ПересортицаТоваровТовары.НоменклатураОприходование,
			|	ПересортицаТоваровТовары.ХарактеристикаОприходование,
			|	ПересортицаТоваровТовары.ВидЗапасов,
			|	0 КАК КоличествоНедостачи,
			|	ПересортицаТоваровТовары.Количество КАК КоличествоИзлишков,
			|	""4_ПересортицаОприходование"",
			|	СправочникКлючейАналитики.Ссылка
			|ИЗ
			|	Документ.ПересортицаТоваров.Товары КАК ПересортицаТоваровТовары
			|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.КлючиАналитикиУчетаНоменклатуры КАК СправочникКлючейАналитики
			|		ПО (СправочникКлючейАналитики.Номенклатура = ПересортицаТоваровТовары.НоменклатураОприходование)
			|			И (СправочникКлючейАналитики.Характеристика = ПересортицаТоваровТовары.ХарактеристикаОприходование)
			|			И (СправочникКлючейАналитики.Склад = ВЫРАЗИТЬ(&ДокументОснование КАК Документ.ПересчетТоваров).Склад)
			|ГДЕ
			|	ПересортицаТоваровТовары.Ссылка.ДокументОснование = &ДокументОснование
			|	И ПересортицаТоваровТовары.Ссылка.Организация = &Организация
			|	И ПересортицаТоваровТовары.Ссылка.Проведен
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ РАЗЛИЧНЫЕ
			|	ПересортицаТоваровВидыЗапасов.Номенклатура КАК Номенклатура,
			|	ПересортицаТоваровВидыЗапасов.Характеристика КАК Характеристика,
			|	ПересортицаТоваровТовары.НоменклатураОприходование КАК СвязаннаяНоменклатура,
			|	ПересортицаТоваровТовары.ХарактеристикаОприходование КАК СвязаннаяХарактеристика,
			|	0 КАК Количество
			|ПОМЕСТИТЬ СвязанныеТовары
			|ИЗ
			|	Документ.ПересортицаТоваров.ВидыЗапасов КАК ПересортицаТоваровВидыЗапасов
			|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ПересортицаТоваров.Товары КАК ПересортицаТоваровТовары
			|		ПО ПересортицаТоваровВидыЗапасов.Номенклатура = ПересортицаТоваровТовары.Номенклатура
			|			И ПересортицаТоваровВидыЗапасов.Характеристика = ПересортицаТоваровТовары.Характеристика
			|ГДЕ
			|	ПересортицаТоваровВидыЗапасов.Ссылка.ДокументОснование = &ДокументОснование
			|	И ПересортицаТоваровВидыЗапасов.Ссылка.Организация = &Организация
			|	И ПересортицаТоваровВидыЗапасов.Ссылка.Проведен
			|	И ПересортицаТоваровТовары.Ссылка.ДокументОснование = &ДокументОснование
			|	И ПересортицаТоваровТовары.Ссылка.Организация = &Организация
			|	И ПересортицаТоваровТовары.Ссылка.Проведен
			|
			|ОБЪЕДИНИТЬ ВСЕ
			|
			|ВЫБРАТЬ
			|	ПересортицаТоваровТовары.НоменклатураОприходование,
			|	ПересортицаТоваровТовары.ХарактеристикаОприходование,
			|	ПересортицаТоваровТовары.Номенклатура,
			|	ПересортицаТоваровТовары.Характеристика,
			|	ПересортицаТоваровТовары.Количество
			|ИЗ
			|	Документ.ПересортицаТоваров.Товары КАК ПересортицаТоваровТовары
			|ГДЕ
			|	ПересортицаТоваровТовары.Ссылка.ДокументОснование = &ДокументОснование
			|	И ПересортицаТоваровТовары.Ссылка.Организация = &Организация
			|	И ПересортицаТоваровТовары.Ссылка.Проведен;
			|
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	КоличествоНоменктарурыПоВидамЗапасов.Номенклатура,
			|	КоличествоНоменктарурыПоВидамЗапасов.Характеристика КАК Характеристика,
			|	ЕСТЬNULL(ЦеныНоменклатуры.СтоимостьРегл, 0) КАК Стоимость,
			|	КоличествоНоменктарурыПоВидамЗапасов.ВидЗапасов КАК ВидЗапасов,
			|	СУММА(ВЫБОР
			|			КОГДА КоличествоНоменктарурыПоВидамЗапасов.КоличествоНедостачи <> 0
			|				ТОГДА КоличествоНоменктарурыПоВидамЗапасов.КоличествоНедостачи
			|			КОГДА КоличествоНоменктарурыПоВидамЗапасов.КоличествоИзлишков <> 0
			|				ТОГДА КоличествоНоменктарурыПоВидамЗапасов.КоличествоИзлишков
			|			ИНАЧЕ 0
			|		КОНЕЦ) КАК Количество,
			|	КоличествоНоменктарурыПоВидамЗапасов.Операция КАК Операция,
			|	КоличествоНоменктарурыПоВидамЗапасов.Характеристика.НаименованиеПолное КАК ХарактеристикаПредставление,
			|	КоличествоНоменктарурыПоВидамЗапасов.Номенклатура.НаименованиеПолное КАК ТоварНаименование,
			|	КоличествоНоменктарурыПоВидамЗапасов.Номенклатура.ЕдиницаИзмерения.Код КАК ЕдиницаИзмеренияКод,
			|	КоличествоНоменктарурыПоВидамЗапасов.Номенклатура.ЕдиницаИзмерения.Наименование КАК ЕдиницаИзмеренияНаименование,
			|	КоличествоНоменктарурыПоВидамЗапасов.Номенклатура." + КолонкаКодов + " КАК ТоварКод,
			|	ЛОЖЬ КАК ЭтоВозвратнаяТара
			|ИЗ
			|	КоличествоНоменктарурыПоВидамЗапасов КАК КоличествоНоменктарурыПоВидамЗапасов
			|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СтоимостьТоваров.СрезПоследних(
			|				КОНЕЦПЕРИОДА(&ДатаОстатков, ДЕНЬ),
			|				(АналитикаУчетаНоменклатуры, Организация, ВидЗапасов) В
			|					(ВЫБРАТЬ
			|						Таблица.КлючАналитикиУчетаНоменклатуры,
			|						&Организация,
			|						Таблица.ВидЗапасов
			|					ИЗ
			|						КоличествоНоменктарурыПоВидамЗапасов КАК Таблица)) КАК ЦеныНоменклатуры
			|		ПО КоличествоНоменктарурыПоВидамЗапасов.КлючАналитикиУчетаНоменклатуры = ЦеныНоменклатуры.АналитикаУчетаНоменклатуры
			|			И (КоличествоНоменктарурыПоВидамЗапасов.ВидЗапасов = ЦеныНоменклатуры.ВидЗапасов И &УчитыватьСебестоимостьТоваровПоВидамЗапасов
			|				ИЛИ НЕ &УчитыватьСебестоимостьТоваровПоВидамЗапасов)
			|			И (ЦеныНоменклатуры.Организация = &Организация)
			|
			|СГРУППИРОВАТЬ ПО
			|	КоличествоНоменктарурыПоВидамЗапасов.Номенклатура,
			|	КоличествоНоменктарурыПоВидамЗапасов.Характеристика,
			|	КоличествоНоменктарурыПоВидамЗапасов.Операция,
			|	КоличествоНоменктарурыПоВидамЗапасов.Характеристика.НаименованиеПолное,
			|	КоличествоНоменктарурыПоВидамЗапасов.Номенклатура.НаименованиеПолное,
			|	КоличествоНоменктарурыПоВидамЗапасов.Номенклатура.ЕдиницаИзмерения.Код,
			|	КоличествоНоменктарурыПоВидамЗапасов.Номенклатура.ЕдиницаИзмерения.Наименование,
			|	КоличествоНоменктарурыПоВидамЗапасов.Номенклатура." + КолонкаКодов + ",
			|	ЕСТЬNULL(ЦеныНоменклатуры.СтоимостьРегл, 0),
			|	КоличествоНоменктарурыПоВидамЗапасов.ВидЗапасов,
			| 	ЛОЖЬ
			|
			|УПОРЯДОЧИТЬ ПО 
			|	ТоварНаименование,
			|	ХарактеристикаПредставление
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	&Руководитель КАК Руководитель,
			|	&ДолжностьРуководителя КАК ДолжностьРуководителя,
			|	&ГлавныйБухгалтер КАК ГлавныйБухгалтер,
			|	ВЫРАЗИТЬ(&Организация КАК Справочник.Организации).НаименованиеСокращенное КАК ОрганизацияПредставление,
			|	ВЫРАЗИТЬ(&Организация КАК Справочник.Организации).КодПоОКПО КАК ОрганизацияПоОКПО,
			|	ВЫРАЗИТЬ(&Организация КАК Справочник.Организации).Префикс КАК Префикс,
			|	ПересчетТоваров.Склад.ТекущийОтветственный КАК Кладовщик,
			|	ПересчетТоваров.Склад.ТекущаяДолжностьОтветственного КАК ДолжностьКладовщика,
			|	ПересчетТоваров.Склад.Наименование КАК ПодразделениеПредставление,
			|	ПересчетТоваров.Дата КАК ДатаНачала,
			|	ПересчетТоваров.Дата КАК ДатаОкончания,
			|	ПересчетТоваров.Дата КАК ОснованиеДата,
			|	ПересчетТоваров.Номер КАК ОснованиеНомер,
			|	ПересчетТоваров.Номер КАК НомерДокумента,
			|	ПересчетТоваров.Дата КАК ДатаДокумента,
			|	ПересчетТоваров.Ссылка КАК Ссылка,
			|	&ДатаОстатков КАК ДатаСнятияОстатков
			|ИЗ
			|	Документ.ПересчетТоваров КАК ПересчетТоваров
			|ГДЕ
			|	ПересчетТоваров.Ссылка = &ДокументОснование;
			| 
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ РАЗЛИЧНЫЕ
			|  	СвязанныеТовары.Номенклатура КАК Номенклатура,
			|	СвязанныеТовары.Характеристика КАК Характеристика,
			|	СвязанныеТовары.СвязаннаяНоменклатура КАК СвязаннаяНоменклатура,
			|	СвязанныеТовары.СвязаннаяХарактеристика КАК СвязаннаяХарактеристика,
			|	СУММА(СвязанныеТовары.Количество) КАК Количество
			|ИЗ СвязанныеТовары КАК СвязанныеТовары
			|СГРУППИРОВАТЬ ПО 
			|	СвязанныеТовары.Номенклатура,
			|	СвязанныеТовары.Характеристика,
			|	СвязанныеТовары.СвязаннаяНоменклатура,
			|	СвязанныеТовары.СвязаннаяХарактеристика";
			
		Иначе
			// Фактический расчет
			Запрос.Текст = "ВЫБРАТЬ
			|	СписаниеНедостачТоваровВидЗапасов.Номенклатура КАК Номенклатура,
			|	СписаниеНедостачТоваровВидЗапасов.Характеристика КАК Характеристика,
			|	СписаниеНедостачТоваровВидЗапасов.ВидЗапасов КАК ВидЗапасов,
			|	СписаниеНедостачТоваровВидЗапасов.Количество КАК КоличествоНедостачи,
			|	0 КАК КоличествоИзлишков,
			|	""1_Списание"" КАК Операция,
			|	СправочникКлючейАналитики.Ссылка КАК КлючАналитикиУчетаНоменклатуры
			|ПОМЕСТИТЬ КоличествоНоменктарурыПоВидамЗапасов
			|ИЗ
			|	Документ.СписаниеНедостачТоваров.ВидыЗапасов КАК СписаниеНедостачТоваровВидЗапасов
			|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.КлючиАналитикиУчетаНоменклатуры КАК СправочникКлючейАналитики
			|		ПО (СправочникКлючейАналитики.Номенклатура = СписаниеНедостачТоваровВидЗапасов.Номенклатура)
			|			И (СправочникКлючейАналитики.Характеристика = СписаниеНедостачТоваровВидЗапасов.Характеристика)
			|			И (СправочникКлючейАналитики.Склад = ВЫРАЗИТЬ(&ДокументОснование КАК Документ.ПересчетТоваров).Склад)
			|ГДЕ
			|	СписаниеНедостачТоваровВидЗапасов.Ссылка.ДокументОснование = &ДокументОснование
			|	И СписаниеНедостачТоваровВидЗапасов.Ссылка.Организация = &Организация
			|	И СписаниеНедостачТоваровВидЗапасов.Ссылка.Проведен
			|
			|ОБЪЕДИНИТЬ ВСЕ
			|
			|ВЫБРАТЬ
			|	ОприходованиеИзлишковТоваровТовары.Номенклатура,
			|	ОприходованиеИзлишковТоваровТовары.Характеристика,
			|	ОприходованиеИзлишковТоваровТовары.ВидЗапасов,
			|	0,
			|	ОприходованиеИзлишковТоваровТовары.Количество,
			|	""2_Оприходование"",
			|	СправочникКлючейАналитики.Ссылка
			|ИЗ
			|	Документ.ОприходованиеИзлишковТоваров.Товары КАК ОприходованиеИзлишковТоваровТовары
			|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.КлючиАналитикиУчетаНоменклатуры КАК СправочникКлючейАналитики
			|		ПО (СправочникКлючейАналитики.Номенклатура = ОприходованиеИзлишковТоваровТовары.Номенклатура)
			|			И (СправочникКлючейАналитики.Характеристика = ОприходованиеИзлишковТоваровТовары.Характеристика)
			|			И (СправочникКлючейАналитики.Склад = ВЫРАЗИТЬ(&ДокументОснование КАК Документ.ПересчетТоваров).Склад)
			|ГДЕ
			|	ОприходованиеИзлишковТоваровТовары.Ссылка.ДокументОснование = &ДокументОснование
			|	И ОприходованиеИзлишковТоваровТовары.Ссылка.Организация = &Организация
			|	И ОприходованиеИзлишковТоваровТовары.Ссылка.Проведен
			|
			|ОБЪЕДИНИТЬ ВСЕ
			|
			|ВЫБРАТЬ
			|	ПересортицаТоваровТовары.Номенклатура,
			|	ПересортицаТоваровТовары.Характеристика,
			|	ПересортицаТоваровТовары.ВидЗапасов,
			|	ПересортицаТоваровТовары.Количество,
			|	0,
			|	""3_ПересортицаСписание"",
			|	СправочникКлючейАналитики.Ссылка
			|ИЗ
			|	Документ.ПересортицаТоваров.ВидыЗапасов КАК ПересортицаТоваровТовары
			|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.КлючиАналитикиУчетаНоменклатуры КАК СправочникКлючейАналитики
			|		ПО (СправочникКлючейАналитики.Номенклатура = ПересортицаТоваровТовары.Номенклатура)
			|			И (СправочникКлючейАналитики.Характеристика = ПересортицаТоваровТовары.Характеристика)
			|			И (СправочникКлючейАналитики.Склад = ВЫРАЗИТЬ(&ДокументОснование КАК Документ.ПересчетТоваров).Склад)
			|ГДЕ
			|	ПересортицаТоваровТовары.Ссылка.ДокументОснование = &ДокументОснование
			|	И ПересортицаТоваровТовары.Ссылка.Организация = &Организация
			|	И ПересортицаТоваровТовары.Ссылка.Проведен
			|
			|ОБЪЕДИНИТЬ ВСЕ
			|
			|ВЫБРАТЬ
			|	ПересортицаТоваровТовары.НоменклатураОприходование,
			|	ПересортицаТоваровТовары.ХарактеристикаОприходование,
			|	ПересортицаТоваровТовары.ВидЗапасов,
			|	0,
			|	ПересортицаТоваровТовары.Количество,
			|	""4_ПересортицаОприходование"",
			|	СправочникКлючейАналитики.Ссылка
			|ИЗ
			|	Документ.ПересортицаТоваров.Товары КАК ПересортицаТоваровТовары
			|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.КлючиАналитикиУчетаНоменклатуры КАК СправочникКлючейАналитики
			|		ПО (СправочникКлючейАналитики.Номенклатура = ПересортицаТоваровТовары.НоменклатураОприходование)
			|			И (СправочникКлючейАналитики.Характеристика = ПересортицаТоваровТовары.ХарактеристикаОприходование)
			|			И (СправочникКлючейАналитики.Склад = ВЫРАЗИТЬ(&ДокументОснование КАК Документ.ПересчетТоваров).Склад)
			|ГДЕ
			|	ПересортицаТоваровТовары.Ссылка.ДокументОснование = &ДокументОснование
			|	И ПересортицаТоваровТовары.Ссылка.Организация = &Организация
			|	И ПересортицаТоваровТовары.Ссылка.Проведен
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ РАЗЛИЧНЫЕ
			|	ПересортицаТоваровВидыЗапасов.Номенклатура КАК Номенклатура,
			|	ПересортицаТоваровВидыЗапасов.Характеристика КАК Характеристика,
			|	ПересортицаТоваровТовары.НоменклатураОприходование КАК СвязаннаяНоменклатура,
			|	ПересортицаТоваровТовары.ХарактеристикаОприходование КАК СвязаннаяХарактеристика,
			|	0 КАК Количество
			|ПОМЕСТИТЬ СвязанныеТовары
			|ИЗ
			|	Документ.ПересортицаТоваров.ВидыЗапасов КАК ПересортицаТоваровВидыЗапасов
			|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ПересортицаТоваров.Товары КАК ПересортицаТоваровТовары
			|		ПО ПересортицаТоваровВидыЗапасов.Номенклатура = ПересортицаТоваровТовары.Номенклатура
			|			И ПересортицаТоваровВидыЗапасов.Характеристика = ПересортицаТоваровТовары.Характеристика
			|ГДЕ
			|	ПересортицаТоваровВидыЗапасов.Ссылка.ДокументОснование = &ДокументОснование
			|	И ПересортицаТоваровВидыЗапасов.Ссылка.Организация = &Организация
			|	И ПересортицаТоваровВидыЗапасов.Ссылка.Проведен
			|	И ПересортицаТоваровТовары.Ссылка.ДокументОснование = &ДокументОснование
			|	И ПересортицаТоваровТовары.Ссылка.Организация = &Организация
			|	И ПересортицаТоваровТовары.Ссылка.Проведен
			|
			|ОБЪЕДИНИТЬ ВСЕ
			|
			|ВЫБРАТЬ
			|	ПересортицаТоваровТовары.НоменклатураОприходование,
			|	ПересортицаТоваровТовары.ХарактеристикаОприходование,
			|	ПересортицаТоваровТовары.Номенклатура,
			|	ПересортицаТоваровТовары.Характеристика,
			|	ПересортицаТоваровТовары.Количество
			|ИЗ
			|	Документ.ПересортицаТоваров.Товары КАК ПересортицаТоваровТовары
			|ГДЕ
			|	ПересортицаТоваровТовары.Ссылка.ДокументОснование = &ДокументОснование
			|	И ПересортицаТоваровТовары.Ссылка.Организация = &Организация
			|	И ПересортицаТоваровТовары.Ссылка.Проведен
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	КоличествоНоменктарурыПоВидамЗапасов.Номенклатура,
			|	КоличествоНоменктарурыПоВидамЗапасов.Характеристика КАК Характеристика,
			|	ВЫБОР
			|		КОГДА ЕСТЬNULL(СебестоимостьТоваров.КоличествоОстаток, 0) = 0
			|			ТОГДА 0
			|		ИНАЧЕ ЕСТЬNULL(СебестоимостьТоваров.СтоимостьРеглОстаток, 0) / СебестоимостьТоваров.КоличествоОстаток
			|	КОНЕЦ КАК Стоимость,
			|	СебестоимостьТоваров.КоличествоОстаток,
			|	КоличествоНоменктарурыПоВидамЗапасов.ВидЗапасов КАК ВидЗапасов,
			|	СУММА(ВЫБОР
			|			КОГДА КоличествоНоменктарурыПоВидамЗапасов.КоличествоНедостачи <> 0
			|				ТОГДА КоличествоНоменктарурыПоВидамЗапасов.КоличествоНедостачи
			|			КОГДА КоличествоНоменктарурыПоВидамЗапасов.КоличествоИзлишков <> 0
			|				ТОГДА КоличествоНоменктарурыПоВидамЗапасов.КоличествоИзлишков
			|			ИНАЧЕ 0
			|		КОНЕЦ) КАК Количество,
			|	КоличествоНоменктарурыПоВидамЗапасов.Операция КАК Операция,
			|	КоличествоНоменктарурыПоВидамЗапасов.Характеристика.НаименованиеПолное КАК ХарактеристикаПредставление,
			|	КоличествоНоменктарурыПоВидамЗапасов.Номенклатура.НаименованиеПолное КАК ТоварНаименование,
			|	КоличествоНоменктарурыПоВидамЗапасов.Номенклатура." + КолонкаКодов + " КАК ТоварКод,
			|	КоличествоНоменктарурыПоВидамЗапасов.Номенклатура.ЕдиницаИзмерения.Код КАК ЕдиницаИзмеренияКод,
			|	КоличествоНоменктарурыПоВидамЗапасов.Номенклатура.ЕдиницаИзмерения.Наименование КАК ЕдиницаИзмеренияНаименование,
			|	ЛОЖЬ КАК ЭтоВозвратнаяТара
			|ИЗ
			|	КоличествоНоменктарурыПоВидамЗапасов КАК КоличествоНоменктарурыПоВидамЗапасов
			|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.СебестоимостьТоваров.Остатки(КОНЕЦПЕРИОДА(&ДатаОстатков, МЕСЯЦ), Организация = &Организация) КАК СебестоимостьТоваров
			|		ПО КоличествоНоменктарурыПоВидамЗапасов.КлючАналитикиУчетаНоменклатуры = СебестоимостьТоваров.АналитикаУчетаНоменклатуры
			|			И (КоличествоНоменктарурыПоВидамЗапасов.ВидЗапасов = СебестоимостьТоваров.ВидЗапасов И &УчитыватьСебестоимостьТоваровПоВидамЗапасов
			|				ИЛИ НЕ &УчитыватьСебестоимостьТоваровПоВидамЗапасов)
			|			И (СебестоимостьТоваров.Организация = &Организация)
			|СГРУППИРОВАТЬ ПО
			|	КоличествоНоменктарурыПоВидамЗапасов.Номенклатура,
			|	КоличествоНоменктарурыПоВидамЗапасов.Характеристика,
			|	КоличествоНоменктарурыПоВидамЗапасов.Операция,
			|	КоличествоНоменктарурыПоВидамЗапасов.Характеристика.НаименованиеПолное,
			|	КоличествоНоменктарурыПоВидамЗапасов.Номенклатура.НаименованиеПолное,
			|	КоличествоНоменктарурыПоВидамЗапасов.Номенклатура.ЕдиницаИзмерения.Код,
			|	КоличествоНоменктарурыПоВидамЗапасов.Номенклатура.ЕдиницаИзмерения.Наименование,
			|	СебестоимостьТоваров.КоличествоОстаток,
			|	ВЫБОР
			|		КОГДА ЕСТЬNULL(СебестоимостьТоваров.КоличествоОстаток, 0) = 0
			|			ТОГДА 0
			|		ИНАЧЕ ЕСТЬNULL(СебестоимостьТоваров.СтоимостьРеглОстаток, 0) / СебестоимостьТоваров.КоличествоОстаток
			|	КОНЕЦ,
			|	КоличествоНоменктарурыПоВидамЗапасов.ВидЗапасов
			|
			|УПОРЯДОЧИТЬ ПО
			|	ТоварНаименование,
			|	ХарактеристикаПредставление
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	&Руководитель КАК Руководитель,
			|	&ДолжностьРуководителя КАК ДолжностьРуководителя,
			|	&ГлавныйБухгалтер КАК ГлавныйБухгалтер,
			|	ВЫРАЗИТЬ(&Организация КАК Справочник.Организации).НаименованиеСокращенное КАК ОрганизацияПредставление,
			|	ВЫРАЗИТЬ(&Организация КАК Справочник.Организации).КодПоОКПО КАК ОрганизацияПоОКПО,
			|	ВЫРАЗИТЬ(&Организация КАК Справочник.Организации).Префикс КАК Префикс,
			|	ПересчетТоваров.Склад.ТекущийОтветственный КАК Кладовщик,
			|	ПересчетТоваров.Склад.ТекущаяДолжностьОтветственного КАК ДолжностьКладовщика,
			|	ПересчетТоваров.Склад.Наименование КАК ПодразделениеПредставление,
			|	ПересчетТоваров.Дата КАК ДатаНачала,
			|	ПересчетТоваров.Дата КАК ДатаОкончания,
			|	ПересчетТоваров.Дата КАК ОснованиеДата,
			|	ПересчетТоваров.Номер КАК ОснованиеНомер,
			|	ПересчетТоваров.Номер КАК НомерДокумента,
			|	ПересчетТоваров.Дата КАК ДатаДокумента,
			|	ПересчетТоваров.Ссылка КАК Ссылка,
			|	&ДатаОстатков КАК ДатаСнятияОстатков
			|ИЗ
			|	Документ.ПересчетТоваров КАК ПересчетТоваров
			|ГДЕ
			|	ПересчетТоваров.Ссылка = &ДокументОснование
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ РАЗЛИЧНЫЕ
			|	СвязанныеТовары.Номенклатура КАК Номенклатура,
			|	СвязанныеТовары.Характеристика КАК Характеристика,
			|	СвязанныеТовары.СвязаннаяНоменклатура КАК СвязаннаяНоменклатура,
			|	СвязанныеТовары.СвязаннаяХарактеристика КАК СвязаннаяХарактеристика,
			|	СУММА(СвязанныеТовары.Количество) КАК Количество
			|ИЗ
			|	СвязанныеТовары КАК СвязанныеТовары
			|
			|СГРУППИРОВАТЬ ПО
			|	СвязанныеТовары.Номенклатура,
			|	СвязанныеТовары.Характеристика,
			|	СвязанныеТовары.СвязаннаяНоменклатура,
			|	СвязанныеТовары.СвязаннаяХарактеристика";
			
		КонецЕсли;
		
		Результаты = Запрос.ВыполнитьПакет();
		РезультатПоШапке = Результаты[3];
		РезультатПоТабличнойЧасти = Результаты[2];
		РезультатКурсВалюты = Неопределено;
		РезультатСвязанныеТовары = Результаты[4];
		
	ИначеЕсли ПредварительныеДанныеРезультат.ИсточникИнформацииОЦенахДляПечати = Перечисления.ИсточникиИнформацииОЦенахДляПечати.ПоВидуЦен Тогда 
		
		Запрос.Текст =
		"ВЫБРАТЬ
		|	СписаниеНедостачТоваровВидЗапасов.Номенклатура КАК Номенклатура,
		|	СписаниеНедостачТоваровВидЗапасов.Характеристика КАК Характеристика,
		|	СписаниеНедостачТоваровВидЗапасов.Количество КАК КоличествоНедостачи,
		|	0 КАК КоличествоИзлишков,
		|	""1_Списание"" КАК Операция,
		|	NULL КАК СвязаннаяНоменклатура,
		|	NULL КАК СвязаннаяХарактеристика
		|ПОМЕСТИТЬ ВложенныйЗапрос
		|ИЗ
		|	Документ.СписаниеНедостачТоваров.Товары КАК СписаниеНедостачТоваровВидЗапасов
		|ГДЕ
		|	СписаниеНедостачТоваровВидЗапасов.Ссылка.ДокументОснование = &ДокументОснование
		|	И СписаниеНедостачТоваровВидЗапасов.Ссылка.Организация = &Организация
		|	И СписаниеНедостачТоваровВидЗапасов.Ссылка.Проведен
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ОприходованиеИзлишковТоваровТовары.Номенклатура,
		|	ОприходованиеИзлишковТоваровТовары.Характеристика,
		|	0,
		|	ОприходованиеИзлишковТоваровТовары.Количество,
		|	""2_Оприходование"",
		|	NULL,
		|	NULL
		|ИЗ
		|	Документ.ОприходованиеИзлишковТоваров.Товары КАК ОприходованиеИзлишковТоваровТовары
		|ГДЕ
		|	ОприходованиеИзлишковТоваровТовары.Ссылка.ДокументОснование = &ДокументОснование
		|	И ОприходованиеИзлишковТоваровТовары.Ссылка.Организация = &Организация
		|	И ОприходованиеИзлишковТоваровТовары.Ссылка.Проведен
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ПересортицаТоваровТовары.Номенклатура,
		|	ПересортицаТоваровТовары.Характеристика,
		|	ПересортицаТоваровТовары.Количество,
		|	0,
		|	""3_ПересортицаСписание"",
		|	ПересортицаТоваровТовары.НоменклатураОприходование,
		|	ПересортицаТоваровТовары.ХарактеристикаОприходование
		|ИЗ
		|	Документ.ПересортицаТоваров.Товары КАК ПересортицаТоваровТовары
		|ГДЕ
		|	ПересортицаТоваровТовары.Ссылка.ДокументОснование = &ДокументОснование
		|	И ПересортицаТоваровТовары.Ссылка.Организация = &Организация
		|	И ПересортицаТоваровТовары.Ссылка.Проведен
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ПересортицаТоваровТовары.НоменклатураОприходование,
		|	ПересортицаТоваровТовары.ХарактеристикаОприходование,
		|	0,
		|	ПересортицаТоваровТовары.Количество,
		|	""4_ПересортицаОприходование"",
		|	ПересортицаТоваровТовары.Номенклатура,
		|	ПересортицаТоваровТовары.Характеристика
		|ИЗ
		|	Документ.ПересортицаТоваров.Товары КАК ПересортицаТоваровТовары
		|ГДЕ
		|	ПересортицаТоваровТовары.Ссылка.ДокументОснование = &ДокументОснование
		|	И ПересортицаТоваровТовары.Ссылка.Организация = &Организация
		|	И ПересортицаТоваровТовары.Ссылка.Проведен
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВложенныйЗапрос.Номенклатура,
		|	ВложенныйЗапрос.Характеристика,
		|	СУММА(ВложенныйЗапрос.КоличествоНедостачи) КАК КоличествоНедостачи,
		|	СУММА(ВложенныйЗапрос.КоличествоИзлишков) КАК КоличествоИзлишков,
		|	ВложенныйЗапрос.Операция,
		|	ВложенныйЗапрос.СвязаннаяНоменклатура,
		|	ВложенныйЗапрос.СвязаннаяХарактеристика,
		|	ВЫРАЗИТЬ(&ДокументОснование КАК Документ.ПересчетТоваров).ВидЦены КАК ВидЦен
		|ПОМЕСТИТЬ ТаблицаТовары
		|ИЗ
		|	ВложенныйЗапрос КАК ВложенныйЗапрос
		|
		|СГРУППИРОВАТЬ ПО
		|	ВложенныйЗапрос.Операция,
		|	ВложенныйЗапрос.СвязаннаяНоменклатура,
		|	ВложенныйЗапрос.СвязаннаяХарактеристика,
		|	ВложенныйЗапрос.Номенклатура,
		|	ВложенныйЗапрос.Характеристика
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ТаблицаТовары.Номенклатура,
		|	ТаблицаТовары.Характеристика КАК Характеристика,
		|	ТаблицаТовары.Характеристика.НаименованиеПолное КАК ХарактеристикаПредставление,
		|	ТаблицаТовары.КоличествоНедостачи,
		|	ТаблицаТовары.КоличествоИзлишков,
		|	ТаблицаТовары.КоличествоНедостачи * ВЫБОР
		|		КОГДА НЕ ЦеныНоменклатуры.Упаковка.Коэффициент ЕСТЬ NULL 
		|				И ЦеныНоменклатуры.Упаковка.Коэффициент <> 0
		|			ТОГДА ЕСТЬNULL(ЦеныНоменклатуры.Цена, 0) / ЦеныНоменклатуры.Упаковка.Коэффициент
		|		ИНАЧЕ ЕСТЬNULL(ЦеныНоменклатуры.Цена, 0)
		|	КОНЕЦ КАК СуммаНедостачи,
		|	ТаблицаТовары.КоличествоИзлишков * ВЫБОР
		|		КОГДА НЕ ЦеныНоменклатуры.Упаковка.Коэффициент ЕСТЬ NULL 
		|				И ЦеныНоменклатуры.Упаковка.Коэффициент <> 0
		|			ТОГДА ЕСТЬNULL(ЦеныНоменклатуры.Цена, 0) / ЦеныНоменклатуры.Упаковка.Коэффициент
		|		ИНАЧЕ ЕСТЬNULL(ЦеныНоменклатуры.Цена, 0)
		|	КОНЕЦ КАК СуммаИзлишков,
		|	ТаблицаТовары.Операция,
		|	ТаблицаТовары.СвязаннаяНоменклатура,
		|	ТаблицаТовары.СвязаннаяХарактеристика,
		|	ТаблицаТовары.Номенклатура.НаименованиеПолное КАК ТоварНаименование,
		|	ТаблицаТовары.Номенклатура.ЕдиницаИзмерения.Код КАК ЕдиницаИзмеренияКод,
		|	ТаблицаТовары.Номенклатура.ЕдиницаИзмерения.Наименование КАК ЕдиницаИзмеренияНаименование,
		|	ТаблицаТовары.Номенклатура." + КолонкаКодов + " КАК ТоварКод,
		|	ЛОЖЬ КАК ЭтоВозвратнаяТара
		|ИЗ
		|	ТаблицаТовары КАК ТаблицаТовары
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЦеныНоменклатуры.СрезПоследних(
		|				КОНЕЦПЕРИОДА(&ДатаОстатков, ДЕНЬ),
		|				(ВидЦены, Номенклатура, Характеристика) В
		|					(ВЫБРАТЬ
		|						Таблица.ВидЦен,
		|						Таблица.Номенклатура,
		|						Таблица.Характеристика
		|					ИЗ
		|						ТаблицаТовары КАК Таблица)) КАК ЦеныНоменклатуры
		|		ПО ТаблицаТовары.Номенклатура = ЦеныНоменклатуры.Номенклатура
		|			И ТаблицаТовары.Характеристика = ЦеныНоменклатуры.Характеристика
		|
		|УПОРЯДОЧИТЬ ПО
		|	ТоварНаименование
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	&Руководитель КАК Руководитель,
		|	&ДолжностьРуководителя КАК ДолжностьРуководителя,
		|	&ГлавныйБухгалтер КАК ГлавныйБухгалтер,
		|	ВЫРАЗИТЬ(&Организация КАК Справочник.Организации).НаименованиеСокращенное КАК ОрганизацияПредставление,
		|	ВЫРАЗИТЬ(&Организация КАК Справочник.Организации).КодПоОКПО КАК ОрганизацияПоОКПО,
		|	ВЫРАЗИТЬ(&Организация КАК Справочник.Организации).Префикс КАК Префикс,
		|	ПересчетТоваров.Склад.ТекущийОтветственный КАК Кладовщик,
		|	ПересчетТоваров.Склад.ТекущаяДолжностьОтветственного КАК ДолжностьКладовщика,
		|	ПересчетТоваров.Склад.Наименование КАК ПодразделениеПредставление,
		|	ПересчетТоваров.Дата КАК ДатаНачала,
		|	ПересчетТоваров.Дата КАК ДатаОкончания,
		|	ПересчетТоваров.Дата КАК ОснованиеДата,
		|	ПересчетТоваров.Номер КАК ОснованиеНомер,
		|	ПересчетТоваров.Номер КАК НомерДокумента,
		|	ПересчетТоваров.Дата КАК ДатаДокумента,
		|	ПересчетТоваров.Ссылка КАК Ссылка,
		|	&ДатаОстатков КАК ДатаСнятияОстатков
		|ИЗ
		|	Документ.ПересчетТоваров КАК ПересчетТоваров
		|ГДЕ
		|	ПересчетТоваров.Ссылка = &ДокументОснование
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ ПЕРВЫЕ 1
		|	КурсыВалютСрезПоследних.Курс / КурсыВалютСрезПоследних.Кратность КАК КоэффициентПересчета
		|ИЗ
		|	РегистрСведений.КурсыВалют.СрезПоследних(
		|			&ДатаОстатков,
		|			Валюта В
		|				(ВЫБРАТЬ ПЕРВЫЕ 1
		|					Таблица.ВидЦен.ВалютаЦены
		|				ИЗ
		|					ТаблицаТовары КАК Таблица)) КАК КурсыВалютСрезПоследних";
		
		Результаты = Запрос.ВыполнитьПакет();
		РезультатПоШапке = Результаты[3];
		РезультатПоТабличнойЧасти = Результаты[2];
		РезультатКурсВалюты = Результаты[4];
		РезультатСвязанныеТовары = Неопределено;
		
	КонецЕсли;
		
	Возврат Новый Структура(
		"РезультатПоШапке, РезультатПоТабличнойЧасти, РезультатКурсВалюты, РезультатСвязанныеТовары",
		РезультатПоШапке,
		РезультатПоТабличнойЧасти,
		РезультатКурсВалюты,
		РезультатСвязанныеТовары

	);
	
КонецФункции

////////////////////////////////////////////////////////////////////////////////
// Обновление информационной базы

Процедура ЗаполнитьИсточникИнформацииОЦенахДляПечати() Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ПересчетТоваров.Ссылка КАК Ссылка
	|ИЗ
	|	Документ.ПересчетТоваров КАК ПересчетТоваров
	|ГДЕ
	|	ПересчетТоваров.ИсточникИнформацииОЦенахДляПечати = ЗНАЧЕНИЕ(Перечисление.ИсточникиИнформацииОЦенахДляПечати.ПустаяСсылка)";
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		
		ДокументОбъект = Выборка.Ссылка.ПолучитьОбъект();
		
		ДокументОбъект.ИсточникИнформацииОЦенахДляПечати = Перечисления.ИсточникиИнформацииОЦенахДляПечати.ПоВидуЦен;
		ДокументОбъект.ОбменДанными.Загрузка = Истина;
		ДокументОбъект.Записать();
		
	КонецЦикла;
	
КонецПроцедуры

#КонецЕсли