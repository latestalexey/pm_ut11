#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

////////////////////////////////////////////////////////////////////////////////
// Проведение

Процедура ИнициализироватьДанныеДокумента(ДокументСсылка, ДополнительныеСвойства) Экспорт

	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Ссылка", ДокументСсылка);
	
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ДанныеДокумента.Дата КАК Период,
		|	ДанныеДокумента.ФормироватьСторнирующиеЗаписиДопЛистовВручную КАК ФормироватьСторнирующиеЗаписиДопЛистовВручную,
		|	ДанныеДокумента.Организация КАК Организация,
		|	ДанныеДокумента.Контрагент КАК Контрагент,
		|	ДанныеДокумента.ДокументРасчетов КАК ДокументРасчетов,
		|	ДанныеДокумента.Валюта,
		|	ДанныеДокумента.ЗаписьДополнительногоЛиста КАК ЗаписьДополнительногоЛиста,
		|	ВЫБОР
		|		КОГДА ДанныеДокумента.ЗаписьДополнительногоЛиста
		|			ТОГДА ДанныеДокумента.КорректируемыйПериод
		|		ИНАЧЕ ДАТАВРЕМЯ(1, 1, 1)
		|	КОНЕЦ КАК КорректируемыйПериод
		|ИЗ
		|	Документ.ЗаписьКнигиПродаж КАК ДанныеДокумента
		|ГДЕ
		|	ДанныеДокумента.Ссылка = &Ссылка";
	
	Реквизиты = Запрос.Выполнить().Выбрать();
	Реквизиты.Следующий();
	
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	&Организация КАК Организация,
		|	&СчетФактура КАК СчетФактура,
		|	&ДатаДокумента КАК Период,
		|	&Контрагент КАК Покупатель,
		|	&ЗаписьДополнительногоЛиста КАК ЗаписьДополнительногоЛиста,
		|	&КорректируемыйПериод КАК КорректируемыйПериод,
		|	ВЫБОР
		|		КОГДА &ЭтоКорректировкаНачисленногоНДС
		|			ТОГДА ТаблицаЦенности.ВидЦенности
		|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.Товары)
		|	КОНЕЦ КАК ВидЦенности,
		|	ВЫБОР
		|		КОГДА &ЭтоКорректировкаНачисленногоНДС
		|			ТОГДА ТаблицаЦенности.Событие
		|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.СобытияПоНДСПродажи.Реализация)
		|	КОНЕЦ КАК Событие,
		|	ТаблицаЦенности.СтавкаНДС КАК СтавкаНДС,
		|	СУММА(ТаблицаЦенности.Сумма * &КоэффициентПересчетаВалюты) КАК СуммаБезНДС,
		|	СУММА(ТаблицаЦенности.СуммаНДС * &КоэффициентПересчетаВалюты) КАК НДС,
		|	ВЫБОР
		|		КОГДА &ЗаписьДополнительногоЛиста
		|			ТОГДА ТаблицаЦенности.СторнирующаяЗаписьДопЛиста
		|		ИНАЧЕ ЛОЖЬ
		|	КОНЕЦ КАК СторнирующаяЗаписьДопЛиста,
		|	&ДатаДокумента КАК ДатаСобытия
		|ИЗ
		|	Документ.ЗаписьКнигиПродаж.Ценности КАК ТаблицаЦенности
		|ГДЕ
		|	ТаблицаЦенности.Ссылка = &Ссылка
		|
		|СГРУППИРОВАТЬ ПО
		|	ТаблицаЦенности.СтавкаНДС,
		|	ВЫБОР
		|		КОГДА &ЭтоКорректировкаНачисленногоНДС
		|			ТОГДА ТаблицаЦенности.ВидЦенности
		|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.Товары)
		|	КОНЕЦ,
		|	ВЫБОР
		|		КОГДА &ЭтоКорректировкаНачисленногоНДС
		|			ТОГДА ТаблицаЦенности.Событие
		|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.СобытияПоНДСПродажи.Реализация)
		|	КОНЕЦ,
		|	ВЫБОР
		|		КОГДА &ЗаписьДополнительногоЛиста
		|			ТОГДА ТаблицаЦенности.СторнирующаяЗаписьДопЛиста
		|		ИНАЧЕ ЛОЖЬ
		|	КОНЕЦ
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	&Организация КАК Организация,
		|	&СчетФактура КАК СчетФактура,
		|	&ДатаДокумента КАК Период,
		|	&Контрагент КАК Покупатель,
		|	&ЗаписьДополнительногоЛиста КАК ЗаписьДополнительногоЛиста,
		|	ВЫБОР
		|		КОГДА &ЗаписьДополнительногоЛиста
		|			ТОГДА &КорректируемыйПериод
		|		ИНАЧЕ ДАТАВРЕМЯ(1, 1, 1)
		|	КОНЕЦ КАК КорректируемыйПериод,
		|	NULL КАК ВидЦенности,
		|	0 КАК СтавкаНДС,
		|	0 КАК СуммаБезНДС,
		|	0 КАК НДС,
		|	ЛОЖЬ КАК СторнирующаяЗаписьДопЛиста,
		|	ЗНАЧЕНИЕ(Перечисление.СобытияПоНДСПродажи.Реализация),
		|	&ДатаДокумента,
		|	ТаблицаДокументыОплаты.ДатаОплаты КАК ДатаОплаты,
		|	ТаблицаДокументыОплаты.ДокументОплаты КАК ДокументОплаты
		|ИЗ
		|	Документ.ЗаписьКнигиПродаж.ДокументыОплаты КАК ТаблицаДокументыОплаты
		|ГДЕ
		|	ТаблицаДокументыОплаты.Ссылка = &Ссылка";
		
	
	Запрос.УстановитьПараметр("ДатаДокумента",	Реквизиты.Период);
	Запрос.УстановитьПараметр("Организация",	Реквизиты.Организация);
	Запрос.УстановитьПараметр("Контрагент",		Реквизиты.Контрагент);
	Запрос.УстановитьПараметр("СчетФактура",	?(ЗначениеЗаполнено(Реквизиты.ДокументРасчетов), Реквизиты.ДокументРасчетов, ДокументСсылка));	
	Запрос.УстановитьПараметр("ЗаписьДополнительногоЛиста",	Реквизиты.ЗаписьДополнительногоЛиста);
	Запрос.УстановитьПараметр("КорректируемыйПериод",		Реквизиты.КорректируемыйПериод);
	Запрос.УстановитьПараметр("ЭтоКорректировкаНачисленногоНДС",	ЗначениеЗаполнено(Реквизиты.ДокументРасчетов));
	
	// Рассчитаем коэффициент пересчета суммы в валюту регл. учета
	КоэффициентПересчетаВалюты = 1;
	ВалютаРеглУчета = Константы.ВалютаРегламентированногоУчета.Получить();
	Если Реквизиты.Валюта <> ВалютаРеглУчета Тогда
		Коэффициенты = РаботаСКурсамивалютУТ.ПолучитьКоэффициентыПересчетаВалюты(Реквизиты.Валюта, Неопределено, Реквизиты.Период);
		КоэффициентПересчетаВалюты = Коэффициенты.КоэффициентПересчетаВВалютуРегл;
	КонецЕсли; 
	Запрос.УстановитьПараметр("КоэффициентПересчетаВалюты", КоэффициентПересчетаВалюты);
		
	Результат = Запрос.ВыполнитьПакет();
	
	ДанныеКниги     = Результат[0].Выгрузить();
	ДокументыОплаты = Результат[1].Выгрузить();
	
	ДанныеКниги.Колонки.Добавить("ДатаОплаты", Новый ОписаниеТипов("Дата"));
	ДанныеКниги.Колонки.Добавить("ДокументОплаты", Новый ОписаниеТипов(ДокументыОплаты.Колонки.ДокументОплаты.ТипЗначения));
	
	ДополнитьСторнирующимиЗаписямиДопЛистов(ДокументСсылка, Реквизиты, ДанныеКниги, ДокументыОплаты);
	
	Для каждого ЭлКоллекции Из ДокументыОплаты Цикл
		НоваяЗапись = ДанныеКниги.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяЗапись, ЭлКоллекции);
	КонецЦикла; 
	
	ТаблицыДляДвижений = ДополнительныеСвойства.ТаблицыДляДвижений;
	ТаблицыДляДвижений.Вставить("ТаблицаНДСЗаписиКнигиПродаж", ДанныеКниги);

КонецПроцедуры

Функция ТаблицаКурсовВалют(ТаблицаВалют)
	
	ТаблицаКурсовВалют = Новый ТаблицаЗначений;
	ТаблицаКурсовВалют.Колонки.Добавить("Валюта",    Новый ОписаниеТипов("СправочникСсылка.Валюты"));
	ТаблицаКурсовВалют.Колонки.Добавить("Дата",      Новый ОписаниеТипов("Дата"));
	ТаблицаКурсовВалют.Колонки.Добавить("Курс",      Новый ОписаниеТипов("Число"));
	ТаблицаКурсовВалют.Колонки.Добавить("Кратность", Новый ОписаниеТипов("Число"));
	
	Для Каждого ДанныеВалюты Из ТаблицаВалют Цикл
		
		НоваяСтрока = ТаблицаКурсовВалют.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, ДанныеВалюты, , "Дата");
		НоваяСтрока.Дата = НачалоДня(ДанныеВалюты.Дата);
		
		КурсыВалюты = РаботаСКурсамиВалют.ПолучитьКурсВалюты(ДанныеВалюты.Валюта, НачалоДня(ДанныеВалюты.Дата));
		НоваяСтрока.Курс = КурсыВалюты.Курс;
		НоваяСтрока.Кратность = КурсыВалюты.Кратность;
		
	КонецЦикла;
	
	Возврат ТаблицаКурсовВалют;
	
КонецФункции

Процедура ДополнитьСторнирующимиЗаписямиДопЛистов(ДокументСсылка, СтруктураШапкиДокумента, ТаблицаДвижений_НДСЗаписиКнигиПродаж, ТаблицаПоДокументамОплаты)
	
	Если СтруктураШапкиДокумента.ФормироватьСторнирующиеЗаписиДопЛистовВручную Тогда
		Возврат;
	КонецЕсли;
	
	ТаблицаДвижений_НДСЗаписиКнигиПродаж.Индексы.Добавить("ЗаписьДополнительногоЛиста");
	Если ТаблицаДвижений_НДСЗаписиКнигиПродаж.Найти(Истина, "ЗаписьДополнительногоЛиста") = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если ТаблицаДвижений_НДСЗаписиКнигиПродаж.Колонки.Найти("СторнирующаяЗаписьДопЛиста") = Неопределено Тогда
		ТаблицаДвижений_НДСЗаписиКнигиПродаж.Колонки.Добавить("СторнирующаяЗаписьДопЛиста", Новый ОписаниеТипов("Булево"));
	КонецЕсли; 

	СвернутаяТаблицаЗаписейДопЛиста = ТаблицаДвижений_НДСЗаписиКнигиПродаж.Скопировать();
	Для каждого ТекущаяСтрока Из СвернутаяТаблицаЗаписейДопЛиста Цикл
		// Авансы отрабатываются с учетом ставки НДС (на каждую ставку отдельный счет-фактура)
		Если НЕ (ТекущаяСтрока.ВидЦенности = Перечисления.ВидыЦенностей.АвансыПолученные
			ИЛИ ТекущаяСтрока.ВидЦенности = Перечисления.ВидыЦенностей.АвансыПолученные0) Тогда
			ТекущаяСтрока.СтавкаНДС = Неопределено;
		КонецЕсли; 
	КонецЦикла; 
	
	СвернутаяТаблицаЗаписейДопЛиста.Свернуть("СчетФактура,СтавкаНДС,ЗаписьДополнительногоЛиста,КорректируемыйПериод","СуммаБезНДС,НДС");
	
	СвернутаяТаблицаЗаписейДопЛиста.Индексы.Добавить("ЗаписьДополнительногоЛиста");
	СтрокиДопЛистов = СвернутаяТаблицаЗаписейДопЛиста.НайтиСтроки(Новый Структура("ЗаписьДополнительногоЛиста", Истина));
	
	Запрос = Новый Запрос();
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("СтрокиДопЛистов", СвернутаяТаблицаЗаписейДопЛиста);
	Запрос.Текст = "ВЫБРАТЬ
	               |	СтрокиДопЛистов.СчетФактура КАК СчетФактура,
	               |	СтрокиДопЛистов.КорректируемыйПериод КАК КорректируемыйПериод
	               |ПОМЕСТИТЬ ВТСтрокиДопЛистов
	               |ИЗ
	               |	&СтрокиДопЛистов КАК СтрокиДопЛистов
	               |ГДЕ
	               |	СтрокиДопЛистов.ЗаписьДополнительногоЛиста = ИСТИНА
	               |
	               |ИНДЕКСИРОВАТЬ ПО
	               |	СчетФактура
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ ПЕРВЫЕ 1
	               |	ВТСтрокиДопЛистов.КорректируемыйПериод
	               |ИЗ
	               |	ВТСтрокиДопЛистов КАК ВТСтрокиДопЛистов
	               |
	               |УПОРЯДОЧИТЬ ПО
	               |	ВТСтрокиДопЛистов.КорректируемыйПериод";
	
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда
		НачалоНалоговогоПериодаКорректировки = НачалоКвартала(Выборка.КорректируемыйПериод);
	Иначе
		Возврат;
	КонецЕсли;	
		
	Запрос.Текст = "ВЫБРАТЬ
	               |	НДСЗаписиКнигиПродажОбороты.Организация,
	               |	НДСЗаписиКнигиПродажОбороты.Покупатель,
	               |	НДСЗаписиКнигиПродажОбороты.СчетФактура,
	               |	НДСЗаписиКнигиПродажОбороты.ВидЦенности,
	               |	НДСЗаписиКнигиПродажОбороты.СтавкаНДС,
	               |	НДСЗаписиКнигиПродажОбороты.ДатаОплаты,
	               |	НДСЗаписиКнигиПродажОбороты.ДокументОплаты,
	               |	НДСЗаписиКнигиПродажОбороты.СуммаБезНДСОборот * -1 КАК СуммаБезНДССторно,
	               |	НДСЗаписиКнигиПродажОбороты.НДСОборот * -1 КАК НДССторно,
	               |	НДСЗаписиКнигиПродажОбороты.СуммаБезНДСОборот КАК СуммаБезНДС,
	               |	НДСЗаписиКнигиПродажОбороты.НДСОборот КАК НДС,
	               |	НДСЗаписиКнигиПродажОбороты.ЗаписьДополнительногоЛиста,
	               |	НДСЗаписиКнигиПродажОбороты.КорректируемыйПериод,
	               |	НДСЗаписиКнигиПродажОбороты.Период
	               |ИЗ
	               |	РегистрНакопления.НДСЗаписиКнигиПродаж.Обороты(
	               |			&НачалоПериода,
	               |			&КонецПериодаГраница,
	               |			Запись,
	               |			СчетФактура В
	               |				(ВЫБРАТЬ
	               |					ВТСтрокиДопЛистов.СчетФактура
	               |				ИЗ
	               |					ВТСтрокиДопЛистов КАК ВТСтрокиДопЛистов)) КАК НДСЗаписиКнигиПродажОбороты
				   |ГДЕ
				   |	НДСЗаписиКнигиПродажОбороты.Регистратор <> &ДокументСсылка";
	
	Запрос.УстановитьПараметр("НачалоПериода", НачалоНалоговогоПериодаКорректировки);
	Запрос.УстановитьПараметр("КонецПериодаГраница", Новый Граница(КонецДня(СтруктураШапкиДокумента.Период), ВидГраницы.Включая));
	Запрос.УстановитьПараметр("ДокументСсылка", ДокументСсылка);
		
	ВыборкаДляПоиска = Запрос.Выполнить().Выбрать();
	
	ОтработанныеСФпоПериодам = Новый ТаблицаЗначений();
	ОтработанныеСФпоПериодам.Колонки.Добавить("СчетФактура");
	ОтработанныеСФпоПериодам.Колонки.Добавить("НалоговыйПериод");
	ОтработанныеСФпоПериодам.Колонки.Добавить("СтавкаНДС");
	ОтработанныеСФпоПериодам.Индексы.Добавить("СчетФактура,НалоговыйПериод");
		
	Для каждого СтрокаДопЛиста Из СтрокиДопЛистов Цикл
		
		НачалоНалоговогоПериодаКорректировки = НачалоКвартала(СтрокаДопЛиста.КорректируемыйПериод);
		КонецНалоговогоПериодаКорректировки  = КонецКвартала(СтрокаДопЛиста.КорректируемыйПериод);
		
		ОтборОтработанныхЗаписей = Новый Структура("СчетФактура, НалоговыйПериод", СтрокаДопЛиста.СчетФактура, НачалоНалоговогоПериодаКорректировки);
		Если ЗначениеЗаполнено(СтрокаДопЛиста.СтавкаНДС) Тогда
			ОтборОтработанныхЗаписей.Вставить("СтавкаНДС", СтрокаДопЛиста.СтавкаНДС);
		КонецЕсли; 
				
		Если НЕ (ОтработанныеСФпоПериодам.НайтиСтроки(ОтборОтработанныхЗаписей).Количество() = 0) Тогда
			// СФ по данному налоговому периоду уже отработан
			Продолжить;
		Иначе
			НоваяЗапись = ОтработанныеСФпоПериодам.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяЗапись, ОтборОтработанныхЗаписей);
		КонецЕсли; 
				
		
		// Структура поиска для отбора записей
		СтруктураПоиска = Новый Структура();
		СтруктураПоиска.Вставить("СчетФактура", СтрокаДопЛиста.СчетФактура);
		Если ЗначениеЗаполнено(СтрокаДопЛиста.СтавкаНДС) Тогда
			СтруктураПоиска.Вставить("СтавкаНДС", СтрокаДопЛиста.СтавкаНДС);
		КонецЕсли;
		
		Пока ВыборкаДляПоиска.НайтиСледующий(СтруктураПоиска) Цикл
			Если (ВыборкаДляПоиска.ЗаписьДополнительногоЛиста 
				И ВыборкаДляПоиска.КорректируемыйПериод >= НачалоНалоговогоПериодаКорректировки 
				И ВыборкаДляПоиска.КорректируемыйПериод <= КонецНалоговогоПериодаКорректировки)
				ИЛИ (НЕ ВыборкаДляПоиска.ЗаписьДополнительногоЛиста
			    И ВыборкаДляПоиска.Период = НачалоНалоговогоПериодаКорректировки) Тогда
				
				СтрокаТаблицыДвижений = ТаблицаДвижений_НДСЗаписиКнигиПродаж.Добавить();
				
				ЗаполнитьЗначенияСвойств(СтрокаТаблицыДвижений, ВыборкаДляПоиска);
				
				СтрокаТаблицыДвижений.ЗаписьДополнительногоЛиста = Истина;
				СтрокаТаблицыДвижений.СторнирующаяЗаписьДопЛиста = Истина;
								
				СтрокаТаблицыДвижений.СуммаБезНДС = ВыборкаДляПоиска.СуммаБезНДССторно; 
				СтрокаТаблицыДвижений.НДС         = ВыборкаДляПоиска.НДССторно;
				
				СтрокаТаблицыДвижений.КорректируемыйПериод = СтрокаДопЛиста.КорректируемыйПериод;
																				
				СтрокаТаблицыДвижений = ТаблицаДвижений_НДСЗаписиКнигиПродаж.Добавить();
				
				ЗаполнитьЗначенияСвойств(СтрокаТаблицыДвижений, ВыборкаДляПоиска);
									
				СтрокаТаблицыДвижений.ЗаписьДополнительногоЛиста = Истина;
				СтрокаТаблицыДвижений.СторнирующаяЗаписьДопЛиста = Ложь;
				
				СтрокаТаблицыДвижений.СуммаБезНДС = ВыборкаДляПоиска.СуммаБезНДС; 
				СтрокаТаблицыДвижений.НДС         = ВыборкаДляПоиска.НДС;
				
				СтрокаТаблицыДвижений.КорректируемыйПериод = СтрокаДопЛиста.КорректируемыйПериод;
											
			КонецЕсли;	 
		КонецЦикла;	
	КонецЦикла;
	
	Если ТаблицаДвижений_НДСЗаписиКнигиПродаж.Найти(Истина, "СторнирующаяЗаписьДопЛиста") <> Неопределено Тогда
		КоличествоСтрок = ТаблицаПоДокументамОплаты.Количество();
		Для К = 0 По КоличествоСтрок - 1 Цикл
			НоваяСтрока = ТаблицаПоДокументамОплаты.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, ТаблицаПоДокументамОплаты[К]);
			НоваяСтрока.СторнирующаяЗаписьДопЛиста = Истина;
		КонецЦикла;
	КонецЕсли;
    	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// Печать

Функция ПолучитьДанныеДляПечатнойФормыСчетФактура(ПараметрыПечати, МассивОбъектов) Экспорт
	
	Запрос = Новый Запрос("
	|ВЫБРАТЬ
	|	ТаблицаТовары.Ссылка КАК Ссылка,
	|	МАКСИМУМ(
	|		ВЫБОР КОГДА ТаблицаТовары.Номенклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Услуга) ТОГДА
	|			Истина
	|		ИНАЧЕ
	|			Ложь
	|		КОНЕЦ
	|	) КАК ЕстьУслуги,
	|	МАКСИМУМ(
	|		ВЫБОР КОГДА ТаблицаТовары.Номенклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Товар) ТОГДА
	|			Истина
	|		ИНАЧЕ
	|			Ложь
	|		КОНЕЦ
	|	)КАК ЕстьТовары
	|
	|ПОМЕСТИТЬ НоменклатураДокументов
	|ИЗ
	|	Документ.ЗаписьКнигиПродаж.Ценности КАК ТаблицаТовары
	|ГДЕ
	|	ТаблицаТовары.Ссылка В (&МассивДокументов)
	|	И ТаблицаТовары.Ссылка.Проведен
	|	
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаТовары.Ссылка
	|;
	|////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СчетФактура.ДокументОснование		   КАК ДокументОснование,
	|	МАКСИМУМ(СчетФактура.НомерИсправления) КАК НомерИсправления
	|ПОМЕСТИТЬ НомераИсправленийСчетовФактур
	|ИЗ 
	|	Документ.СчетФактураВыданный КАК СчетФактура
	|ГДЕ
	|	СчетФактура.ДокументОснование В (&МассивДокументов)
	|	И НЕ СчетФактура.ПометкаУдаления
	|
	|СГРУППИРОВАТЬ ПО
	|	СчетФактура.ДокументОснование
	|;
	|////////////////////////////////////////////////////////////////////////////
	|// ВРЕМЕННАЯ ТАБЛИЦА ВтСчетаФактуры
	|ВЫБРАТЬ
	|	СчетФактура.ДокументОснование КАК ДокументОснование,
	|	СчетФактура.Исправление КАК Исправление,
	|	СчетФактура.Номер КАК Номер,
	|
	|	ВЫБОР КОГДА СчетФактура.Исправление ТОГДА
	|		ЕСТЬNULL(ИсходныйСчетФактура.Дата, Неопределено)
	|	ИНАЧЕ
	|		СчетФактура.Дата
	|	КОНЕЦ КАК Дата,
	|
	|	ВЫБОР КОГДА СчетФактура.Исправление ТОГДА
	|		СчетФактура.НомерИсправления
	|	ИНАЧЕ
	|		Неопределено
	|	КОНЕЦ КАК НомерИсправления,
	|
	|	ВЫБОР КОГДА СчетФактура.Исправление ТОГДА
	|		СчетФактура.Дата
	|	ИНАЧЕ
	|		Неопределено
	|	КОНЕЦ КАК ДатаИсправления,
	|
	|	СчетФактура.Валюта КАК Валюта,
	|	СчетФактура.СтрокаПлатежноРасчетныеДокументы КАК СтрокаПлатежноРасчетныеДокументы
	|	
	|ПОМЕСТИТЬ ВтСчетаФактуры
	|ИЗ 
	|	НомераИсправленийСчетовФактур КАК НомераИсправленийСчетовФактур
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.СчетФактураВыданный КАК СчетФактура
	|	ПО НомераИсправленийСчетовФактур.ДокументОснование = СчетФактура.ДокументОснование
	|		И НомераИсправленийСчетовФактур.НомерИсправления = СчетФактура.НомерИсправления
	|		И НЕ СчетФактура.ПометкаУдаления
	|	ЛЕВОЕ СОЕДИНЕНИЕ Документ.СчетФактураВыданный КАК ИсходныйСчетФактура
	|	ПО СчетФактура.СчетФактураОснование = ИсходныйСчетФактура.Ссылка
	|		И НЕ ИсходныйСчетФактура.ПометкаУдаления
	|;
	|
	|////////////////////////////////////////////////////////////////////////////
	|// ЗАПРОС ПО ШАПКЕ
	|
	|ВЫБРАТЬ
	|	ЗаписьКнигиПродаж.Ссылка                                                КАК Ссылка,
	|	ЗаписьКнигиПродаж.Дата                                                  КАК ДатаОснования,
	|	&ПредставлениеСчетФактура                                               КАК ПредставлениеДокумента,
	|	ЕСТЬNULL(ВтСчетаФактуры.Номер, Неопределено)                            КАК Номер,
	|	ЕСТЬNULL(ВтСчетаФактуры.Дата, Неопределено)                             КАК Дата,
	|	ЕСТЬNULL(ВтСчетаФактуры.НомерИсправления, Неопределено)                 КАК НомерИсправления,
	|	ЕСТЬNULL(ВтСчетаФактуры.ДатаИсправления, Неопределено)                  КАК ДатаИсправления,
	|	ЕСТЬNULL(ВтСчетаФактуры.Исправление, Ложь)                      		КАК Исправление,
	|	Неопределено															КАК НомерСчетаФактуры,
	|	Неопределено															КАК ДатаСчетаФактуры,
	|	Неопределено															КАК НомерИсправленияСчетаФактуры,
	|	Неопределено															КАК ДатаИсправленияСчетаФактуры,
	|	Ложь																	КАК КорректировочныйСчетФактура,
	|	""""																	КАК СтрокаПоДокументу,
	|	ЕСТЬNULL(ВтСчетаФактуры.Валюта, Неопределено)							КАК ВалютаСчетаФактуры,
	|	ЗаписьКнигиПродаж.Контрагент                                            КАК Контрагент,
	|	ЗаписьКнигиПродаж.Организация                                           КАК Организация,
	|	ЗаписьКнигиПродаж.Организация.Префикс                                   КАК Префикс,
	|	
	|	0 КАК ИндексПодразделения,
	|
	|	ЗаписьКнигиПродаж.Организация.ТекущийРуководитель.Наименование          КАК Руководитель,
	|	ЗаписьКнигиПродаж.Организация.ТекущаяДолжностьРуководителя              КАК ДолжностьРуководителя,
	|	ЗаписьКнигиПродаж.Организация.ТекущийГлавныйБухгалтер.Наименование      КАК ГлавныйБухгалтер,
	|
	|	ВЫБОР КОГДА ЗаписьКнигиПродаж.Грузополучатель = ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка) ТОГДА
	|		ЗаписьКнигиПродаж.Контрагент
	|	ИНАЧЕ
	|		ЗаписьКнигиПродаж.Грузополучатель
	|	КОНЕЦ КАК Грузополучатель,
	|
	|	ВЫБОР КОГДА ЗаписьКнигиПродаж.Грузоотправитель = ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка) ТОГДА
	|		ЗаписьКнигиПродаж.Организация
	|	ИНАЧЕ
	|		ЗаписьКнигиПродаж.Грузоотправитель
	|	КОНЕЦ КАК Грузоотправитель,
	|
	|	НЕОПРЕДЕЛЕНО КАК АдресДоставки,
	|	ЗаписьКнигиПродаж.Валюта КАК Валюта,
	|	ЗаписьКнигиПродаж.Валюта.НаименованиеПолное КАК ВалютаНаименованиеПолное,
	|	ЗаписьКнигиПродаж.Валюта.Код КАК ВалютаКод,
	|	Ложь КАК ЦенаВключаетНДС,
	|
	|	ВЫБОР КОГДА НоменклатураДокументов.ЕстьУслуги
	|		И Не НоменклатураДокументов.ЕстьТовары
	|	ТОГДА
	|		Истина
	|	ИНАЧЕ
	|		Ложь
	|	КОНЕЦ КАК ТолькоУслуги,
	|
	|	Ложь КАК ЭтоПередачаНаКомиссию
	|ИЗ
	|	Документ.ЗаписьКнигиПродаж КАК ЗаписьКнигиПродаж
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		НоменклатураДокументов КАК НоменклатураДокументов
	|	ПО
	|		ЗаписьКнигиПродаж.Ссылка = НоменклатураДокументов.Ссылка
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ ВтСчетаФактуры КАК ВтСчетаФактуры
	|	ПО ЗаписьКнигиПродаж.Ссылка = ВтСчетаФактуры.ДокументОснование
	|
	|ГДЕ
	|	ЗаписьКнигиПродаж.Ссылка В (&МассивДокументов)
	|	И ЗаписьКнигиПродаж.Проведен
	|
	|УПОРЯДОЧИТЬ ПО
	|	Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////
	|// ЗАПРОС ПО ТАБЛИЧНЫМ ЧАСТЯМ
	|
	|ВЫБРАТЬ
	|	ВложенныйЗапрос.Ссылка КАК Ссылка,
	|	ВложенныйЗапрос.Номенклатура КАК Номенклатура,
	|	ВложенныйЗапрос.Номенклатура.НаименованиеПолное КАК ТоварНаименование,
	|	ВложенныйЗапрос.ЕдиницаИзмерения.Представление КАК БазоваяЕдиницаНаименование,
	|	ВложенныйЗапрос.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|	ВложенныйЗапрос.ЕдиницаИзмерения.Код КАК ЕдиницаИзмеренияКод,
	|	ВложенныйЗапрос.Характеристика КАК Характеристика,
	|	НЕОПРЕДЕЛЕНО Как Упаковка,
	|	ВложенныйЗапрос.СтавкаНДС КАК СтавкаНДС,
	|	ВложенныйЗапрос.НомерГТД КАК НомерГТД,
	|	ВложенныйЗапрос.НомерГТД.СтранаПроисхождения КАК СтранаПроисхождения,
	|	ВложенныйЗапрос.НомерГТД.СтранаПроисхождения.Код КАК СтранаПроисхожденияКод,
	|	ВложенныйЗапрос.Цена КАК Цена,
	|	0 КАК КоличествоМест,
	|
	|	ВложенныйЗапрос.Количество КАК Количество,
	|	ВложенныйЗапрос.Сумма КАК Сумма,
	|	ВложенныйЗапрос.СуммаНДС КАК СуммаНДС,
	|	ВложенныйЗапрос.НомерСтроки КАК НомерСтроки,
	|	Ложь КАК ЭтоВозвратнаяТара
	|ИЗ (
	|	ВЫБРАТЬ
	|		ТаблицаТовары.Ссылка КАК Ссылка,
	|		ТаблицаТовары.Номенклатура КАК Номенклатура,
	|
	|		1 КАК Коэффициент,
	|		ТаблицаТовары.Номенклатура.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|		НЕОПРЕДЕЛЕНО КАК Характеристика,
	|
	|		ТаблицаТовары.СтавкаНДС КАК СтавкаНДС,
	|		ТаблицаТовары.НомерГТД КАК НомерГТД,
	|		ТаблицаТовары.НомерГТД.СтранаПроисхождения КАК СтранаПроисхождения,
	|		ТаблицаТовары.Цена КАК Цена,
	|		ТаблицаТовары.Количество КАК Количество,
	|
	|		ТаблицаТовары.Сумма КАК Сумма,
	|		ТаблицаТовары.СуммаНДС КАК СуммаНДС,
	|		ТаблицаТовары.НомерСтроки КАК НомерСтроки
	|	ИЗ
	|		Документ.ЗаписьКнигиПродаж.Ценности КАК ТаблицаТовары
	|
	|	ГДЕ
	|		ТаблицаТовары.Ссылка В (&МассивДокументов)
	|		И ТаблицаТовары.Ссылка.Проведен
	|	
	|	) КАК ВложенныйЗапрос
	|
	|УПОРЯДОЧИТЬ ПО
	|	ВложенныйЗапрос.Ссылка,
	|	НомерСтроки
	|
	|ИТОГИ ПО
	|	Ссылка
	|;
	|////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ДанныеДокумента.Дата КАК Дата,
	|	ДанныеДокумента.Валюта КАК Валюта
	|ИЗ
	|	Документ.ЗаписьКнигиПродаж КАК ДанныеДокумента
	|ГДЕ
	|	ДанныеДокумента.Ссылка В (&МассивДокументов)
	|	И ДанныеДокумента.Валюта <> &ВалютаРегламентированногоУчета
	|;
	|");
		
	ВалютаРегламентированногоУчета = Константы.ВалютаРегламентированногоУчета.Получить();
	
	Запрос.УстановитьПараметр("МассивДокументов", МассивОбъектов);
	Запрос.УстановитьПараметр("ВалютаРегламентированногоУчета", ВалютаРегламентированногоУчета);
	Запрос.УстановитьПараметр("ПредставлениеСчетФактура", НСтр("ru='счет-фактура'"));
	
	МассивРезультатов 			= Запрос.ВыполнитьПакет();
	// МассивРезультатов[0] - временная таблица "Номенклатура документов"
	// МассивРезультатов[1] - временная таблица "НомераИсправленийСчетовФактур"
	// МассивРезультатов[2] - временная таблица "ВтСчетаФактуры"	
	РезультатПоШапке			= МассивРезультатов[3];
	РезультатПоТабличнойЧасти 	= МассивРезультатов[4];
	
	ТаблицаКурсовВалют = ТаблицаКурсовВалют(МассивРезультатов[5].Выгрузить());
	
	СтруктураДанныхДляПечати 	= Новый Структура("РезультатПоШапке, РезультатПоТабличнойЧасти, ТаблицаКурсовВалют",
												   РезультатПоШапке, РезультатПоТабличнойЧасти, ТаблицаКурсовВалют);
												   
	Возврат СтруктураДанныхДляПечати;

КонецФункции

////////////////////////////////////////////////////////////////////////////////
// Обновление информационной базы

Процедура ЗаполнитьСобытие()Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ЗаписьКнигиПродаж.Ссылка КАК Регистратор
	|ИЗ
	|	Документ.ЗаписьКнигиПродаж КАК ЗаписьКнигиПродаж
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ЗаписьКнигиПродаж.Ценности КАК ЗаписьКнигиПродажЦенности
	|		ПО ЗаписьКнигиПродаж.Ссылка = ЗаписьКнигиПродажЦенности.Ссылка
	|ГДЕ
	|	ЗаписьКнигиПродаж.Проведен
	|	И ЗаписьКнигиПродаж.ДокументРасчетов <> Неопределено
	|		И ЗаписьКнигиПродажЦенности.Событие = ЗНАЧЕНИЕ(Перечисление.СобытияПОНДСПродажи.ПустаяСсылка)
	|";
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		
		ДокументОбъект = Выборка.Регистратор.ПолучитьОбъект();
		Для Каждого Строка Из ДокументОбъект.Ценности Цикл
			Строка.Событие = Перечисления.СобытияПоНДСПродажи.Реализация
		КонецЦикла;
		
		Попытка
			ДокументОбъект.Записать(РежимЗаписиДокумента.Проведение);
		Исключение
		КонецПопытки;
		
	КонецЦикла;
	
КонецПроцедуры
#КонецЕсли