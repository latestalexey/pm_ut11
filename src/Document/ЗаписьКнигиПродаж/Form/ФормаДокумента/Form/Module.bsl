&НаКлиенте
Перем КэшированныеЗначения;

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// Обработчик подсистемы "Дополнительные отчеты и обработки"
	ДополнительныеОтчетыИОбработки.ПриСозданииНаСервере(ЭтаФорма);
	
	// Обработчик механизма "ВерсионированиеОбъектов"
	ВерсионированиеОбъектов.ПриСозданииНаСервере(ЭтаФорма);
	
	НастроитьОтображениеРеквизитовСчетаФактуры(
		ЭтаФорма,
		ПродажиСервер.ПараметрыПредставленияСчетаФактуры(Объект.Ссылка, Объект.Организация)
	);
	
	// Выполним действия, которые выполняются при чтении на сервере
	Если НЕ ЗначениеЗаполнено(Объект.Ссылка) Тогда
		ПриЧтенииСозданииНаСервере();
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	
	НоменклатураСервер.ЗаполнитьСлужебныеРеквизитыПоНоменклатуреВКоллекции(
		Объект.Ценности,
		Новый Структура("ЗаполнитьПризнакВедетсяУчетПоГТД",
			Новый Структура("Номенклатура", "ВедетсяУчетПоГТД")
		)
	);
	
	Элементы.ГруппаКомментарий.Картинка = ОбщегоНазначенияУТ.ПолучитьКартинкуКомментария(Объект.Комментарий);
	
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
	ПриЧтенииСозданииНаСервере();
	
	Элементы.ГруппаКомментарий.Картинка = ОбщегоНазначенияУТ.ПолучитьКартинкуКомментария(Объект.Комментарий);
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ ШАПКИ ФОРМЫ

&НаКлиенте
Процедура ЗаписьДополнительногоЛистаПриИзменении(Элемент)
	
	Если НЕ Объект.ЗаписьДополнительногоЛиста
		И Объект.ФормироватьСторнирующиеЗаписиДопЛистовВручную Тогда
		
		Объект.ФормироватьСторнирующиеЗаписиДопЛистовВручную = Ложь;
	КонецЕсли;
	
	УстановитьДоступностьЭлементовДопЛистов(ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура ФормироватьСторнирующиеЗаписиДопЛистовВручнуюПриИзменении(Элемент)
	
	УстановитьДоступностьЭлементовДопЛистов(ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура ВалютаПриИзменении(Элемент)
	
	Если НеобходимоПересчитатьВалюту() Тогда
		
		ПриИзмененииВалютыСервер(Объект.Валюта);
		ЦенообразованиеКлиент.ОповеститьОбОкончанииПересчетаСуммВВалюту(ВалютаДокумента, Объект.Валюта);
		
	КонецЕсли;
	
	ВалютаДокумента = Объект.Валюта;
	
КонецПроцедуры

&НаКлиенте
Процедура ДокументРасчетовПриИзменении(Элемент)
	
	УстановитьВидимостьЭлементовПоОперации(ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура ТекстСчетФактураНажатие(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ПродажиКлиент.ВвестиСчетФактуру(ЭтаФорма, Объект.Организация, Истина);
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ ТАБЛИЦЫ ФОРМЫ ЦЕННОСТИ

&НаКлиенте
Процедура ЦенностиПослеУдаления(Элемент)
	
	ОбновитьСуммыПодвала(ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура ЦенностиПриОкончанииРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования)
	
	ОбновитьСуммыПодвала(ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура ЦенностиНоменклатураПриИзменении(Элемент)
	
	ТекущаяСтрока = Элементы.Ценности.ТекущиеДанные;
	
	СтруктураПересчетаСуммы = ПолучитьСтруктуруПересчетаСуммыНДСВСтрокеТЧ();
	
	СтруктураДействий = Новый Структура;
	СтруктураДействий.Вставить("ЗаполнитьСтавкуНДС",  НалогообложениеНДС);
	СтруктураДействий.Вставить("ПересчитатьСуммуНДС", СтруктураПересчетаСуммы);
	СтруктураДействий.Вставить("ПересчитатьСумму", "Количество");
	
	ОбработкаТабличнойЧастиКлиент.ОбработатьСтрокуТЧ(ТекущаяСтрока, СтруктураДействий, КэшированныеЗначения);
	
	ОбновитьСуммыПодвала(ЭтаФорма);

КонецПроцедуры

&НаКлиенте
Процедура ЦенностиКоличествоПриИзменении(Элемент)
	
	ТекущаяСтрока = Элементы.Ценности.ТекущиеДанные;
	
	СтруктураДействий = Новый Структура;
	ДобавитьВСтруктуруДействияПриИзмененииКоличества(СтруктураДействий, Объект);	
	
	ОбработкаТабличнойЧастиКлиент.ОбработатьСтрокуТЧ(ТекущаяСтрока, СтруктураДействий, КэшированныеЗначения);
	
	ОбновитьСуммыПодвала(ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура ЦенностиЦенаПриИзменении(Элемент)
	
	ТекущаяСтрока = Элементы.Ценности.ТекущиеДанные;
	
	СтруктураПересчетаСуммы = ПолучитьСтруктуруПересчетаСуммыНДСВСтрокеТЧ();
	
	СтруктураДействий = Новый Структура;
	СтруктураДействий.Вставить("ПересчитатьСуммуНДС", СтруктураПересчетаСуммы);
	СтруктураДействий.Вставить("ПересчитатьСумму", "Количество");
	
	ОбработкаТабличнойЧастиКлиент.ОбработатьСтрокуТЧ(ТекущаяСтрока, СтруктураДействий, КэшированныеЗначения);

	ОбновитьСуммыПодвала(ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура ЦенностиСуммаПриИзменении(Элемент)
	
	ТекущаяСтрока = Элементы.Ценности.ТекущиеДанные;
	
	СтруктураПересчетаСуммы = ПолучитьСтруктуруПересчетаСуммыНДСВСтрокеТЧ();
	
	СтруктураДействий = Новый Структура;
	СтруктураДействий.Вставить("ПересчитатьСуммуНДС", СтруктураПересчетаСуммы);
	
	ОбработкаТабличнойЧастиКлиент.ОбработатьСтрокуТЧ(ТекущаяСтрока, СтруктураДействий, КэшированныеЗначения);
	
	ОбновитьСуммыПодвала(ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура ЦенностиСтавкаНДСПриИзменении(Элемент)

	ТекущаяСтрока = Элементы.Ценности.ТекущиеДанные;
	
	СтруктураПересчетаСуммы = ПолучитьСтруктуруПересчетаСуммыНДСВСтрокеТЧ();
	
	СтруктураДействий = Новый Структура;
	СтруктураДействий.Вставить("ПересчитатьСуммуНДС", СтруктураПересчетаСуммы);
	
	ОбработкаТабличнойЧастиКлиент.ОбработатьСтрокуТЧ(ТекущаяСтрока, СтруктураДействий, КэшированныеЗначения);
	
	ОбновитьСуммыПодвала(ЭтаФорма);
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ ТАБЛИЦЫ ФОРМЫ ДОКУМЕНТЫ ОПЛАТЫ

&НаКлиенте
Процедура ДокументыОплатыДокументОплатыПриИзменении(Элемент)
	
	ТекущаяСтрока = Элементы.ДокументыОплаты.ТекущиеДанные;
	Если ЗначениеЗаполнено(ТекущаяСтрока.ДокументОплаты) Тогда
		ТекущаяСтрока.ДатаОплаты = ОбщегоНазначения.ПолучитьЗначениеРеквизита(ТекущаяСтрока.ДокументОплаты, "Дата");
	КонецЕсли; 
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

////////////////////////////////////////////////////////////////////////////////
// При изменении реквизитов

// Пересчитывает суммы документа в выбранную валюту
//
// Параметры:
// НоваяВалюта - Валюта, в которую необходимо пересчитать суммы
//
&НаСервере
Процедура ПриИзмененииВалютыСервер(НоваяВалюта)
	
	СтараяВалюта                = ВалютаДокумента;
	ДатаДокумента               = ?(ЗначениеЗаполнено(Объект.Дата), Объект.Дата,ТекущаяДата());
	СтруктураКурсовСтаройВалюты = РаботаСКурсамиВалют.ПолучитьКурсВалюты(СтараяВалюта, ДатаДокумента);
	СтруктураКурсовНовойВалюты  = РаботаСКурсамиВалют.ПолучитьКурсВалюты(НоваяВалюта,  ДатаДокумента);
	
	Для Каждого ТекСтрока Из Объект.Ценности Цикл
		
		ТекСтрока.Цена = РаботаСКурсамиВалютКлиентСервер.ПересчитатьИзВалютыВВалюту(
			ТекСтрока.Цена,
			СтараяВалюта,НоваяВалюта,
			СтруктураКурсовСтаройВалюты.Курс,СтруктураКурсовНовойВалюты.Курс,
			СтруктураКурсовСтаройВалюты.Кратность,СтруктураКурсовНовойВалюты.Кратность);
		
		ТекСтрока.Сумма = ТекСтрока.Количество * ТекСтрока.Цена;
			
		ТекСтрока.СуммаНДС = Ценообразование.РассчитатьСуммуНДС(ТекСтрока.Сумма, ТекСтрока.СтавкаНДС, Ложь);
		
	КонецЦикла;
		
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Функция ДобавитьВСтруктуруДействияПриИзмененииКоличества(СтруктураДействий, Объект)
	
	СтруктураПересчетаСуммы = ПолучитьСтруктуруПересчетаСуммыНДСВСтрокеТЧ();
	СтруктураДействий.Вставить("ПересчитатьСуммуНДС", СтруктураПересчетаСуммы);
	СтруктураДействий.Вставить("ПересчитатьСумму", "Количество");
	
КонецФункции

////////////////////////////////////////////////////////////////////////////////
// Прочее

&НаСервере
Процедура ПриЧтенииСозданииНаСервере()
	
	НалогообложениеНДС = Перечисления.ТипыНалогообложенияНДС.ПродажаОблагаетсяНДС;
	
	ВалютаДокумента = Объект.Валюта;
	УстановитьВидимостьЭлементовПоОперации(ЭтаФорма);
	УстановитьДоступностьЭлементовДопЛистов(ЭтаФорма);
	
	НоменклатураСервер.ЗаполнитьСлужебныеРеквизитыПоНоменклатуреВКоллекции(
		Объект.Ценности,
		Новый Структура("ЗаполнитьПризнакВедетсяУчетПоГТД",
			Новый Структура("Номенклатура", "ВедетсяУчетПоГТД")
		)
	);
	
	ОбновитьСуммыПодвала(ЭтаФорма);
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура УстановитьВидимостьЭлементовПоОперации(Форма)

	ЭтоКорректировкаНачисленногоНДС = ЗначениеЗаполнено(Форма.Объект.ДокументРасчетов);
	
	// Операция "Корректировка начисленного НДС"
	Форма.Элементы.ЦенностиВидЦенности.Видимость                = ЭтоКорректировкаНачисленногоНДС;
	Форма.Элементы.ЦенностиСобытие.Видимость                    = ЭтоКорректировкаНачисленногоНДС;
	Форма.Элементы.ЦенностиСторнирующаяЗаписьДопЛиста.Видимость = ЭтоКорректировкаНачисленногоНДС;
	
	// Операция "Начисление НДС"
	Форма.Элементы.ЦенностиНоменклатура.Видимость                 = НЕ ЭтоКорректировкаНачисленногоНДС;
	Форма.Элементы.ЦенностиНоменклатураЕдиницаИзмерения.Видимость = НЕ ЭтоКорректировкаНачисленногоНДС;
	Форма.Элементы.ЦенностиКоличество.Видимость                   = НЕ ЭтоКорректировкаНачисленногоНДС;
	Форма.Элементы.ЦенностиЦена.Видимость                         = НЕ ЭтоКорректировкаНачисленногоНДС;
	Форма.Элементы.ЦенностиНомерГТДСтранаПроисхождения.Видимость  = НЕ ЭтоКорректировкаНачисленногоНДС;
	Форма.Элементы.ЦенностиНомерГТД.Видимость                     = НЕ ЭтоКорректировкаНачисленногоНДС;
	Форма.Элементы.ТекстСчетФактура.Видимость                     = НЕ ЭтоКорректировкаНачисленногоНДС;
	Форма.Элементы.Грузоотправитель.Доступность                   = НЕ ЭтоКорректировкаНачисленногоНДС;
	Форма.Элементы.Грузополучатель.Доступность                    = НЕ ЭтоКорректировкаНачисленногоНДС;
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура УстановитьДоступностьЭлементовДопЛистов(Форма)

	Форма.Элементы.ФормироватьСторнирующиеЗаписиДопЛистовВручную.Доступность = Форма.Объект.ЗаписьДополнительногоЛиста;
	Форма.Элементы.ЦенностиСторнирующаяЗаписьДопЛиста.Доступность            = Форма.Объект.ЗаписьДополнительногоЛиста И Форма.Объект.ФормироватьСторнирующиеЗаписиДопЛистовВручную;
	Форма.Элементы.КорректируемыйПериод.Доступность                          = Форма.Объект.ЗаписьДополнительногоЛиста; 
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура ОбновитьСуммыПодвала(Форма)

	Форма.СуммаВсего = Форма.Объект.Ценности.Итог("Сумма") + Форма.Объект.Ценности.Итог("СуммаНДС");

КонецПроцедуры

&НаКлиенте
Функция НеобходимоПересчитатьВалюту()

	Если Не ЗначениеЗаполнено(Объект.Валюта) Тогда
		Возврат Ложь;
	ИначеЕсли Не ЗначениеЗаполнено(ВалютаДокумента) Тогда
		Возврат Ложь;
	ИначеЕсли ВалютаДокумента = Объект.Валюта Тогда
		Возврат Ложь;
	ИначеЕсли Объект.Ценности.Итог("Сумма") = 0 Тогда
		Возврат Ложь;
	КонецЕсли;
	
	ТекстСообщения = НСтр("ru='Пересчитать суммы в документе в валюту %1 ?'");
	ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ТекстСообщения, Объект.Валюта);
	
	ОтветНаВопрос = Вопрос(ТекстСообщения,РежимДиалогаВопрос.ДаНет);

	Если ОтветНаВопрос = КодВозвратаДиалога.Да Тогда
		Возврат Истина;
	Иначе
		Возврат Ложь;
	КонецЕсли;

КонецФункции

&НаКлиентеНаСервереБезКонтекста
Функция ПолучитьСтруктуруПересчетаСуммыНДСВСтрокеТЧ()

	СтруктураЗаполненияЦены = Новый Структура;
	СтруктураЗаполненияЦены.Вставить("ЦенаВключаетНДС", Ложь);
	
	Возврат СтруктураЗаполненияЦены;

КонецФункции
 
&НаКлиентеНаСервереБезКонтекста
Процедура НастроитьОтображениеРеквизитовСчетаФактуры(Форма, ПараметрыПредставления)
	
	Форма.ТекстСчетФактура = ПараметрыПредставления.ТекстСчетФактура;
	Форма.Элементы.ТекстСчетФактура.Гиперссылка = ПараметрыПредставления.ГиперссылкаСчетФактура;
	
КонецПроцедуры
