#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, СтандартнаяОбработка)
	
	ЗаполнитьРеквизитыПоУмолчанию();
	
КонецПроцедуры

Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)

	ВыполнитьПроверкуАктуальностиПартионногоУчета(Отказ);
	
	ПроверитьДублиДокументов(Отказ);
	
	МассивНепроверяемыхРеквизитов = Новый Массив;
	
	Если СписатьНДСКакЦенности Тогда
		МассивНепроверяемыхРеквизитов.Добавить("СтатьяРасходовНеНДС");
		МассивНепроверяемыхРеквизитов.Добавить("СтатьяРасходовЕНВД");
	КонецЕсли;
	
	ОбщегоНазначения.УдалитьНепроверяемыеРеквизитыИзМассива(ПроверяемыеРеквизиты, МассивНепроверяемыхРеквизитов);
	
КонецПроцедуры

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	ДополнительныеСвойства.Вставить("ЭтоНовый",    ЭтоНовый());
	ДополнительныеСвойства.Вставить("РежимЗаписи", РежимЗаписи);
	
	Если СписатьНДСКакЦенности Тогда
		СтатьяРасходовНеНДС		= ПланыВидовХарактеристик.СтатьиРасходов.ПустаяСсылка();
		АналитикаРасходовНеНДС	= Неопределено;
		СтатьяРасходовЕНВД		= ПланыВидовХарактеристик.СтатьиРасходов.ПустаяСсылка();
		АналитикаРасходовЕНВД	= Неопределено;
	КонецЕсли;
	
КонецПроцедуры

Процедура ОбработкаПроведения(Отказ, РежимПроведения)

	// Инициализация дополнительных свойств для проведения документа
	ПроведениеСервер.ИнициализироватьДополнительныеСвойстваДляПроведения(Ссылка, ДополнительныеСвойства, РежимПроведения);
	
	// Инициализация данных документа
	Документы.РаспределениеНДС.ИнициализироватьДанныеДокумента(Ссылка, ДополнительныеСвойства);
	
	// Подготовка наборов записей
	ПроведениеСервер.ПодготовитьНаборыЗаписейКРегистрацииДвижений(ЭтотОбъект);
	
	// Движения по НДС
	ДоходыИРасходыСервер.ОтразитьНДСЗаписиКнигиПродаж(ДополнительныеСвойства, Движения, Отказ);
	ДоходыИРасходыСервер.ОтразитьНДСЗаписиКнигиПокупок(ДополнительныеСвойства, Движения, Отказ);
	ДоходыИРасходыСервер.ОтразитьПрочиеРасходы(ДополнительныеСвойства, Движения, Отказ);
	ДоходыИРасходыСервер.ОтразитьПартииПрочихРасходов(ДополнительныеСвойства, Движения, Отказ);
	
	// Запись наборов записей
	ПроведениеСервер.ЗаписатьНаборыЗаписей(ЭтотОбъект);
	
	ПроведениеСервер.ОчиститьДополнительныеСвойстваДляПроведения(ДополнительныеСвойства);

КонецПроцедуры

Процедура ОбработкаУдаленияПроведения(Отказ)
	
	// Инициализация дополнительных свойств для проведения документа
	ПроведениеСервер.ИнициализироватьДополнительныеСвойстваДляПроведения(Ссылка, ДополнительныеСвойства);
	
	// Подготовка наборов записей
	ПроведениеСервер.ПодготовитьНаборыЗаписейКРегистрацииДвижений(ЭтотОбъект);
	
	// Запись наборов записей
	ПроведениеСервер.ЗаписатьНаборыЗаписей(ЭтотОбъект);
	
	ПроведениеСервер.ОчиститьДополнительныеСвойстваДляПроведения(ДополнительныеСвойства);

КонецПроцедуры

///////////////////////////////////////////////////////////////////////////////
// ЗАПОЛНЕНИЕ ДОКУМЕНТА

Процедура ЗаполнитьРеквизитыПоУмолчанию()

	Ответственный	= Пользователи.ТекущийПользователь();
	Организация		= ОбщегоНазначения.ХранилищеОбщихНастроекЗагрузить("ТекущаяОрганизация",);
	Организация		= ЗначениеНастроекПовтИсп.ПолучитьОрганизациюПоУмолчанию(Организация);
	
	ПравилаСписания = Документы.РаспределениеНДС.ЗаполнитьПравилаСписанияНДС(Организация);
	СписатьНДСКакЦенности 	= ПравилаСписания.СписатьНДСКакЦенности;
	СтатьяРасходовНеНДС 	= ПравилаСписания.СтатьяРасходовНеНДС;
	АналитикаРасходовНеНДС 	= ПравилаСписания.АналитикаРасходовНеНДС;
	СтатьяРасходовЕНВД		= ПравилаСписания.СтатьяРасходовЕНВД;
	АналитикаРасходовЕНВД 	= ПравилаСписания.АналитикаРасходовЕНВД;

КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

Процедура ПроверитьДублиДокументов (Отказ)
	
	УстановитьПривилегированныйРежим(Истина);
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	РаспределениеНДС.Ссылка КАК Ссылка
	|ИЗ
	|	Документ.РаспределениеНДС КАК РаспределениеНДС
	|ГДЕ
	|	РаспределениеНДС.Проведен
	|	И РаспределениеНДС.Организация = &Организация
	|	И РаспределениеНДС.Дата МЕЖДУ &ПериодНачало И &ПериодОкончание
	|	И НЕ РаспределениеНДС.Ссылка = &ТекущийДокумент"
	;
	
	Запрос.УстановитьПараметр("Организация",	Организация);
	Запрос.УстановитьПараметр("ПериодНачало",	НачалоКвартала(Дата));
	Запрос.УстановитьПараметр("ПериодОкончание",КонецКвартала(Дата));
	Запрос.УстановитьПараметр("ТекущийДокумент",Ссылка);
	
	Результат = Запрос.Выполнить();
	Если Не Результат.Пустой() Тогда
		
		ШаблонТекста = НСтр("ru = 'За %1 уже есть проведенный документ ""Распределение НДС"" для организации %2'");
		Выборка = Результат.Выбрать();
		
		ТекстОшибки = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			ШаблонТекста,
			Формат(Дата, "ДФ='ММММ гггг'") + " г.",
			Выборка.Организация);

		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
			ТекстОшибки,
			ЭтотОбъект,
			"Дата",
			, // ПутьКДанным 
			Отказ);
	КонецЕсли;
	
КонецПроцедуры	

Процедура ВыполнитьПроверкуАктуальностиПартионногоУчета(Отказ)
	
	МесяцНарушенияПоследовательности = ПартионныйУчетСервер.ПолучитьМинимальныйМесяцНарушенияПоследовательности(КонецКвартала(Дата));
	
	ШаблонТекста = НСтр("ru = 'На месяц %1 нарушена последовательность партионного учета. Для выполнения расчета себестоимости необходимо произвести восстановление'");
	
	Если МесяцНарушенияПоследовательности <= НачалоМесяца(КонецКвартала(Дата)) Тогда
		
		ТекстОшибки = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				ШаблонТекста,
				Формат(МесяцНарушенияПоследовательности, "ДФ='ММММ гггг'") + " г.");
		
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
				ТекстОшибки,
				ЭтотОбъект,
				"Дата",
				, // ПутьКДанным 
				Отказ);
				
	КонецЕсли;
	
КонецПроцедуры

#КонецЕсли
