
///////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// Обработчик механизма "ВерсионированиеОбъектов"
	ВерсионированиеОбъектов.ПриСозданииНаСервере(ЭтаФорма);
	
	// Обработчик подсистемы "Внешние обработки"
	ДополнительныеОтчетыИОбработки.ПриСозданииНаСервере(ЭтаФорма);
	
	УстановитьДоступ();
	
	Если Не ЗначениеЗаполнено(Объект.Ссылка) Тогда
		ПриЧтенииСозданииНаСервере();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаВыбора(РезультатВыбора, ИсточникВыбора)
	
	Если ИсточникВыбора.ИмяФормы = "Документ.ОтчетБанкаПоОперациямЭквайринга.Форма.ФормаПодбораПлатежей" Тогда
		
		ПолучитьПлатежиИзХранилища(
			РезультатВыбора.ПодборВходящихПлатежей,
			РезультатВыбора.АдресПлатежейВХранилище
		);
		РассчитатьСуммуДокумента();
		
	КонецЕсли;
	
	Если Окно <> Неопределено Тогда
		Окно.Активизировать();
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
	// Обработчик механизма "ДатыЗапретаИзменения"
	ДатыЗапретаИзменения.ОбъектПриЧтенииНаСервере(ЭтаФорма, ТекущийОбъект);
	
	ПриЧтенииСозданииНаСервере();
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	
	Оповестить("Запись_ОтчетБанкаПоОперациямЭквайринга", ПараметрыЗаписи, Объект.Ссылка);
	
КонецПроцедуры

///////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ ШАПКИ ФОРМЫ

&НаКлиенте
Процедура ДоговорЭквайрингаПриИзменении(Элемент)
	
	ДоговорЭквайрингаПриИзмененииСервер();
	УстановитьЗаголовкиСуммПлатежей();
	
КонецПроцедуры

&НаКлиенте
Процедура СтатьяРасходовПриИзменении(Элемент)
	
	СтатьяРасходовПриИзмененииСервер();
	
КонецПроцедуры

&НаКлиенте
Процедура КомиссияПриИзменении(Элемент)
	
	РассчитатьСуммуДокумента();
	
КонецПроцедуры

///////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ ТАБЛИЦЫ ФОРМЫ ПОКУПКИ

&НаКлиенте
Процедура ПокупкиПриОкончанииРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования)
	
	РассчитатьСуммуДокумента();
	
КонецПроцедуры

&НаКлиенте
Процедура ПокупкиПослеУдаления(Элемент)
	
	РассчитатьСуммуДокумента();
	
КонецПроцедуры

///////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ ТАБЛИЦЫ ФОРМЫ ВОЗВРАТЫ

&НаКлиенте
Процедура ВозвратыПриОкончанииРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования)
	
	РассчитатьСуммуДокумента();
	
КонецПроцедуры

&НаКлиенте
Процедура ВозвратыПослеУдаления(Элемент)
	
	РассчитатьСуммуДокумента();
	
КонецПроцедуры

///////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ КОМАНД ФОРМЫ

&НаКлиенте
Процедура ОткрытьПодборВТабличнуюЧастьВозвраты()
	
	СтруктураРеквизитов = Новый Структура;
	СтруктураРеквизитов.Вставить("ДоговорЭквайринга", "Договор эквайринга");
	
	Если ОбщегоНазначенияУТКлиент.ВозможноЗаполнениеТабличнойЧасти(ЭтаФорма, Неопределено, СтруктураРеквизитов) Тогда
	
		АдресПлатежейВХранилище = АвтоТест_ПоместитьВозвратыВХранилище();
		
		ПараметрыПодбора = Новый Структура("
			|АдресПлатежейВХранилище,
			|Организация,
			|Валюта,
			|ДоговорЭквайринга",
			АдресПлатежейВХранилище,
			Объект.Организация,
			Объект.Валюта,
			Объект.ДоговорЭквайринга
		);
		
		ОткрытьФорму(
			"Документ.ОтчетБанкаПоОперациямЭквайринга.Форма.ФормаПодбораПлатежей",
			ПараметрыПодбора,
			ЭтаФорма
		);
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьПодборВТабличнуюЧастьПокупки()
	
	СтруктураРеквизитов = Новый Структура;
	СтруктураРеквизитов.Вставить("ДоговорЭквайринга", "Договор эквайринга");
	
	Если ОбщегоНазначенияУТКлиент.ВозможноЗаполнениеТабличнойЧасти(ЭтаФорма, Неопределено, СтруктураРеквизитов) Тогда
	
		АдресПлатежейВХранилище = АвтоТест_ПоместитьПокупкиВХранилище();
		
		ПараметрыПодбора = Новый Структура("
			|АдресПлатежейВХранилище,
			|Организация,
			|Валюта,
			|ДоговорЭквайринга,
			|ПодборВходящихПлатежей
			|",
			АдресПлатежейВХранилище,
			Объект.Организация,
			Объект.Валюта,
			Объект.ДоговорЭквайринга,
			Истина
		);
		
		ОткрытьФорму(
			"Документ.ОтчетБанкаПоОперациямЭквайринга.Форма.ФормаПодбораПлатежей",
			ПараметрыПодбора,
			ЭтаФорма
		);
		
	КонецЕсли;
	
КонецПроцедуры

///////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

///////////////////////////////////////////////////////////////////////////////
// При изменении реквизитов

&НаСервере
Процедура ДоговорЭквайрингаПриИзмененииСервер()
	
	ПолучитьСписокВыбораВидовПлатежныхКарт();
	
	СтруктураПараметров = Справочники.ДоговорыЭквайринга.ПолучитьРеквизитыДоговораЭквайринга(Объект.ДоговорЭквайринга);
	Объект.Организация = СтруктураПараметров.Организация;
	Объект.Валюта = СтруктураПараметров.Валюта;
	
КонецПроцедуры

&НаСервере
Процедура СтатьяРасходовПриИзмененииСервер()
	
	Если Не ЗначениеЗаполнено(Объект.АналитикаРасходов) Тогда
		Объект.АналитикаРасходов = ПланыВидовХарактеристик.СтатьиРасходов.ПолучитьАналитикуРасходовПоУмолчанию(
			Объект.СтатьяРасходов,
			Объект
		);
	Иначе
		ДоходыИРасходыСервер.ОчиститьАналитикуПрочихРасходов(Объект.СтатьяРасходов, Объект.АналитикаРасходов);
	КонецЕсли;
	УстановитьДоступ();
	
КонецПроцедуры

///////////////////////////////////////////////////////////////////////////////
// Подборы и обработка проверки количества

// Функция используется в автотесте процесса продаж.
//
&НаСервере
Функция АвтоТест_ПоместитьПокупкиВХранилище() Экспорт 

	АдресПлатежейВХранилище = ПоместитьВоВременноеХранилище(
		Объект.Покупки.Выгрузить(,"ДатаПлатежа, ЭквайринговыйТерминал, ВидПлатежнойКарты, НомерПлатежнойКарты, Сумма"),
		УникальныйИдентификатор
	);
		
	Возврат АдресПлатежейВХранилище;
	
КонецФункции

// Функция используется в автотесте процесса продаж.
//
&НаСервере
Функция АвтоТест_ПоместитьВозвратыВХранилище() Экспорт 

	АдресПлатежейВХранилище = ПоместитьВоВременноеХранилище(
		Объект.Возвраты.Выгрузить(,"ДатаПлатежа, ЭквайринговыйТерминал, ВидПлатежнойКарты, НомерПлатежнойКарты, Сумма"),
		УникальныйИдентификатор
	);
	
	Возврат АдресПлатежейВХранилище;
	
КонецФункции

&НаСервере
Процедура ПолучитьПлатежиИзХранилища(ПодборВходящихПлатежей, АдресПлатежейВХранилище)

	Если ПодборВходящихПлатежей Тогда
		Объект.Покупки.Загрузить(ПолучитьИзВременногоХранилища(АдресПлатежейВХранилище));
	Иначе
		Объект.Возвраты.Загрузить(ПолучитьИзВременногоХранилища(АдресПлатежейВХранилище));
	КонецЕсли;
	
КонецПроцедуры

///////////////////////////////////////////////////////////////////////////////
// Прочее

&НаСервере
Процедура ПриЧтенииСозданииНаСервере()
	
	УстановитьЗаголовкиСуммПлатежей();
	ПолучитьСписокВыбораВидовПлатежныхКарт();
	
КонецПроцедуры

&НаСервере
Процедура УстановитьЗаголовкиСуммПлатежей()
	
	Элементы.ПокупкиСумма.Заголовок = "Сумма (" + Строка(Объект.Валюта) + ")";
	Элементы.ВозвратыСумма.Заголовок = "Сумма (" + Строка(Объект.Валюта) + ")";
	
КонецПроцедуры

&НаСервере
Процедура УстановитьДоступ()
	
	Элементы.АналитикаРасходов.ТолькоПросмотр = Не ЗначениеЗаполнено(Объект.СтатьяРасходов);
	
КонецПроцедуры

&НаСервере
Процедура ПолучитьСписокВыбораВидовПлатежныхКарт()
	
	МассивВидовПлатежныхКарт = Справочники.ДоговорыЭквайринга.ВидыПлатежныхКарт(Объект.ДоговорЭквайринга);
		
	Элементы.ПокупкиВидПлатежнойКарты.СписокВыбора.ЗагрузитьЗначения(МассивВидовПлатежныхКарт);
	Элементы.ВозвратыВидПлатежнойКарты.СписокВыбора.ЗагрузитьЗначения(МассивВидовПлатежныхКарт);
	
КонецПроцедуры

&НаКлиенте
Процедура РассчитатьСуммуДокумента()
	
	Объект.СуммаПокупок = Объект.Покупки.Итог("Сумма");
	Объект.СуммаВозвратов = Объект.Возвраты.Итог("Сумма");
	Объект.СуммаДокумента = Объект.СуммаПокупок
		- Объект.СуммаВозвратов
		- Объект.СуммаКомиссии;
	
КонецПроцедуры
