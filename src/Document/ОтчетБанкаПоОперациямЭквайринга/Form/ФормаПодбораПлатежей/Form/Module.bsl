
///////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// Пропускаем инициализацию, чтобы гарантировать получение формы при передаче параметра "АвтоТест".
	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;
	КонецЕсли;

	Организация = Параметры.Организация;
	Валюта = Параметры.Валюта;
	ДоговорЭквайринга = Параметры.ДоговорЭквайринга;
	ПодборВходящихПлатежей = Параметры.ПодборВходящихПлатежей;
	АдресПлатежейВХранилище = Параметры.АдресПлатежейВХранилище;
	
	ЗаполнитьТаблицуПлатежей();

КонецПроцедуры

///////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ КОМАНД ФОРМЫ

&НаКлиенте
Процедура ПеренестиВДокумент()

	ПоместитьПлатежиВХранилище();
	Закрыть(КодВозвратаДиалога.OK);
	
	Структура = Новый Структура("ПодборВходящихПлатежей, АдресПлатежейВХранилище", ПодборВходящихПлатежей, АдресПлатежейВХранилище);
	ОповеститьОВыборе(Структура);
	
КонецПроцедуры

&НаКлиенте
Процедура ВыбратьПлатежи()

	Для Каждого СтрокаТаблицы Из ТаблицаПлатежей Цикл
		СтрокаТаблицы.Выбран = Истина;
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура ИсключитьПлатежи()

	Для Каждого СтрокаТаблицы Из ТаблицаПлатежей Цикл
		СтрокаТаблицы.Выбран = Ложь
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура ВыбратьВыделенныеПлатежи(Команда)
	
	МассивСтрок = Элементы.ТаблицаПлатежей.ВыделенныеСтроки;
	Для Каждого НомерСтроки Из МассивСтрок Цикл
		СтрокаТаблицы = ТаблицаПлатежей.НайтиПоИдентификатору(НомерСтроки);
		Если СтрокаТаблицы <> Неопределено Тогда
			СтрокаТаблицы.Выбран = Истина;
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура ИсключитьВыделенныеПлатежи(Команда)
	
	МассивСтрок = Элементы.ТаблицаПлатежей.ВыделенныеСтроки;
	Для Каждого НомерСтроки Из МассивСтрок Цикл
		СтрокаТаблицы = ТаблицаПлатежей.НайтиПоИдентификатору(НомерСтроки);
		Если СтрокаТаблицы <> Неопределено Тогда
			СтрокаТаблицы.Выбран = Ложь;
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

///////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

///////////////////////////////////////////////////////////////////////////////
// Прочее

&НаСервере
Процедура ПоместитьПлатежиВХранилище() 
	
	Платежи = ТаблицаПлатежей.Выгрузить(, "Выбран, ДатаПлатежа, ЭквайринговыйТерминал, ВидПлатежнойКарты, НомерПлатежнойКарты, Сумма");
	МассивУдаляемыхСтрок = Новый Массив;
	Для Каждого СтрокаТаблицы Из Платежи Цикл
		Если Не СтрокаТаблицы.Выбран Тогда
			МассивУдаляемыхСтрок.Добавить(СтрокаТаблицы);
		КонецЕсли;
	КонецЦикла;
	
	Для Каждого СтрокаТаблицы Из МассивУдаляемыхСтрок Цикл
		Платежи.Удалить(СтрокаТаблицы);
	КонецЦикла;

	ПоместитьВоВременноеХранилище(Платежи, АдресПлатежейВХранилище);
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьТаблицуПлатежей()
	
	Запрос = Новый Запрос("
	|ВЫБРАТЬ
	|	*
	|ПОМЕСТИТЬ ТаблицаПлатежей
	|ИЗ
	|	&Платежи КАК Платежи
	|;
	|/////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВЫБОР КОГДА Не ТаблицаПлатежей.ЭквайринговыйТерминал ЕСТЬ NULL ТОГДА
	|		ИСТИНА
	|	ИНАЧЕ
	|		ЛОЖЬ
	|	КОНЕЦ КАК Выбран,
	|	РасчетыПоЭквайрингу.Валюта КАК Валюта,
	|	(&Знак * РасчетыПоЭквайрингу.СуммаОстаток) КАК Сумма,
	|	РасчетыПоЭквайрингу.ДатаПлатежа КАК ДатаПлатежа,
	|	РасчетыПоЭквайрингу.ЭквайринговыйТерминал КАК ЭквайринговыйТерминал,
	|	РасчетыПоЭквайрингу.ВидПлатежнойКарты КАК ВидПлатежнойКарты,
	|	РасчетыПоЭквайрингу.НомерПлатежнойКарты КАК НомерПлатежнойКарты
	|ИЗ
	|	РегистрНакопления.РасчетыПоЭквайрингу.Остатки(,
	|		Организация = &Организация
	|		И Валюта = &Валюта
	|		И ТипДенежныхСредств = &ТипДенежныхСредств
	|		И ЭквайринговыйТерминал В (
	|			ВЫБРАТЬ
	|				Ссылка
	|			ИЗ
	|				Справочник.ЭквайринговыеТерминалы КАК ЭквайринговыеТерминалы
	|			ГДЕ
	|				ЭквайринговыеТерминалы.Владелец = &ДоговорЭквайринга
	|			)
	|	) КАК РасчетыПоЭквайрингу
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		ТаблицаПлатежей КАК ТаблицаПлатежей
	|	ПО
	|		РасчетыПоЭквайрингу.ДатаПлатежа = ТаблицаПлатежей.ДатаПлатежа
	|		И РасчетыПоЭквайрингу.ЭквайринговыйТерминал = ТаблицаПлатежей.ЭквайринговыйТерминал
	|		И РасчетыПоЭквайрингу.ВидПлатежнойКарты = ТаблицаПлатежей.ВидПлатежнойКарты
	|		И РасчетыПоЭквайрингу.НомерПлатежнойКарты = ТаблицаПлатежей.НомерПлатежнойКарты
	|
	|УПОРЯДОЧИТЬ ПО
	|	ДатаПлатежа,
	|	НомерПлатежнойКарты
	|");
	Запрос.УстановитьПараметр("Организация", Организация);
	Запрос.УстановитьПараметр("ДоговорЭквайринга", ДоговорЭквайринга);
	Запрос.УстановитьПараметр("Валюта", Валюта);
	
	Если ПодборВходящихПлатежей Тогда
		Запрос.УстановитьПараметр("ТипДенежныхСредств", Перечисления.ТипыДенежныхСредствПоЭквайрингу.ПоступлениеПоПлатежнойКарте);	
		Запрос.УстановитьПараметр("Знак", 1);
	Иначе
		Запрос.УстановитьПараметр("ТипДенежныхСредств", Перечисления.ТипыДенежныхСредствПоЭквайрингу.СписаниеПоПлатежнойКарте);	
		Запрос.УстановитьПараметр("Знак", -1);
	КонецЕсли;
	
	Платежи = ПолучитьИзВременногоХранилища(АдресПлатежейВХранилище);
	Запрос.УстановитьПараметр("Платежи", Платежи);
	
	ТаблицаПлатежей.Загрузить(Запрос.Выполнить().Выгрузить());
	СуммаВсего = ТаблицаПлатежей.Итог("Сумма");
	
КонецПроцедуры
