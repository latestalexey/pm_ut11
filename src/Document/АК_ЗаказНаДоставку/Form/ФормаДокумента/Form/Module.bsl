///////////////////////////////////////////////////////////////////////////////
// СЕРВЕРНЫЕ ПРОЦЕДУРЫ
//

&НаСервере
Процедура СкорректироватьЗаказы(СтруктураЗаказов)
	
	Возврат;
	
	Партнер = СтруктураЗаказов.Партнер;
	Заказы = СтруктураЗаказов.ЗаказыПартнера;
	
	// удалим заказы по партнеру
	КоличествоЗаказов = Объект.Заказы.Количество();
	Для Сч = 1 По КоличествоЗаказов Цикл
		
		СтрокаЗаказа = Объект.Заказы.Получить(КоличествоЗаказов - Сч);
		Если Партнер = СтрокаЗаказа.Заказ.Партнер Тогда
			
			Объект.Заказы.Удалить(СтрокаЗаказа);
			
		КонецЕсли;
		
	КонецЦикла;
	
	// Добавим заказы по партнеру
	Для Каждого СтрокаЗаказа Из Заказы Цикл
		
		НоваяСтрока = Объект.Заказы.Добавить();
		НоваяСтрока.Заказ = СтрокаЗаказа.Ключ;
		НоваяСтрока.КлючСтрокиМаршрута = СтрокаЗаказа.Значение;
		//ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаЗаказа);
		
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ПолучитьВыбранныеЗаказы(СписокЗаказов)
	
	МассивЗаказов = Объект.Заказы.Выгрузить().ВыгрузитьКолонку("Заказ");
	СписокЗаказов = Новый СписокЗначений;
	СписокЗаказов.ЗагрузитьЗначения(МассивЗаказов);
	
КонецПроцедуры

&НаСервере
Функция ПолучитьМобильныйТелефон(КонтактноеЛицо)
	
	Возврат УправлениеКонтактнойИнформацией.ПолучитьКонтактнуюИнформацияОбъекта(КонтактноеЛицо, 
					Справочники.ВидыКонтактнойИнформации.МобильныйТелефонКонтактногоЛица);
					
КонецФункции

&НаСервере
Процедура ОбновитьТЧМаршрутСервер()
	
	ТаблицаЗаказов = Новый ТаблицаЗначений;
	ТаблицаЗаказов.Колонки.Добавить("Заказ", Новый ОписаниеТипов("ДокументСсылка.ЗаказКлиента, ДокументСсылка.ЗаказПоставщику"));
	ТаблицаЗаказов.Колонки.Добавить("КлючСтрокиМаршрута", Новый ОписаниеТипов("Число"));
	
	Для Каждого Строка Из Объект.Заказы Цикл
		
		НоваяСтрока = ТаблицаЗаказов.Добавить();
		НоваяСтрока.Заказ = Строка.Заказ;
		НоваяСтрока.КлючСтрокиМаршрута = Строка.КлючСтрокиМаршрута;
		
	КонецЦикла;
	
	// тодо
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	АК_ЗаказНаДоставкуЗаказы.Заказ,
		|	АК_ЗаказНаДоставкуЗаказы.КлючСтрокиМаршрута
		|ПОМЕСТИТЬ ЗаказыПоМаршруту
		|ИЗ
		|	&ЗаказНаДоставкуЗаказы КАК АК_ЗаказНаДоставкуЗаказы
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ЗаказыПоМаршруту.КлючСтрокиМаршрута КАК КлючСтрокиМаршрута,
		|	ЗаказыПоМаршруту.Заказ КАК Заказ
		|ИЗ
		|	ЗаказыПоМаршруту КАК ЗаказыПоМаршруту
		|
		|УПОРЯДОЧИТЬ ПО
		|	КлючСтрокиМаршрута
		|ИТОГИ ПО
		|	КлючСтрокиМаршрута,
		|	Заказ"; 
		
	Запрос.УстановитьПараметр("ЗаказНаДоставкуЗаказы", ТаблицаЗаказов);
	ВыборкаПоПунктам = Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	Для Каждого СтрокаАдреса Из Объект.Маршрут Цикл
		
		СтрокаСчета = "";
		Заказ = Неопределено;
		
		КлючСтроки = СтрокаАдреса.КлючСтрокиМаршрута;
		СтруктураПоиска = Новый Структура("КлючСтрокиМаршрута", КлючСтроки);
		ВыборкаПоПунктам.Сбросить();
		Если ВыборкаПоПунктам.НайтиСледующий(СтруктураПоиска) Тогда
			
			НомерДатаСчета = "";
			НомерДатаДоговора = "";
			КоличествоДоговоров = 0;
			
			ПолучитьНомерДатуСчетаДоговораПоКлючуСтрокиМаршрута(Объект, КлючСтроки, НомерДатаСчета, НомерДатаДоговора, КоличествоДоговоров);			
			
			СтрокаАдреса.НомерСчета = НомерДатаСчета;
			СтрокаАдреса.НомерДоговора = НомерДатаДоговора;
			
			СтрокаАдреса.МобильныйТелефон = УправлениеКонтактнойИнформацией.ПолучитьКонтактнуюИнформацияОбъекта(СтрокаАдреса.КонтактноеЛицо, Справочники.ВидыКонтактнойИнформации.МобильныйТелефонКонтактногоЛица);
			
			//ВыборкаЗаказов = ВыборкаПоПунктам.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
			//
			//Пока ВыборкаЗаказов.Следующий() Цикл
			//	
			//	//Если ЗначениеЗаполнено(ВыборкаЗаказов.Заказ.Номер) Тогда
			//		
			//		СтрокаСчета = СтрокаСчета + ВыборкаЗаказов.Заказ.Номер + " от " + Формат(ВыборкаЗаказов.Заказ.Дата, "ДФ=dd.MM.yy") + ", ";
			//		Заказ = ВыборкаЗаказов.Заказ;
			//		
			//	//КонецЕсли;
			//
			//КонецЦикла; 
			
		КонецЕсли;
		
		//СтрокаАдреса.НомерСчета = Лев(СтрокаСчета, СтрДлина(СтрокаСчета) - 2);
		//Если Ложь Тогда
		//	
		//	Соглашение = Справочники.СоглашенияСКлиентами.СоздатьЭлемент();
		//	
		//КонецЕсли; 
		//Если ЗначениеЗаполнено(Заказ) Тогда
		//	
		//	СтрокаАдреса.НомерДоговора = Заказ.Соглашение.Номер;
		//	
		//КонецЕсли; 
		
		
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ОбновитьТЧТоварыСервер_(СписокЗаказов)
	
	// тодо
	
	Запрос = Новый Запрос;
	Запрос.Текст =  
		"ВЫБРАТЬ
		|	ЗаказПоставщикуТовары.Номенклатура,
		|	0 КАК Количество
		|ПОМЕСТИТЬ Сводная
		|ИЗ
		|	Документ.ЗаказПоставщику.Товары КАК ЗаказПоставщикуТовары
		|ГДЕ
		|	ЗаказПоставщикуТовары.Ссылка В(&СписокЗаказов)
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ЗаказКлиентаТовары.Номенклатура,
		|	ЗаказКлиентаТовары.Количество
		|ИЗ
		|	Документ.ЗаказКлиента.Товары КАК ЗаказКлиентаТовары
		|ГДЕ
		|	ЗаказКлиентаТовары.Ссылка В(&СписокЗаказов)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	Сводная.Номенклатура,
		|	СУММА(Сводная.Количество) КАК Количество
		|ИЗ
		|	Сводная КАК Сводная
		|
		|СГРУППИРОВАТЬ ПО
		|	Сводная.Номенклатура";
					
	Запрос.УстановитьПараметр("СписокЗаказов", СписокЗаказов);
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		МассивСтрок = Объект.Товары.НайтиСтроки(Новый Структура("Номенклатура", Выборка.Номенклатура));
		
		Если МассивСтрок.Количество() = 0 Тогда
			НовСтр = Объект.Товары.Добавить();
			НовСтр.Номенклатура = Выборка.Номенклатура;
			НовСтр.Количество = Выборка.Количество;
			Продолжить;
		КонецЕсли;        		
		
		Если МассивСтрок.Количество() > 1 Тогда
			
			Для Каждого Стр из МассивСтрок Цикл
				
				Стр.Количество = Стр.Количество + Выборка.Количество;				
				Прервать;
				
			КонецЦикла;
			
		КонецЕсли;       		
			
		
	КонецЦикла;      
	
КонецПроцедуры

&НаСервере
Процедура ОбработатьДобавлениеЗаказов(СписокЗаказов, ЭтоЗаказыПоставщику)
	
	ДокОбъект = ДанныеФормыВЗначение(Объект, Тип("ДокументОбъект.АК_ЗаказНаДоставку"));
	ДокОбъект.ОбработатьДобавлениеЗаказовСервер(ДокОбъект, СписокЗаказов, ЭтоЗаказыПоставщику);
	ЗначениеВДанныеФормы(ДокОбъект, Объект);
	
КонецПроцедуры

&НаСервере
Функция ПолучитьНовыйКлючСтрокиМаршрута()
	
	ДокОбъект = ДанныеФормыВЗначение(Объект, Тип("ДокументОбъект.АК_ЗаказНаДоставку"));
	Возврат ДокОбъект.ПолучитьНовыйКлючСтрокиМаршрута(ДокОбъект);
	
КонецФункции

///////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ НА КЛИЕНТЕ
//

&НаКлиенте
Процедура ЗаполнитьПоЗаказам(ПоЗаказамПоставщикам)
	
	Перем СписокЗаказов;

	ПолучитьВыбранныеЗаказы(СписокЗаказов);
	
	П = Новый Структура("ВыбранныеЗаказы, Ключ, ПоЗаказамПоставщикам", СписокЗаказов, Объект.Ссылка, ПоЗаказамПоставщикам);
	ОткрытьФорму("Документ.АК_ЗаказНаДоставку.Форма.ВыборЗаказов", П, ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьПоЗаказамКлиентов(Команда)
	
	ЗаполнитьПоЗаказам(Ложь);
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьПоЗаказамПоставщикам(Команда)
	
	ЗаполнитьПоЗаказам(Истина);
	
КонецПроцедуры

&НаСервере
Процедура ОткрытьФормуЗаказовПоПартнеру()
	
	// тодо
	
КонецПроцедуры

///////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ
//

// СОБЫТИЯ ФОРМЫ

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	// Обработчик подсистемы "Дополнительные отчеты и обработки"
	//ДополнительныеОтчетыИОбработки.ПриСозданииНаСервере(ЭтаФорма);
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
	ОбновитьТЧМаршрутСервер();
	
	// тодо
	
	//Если ТекущийОбъект.ЭтоНовый() Тогда
	//	Возврат;
	//КонецЕсли;   
	//
	//// МАРШРУТЫ
	//Запрос = Новый Запрос;
	//Запрос.Текст = 
	//	"ВЫБРАТЬ
	//	|	АК_ЗаказНаДоставкуЗаказы.Заказ
	//	|ПОМЕСТИТЬ ЗаказыДокументаБезПартнера
	//	|ИЗ
	//	|	&Заказы КАК АК_ЗаказНаДоставкуЗаказы
	//	|;
	//	|
	//	|////////////////////////////////////////////////////////////////////////////////
	//	|ВЫБРАТЬ
	//	|	АК_ЗаказНаДоставкуЗаказы.Заказ,
	//	|	АК_ЗаказНаДоставкуЗаказы.Заказ.Партнер КАК Партнер
	//	|ПОМЕСТИТЬ ЗаказыДокумента
	//	|ИЗ
	//	|	ЗаказыДокументаБезПартнера КАК АК_ЗаказНаДоставкуЗаказы
	//	|;
	//	|
	//	|////////////////////////////////////////////////////////////////////////////////
	//	|ВЫБРАТЬ
	//	|	АК_ЗаказНаДоставкуМаршрут.ПоставщикЗаказчик КАК Партнер,
	//	|	АК_ЗаказНаДоставкуМаршрут.КонтактноеЛицо
	//	|ПОМЕСТИТЬ Маршруты
	//	|ИЗ
	//	|	&Маршрут КАК АК_ЗаказНаДоставкуМаршрут
	//	|;
	//	|
	//	|////////////////////////////////////////////////////////////////////////////////
	//	|ВЫБРАТЬ
	//	|	ЗаказыДокумента.Заказ,
	//	|	ЗаказыДокумента.Партнер КАК Партнер,
	//	|	Маршруты.КонтактноеЛицо КАК КонтактноеЛицо,
	//	|	КонтактныеЛицаПартнеровКонтактнаяИнформация.Представление КАК Номер1,
	//	|	КонтактныеЛицаПартнеровКонтактнаяИнформация.НомерТелефона КАК Номер2
	//	|ИЗ
	//	|	ЗаказыДокумента КАК ЗаказыДокумента
	//	|		ЛЕВОЕ СОЕДИНЕНИЕ Маршруты КАК Маршруты
	//	|			ЛЕВОЕ СОЕДИНЕНИЕ Справочник.КонтактныеЛицаПартнеров.КонтактнаяИнформация КАК КонтактныеЛицаПартнеровКонтактнаяИнформация
	//	|			ПО Маршруты.КонтактноеЛицо = КонтактныеЛицаПартнеровКонтактнаяИнформация.Ссылка
	//	|				И (КонтактныеЛицаПартнеровКонтактнаяИнформация.Тип = ЗНАЧЕНИЕ(Перечисление.ТипыКонтактнойИнформации.Телефон))
	//	|				И (КонтактныеЛицаПартнеровКонтактнаяИнформация.Тип = ЗНАЧЕНИЕ(Справочник.ВидыКонтактнойИнформации.МобильныйТелефонКонтактногоЛица))
	//	|		ПО ЗаказыДокумента.Партнер = Маршруты.Партнер
	//	|ИТОГИ ПО
	//	|	Партнер,
	//	|	КонтактноеЛицо";
	//			   
	//Запрос.УстановитьПараметр("Заказы", Объект.Заказы.Выгрузить());
	//Запрос.УстановитьПараметр("Маршрут", Объект.Маршрут.Выгрузить());
	//
	//ВыборкаИтоги = Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам, "Партнер");
	//
	//Пока ВыборкаИтоги.Следующий() Цикл
	//	
	//	ВидОперации = "Погрузка";
	//	
	//	ВыборкаКЛ = ВыборкаИтоги.Выбрать();
	//	
	//	Пока ВыборкаКЛ.Следующий() Цикл
	//		
	//		Выборка = ВыборкаКЛ.Выбрать();
	//	
	//		СтрокаСчетов = "";
	//		
	//		Пока Выборка.Следующий() Цикл
	//			Если ТипЗнч(Выборка.Заказ) = Тип("ДокументСсылка.ЗаказКлиента") Тогда
	//				ВидОперации = "Разгрузка";
	//			КонецЕсли; 
	//			СтрокаСчетов = СтрокаСчетов + Строка(Выборка.Заказ.Номер) + ", ";
	//		КонецЦикла;
	//		Если Прав(СтрокаСчетов, 2) = ", " Тогда
	//			СтрокаСчетов = Лев(СтрокаСчетов, СтрДлина(СтрокаСчетов) - 2);
	//		КонецЕсли;			
	//		
	//		МассивСтрок = Объект.Маршрут.НайтиСтроки(Новый Структура("ПоставщикЗаказчик, КонтактноеЛицо", ВыборкаКЛ.Партнер, ВыборкаКЛ.КонтактноеЛицо));
	//			
	//		Для Каждого Стр Из МассивСтрок Цикл
	//			Стр.ВидОперации = ВидОперации;
	//			Стр.НомерСчета = СтрокаСчетов;
	//			Стр.МобильныйТелефон = "" + Выборка.Номер1 + Выборка.Номер2;
	//			
	//			Прервать;
	//			
	//		КонецЦикла;
	//		
	//	КонецЦикла;
	//	
	//КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	ОбновитьТЧМаршрутСервер();
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если ИмяСобытия = "ВыбраныЗаказыПоставщикам" Тогда
		ОбработатьДобавлениеЗаказов(Параметр, Истина);
	ИначеЕсли ИмяСобытия = "ВыбраныЗаказыКлиента" Тогда
		ОбработатьДобавлениеЗаказов(Параметр, Ложь);
	КонецЕсли;
	
КонецПроцедуры


// СОБЫТИЯ РЕКВИЗИТОВ ШАПКИ

&НаКлиенте
Процедура ИсполнительУслугПриИзменении(Элемент)
	
	Если Не ЗначениеЗаполнено (Объект.Партнер) Тогда
		Возврат;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура КомментарийНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	ОбщегоНазначенияКлиент.ОткрытьФормуРедактированияКомментария(Элемент.ТекстРедактирования, Объект.Комментарий, Модифицированность);
КонецПроцедуры


// СОБЫТИЯ ТЧ МАРШРУТ

&НаКлиенте
Процедура МаршрутПриАктивизацииСтроки(Элемент)
	
	ТекущаяСтрока = Элементы.Маршрут.ТекущиеДанные;
	Если ТекущаяСтрока = Неопределено Тогда
		Возврат;
	КонецЕсли;	
	
	_Структура = Новый Структура;
	
	Если ТекущаяСтрока.Операция = ПредопределенноеЗначение("Перечисление.АК_ВидыОперацийДоставки.Погрузка") Тогда
		_Структура.Вставить("ПунктПогрузки", ТекущаяСтрока.ПунктНазначения);
	ИначеЕсли ТекущаяСтрока.Операция = ПредопределенноеЗначение("Перечисление.АК_ВидыОперацийДоставки.Разгрузка") Тогда
		_Структура.Вставить("ПунктДоставки", ТекущаяСтрока.ПунктНазначения);
	КонецЕсли;	
	
	_Структура = Новый ФиксированнаяСтруктура(_Структура);
	
	Элементы.Товары.ОтборСтрок =  _Структура;

КонецПроцедуры

&НаКлиенте
Процедура МаршрутВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	Если Поле.Имя = "МаршрутНомерСчета" Тогда
		
		СтандартнаяОбработка = Ложь;
		
		П = Новый Структура;
		П.Вставить("Заказы", Объект.Заказы);
		П.Вставить("Маршрут", Объект.Маршрут);
		П.Вставить("Партнер", Элемент.ТекущиеДанные.Партнер);
		
		Форма = ПолучитьФорму("Документ.АК_ЗаказНаДоставку.Форма.ФормаЗаказы", П);
		Результат = Форма.ОткрытьМодально();
		
		Если Результат = Неопределено Тогда
			
		Иначе
			
			СкорректироватьЗаказы(Результат);
			
		КонецЕсли;			               
		
	КонецЕсли;
	
	ОбновитьТЧМаршрутСервер();
	
КонецПроцедуры

&НаКлиенте
Процедура МаршрутПередУдалением(Элемент, Отказ)
	
	УдаляемаяСтрокаМаршрута = Элемент.ТекущиеДанные.КлючСтрокиМаршрута;
	
КонецПроцедуры

&НаКлиенте
Процедура МаршрутКонтактноеЛицоПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.Маршрут.ТекущиеДанные;
	ТекущиеДанные.МобильныйТелефон = ПолучитьМобильныйТелефон(ТекущиеДанные.КонтактноеЛицо);
	
КонецПроцедуры

&НаКлиенте
Процедура МаршрутПослеУдаления(Элемент)
	
	Если ЗначениеЗаполнено(УдаляемаяСтрокаМаршрута) Тогда
		
		КоличествоЗаказов = Объект.Заказы.Количество();

		Сч = 0;
		Для Сч = 1 По КоличествоЗаказов Цикл
			
			СтрокаЗаказа = Объект.Заказы.Получить(КоличествоЗаказов - Сч);
			Если СтрокаЗаказа.КлючСтрокиМаршрута = УдаляемаяСтрокаМаршрута Тогда
				Объект.Заказы.Удалить(СтрокаЗаказа);
			КонецЕсли;
			
		КонецЦикла;
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура МаршрутПередОкончаниемРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования, Отказ)
	
	Если НоваяСтрока Тогда
		
		ТекущиеДанные = Элемент.ТекущиеДанные;
		ТекущиеДанные.КлючСтрокиМаршрута = ПолучитьНовыйКлючСтрокиМаршрута();
		
	КонецЕсли;
	
	Элемент.ПодчиненныеЭлементы.МаршрутПартнер.ТолькоПросмотр = Истина;
	
КонецПроцедуры

&НаКлиенте
Процедура МаршрутПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа)
	
	Элемент.ПодчиненныеЭлементы.МаршрутПартнер.ТолькоПросмотр = Ложь;

КонецПроцедуры

&НаКлиенте
Процедура МаршрутПередНачаломИзменения(Элемент, Отказ)
	
	Если Не ЗначениеЗаполнено(Элемент.ТекущиеДанные.Партнер) Тогда
		Элемент.ПодчиненныеЭлементы.МаршрутПартнер.ТолькоПросмотр = Ложь;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура МаршрутПриНачалеРедактирования(Элемент, НоваяСтрока, Копирование)
	
	Если Не ЗначениеЗаполнено(Элемент.ТекущиеДанные.Партнер) Тогда
		Элемент.ПодчиненныеЭлементы.МаршрутПартнер.ТолькоПросмотр = Ложь;
	КонецЕсли;
	
КонецПроцедуры


//
Процедура ПолучитьНомерДатуСчетаДоговораПоКлючуСтрокиМаршрута(ДокументЗаказ, КлючСтрокиМаршрута, НомерДатаСчета, НомерДатаДоговора, КоличествоДоговоров)
	
	СтруктураОтбора = Новый Структура("КлючСтрокиМаршрута", КлючСтрокиМаршрута);
	СтрокиПоКлючу = ДокументЗаказ.Заказы.НайтиСтроки(СтруктураОтбора);
	
	Для Каждого Элемент Из СтрокиПоКлючу Цикл
		
		СтрокаДобавленияСчета = "";
		СтрокаДобавленияДоговора = "";
		
		Заказ = Элемент.Заказ;
		Если ТипЗнч(Заказ) = Тип("ДокументСсылка.ЗаказКлиента") Тогда
			СтрокаДобавленияСчета = "" + Заказ.Номер + " / " + Формат(Заказ.Дата, "ДФ=dd.MM.yy");
			Если ЗначениеЗаполнено(Заказ.Соглашение) И Не Заказ.Соглашение.Типовое Тогда
				СтрокаДобавленияДоговора = "" + Заказ.Соглашение.Номер + " / " + Формат(Заказ.Соглашение.Дата, "ДФ=dd.MM.yy");
			КонецЕсли;
		ИначеЕсли ТипЗнч(Заказ) = Тип("ДокументСсылка.ЗаказКлиента") Тогда
			
			СтрокаДобавленияСчета = "" + Заказ.Номер + " / " + Формат(Заказ.Дата, "ДФ=dd.MM.yy");
			Если ЗначениеЗаполнено(Заказ.Соглашение) Тогда
				СтрокаДобавленияДоговора = "" + Заказ.Соглашение.Номер + " / " + Формат(Заказ.Соглашение.Дата, "ДФ=dd.MM.yy");
			КонецЕсли;
			
		КонецЕсли;
		
		Если ЗначениеЗаполнено(СтрокаДобавленияСчета) И Найти(НомерДатаСчета, СтрокаДобавленияСчета) = 0 Тогда
			НомерДатаСчета = НомерДатаСчета + СтрокаДобавленияСчета + ", ";
		КонецЕсли;
		
		Если ЗначениеЗаполнено(СтрокаДобавленияДоговора) И Найти(НомерДатаДоговора, СтрокаДобавленияДоговора) = 0 Тогда
			НомерДатаДоговора = НомерДатаДоговора + СтрокаДобавленияДоговора + ", ";
			КоличествоДоговоров = КоличествоДоговоров + 1;
		КонецЕсли;
		
	КонецЦикла;
	
	Если ЗначениеЗаполнено(НомерДатаСчета) И Прав(НомерДатаСчета, 2) = ", " Тогда
		НомерДатаСчета = Лев(НомерДатаСчета, СтрДлина(НомерДатаСчета) - 2);
	КонецЕсли;
	Если ЗначениеЗаполнено(НомерДатаДоговора)И Прав(НомерДатаДоговора, 2) = ", " Тогда
		НомерДатаДоговора = Лев(НомерДатаДоговора, СтрДлина(НомерДатаДоговора) - 2);
	КонецЕсли;
	
КонецПроцедуры


