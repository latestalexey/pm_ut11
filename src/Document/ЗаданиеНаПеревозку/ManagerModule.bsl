#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

//////////////////////////////////////////////////////////////////////////////////
//// ПРОГРАММНЫЙ ИНТЕРФЕЙС

////////////////////////////////////////////////////////////////////////////////
//Проверки при смене статуса

// Формирует запрос проверки при смене статуса списка документов
//
// Параметры:
//	МассивДокументов - Массив - Массив ссылок на документы, которые надо проверять
//	НовыйСтатус - Строка - Имя нового статуса
//	ДополнительныеПараметры - Структура - Структура дополнительных параметров
//
// Возвращаемое значение:
//	Запрос - Запрос проверки перед сменой статуса
//
Функция СформироватьЗапросПроверкиПриСменеСтатуса(МассивДокументов, НовыйСтатус, ДополнительныеПараметры) Экспорт
	
	ЗначениеНовогоСтатуса = Перечисления.СтатусыЗаданийНаПеревозку[НовыйСтатус];
	
	Если ДополнительныеПараметры <> Неопределено И ДополнительныеПараметры.Свойство("КонтрольДоставки") Тогда
		
		ТекстЗапроса =
		"ВЫБРАТЬ
		|	ЗаданиеНаПеревозкуМаршрут.Ссылка КАК Ссылка,
		|	МИНИМУМ(ЗаданиеНаПеревозкуМаршрут.Доставлено) КАК Доставлено
		|ПОМЕСТИТЬ
		|	втМаршрут
		|ИЗ
		|	Документ.ЗаданиеНаПеревозку.Маршрут КАК ЗаданиеНаПеревозкуМаршрут
		|ГДЕ
		|	ЗаданиеНаПеревозкуМаршрут.Ссылка В (&МассивДокументов)
		|СГРУППИРОВАТЬ ПО
		|	ЗаданиеНаПеревозкуМаршрут.Ссылка
		|;
		|ВЫБРАТЬ
		|	ТаблицаДокументов.Ссылка КАК Ссылка,
		|	ПРЕДСТАВЛЕНИЕ(ТаблицаДокументов.Ссылка) КАК Представление,
		|	ПРЕДСТАВЛЕНИЕ(ТаблицаДокументов.Статус) КАК ПредставлениеТекущегоСтатуса,
		|	ПРЕДСТАВЛЕНИЕ(&Статус) КАК ПредставлениеНовогоСтатуса,
		|	ВЫБОР
		|		КОГДА втМаршрут.Доставлено ЕСТЬ NULL 
		|				ИЛИ втМаршрут.Доставлено = ИСТИНА
		|			ТОГДА ЛОЖЬ
		|		ИНАЧЕ ИСТИНА
		|	КОНЕЦ КАК ЕстьНедоставленныеСтроки,
		|	ВЫБОР
		|		КОГДА ТаблицаДокументов.Статус = &Статус
		|			ТОГДА ИСТИНА
		|		ИНАЧЕ ЛОЖЬ
		|	КОНЕЦ КАК СтатусСовпадает,
		|	ТаблицаДокументов.Проведен КАК Проведен,
		|	ТаблицаДокументов.ПометкаУдаления КАК ПометкаУдаления,
		|	ИСТИНА КАК ЗаписьПроведением
		|ИЗ
		|	Документ.ЗаданиеНаПеревозку КАК ТаблицаДокументов
		|ЛЕВОЕ СОЕДИНЕНИЕ
		|	втМаршрут КАК втМаршрут
		|ПО
		|	втМаршрут.Ссылка = ТаблицаДокументов.Ссылка
		|ГДЕ
		|	ТаблицаДокументов.Ссылка В(&МассивДокументов)
		|";
		
	Иначе
		
		ТекстЗапроса =
		"ВЫБРАТЬ
		|	ТаблицаДокументов.Ссылка КАК Ссылка,
		|	ПРЕДСТАВЛЕНИЕ(ТаблицаДокументов.Ссылка) КАК Представление,
		|	ПРЕДСТАВЛЕНИЕ(ТаблицаДокументов.Статус) КАК ПредставлениеТекущегоСтатуса,
		|	ПРЕДСТАВЛЕНИЕ(&Статус) КАК ПредставлениеНовогоСтатуса,
		|	ВЫБОР
		|		КОГДА ТаблицаДокументов.Статус = &Статус
		|			ТОГДА ИСТИНА
		|		ИНАЧЕ ЛОЖЬ
		|	КОНЕЦ КАК СтатусСовпадает,
		|	ТаблицаДокументов.Проведен КАК Проведен,
		|	ТаблицаДокументов.ПометкаУдаления КАК ПометкаУдаления,
		|	ИСТИНА КАК ЗаписьПроведением
		|ИЗ
		|	Документ.ЗаданиеНаПеревозку КАК ТаблицаДокументов
		|ГДЕ
		|	ТаблицаДокументов.Ссылка В(&МассивДокументов)
		|;";
	
	КонецЕсли;
	
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.УстановитьПараметр("Статус", ЗначениеНовогоСтатуса);
	Запрос.УстановитьПараметр("МассивДокументов", МассивДокументов);
	
	Возврат Запрос;
	
КонецФункции

// Возвращает результат проверки при смене статуса документа
//
// Параметры:
//	ВыборкаПроверки - ВыборкаИзРезультатаЗапроса - Текущая строка выборки
//	НовыйСтатус - Перечисление - Новый статус
//	ДополнительныеПараметры - Структура - Структура дополнительных параметров
//
// Возвращаемое значение:
//	Булево - Истина, в случае успешного завершения проверки
//
Функция ПроверкаПередСменойСтатуса(ВыборкаПроверки, НовыйСтатус, ДополнительныеПараметры) Экспорт
	
	Отказ = Ложь;
	
	Если ДополнительныеПараметры = Неопределено Тогда
		Возврат Не Отказ;
	КонецЕсли;
	
	Если ДополнительныеПараметры.Свойство("КонтрольДоставки")
		И ВыборкаПроверки.ЕстьНедоставленныеСтроки Тогда
		
		ТекстОшибки = НСтр("ru='У документа %Документ% статус ""%Статус%"" не установлен, т.к. задание доставлено не полностью'");
		ТекстОшибки = СтрЗаменить(ТекстОшибки, "%Документ%", ВыборкаПроверки.Ссылка);
		ТекстОшибки = СтрЗаменить(ТекстОшибки, "%Статус%", ВыборкаПроверки.ПредставлениеНовогоСтатуса);
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстОшибки, ВыборкаПроверки.Ссылка);
		Отказ = Истина;
		
	КонецЕсли;
	
	Возврат Не Отказ;
	
КонецФункции

////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

////////////////////////////////////////////////////////////////////////////////
// Печать

Процедура Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт
	
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "МаршрутныйЛист") Тогда
		
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(
				КоллекцияПечатныхФорм,
				"МаршрутныйЛист",
				НСтр("ru = 'Маршрутный лист'"),
				СформироватьПечатнуюФормуМаршрутныйЛист(МассивОбъектов, ОбъектыПечати)
		);
		
	КонецЕсли;
	
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "ТТН") Тогда
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(
				КоллекцияПечатныхФорм,
				"ТТН",
				"Товарно-транспортная накладная",
				Обработки.ПечатьТТН.СформироватьПечатнуюФормуТТН(
					ПолучитьМассивРаспоряжений(МассивОбъектов),
					ОбъектыПечати,
					ПараметрыПечати
				)
		);
	КонецЕсли;
	
КонецПроцедуры

Функция СформироватьПечатнуюФормуМаршрутныйЛист(МассивОбъектов, ОбъектыПечати)
	
	УстановитьПривилегированныйРежим(Истина);
	
	ТабличныйДокумент = Новый ТабличныйДокумент;
	ТабличныйДокумент.ОриентацияСтраницы = ОриентацияСтраницы.Ландшафт;
	ТабличныйДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_ЗаданиеНаПеревозку_МаршрутныйЛист";
	
	Макет = УправлениеПечатью.ПолучитьМакет("Документ.ЗаданиеНаПеревозку.ПФ_MXL_МаршрутныйЛист");
	
	ОбластьЗаголовокДокумента		= Макет.ПолучитьОбласть("ЗаголовокДокумента");
	ОбластьШапкаДокумента 			= Макет.ПолучитьОбласть("ШапкаДокумента");
	ОбластьШапкаТаблицы				= Макет.ПолучитьОбласть("ШапкаТаблицы");
	ОбластьСтрокаТаблицы			= Макет.ПолучитьОбласть("СтрокаТаблицы");
	ОбластьПодвалТаблицы 			= Макет.ПолучитьОбласть("ПодвалТаблицы");
	ОбластьИтоги 					= Макет.ПолучитьОбласть("Итоги");
	ОбластьДополнительнаяИнформация = Макет.ПолучитьОбласть("ДополнительнаяИнформация");
	
	ЗапросПоДокументу = Новый Запрос;
	ЗапросПоДокументу.Текст = 
	"ВЫБРАТЬ
	|	ЗаданиеНаПеревозку.Номер КАК НомерЗадания,
	|	ЗаданиеНаПеревозку.ДатаВремяРейсаПланС КАК НачалоРейсаПлан,
	|	ЗаданиеНаПеревозку.ДатаВремяРейсаПланПо КАК ОкончаниеРейсаПлан,
	|	ПРЕДСТАВЛЕНИЕ(ЗаданиеНаПеревозку.Водитель) КАК Водитель,
	|	ПРЕДСТАВЛЕНИЕ(ЗаданиеНаПеревозку.КурьерЭкспедитор) КАК КурьерЭкспедитор,
	|	ПРЕДСТАВЛЕНИЕ(ЗаданиеНаПеревозку.ТранспортноеСредство) КАК ТранспортноеСредство,
	|	ЗаданиеНаПеревозку.СкладыПогрузки.(
	|		Склад
	|	) КАК СкладыПогрузкиВыборка,
	|	ЗаданиеНаПеревозку.Приоритет,
	|	ЗаданиеНаПеревозку.Дата КАК Дата,
	|	ЗаданиеНаПеревозку.ДатаВремяРейсаФактС КАК НачалоРейсаФакт,
	|	ЗаданиеНаПеревозку.ДатаВремяРейсаФактПо КАК ОкончаниеРейсаФакт,
	|	ЗаданиеНаПеревозку.ДополнительнаяИнформация КАК ДопИнформация,
	|	ЗаданиеНаПеревозку.Ссылка,
	|	ЗаданиеНаПеревозку.Вес КАК ИтогоВес,
	|	ЗаданиеНаПеревозку.Объем КАК ИтогоОбъем
	|ИЗ
	|	Документ.ЗаданиеНаПеревозку КАК ЗаданиеНаПеревозку
	|ГДЕ
	|	ЗаданиеНаПеревозку.Ссылка В(&МассивОбъектов)
	|
	|УПОРЯДОЧИТЬ ПО
	|	ЗаданиеНаПеревозку.Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЗаданиеНаПеревозкуМаршрут.АдресДоставки,
	|	ЗаданиеНаПеревозкуМаршрут.ЗонаДоставки,
	|	ЗаданиеНаПеревозкуМаршрут.ВремяС КАК ВремяС,
	|	ЗаданиеНаПеревозкуМаршрут.ВремяПо КАК ВремяПо,
	|	ЗаданиеНаПеревозкуМаршрут.Вес,
	|	ЗаданиеНаПеревозкуМаршрут.Объем,
	|	ЗаданиеНаПеревозкуМаршрут.ДополнительнаяИнформация,
	|	ЗаданиеНаПеревозкуРаспоряжения.Распоряжение,
	|	ЗаданиеНаПеревозкуМаршрут.Ссылка КАК Ссылка
	|ИЗ
	|	Документ.ЗаданиеНаПеревозку.Маршрут КАК ЗаданиеНаПеревозкуМаршрут
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ЗаданиеНаПеревозку.Распоряжения КАК ЗаданиеНаПеревозкуРаспоряжения
	|		ПО ЗаданиеНаПеревозкуМаршрут.КлючСвязи = ЗаданиеНаПеревозкуРаспоряжения.КлючСвязи
	|ГДЕ
	|	ЗаданиеНаПеревозкуМаршрут.Ссылка В(&МассивОбъектов)
	|
	|УПОРЯДОЧИТЬ ПО
	|	ЗаданиеНаПеревозкуМаршрут.Ссылка
	|ИТОГИ ПО
	|	Ссылка,
	|	ЗаданиеНаПеревозкуМаршрут.КлючСвязи";
	
	ЗапросПоДокументу.УстановитьПараметр("МассивОбъектов", МассивОбъектов);
	
	РезультатЗапросаПоДокументу = ЗапросПоДокументу.ВыполнитьПакет();
	
	РезультатШапкаДокументов = РезультатЗапросаПоДокументу[0].Выбрать();
	ВыборкаПоСсылкам = РезультатЗапросаПоДокументу[1].Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	Пока РезультатШапкаДокументов.Следующий() Цикл
		
		НомерСтрокиНачало = ТабличныйДокумент.ВысотаТаблицы + 1;
		РеквизитыДокумента = Новый Структура;
		РеквизитыДокумента.Вставить("Номер", РезультатШапкаДокументов.НомерЗадания);
		РеквизитыДокумента.Вставить("Дата", РезультатШапкаДокументов.Дата);
		
		ЗаголовокДокумента = ОбщегоНазначенияУТКлиентСервер.СформироватьЗаголовокДокумента(РеквизитыДокумента, НСтр("ru='Маршрутный лист'"));
		ОбластьЗаголовокДокумента.Параметры.ЗаголовокДокумента = ЗаголовокДокумента;
		
		ШтрихкодированиеПечатныхФорм.ВывестиШтрихкодВТабличныйДокумент(
			ТабличныйДокумент,
			Макет,
			ОбластьЗаголовокДокумента,
			РезультатШапкаДокументов.Ссылка
		);
		
		ТабличныйДокумент.Вывести(ОбластьЗаголовокДокумента);
		
		ОбластьШапкаДокумента.Параметры.Заполнить(РезультатШапкаДокументов);
		
		СкладыПогрузки = РезультатШапкаДокументов.СкладыПогрузкиВыборка.Выбрать();
		СтрокаСкладыПогрузки = "";
				
		Пока СкладыПогрузки.Следующий() Цикл
			
			СтрокаСкладыПогрузки = СтрокаСкладыПогрузки + СкладыПогрузки.Склад + "," + " ";	
			
		КонецЦикла;
		
		Если СтрокаСкладыПогрузки <> "" Тогда 
			
			СтрокаСкладыПогрузки = Лев(СтрокаСкладыПогрузки, СтрДлина(СтрокаСкладыПогрузки) - 2);
			ОбластьШапкаДокумента.Параметры.СкладыПогрузки = СтрокаСкладыПогрузки;
						
		КонецЕсли;
			
		ТабличныйДокумент.Вывести(ОбластьШапкаДокумента);
		
		Пока ВыборкаПоСсылкам.НайтиСледующий(Новый Структура ("Ссылка", РезультатШапкаДокументов.Ссылка)) Цикл
			
			ИмяСтолбцаВес = НСтр("ru = 'Вес, %ЕдиницаИзмеренияВес%'");
			ИмяСтолбцаОбъем = НСтр("ru = 'Объем, %ЕдиницаИзмеренияОбъем%'");
			ИмяСтолбцаВес = СтрЗаменить(ИмяСтолбцаВес, "%ЕдиницаИзмеренияВес%", Константы.ЕдиницаИзмеренияВеса.Получить());
			ИмяСтолбцаОбъем = СтрЗаменить(ИмяСтолбцаОбъем, "%ЕдиницаИзмеренияОбъем%", Константы.ЕдиницаИзмеренияОбъема.Получить());
			
			ОбластьШапкаТаблицы.Параметры.ВесШапка = ИмяСтолбцаВес;
			ОбластьШапкаТаблицы.Параметры.ОбъемШапка = ИмяСтолбцаОбъем;
			
			ТабличныйДокумент.Вывести(ОбластьШапкаТаблицы);
			
			ВыборкаПоКодамСтрок = ВыборкаПоСсылкам.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
			НомерСтроки = 0;
			
			Пока ВыборкаПоКодамСтрок.Следующий() Цикл
				
				НомерСтроки = НомерСтроки + 1;
				ОбластьСтрокаТаблицы.Параметры.НомерЗаказа = НомерСтроки;
				
				Выборка = ВыборкаПоКодамСтрок.Выбрать();
				
				СтрокаРеализаций = "";
				СтрокаПеремещений = "";
				
				Если Выборка.Следующий() Тогда
					
					ОбластьСтрокаТаблицы.Параметры.Заполнить(Выборка);
										
					Если ТипЗнч(Выборка.Распоряжение) = Тип("ДокументСсылка.РеализацияТоваровУслуг") Тогда
						
						СтрокаРеализаций = СтрокаРеализаций
							+ ПрефиксацияОбъектовКлиентСервер.ПолучитьНомерНаПечать(Выборка.Распоряжение.Номер) + "," + " ";
						
					ИначеЕсли ТипЗнч(Выборка.Распоряжение) = Тип("ДокументСсылка.ПеремещениеТоваров") Тогда
						
						СтрокаПеремещений = СтрокаПеремещений
							+ ПрефиксацияОбъектовКлиентСервер.ПолучитьНомерНаПечать(Выборка.Распоряжение.Номер) + "," + " ";
						
					КонецЕсли;
					
				КонецЕсли;
				
				
				Пока Выборка.Следующий() Цикл
					
					Если ТипЗнч(Выборка.Распоряжение) = Тип("ДокументСсылка.РеализацияТоваровУслуг") Тогда
						
						СтрокаРеализаций = СтрокаРеализаций
							+ ПрефиксацияОбъектовКлиентСервер.ПолучитьНомерНаПечать(Выборка.Распоряжение.Номер) + "," + " ";	
						
					ИначеЕсли ТипЗнч(Выборка.Распоряжение) = Тип("ДокументСсылка.ПеремещениеТоваров") Тогда
						
						СтрокаПеремещений = СтрокаПеремещений
							+ ПрефиксацияОбъектовКлиентСервер.ПолучитьНомерНаПечать(Выборка.Распоряжение.Номер) + "," + " ";
						
					КонецЕсли;
					
				КонецЦикла;
				
				Если СтрокаРеализаций <> "" Тогда 
					
					СтрокаРеализаций = Лев(СтрокаРеализаций, СтрДлина(СтрокаРеализаций) - 2);
					СтрокаРеализаций = НСтр("ru = 'Реализации: '") + СтрокаРеализаций + Символы.ПС;
					
				КонецЕсли;
				
				Если СтрокаПеремещений <> "" Тогда
					
					СтрокаПеремещений = Лев(СтрокаПеремещений, СтрДлина(СтрокаПеремещений) - 2);
					СтрокаПеремещений = НСтр("ru = 'Перемещения: '") + СтрокаПеремещений;
					
				КонецЕсли;
				
				ОбластьСтрокаТаблицы.Параметры.Распоряжения = СтрокаРеализаций + СтрокаПеремещений;
				ТабличныйДокумент.Вывести(ОбластьСтрокаТаблицы);
				
			КонецЦикла;
			
			ТабличныйДокумент.Вывести(ОбластьПодвалТаблицы);
			
			ОбластьИтоги.Параметры.ИтогоВес = РезультатШапкаДокументов.ИтогоВес;
			ОбластьИтоги.Параметры.ИтогоОбъем = РезультатШапкаДокументов.ИтогоОбъем;
			
			ТабличныйДокумент.Вывести(ОбластьИтоги);
			
			Если ЗначениеЗаполнено(РезультатШапкаДокументов.ДопИнформация) Тогда
				
				ОбластьДополнительнаяИнформация.Параметры.ДопИнформация = СокрЛП(РезультатШапкаДокументов.ДопИнформация);
				ТабличныйДокумент.Вывести(ОбластьДополнительнаяИнформация);
				
			КонецЕсли;
			
		КонецЦикла;
		УправлениеПечатью.ЗадатьОбластьПечатиДокумента(
			ТабличныйДокумент,
			НомерСтрокиНачало,
			ОбъектыПечати,
			РезультатШапкаДокументов.Ссылка
		);
	КонецЦикла;
	
	ТабличныйДокумент.АвтоМасштаб = Истина;
	
	Возврат ТабличныйДокумент;
	
КонецФункции

Процедура СформироватьКомплектПечатныхФорм(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати) Экспорт
	
	НоваяСтрока = КоллекцияПечатныхФорм.Добавить();
	НоваяСтрока.ИмяМакета = "МаршрутныйЛист";
	НоваяСтрока.Экземпляров = 1;
	НоваяСтрока.ИмяВРЕГ = ВРЕГ(НоваяСтрока.ИмяМакета);
	
	УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(
				КоллекцияПечатныхФорм,
				"МаршрутныйЛист",
				НСтр("ru = 'Маршрутный лист'"),
				СформироватьПечатнуюФормуМаршрутныйЛист(МассивОбъектов, ОбъектыПечати)
		);
	МассивРаспоряжений = ПолучитьМассивРаспоряжений(МассивОбъектов);
	
	Итератор = МассивРаспоряжений.Количество();
	Пока Итератор > 0 Цикл
		Итератор = Итератор - 1;
		Если НЕ ОбщегоНазначения.ЗначениеРеквизитаОбъекта(МассивРаспоряжений[Итератор],"Проведен") Тогда
			Текст = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				НСтр("ru = 'Документ %1 не проведен. Печать комплекта по этому документу не будет выполнена.'"),
				МассивРаспоряжений[Итератор]
				);
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
				Текст,
				МассивРаспоряжений[Итератор]
				);
			МассивРаспоряжений.Удалить(Итератор);
		КонецЕсли;
	КонецЦикла;
	
	СоответствиеТипов = ОбщегоНазначенияУТ.СоответствиеМассивовПоТипамОбъектов(МассивРаспоряжений);
	
	Для Каждого ТекТипОбъекта Из СоответствиеТипов Цикл
		
		МенеджерПечати = ОбщегоНазначения.МенеджерОбъектаПоПолномуИмени(ТекТипОбъекта.Ключ);
		МенеджерПечати.СформироватьКомплектПечатныхФорм(
			ТекТипОбъекта.Значение,
			ПараметрыПечати,
			КоллекцияПечатныхФорм,
			ОбъектыПечати
		);
		
	КонецЦикла;
	
КонецПроцедуры

Функция ПолучитьМассивРаспоряжений(МассивОбъектов)
	
	Запрос = Новый Запрос("ВЫБРАТЬ
	                      |	ЗаданиеНаПеревозку.Ссылка,
	                      |	ЗаданиеНаПеревозку.Дата,
	                      |	ЗаданиеНаПеревозку.ДатаВремяРейсаПланС
	                      |ПОМЕСТИТЬ ВТЗадания
	                      |ИЗ
	                      |	Документ.ЗаданиеНаПеревозку КАК ЗаданиеНаПеревозку
	                      |ГДЕ
	                      |	ЗаданиеНаПеревозку.Ссылка В(&МассивОбъектов)
	                      |;
	                      |
	                      |////////////////////////////////////////////////////////////////////////////////
	                      |ВЫБРАТЬ
	                      |	ЗаданиеНаПеревозкуМаршрут.НомерСтроки,
	                      |	ЗаданиеНаПеревозкуМаршрут.КлючСвязи
	                      |ПОМЕСТИТЬ ВТПунктыМаршрута
	                      |ИЗ
	                      |	Документ.ЗаданиеНаПеревозку.Маршрут КАК ЗаданиеНаПеревозкуМаршрут
	                      |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТЗадания КАК ВТЗадания
	                      |		ПО (ВТЗадания.Ссылка = ЗаданиеНаПеревозкуМаршрут.Ссылка)
	                      |;
	                      |
	                      |////////////////////////////////////////////////////////////////////////////////
	                      |ВЫБРАТЬ
	                      |	ЗаданиеНаПеревозкуРаспоряжения.Распоряжение
	                      |ИЗ
	                      |	Документ.ЗаданиеНаПеревозку.Распоряжения КАК ЗаданиеНаПеревозкуРаспоряжения
	                      |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТЗадания КАК ВТЗадания
	                      |		ПО (ВТЗадания.Ссылка = ЗаданиеНаПеревозкуРаспоряжения.Ссылка)
	                      |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТПунктыМаршрута КАК ВТПунктыМаршрута
	                      |		ПО (ВТПунктыМаршрута.КлючСвязи = ЗаданиеНаПеревозкуРаспоряжения.КлючСвязи)
	                      |
	                      |УПОРЯДОЧИТЬ ПО
	                      |	ВЫБОР
	                      |		КОГДА ВТЗадания.ДатаВремяРейсаПланС = ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	                      |			ТОГДА ВТЗадания.Дата
	                      |		ИНАЧЕ ВТЗадания.ДатаВремяРейсаПланС
	                      |	КОНЕЦ,
	                      |	ВТПунктыМаршрута.НомерСтроки,
	                      |	ЗаданиеНаПеревозкуРаспоряжения.НомерСтроки");
	Запрос.УстановитьПараметр("МассивОбъектов",МассивОбъектов);
	Возврат Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Распоряжение");
КонецФункции

// Функция осуществляет печать формы "1-Т"
// на основании документа "ПеремещениеТоваров"
//
Функция ПолучитьДанныеДляПечатнойФормыТТН(ПараметрыПечати, МассивОбъектов) Экспорт
	
	Если ТипЗнч(МассивОбъектов[0]) = Тип("ДокументСсылка.РеализацияТоваровУслуг") Тогда
		Возврат ПолучитьДанныеДляПечатнойФормыТТНРеализации(ПараметрыПечати, МассивОбъектов)
	Иначе
		Возврат ПолучитьДанныеДляПечатнойФормыТТНПеремещения(ПараметрыПечати, МассивОбъектов)
	КонецЕсли;
	
КонецФункции

// Функция осуществляет печать формы "1-Т"
// на основании документа "Реализация товаров и услуг"
//
Функция ПолучитьДанныеДляПечатнойФормыТТНРеализации(ПараметрыПечати, МассивОбъектов)
	
	УстановитьПривилегированныйРежим(Истина);
	
	КолонкаКодов = ФормированиеПечатныхФорм.ИмяДополнительнойКолонки();
	Если Не ЗначениеЗаполнено(КолонкаКодов) Тогда
		КолонкаКодов = "Код";
	КонецЕсли;
	
	МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	ОтветственныеЛицаСервер.СформироватьВременнуюТаблицуОтветственныхЛицДокументов(МассивОбъектов, МенеджерВременныхТаблиц);	
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ЗаданиеНаПеревозкуРаспоряжения.Распоряжение,
	|	МАКСИМУМ(ЗаданиеНаПеревозку.ТранспортноеСредство) КАК ТранспортноеСредство,
	|	МАКСИМУМ(ЗаданиеНаПеревозку.Водитель) КАК Водитель,
	|	СУММА(1) КАК Количество
	|ПОМЕСТИТЬ ВТЗаданиеНаПеревозку
	|ИЗ
	|	Документ.ЗаданиеНаПеревозку.Распоряжения КАК ЗаданиеНаПеревозкуРаспоряжения
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ЗаданиеНаПеревозку КАК ЗаданиеНаПеревозку
	|		ПО (ЗаданиеНаПеревозку.Ссылка = ЗаданиеНаПеревозкуРаспоряжения.Ссылка)
	|ГДЕ
	|	ЗаданиеНаПеревозкуРаспоряжения.Распоряжение В(&МассивДокументов)
	|	И ЗаданиеНаПеревозку.Проведен
	|
	|СГРУППИРОВАТЬ ПО
	|	ЗаданиеНаПеревозкуРаспоряжения.Распоряжение
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаВВалютеРегл.ДокументСсылка КАК ДокументСсылка,
	|	ТаблицаВВалютеРегл.НомерСтроки КАК НомерСтроки,
	|	ТаблицаВВалютеРегл.Сумма КАК Сумма,
	|	ТаблицаВВалютеРегл.СуммаНДС КАК СуммаНДС,
	|	ТаблицаВВалютеРегл.ВидыЗапасов КАК ВидыЗапасов
	|ПОМЕСТИТЬ ВТ_ТаблицаКорректировок
	|ИЗ
	|	&ТаблицаВВалютеРегл КАК ТаблицаВВалютеРегл
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СУММА(1) КАК Количество,
	|	СписокТоваров.Ссылка КАК Ссылка
	|ПОМЕСТИТЬ КоличествоТоваров
	|ИЗ
	|	(ВЫБРАТЬ РАЗЛИЧНЫЕ
	|		РеализацияТоваровУслугТовары.Ссылка КАК Ссылка,
	|		РеализацияТоваровУслугТовары.Номенклатура КАК Номенклатура,
	|		РеализацияТоваровУслугТовары.Характеристика КАК Характеристика
	|	ИЗ
	|		Документ.РеализацияТоваровУслуг.Товары КАК РеализацияТоваровУслугТовары
	|	ГДЕ
	|		РеализацияТоваровУслугТовары.Ссылка В(&МассивДокументов)
	|		И РеализацияТоваровУслугТовары.Номенклатура.ТипНоменклатуры В
	|			(ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Товар),ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара))) КАК СписокТоваров
	|
	|СГРУППИРОВАТЬ ПО
	|	СписокТоваров.Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	РеализацияТоваров.Ссылка КАК Ссылка,
	|	РеализацияТоваров.Номер КАК Номер,
	|	РеализацияТоваров.Дата КАК Дата,
	|	РеализацияТоваров.Организация КАК Организация,
	|	ВЫБОР
	|		КОГДА РеализацияТоваров.Грузополучатель = ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)
	|			ТОГДА РеализацияТоваров.Контрагент
	|		ИНАЧЕ РеализацияТоваров.Грузополучатель
	|	КОНЕЦ КАК Грузополучатель,
	|	ВЫБОР
	|		КОГДА РеализацияТоваров.Грузоотправитель = ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)
	|			ТОГДА РеализацияТоваров.Организация
	|		ИНАЧЕ РеализацияТоваров.Грузоотправитель
	|	КОНЕЦ КАК Грузоотправитель,
	|	РеализацияТоваров.Контрагент КАК Контрагент,
	|	РеализацияТоваров.Контрагент КАК ЗаказчикПеревозок,
	|	РеализацияТоваров.Организация.Префикс КАК Префикс,
	|	РеализацияТоваров.Отпустил.Наименование КАК Кладовщик,
	|	РеализацияТоваров.ОтпустилДолжность КАК ДолжностьКладовщика,
	|	ТаблицаОтветственныеЛица.РуководительНаименование КАК Руководитель,
	|	ТаблицаОтветственныеЛица.РуководительДолжность КАК ДолжностьРуководителя,
	|	ТаблицаОтветственныеЛица.ГлавныйБухгалтерНаименование КАК ГлавныйБухгалтер,
	|	РеализацияТоваров.БанковскийСчетОрганизации КАК БанковскийСчетОрганизации,
	|	РеализацияТоваров.БанковскийСчетКонтрагента КАК БанковскийСчетКонтрагента,
	|	РеализацияТоваров.БанковскийСчетГрузоотправителя КАК БанковскийСчетГрузоотправителя,
	|	РеализацияТоваров.БанковскийСчетГрузополучателя КАК БанковскийСчетГрузополучателя,
	|	НЕОПРЕДЕЛЕНО КАК БанковскийСчетЗаказчикаПеревозок,
	|	РеализацияТоваров.БанковскийСчетПеревозчика КАК БанковскийСчетПеревозчика,
	|	РеализацияТоваров.Перевозчик КАК Перевозчик,
	|	ВЫБОР
	|		КОГДА ВТЗаданиеНаПеревозку.ТранспортноеСредство ЕСТЬ NULL 
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК НеНайденоЗаданиеНаПеревозку,
	|	ВЫБОР
	|		КОГДА ВТЗаданиеНаПеревозку.Количество > 1
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК БолееОдногоВхожденияВЗаданияНаПеревозку,
	|	НЕ РеализацияТоваров.Проведен КАК РаспоряжениеНеПроведено,
	|	ВТЗаданиеНаПеревозку.Водитель КАК Водитель,
	|	ВТЗаданиеНаПеревозку.ТранспортноеСредство.ВидПеревозки КАК ВидПеревозки,
	|	ВТЗаданиеНаПеревозку.ТранспортноеСредство.ЛицензионнаяКарточкаРегистрационныйНомер КАК ЛицензионнаяКарточкаРегистрационныйНомер,
	|	ВТЗаданиеНаПеревозку.ТранспортноеСредство.ЛицензионнаяКарточкаСерия КАК ЛицензионнаяКарточкаСерия,
	|	ВТЗаданиеНаПеревозку.ТранспортноеСредство.ЛицензионнаяКарточкаНомер КАК ЛицензионнаяКарточкаНомер,
	|	ВТЗаданиеНаПеревозку.ТранспортноеСредство.ЛицензионнаяКарточкаВид КАК ЛицензионнаяКарточкаВид,
	|	ВТЗаданиеНаПеревозку.ТранспортноеСредство.Марка КАК МаркаАвтомобиля,
	|	ВТЗаданиеНаПеревозку.ТранспортноеСредство.Код КАК ГосНомерАвтомобиля,
	|	ВТЗаданиеНаПеревозку.ТранспортноеСредство.Прицеп КАК Прицеп,
	|	ВТЗаданиеНаПеревозку.ТранспортноеСредство.ГосударственныйНомерПрицепа КАК ГосНомерПрицепа,
	|	РеализацияТоваров.ДоверенностьНомер КАК ДоверенностьНомер,
	|	РеализацияТоваров.ДоверенностьДата КАК ДоверенностьДата,
	|	РеализацияТоваров.ДоверенностьВыдана КАК ДоверенностьВыдана,
	|	РеализацияТоваров.ДоверенностьЛицо КАК ДоверенностьЛицо,
	|	РеализацияТоваров.ЦенаВключаетНДС КАК ЦенаВключаетНДС,
	|	ВЫБОР
	|		КОГДА РеализацияТоваров.Ссылка В (&МассивДокументовВВалютеРегл)
	|			ТОГДА &ВалютаРегламентированногоУчета
	|		ИНАЧЕ РеализацияТоваров.Валюта
	|	КОНЕЦ КАК Валюта,
	|	СкладыКонтактнаяОтправитель.Представление КАК ПунктПогрузки,
	|	РеализацияТоваров.АдресДоставки КАК ПунктРазгрузки,
	|	РеализацияТоваров.СрокДоставки КАК СрокДоставки,
	|	ЕСТЬNULL(КоличествоТоваров.Количество, 0) КАК КоличествоНаименований
	|ИЗ
	|	Документ.РеализацияТоваровУслуг КАК РеализацияТоваров
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Склады.КонтактнаяИнформация КАК СкладыКонтактнаяОтправитель
	|		ПО РеализацияТоваров.Склад = СкладыКонтактнаяОтправитель.Ссылка
	|			И (СкладыКонтактнаяОтправитель.Вид = ЗНАЧЕНИЕ(Справочник.ВидыКонтактнойИнформации.АдресСклада))
	|		ЛЕВОЕ СОЕДИНЕНИЕ КоличествоТоваров КАК КоличествоТоваров
	|		ПО РеализацияТоваров.Ссылка = КоличествоТоваров.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТЗаданиеНаПеревозку КАК ВТЗаданиеНаПеревозку
	|		ПО (ВТЗаданиеНаПеревозку.Распоряжение = РеализацияТоваров.Ссылка)
	|		ЛЕВОЕ СОЕДИНЕНИЕ ТаблицаОтветственныеЛица КАК ТаблицаОтветственныеЛица
	|		ПО РеализацияТоваров.Ссылка = ТаблицаОтветственныеЛица.Ссылка
	|ГДЕ
	|	РеализацияТоваров.Ссылка В(&МассивДокументов)
	|
	|УПОРЯДОЧИТЬ ПО
	|	Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	РеализацияТоваровТовары.Ссылка КАК Ссылка,
	|	РеализацияТоваровТовары.Номенклатура КАК Номенклатура,
	|	РеализацияТоваровТовары.Номенклатура."+КолонкаКодов+" КАК ТоварКод,
	|	РеализацияТоваровТовары.Номенклатура.НаименованиеПолное КАК ТоварНаименование,
	|	РеализацияТоваровТовары.Характеристика.НаименованиеПолное КАК Характеристика,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(РеализацияТоваровТовары.Упаковка.Коэффициент, 1) = 1
	|			ТОГДА НЕОПРЕДЕЛЕНО
	|		ИНАЧЕ РеализацияТоваровТовары.Упаковка.Наименование
	|	КОНЕЦ КАК Упаковка,
	|	РеализацияТоваровТовары.КоличествоУпаковок КАК Количество,
	|	ВЫБОР
	|		КОГДА РеализацияТоваровТовары.Упаковка = ЗНАЧЕНИЕ(Справочник.УпаковкиНоменклатуры.ПустаяСсылка)
	|			ТОГДА РеализацияТоваровТовары.Номенклатура.ЕдиницаИзмерения.Наименование
	|		ИНАЧЕ РеализацияТоваровТовары.Упаковка.ЕдиницаИзмерения.Наименование
	|	КОНЕЦ КАК ВидУпаковки,
	|	ВЫБОР
	|		КОГДА РеализацияТоваровТовары.Упаковка = ЗНАЧЕНИЕ(Справочник.УпаковкиНоменклатуры.ПустаяСсылка)
	|			ТОГДА РеализацияТоваровТовары.Номенклатура.ЕдиницаИзмерения.Наименование
	|		ИНАЧЕ РеализацияТоваровТовары.Упаковка.ЕдиницаИзмерения.Наименование
	|	КОНЕЦ КАК БазоваяЕдиницаНаименование,
	|	ВЫБОР
	|		КОГДА ТаблицаКорректировок.Сумма ЕСТЬ NULL 
	|				И РеализацияТоваровТовары.СуммаРучнойСкидки + РеализацияТоваровТовары.СуммаАвтоматическойСкидки = 0
	|			ТОГДА РеализацияТоваровТовары.Цена
	|		КОГДА РеализацияТоваровТовары.КоличествоУпаковок <> 0
	|			ТОГДА ВЫРАЗИТЬ(ЕСТЬNULL(ТаблицаКорректировок.Сумма, РеализацияТоваровТовары.Сумма) / РеализацияТоваровТовары.КоличествоУпаковок КАК ЧИСЛО(15, 2))
	|		ИНАЧЕ ЕСТЬNULL(ТаблицаКорректировок.Сумма, РеализацияТоваровТовары.Цена)
	|	КОНЕЦ КАК Цена,
	|	ВЫБОР
	|		КОГДА РеализацияТоваровТовары.Упаковка.Вес ЕСТЬ NULL 
	|			ТОГДА РеализацияТоваровТовары.Количество * РеализацияТоваровТовары.Номенклатура.Вес
	|		ИНАЧЕ РеализацияТоваровТовары.КоличествоУпаковок * РеализацияТоваровТовары.Упаковка.Вес
	|	КОНЕЦ КАК МассаБрутто,
	|	РеализацияТоваровТовары.Количество * РеализацияТоваровТовары.Номенклатура.Вес КАК МассаНетто,
	|	РеализацияТоваровТовары.КоличествоУпаковок КАК КоличествоМест,
	|	ЕСТЬNULL(ТаблицаКорректировок.Сумма, РеализацияТоваровТовары.Сумма) КАК Сумма,
	|	ЕСТЬNULL(ТаблицаКорректировок.СуммаНДС, РеализацияТоваровТовары.СуммаНДС) КАК СуммаНДС,
	|	РеализацияТоваровТовары.НомерСтроки КАК НомерСтроки,
	|	ЛОЖЬ КАК Весовой,
	|	ЛОЖЬ КАК ЭтоВозвратнаяТара
	|ИЗ
	|	Документ.РеализацияТоваровУслуг.Товары КАК РеализацияТоваровТовары
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ТаблицаКорректировок КАК ТаблицаКорректировок
	|		ПО РеализацияТоваровТовары.Ссылка = ТаблицаКорректировок.ДокументСсылка
	|			И РеализацияТоваровТовары.НомерСтроки = ТаблицаКорректировок.НомерСтроки
	|ГДЕ
	|	РеализацияТоваровТовары.Номенклатура.ТипНоменклатуры В
	|		(ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Товар),ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара))
	|	И РеализацияТоваровТовары.Ссылка В(&МассивДокументов)
	|
	|УПОРЯДОЧИТЬ ПО
	|	РеализацияТоваровТовары.Ссылка,
	|	РеализацияТоваровТовары.НомерСтроки
	|ИТОГИ ПО
	|	Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ДанныеДокумента.Дата КАК Дата,
	|	ДанныеДокумента.Валюта КАК Валюта
	|ИЗ
	|	Документ.РеализацияТоваровУслуг КАК ДанныеДокумента
	|ГДЕ
	|	ДанныеДокумента.Валюта <> &ВалютаРегламентированногоУчета
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТ_ТаблицаКорректировок
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ КоличествоТоваров
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТЗаданиеНаПеревозку";
		
	ТаблицаВВалютеРегл = ПолучитьТабличнуюЧастьВВалютеРеглУчета(МассивОбъектов);
	МассивДокументовВВалютеРегл = ТаблицаВВалютеРегл.ВыгрузитьКолонку("ДокументСсылка");
	ВалютаРегламентированногоУчета = Константы.ВалютаРегламентированногоУчета.Получить();
	
	Запрос.УстановитьПараметр("МассивДокументов",               МассивОбъектов);
	Запрос.УстановитьПараметр("ТаблицаВВалютеРегл",             ТаблицаВВалютеРегл);
	Запрос.УстановитьПараметр("МассивДокументовВВалютеРегл",    МассивДокументовВВалютеРегл);
	Запрос.УстановитьПараметр("ВалютаРегламентированногоУчета", ВалютаРегламентированногоУчета);
	
	МассивРезультатов         = Запрос.ВыполнитьПакет();
	РезультатПоШапке          = МассивРезультатов[3];
	РезультатПоТабличнойЧасти = МассивРезультатов[4];
	
	ТаблицаКурсовВалют = ТаблицаКурсовВалют(МассивРезультатов[5].Выгрузить());
	
	СтруктураДанныхДляПечати = Новый Структура(
		"РезультатПоШапке, РезультатПоТабличнойЧасти, ТаблицаКурсовВалют",
		РезультатПоШапке,
		РезультатПоТабличнойЧасти,
		ТаблицаКурсовВалют
	);
	
	Возврат СтруктураДанныхДляПечати;

КонецФункции

// Функция получает данные для формирования формы "1-Т"
// на основании документа "ПеремещениеТоваров".
//
Функция ПолучитьДанныеДляПечатнойФормыТТНПеремещения(ПараметрыПечати, МассивОбъектов) Экспорт
	
	КолонкаКодов = ФормированиеПечатныхФорм.ИмяДополнительнойКолонки();
	Если Не ЗначениеЗаполнено(КолонкаКодов) Тогда
		КолонкаКодов = "Код";
	КонецЕсли;
	
	МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	ОтветственныеЛицаСервер.СформироватьВременнуюТаблицуОтветственныхЛицДокументов(МассивОбъектов, МенеджерВременныхТаблиц);	
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ЗаданиеНаПеревозкуРаспоряжения.Распоряжение,
	|	МАКСИМУМ(ЗаданиеНаПеревозку.ТранспортноеСредство) КАК ТранспортноеСредство,
	|	МАКСИМУМ(ЗаданиеНаПеревозку.Водитель) КАК Водитель,
	|	СУММА(1) КАК Количество
	|ПОМЕСТИТЬ ВТЗаданиеНаПеревозку
	|ИЗ
	|	Документ.ЗаданиеНаПеревозку.Распоряжения КАК ЗаданиеНаПеревозкуРаспоряжения
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ЗаданиеНаПеревозку КАК ЗаданиеНаПеревозку
	|		ПО (ЗаданиеНаПеревозку.Ссылка = ЗаданиеНаПеревозкуРаспоряжения.Ссылка)
	|ГДЕ
	|	ЗаданиеНаПеревозкуРаспоряжения.Распоряжение В(&МассивДокументов)
	|	И ЗаданиеНаПеревозку.Проведен
	|
	|СГРУППИРОВАТЬ ПО
	|	ЗаданиеНаПеревозкуРаспоряжения.Распоряжение
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПеремещениеТоваровТовары.Ссылка КАК Ссылка,
	|	МАКСИМУМ(ПеремещениеТоваровТовары.НомерСтроки) КАК НомерСтроки,
	|	ПеремещениеТоваровТовары.Номенклатура КАК Номенклатура,
	|	ПеремещениеТоваровТовары.Характеристика КАК Характеристика,
	|	ПеремещениеТоваровТовары.Упаковка КАК Упаковка,
	|	СУММА(ПеремещениеТоваровТовары.КоличествоУпаковок) КАК КоличествоУпаковок,
	|	СУММА(ПеремещениеТоваровТовары.Количество) КАК Количество,
	|	ПеремещениеТоваровТовары.Ссылка.ВидЦены КАК ВидЦен,
	|	ПеремещениеТоваровТовары.Ссылка.Дата КАК Дата
	|ПОМЕСТИТЬ ПеремещениеТоваровТовары
	|ИЗ
	|	Документ.ПеремещениеТоваров.Товары КАК ПеремещениеТоваровТовары
	|ГДЕ
	|	ПеремещениеТоваровТовары.Ссылка В(&МассивДокументов)
	|
	|СГРУППИРОВАТЬ ПО
	|	ПеремещениеТоваровТовары.Ссылка,
	|	ПеремещениеТоваровТовары.Номенклатура,
	|	ПеремещениеТоваровТовары.Характеристика,
	|	ПеремещениеТоваровТовары.Упаковка,
	|	ПеремещениеТоваровТовары.Ссылка.Дата,
	|	ПеремещениеТоваровТовары.Ссылка.ВидЦены
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПеремещениеТоваровТовары.Ссылка КАК Ссылка,
	|	ПеремещениеТоваровТовары.Номенклатура КАК Номенклатура,
	|	ПеремещениеТоваровТовары.Характеристика КАК Характеристика,
	|	МАКСИМУМ(ЦеныНоменклатуры.Период) КАК Период,
	|	ЦеныНоменклатуры.ВидЦены КАК ВидЦены
	|ПОМЕСТИТЬ ТаблицаПериодовЦен
	|ИЗ
	|	ПеремещениеТоваровТовары КАК ПеремещениеТоваровТовары
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ЦеныНоменклатуры КАК ЦеныНоменклатуры
	|		ПО ПеремещениеТоваровТовары.ВидЦен = ЦеныНоменклатуры.ВидЦены
	|			И ПеремещениеТоваровТовары.Номенклатура = ЦеныНоменклатуры.Номенклатура
	|			И ПеремещениеТоваровТовары.Характеристика = ЦеныНоменклатуры.Характеристика
	|			И ПеремещениеТоваровТовары.Дата >= ЦеныНоменклатуры.Период
	|
	|СГРУППИРОВАТЬ ПО
	|	ПеремещениеТоваровТовары.Ссылка,
	|	ПеремещениеТоваровТовары.Номенклатура,
	|	ПеремещениеТоваровТовары.Характеристика,
	|	ЦеныНоменклатуры.ВидЦены
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СУММА(1) КАК Количество,
	|	СписокТоваров.Ссылка КАК Ссылка
	|ПОМЕСТИТЬ КоличествоТоваров
	|ИЗ
	|	(ВЫБРАТЬ РАЗЛИЧНЫЕ
	|		ПеремещениеТоваровТовары.Ссылка КАК Ссылка,
	|		ПеремещениеТоваровТовары.Номенклатура КАК Номенклатура,
	|		ПеремещениеТоваровТовары.Характеристика КАК Характеристика
	|	ИЗ
	|		Документ.ПеремещениеТоваров.Товары КАК ПеремещениеТоваровТовары
	|	ГДЕ
	|		ПеремещениеТоваровТовары.Ссылка В(&МассивДокументов)) КАК СписокТоваров
	|
	|СГРУППИРОВАТЬ ПО
	|	СписокТоваров.Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПеремещениеТоваров.Ссылка КАК Ссылка,
	|	ПеремещениеТоваров.Номер КАК Номер,
	|	ПеремещениеТоваров.Дата КАК Дата,
	|	ПеремещениеТоваров.Организация КАК Организация,
	|	ВЫБОР
	|		КОГДА ПеремещениеТоваров.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВнутренняяПередачаТоваров)
	|			ТОГДА ПеремещениеТоваров.ОрганизацияПолучатель
	|		ИНАЧЕ ПеремещениеТоваров.Организация
	|	КОНЕЦ КАК Грузополучатель,
	|	ПеремещениеТоваров.Организация КАК Грузоотправитель,
	|	ПеремещениеТоваров.Организация КАК Контрагент,
	|	ПеремещениеТоваров.Организация КАК ЗаказчикПеревозок,
	|	ПеремещениеТоваров.Организация.Префикс КАК Префикс,
	|	ПеремещениеТоваров.СкладОтправитель.ТекущийОтветственный КАК Кладовщик,
	|	ПеремещениеТоваров.СкладОтправитель.ТекущаяДолжностьОтветственного КАК ДолжностьКладовщика,
	|	ТаблицаОтветственныеЛица.РуководительНаименование КАК Руководитель,
	|	ТаблицаОтветственныеЛица.РуководительДолжность КАК ДолжностьРуководителя,
	|	ТаблицаОтветственныеЛица.ГлавныйБухгалтерНаименование КАК ГлавныйБухгалтер,
	|	ПеремещениеТоваров.БанковскийСчетОрганизации КАК БанковскийСчетОрганизации,
	|	ПеремещениеТоваров.БанковскийСчетОрганизации КАК БанковскийСчетКонтрагента,
	|	ПеремещениеТоваров.БанковскийСчетОрганизации КАК БанковскийСчетГрузоотправителя,
	|	ПеремещениеТоваров.БанковскийСчетОрганизации КАК БанковскийСчетГрузополучателя,
	|	ПеремещениеТоваров.БанковскийСчетОрганизации КАК БанковскийСчетЗаказчикаПеревозок,
	|	ПеремещениеТоваров.БанковскийСчетПеревозчика КАК БанковскийСчетПеревозчика,
	|	ПеремещениеТоваров.Перевозчик КАК Перевозчик,
	|	ВЫБОР
	|		КОГДА ВТЗаданиеНаПеревозку.ТранспортноеСредство ЕСТЬ NULL 
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК НеНайденоЗаданиеНаПеревозку,
	|	ВЫБОР
	|		КОГДА ВТЗаданиеНаПеревозку.Количество > 1
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК БолееОдногоВхожденияВЗаданияНаПеревозку,
	|	НЕ ПеремещениеТоваров.Проведен КАК РаспоряжениеНеПроведено,
	|	ВТЗаданиеНаПеревозку.Водитель КАК Водитель,
	|	ВТЗаданиеНаПеревозку.ТранспортноеСредство.ВидПеревозки КАК ВидПеревозки,
	|	ВТЗаданиеНаПеревозку.ТранспортноеСредство.ЛицензионнаяКарточкаРегистрационныйНомер КАК ЛицензионнаяКарточкаРегистрационныйНомер,
	|	ВТЗаданиеНаПеревозку.ТранспортноеСредство.ЛицензионнаяКарточкаСерия КАК ЛицензионнаяКарточкаСерия,
	|	ВТЗаданиеНаПеревозку.ТранспортноеСредство.ЛицензионнаяКарточкаНомер КАК ЛицензионнаяКарточкаНомер,
	|	ВТЗаданиеНаПеревозку.ТранспортноеСредство.ЛицензионнаяКарточкаВид КАК ЛицензионнаяКарточкаВид,
	|	ВТЗаданиеНаПеревозку.ТранспортноеСредство.Марка КАК МаркаАвтомобиля,
	|	ВТЗаданиеНаПеревозку.ТранспортноеСредство.Код КАК ГосНомерАвтомобиля,
	|	ВТЗаданиеНаПеревозку.ТранспортноеСредство.Прицеп КАК Прицеп,
	|	ВТЗаданиеНаПеревозку.ТранспортноеСредство.ГосударственныйНомерПрицепа КАК ГосНомерПрицепа,
	|	"""" КАК ДоверенностьНомер,
	|	"""" КАК ДоверенностьДата,
	|	"""" КАК ДоверенностьВыдана,
	|	"""" КАК ДоверенностьЛицо,
	|	ЕСТЬNULL(ПеремещениеТоваров.ВидЦены.ЦенаВключаетНДС, ЛОЖЬ) КАК ЦенаВключаетНДС,
	|	ЕСТЬNULL(ПеремещениеТоваров.ВидЦены.ВалютаЦены, ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка)) КАК Валюта,
	|	СкладыКонтактнаяОтправитель.Представление КАК ПунктПогрузки,
	|	СкладыКонтактнаяПолучатель.Представление КАК ПунктРазгрузки,
	|	ПеремещениеТоваров.СрокДоставки КАК СрокДоставки,
	|	КоличествоТоваров.Количество КАК КоличествоНаименований
	|ИЗ
	|	Документ.ПеремещениеТоваров КАК ПеремещениеТоваров
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Склады.КонтактнаяИнформация КАК СкладыКонтактнаяПолучатель
	|		ПО ПеремещениеТоваров.СкладПолучатель = СкладыКонтактнаяПолучатель.Ссылка
	|			И (СкладыКонтактнаяПолучатель.Вид = ЗНАЧЕНИЕ(Справочник.ВидыКонтактнойИнформации.АдресСклада))
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Склады.КонтактнаяИнформация КАК СкладыКонтактнаяОтправитель
	|		ПО ПеремещениеТоваров.СкладОтправитель = СкладыКонтактнаяОтправитель.Ссылка
	|			И (СкладыКонтактнаяОтправитель.Вид = ЗНАЧЕНИЕ(Справочник.ВидыКонтактнойИнформации.АдресСклада))
	|		ЛЕВОЕ СОЕДИНЕНИЕ КоличествоТоваров КАК КоличествоТоваров
	|		ПО ПеремещениеТоваров.Ссылка = КоличествоТоваров.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТЗаданиеНаПеревозку КАК ВТЗаданиеНаПеревозку
	|		ПО ПеремещениеТоваров.Ссылка = ВТЗаданиеНаПеревозку.Распоряжение
	|		ЛЕВОЕ СОЕДИНЕНИЕ ТаблицаОтветственныеЛица КАК ТаблицаОтветственныеЛица
	|		ПО ПеремещениеТоваров.Ссылка = ТаблицаОтветственныеЛица.Ссылка
	|ГДЕ
	|	ПеремещениеТоваров.Ссылка В(&МассивДокументов)
	|
	|УПОРЯДОЧИТЬ ПО
	|	Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПеремещениеТоваров.Ссылка КАК Ссылка,
	|	ПеремещениеТоваров.Номенклатура КАК Номенклатура,
	|	ПеремещениеТоваров.Номенклатура."+КолонкаКодов+" КАК ТоварКод,
	|	ПеремещениеТоваров.Номенклатура.НаименованиеПолное КАК ТоварНаименование,
	|	ПеремещениеТоваров.Характеристика.НаименованиеПолное КАК Характеристика,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(ПеремещениеТоваров.Упаковка.Коэффициент, 1) = 1
	|			ТОГДА НЕОПРЕДЕЛЕНО
	|		ИНАЧЕ ПеремещениеТоваров.Упаковка.Наименование
	|	КОНЕЦ КАК Упаковка,
	|	ПеремещениеТоваров.КоличествоУпаковок КАК Количество,
	|	ВЫБОР
	|		КОГДА ПеремещениеТоваров.Упаковка = ЗНАЧЕНИЕ(Справочник.УпаковкиНоменклатуры.ПустаяСсылка)
	|			ТОГДА ПеремещениеТоваров.Номенклатура.ЕдиницаИзмерения.Наименование
	|		ИНАЧЕ ПеремещениеТоваров.Упаковка.ЕдиницаИзмерения.Наименование
	|	КОНЕЦ КАК ВидУпаковки,
	|	ВЫБОР
	|		КОГДА ПеремещениеТоваров.Упаковка = ЗНАЧЕНИЕ(Справочник.УпаковкиНоменклатуры.ПустаяСсылка)
	|			ТОГДА ПеремещениеТоваров.Номенклатура.ЕдиницаИзмерения.Наименование
	|		ИНАЧЕ ПеремещениеТоваров.Упаковка.ЕдиницаИзмерения.Наименование
	|	КОНЕЦ КАК БазоваяЕдиницаНаименование,
	|	ВЫБОР
	|		КОГДА НЕ ЦеныНоменклатуры.Упаковка.Коэффициент ЕСТЬ NULL 
	|				И ЦеныНоменклатуры.Упаковка.Коэффициент <> 0
	|			ТОГДА ЕСТЬNULL(ЦеныНоменклатуры.Цена, 0) / ЦеныНоменклатуры.Упаковка.Коэффициент
	|		ИНАЧЕ ЕСТЬNULL(ЦеныНоменклатуры.Цена, 0)
	|	КОНЕЦ * ЕСТЬNULL(ПеремещениеТоваров.Упаковка.Коэффициент, 1) КАК Цена,
	|	ВЫБОР
	|		КОГДА ПеремещениеТоваров.Упаковка.Вес ЕСТЬ NULL 
	|			ТОГДА ПеремещениеТоваров.Количество * ПеремещениеТоваров.Номенклатура.Вес
	|		ИНАЧЕ ПеремещениеТоваров.КоличествоУпаковок * ПеремещениеТоваров.Упаковка.Вес
	|	КОНЕЦ КАК МассаБрутто,
	|	ПеремещениеТоваров.Количество * ПеремещениеТоваров.Номенклатура.Вес КАК МассаНетто,
	|	ПеремещениеТоваров.КоличествоУпаковок КАК КоличествоМест,
	|	ВЫБОР
	|		КОГДА НЕ ЦеныНоменклатуры.Упаковка.Коэффициент ЕСТЬ NULL 
	|				И ЦеныНоменклатуры.Упаковка.Коэффициент <> 0
	|			ТОГДА ЕСТЬNULL(ЦеныНоменклатуры.Цена, 0) / ЦеныНоменклатуры.Упаковка.Коэффициент
	|		ИНАЧЕ ЕСТЬNULL(ЦеныНоменклатуры.Цена, 0)
	|	КОНЕЦ * ЕСТЬNULL(ПеремещениеТоваров.Упаковка.Коэффициент, 1) * ПеремещениеТоваров.КоличествоУпаковок КАК Сумма,
	|	0 КАК СуммаНДС,
	|	ПеремещениеТоваров.НомерСтроки КАК НомерСтроки,
	|	ЛОЖЬ КАК Весовой,
	|	ЛОЖЬ КАК ЭтоВозвратнаяТара
	|ИЗ
	|	ПеремещениеТоваровТовары КАК ПеремещениеТоваров
	|		ЛЕВОЕ СОЕДИНЕНИЕ ТаблицаПериодовЦен КАК ТаблицаПериодовЦен
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ЦеныНоменклатуры КАК ЦеныНоменклатуры
	|			ПО ТаблицаПериодовЦен.ВидЦены = ЦеныНоменклатуры.ВидЦены
	|				И ТаблицаПериодовЦен.Номенклатура = ЦеныНоменклатуры.Номенклатура
	|				И ТаблицаПериодовЦен.Характеристика = ЦеныНоменклатуры.Характеристика
	|				И ТаблицаПериодовЦен.Период = ЦеныНоменклатуры.Период
	|		ПО ПеремещениеТоваров.Ссылка = ТаблицаПериодовЦен.Ссылка
	|			И ПеремещениеТоваров.Номенклатура = ТаблицаПериодовЦен.Номенклатура
	|			И ПеремещениеТоваров.Характеристика = ТаблицаПериодовЦен.Характеристика
	|
	|УПОРЯДОЧИТЬ ПО
	|	ПеремещениеТоваров.Ссылка,
	|	ПеремещениеТоваров.НомерСтроки
	|ИТОГИ ПО
	|	Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ПеремещениеТоваровТовары
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ТаблицаПериодовЦен
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ КоличествоТоваров";
	
	Запрос.УстановитьПараметр("МассивДокументов", МассивОбъектов);
	ТаблицаКурсовВалют = ПолучитьТаблицуКурсовВалютПеремещения(МассивОбъектов);
	
	МассивРезультатов			= Запрос.ВыполнитьПакет();
	РезультатПоШапке			= МассивРезультатов[4];
	РезультатПоТабличнойЧасти	= МассивРезультатов[5];
	
	СтруктураДанныхДляПечати = Новый Структура(
		"РезультатПоШапке, РезультатПоТабличнойЧасти, ТаблицаКурсовВалют",
		РезультатПоШапке,
		РезультатПоТабличнойЧасти,
		ТаблицаКурсовВалют
	);
	
	Возврат СтруктураДанныхДляПечати;
	
КонецФункции

Функция ТаблицаКурсовВалют(ТаблицаВалют)
	
	ТаблицаКурсовВалют = Новый ТаблицаЗначений;
	ТаблицаКурсовВалют.Колонки.Добавить("Валюта",    Новый ОписаниеТипов("СправочникСсылка.Валюты"));
	ТаблицаКурсовВалют.Колонки.Добавить("Дата",      Новый ОписаниеТипов("Дата"));
	ТаблицаКурсовВалют.Колонки.Добавить("Курс",      Новый ОписаниеТипов("Число"));
	ТаблицаКурсовВалют.Колонки.Добавить("Кратность", Новый ОписаниеТипов("Число"));
	
	Для Каждого ДанныеВалюты Из ТаблицаВалют Цикл
		
		НоваяСтрока = ТаблицаКурсовВалют.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, ДанныеВалюты, , "Дата");
		НоваяСтрока.Дата = НачалоДня(ДанныеВалюты.Дата);
		
		КурсыВалюты = РаботаСКурсамиВалют.ПолучитьКурсВалюты(ДанныеВалюты.Валюта, НачалоДня(ДанныеВалюты.Дата));
		НоваяСтрока.Курс = КурсыВалюты.Курс;
		НоваяСтрока.Кратность = КурсыВалюты.Кратность;
		
	КонецЦикла;
	
	Возврат ТаблицаКурсовВалют;
	
КонецФункции

Функция ИнициализироватьТаблицуКорректировок()
	
	Таблица = Новый ТаблицаЗначений;
	Таблица.Колонки.Добавить("ДокументСсылка", Новый ОписаниеТипов("ДокументСсылка.РеализацияТоваровУслуг"));
	Таблица.Колонки.Добавить("НомерСтроки",    Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(15,0)));
	Таблица.Колонки.Добавить("Сумма",          Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(15,2)));
	Таблица.Колонки.Добавить("СуммаНДС",       Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(15,2)));
	Таблица.Колонки.Добавить("ВидыЗапасов",    Новый ОписаниеТипов("Булево"));
	
	Возврат Таблица;
	
КонецФункции

Функция ПолучитьТабличнуюЧастьВВалютеРеглУчета(МассивОбъектов, ПоВидамЗапасов = Ложь)
	
	ТаблицаКорректировок = ИнициализироватьТаблицуКорректировок();
	ВалютаРегламентированногоУчета = Константы.ВалютаРегламентированногоУчета.Получить();
	КэшКурсовВалют = РаботаСКурсамивалютУТ.ИнициализироватьКэшКурсовВалют();
	
	Запрос = Новый Запрос("
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	РасчетыСКлиентами.АналитикаУчетаПоПартнерам КАК АналитикаУчетаПоПартнерам
	|ИЗ
	|	РегистрНакопления.РасчетыСКлиентами КАК РасчетыСКлиентами
	|ГДЕ
	|	РасчетыСКлиентами.Регистратор В(&МассивДокументов)
	|	И РасчетыСКлиентами.Активность
	|");
	Запрос.УстановитьПараметр("МассивДокументов", МассивОбъектов);
	
	ТаблицаАналитик = Запрос.Выполнить().Выгрузить();
	МассивАналитикУчетаПоПартнерам = ТаблицаАналитик.ВыгрузитьКолонку("АналитикаУчетаПоПартнерам");
	
	ВзаиморасчетыСервер.ВыполнитьПроведениеДокументовПоРасчетамСКлиентами(МассивАналитикУчетаПоПартнерам);
	
	ТекстЗапроса = "
	|ВЫБРАТЬ
	|	ДанныеДокумента.Ссылка				   				КАК ДокументСсылка,
	|	ДанныеДокумента.Дата				   				КАК Дата,
	|	ДанныеДокумента.Валюта				   				КАК Валюта,
	|	ДанныеДокумента.ВалютаВзаиморасчетов   				КАК ВалютаВзаиморасчетов,
	|	ДанныеДокумента.ЦенаВключаетНДС		   				КАК ЦенаВключаетНДС,
	|	ЕСТЬNULL(ТаблицаПредоплаты.ПредоплатаПриход, 0)	    КАК Предоплата,
	|	ЕСТЬNULL(ТаблицаПредоплаты.ПредоплатаРеглПриход, 0) КАК ПредоплатаРегл
	|ИЗ
	|	Документ.РеализацияТоваровУслуг КАК ДанныеДокумента
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.РасчетыСКлиентамиПоДокументам.Обороты(	       
	|				,
	|				,
	|				Регистратор,
	|				АналитикаУчетаПоПартнерам В (&АналитикаУчетаПоПартнерам)
	|		) КАК ТаблицаПредоплаты
	|		ПО ДанныеДокумента.Ссылка = ТаблицаПредоплаты.Регистратор
	|ГДЕ
	|	ДанныеДокумента.Ссылка В(&МассивДокументов)
	|	И ДанныеДокумента.Валюта <> &ВалютаРегламентированногоУчета
	|	И ДанныеДокумента.ВалютаВзаиморасчетов <> &ВалютаРегламентированногоУчета
	|	И ДанныеДокумента.ХозяйственнаяОперация <> &ПередачаНаКомиссию
	|	И ЕСТЬNULL(ТаблицаПредоплаты.ПредоплатаРеглПриход, 0) <> 0
	|
	|УПОРЯДОЧИТЬ ПО
	|	ДанныеДокумента.Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаВидыЗапасов.Ссылка								   КАК ДокументСсылка,
	|	ТаблицаВидыЗапасов.НомерСтроки							   КАК НомерСтроки,
	|	ТаблицаВидыЗапасов.СтавкаНДС							   КАК СтавкаНДС,
	|
	|	ВЫБОР КОГДА ТаблицаВидыЗапасов.Ссылка.ЦенаВключаетНДС ТОГДА
	|		ТаблицаВидыЗапасов.СуммаСНДС
	|	ИНАЧЕ
	|		ТаблицаВидыЗапасов.СуммаСНДС - ТаблицаВидыЗапасов.СуммаНДС
	|	КОНЕЦ КАК Сумма,
	|
	|	ТаблицаВидыЗапасов.СуммаНДС								   КАК СуммаНДС,
	|	ИСТИНА													   КАК ВидыЗапасов
	|ИЗ
	|	Документ.РеализацияТоваровУслуг.ВидыЗапасов КАК ТаблицаВидыЗапасов
	|ГДЕ
	|	ТаблицаВидыЗапасов.Ссылка В (&МассивДокументов)
	|	И &ПоВидамЗапасов
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ТаблицаТовары.Ссылка 	  КАК ДокументСсылка,
	|	ТаблицаТовары.НомерСтроки КАК НомерСтроки,
	|	ТаблицаТовары.СтавкаНДС	  КАК СтавкаНДС,
	|	ТаблицаТовары.Сумма		  КАК Сумма,
	|	ТаблицаТовары.СуммаНДС	  КАК СуммаНДС,
	|	ЛОЖЬ					  КАК ВидыЗапасов
	|ИЗ
	|	Документ.РеализацияТоваровУслуг.Товары КАК ТаблицаТовары
	|ГДЕ
	|	ТаблицаТовары.Ссылка В(&МассивДокументов)
	|	И (ТаблицаТовары.Номенклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Услуга)
	|		ИЛИ НЕ &ПоВидамЗапасов)
	|
	|УПОРЯДОЧИТЬ ПО
	|	ДокументСсылка
	|
	|ИТОГИ
	|	СУММА(Сумма),
	|	СУММА(СуммаНДС)
	|ПО
	|	ДокументСсылка
	|
	|;";
	
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.УстановитьПараметр("ПоВидамЗапасов",					ПоВидамЗапасов);
	Запрос.УстановитьПараметр("МассивДокументов",				МассивОбъектов);
	Запрос.УстановитьПараметр("ПередачаНаКомиссию",				Перечисления.ХозяйственныеОперации.ПередачаНаКомиссию);	
	Запрос.УстановитьПараметр("АналитикаУчетаПоПартнерам",		МассивАналитикУчетаПоПартнерам);
	Запрос.УстановитьПараметр("ВалютаРегламентированногоУчета", ВалютаРегламентированногоУчета);
	
	МассивРезультатов		  = Запрос.ВыполнитьПакет();
	ДанныеДокументов		  = МассивРезультатов[0];
	РезультатПоТабличнойЧасти = МассивРезультатов[1];
	
	ДанныеДокумента = ДанныеДокументов.Выбрать();
	ВыборкаПоДокументам = РезультатПоТабличнойЧасти.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	Пока ДанныеДокумента.Следующий() Цикл
		
		КурсВалютыДокумента		 = РаботаСКурсамиВалютУт.ПолучитьКурсВалютыИзКэша(
			ДанныеДокумента.Валюта,
			ДанныеДокумента.Дата,
			КэшКурсовВалют
		);
		КурсВалютыВзаиморасчетов = РаботаСКурсамиВалютУт.ПолучитьКурсВалютыИзКэша(
			ДанныеДокумента.ВалютаВзаиморасчетов,
			ДанныеДокумента.Дата,
			КэшКурсовВалют
		);
		
		ОтборПоДокументу = Новый Структура("ДокументСсылка", ДанныеДокумента.ДокументСсылка);
		Пока ВыборкаПоДокументам.НайтиСледующий(ОтборПоДокументу) Цикл
			
			СуммаДокумента = ?(ДанныеДокумента.ЦенаВключаетНДС,
				ВыборкаПоДокументам.Сумма,
				ВыборкаПоДокументам.Сумма + ВыборкаПоДокументам.СуммаНДС);
				
			СуммаВзаиморасчетов = СуммаДокумента * КурсВалютыДокумента / КурсВалютыВзаиморасчетов;
			
			Если СуммаВзаиморасчетов > ДанныеДокумента.Предоплата Тогда
				СуммаДокументаРегл = ДанныеДокумента.ПредоплатаРегл
					+ (СуммаВзаиморасчетов - ДанныеДокумента.Предоплата) * КурсВалютыВзаиморасчетов;
			Иначе
				СуммаДокументаРегл = ДанныеДокумента.ПредоплатаРегл;
			КонецЕсли;
				
			МассивСумм = Новый Массив;
			
			Выборка = ВыборкаПоДокументам.Выбрать();
			Пока Выборка.Следующий() Цикл
				МассивСумм.Добавить(?(ДанныеДокумента.ЦенаВключаетНДС,
					Выборка.Сумма,
					Выборка.Сумма + Выборка.СуммаНДС));
			КонецЦикла;
			
			МассивНовыхСумм = ОбщегоНазначения.РаспределитьСуммуПропорциональноКоэффициентам(СуммаДокументаРегл, МассивСумм);
			
			Выборка.Сбросить();
			Индекс = 0;
			Пока Выборка.Следующий() Цикл
				
				Если НЕ МассивНовыхСумм = Неопределено Тогда
					СуммаСНДС = МассивНовыхСумм[Индекс]
				Иначе
					СуммаСНДС = ?(ДанныеДокумента.ЦенаВключаетНДС,
						Выборка.Сумма,
						Выборка.Сумма + Выборка.СуммаНДС) * КурсВалютыДокумента;
				КонецЕсли;
				
				СтрокаРезультата = ТаблицаКорректировок.Добавить();
				ЗаполнитьЗначенияСвойств(СтрокаРезультата, Выборка);
				
				СтавкаНДСЧислом = ЦенообразованиеКлиентСервер.ПолучитьСтавкуНДСЧислом(Выборка.СтавкаНДС);
				СтрокаРезультата.СуммаНДС = Окр(
					СуммаСНДС / (1 + СтавкаНДСЧислом) * СтавкаНДСЧислом
					,2);
				
				СтрокаРезультата.Сумма = ?(ДанныеДокумента.ЦенаВключаетНДС,
					СуммаСНДС,
					СуммаСНДС - СтрокаРезультата.СуммаНДС);
				
				Индекс = Индекс + 1;
				
			КонецЦикла;
			
		КонецЦикла;
		
	КонецЦикла;
	
	Возврат ТаблицаКорректировок;
	
КонецФункции

// Функция формирует таблицу курсов валют по дням.
//
Функция ПолучитьТаблицуКурсовВалютПеремещения(МассивДокументов)
	
	ВалютаРегламентированногоУчета = Константы.ВалютаРегламентированногоУчета.Получить();
	
	Запрос = Новый Запрос("ВЫБРАТЬ РАЗЛИЧНЫЕ
	                      |	НАЧАЛОПЕРИОДА(ПеремещениеТоваров.Дата, ДЕНЬ) КАК Дата,
	                      |	ПеремещениеТоваров.ВидЦены.ВалютаЦены КАК Валюта
	                      |ИЗ
	                      |	Документ.ПеремещениеТоваров КАК ПеремещениеТоваров
	                      |ГДЕ
	                      |	ПеремещениеТоваров.Ссылка В(&МассивДокументов)
	                      |	И ПеремещениеТоваров.ВидЦены.ВалютаЦены <> &ВалютаРегламентированногоУчета
	                      |
	                      |УПОРЯДОЧИТЬ ПО
	                      |	Валюта,
	                      |	Дата");
	Запрос.УстановитьПараметр("ВалютаРегламентированногоУчета", ВалютаРегламентированногоУчета);
	Запрос.УстановитьПараметр("МассивДокументов", МассивДокументов);
	
	ТаблицаКурсовВалют = Новый ТаблицаЗначений;
	ТаблицаКурсовВалют.Колонки.Добавить("Валюта",    Новый ОписаниеТипов("СправочникСсылка.Валюты"));
	ТаблицаКурсовВалют.Колонки.Добавить("Дата",      Новый ОписаниеТипов("Дата"));
	ТаблицаКурсовВалют.Колонки.Добавить("Курс",      Новый ОписаниеТипов("Число"));
	ТаблицаКурсовВалют.Колонки.Добавить("Кратность", Новый ОписаниеТипов("Число"));
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		
		НоваяСтрока = ТаблицаКурсовВалют.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, Выборка);
		
		КурсыВалюты = РаботаСКурсамиВалют.ПолучитьКурсВалюты(Выборка.Валюта, Выборка.Дата);
		НоваяСтрока.Курс = КурсыВалюты.Курс;
		НоваяСтрока.Кратность = КурсыВалюты.Кратность;
		
	КонецЦикла;
	
	Возврат ТаблицаКурсовВалют;
	
КонецФункции

#КонецЕсли