//+++АК
Перем НеИзменятьСделки Экспорт;
//---АК

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, СтандартнаяОбработка)
	
	Если ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.ЗаказКлиента") Тогда
		МассивЗаказов = Новый Массив;
		МассивЗаказов.Добавить(ДанныеЗаполнения);
		ЗаполнитьЗаказыСервер(ДанныеЗаполнения);
	КонецЕсли;
	
КонецПроцедуры


&НаСервере
Процедура ОтразитьЗаказыНаМонтаж(ДополнительныеСвойства, Движения, Отказ)
	
	//+++АК
		
	ТаблицаЗаказыКлиентовРазмещение = ДополнительныеСвойства.ТаблицыДляДвижений.ТаблицаЗаказыКлиентовРазмещение;
	
	Если НЕ Отказ И НЕ ТаблицаЗаказыКлиентовРазмещение.Количество() = 0 Тогда
		ДвиженияЗаказыКлиентов = Движения.АК_ЗаказыКлиентовРазмещение;
		ДвиженияЗаказыКлиентов.Записывать = Истина;
		ДвиженияЗаказыКлиентов.Загрузить(ТаблицаЗаказыКлиентовРазмещение);	
	КонецЕсли;
	
	//---АК
	
КонецПроцедуры	


&НаСервере
Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	//
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;

	//
	ПроведениеСервер.УстановитьРежимПроведения(ЭтотОбъект, РежимЗаписи, РежимПроведения);

	//
	ДополнительныеСвойства.Вставить("ЭтоНовый",    ЭтоНовый());
	ДополнительныеСвойства.Вставить("РежимЗаписи", РежимЗаписи);
	
КонецПроцедуры


Процедура ОбработкаПроведения(Отказ, РежимПроведения)
		
	// Инициализация дополнительных свойств для проведения документа
	ПроведениеСервер.ИнициализироватьДополнительныеСвойстваДляПроведения(Ссылка, ДополнительныеСвойства, РежимПроведения);
	
	// Инициализация данных документа
	Документы.АК_ЗаказНаМонтаж.ИнициализироватьДанныеДокумента(Ссылка, ДополнительныеСвойства);
	
	// Подготовка наборов записей
	ПроведениеСервер.ПодготовитьНаборыЗаписейКРегистрацииДвижений(ЭтотОбъект);
	
	// Отражение в разделах учета
	ОтразитьЗаказыНаМонтаж(ДополнительныеСвойства, Движения, Отказ);
	
	//
	ПроведениеСервер.ЗаписатьНаборыЗаписей(ЭтотОбъект);
	ПроведениеСервер.ОчиститьДополнительныеСвойстваДляПроведения(ДополнительныеСвойства);

КонецПроцедуры // ОбработкаПроведения()


&НаСервере
Процедура ЗаполнитьЗаказыСервер(МассивЗаказов) Экспорт
	
	Для Каждого Заказ из МассивЗаказов Цикл
		
		Организация = Заказ.Организация;
		Партнер = Заказ.Партнер;
		
		Для Каждого ТекСтрокаТовары Из Заказ.Товары Цикл
			
			Если ТекСтрокаТовары.Номенклатура.ТипНоменклатуры = Перечисления.ТипыНоменклатуры.Товар Тогда
				
				НоваяСтрока = Товары.Добавить();
				НоваяСтрока.Количество = ТекСтрокаТовары.Количество;
				НоваяСтрока.Номенклатура = ТекСтрокаТовары.Номенклатура;
				НоваяСтрока.Заказ = Заказ;
				
			КонецЕсли;
			
		КонецЦикла;
		
		Запрос = Новый Запрос;
		Запрос.Текст = "ВЫБРАТЬ ПЕРВЫЕ 1
		|	КонтактныеЛицаПартнеров.Ссылка КАК КонтактноеЛицоИсполнителя,
		|	NULL КАК ПунктНазначения,
		|	""Контакт"" КАК ВидОперации
		|ИЗ
		|	Справочник.КонтактныеЛицаПартнеров КАК КонтактныеЛицаПартнеров
		|ГДЕ
		|	КонтактныеЛицаПартнеров.Владелец = &Ссылка
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	NULL,
		|	ПартнерыАК_ПунктыНазначения.ПунктНазначения,
		|	""Адрес""
		|ИЗ
		|	Справочник.Партнеры.АК_ПунктыНазначения КАК ПартнерыАК_ПунктыНазначения
		|ГДЕ
		|	ПартнерыАК_ПунктыНазначения.Основной
		|	И ПартнерыАК_ПунктыНазначения.Ссылка = &Ссылка";
		
		Запрос.УстановитьПараметр("Ссылка", Партнер);
		
		Выборка = Запрос.Выполнить().Выбрать();
		
		Пока Выборка.Следующий() Цикл
			Если Выборка.ВидОперации = "Контакт" Тогда
				КонтактноеЛицоИсполнителя = Выборка.КонтактноеЛицоИсполнителя;
			Иначе
				Адрес = Выборка.ПунктНазначения;
			КонецЕсли;
		КонецЦикла;
	КонецЦикла;

	
КонецПроцедуры





//+++АК
НеИзменятьСделки = Ложь;
//---АК
