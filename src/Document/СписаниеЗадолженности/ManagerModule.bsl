#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда


///////////////////////////////////////////////////////////////////////////////
// ПРОГРАММНЫЙ ИНТЕРФЕЙС

// Функция формирует текст запроса для отражения документа в регл. учете.
//
Функция ТекстОтраженияВРеглУчете() Экспорт
	
	ТекстДебиторскаяЗадолженностьРасчетыСКлиентом = "
	|ВЫБРАТЬ //// Списана задолженность покупателя (Дт <91.2> :: Кт <62.1>)
	|	Операция.Дата КАК Период,
	|	Операция.Организация КАК Организация,
	|	НЕОПРЕДЕЛЕНО КАК ИдентификаторСтроки,
	|
	|	ЕСТЬNULL(Суммы.СуммаБезНДСРегл + Суммы.СуммаНДСРегл, Строки.Сумма) КАК Сумма,
	|
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.Расходы) КАК ВидСчетаДт,
	|	Операция.СтатьяРасходов КАК АналитикаУчетаДт,
	|	Операция.Подразделение КАК МестоУчетаДт,
	|	
	|	НЕОПРЕДЕЛЕНО КАК ВалютаДт,
	|	Операция.Подразделение КАК ПодразделениеДт,
	|	НЕОПРЕДЕЛЕНО КАК СчетДт,
	|
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт3,
	|
	|	0 КАК ВалютнаяСуммаДт,
	|	0 КАК КоличествоДт,
	|	0 КАК СуммаНУДт,
	|	0 КАК СуммаПРДт,
	|	0 КАК СуммаВРДт,
	|
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.РасчетыСКлиентами) КАК ВидСчетаКт,
	|	ЕСТЬNULL(Строки.Заказ.ГруппаФинансовогоУчета, ЗНАЧЕНИЕ(Справочник.ГруппыФинансовогоУчетаРасчетов.ПустаяСсылка)) КАК АналитикаУчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаКт,
	|
	|	Строки.ВалютаВзаиморасчетов КАК ВалютаКт,
	|	Операция.Подразделение КАК ПодразделениеКт,
	|	НЕОПРЕДЕЛЕНО КАК СчетКт,
	|
	|	Операция.Контрагент КАК СубконтоКт1,
	|
	|	ВЫБОР КОГДА Строки.Заказ ССЫЛКА Справочник.ДоговорыКонтрагентов ТОГДА
	|		Строки.Заказ
	|	ИНАЧЕ
	|		Строки.Заказ.Договор
	|	КОНЕЦ КАК СубконтоКт2,
	|
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
	|	
	|	Строки.Сумма КАК ВалютнаяСуммаКт,
	|	0 КАК КоличествоКт,
	|	0 КАК СуммаНУКт,
	|	0 КАК СуммаПРКт,
	|	0 КАК СуммаВРКт
	|
	|ИЗ Документ.СписаниеЗадолженности КАК Операция
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.СписаниеЗадолженности.Задолженность КАК Строки
	|		ПО Строки.Ссылка = Операция.Ссылка
	|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СуммыДокументовВВалютеРегл КАК Суммы
	|		ПО Суммы.Регистратор = Строки.Ссылка И Суммы.ИдентификаторСтроки = Строки.ИдентификаторСтроки И Суммы.СуммаБезНДСРегл <> 0
	|ГДЕ Операция.Ссылка = &Ссылка
	|	И Операция.ТипЗадолженности = ЗНАЧЕНИЕ(Перечисление.ТипыЗадолженности.Дебиторская)
	|	И Строки.ТипРасчетов = ЗНАЧЕНИЕ(Перечисление.ТипыРасчетовСПартнерами.РасчетыСКлиентом)
	|";
	
	ТекстДебиторскаяЗадолженностьРасчетыСПоставщиком = "
	|ВЫБРАТЬ //// Списана задолженность поставщика (Дт <91.2> :: Кт <60.2>)
	|	Операция.Дата КАК Период,
	|	Операция.Организация КАК Организация,
	|	НЕОПРЕДЕЛЕНО КАК ИдентификаторСтроки,
	|
	|	ЕСТЬNULL(Суммы.СуммаБезНДСРегл + Суммы.СуммаНДСРегл, Строки.Сумма) КАК Сумма,
	|
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.Расходы) КАК ВидСчетаДт,
	|	Операция.СтатьяРасходов КАК АналитикаУчетаДт,
	|	Операция.Подразделение КАК МестоУчетаДт,
	|	
	|	НЕОПРЕДЕЛЕНО КАК ВалютаДт,
	|	Операция.Подразделение КАК ПодразделениеДт,
	|	НЕОПРЕДЕЛЕНО КАК СчетДт,
	|
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт3,
	|
	|	0 КАК ВалютнаяСуммаДт,
	|	0 КАК КоличествоДт,
	|	0 КАК СуммаНУДт,
	|	0 КАК СуммаПРДт,
	|	0 КАК СуммаВРДт,
	|
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.АвансыВыданные) КАК ВидСчетаКт,
	|	ЕСТЬNULL(Строки.Заказ.ГруппаФинансовогоУчета, ЗНАЧЕНИЕ(Справочник.ГруппыФинансовогоУчетаРасчетов.ПустаяСсылка)) КАК АналитикаУчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаКт,
	|
	|	Строки.ВалютаВзаиморасчетов КАК ВалютаКт,
	|	Операция.Подразделение КАК ПодразделениеКт,
	|	НЕОПРЕДЕЛЕНО КАК СчетКт,
	|
	|	Операция.Контрагент КАК СубконтоКт1,
	|
	|	ВЫБОР КОГДА Строки.Заказ ССЫЛКА Справочник.ДоговорыКонтрагентов ТОГДА
	|		Строки.Заказ
	|	ИНАЧЕ
	|		Строки.Заказ.Договор
	|	КОНЕЦ КАК СубконтоКт2,
	|
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
	|	
	|	Строки.Сумма КАК ВалютнаяСуммаКт,
	|	0 КАК КоличествоКт,
	|	0 КАК СуммаНУКт,
	|	0 КАК СуммаПРКт,
	|	0 КАК СуммаВРКт
	|
	|ИЗ Документ.СписаниеЗадолженности КАК Операция
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.СписаниеЗадолженности.Задолженность КАК Строки
	|		ПО Строки.Ссылка = Операция.Ссылка
	|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СуммыДокументовВВалютеРегл КАК Суммы
	|		ПО Суммы.Регистратор = Строки.Ссылка И Суммы.ИдентификаторСтроки = Строки.ИдентификаторСтроки И Суммы.СуммаБезНДСРегл <> 0
	|ГДЕ Операция.Ссылка = &Ссылка
	|	И Операция.ТипЗадолженности = ЗНАЧЕНИЕ(Перечисление.ТипыЗадолженности.Дебиторская)
	|	И Строки.ТипРасчетов = ЗНАЧЕНИЕ(Перечисление.ТипыРасчетовСПартнерами.РасчетыСПоставщиком)
	|";
	
	ТекстКредиторскаяЗадолженностьРасчетыСКлиентом = "
	|ВЫБРАТЬ //// Списана задолженность перед покупателем (Дт <62.2> :: Кт <91.1>)
	|	Операция.Дата КАК Период,
	|	Операция.Организация КАК Организация,
	|	НЕОПРЕДЕЛЕНО КАК ИдентификаторСтроки,
	|
	|	ЕСТЬNULL(Суммы.СуммаБезНДСРегл + Суммы.СуммаНДСРегл, Строки.Сумма) КАК Сумма,
	|
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.АвансыПолученные) КАК ВидСчетаДт,
	|	ЕСТЬNULL(Строки.Заказ.ГруппаФинансовогоУчета, ЗНАЧЕНИЕ(Справочник.ГруппыФинансовогоУчетаРасчетов.ПустаяСсылка)) КАК АналитикаУчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаДт,
	|
	|	Строки.ВалютаВзаиморасчетов КАК ВалютаДт,
	|	Операция.Подразделение КАК ПодразделениеДт,
	|	НЕОПРЕДЕЛЕНО КАК СчетДт,
	|
	|	Операция.Контрагент КАК СубконтоДт1,
	|
	|	ВЫБОР КОГДА Строки.Заказ ССЫЛКА Справочник.ДоговорыКонтрагентов ТОГДА
	|		Строки.Заказ
	|	ИНАЧЕ
	|		Строки.Заказ.Договор
	|	КОНЕЦ КАК СубконтоДт2,
	|
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт3,
	|	
	|	Строки.Сумма КАК ВалютнаяСуммаДт,
	|	0 КАК КоличествоДт,
	|	0 КАК СуммаНУДт,
	|	0 КАК СуммаПРДт,
	|	0 КАК СуммаВРДт,
	|	
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.Доходы) КАК ВидСчетаКт,
	|	Операция.СтатьяДоходов КАК АналитикаУчетаКт,
	|	Операция.Подразделение КАК МестоУчетаКт,
	|	
	|	НЕОПРЕДЕЛЕНО КАК ВалютаКт,
	|	Операция.Подразделение КАК ПодразделениеКт,
	|	НЕОПРЕДЕЛЕНО КАК СчетКт,
	|
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
	|
	|	0 КАК ВалютнаяСуммаКт,
	|	0 КАК КоличествоКт,
	|	0 КАК СуммаНУКт,
	|	0 КАК СуммаПРКт,
	|	0 КАК СуммаВРКт
	|
	|ИЗ Документ.СписаниеЗадолженности КАК Операция
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.СписаниеЗадолженности.Задолженность КАК Строки
	|		ПО Строки.Ссылка = Операция.Ссылка
	|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СуммыДокументовВВалютеРегл КАК Суммы
	|		ПО Суммы.Регистратор = Строки.Ссылка И Суммы.ИдентификаторСтроки = Строки.ИдентификаторСтроки И Суммы.СуммаБезНДСРегл <> 0
	|ГДЕ Операция.Ссылка = &Ссылка
	|	И Операция.ТипЗадолженности = ЗНАЧЕНИЕ(Перечисление.ТипыЗадолженности.Кредиторская)
	|	И Строки.ТипРасчетов = ЗНАЧЕНИЕ(Перечисление.ТипыРасчетовСПартнерами.РасчетыСКлиентом)
	|";
	
	ТекстКредиторскаяЗадолженностьРасчетыСПоставщиком = "
	|ВЫБРАТЬ //// Списана задолженность перед поставщиком (Дт <60.1> :: Кт <91.1>)
	|	Операция.Дата КАК Период,
	|	Операция.Организация КАК Организация,
	|	НЕОПРЕДЕЛЕНО КАК ИдентификаторСтроки,
	|
	|	ЕСТЬNULL(Суммы.СуммаБезНДСРегл + Суммы.СуммаНДСРегл, Строки.Сумма) КАК Сумма,
	|
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.РасчетыСПоставщиками) КАК ВидСчетаДт,
	|	ЕСТЬNULL(Строки.Заказ.ГруппаФинансовогоУчета, ЗНАЧЕНИЕ(Справочник.ГруппыФинансовогоУчетаРасчетов.ПустаяСсылка)) КАК АналитикаУчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаДт,
	|
	|	Строки.ВалютаВзаиморасчетов КАК ВалютаДт,
	|	Операция.Подразделение КАК ПодразделениеДт,
	|	НЕОПРЕДЕЛЕНО КАК СчетДт,
	|
	|	Операция.Контрагент КАК СубконтоДт1,
	|
	|	ВЫБОР КОГДА Строки.Заказ ССЫЛКА Справочник.ДоговорыКонтрагентов ТОГДА
	|		Строки.Заказ
	|	ИНАЧЕ
	|		Строки.Заказ.Договор
	|	КОНЕЦ КАК СубконтоДт2,
	|
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт3,
	|	
	|	Строки.Сумма КАК ВалютнаяСуммаДт,
	|	0 КАК КоличествоДт,
	|	0 КАК СуммаНУДт,
	|	0 КАК СуммаПРДт,
	|	0 КАК СуммаВРДт,
	|	
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.Доходы) КАК ВидСчетаКт,
	|	Операция.СтатьяДоходов КАК АналитикаУчетаКт,
	|	Операция.Подразделение КАК МестоУчетаКт,
	|	
	|	НЕОПРЕДЕЛЕНО КАК ВалютаКт,
	|	Операция.Подразделение КАК ПодразделениеКт,
	|	НЕОПРЕДЕЛЕНО КАК СчетКт,
	|
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
	|
	|	0 КАК ВалютнаяСуммаКт,
	|	0 КАК КоличествоКт,
	|	0 КАК СуммаНУКт,
	|	0 КАК СуммаПРКт,
	|	0 КАК СуммаВРКт
	|
	|ИЗ Документ.СписаниеЗадолженности КАК Операция
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.СписаниеЗадолженности.Задолженность КАК Строки
	|		ПО Строки.Ссылка = Операция.Ссылка
	|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СуммыДокументовВВалютеРегл КАК Суммы
	|		ПО Суммы.Регистратор = Строки.Ссылка И Суммы.ИдентификаторСтроки = Строки.ИдентификаторСтроки И Суммы.СуммаБезНДСРегл <> 0
	|ГДЕ Операция.Ссылка = &Ссылка
	|	И Операция.ТипЗадолженности = ЗНАЧЕНИЕ(Перечисление.ТипыЗадолженности.Кредиторская)
	|	И Строки.ТипРасчетов = ЗНАЧЕНИЕ(Перечисление.ТипыРасчетовСПартнерами.РасчетыСПоставщиком)
	|";
	
	Возврат
	ТекстДебиторскаяЗадолженностьРасчетыСКлиентом +
	" ОБЪЕДИНИТЬ ВСЕ " + ТекстДебиторскаяЗадолженностьРасчетыСПоставщиком +
	" ОБЪЕДИНИТЬ ВСЕ " + ТекстКредиторскаяЗадолженностьРасчетыСКлиентом +
	" ОБЪЕДИНИТЬ ВСЕ " + ТекстКредиторскаяЗадолженностьРасчетыСПоставщиком;
	
КонецФункции

///////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

///////////////////////////////////////////////////////////////////////////////
// Проведение

Процедура ИнициализироватьДанныеДокумента(ДокументСсылка, СтруктураДополнительныеСвойства) Экспорт
	
	ЗапросРеквизитов = Новый Запрос(
	"ВЫБРАТЬ
	|	ДанныеДокумента.Дата КАК Период,
	|	ДанныеДокумента.Организация КАК Организация,
	|	ДанныеДокумента.Контрагент КАК Контрагент,
	|	ДанныеДокумента.СтатьяДоходов КАК СтатьяДоходов,
	|	ДанныеДокумента.АналитикаДоходов КАК АналитикаДоходов,
	|	ДанныеДокумента.СтатьяРасходов КАК СтатьяРасходов,
	|	ДанныеДокумента.АналитикаРасходов КАК АналитикаРасходов,
	|	ДанныеДокумента.Подразделение КАК Подразделение,
	|	ДанныеДокумента.ТипЗадолженности КАК ТипЗадолженности,
	|	ДанныеДокумента.МоментВремени КАК МоментВремени,
	|	ДанныеДокумента.РасчетыМеждуОрганизациями КАК РасчетыМеждуОрганизациями
	|ИЗ
	|	Документ.СписаниеЗадолженности КАК ДанныеДокумента
	|	
	|ГДЕ
	|	ДанныеДокумента.Ссылка = &Ссылка
	|");
	ЗапросРеквизитов.УстановитьПараметр("Ссылка", ДокументСсылка);
	Реквизиты = ЗапросРеквизитов.Выполнить().Выбрать();
	Реквизиты.Следующий();
	
	// Формирование ключей аналитики учета по партнерам.
	СформироватьКлючиАналитикиПоДокументу(ДокументСсылка, Реквизиты);
	
	ТекстЗапроса = ТекстЗапросаТаблицаРасчетыСКлиентами()
		+ ТекстЗапросаТаблицаРасчетыСКлиентамиПоследовательность()
		+ ТекстЗапросаТаблицаРасчетыСПоставщиками()
		+ ТекстЗапросаТаблицаРасчетыСПоставщикамиПоследовательность()
		+ ТекстЗапросаТаблицаПрочиеДоходы()
		+ ТекстЗапросаТаблицаПрочиеРасходы()
		+ ТекстЗапросаТаблицаСуммыДокументовВВалютеРегл()
		;
		
	Коэффициенты = РаботаСКурсамивалютУТ.ПолучитьКоэффициентыПересчетаВалюты(
		, // ВалютаДокумента
		, // ВалютаВзаиморасчетов
		Реквизиты.Период
	);		
	
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.УстановитьПараметр("Период", Реквизиты.Период);
	Запрос.УстановитьПараметр("Ссылка", ДокументСсылка);
	Запрос.УстановитьПараметр("МоментВремени", Реквизиты.МоментВремени);
	Запрос.УстановитьПараметр("Организация", Реквизиты.Организация);
	Запрос.УстановитьПараметр("Контрагент", Реквизиты.Контрагент);
	Запрос.УстановитьПараметр("СтатьяДоходов", Реквизиты.СтатьяДоходов);
	Запрос.УстановитьПараметр("АналитикаДоходов", Реквизиты.АналитикаДоходов);
	Запрос.УстановитьПараметр("СтатьяРасходов", Реквизиты.СтатьяРасходов);
	Запрос.УстановитьПараметр("АналитикаРасходов", Реквизиты.АналитикаРасходов);
	Запрос.УстановитьПараметр("Подразделение", Реквизиты.Подразделение);
	Запрос.УстановитьПараметр("ТипЗадолженности", Реквизиты.ТипЗадолженности);
	Запрос.УстановитьПараметр("ВалютаУпр", Константы.ВалютаУправленческогоУчета.Получить());
	Запрос.УстановитьПараметр("ВалютаРегламентированногоУчета", Константы.ВалютаРегламентированногоУчета.Получить());
	Запрос.УстановитьПараметр("КоэффициентПересчетаВВалютуУпр", Коэффициенты.КоэффициентПересчетаВВалютуУПР);
	Запрос.УстановитьПараметр("КоэффициентПересчетаВВалютуРегл", Коэффициенты.КоэффициентПересчетаВВалютуРегл);
	Запрос.УстановитьПараметр("РасчетыМеждуОрганизациями", Реквизиты.РасчетыМеждуОрганизациями);
	Запрос.УстановитьПараметр("ИспользоватьУчетПрочихДоходовРасходов", ПолучитьФункциональнуюОпцию("ИспользоватьУчетПрочихДоходовРасходов")); 
	
	МассивРезультатов = Запрос.ВыполнитьПакет();
	
	СтруктураДополнительныеСвойства.ТаблицыДляДвижений.Вставить("ТаблицаРасчетыСКлиентами",                      МассивРезультатов[0].Выгрузить());
	СтруктураДополнительныеСвойства.ТаблицыДляДвижений.Вставить("ТаблицаРасчетыСКлиентамиПоследовательность",    МассивРезультатов[1].Выгрузить());
	СтруктураДополнительныеСвойства.ТаблицыДляДвижений.Вставить("ТаблицаРасчетыСПоставщиками",                   МассивРезультатов[2].Выгрузить());
	СтруктураДополнительныеСвойства.ТаблицыДляДвижений.Вставить("ТаблицаРасчетыСПоставщикамиПоследовательность", МассивРезультатов[3].Выгрузить());
	СтруктураДополнительныеСвойства.ТаблицыДляДвижений.Вставить("ТаблицаПрочиеДоходы",                           МассивРезультатов[4].Выгрузить());
	СтруктураДополнительныеСвойства.ТаблицыДляДвижений.Вставить("ТаблицаПрочиеРасходы",                          МассивРезультатов[5].Выгрузить());
	СтруктураДополнительныеСвойства.ТаблицыДляДвижений.Вставить("ТаблицаСуммыДокументовВВалютеРегл",             МассивРезультатов[6].Выгрузить());
	
КонецПроцедуры

Процедура СформироватьКлючиАналитикиПоДокументу(ДокументСсылка, Реквизиты)
	
	ТекстЗапроса = "
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	&Организация КАК Организация,
	|	(ВЫБОР КОГДА &РасчетыМеждуОрганизациями ТОГДА ЗНАЧЕНИЕ(Справочник.Партнеры.НашеПредприятие)
	|		ИНАЧЕ Задолженность.Партнер КОНЕЦ) КАК Партнер,
	|	&Контрагент КАК Контрагент
	|ИЗ
	|	Документ.СписаниеЗадолженности.Задолженность КАК Задолженность
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РегистрСведений.АналитикаУчетаПоПартнерам  КАК РегистрАналитикаУчетаПоПартнерам
	|	ПО
	|		&Организация = РегистрАналитикаУчетаПоПартнерам.Организация
	|		И (ВЫБОР КОГДА &РасчетыМеждуОрганизациями ТОГДА ЗНАЧЕНИЕ(Справочник.Партнеры.НашеПредприятие)
	|			ИНАЧЕ Задолженность.Партнер КОНЕЦ) = РегистрАналитикаУчетаПоПартнерам.Партнер
	|		И &Контрагент = РегистрАналитикаУчетаПоПартнерам.Контрагент
	|ГДЕ
	|	РегистрАналитикаУчетаПоПартнерам.КлючАналитики ЕСТЬ NULL
	|	И Задолженность.Ссылка = &Ссылка
	|";
	
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.УстановитьПараметр("Ссылка", ДокументСсылка);
	Запрос.УстановитьПараметр("Организация", Реквизиты.Организация);
	Запрос.УстановитьПараметр("Контрагент", Реквизиты.Контрагент);
	Запрос.УстановитьПараметр("РасчетыМеждуОрганизациями", Реквизиты.РасчетыМеждуОрганизациями);
	РезультатЗапроса = Запрос.Выполнить();
	
	Выборка = РезультатЗапроса.Выбрать();
	Пока Выборка.Следующий() Цикл
		РегистрыСведений.АналитикаУчетаПоПартнерам.СоздатьКлючАналитики(Выборка);
	КонецЦикла;
	
КонецПроцедуры

Функция ТекстЗапросаТаблицаРасчетыСКлиентами()
	
	ТекстЗапроса = "
	|ВЫБРАТЬ
	|	Задолженность.НомерСтроки КАК НомерСтроки,
	|	&Период КАК Период,
	|	&Период КАК ДатаРегистратора,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
	|	
	|	// Измерения
	|	РегистрАналитикаУчетаПоПартнерам.КлючАналитики КАК АналитикаУчетаПоПартнерам,
	|	Задолженность.Заказ КАК ЗаказКлиента,
	|	Задолженность.ВалютаВзаиморасчетов КАК Валюта,
	|	
	|	// Ресурсы
	|	// Сумма в валюте взаиморассчетов.
	|	Задолженность.Сумма КАК Сумма,
	|	Задолженность.Сумма КАК КОплате,
	|	0 КАК КОтгрузке,
	|	ЕСТЬNULL(Суммы.СуммаБезНДС, Задолженность.Сумма) КАК СуммаРегл,
	|	
	|	// Реквизиты
	|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СписаниеДебиторскойЗадолженности) КАК ХозяйственнаяОперация,
	|	ЗНАЧЕНИЕ(Перечисление.ФормыОплаты.ПустаяСсылка) КАК ФормаОплаты
	|ИЗ
	|	Документ.СписаниеЗадолженности.Задолженность КАК Задолженность
	|	
	|	// Определим Ключи аналитики
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РегистрСведений.АналитикаУчетаПоПартнерам КАК РегистрАналитикаУчетаПоПартнерам
	|	ПО
	|		&Организация = РегистрАналитикаУчетаПоПартнерам.Организация
	|		И (ВЫБОР КОГДА &РасчетыМеждуОрганизациями ТОГДА ЗНАЧЕНИЕ(Справочник.Партнеры.НашеПредприятие)
	|			ИНАЧЕ Задолженность.Партнер КОНЕЦ) = РегистрАналитикаУчетаПоПартнерам.Партнер
	|		И &Контрагент = РегистрАналитикаУчетаПоПартнерам.Контрагент
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РегистрСведений.СуммыДокументовВВалютеРегл КАК Суммы
	|	ПО
	|		Суммы.Регистратор = Задолженность.Ссылка
	|		И Суммы.ИдентификаторСтроки = Задолженность.ИдентификаторСтроки 
	|ГДЕ
	|	Задолженность.Ссылка = &Ссылка
	|	И &ТипЗадолженности = ЗНАЧЕНИЕ(Перечисление.ТипыЗадолженности.Дебиторская)
	|	И Задолженность.ТипРасчетов = ЗНАЧЕНИЕ(Перечисление.ТипыРасчетовСПартнерами.РасчетыСКлиентом)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	Задолженность.НомерСтроки КАК НомерСтроки,
	|	&Период КАК Период,
	|	&Период КАК ДатаРегистратора,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
	|	
	|	// Измерения
	|	РегистрАналитикаУчетаПоПартнерам.КлючАналитики КАК АналитикаУчетаПоПартнерам,
	|	Задолженность.Заказ КАК ЗаказКлиента,
	|	Задолженность.ВалютаВзаиморасчетов КАК Валюта,
	|	
	|	// Ресурсы
	|	// Сумма в валюте взаиморассчетов.
	|	-Задолженность.Сумма КАК Сумма,
	|	-Задолженность.Сумма КАК КОплате,
	|	0 КАК КОтгрузке,
	|	-ЕСТЬNULL(Суммы.СуммаБезНДС, Задолженность.Сумма) КАК СуммаРегл,
	|	
	|	// Реквизиты
	|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СписаниеКредиторскойЗадолженности) КАК ХозяйственнаяОперация,
	|	ЗНАЧЕНИЕ(Перечисление.ФормыОплаты.ПустаяСсылка) КАК ФормаОплаты
	|ИЗ
	|	Документ.СписаниеЗадолженности.Задолженность КАК Задолженность
	|	
	|	// Определим Ключи аналитики
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РегистрСведений.АналитикаУчетаПоПартнерам КАК РегистрАналитикаУчетаПоПартнерам
	|	ПО
	|		&Организация = РегистрАналитикаУчетаПоПартнерам.Организация
	|		И (ВЫБОР КОГДА &РасчетыМеждуОрганизациями ТОГДА ЗНАЧЕНИЕ(Справочник.Партнеры.НашеПредприятие)
	|			ИНАЧЕ Задолженность.Партнер КОНЕЦ) = РегистрАналитикаУчетаПоПартнерам.Партнер
	|		И &Контрагент = РегистрАналитикаУчетаПоПартнерам.Контрагент
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РегистрСведений.СуммыДокументовВВалютеРегл КАК Суммы
	|	ПО
	|		Суммы.Регистратор = Задолженность.Ссылка
	|		И Суммы.ИдентификаторСтроки = Задолженность.ИдентификаторСтроки
	|ГДЕ
	|	Задолженность.Ссылка = &Ссылка
	|	И &ТипЗадолженности = ЗНАЧЕНИЕ(Перечисление.ТипыЗадолженности.Кредиторская)
	|	И Задолженность.ТипРасчетов = ЗНАЧЕНИЕ(Перечисление.ТипыРасчетовСПартнерами.РасчетыСКлиентом)
	|	
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки
	|	
	|;
	|/////////////////////////////////////////////////////////////////////////////
	|";
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаРасчетыСКлиентамиПоследовательность()
	
	ТекстЗапроса = "
	|ВЫБРАТЬ
	|	&Период КАК Период,
	|	&Ссылка КАК Регистратор,
	|	РегистрАналитикаУчетаПоПартнерам.КлючАналитики КАК АналитикаУчетаПоПартнерам,
	|	МАКСИМУМ(ДанныеДокумента.НомерСтроки) КАК НомерСтроки
	|	
	|ИЗ (
	|	ВЫБРАТЬ
	|		&Организация КАК Организация,
	|		(ВЫБОР КОГДА &РасчетыМеждуОрганизациями ТОГДА ЗНАЧЕНИЕ(Справочник.Партнеры.НашеПредприятие)
	|			ИНАЧЕ Задолженность.Партнер КОНЕЦ) КАК Партнер,
	|		&Контрагент КАК Контрагент,
	|		Задолженность.НомерСтроки КАК НомерСтроки
	|	ИЗ
	|		Документ.СписаниеЗадолженности.Задолженность КАК Задолженность
	|	ГДЕ
	|		Задолженность.Ссылка = &Ссылка
	|		И Задолженность.ТипРасчетов = ЗНАЧЕНИЕ(Перечисление.ТипыРасчетовСПартнерами.РасчетыСКлиентом)
	|	) КАК ДанныеДокумента
	|	
	|	// Определим Ключи аналитики
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РегистрСведений.АналитикаУчетаПоПартнерам КАК РегистрАналитикаУчетаПоПартнерам
	|	ПО
	|		ДанныеДокумента.Организация = РегистрАналитикаУчетаПоПартнерам.Организация
	|		И ДанныеДокумента.Партнер = РегистрАналитикаУчетаПоПартнерам.Партнер
	|		И ДанныеДокумента.Контрагент = РегистрАналитикаУчетаПоПартнерам.Контрагент
	|	
	|СГРУППИРОВАТЬ ПО
	|	РегистрАналитикаУчетаПоПартнерам.КлючАналитики
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки
	|	
	|;
	|/////////////////////////////////////////////////////////////////////////////
	|";
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаРасчетыСПоставщиками()
	
	ТекстЗапроса = "
	|ВЫБРАТЬ
	|	Задолженность.НомерСтроки КАК НомерСтроки,
	|	&Период КАК Период,
	|	&Период КАК ДатаРегистратора,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	
	|	// Измерения
	|	РегистрАналитикаУчетаПоПартнерам.КлючАналитики КАК АналитикаУчетаПоПартнерам,
	|	Задолженность.Заказ КАК ЗаказПоставщику,
	|	Задолженность.ВалютаВзаиморасчетов КАК Валюта,
	|	
	|	// Ресурсы
	|	Задолженность.Сумма КАК Сумма,
	|	Задолженность.Сумма КАК КОплате,
	|	ЕСТЬNULL(Суммы.СуммаБезНДС, Задолженность.Сумма) КАК СуммаРегл,
	|
	|	// Реквизиты
	|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СписаниеКредиторскойЗадолженности) КАК ХозяйственнаяОперация,
	|	ЗНАЧЕНИЕ(Перечисление.ФормыОплаты.ПустаяСсылка)	КАК ФормаОплаты
	|ИЗ
	|	Документ.СписаниеЗадолженности.Задолженность КАК Задолженность
	|	
	|	// Определим Ключи аналитики
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РегистрСведений.АналитикаУчетаПоПартнерам КАК РегистрАналитикаУчетаПоПартнерам
	|	ПО
	|		&Организация = РегистрАналитикаУчетаПоПартнерам.Организация
	|		И (ВЫБОР КОГДА &РасчетыМеждуОрганизациями ТОГДА ЗНАЧЕНИЕ(Справочник.Партнеры.НашеПредприятие)
	|			ИНАЧЕ Задолженность.Партнер КОНЕЦ) = РегистрАналитикаУчетаПоПартнерам.Партнер
	|		И &Контрагент = РегистрАналитикаУчетаПоПартнерам.Контрагент
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РегистрСведений.СуммыДокументовВВалютеРегл КАК Суммы
	|	ПО
	|		Суммы.Регистратор = Задолженность.Ссылка
	|		И Суммы.ИдентификаторСтроки = Задолженность.ИдентификаторСтроки 
	|ГДЕ
	|	Задолженность.Ссылка = &Ссылка
	|	И &ТипЗадолженности = ЗНАЧЕНИЕ(Перечисление.ТипыЗадолженности.Кредиторская)
	|	И Задолженность.ТипРасчетов = ЗНАЧЕНИЕ(Перечисление.ТипыРасчетовСПартнерами.РасчетыСПоставщиком)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	Задолженность.НомерСтроки КАК НомерСтроки,
	|	&Период КАК Период,
	|	&Период КАК ДатаРегистратора,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	
	|	// Измерения
	|	РегистрАналитикаУчетаПоПартнерам.КлючАналитики КАК АналитикаУчетаПоПартнерам,
	|	Задолженность.Заказ КАК ЗаказПоставщику,
	|	Задолженность.ВалютаВзаиморасчетов КАК Валюта,
	|	
	|	// Ресурсы
	|	-Задолженность.Сумма КАК Сумма,
	|	-Задолженность.Сумма КАК КОплате,
	|	-ЕСТЬNULL(Суммы.СуммаБезНДС, Задолженность.Сумма) КАК СуммаРегл,
	|
	|	// Реквизиты
	|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СписаниеДебиторскойЗадолженности) КАК ХозяйственнаяОперация,
	|	ЗНАЧЕНИЕ(Перечисление.ФормыОплаты.ПустаяСсылка)	КАК ФормаОплаты
	|ИЗ
	|	Документ.СписаниеЗадолженности.Задолженность КАК Задолженность
	|	
	|	// Определим Ключи аналитики
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РегистрСведений.АналитикаУчетаПоПартнерам КАК РегистрАналитикаУчетаПоПартнерам
	|	ПО
	|		&Организация = РегистрАналитикаУчетаПоПартнерам.Организация
	|		И (ВЫБОР КОГДА &РасчетыМеждуОрганизациями ТОГДА ЗНАЧЕНИЕ(Справочник.Партнеры.НашеПредприятие)
	|			ИНАЧЕ Задолженность.Партнер КОНЕЦ) = РегистрАналитикаУчетаПоПартнерам.Партнер
	|		И &Контрагент = РегистрАналитикаУчетаПоПартнерам.Контрагент
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РегистрСведений.СуммыДокументовВВалютеРегл КАК Суммы
	|	ПО
	|		Суммы.Регистратор = Задолженность.Ссылка
	|		И Суммы.ИдентификаторСтроки = Задолженность.ИдентификаторСтроки 
	|ГДЕ
	|	Задолженность.Ссылка = &Ссылка
	|	И &ТипЗадолженности = ЗНАЧЕНИЕ(Перечисление.ТипыЗадолженности.Дебиторская)
	|	И Задолженность.ТипРасчетов = ЗНАЧЕНИЕ(Перечисление.ТипыРасчетовСПартнерами.РасчетыСПоставщиком)
	|	
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки
	|;
	|/////////////////////////////////////////////////////////////////////////////
	|";
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаРасчетыСПоставщикамиПоследовательность()
	
	ТекстЗапроса = "
	|ВЫБРАТЬ
	|	&Период КАК Период,
	|	&Ссылка КАК Регистратор,
	|	РегистрАналитикаУчетаПоПартнерам.КлючАналитики	КАК АналитикаУчетаПоПартнерам,
	|	МАКСИМУМ(ДанныеДокумента.НомерСтроки) КАК НомерСтроки
	|	
	|ИЗ (
	|	ВЫБРАТЬ
	|		&Организация КАК Организация,
	|		(ВЫБОР КОГДА &РасчетыМеждуОрганизациями ТОГДА ЗНАЧЕНИЕ(Справочник.Партнеры.НашеПредприятие)
	|			ИНАЧЕ Задолженность.Партнер КОНЕЦ) КАК Партнер,
	|		&Контрагент КАК Контрагент,
	|		Задолженность.НомерСтроки КАК НомерСтроки
	|	ИЗ
	|		Документ.СписаниеЗадолженности.Задолженность КАК Задолженность
	|	ГДЕ
	|		Задолженность.Ссылка = &Ссылка
	|		И Задолженность.ТипРасчетов = ЗНАЧЕНИЕ(Перечисление.ТипыРасчетовСПартнерами.РасчетыСПоставщиком)
	|	) КАК ДанныеДокумента
	|	
	|	// Определим Ключи аналитики
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РегистрСведений.АналитикаУчетаПоПартнерам КАК РегистрАналитикаУчетаПоПартнерам
	|	ПО
	|		ДанныеДокумента.Организация = РегистрАналитикаУчетаПоПартнерам.Организация
	|		И ДанныеДокумента.Партнер = РегистрАналитикаУчетаПоПартнерам.Партнер
	|		И ДанныеДокумента.Контрагент = РегистрАналитикаУчетаПоПартнерам.Контрагент
	|	
	|СГРУППИРОВАТЬ ПО
	|	РегистрАналитикаУчетаПоПартнерам.КлючАналитики
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки
	|	
	|;
	|/////////////////////////////////////////////////////////////////////////////
	|";
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаПрочиеДоходы()
	
	ТекстЗапроса = "
	|ВЫБРАТЬ
	|	&Период КАК Период,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	&Организация КАК Организация,
	|	&СтатьяДоходов КАК СтатьяДоходов,
	|	&АналитикаДоходов КАК АналитикаДоходов,
	|	&Подразделение КАК Подразделение,
	|	
	|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СписаниеКредиторскойЗадолженности) КАК ХозяйственнаяОперация,
	|	
	|	// Рассчитаем сумму в валюте управленческого учета.
	|	ВЫБОР КОГДА КурсыВалют.Валюта = &ВалютаУпр ТОГДА
	|		Задолженность.Сумма
	|	ИНАЧЕ
	|		(Задолженность.Сумма *
	|		ЕСТЬNULL(КурсыВалют.Курс, 1)
	|		) / (
	|		ЕСТЬNULL(КурсыВалют.Кратность, 1)
	|		)
	|		* &КоэффициентПересчетаВВалютуУпр
	|	КОНЕЦ КАК Сумма
	|	
	|ИЗ
	|	Документ.СписаниеЗадолженности.Задолженность КАК Задолженность
	|	
	|	// Определим курс валюты взаиморасчетов.
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РегистрСведений.КурсыВалют.СрезПоследних(&МоментВремени, ) КАК КурсыВалют
	|	ПО
	|		Задолженность.ВалютаВзаиморасчетов = КурсыВалют.Валюта
	|	
	|ГДЕ
	|	Задолженность.Ссылка = &Ссылка
	|	И &ТипЗадолженности = ЗНАЧЕНИЕ(Перечисление.ТипыЗадолженности.Кредиторская)
	|	И &ИспользоватьУчетПрочихДоходовРасходов
	|
	|УПОРЯДОЧИТЬ ПО
	|	Задолженность.НомерСтроки
	|	
	|;
	|/////////////////////////////////////////////////////////////////////////////
	|";
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаПрочиеРасходы()
	
	ТекстЗапроса = "
	|ВЫБРАТЬ
	|	&Период КАК Период,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	&Организация КАК Организация,
	|	&СтатьяРасходов КАК СтатьяРасходов,
	|	&АналитикаРасходов КАК АналитикаРасходов,
	|	&Подразделение КАК Подразделение,
	|	
	|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СписаниеДебиторскойЗадолженности) КАК ХозяйственнаяОперация,
	|	
	|	// Рассчитаем сумму в валюте управленческого учета.
	|	ВЫБОР КОГДА КурсыВалют.Валюта = &ВалютаУпр ТОГДА
	|		Задолженность.Сумма
	|	ИНАЧЕ
	|		(Задолженность.Сумма *
	|		ЕСТЬNULL(КурсыВалют.Курс, 1)
	|		) / (
	|		ЕСТЬNULL(КурсыВалют.Кратность, 1)
	|		)
	|		* &КоэффициентПересчетаВВалютуУпр
	|	КОНЕЦ КАК Сумма
	|	
	|ИЗ
	|	Документ.СписаниеЗадолженности.Задолженность КАК Задолженность
	|	
	|	// Определим курс валюты взаиморасчетов.
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РегистрСведений.КурсыВалют.СрезПоследних(&МоментВремени, ) КАК КурсыВалют
	|	ПО
	|		Задолженность.ВалютаВзаиморасчетов = КурсыВалют.Валюта
	|	
	|ГДЕ
	|	Задолженность.Ссылка = &Ссылка
	|	И &ТипЗадолженности = ЗНАЧЕНИЕ(Перечисление.ТипыЗадолженности.Дебиторская)
	|	И &ИспользоватьУчетПрочихДоходовРасходов
	|
	|УПОРЯДОЧИТЬ ПО
	|	Задолженность.НомерСтроки
	|	
	|;
	|/////////////////////////////////////////////////////////////////////////////
	|";
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаСуммыДокументовВВалютеРегл()
	
	ТекстЗапроса = "
	|ВЫБРАТЬ
	|	ТаблицаДокумента.НомерСтроки КАК НомерСтроки,
	|	&Период КАК Период,
	|	ТаблицаДокумента.ВалютаВзаиморасчетов КАК Валюта,
	|	ТаблицаДокумента.ИдентификаторСтроки КАК ИдентификаторСтроки,
	|	ТаблицаДокумента.Сумма КАК СуммаБезНДС,
	|	НЕОПРЕДЕЛЕНО КАК СтавкаНДС,
	|	0 КАК СуммаНДС,
	|	
	|	ТаблицаДокумента.Сумма
	|		* ЕСТЬNULL(КурсыВалют.Курс, 1) / ЕСТЬNULL(КурсыВалют.Кратность, 1)
	|		* &КоэффициентПересчетаВВалютуРегл КАК СуммаБезНДСРегл,
	|	
	|	0 КАК СуммаНДСРегл,
	|	НЕОПРЕДЕЛЕНО КАК ТипРасчетов
	|
	|ИЗ
	|	Документ.СписаниеЗадолженности.Задолженность КАК ТаблицаДокумента
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РегистрСведений.КурсыВалют.СрезПоследних(КОНЕЦПЕРИОДА(&Период, ДЕНЬ)) КАК КурсыВалют
	|	ПО
	|		ТаблицаДокумента.ВалютаВзаиморасчетов = КурсыВалют.Валюта
	|
	|ГДЕ
	|	ТаблицаДокумента.Ссылка = &Ссылка
	|	И ТаблицаДокумента.ВалютаВзаиморасчетов <> &ВалютаРегламентированногоУчета
	|;
	|/////////////////////////////////////////////////////////////////////////////
	|";
	
	Возврат ТекстЗапроса;
	
КонецФункции // ТекстЗапросаТаблицаСуммыДокументовВВалютеРегл()



#КонецЕсли