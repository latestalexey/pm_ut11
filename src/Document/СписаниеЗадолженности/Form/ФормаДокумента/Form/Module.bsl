
///////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// Обработчик механизма "ВерсионированиеОбъектов"
	ВерсионированиеОбъектов.ПриСозданииНаСервере(ЭтаФорма);
	
	// Обработчик подсистемы "Внешние обработки"
	ДополнительныеОтчетыИОбработки.ПриСозданииНаСервере(ЭтаФорма);
	
	ТипРасчетовРасчетыСКлиентом = Перечисления.ТипыРасчетовСПартнерами.РасчетыСКлиентом;
	ТипСсылкаКонтрагенты = Новый ОписаниеТипов("СправочникСсылка.Контрагенты");
	ТипСсылкаОрганизации = Новый ОписаниеТипов("СправочникСсылка.Организации");
	
	УстановитьВидимостьПолей();
	УстановитьДоступ();
	УстановитьТипКонтрагента();
	
КонецПроцедуры

///////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ ШАПКИ ФОРМЫ

&НаКлиенте
Процедура РасчетыМеждуОрганизациямиПриИзменении(Элемент)
	УстановитьТипКонтрагента();
КонецПроцедуры

&НаКлиенте
Процедура КонтрагентПриИзменении(Элемент)
	ЕстьСтроки = Объект.Задолженность.Количество()>0;
	ОчиститьТЧ = НужноОчищатьТЧ(ЕстьСтроки);
	ЗаполнитьПартнера(ЕстьСтроки, ОчиститьТЧ);
КонецПроцедуры

&НаКлиенте
Процедура ТипЗадолженностиПриИзменении(Элемент)
	
	ТипЗадолженностиПриИзмененииСервер();
	
КонецПроцедуры

&НаКлиенте
Процедура СтатьяДоходовПриИзменении(Элемент)
	
	ФинансыКлиент.СтатьяДоходовПриИзменении(Объект, Элементы);
	СтатьяДоходовПриИзмененииСервер();
	
КонецПроцедуры

&НаКлиенте
Процедура СтатьяРасходовПриИзменении(Элемент)
	
	ФинансыКлиент.СтатьяРасходовПриИзменении(Объект, Элементы);
	СтатьяРасходовПриИзмененииСервер();
	
КонецПроцедуры

&НаКлиенте
Процедура КомментарийНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	ОбщегоНазначенияКлиент.ОткрытьФормуРедактированияКомментария(Элемент.ТекстРедактирования, Объект.Комментарий, Модифицированность);
	
КонецПроцедуры

///////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ ТАБЛИЦЫ ФОРМЫ ЗАДОЛЖЕННОСТЬ

&НаКлиенте
Процедура ЗадолженностьПриНачалеРедактирования(Элемент, НоваяСтрока, Копирование)
	
	СтрокаТаблицы = Элементы.Задолженность.ТекущиеДанные;
	
	Если НоваяСтрока и Не Копирование Тогда
		
		Если Не ЗначениеЗаполнено(Партнер) Тогда
			ЗаполнитьПартнера();
		КонецЕсли;
		
		СтрокаТаблицы.Партнер = Партнер;
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ЗадолженностьТипРасчетовПриИзменении(Элемент)
	СтрокаТаблицы = Элементы.Задолженность.ТекущиеДанные;
	СтрокаТаблицы.Заказ = Неопределено;
КонецПроцедуры

&НаКлиенте
Процедура ЗадолженностьЗаказНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтрокаТаблицы = Элементы.Задолженность.ТекущиеДанные;
	ФинансыКлиент.ДокументРасчетовНачалоВыбора(
		Объект.Организация,
		СтрокаТаблицы.Партнер,
		Объект.Контрагент,
		Неопределено, // Соглашение
		(СтрокаТаблицы.ТипРасчетов = ТипРасчетовРасчетыСКлиентом), // ЭтоРасчетыСКлиентами
		Ложь, // ВыборОснованияПлатежа
		Элемент,
		СтандартнаяОбработка
	);
	
КонецПроцедуры

&НаКлиенте
Процедура ЗадолженностьЗаказОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	СтрокаТаблицы = Элементы.Задолженность.ТекущиеДанные;	
	Если ТипЗнч(ВыбранноеЗначение) = Тип("Структура") Тогда
		ЗаполнитьЗначенияСвойств(СтрокаТаблицы, ВыбранноеЗначение);
		Модифицированность = Истина;
	КонецЕсли; 
	
КонецПроцедуры

///////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ КОМАНД ФОРМЫ

// Функция используется в автотесте процесса продаж.
//
&НаКлиенте
Процедура АвтоТест_ЗаполнитьПоОстаткам(Команда) Экспорт
	
	СтруктураРеквизитов = Новый Структура;
	СтруктураРеквизитов.Вставить("Организация");
	СтруктураРеквизитов.Вставить("Контрагент");
	СтруктураРеквизитов.Вставить("ТипЗадолженности", "Тип задолженности");
	
	Если ОбщегоНазначенияУТКлиент.ВозможноЗаполнениеТабличнойЧасти(ЭтаФорма, Объект.Задолженность, СтруктураРеквизитов) Тогда
		ЗаполнитьЗадолженностьПоОстаткамСервер();
	КонецЕсли;
	
КонецПроцедуры

///////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

///////////////////////////////////////////////////////////////////////////////
// При изменении реквизитов

&НаСервере
Процедура ТипЗадолженностиПриИзмененииСервер()
	
	УстановитьВидимостьПолей();
	УстановитьДоступ();
	
КонецПроцедуры

&НаСервере
Процедура СтатьяДоходовПриИзмененииСервер()
	
	Если Не ЗначениеЗаполнено(Объект.АналитикаДоходов) Тогда
		Объект.АналитикаДоходов = ПланыВидовХарактеристик.СтатьиДоходов.ПолучитьАналитикуДоходовПоУмолчанию(
			Объект.СтатьяДоходов,
			Объект,
			Объект.Подразделение
		);
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура СтатьяРасходовПриИзмененииСервер()
	
	ДоходыИРасходыСервер.СтатьяРасходовПриИзменении(
		Объект,
		Объект.СтатьяРасходов,
		Объект.АналитикаРасходов
	);
	
КонецПроцедуры

///////////////////////////////////////////////////////////////////////////////
// Заполнение

&НаСервере
Процедура ЗаполнитьПартнера(ЗаполнятьТЧ = Ложь, ОчиститьТЧ = Ложь)

	Если ЗначениеЗаполнено(Объект.Контрагент) Тогда
		Партнер = ДенежныеСредстваСервер.ПолучитьПартнераПоКонтрагенту(Объект.Контрагент);
	КонецЕсли;
	Если ЗаполнятьТЧ Тогда
		Если ОчиститьТЧ Тогда
			Объект.Задолженность.Очистить();
		Иначе
			ЗаполнитьПартнераВТабличнойЧасти(Объект.Задолженность, Партнер, Объект.РасчетыМеждуОрганизациями);
		КонецЕсли;
	КонецЕсли;

КонецПроцедуры

&НаСервере
Процедура ЗаполнитьПартнераВТабличнойЧасти(ОбъектТабличнаяЧасть, ПартнерСсылка, РасчетыМеждуОрганизациями)
	Для Каждого СтрокаТаблицы из ОбъектТабличнаяЧасть Цикл
		Если РасчетыМеждуОрганизациями Тогда
			СтрокаТаблицы.Партнер = Неопределено;
		ИначеЕсли Не ЗначениеЗаполнено(СтрокаТаблицы.Партнер) Тогда
			СтрокаТаблицы.Партнер = ПартнерСсылка;
		КонецЕсли;
	КонецЦикла;
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьЗадолженностьПоОстаткамСервер()
	
	ВзаиморасчетыСервер.ЗаполнитьЗадолженностьПоОстаткам(
		Объект.Организация, 
		Объект.Контрагент,
		Объект.ТипЗадолженности, 
		Объект.Дата,
		Неопределено, // Валюта,
		Объект.Задолженность
	);
	
КонецПроцедуры

///////////////////////////////////////////////////////////////////////////////
// Управление элементами формы

&НаСервере
Процедура УстановитьТипКонтрагента()
	Элементы.Контрагент.ОграничениеТипа = ?(Объект.РасчетыМеждуОрганизациями,ТипСсылкаОрганизации,ТипСсылкаКонтрагенты);
	Элементы.ЗадолженностьПартнер.Видимость = Не Объект.РасчетыМеждуОрганизациями;
КонецПроцедуры

&НаСервере
Процедура УстановитьВидимостьПолей()
	
	Если Объект.ТипЗадолженности = Перечисления.ТипыЗадолженности.Дебиторская Тогда
		Элементы.СтраницаДоходы.Видимость = Ложь;
		Элементы.СтраницаРасходы.Видимость = Истина;
	Иначе
		Элементы.СтраницаДоходы.Видимость = Истина;
		Элементы.СтраницаРасходы.Видимость = Ложь;
	КонецЕсли;
	Элементы.РасчетыМеждуОрганизациями.Заголовок = Перечисления.ТипыЗадолженности.СинонимКонтрагента(Объект.ТипЗадолженности);
	
КонецПроцедуры

&НаСервере
Процедура УстановитьДоступ()
	
	Если Объект.ТипЗадолженности = Перечисления.ТипыЗадолженности.Дебиторская Тогда
		Элементы.АналитикаРасходов.ТолькоПросмотр = Не ЗначениеЗаполнено(Объект.СтатьяРасходов);
	Иначе
		Элементы.АналитикаДоходов.ТолькоПросмотр = Не ЗначениеЗаполнено(Объект.СтатьяДоходов);
	КонецЕсли;

КонецПроцедуры

///////////////////////////////////////////////////////////////////////////////
// Прочее

&НаКлиенте
Функция НужноОчищатьТЧ(ЕстьСтроки)
	ОчищатьТабличныеЧасти = Ложь;
	Если ЕстьСтроки Тогда
		ТекстВопроса = НСтр("ru='Суммы списания задолженности могут стать неактуальным.
			|Очистить список задолженности?'");
		Ответ = Вопрос(ТекстВопроса, РежимДиалогаВопрос.ДаНет);
		ОчищатьТабличныеЧасти = (Ответ = КодВозвратаДиалога.Да);
	КонецЕсли;
	Возврат ОчищатьТабличныеЧасти;
КонецФункции
