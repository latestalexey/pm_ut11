#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

////////////////////////////////////////////////////////////////////////////////
// ПРОГРАММНЫЙ ИНТЕРФЕЙС

// Функция формирует временные таблицы "ТаблицаДанныхДокумента", "ТаблицаТоваров", "ТаблицаВидыЗапасов"  
// для заполнения табличной части "Виды запасов".
//
// Возвращаемое значение:
//	МенеджерВременныхТаблиц - менеджер временных таблиц
//
Функция ВременныеТаблицыДанныхДокумента() Экспорт
	
	Запрос = Новый Запрос("
	|ВЫБРАТЬ
	|	&Дата КАК Дата,
	|	&Организация КАК Организация,
	|	ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка) КАК Подразделение,
	|	ЗНАЧЕНИЕ(Справочник.Пользователи.ПустаяСсылка) КАК Менеджер,
	|	ЗНАЧЕНИЕ(Справочник.СделкиСКлиентами.ПустаяСсылка) КАК Сделка,
	|
	|	Неопределено КАК Партнер,
	|	Неопределено КАК Контрагент,
	|	ЗНАЧЕНИЕ(Справочник.СоглашенияСПоставщиками.ПустаяСсылка) КАК Соглашение,
	|	ЗНАЧЕНИЕ(Справочник.ДоговорыКонтрагентов.ПустаяСсылка) КАК Договор,
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК Валюта,
	|	ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПустаяСсылка) КАК НалогообложениеНДС,
	|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.КорректировкаОбособленногоУчета) КАК ХозяйственнаяОперация,
	|	Ложь КАК ЕстьСделкиВТабличнойЧасти
	|	
	|ПОМЕСТИТЬ ТаблицаДанныхДокумента
	|;
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаТоваров.НомерСтроки КАК НомерСтроки,
	|	ТаблицаТоваров.Номенклатура КАК Номенклатура,
	|	ТаблицаТоваров.Характеристика КАК Характеристика,
	|	ТаблицаТоваров.Количество КАК Количество,
	|	ТаблицаТоваров.Склад КАК Склад,
	|	ТаблицаТоваров.ДокументРеализации КАК ДокументРеализации,
	|	ЗНАЧЕНИЕ(Справочник.СделкиСКлиентами.ПустаяСсылка) КАК Сделка,
	|	ТаблицаТоваров.ИсходноеНазначение КАК Назначение,
	|	ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.ПустаяСсылка) КАК СтавкаНДС,
	|	0 КАК СуммаСНДС,
	|	0 КАК СуммаНДС,
	|	0 КАК СуммаВознаграждения,
	|	0 КАК СуммаНДСВознаграждения
	|
	|ПОМЕСТИТЬ ТаблицаТоваров
	|ИЗ
	|	&ТаблицаТоваров КАК ТаблицаТоваров
	|;
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаВидыЗапасов.НомерСтроки КАК НомерСтроки,
	|	ТаблицаВидыЗапасов.Номенклатура КАК Номенклатура,
	|	ТаблицаВидыЗапасов.Характеристика КАК Характеристика,
	|	ТаблицаВидыЗапасов.ДокументРеализации КАК ДокументРеализации,
	|	ТаблицаВидыЗапасов.ВидЗапасов КАК ВидЗапасов,
	|	ТаблицаВидыЗапасов.НомерГТД КАК НомерГТД,
	|	ТаблицаВидыЗапасов.Количество КАК Количество,
	|	ЗНАЧЕНИЕ(Справочник.Склады.ПустаяСсылка) КАК СкладОтгрузки,
	|	ТаблицаВидыЗапасов.Склад КАК Склад,
	|	ЗНАЧЕНИЕ(Справочник.СделкиСКлиентами.ПустаяСсылка) КАК Сделка
	|	
	|ПОМЕСТИТЬ ТаблицаВидыЗапасов
	|ИЗ
	|	&ТаблицаВидыЗапасов КАК ТаблицаВидыЗапасов
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Номенклатура,
	|	Характеристика
	|");
	
	МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	Запрос.УстановитьПараметр("Дата", Дата);
	Запрос.УстановитьПараметр("Организация", Организация);
	Запрос.УстановитьПараметр("ТаблицаТоваров", ЗапасыСервер.ТаблицаДополненнаяОбязательнымиКолонками(Товары.Выгрузить()));
	Запрос.УстановитьПараметр("ТаблицаВидыЗапасов", ЗапасыСервер.ТаблицаДополненнаяОбязательнымиКолонками(ВидыЗапасов.Выгрузить()));
	
	Запрос.Выполнить();
	
	Если ВидыЗапасовУказаныВручную Тогда
		ДополнительныеСвойства.Вставить("ИспользоватьОстаткиНаКонецМесяца", Истина);
	КонецЕсли;
	
	Возврат МенеджерВременныхТаблиц;
	
КонецФункции

///////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)

	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;

	ПроведениеСервер.УстановитьРежимПроведения(ЭтотОбъект, РежимЗаписи, РежимПроведения);

	ДополнительныеСвойства.Вставить("ЭтоНовый",    ЭтоНовый());
	ДополнительныеСвойства.Вставить("РежимЗаписи", РежимЗаписи);
	
	Если РежимЗаписи = РежимЗаписиДокумента.Проведение Тогда
		ЗаполнитьВидыЗапасов(Отказ);
	КонецЕсли;

КонецПроцедуры

Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	
	ПроведениеСервер.ИнициализироватьДополнительныеСвойстваДляПроведения(Ссылка, ДополнительныеСвойства, РежимПроведения);
	
	Документы.КорректировкаНазначенияТоваров.ИнициализироватьДанныеДокумента(Ссылка, ДополнительныеСвойства);
	
	ПроведениеСервер.ПодготовитьНаборыЗаписейКРегистрацииДвижений(ЭтотОбъект);
	
	//
	ЗапасыСервер.ОбеспечениеЗаказов(ДополнительныеСвойства, Движения, Отказ);
	ЗапасыСервер.ОтразитьСвободныеОстатки(ДополнительныеСвойства, Движения, Отказ);
	//
	
	СформироватьСписокРегистровДляКонтроля();
	
	ПроведениеСервер.ЗаписатьНаборыЗаписей(ЭтотОбъект);
	
	ПроведениеСервер.ВыполнитьКонтрольРезультатовПроведения(ЭтотОбъект, Отказ);
	
	ПроведениеСервер.ОчиститьДополнительныеСвойстваДляПроведения(ДополнительныеСвойства);

КонецПроцедуры

Процедура ОбработкаУдаленияПроведения(Отказ)

	ПроведениеСервер.ИнициализироватьДополнительныеСвойстваДляПроведения(Ссылка, ДополнительныеСвойства);

	ПроведениеСервер.ПодготовитьНаборыЗаписейКРегистрацииДвижений(ЭтотОбъект);

	СформироватьСписокРегистровДляКонтроля();

	ПроведениеСервер.ЗаписатьНаборыЗаписей(ЭтотОбъект);

	ПроведениеСервер.ВыполнитьКонтрольРезультатовПроведения(ЭтотОбъект, Отказ);

	ПроведениеСервер.ОчиститьДополнительныеСвойстваДляПроведения(ДополнительныеСвойства);

КонецПроцедуры

///////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

///////////////////////////////////////////////////////////////////////////////
// Инициализация и заполнение

Процедура СформироватьСписокРегистровДляКонтроля()

	Массив = Новый Массив;
	Массив.Добавить(Движения.ОбеспечениеЗаказов);
	Массив.Добавить(Движения.СвободныеОстатки);
	ДополнительныеСвойства.ДляПроведения.Вставить("РегистрыДляКонтроля", Массив);

КонецПроцедуры

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, СтандартнаяОбработка)

	Заказ = ДанныеЗаполнения;
	ЗаполнитьПоОснованию();

КонецПроцедуры

Процедура ЗаполнитьПоОснованию() Экспорт

	Если ЗначениеЗаполнено(Заказ) Тогда 
		ЗаполнитьПоЗаказу();
	КонецЕсли;

КонецПроцедуры

Процедура ЗаполнитьПоЗаказу() 

	УстановитьПривилегированныйРежим(Истина);

	Если ТипЗнч(Заказ) = Тип("ДокументСсылка.ЗаказКлиента") Тогда 

		ТекстЗапроса = 
		"
		|ВЫБРАТЬ
		|	Т.Ссылка.Назначение  КАК Назначение,
		|	Т.Номенклатура       КАК Номенклатура,
		|	Т.Характеристика     КАК Характеристика,
		|	Т.Склад              КАК Склад
		|
		|ПОМЕСТИТЬ ВтТоварыЗаказа
		|ИЗ
		|	Документ.ЗаказКлиента.Товары КАК Т
		|ГДЕ
		|	Т.Ссылка = &ДокументОснование
		|	И НЕ Т.Отменено
		|	И Т.Ссылка.Назначение <> ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|";

	ИначеЕсли ТипЗнч(Заказ) = Тип("ДокументСсылка.ЗаказНаСборку") Тогда 

		ТекстЗапроса = 
		"
		|ВЫБРАТЬ
		|	ВЫБОР
		|		КОГДА Т.Ссылка.Назначение = ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)ТОГДА
		|			Т.Ссылка.НазначениеТовары
		|		ИНАЧЕ
		|			Т.Ссылка.Назначение
		|	КОНЕЦ                       КАК Назначение,
		|	Т.Номенклатура              КАК Номенклатура,
		|	Т.Характеристика            КАК Характеристика,
		|	Т.Ссылка.Склад              КАК Склад
		|
		|ПОМЕСТИТЬ ВтТоварыЗаказа
		|ИЗ
		|	Документ.ЗаказНаСборку.Товары КАК Т
		|ГДЕ
		|	Т.Ссылка = &ДокументОснование
		|	И
		|	ВЫБОР
		|		КОГДА Т.Ссылка.Назначение = ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)ТОГДА
		|			Т.Ссылка.НазначениеТовары
		|		ИНАЧЕ
		|			Т.Ссылка.Назначение
		|	КОНЕЦ <> ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|";

	ИначеЕсли ТипЗнч(Заказ) = Тип("ДокументСсылка.ЗаказНаПеремещение") Тогда 

		ТекстЗапроса = 
		"
		|ВЫБРАТЬ
		|	ВЫБОР КОГДА Т.Назначение = ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка) ТОГДА
		|			Т.Ссылка.Назначение
		|		ИНАЧЕ
		|			Т.Назначение 
		|	КОНЕЦ                       КАК Назначение,
		|	Т.Номенклатура              КАК Номенклатура,
		|	Т.Характеристика            КАК Характеристика,
		|	Т.Ссылка.СкладОТправитель   КАК Склад
		|
		|ПОМЕСТИТЬ ВтТоварыЗаказа
		|ИЗ
		|	Документ.ЗаказНаПеремещение.Товары КАК Т
		|ГДЕ
		|	Т.Ссылка = &ДокументОснование
		|	И
		|	ВЫБОР КОГДА Т.Назначение = ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка) ТОГДА
		|			Т.Ссылка.Назначение
		|		ИНАЧЕ
		|			Т.Назначение 
		|	КОНЕЦ <> ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|";
		
	КонецЕсли;

	ТекстЗапроса = ТекстЗапроса + 
	"
	|ВЫБРАТЬ
	|	Таблица.Назначение               КАК ИсходноеНазначение,
	|	Таблица.Номенклатура             КАК Номенклатура,
	|	Таблица.Характеристика           КАК Характеристика,
	|	Таблица.Склад                    КАК Склад,
	|	СУММА(Таблица.Наличие)           КАК Наличие,
	|	СУММА(Таблица.Наличие)
	|		- СУММА(Таблица.Потребность) КАК Количество,
	|	СУММА(Таблица.Наличие)
	|		- СУММА(Таблица.Потребность) КАК КоличествоУпаковок
	|
	|ПОМЕСТИТЬ Товары
	|
	|ИЗ
	|	(ВЫБРАТЬ
	|		Обеспечение.Назначение             КАК Назначение,
	|		Обеспечение.Номенклатура           КАК Номенклатура,
	|		Обеспечение.Характеристика         КАК Характеристика,
	|		Обеспечение.Склад                  КАК Склад,
	|		Обеспечение.НаличиеПодЗаказОстаток КАК Наличие,
	|		Обеспечение.ПотребностьОстаток     КАК Потребность
	|	ИЗ
	|		РегистрНакопления.ОбеспечениеЗаказов.Остатки(
	|				,
	|				(Назначение, Номенклатура, Характеристика, Склад) В
	|					(ВЫБРАТЬ
	|						Т.Назначение,
	|						Т.Номенклатура,
	|						Т.Характеристика,
	|						Т.Склад
	|					ИЗ
	|						ВтТоварыЗаказа КАК Т)) КАК Обеспечение
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		Обеспечение.Назначение,
	|		Обеспечение.Номенклатура,
	|		Обеспечение.Характеристика,
	|		Обеспечение.Склад,
	|		ВЫБОР
	|			КОГДА Обеспечение.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|				ТОГДА -Обеспечение.НаличиеПодЗаказ
	|			ИНАЧЕ Обеспечение.НаличиеПодЗаказ
	|		КОНЕЦ,
	|		ВЫБОР
	|			КОГДА Обеспечение.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|				ТОГДА -Обеспечение.Потребность
	|			ИНАЧЕ Обеспечение.Потребность
	|		КОНЕЦ
	|
	|	ИЗ
	|		РегистрНакопления.ОбеспечениеЗаказов КАК Обеспечение
	|	ГДЕ
	|		Обеспечение.Регистратор = &Регистратор
	|		И (Обеспечение.Назначение, Обеспечение.Номенклатура, Обеспечение.Характеристика, Обеспечение.Склад) В
	|				(ВЫБРАТЬ
	|					Т.Назначение,
	|					Т.Номенклатура,
	|					Т.Характеристика,
	|					Т.Склад
	|				ИЗ
	|					ВтТоварыЗаказа КАК Т)) КАК Таблица
	|
	|СГРУППИРОВАТЬ ПО
	|	Таблица.Назначение,
	|	Таблица.Номенклатура,
	|	Таблица.Склад,
	|	Таблица.Характеристика
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Таблица.ИсходноеНазначение КАК ИсходноеНазначение,
	|	Таблица.Номенклатура       КАК Номенклатура,
	|	Таблица.Характеристика     КАК Характеристика,
	|	Таблица.Склад              КАК Склад,
	|	Таблица.Количество         КАК Количество,
	|	Таблица.Количество         КАК КоличествоУпаковок
	|
	|ИЗ
	|	Товары КАК Таблица
	|
	|ГДЕ
	|	Таблица.Количество > 0
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Таблица.ИсходноеНазначение КАК ИсходноеНазначение,
	|	Таблица.Номенклатура       КАК Номенклатура,
	|	Таблица.Характеристика     КАК Характеристика,
	|	Таблица.Склад              КАК Склад,
	|	Таблица.Наличие            КАК Количество,
	|	Таблица.Наличие            КАК КоличествоУпаковок
	|
	|ИЗ
	|	Товары КАК Таблица
	|
	|ГДЕ
	|	Таблица.Наличие > 0
	|";
	
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.УстановитьПараметр("ДокументОснование", Заказ);
	Запрос.УстановитьПараметр("Регистратор", 	   Ссылка);
	
	МассивРезультатов = Запрос.ВыполнитьПакет();

	Если Не МассивРезультатов[2].Пустой() Тогда 

		Товары.Загрузить(МассивРезультатов[2].Выгрузить());

	ИначеЕсли Не МассивРезультатов[3].Пустой() Тогда

		Товары.Загрузить(МассивРезультатов[3].Выгрузить());

	КонецЕсли;

	Организация = ОбщегоНазначения.ПолучитьЗначениеРеквизита(Заказ, "Организация");

КонецПроцедуры

///////////////////////////////////////////////////////////////////////////////
// Виды запасов

Процедура СформироватьВременнуюТаблицуТоваровИАналитики(МенеджерВременныхТаблиц) Экспорт
	
	Запрос = Новый Запрос("
	|ВЫБРАТЬ
	|	ТаблицаТоваров.Номенклатура КАК Номенклатура,
	|	ТаблицаТоваров.Характеристика КАК Характеристика,
	|	ТаблицаТоваров.Склад КАК Склад,
	|
	|	ТаблицаДанныхДокумента.Подразделение,
	|	ТаблицаДанныхДокумента.Менеджер,
	|	ТаблицаДанныхДокумента.Сделка,
	|	ТаблицаТоваров.Назначение КАК Назначение,
	|
	|	ЗНАЧЕНИЕ(Справочник.Партнеры.ПустаяСсылка) КАК Партнер,
	|	ЗНАЧЕНИЕ(Справочник.СоглашенияСПоставщиками.ПустаяСсылка) КАК Соглашение,
	|	ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПустаяСсылка) КАК НалогообложениеНДС,
	|
	|	ТаблицаТоваров.Количество КАК Количество
	|	
	|ПОМЕСТИТЬ ТаблицаТоваровИАналитики
	|ИЗ
	|	ТаблицаТоваров КАК ТаблицаТоваров
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		ТаблицаДанныхДокумента КАК ТаблицаДанныхДокумента
	|	ПО
	|		Истина
	|ГДЕ
	|	ТаблицаТоваров.Номенклатура.ТипНоменклатуры <> ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Услуга)
	|;
	|");
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.Выполнить();
	
КонецПроцедуры

Функция РеквизитыДокументаИзменились(МенеджерВременныхТаблиц)
	
	Запрос = Новый Запрос("
	|ВЫБРАТЬ
	|	ДанныеДокумента.Организация КАК Организация
	|
	|ПОМЕСТИТЬ СохраненныеДанныеДокумента
	|ИЗ
	|	Документ.КорректировкаНазначенияТоваров КАК ДанныеДокумента
	|ГДЕ
	|	ДанныеДокумента.Ссылка = &Ссылка
	|;
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВЫБОР КОГДА ДанныеДокумента.Организация <> СохраненныеДанные.Организация ТОГДА
	|		Истина
	|	ИНАЧЕ
	|		Ложь
	|	КОНЕЦ КАК РеквизитыИзменены
	|ИЗ
	|	ТаблицаДанныхДокумента КАК ДанныеДокумента
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		СохраненныеДанныеДокумента КАК СохраненныеДанные
	|	ПО
	|		Истина
	|");
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда
		РеквизитыИзменены = Выборка.РеквизитыИзменены;
	Иначе
		РеквизитыИзменены = Ложь;
	КонецЕсли;
	
	Возврат РеквизитыИзменены;
	
КонецФункции

Функция ТабличнаяЧастьТоварыИзменилась(МенеджерВременныхТаблиц)
	
	Запрос = Новый Запрос("
	|ВЫБРАТЬ
	|	ТаблицаТоваров.Номенклатура КАК Номенклатура,
	|	ТаблицаТоваров.Характеристика КАК Характеристика
	|ИЗ (
	|	ВЫБРАТЬ
	|		ТаблицаТоваров.Номенклатура КАК Номенклатура,
	|		ТаблицаТоваров.Характеристика КАК Характеристика,
	|		ТаблицаТоваров.Склад КАК Склад,
	|		ТаблицаТоваров.Назначение КАК Назначение,
	|		ТаблицаТоваров.Количество КАК Количество
	|	ИЗ
	|		ТаблицаТоваров КАК ТаблицаТоваров
	|
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ТаблицаВидыЗапасов.Номенклатура КАК Номенклатура,
	|		ТаблицаВидыЗапасов.Характеристика КАК Характеристика,
	|		ТаблицаВидыЗапасов.Склад КАК Склад,
	|		ТаблицаВидыЗапасов.ВидЗапасов.Назначение КАК Назначение,
	|		-ТаблицаВидыЗапасов.Количество КАК Количество
	|	ИЗ
	|		ТаблицаВидыЗапасов КАК ТаблицаВидыЗапасов
	|
	|	) КАК ТаблицаТоваров
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаТоваров.Номенклатура,
	|	ТаблицаТоваров.Характеристика,
	|	ТаблицаТоваров.Назначение
	|
	|ИМЕЮЩИЕ
	|	СУММА(ТаблицаТоваров.Количество) <> 0
	|");
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;

	РезультатЗапрос = Запрос.Выполнить();
	
	Возврат (Не РезультатЗапрос.Пустой());
	
КонецФункции

Процедура СформироватьДоступныеВидыЗапасов(МенеджерВременныхТаблиц) Экспорт
	
	Запрос = Новый Запрос("
	|// Собственные виды запасов
	|ВЫБРАТЬ
	|	ВидыЗапасов.Ссылка КАК ВидЗапасов,
	|	ВидыЗапасов.Ссылка КАК ВидЗапасовПродавца,
	|	ВидыЗапасов.Предназначение КАК Предназначение,
	|	ВидыЗапасов.Назначение КАК Назначение
	|
	|ПОМЕСТИТЬ ВидыЗапасов
	|ИЗ
	|	Справочник.ВидыЗапасов КАК ВидыЗапасов
	|ГДЕ
	|	Не ВидыЗапасов.РеализацияЗапасовДругойОрганизации
	|	И ВидыЗапасов.Организация = &Организация
	|	И Не ВидыЗапасов.ПометкаУдаления
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Предназначение
	|;
	|/////////////////////////////////////////////////////////////////////////////
	|
	|// Не обособленные виды запасов
	|ВЫБРАТЬ
	|	ВидыЗапасов.ВидЗапасов КАК ВидЗапасов,
	|	ВидыЗапасов.ВидЗапасовПродавца КАК ВидЗапасовПродавца
	|
	|ПОМЕСТИТЬ ДоступныеВидыЗапасов
	|ИЗ
	|	ВидыЗапасов КАК ВидыЗапасов
	|ГДЕ
	|	ВидыЗапасов.Предназначение = ЗНАЧЕНИЕ(Перечисление.ТипыПредназначенияВидовЗапасов.ПредназначениеНеОграничено)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|// Обособленные виды запасов по заказам
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ВидыЗапасов.ВидЗапасов КАК ВидЗапасов,
	|	ВидыЗапасов.ВидЗапасовПродавца КАК ВидЗапасовПродавца
	|ИЗ
	|	ВидыЗапасов КАК ВидыЗапасов
	|ГДЕ
	|	ВидыЗапасов.Предназначение = ЗНАЧЕНИЕ(Перечисление.ТипыПредназначенияВидовЗапасов.ПредназначенДляЗаказа)
	|	И ВидыЗапасов.Назначение В (
	|		ВЫБРАТЬ
	|			ТаблицаТоваров.Назначение
	|		ИЗ
	|			ТаблицаТоваров КАК ТаблицаТоваров
	|	)
	|");
	Запрос.УстановитьПараметр("Организация", Организация);
	Запрос.УстановитьПараметр("Заказ", Заказ);
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	
	Запрос.Выполнить();
	
КонецПроцедуры

Процедура СообщитьОбОшибкахЗаполненияВидовЗапасов(ТаблицаОшибок, МенеджерВременныхТаблиц)
	
	Если ТаблицаОшибок.Количество() > 0 Тогда
		
	 	СтруктураАналитики = ЗапасыСервер.АналитикаОбособленноУчетаДокумента(МенеджерВременныхТаблиц);
		
		ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			НСтр("ru = 'Корректировка превышает остаток товара организации %1 %2 %3'"),
			Организация,
			СтруктураАналитики.СтрокаАналитики,
			СтруктураАналитики.Аналитика
		);
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
			ТекстСообщения,
			Ссылка
		);
		
		Для Каждого СтрокаТаблицы Из ТаблицаОшибок Цикл
			
			ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				НСтр("ru = 'Номенклатура: %1, на складе %2 недостаточно %3 %4'"),
				НоменклатураКлиентСервер.ПредставлениеНоменклатуры(СтрокаТаблицы.Номенклатура, СтрокаТаблицы.Характеристика),
				СтрокаТаблицы.Склад,
				СтрокаТаблицы.Количество,
				СтрокаТаблицы.ЕдиницаИзмерения
			);
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
				ТекстСообщения,
				Ссылка
			);
			
		КонецЦикла;
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ЗаполнитьНовоеНазначениеВидовЗапасов()
	
	СтруктураПоиска = Новый Структура("Номенклатура, Характеристика, Назначение");
	Для Каждого СтрокаТоваров Из Товары Цикл

		КоличествоТоваров = СтрокаТоваров.Количество;
		
		ЗаполнитьЗначенияСвойств(СтруктураПоиска, СтрокаТоваров);
		СтруктураПоиска.Назначение = СтрокаТоваров.ИсходноеНазначение;
		
		Для Каждого СтрокаЗапасов Из ВидыЗапасов.НайтиСтроки(СтруктураПоиска) Цикл

			Если СтрокаЗапасов.Количество = 0 Тогда
				Продолжить;
			КонецЕсли;
			
			Количество = Мин(КоличествоТоваров, СтрокаЗапасов.Количество);

			НоваяСтрока = ВидыЗапасов.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаЗапасов);
			
			НоваяСтрока.НовоеНазначение = СтрокаТоваров.НовоеНазначение;
			НоваяСтрока.Количество = Количество;

			СтрокаЗапасов.Количество = СтрокаЗапасов.Количество - НоваяСтрока.Количество;
			
			КоличествоТоваров = КоличествоТоваров - НоваяСтрока.Количество;

			Если КоличествоТоваров = 0 Тогда
				Прервать;
			КонецЕсли;

		КонецЦикла;
		
	КонецЦикла;
	
	МассивУдаляемыхСтрок = ВидыЗапасов.НайтиСтроки(Новый Структура("Количество", 0));
	Для Каждого СтрокаТаблицы Из МассивУдаляемыхСтрок Цикл
		ВидыЗапасов.Удалить(СтрокаТаблицы);
	КонецЦикла;
		
КонецПроцедуры

Процедура ЗаполнитьВидыЗапасов(Отказ)
	
	УстановитьПривилегированныйРежим(Истина);
	
	МенеджерВременныхТаблиц = ВременныеТаблицыДанныхДокумента();
	ПерезаполнитьВидыЗапасов = ДополнительныеСвойства.Свойство("ПерезаполнитьВидыЗапасов");
	Если Не Проведен
	 ИЛИ ПерезаполнитьВидыЗапасов
	 ИЛИ РеквизитыДокументаИзменились(МенеджерВременныхТаблиц)
	 ИЛИ ТабличнаяЧастьТоварыИзменилась(МенеджерВременныхТаблиц) Тогда
	 
		СформироватьДоступныеВидыЗапасов(МенеджерВременныхТаблиц);
		ЗапасыСервер.УстановитьБлокировкуОстатковТоваровОрганизаций(МенеджерВременныхТаблиц);
		ЗапасыСервер.ТаблицаОстатковТоваровОрганизаций(Ссылка, Организация, Дата, ДополнительныеСвойства, МенеджерВременныхТаблиц);
		ТаблицаОшибок = ЗапасыСервер.ТаблицаОшибокЗаполненияВидовЗапасов();
		
		ЗапасыСервер.ЗаполнитьВидыЗапасовДокумента(
			МенеджерВременныхТаблиц,
			ДополнительныеСвойства,
			ВидыЗапасов,
			ТаблицаОшибок,
			Отказ
		);
		ВидыЗапасов.Свернуть("Номенклатура, Характеристика, ВидЗапасов, НомерГТД, Склад, Назначение", "Количество");
		СообщитьОбОшибкахЗаполненияВидовЗапасов(ТаблицаОшибок, МенеджерВременныхТаблиц);
		
		ЗаполнитьНовоеНазначениеВидовЗапасов();
		
	КонецЕсли;
	
КонецПроцедуры

#КонецЕсли
