#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

////////////////////////////////////////////////////////////////////////////////
// ПРОГРАММНЫЙ ИНТЕРФЕЙС

// Возвращает сумму документа - основания счета
//
// Параметры:
//	ДокументОснование - ДокументСсылка.ЗаказКлиента, ДокументСсылка.РеализацияТоваровУслуг
//
// Возвращаемое значение:
//	Число - Сумма документа - основания, если ДокументОснование не пустая ссылка, 0 в противном случае
//
Функция ПолучитьСуммуДокументаОснования(ДокументОснование) Экспорт
	
	СуммаДокумента = 0;
	
	Если ЗначениеЗаполнено(ДокументОснование) Тогда
		
		Если ТипЗнч(ДокументОснование) = Тип("ДокументСсылка.ЗаказКлиента") Тогда
			ТекстЗапроса = "
			|ВЫБРАТЬ
			|	ДокументПродажи.СуммаДокумента КАК СуммаДокумента
			|ИЗ
			|	Документ.ЗаказКлиента КАК ДокументПродажи
			|ГДЕ
			|	ДокументПродажи.Ссылка = &Ссылка
			|";
		ИначеЕсли ТипЗнч(ДокументОснование) = Тип("ДокументСсылка.ЗаявкаНаВозвратТоваровОтКлиента") Тогда
			ТекстЗапроса = "
			|ВЫБРАТЬ
			|	ДокументПродажи.СуммаЗамены КАК СуммаДокумента
			|ИЗ
			|	Документ.ЗаявкаНаВозвратТоваровОтКлиента КАК ДокументПродажи
			|ГДЕ
			|	ДокументПродажи.Ссылка = &Ссылка
			|";
		ИначеЕсли ТипЗнч(ДокументОснование) = Тип("ДокументСсылка.РеализацияТоваровУслуг") Тогда
			ТекстЗапроса = "
			|ВЫБРАТЬ
			|	ДокументПродажи.СуммаДокумента КАК СуммаДокумента
			|ИЗ
			|	Документ.РеализацияТоваровУслуг КАК ДокументПродажи
			|ГДЕ
			|	ДокументПродажи.Ссылка = &Ссылка
			|";
		ИначеЕсли ТипЗнч(ДокументОснование) = Тип("ДокументСсылка.АктВыполненныхРабот") Тогда
			ТекстЗапроса = "
			|ВЫБРАТЬ
			|	ДокументПродажи.СуммаДокумента КАК СуммаДокумента
			|ИЗ
			|	Документ.АктВыполненныхРабот КАК ДокументПродажи
			|ГДЕ
			|	ДокументПродажи.Ссылка = &Ссылка
			|";
		ИначеЕсли ТипЗнч(ДокументОснование) = Тип("ДокументСсылка.ОтчетКомитенту") Тогда
			ТекстЗапроса = "
			|ВЫБРАТЬ
			|	ДокументПродажи.СуммаВознаграждения КАК СуммаДокумента
			|ИЗ
			|	Документ.ОтчетКомитенту КАК ДокументПродажи
			|ГДЕ
			|	ДокументПродажи.Ссылка = &Ссылка
			|";
		ИначеЕсли ТипЗнч(ДокументОснование) = Тип("ДокументСсылка.ОтчетКомиссионера") Тогда
			ТекстЗапроса = "
			|ВЫБРАТЬ
			|	ДокументПродажи.СуммаДокумента КАК СуммаДокумента
			|ИЗ
			|	Документ.ОтчетКомиссионера КАК ДокументПродажи
			|ГДЕ
			|	ДокументПродажи.Ссылка = &Ссылка
			|";
		ИначеЕсли ТипЗнч(ДокументОснование) = Тип("ДокументСсылка.ОтчетКомиссионераОСписании") Тогда
			ТекстЗапроса = "
			|ВЫБРАТЬ
			|	ДокументПродажи.СуммаДокумента КАК СуммаДокумента
			|ИЗ
			|	Документ.ОтчетКомиссионераОСписании КАК ДокументПродажи
			|ГДЕ
			|	ДокументПродажи.Ссылка = &Ссылка
			|";	
		Иначе
			ТекстЗапроса = "";
		КонецЕсли;
	
		Если Не ПустаяСтрока(ТекстЗапроса) Тогда
			
			Запрос = Новый Запрос(ТекстЗапроса);
			Запрос.УстановитьПараметр("Ссылка", ДокументОснование);
			Выборка = Запрос.Выполнить().Выбрать();
			Если Выборка.Следующий() Тогда
				СуммаДокумента  = Выборка.СуммаДокумента;
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЕсли;
		
	Возврат СуммаДокумента;
	
КонецФункции

Процедура ПроверитьКорректностьХозяйственнойОперацииДокументаОснования(ЕстьОшибкиХозяйственнаяОперация, ХозяйственнаяОперация) Экспорт

	Если ЕстьОшибкиХозяйственнаяОперация Тогда
		
		ТекстОшибки = НСтр("ru='Ввод на основании документа с хозяйственной операцией %ХозяйственнаяОперация% невозможен.'");
		ТекстОшибки = СтрЗаменить(ТекстОшибки, "%ХозяйственнаяОперация%", ХозяйственнаяОперация);
		
		ВызватьИсключение ТекстОшибки;
		
	КонецЕсли;
	
КонецПроцедуры

// Устанавливает статус счетов на оплату клиентам
//
// Параметры:
//	СчетаНаОплату - массив ссылок счетов на оплату
//
Функция УстановитьПризнакАннулирован(Знач СчетаНаОплату) Экспорт
	
	МассивСсылок = Новый Массив();
	КоличествоОбработанных = 0;
	
	Для Каждого СчетНаОплату Из СчетаНаОплату Цикл
	
		Если ТипЗнч(СчетНаОплату) = Тип("СтрокаГруппировкиДинамическогоСписка") Тогда
			Продолжить;
		КонецЕсли;
		
		МассивСсылок.Добавить(СчетНаОплату);
		
	КонецЦикла;
	
	Если МассивСсылок = 0 Тогда
		Возврат КоличествоОбработанных;
	КонецЕсли;
	
	Запрос = Новый Запрос("
		|ВЫБРАТЬ
		|	СчетНаОплатуКлиенту.Ссылка КАК Ссылка
		|ИЗ
		|	Документ.СчетНаОплатуКлиенту КАК СчетНаОплатуКлиенту
		|ГДЕ
		|	СчетНаОплатуКлиенту.Ссылка В(&МассивСсылок)
		|	И Не СчетНаОплатуКлиенту.Аннулирован
		|");
	
	Запрос.УстановитьПараметр("МассивСсылок", МассивСсылок);
	Выборка = Запрос.Выполнить().Выбрать();
		
	НачатьТранзакцию();
	
	Пока Выборка.Следующий() Цикл
		
		Попытка
			ЗаблокироватьДанныеДляРедактирования(Выборка.Ссылка);
		Исключение
			
			ТекстОшибки = НСтр("ru='Не удалось заблокировать %Документ%. %ОписаниеОшибки%'");
			ТекстОшибки = СтрЗаменить(ТекстОшибки, "%Документ%",       Выборка.Ссылка);
			ТекстОшибки = СтрЗаменить(ТекстОшибки, "%ОписаниеОшибки%", КраткоеПредставлениеОшибки(ИнформацияОбОшибке()));
			
			ОтменитьТранзакцию();
			
			ВызватьИсключение ТекстОшибки;
				
		КонецПопытки;
		
		Объект = Выборка.Ссылка.ПолучитьОбъект();
		Объект.Аннулирован = Истина;
		
		НетОшибок = Истина;
		
		Если Объект.Проведен Тогда
			НетОшибок = Объект.ПроверитьЗаполнение();
		КонецЕсли;
			
		Если Не НетОшибок Тогда
			Продолжить;
		КонецЕсли;

		Попытка
			
			Объект.Записать(?(Объект.Проведен, РежимЗаписиДокумента.Проведение, РежимЗаписиДокумента.Запись));
			КоличествоОбработанных = КоличествоОбработанных + 1;
			
		Исключение
			
			ТекстОшибки = НСтр("ru='Не удалось записать %Документ%. %ОписаниеОшибки%'");
			ТекстОшибки = СтрЗаменить(ТекстОшибки, "%Документ%",       Выборка.Ссылка);
			ТекстОшибки = СтрЗаменить(ТекстОшибки, "%ОписаниеОшибки%", КраткоеПредставлениеОшибки(ИнформацияОбОшибке()));
			ОтменитьТранзакцию();
			ВызватьИсключение ТекстОшибки;
			
		КонецПопытки

	КонецЦикла;

	ЗафиксироватьТранзакцию();
	
	Возврат КоличествоОбработанных;

КонецФункции

// Формирует назначение платежа для счета на оплату клиенту
//
// Параметры:
//	Номер - Строка - номер документа основания
//	Префикс - Строка - префикс номера
//	ДокументОснование - ДокументСсылка - документ, который является основанием счета на оплату
//
Функция СформироватьНазначениеПлатежа(Знач Номер, Знач Префикс, Знач ДокументОснование) Экспорт
	
	ТекстДокумента = "";
		
	Если ТипЗнч(ДокументОснование) = Тип("ДокументСсылка.ЗаказКлиента") Тогда
		
		ТекстНазначениеПлатежа = НСтр("ru='Оплата по заказу клиента №%Номер%'");
		
	ИначеЕсли ТипЗнч(ДокументОснование) = Тип("СправочникСсылка.СоглашенияСКлиентами") Тогда
		
		ТекстНазначениеПлатежа = НСтр("ru='Оплата по соглашению №%Номер%'");
		
	ИначеЕсли ТипЗнч(ДокументОснование) = Тип("ДокументСсылка.ЗаявкаНаВозвратТоваровОтКлиента") Тогда
		
		ТекстНазначениеПлатежа = НСтр("ru='Оплата по заявке на возврат №%Номер%'");
		
	ИначеЕсли ТипЗнч(ДокументОснование) = Тип("ДокументСсылка.ОтчетКомиссионераОСписании") Тогда
		
		ТекстНазначениеПлатежа = НСтр("ru='Оплата по отчету комиссионера о списании №%Номер%'");
		
	ИначеЕсли ТипЗнч(ДокументОснование) = Тип("ДокументСсылка.ОтчетКомитенту") Тогда
		
		ТекстНазначениеПлатежа = НСтр("ru='Оплата по отчету комитенту №%Номер%'");
		
	ИначеЕсли ТипЗнч(ДокументОснование) = Тип("ДокументСсылка.ОтчетКомиссионера") Тогда
		
		ТекстНазначениеПлатежа = НСтр("ru='Оплата по отчету комиссионера о продажах №%Номер%'");
		
	ИначеЕсли ТипЗнч(ДокументОснование) = Тип("ДокументСсылка.РеализацияТоваровУслуг") Тогда
		
		ТекстНазначениеПлатежа = НСтр("ru='Оплата по реализации товаров и услуг №%Номер%'");
		
	ИначеЕсли ТипЗнч(ДокументОснование) = Тип("ДокументСсылка.АктВыполненныхРабот") Тогда
		
		ТекстНазначениеПлатежа = НСтр("ru='Оплата по акту выполненных работ №%Номер%'");
		
	ИначеЕсли ТипЗнч(ДокументОснование) = Тип("СправочникСсылка.ДоговорыКонтрагентов") Тогда
		
		ТекстНазначениеПлатежа = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ДокументОснование, "НаименованиеДляПечати");
		
	КонецЕсли;
		
	ТекстНазначениеПлатежа = СтрЗаменить(
		ТекстНазначениеПлатежа,
		"%Номер%",
		ПрефиксацияОбъектовКлиентСервер.ПолучитьНомерНаПечать(Номер, Ложь, Истина)
	);
		
	Возврат ТекстНазначениеПлатежа;
	
КонецФункции

// Возвращает массив имен ролей с правом "Добавление" для данного документа
//
// Возвращаемое значение:
//	Массив - Массив с именами ролей
//
Функция ИменаРолейСПравомДобавления() Экспорт
	
	МассивРолей = Новый Массив;
	МассивРолей.Добавить("ПолныеПрава");
	МассивРолей.Добавить("ДобавлениеИзменениеСчетовНаОплатуКлиентам");
	Возврат МассивРолей;
	
КонецФункции

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ПЕЧАТИ ФОРМЫ

// Сформировать печатные формы объектов
//
// ВХОДЯЩИЕ:
//   ИменаМакетов    - Строка    - Имена макетов, перечисленные через запятую
//   МассивОбъектов  - Массив    - Массив ссылок на объекты которые нужно распечатать
//   ПараметрыПечати - Структура - Структура дополнительных параметров печати
//
// ИСХОДЯЩИЕ:
//   КоллекцияПечатныхФорм - Таблица значений - Сформированные табличные документы
//   ПараметрыВывода       - Структура        - Параметры сформированных табличных документов
//
Процедура Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт
	
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "КомплектДокументов") Тогда
		КоллекцияПечатныхФорм.Очистить();
		СформироватьКомплектПечатныхФорм(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати);
	КонецЕсли;
	
	ФормированиеПечатныхФорм.ЗаполнитьПараметрыОтправки(ПараметрыВывода.ПараметрыОтправки, МассивОбъектов, КоллекцияПечатныхФорм);
	
КонецПроцедуры

// Функция получает данные для формирования печатной формы "Счет на оплату"
//
// Параметры:
//	ПараметрыПечати - Структура
//	МассивОбъектов - Массив - Массив ссылок на документы, по которым необходимо получить данные
//
// Возвращаемое значение:
//	Структура - Структура с полями: "РезультатПоШапке", "РезультатПоЭтапамОплаты", "РезультатПоТабличнойЧасти"
//
Функция ПолучитьДанныеДляПечатнойФормыСчетаНаОплату(ПараметрыПечати, МассивОбъектов) Экспорт
	
	МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	ОтветственныеЛицаСервер.СформироватьВременнуюТаблицуОтветственныхЛицДокументов(МассивОбъектов, МенеджерВременныхТаблиц);	
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	Документы.Ссылка КАК Ссылка,
	|	Документы.ДокументОснование КАК ДокументОснование
	|ПОМЕСТИТЬ ТаблицаДокументов
	|ИЗ
	|	Документ.СчетНаОплатуКлиенту КАК Документы
	|ГДЕ
	|	Документы.Ссылка В(&МассивОбъектов)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Ссылка,
	|	ДокументОснование
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Документы.Ссылка КАК Ссылка,
	|	Документы.Номер КАК Номер,
	|	Документы.Дата КАК Дата,
	|	Документы.ДокументОснование КАК ДокументОснование,
	|	ЕСТЬNULL(Документы.БанковскийСчет.Владелец, Документы.Организация) КАК Организация,
	|	Документы.Организация КАК ОрганизацияПоставщик,
	|	ТаблицаОтветственныеЛица.РуководительНаименование КАК Руководитель,
	|	ТаблицаОтветственныеЛица.РуководительДолжность КАК ДолжностьРуководителя,
	|	ТаблицаОтветственныеЛица.ГлавныйБухгалтерНаименование КАК ГлавныйБухгалтер,
	|	Документы.Организация.Префикс КАК Префикс,
	|	Документы.Контрагент КАК Контрагент,
	|	Документы.БанковскийСчет КАК БанковскийСчет,
	|	Документы.БанковскийСчет.ТекстКорреспондента КАК БанковскийСчетТекстКорреспондента,
	|	ВЫБОР
	|		КОГДА Документы.ДокументОснование ССЫЛКА Документ.ОтчетКомитенту
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ Документы.ДокументОснование.ЦенаВключаетНДС
	|	КОНЕЦ КАК ЦенаВключаетНДС,
	|	Документы.ДокументОснование.СуммаДокумента КАК СуммаКВозврату,
	|	ВЫБОР
	|		КОГДА Документы.ДокументОснование.НалогообложениеНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаНеОблагаетсяНДС)
	|			ТОГДА ЛОЖЬ
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ КАК УчитыватьНДС,
	|	Документы.Валюта КАК Валюта,
	|	Документы.Менеджер.ФизическоеЛицо.Наименование КАК Менеджер,
	|	Документы.ДополнительнаяИнформация КАК ДополнительнаяИнформация,
	|	Документы.ЧастичнаяОплата КАК ЧастичнаяОплата,
	|	Документы.НазначениеПлатежа КАК НазначениеПлатежа,
	|	ВЫБОР
	|		КОГДА Документы.ДокументОснование.СуммаДокумента = 0
	|			ТОГДА 0
	|		ИНАЧЕ Документы.СуммаДокумента * 100 / Документы.ДокументОснование.СуммаДокумента
	|	КОНЕЦ КАК ПроцентОплаты,
	|	Документы.СуммаДокумента КАК СуммаДокумента,
	|	ВЫБОР
	|		КОГДА ЗаявкаНаВозвратТоваровОтКлиента.Ссылка ЕСТЬ NULL 
	|			ТОГДА ЛОЖЬ
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ КАК СчетКВозврату
	|ИЗ
	|	Документ.СчетНаОплатуКлиенту КАК Документы
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ЗаявкаНаВозвратТоваровОтКлиента КАК ЗаявкаНаВозвратТоваровОтКлиента
	|		ПО Документы.ДокументОснование = ЗаявкаНаВозвратТоваровОтКлиента.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ ТаблицаОтветственныеЛица КАК ТаблицаОтветственныеЛица
	|		ПО Документы.Ссылка = ТаблицаОтветственныеЛица.Ссылка
	|ГДЕ
	|	Документы.Ссылка В
	|			(ВЫБРАТЬ
	|				ТаблицаДокументов.Ссылка
	|			ИЗ
	|				ТаблицаДокументов)
	|
	|УПОРЯДОЧИТЬ ПО
	|	Документы.МоментВремени
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЭтапыГрафикаОплаты.Ссылка КАК Ссылка,
	|	ЭтапыГрафикаОплаты.НомерСтроки КАК НомерСтроки,
	|	ЭтапыГрафикаОплаты.ДатаПлатежа КАК ДатаПлатежа,
	|	ЭтапыГрафикаОплаты.ПроцентПлатежа КАК ПроцентПлатежа,
	|	ЭтапыГрафикаОплаты.СуммаПлатежа КАК СуммаПлатежа
	|ИЗ
	|	Документ.СчетНаОплатуКлиенту.ЭтапыГрафикаОплаты КАК ЭтапыГрафикаОплаты
	|ГДЕ
	|	ЭтапыГрафикаОплаты.Ссылка В
	|			(ВЫБРАТЬ
	|				ТаблицаДокументов.Ссылка
	|			ИЗ
	|				ТаблицаДокументов)
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаДокументов.Ссылка КАК Ссылка,
	|	Товары.НомерСтроки КАК НомерСтроки,
	|	Товары.Номенклатура КАК Номенклатура,
	|	Товары.Номенклатура.Код КАК Код,
	|	Товары.Номенклатура.Артикул КАК Артикул,
	|	Товары.Номенклатура.НаименованиеПолное КАК НаименованиеПолное,
	|	ВЫБОР
	|		КОГДА Товары.Упаковка = ЗНАЧЕНИЕ(Справочник.УпаковкиНоменклатуры.ПустаяСсылка)
	|			ТОГДА ПРЕДСТАВЛЕНИЕ(Товары.Номенклатура.ЕдиницаИзмерения)
	|		ИНАЧЕ ПРЕДСТАВЛЕНИЕ(Товары.Упаковка.ЕдиницаИзмерения)
	|	КОНЕЦ КАК ЕдиницаИзмерения,
	|	Товары.КоличествоУпаковок КАК Количество,
	|	Товары.Цена КАК Цена,
	|	Товары.Сумма КАК Сумма,
	|	Товары.СтавкаНДС КАК СтавкаНДС,
	|	Товары.СуммаНДС КАК СуммаНДС,
	|	Товары.Характеристика.НаименованиеПолное КАК Характеристика,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(Товары.Упаковка.Коэффициент, 1) = 1
	|			ТОГДА НЕОПРЕДЕЛЕНО
	|		ИНАЧЕ Товары.Упаковка.Наименование
	|	КОНЕЦ КАК Упаковка,
	|	Товары.СуммаРучнойСкидки + Товары.СуммаАвтоматическойСкидки КАК СуммаСкидки,
	|	Товары.Сумма + Товары.СуммаРучнойСкидки + Товары.СуммаАвтоматическойСкидки КАК СуммаБезСкидки,
	|	Товары.Содержание КАК Содержание
	|ИЗ
	|	ТаблицаДокументов КАК ТаблицаДокументов
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ЗаказКлиента.Товары КАК Товары
	|		ПО ТаблицаДокументов.ДокументОснование = Товары.Ссылка
	|			И (Товары.Отменено = ЛОЖЬ)
	|		И (Товары.Номенклатура.ТипНоменклатуры <> ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара)
	|			ИЛИ Товары.Номенклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара)
	|			И НЕ Товары.Ссылка.ВернутьМногооборотнуюТару)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ТаблицаДокументов.Ссылка,
	|	Товары.НомерСтроки,
	|	Товары.Номенклатура,
	|	Товары.Номенклатура.Код,
	|	Товары.Номенклатура.Артикул,
	|	Товары.Номенклатура.НаименованиеПолное,
	|	ВЫБОР
	|		КОГДА Товары.Упаковка = ЗНАЧЕНИЕ(Справочник.УпаковкиНоменклатуры.ПустаяСсылка)
	|			ТОГДА ПРЕДСТАВЛЕНИЕ(Товары.Номенклатура.ЕдиницаИзмерения)
	|		ИНАЧЕ ПРЕДСТАВЛЕНИЕ(Товары.Упаковка.ЕдиницаИзмерения)
	|	КОНЕЦ,
	|	Товары.КоличествоУпаковок,
	|	Товары.Цена,
	|	Товары.Сумма,
	|	Товары.СтавкаНДС,
	|	Товары.СуммаНДС,
	|	Товары.Характеристика.НаименованиеПолное,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(Товары.Упаковка.Коэффициент, 1) = 1
	|			ТОГДА НЕОПРЕДЕЛЕНО
	|		ИНАЧЕ Товары.Упаковка.Наименование
	|	КОНЕЦ,
	|	Товары.СуммаРучнойСкидки + Товары.СуммаАвтоматическойСкидки,
	|	Товары.Сумма + Товары.СуммаРучнойСкидки + Товары.СуммаАвтоматическойСкидки,
	|	Товары.Содержание
	|ИЗ
	|	ТаблицаДокументов КАК ТаблицаДокументов
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ЗаявкаНаВозвратТоваровОтКлиента.ЗаменяющиеТовары КАК Товары
	|		ПО ТаблицаДокументов.ДокументОснование = Товары.Ссылка
	|			И (Товары.Отменено = ЛОЖЬ)
	|		И (Товары.Номенклатура.ТипНоменклатуры <> ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара)
	|			ИЛИ Товары.Номенклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара)
	|			И НЕ Товары.Ссылка.ВернутьМногооборотнуюТару)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ТаблицаДокументов.Ссылка,
	|	Товары.НомерСтроки,
	|	Товары.Номенклатура,
	|	Товары.Номенклатура.Код,
	|	Товары.Номенклатура.Артикул,
	|	Товары.Номенклатура.НаименованиеПолное,
	|	ВЫБОР
	|		КОГДА Товары.Упаковка = ЗНАЧЕНИЕ(Справочник.УпаковкиНоменклатуры.ПустаяСсылка)
	|			ТОГДА ПРЕДСТАВЛЕНИЕ(Товары.Номенклатура.ЕдиницаИзмерения)
	|		ИНАЧЕ ПРЕДСТАВЛЕНИЕ(Товары.Упаковка.ЕдиницаИзмерения)
	|	КОНЕЦ,
	|	Товары.КоличествоУпаковок,
	|	Товары.Цена,
	|	Товары.Сумма,
	|	Товары.СтавкаНДС,
	|	Товары.СуммаНДС,
	|	Товары.Характеристика.НаименованиеПолное,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(Товары.Упаковка.Коэффициент, 1) = 1
	|			ТОГДА НЕОПРЕДЕЛЕНО
	|		ИНАЧЕ Товары.Упаковка.Наименование
	|	КОНЕЦ,
	|	Товары.СуммаРучнойСкидки + Товары.СуммаАвтоматическойСкидки,
	|	Товары.Сумма + Товары.СуммаРучнойСкидки + Товары.СуммаАвтоматическойСкидки,
	|	NULL
	|ИЗ
	|	ТаблицаДокументов КАК ТаблицаДокументов
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.РеализацияТоваровУслуг.Товары КАК Товары
	|		ПО ТаблицаДокументов.ДокументОснование = Товары.Ссылка
	|		И (Товары.Номенклатура.ТипНоменклатуры <> ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара)
	|			ИЛИ Товары.Номенклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара)
	|			И НЕ Товары.Ссылка.ВернутьМногооборотнуюТару)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ТаблицаДокументов.Ссылка,
	|	Услуги.НомерСтроки,
	|	Услуги.Номенклатура,
	|	Услуги.Номенклатура.Код,
	|	Услуги.Номенклатура.Артикул,
	|	Услуги.Номенклатура.НаименованиеПолное,
	|	Услуги.Номенклатура.ЕдиницаИзмерения,
	|	Услуги.Количество,
	|	Услуги.Цена,
	|	Услуги.Сумма,
	|	Услуги.СтавкаНДС,
	|	Услуги.СуммаНДС,
	|	Услуги.Характеристика.НаименованиеПолное,
	|	НЕОПРЕДЕЛЕНО,
	|	Услуги.СуммаРучнойСкидки + Услуги.СуммаАвтоматическойСкидки,
	|	Услуги.Сумма + Услуги.СуммаРучнойСкидки + Услуги.СуммаАвтоматическойСкидки,
	|	Услуги.Содержание
	|ИЗ
	|	ТаблицаДокументов КАК ТаблицаДокументов
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.АктВыполненныхРабот.Услуги КАК Услуги
	|		ПО ТаблицаДокументов.ДокументОснование = Услуги.Ссылка
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ТаблицаДокументов.Ссылка,
	|	1,
	|	Основание.Услуга,
	|	Основание.Услуга.Код,
	|	Основание.Услуга.Артикул,
	|	Основание.Услуга.НаименованиеПолное,
	|	Основание.Услуга.ЕдиницаИзмерения.Наименование,
	|	1,
	|	Основание.СуммаВознаграждения,
	|	Основание.СуммаВознаграждения,
	|	Основание.СтавкаНДСВознаграждения,
	|	Основание.СуммаНДСВознаграждения,
	|	ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка),
	|	НЕОПРЕДЕЛЕНО,
	|	0,
	|	Основание.СуммаВознаграждения,
	|	NULL
	|ИЗ
	|	ТаблицаДокументов КАК ТаблицаДокументов
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ОтчетКомитенту КАК Основание
	|		ПО ТаблицаДокументов.ДокументОснование = Основание.Ссылка
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ТаблицаДокументов.Ссылка,
	|	Товары.НомерСтроки,
	|	Товары.Номенклатура,
	|	Товары.Номенклатура.Код,
	|	Товары.Номенклатура.Артикул,
	|	Товары.Номенклатура.НаименованиеПолное,
	|	ВЫБОР
	|		КОГДА Товары.Упаковка = ЗНАЧЕНИЕ(Справочник.УпаковкиНоменклатуры.ПустаяСсылка)
	|			ТОГДА ПРЕДСТАВЛЕНИЕ(Товары.Номенклатура.ЕдиницаИзмерения)
	|		ИНАЧЕ ПРЕДСТАВЛЕНИЕ(Товары.Упаковка.ЕдиницаИзмерения)
	|	КОНЕЦ,
	|	Товары.КоличествоУпаковок,
	|	Товары.ЦенаПродажи,
	|	Товары.СуммаПродажи,
	|	Товары.СтавкаНДС,
	|	Товары.СуммаПродажиНДС,
	|	Товары.Характеристика.НаименованиеПолное,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(Товары.Упаковка.Коэффициент, 1) = 1
	|			ТОГДА НЕОПРЕДЕЛЕНО
	|		ИНАЧЕ Товары.Упаковка.Наименование
	|	КОНЕЦ,
	|	0,
	|	Товары.СуммаПродажи,
	|	NULL
	|ИЗ
	|	ТаблицаДокументов КАК ТаблицаДокументов
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ОтчетКомиссионера.Товары КАК Товары
	|		ПО ТаблицаДокументов.ДокументОснование = Товары.Ссылка
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ТаблицаДокументов.Ссылка,
	|	Товары.НомерСтроки,
	|	Товары.Номенклатура,
	|	Товары.Номенклатура.Код,
	|	Товары.Номенклатура.Артикул,
	|	Товары.Номенклатура.НаименованиеПолное,
	|	ВЫБОР
	|		КОГДА Товары.Упаковка = ЗНАЧЕНИЕ(Справочник.УпаковкиНоменклатуры.ПустаяСсылка)
	|			ТОГДА ПРЕДСТАВЛЕНИЕ(Товары.Номенклатура.ЕдиницаИзмерения)
	|		ИНАЧЕ ПРЕДСТАВЛЕНИЕ(Товары.Упаковка.ЕдиницаИзмерения)
	|	КОНЕЦ,
	|	Товары.КоличествоУпаковок,
	|	Товары.Цена,
	|	Товары.Сумма,
	|	Товары.СтавкаНДС,
	|	Товары.СуммаНДС,
	|	Товары.Характеристика.НаименованиеПолное,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(Товары.Упаковка.Коэффициент, 1) = 1
	|			ТОГДА НЕОПРЕДЕЛЕНО
	|		ИНАЧЕ Товары.Упаковка.Наименование
	|	КОНЕЦ,
	|	0,
	|	Товары.Сумма,
	|	NULL
	|ИЗ
	|	ТаблицаДокументов КАК ТаблицаДокументов
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ОтчетКомиссионераОСписании.Товары КАК Товары
	|		ПО ТаблицаДокументов.ДокументОснование = Товары.Ссылка
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки";
	
	Запрос.УстановитьПараметр("МассивОбъектов", МассивОбъектов);
	
	ПакетРезультатовЗапроса = Запрос.ВыполнитьПакет();
	
	СтруктураДанныхДляПечати = Новый Структура;
	СтруктураДанныхДляПечати.Вставить("РезультатПоШапке", ПакетРезультатовЗапроса[1]);
	СтруктураДанныхДляПечати.Вставить("РезультатПоЭтапамОплаты", ПакетРезультатовЗапроса[2]);
	СтруктураДанныхДляПечати.Вставить("РезультатПоТабличнойЧасти", ПакетРезультатовЗапроса[3]);
	
	Возврат СтруктураДанныхДляПечати;
	
КонецФункции

Функция СформироватьКомплектПечатныхФорм(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати) Экспорт
	
	Перем АдресКомплектаПечатныхФорм;
	
	Если ТипЗнч(ПараметрыПечати) = Тип("Структура") И ПараметрыПечати.Свойство("АдресКомплектаПечатныхФорм", АдресКомплектаПечатныхФорм) Тогда
		
		КомплектПечатныхФорм = ПолучитьИзВременногоХранилища(АдресКомплектаПечатныхФорм);
		
	Иначе
		
		КомплектПечатныхФорм = РегистрыСведений.НастройкиПечатиОбъектов.КомплектПечатныхФорм(
			Метаданные.Документы.СчетНаОплатуКлиенту.ПолноеИмя(),
			МассивОбъектов, Неопределено
		);
		
	КонецЕсли;
	
	Если КомплектПечатныхФорм = Неопределено Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	СтруктураТипов = Новый Соответствие;
	СтруктураТипов.Вставить("Документ.СчетНаОплатуКлиенту", МассивОбъектов);
	
	ИмяМакета = "СчетНаОплату";
	ТекущийКомплект = КомплектПечатныхФорм.Скопировать(Новый Структура("Имя,Печатать,",ИмяМакета,Истина));
	Если ТекущийКомплект.Количество() > 0 Тогда
		Если ТекущийКомплект.Колонки.Найти("Ссылка") <> Неопределено И ЗначениеЗаполнено(ТекущийКомплект[0].Ссылка) Тогда
			РегистрыСведений.НастройкиПечатиОбъектов.СкопироватьПечатнуюФормуВКоллекциюОдинЭкземпляр(КоллекцияПечатныхФорм, ИмяМакета);
			ТаблицаСсылок = ТекущийКомплект.Скопировать(,"Ссылка");
			ТаблицаСсылок.Свернуть("Ссылка");
			ТекущаяСтруктураТипов = Новый Соответствие;
			ТекущаяСтруктураТипов.Вставить("Документ.РеализацияТоваровУслуг", ТаблицаСсылок.ВыгрузитьКолонку("Ссылка"));
		Иначе
			РегистрыСведений.НастройкиПечатиОбъектов.СкопироватьПечатнуюФормуВКоллекцию(КоллекцияПечатныхФорм, ТекущийКомплект[0]);
			ТекущаяСтруктураТипов = СтруктураТипов;
		КонецЕсли;
		
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(
			КоллекцияПечатныхФорм,
			ИмяМакета,
			ТекущийКомплект[0].Представление,
			Обработки.ПечатьСчетовНаОплату.СформироватьПечатнуюФормуСчетНаОплату(ТекущаяСтруктураТипов, ОбъектыПечати, ПараметрыПечати, ТекущийКомплект)
		);
	КонецЕсли;
	
	РегистрыСведений.НастройкиПечатиОбъектов.СформироватьКомплектВнешнихПечатныхФорм(
		"Документ.СчетНаОплатуКлиенту",
		МассивОбъектов,
		ПараметрыПечати,
		КоллекцияПечатныхФорм,
		ОбъектыПечати
	);
	
КонецФункции

Функция КомплектПечатныхФорм() Экспорт
	
	КомплектПечатныхФорм = РегистрыСведений.НастройкиПечатиОбъектов.ПодготовитьКомплектПечатныхФорм();
	РегистрыСведений.НастройкиПечатиОбъектов.ДобавитьПечатнуюФормуВКомплект(КомплектПечатныхФорм, "СчетНаОплату", "Счет на оплату", 1);
	
	Возврат КомплектПечатныхФорм;
	
КонецФункции

Процедура ЗаполнитьСтруктуруПолучателейПечатныхФорм(СтруктураДанныхОбъектаПечати) Экспорт
	
	СтруктураДанныхОбъектаПечати.ОсновнойПолучатель = "Партнер";
	
	СтруктураДанныхОбъектаПечати.МассивРеквизитовПолучателей.Добавить("Партнер");
	Если ПолучитьФункциональнуюОпцию("ИспользоватьПартнеровИКонтрагентов") Тогда 
		СтруктураДанныхОбъектаПечати.МассивРеквизитовПолучателей.Добавить("Контрагент");
	КонецЕсли;
	СтруктураДанныхОбъектаПечати.МассивРеквизитовПолучателей.Добавить("КонтактноеЛицо");
	
КонецПроцедуры

#КонецЕсли