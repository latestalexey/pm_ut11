////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// Пропускаем инициализацию, чтобы гарантировать получение формы при передаче параметра "АвтоТест".
	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;
	КонецЕсли;
	
	АвтоЗаголовок = Ложь;
	Заголовок = НСтр("ru = 'Параметры обеспечения потребностей'");
	
	Если Параметры.Свойство("ДокументОснование") Тогда
		ДокументОснование = Параметры.ДокументОснование;
	Иначе
		ТекстИсключения = Нстр("ru='Не указан документ-основание. Открытие формы не возможно.'");
		Отказ = Истина;
		ВызватьИсключение ТекстИсключения;
	КонецЕсли;
	//
	Если НЕ ДокументОснование.Проведен Тогда
		ТекстИсключения = Нстр("ru='Документ-основание " + ДокументОснование + " не проведен. Установка параметров не возможна.'");
		Отказ = Истина;
		ВызватьИсключение ТекстИсключения;
	КонецЕсли;
	//
	
	СписокНоменклатуры = МассивНоменклатурыОснования();
	СписокМагазинов = МассивМагазиновОснования();
	
	ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбора(
		ПараметрыОбеспеченияТоварами.Отбор, 
		"Номенклатура", 
		СписокНоменклатуры, 
		ВидСравненияКомпоновкиДанных.ВСписке,
		"Номенклатура", 
		Истина
	);
	
	ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбора(
		ПараметрыОбеспеченияТоварами.Отбор, 
		"Склад", 
		СписокМагазинов, 
		ВидСравненияКомпоновкиДанных.ВСписке,
		"Склад", 
		Истина
	);
	
	ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбора(
		НастройкаУровняОбслуживания.Отбор, 
		"Номенклатура", 
		СписокНоменклатуры, 
		ВидСравненияКомпоновкиДанных.ВСписке,
		"Номенклатура", 
		Истина
	);
	
	ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбора(
		НастройкаУровняОбслуживания.Отбор, 
		"Склад", 
		СписокМагазинов, 
		ВидСравненияКомпоновкиДанных.ВСписке,
		"Склад", 
		Истина
	);
	
	ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбора(
		ТоварныеОграничения.Отбор, 
		"Номенклатура", 
		СписокНоменклатуры, 
		ВидСравненияКомпоновкиДанных.ВСписке,
		"Номенклатура", 
		Истина
	);
	
	ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбора(
		ТоварныеОграничения.Отбор, 
		"Склад", 
		СписокМагазинов, 
		ВидСравненияКомпоновкиДанных.ВСписке,
		"Склад", 
		Истина
	);
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ КОМАНД ФОРМЫ

&НаКлиенте
Процедура ЗаполнитьМетодыПоУмолчанию(Команда)
	ЗаполнитьМетодыПоУмолчаниюНаСервере();
	ОповеститьОбИзменении(Тип("РегистрСведенийКлючЗаписи.ПараметрыОбеспеченияТоварами"));
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьОграниченияПоУмолчанию(Команда)
	ЗаполнитьОграниченияПоУмолчаниюНаСервере();
	ОповеститьОбИзменении(Тип("РегистрСведенийКлючЗаписи.ТоварныеОграничения"));
КонецПроцедуры

&НаКлиенте
Процедура УстановитьМетодВыделенным(Команда)
	
	СтрокиДляОбработки = Элементы.ПараметрыОбеспеченияТоварами.ВыделенныеСтроки;
	Если СтрокиДляОбработки.Количество() > 0 Тогда
		ФормаВыбораМетода = ПолучитьФорму("Перечисление.МетодыУправленияЗапасами.ФормаВыбора");
		ВыбранныйМетод = ФормаВыбораМетода.ОткрытьМодально();
		Если ВыбранныйМетод <> Неопределено Тогда
			ЗаписатьУстановленныеМетодыНаСервере(СтрокиДляОбработки, ВыбранныйМетод);
			ОповеститьОбИзменении(Тип("РегистрСведенийКлючЗаписи.ПараметрыОбеспеченияТоварами"));
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьОграниченияВыделенным(Команда)
	
	СтрокиДляОбработки = Элементы.ТоварныеОграничения.ВыделенныеСтроки;
	Если СтрокиДляОбработки.Количество() > 0 Тогда
		ФормаВыбораОграничений = ПолучитьФорму("Документ.ИзменениеАссортимента.Форма.ВыборЗначенийТоварныхОграничений");
		СтруктураОграничений = ФормаВыбораОграничений.ОткрытьМодально();
		Если СтруктураОграничений <> Неопределено Тогда
			ЗаписатьУстановленныеОграниченияНаСервере(СтрокиДляОбработки, СтруктураОграничений);
			ОповеститьОбИзменении(Тип("РегистрСведенийКлючЗаписи.ТоварныеОграничения"));
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ДЛЯ КОМАНД

&НаСервере
Процедура ЗаполнитьМетодыПоУмолчаниюНаСервере()
	
	
	МассивНоменклатуры = МассивНоменклатурыОснования();
	МассивМагазинов = МассивМагазиновОснования();
	Запрос = Новый Запрос("ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	СправочникНоменклатура.Ссылка КАК Номенклатура,
	|	Склады.Ссылка КАК Склад,
	|	ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка) КАК Характеристика,
	|	ЗНАЧЕНИЕ(Перечисление.МетодыУправленияЗапасами.ЗаказПодЗаказ) КАК МетодУправления,
	|	ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка) КАК Подразделение
	|ИЗ
	|	Справочник.Номенклатура КАК СправочникНоменклатура
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Склады КАК Склады
	|		ПО (ИСТИНА)
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПараметрыОбеспеченияТоварами КАК ПараметрыОбеспеченияТоварами
	|		ПО (ПараметрыОбеспеченияТоварами.Номенклатура = СправочникНоменклатура.Ссылка)
	|			И (ПараметрыОбеспеченияТоварами.Склад = Склады.Ссылка)
	|ГДЕ
	|	СправочникНоменклатура.Ссылка В(&МассивНоменклатуры)
	|	И Склады.Ссылка В(&МассивМагазинов)
	|	И ПараметрыОбеспеченияТоварами.МетодУправления ЕСТЬ NULL ");
	Запрос.УстановитьПараметр("МассивНоменклатуры", МассивНоменклатуры);
	Запрос.УстановитьПараметр("МассивМагазинов", МассивМагазинов);
	Выборка = Запрос.Выполнить().Выбрать();
	НаборМетодов = РегистрыСведений.ПараметрыОбеспеченияТоварами.СоздатьНаборЗаписей();
	
	Пока Выборка.Следующий() Цикл
		НоваяЗаписьМетода = НаборМетодов.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяЗаписьМетода, Выборка);
	КонецЦикла;
	//т.к. методы дополняются, то перезаписывать существующие не нужно...
	НаборМетодов.Записать(Ложь);
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьОграниченияПоУмолчаниюНаСервере()
	
	МассивНоменклатуры = МассивНоменклатурыОснования();
	МассивМагазинов = МассивМагазиновОснования();
	Запрос = Новый Запрос("ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	СправочникНоменклатура.Ссылка КАК Номенклатура,
	|	Склады.Ссылка КАК Склад,
	|	ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка) КАК Характеристика,
	|	1 КАК СтраховоеКоличествоЗапаса
	|ИЗ
	|	Справочник.Номенклатура КАК СправочникНоменклатура
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Склады КАК Склады
	|		ПО (ИСТИНА)
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ТоварныеОграничения КАК ПараметрыОбеспеченияТоварами
	|		ПО (ПараметрыОбеспеченияТоварами.Номенклатура = СправочникНоменклатура.Ссылка)
	|			И (ПараметрыОбеспеченияТоварами.Склад = Склады.Ссылка)
	|ГДЕ
	|	СправочникНоменклатура.Ссылка В(&МассивНоменклатуры)
	|	И Склады.Ссылка В(&МассивМагазинов)
	|	И ПараметрыОбеспеченияТоварами.СтраховоеКоличествоЗапаса ЕСТЬ NULL ");
	Запрос.УстановитьПараметр("МассивНоменклатуры", МассивНоменклатуры);
	Запрос.УстановитьПараметр("МассивМагазинов", МассивМагазинов);
	Выборка = Запрос.Выполнить().Выбрать();
	НаборОграничений = РегистрыСведений.ТоварныеОграничения.СоздатьНаборЗаписей();
	
	Пока Выборка.Следующий() Цикл
		НоваяЗаписьОграничения = НаборОграничений.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяЗаписьОграничения, Выборка);
	КонецЦикла;
	//т.к. ограничения дополняются, то перезаписывать существующие не нужно...
	НаборОграничений.Записать(Ложь);
	
КонецПроцедуры

&НаСервере
Процедура ЗаписатьУстановленныеМетодыНаСервере(СтрокиДляОбработки, ВыбранныйМетод)
	
	Для Каждого СтрокаМетодов ИЗ СтрокиДляОбработки Цикл
		НоваяЗапись = РегистрыСведений.ПараметрыОбеспеченияТоварами.СоздатьМенеджерЗаписи();
		ЗаполнитьЗначенияСвойств(НоваяЗапись, СтрокаМетодов, "Склад, Номенклатура, Характеристика");
		НоваяЗапись.Прочитать();
		НоваяЗапись.МетодУправления = ВыбранныйМетод;
		НоваяЗапись.Записать(Истина);
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ЗаписатьУстановленныеОграниченияНаСервере(СтрокиДляОбработки, СтруктураОграничений)
	
	Для Каждого СтрокаОграничений ИЗ СтрокиДляОбработки Цикл
		НоваяЗапись = РегистрыСведений.ТоварныеОграничения.СоздатьМенеджерЗаписи();
		ЗаполнитьЗначенияСвойств(НоваяЗапись, СтрокаОграничений, "Склад, Номенклатура, Характеристика");
		НоваяЗапись.Прочитать();
		Для Каждого ЭлементОграничений ИЗ СтруктураОграничений Цикл
			НоваяЗапись[ЭлементОграничений.Ключ] = СтруктураОграничений[ЭлементОграничений.Ключ];
		КонецЦикла;
		НоваяЗапись.Записать(Истина);
	КонецЦикла;
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЧИЕ

Функция МассивМагазиновОснования()
	
	МассивМагазинов = Новый Массив;
	ЗапросМагазины = Новый Запрос("ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	Склады.Ссылка КАК Ссылка
	|ИЗ
	|	Справочник.Склады КАК Склады
	|ГДЕ
	|	Склады.ТипСклада = ЗНАЧЕНИЕ(Перечисление.ТипыСкладов.РозничныйМагазин)
	|	И Склады.ФорматМагазина = &ФорматМагазина");
	ЗапросМагазины.УстановитьПараметр("ФорматМагазина", ДокументОснование.ОбъектПланирования);
	МассивМагазинов = ЗапросМагазины.Выполнить().Выгрузить().ВыгрузитьКолонку("Ссылка");
	
	Возврат МассивМагазинов;
	
КонецФункции

Функция МассивНоменклатурыОснования()
	
	МассивНоменклатуры = Новый Массив;
	МассивНоменклатуры = ДокументОснование.Товары.ВыгрузитьКолонку("Номенклатура");
	
	Возврат МассивНоменклатуры;
	
КонецФункции
