#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

///////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

///////////////////////////////////////////////////////////////////////////////
// Печать

Процедура Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт
	
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "КассоваяКнига") Тогда
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(
			КоллекцияПечатныхФорм,
			"КассоваяКнига",
			"Кассовая книга",
			СформироватьПечатнуюФормуЛистаКассовойКниги(МассивОбъектов, ОбъектыПечати)
		);
	КонецЕсли;
		
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "Обложка") Тогда
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(
			КоллекцияПечатныхФорм,
			"Обложка",
			"Титульный лист кассовой книги",
			СформироватьПечатнуюФормуОбложкиИПоследнегоЛистаКассовойКниги(МассивОбъектов, ОбъектыПечати)
		);
	КонецЕсли;
	
КонецПроцедуры

Функция ПолучитьКоличествоЛистовКассовойКнигиЗаПериодПоОрганизации(Организация, ДатаНач, ДатаКон)
	
	Запрос = Новый Запрос("
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ КассоваяКнигаДокументы.НомерЛиста) КАК КоличествоЛистов
	|ИЗ
	|	Документ.КассоваяКнига КАК ДанныеДокумента
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		Документ.КассоваяКнига.Документы КАК КассоваяКнигаДокументы
	|	ПО	
	|		ДанныеДокумента.Ссылка = КассоваяКнигаДокументы.Ссылка
	|ГДЕ
	|	ДанныеДокумента.Дата МЕЖДУ &ДатаНач И &ДатаКон
	|	И ДанныеДокумента.Организация = &Организация
	|	И ДанныеДокумента.Проведен
	|");
	
	Запрос.УстановитьПараметр("ДатаНач",     ДатаНач);
	Запрос.УстановитьПараметр("ДатаКон",     ДатаКон);
	Запрос.УстановитьПараметр("Организация", Организация);
	
	Результат = Запрос.Выполнить();
	Выборка = Результат.Выбрать();
	
	Если Выборка.Следующий() Тогда
		Возврат Выборка.КоличествоЛистов;
	Иначе
		Возврат 0;
	КонецЕсли;
	
КонецФункции

Процедура ДобавитьОбороты(РабочаяТаблица, Валюта, ВалПриход, Приход, ВалРасход, Расход)
	
	СтрокаТаблицы = РабочаяТаблица.Найти(Валюта, "Валюта");
	
	Если СтрокаТаблицы = Неопределено Тогда
		
		НоваяСтрока = РабочаяТаблица.Добавить();
		
		НоваяСтрока.Валюта     = Валюта;
		НоваяСтрока.ВалОстаток = 0;
		НоваяСтрока.Остаток    = 0;
		НоваяСтрока.ВалПриход  = ВалПриход;
		НоваяСтрока.Приход     = Приход;
		НоваяСтрока.ВалРасход  = ВалРасход;
		НоваяСтрока.Расход     = Расход;
		
	Иначе
		
		СтрокаТаблицы.ВалПриход = СтрокаТаблицы.ВалПриход + ?(ВалПриход=null,0,ВалПриход);
		СтрокаТаблицы.Приход    = СтрокаТаблицы.Приход    + ?(Приход=null,0,Приход);
		СтрокаТаблицы.ВалРасход = СтрокаТаблицы.ВалРасход + ?(ВалРасход=null,0,ВалРасход);
		СтрокаТаблицы.Расход    = СтрокаТаблицы.Расход    + ?(Расход=null,0,Расход);
		
	КонецЕсли;
	
КонецПроцедуры

Функция СформироватьПечатнуюФормуОбложкиИПоследнегоЛистаКассовойКниги(МассивОбъектов, ОбъектыПечати)
	
	// Печать обложки и титульного листа
	ТабличныйДокумент = Новый ТабличныйДокумент;
	МакетОбложка 	  = УправлениеПечатью.ПолучитьМакет("Документ.КассоваяКнига.ПФ_MXL_Обложка");
	ОбластьОбложка 	  = МакетОбложка.ПолучитьОбласть("Обложка");
	
	МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	ОтветственныеЛицаСервер.СформироватьВременнуюТаблицуОтветственныхЛицДокументов(МассивОбъектов, МенеджерВременныхТаблиц);	
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.Текст =
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	НАЧАЛОПЕРИОДА(КассоваяКнига.Дата, ГОД) КАК Год,
	|	КассоваяКнига.Организация КАК Организация,
	|	ВЫРАЗИТЬ(ТаблицаОтветственныеЛица.РуководительНаименование КАК СТРОКА(1000)) КАК Руководитель,
	|	ВЫРАЗИТЬ(ТаблицаОтветственныеЛица.РуководительДолжность КАК СТРОКА(1000)) КАК ДолжностьРуководителя,
	|	ВЫРАЗИТЬ(ТаблицаОтветственныеЛица.ГлавныйБухгалтерНаименование КАК СТРОКА(1000)) КАК ГлавныйБухгалтер,
	|	КассоваяКнига.Организация.КодПоОКПО КАК КодПоОКПО,
	|	ПОДСТРОКА(КассоваяКнига.Организация.НаименованиеПолное, 1, 200) КАК НаименованиеОрганизации
	|ИЗ
	|	Документ.КассоваяКнига КАК КассоваяКнига
	|		ЛЕВОЕ СОЕДИНЕНИЕ ТаблицаОтветственныеЛица КАК ТаблицаОтветственныеЛица
	|		ПО КассоваяКнига.Ссылка = ТаблицаОтветственныеЛица.Ссылка
	|ГДЕ
	|	КассоваяКнига.Ссылка В(&МассивОбъектов)";
	
	Запрос.УстановитьПараметр("МассивОбъектов", МассивОбъектов);
	
	Результат = Запрос.Выполнить();
	Выборка   = Результат.Выбрать();
	
	Пока Выборка.Следующий() Цикл
		
		НомерСтрокиНачало = ТабличныйДокумент.ВысотаТаблицы + 1;
		
		КоличествоЛистов = ПолучитьКоличествоЛистовКассовойКнигиЗаПериодПоОрганизации(
			Выборка.Организация,
			НачалоГода(Выборка.Год),
			КонецГода(Выборка.Год)
		);
		
		ОбластьОбложка.Параметры.НазваниеОрганизации = Выборка.НаименованиеОрганизации;
		ОбластьОбложка.Параметры.НадписьОбложка 	 = " на "+Формат(Выборка.Год, "ДФ=yyyy") + " г.";
		ОбластьОбложка.Параметры.КодОКПО 			 = Выборка.КодПоОКПО;
		
		ТабличныйДокумент.Вывести(ОбластьОбложка);
		ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		ТабличныйДокумент.Вывести(ОбластьОбложка);
		
		// Последний лист кассовой книги
		ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		ОбластьПослДеньГода = МакетОбложка.ПолучитьОбласть("ПослДеньГода");
		
		ОбластьПослДеньГода.Параметры.ГлБухгалтер 			= СокрЛП(Выборка.ГлавныйБухгалтер);
		ОбластьПослДеньГода.Параметры.Руководитель 			= СокрЛП(Выборка.Руководитель);
		ОбластьПослДеньГода.Параметры.РуководительДолжность = СокрЛП(Выборка.ДолжностьРуководителя);
		ОбластьПослДеньГода.Параметры.ЛистовЗаГод 			= КоличествоЛистов;
		
		ТабличныйДокумент.Вывести(ОбластьПослДеньГода);
		
		УправлениеПечатью.ЗадатьОбластьПечатиДокумента(
			ТабличныйДокумент,
			НомерСтрокиНачало,
			ОбъектыПечати,
			Неопределено // Ссылка
		);
		
	КонецЦикла;
	
	ТабличныйДокумент.ОтображатьСетку     = Ложь;
	ТабличныйДокумент.ОтображатьЗаголовки = Ложь;
	
	Возврат ТабличныйДокумент;
	
КонецФункции

Функция СформироватьПечатнуюФормуЛистаКассовойКниги(МассивОбъектов, ОбъектыПечати)
	
	ТабличныйДокумент = Новый ТабличныйДокумент;
	ВыводитьОснования = Ложь;
	
	ВалютаРегламентированногоУчета = Константы.ВалютаРегламентированногоУчета.Получить();
	
	МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	ОтветственныеЛицаСервер.СформироватьВременнуюТаблицуОтветственныхЛицДокументов(МассивОбъектов, МенеджерВременныхТаблиц);	
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	КассоваяКнига.Ссылка КАК Ссылка,
	|	КассоваяКнига.ТипЛиста КАК ТипЛиста,
	|	КассоваяКнига.КоличествоДокументовНаЛисте КАК КоличествоДокументовНаЛисте,
	|	КассоваяКнига.Дата КАК Дата,
	|	КассоваяКнига.Организация КАК Организация,
	|	КассоваяКнига.Ответственный.ФизическоеЛицо КАК Ответственный,
	|	ТаблицаОтветственныеЛица.ГлавныйБухгалтерНаименование КАК ГлавныйБухгалтер
	|ИЗ
	|	Документ.КассоваяКнига КАК КассоваяКнига
	|		ЛЕВОЕ СОЕДИНЕНИЕ ТаблицаОтветственныеЛица КАК ТаблицаОтветственныеЛица
	|		ПО КассоваяКнига.Ссылка = ТаблицаОтветственныеЛица.Ссылка
	|ГДЕ
	|	КассоваяКнига.Ссылка В(&МассивДокументов)
	|	И КассоваяКнига.Проведен
	|
	|УПОРЯДОЧИТЬ ПО
	|	Дата,
	|	Ссылка";
	
	Запрос.УстановитьПараметр("МассивДокументов", МассивОбъектов);
	
	Результат = Запрос.Выполнить();
	ВыборкаПоДокументамКассоваяКнига = Результат.Выбрать();
	
	Пока ВыборкаПоДокументамКассоваяКнига.Следующий() Цикл
		
		НомерСтрокиНачало = ТабличныйДокумент.ВысотаТаблицы + 1;
	
		ДатаНач = НачалоДня(ВыборкаПоДокументамКассоваяКнига.Дата); // Начало года. В этом случае не требуется получать номера листов кассовой книги.
		
		Организация = ВыборкаПоДокументамКассоваяКнига.Организация;
		
		Макет = УправлениеПечатью.ПолучитьМакет("Документ.КассоваяКнига.ПФ_MXL_КассоваяКнига");
		
		ОбластьВалОстатокОтчет              = Макет.ПолучитьОбласть("ВалОстаток|Отчет");
		ОбластьПодвалОтчет                  = Макет.ПолучитьОбласть("Подвал|Отчет");
		ОбластьВТомЧислеОтчет               = Макет.ПолучитьОбласть("ВТомЧисле|Отчет");
		ОбластьОстатокОтчет                 = Макет.ПолучитьОбласть("Остаток|Отчет");
		ОбластьЛистовЗаМесяцОтчет           = Макет.ПолучитьОбласть("ЛистовЗаМесяц|Отчет");
		ОбластьЛистовЗаГодОтчет             = Макет.ПолучитьОбласть("ЛистовЗаГод|Отчет");
		ОбластьВкладнойЛистОтчет            = Макет.ПолучитьОбласть("ВкладнойЛист|Отчет");
		ОбластьВкладнойЛист373ПОтчет		= Макет.ПолучитьОбласть("ВкладнойЛист373П|Отчет");
		ОбластьОтчетКассираОтчет            = Макет.ПолучитьОбласть("ОтчетКассира|Отчет");
		ОбластьОтчетКассира373ПОтчет		= Макет.ПолучитьОбласть("ОтчетКассира373П|Отчет");
		ОбластьШапкаОтчет                   = Макет.ПолучитьОбласть("Шапка|Отчет");
		ОбластьОстатокНаНДОтчет             = Макет.ПолучитьОбласть("ОстатокНаНД|Отчет");
		ОбластьКурсовыеРазницыОтчет         = Макет.ПолучитьОбласть("КурсовыеРазницы|Отчет");
		ОбластьКурсовыеРазницыПоВалютеОтчет = Макет.ПолучитьОбласть("КурсовыеРазницыПоВалюте|Отчет");
		ОбластьПереносОтчет                 = Макет.ПолучитьОбласть("Перенос|Отчет");
		ОбластьСтрокаВалШирокаяОтчет        = Макет.ПолучитьОбласть("СтрокаВалШирокая|Отчет");
		ОбластьСтрокаВалОтчет               = Макет.ПолучитьОбласть("СтрокаВал|Отчет");
		ОбластьСтрокаШирокаяОтчет           = Макет.ПолучитьОбласть("СтрокаШирокая|Отчет");
		ОбластьСтрокаОтчет                  = Макет.ПолучитьОбласть("Строка|Отчет");
		ОбластьОборотОтчет                  = Макет.ПолучитьОбласть("Оборот|Отчет");
		ОбластьОборотРубОтчет               = Макет.ПолучитьОбласть("ОборотРуб|Отчет");
		ОбластьОборотВалОтчет               = Макет.ПолучитьОбласть("ОборотВал|Отчет");
		ОбластьКурсоваяРазницаОтчет         = Макет.ПолучитьОбласть("КурсоваяРазница|Отчет");
		ОбластьКурсоваяРазницаПоВалютеОтчет = Макет.ПолучитьОбласть("КурсоваяРазницаПоВалюте|Отчет");
		ОбластьКонечныйОстатокОтчет         = Макет.ПолучитьОбласть("КонечныйОстаток|Отчет");
		
		
		
		ЗапросПоИтогам = Новый Запрос;
		ЗапросПоИтогам.Текст =
		"ВЫБРАТЬ
		|	ДенежныеСредстваНаличныеОстаткиИОбороты.Период                КАК Период,
		|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка)                      КАК Валюта,
		|	ДенежныеСредстваНаличныеОстаткиИОбороты.СуммаНачальныйОстаток КАК СуммаНачальныйОстатокДт,
		|	0                                                             КАК ВалютнаяСуммаНачальныйОстатокДт,
		|	0                                                             КАК ВалютнаяСуммаКонечныйОстатокДт,
		|	0													          КАК СуммаОборотДт,
		|	0													          КАК СуммаОборотКт,
		|	0													          КАК СуммаОборот
		|ИЗ
		|	РегистрНакопления.ДенежныеСредстваНаличные.ОстаткиИОбороты(&НачИтоги, &ДатаКон, ДЕНЬ, ДвиженияИГраницыПериода, Организация = &Организация) КАК ДенежныеСредстваНаличныеОстаткиИОбороты
		|ГДЕ
		|	ДенежныеСредстваНаличныеОстаткиИОбороты.Касса.ИспользоватьВКассовойКниге
		|
		|ОБЪЕДИНИТЬ
		|
		|ВЫБРАТЬ
		|	НАЧАЛОПЕРИОДА(ДенежныеСредства.Период, ДЕНЬ)				  КАК Период,
		|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка)                      КАК Валюта,
		|	0                                                             КАК СуммаНачальныйОстатокДт,
		|	0                                                             КАК ВалютнаяСуммаНачальныйОстатокДт,
		|	0                                                             КАК ВалютнаяСуммаКонечныйОстатокДт,
		|	ВЫБОР КОГДА ДенежныеСредства.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) ТОГДА
		|		ДенежныеСредства.Сумма
		|	ИНАЧЕ
		|		0
		|	КОНЕЦ КАК СуммаОборотДт,
		|	ВЫБОР КОГДА ДенежныеСредства.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) ТОГДА
		|		- ДенежныеСредства.Сумма
		|	ИНАЧЕ
		|		0
		|	КОНЕЦ КАК СуммаОборотКт,
		|	ВЫБОР КОГДА ДенежныеСредства.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) ТОГДА
		|		- ДенежныеСредства.Сумма
		|	ИНАЧЕ
		|		ДенежныеСредства.Сумма
		|	КОНЕЦ КАК СуммаОборот
		|ИЗ
		|	РегистрНакопления.ДенежныеСредстваНаличные КАК ДенежныеСредства
		|
		|ГДЕ
		|	ДенежныеСредства.Период МЕЖДУ &НачИтоги И &ДатаКон
		|	И ДенежныеСредства.Организация = &Организация
		|	И ДенежныеСредства.Касса.ИспользоватьВКассовойКниге
		|	И Не ДенежныеСредства.ХозяйственнаяОперация В (
		|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПоступлениеДенежныхСредствИзДругойКассы),
		|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыдачаДенежныхСредствВДругуюКассу),
		|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыдачаДенежныхСредствВКассуККМ)
		|	)
		|
		|УПОРЯДОЧИТЬ ПО
		|	Период
		|ИТОГИ
		|	СУММА(СуммаНачальныйОстатокДт),
		|	СУММА(ВалютнаяСуммаНачальныйОстатокДт),
		|	СУММА(ВалютнаяСуммаКонечныйОстатокДт),
		|	СУММА(СуммаОборотДт),
		|	СУММА(СуммаОборотКт),
		|	СУММА(СуммаОборот)
		|ПО
		|	ОБЩИЕ,
		|	Период ПЕРИОДАМИ(ДЕНЬ, , ),
		|	Валюта";
		ЗапросПоИтогам.УстановитьПараметр("НачИтоги",НачалоДня(ДатаНач));
		ЗапросПоИтогам.УстановитьПараметр("ДатаКон", КонецДня(ДатаНач));
		ЗапросПоИтогам.УстановитьПараметр("Организация",Организация);
		РезультатЗапросаПоИтогам = ЗапросПоИтогам.Выполнить();
		
		Если РезультатЗапросаПоИтогам.Пустой() Тогда
			Продолжить;
		КонецЕсли;
		
		ЗапросПоДокументам = Новый Запрос("
		|ВЫБРАТЬ
		|	КассоваяКнигаДокументы.Документ КАК Документ,
		|	НАЧАЛОПЕРИОДА(КассоваяКнигаДокументы.Документ.Дата, ДЕНЬ) КАК День,
		|	КассоваяКнигаДокументы.Документ.Дата КАК ДатаДок,
		|	КассоваяКнигаДокументы.Документ.Номер КАК НомерДок,
		|	КассоваяКнигаДокументы.Документ.Валюта КАК Валюта,
		|	ПОДСТРОКА(КассоваяКнигаДокументы.Документ.Основание, 1, 200) КАК Основание,
		|	ВЫБОР
		|		КОГДА КассоваяКнигаДокументы.Документ ССЫЛКА Документ.ПриходныйКассовыйОрдер
		|			ТОГДА КассоваяКнигаДокументы.Документ.ПринятоОт
		|		ИНАЧЕ КассоваяКнигаДокументы.Документ.Выдать
		|	КОНЕЦ КАК ТекстДок,
		|	ЕСТЬNULL(КассоваяКнигаДокументы.Приход, 0) КАК Приход,
		|	ЕСТЬNULL(КассоваяКнигаДокументы.Расход, 0) КАК Расход,
		|	КассоваяКнигаДокументы.КорреспондирующийСчет КАК Счет,
		|	КассоваяКнигаДокументы.НомерЛиста КАК НомерЛиста,
		|	КассоваяКнигаДокументы.НомерСтроки КАК НомерСтроки,
		|	ДанныеДокумента.ТипЛиста КАК ТипЛиста
		|ИЗ
		|	Документ.КассоваяКнига КАК ДанныеДокумента
		|
		|	ЛЕВОЕ СОЕДИНЕНИЕ
		|		Документ.КассоваяКнига.Документы КАК КассоваяКнигаДокументы
		|	ПО
		|		ДанныеДокумента.Ссылка = КассоваяКнигаДокументы.Ссылка
		|ГДЕ
		|	ДанныеДокумента.Дата МЕЖДУ &НачИтоги И &ДатаКон
		|	И ДанныеДокумента.Организация = &Организация
		|	И ДанныеДокумента.Проведен
		|
		|УПОРЯДОЧИТЬ ПО
		|	День,
		|	НомерЛиста,
		|	НомерСтроки
		|ИТОГИ
		|	СУММА(Приход),
		|	СУММА(Расход),
		|	МИНИМУМ(НомерЛиста)
		|ПО
		|	День,
		|	Документ,
		|	Счет
		|");
		ЗапросПоДокументам.УстановитьПараметр("НачИтоги",НачалоДня(ДатаНач));
		ЗапросПоДокументам.УстановитьПараметр("ДатаКон",КонецДня(ДатаНач));
		ЗапросПоДокументам.УстановитьПараметр("Организация",Организация);
		РезультатЗапросаПоДокументам = ЗапросПоДокументам.Выполнить();
		
		
		
		
		ТаблицаДокументы = РезультатЗапросаПоДокументам.Выгрузить();
		ТаблицаДокументы.Очистить();
		ТаблицаДокументы.Колонки.Добавить("СтрокаСчет");
		ТаблицаДокументы.Колонки.Добавить("Валютный");
		ТаблицаДокументы.Колонки.Добавить("ВидДокумента");
		
		ТипЧисло = ОбщегоНазначенияУТ.ПолучитьОписаниеТиповЧисла(15,2);
		
		РабочаяТаблица = Новый ТаблицаЗначений;
		РабочаяТаблица.Колонки.Добавить("Валюта",Новый ОписаниеТипов("СправочникСсылка.Валюты"));
		РабочаяТаблица.Колонки.Добавить("ВалОстаток",ТипЧисло);
		РабочаяТаблица.Колонки.Добавить("Остаток",   ТипЧисло);
		РабочаяТаблица.Колонки.Добавить("ВалПриход", ТипЧисло);
		РабочаяТаблица.Колонки.Добавить("Приход",    ТипЧисло);
		РабочаяТаблица.Колонки.Добавить("ВалРасход", ТипЧисло);
		РабочаяТаблица.Колонки.Добавить("Расход",    ТипЧисло);
		РабочаяТаблица.Индексы.Добавить("Валюта");
		
		ВыборкаПоВалюте = РезультатЗапросаПоИтогам.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам,"Валюта");
		
		Пока ВыборкаПоВалюте.Следующий() Цикл
			Если НЕ ВыборкаПоВалюте.Валюта = Справочники.Валюты.ПустаяСсылка() Тогда
				Строка            = РабочаяТаблица.Добавить();
				Строка.Валюта     = ВыборкаПоВалюте.Валюта;
				Строка.Остаток    = ВыборкаПоВалюте.СуммаНачальныйОстатокДт;
				Строка.ВалОстаток = ВыборкаПоВалюте.ВалютнаяСуммаНачальныйОстатокДт;
			КонецЕсли;
		КонецЦикла;
		
		ВыборкаОбщихИтогов = РезультатЗапросаПоИтогам.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам,"Общие");
		
		Строка        = РабочаяТаблица.Добавить();
		Строка.Валюта = Справочники.Валюты.ПустаяСсылка();
		
		Если ВыборкаОбщихИтогов.Следующий() Тогда
			
			Строка.Остаток    = ВыборкаОбщихИтогов["СуммаНачальныйОстатокДт"]-РабочаяТаблица.Итог("Остаток");
			Строка.ВалОстаток = ВыборкаОбщихИтогов["ВалютнаяСуммаНачальныйОстатокДт"]-РабочаяТаблица.Итог("ВалОстаток");
			
		Иначе
			
			Строка.Остаток    = 0;
			Строка.ВалОстаток = 0;
			
		КонецЕсли;
		
		РабочаяТаблица.Сортировать("Валюта");
		
		ВыборкаИтоговПоДням     = РезультатЗапросаПоИтогам.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам,"Период");
		ВыборкаДокументовПоДням = РезультатЗапросаПоДокументам.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам,"День");
		
		ПоПроводкам  = ВыборкаИтоговПоДням.Следующий();
		ПоДокументам = ВыборкаДокументовПоДням.Следующий();
		
		БылиОшибки    = Ложь;
		ВывестиПодвал = Ложь;
		
		СведенияОбОрганизации = ФормированиеПечатныхФорм.СведенияОЮрФизЛице(Организация, КонецДня(ДатаНач));
		
		
		
		ТипПКО = Тип("ДокументСсылка.ПриходныйКассовыйОрдер");
		ТипРКО = Тип("ДокументСсылка.РасходныйКассовыйОрдер");
		
		Пока ПоПроводкам Или ПоДокументам  Цикл
			
			Если НЕ ПоПроводкам  Тогда
				ДатаЛиста = ВыборкаДокументовПоДням.День;
			ИначеЕсли НЕ ПоДокументам Тогда
				ДатаЛиста = ВыборкаИтоговПоДням.Период;
			Иначе
				ДатаЛиста = Мин(ВыборкаДокументовПоДням.День, ВыборкаИтоговПоДням.Период);
			КонецЕсли;
			
			Если ВыборкаИтоговПоДням.СуммаОборотДт = 0 И ВыборкаИтоговПоДням.СуммаОборотКт = 0 Тогда
				Если НЕ ПоДокументам ИЛИ ДатаЛиста <> ВыборкаДокументовПоДням.День Тогда
					ПоПроводкам = ВыборкаИтоговПоДням.Следующий();
					Продолжить;
				КонецЕсли;
			КонецЕсли;
			
			КоличествоПриходныхДокументов = 0;
			КоличествоРасходныхДокументов = 0;
			
			СчетКурсовыхРазниц = "91";
			ДатаДействияПриказа373П = Дата('20120101');
			
			Остаток = РабочаяТаблица.Итог("Остаток");
			Если ДатаЛиста >= ДатаНач Тогда
				
				Если ДатаЛиста < ДатаДействияПриказа373П Тогда
				
					ЗаголовокЛиста = "КАССА за " + Формат(ДатаЛиста, "ДФ=dd.MM.yyyy");
					ОбластьВкладнойЛистОтчет.Параметры.ЗаголовокЛиста = ЗаголовокЛиста;
					ШтрихкодированиеПечатныхФорм.ВывестиШтрихкодВТабличныйДокумент(ТабличныйДокумент, Макет, ОбластьВкладнойЛистОтчет, ВыборкаПоДокументамКассоваяКнига.Ссылка);
					ТабличныйДокумент.Вывести(ОбластьВкладнойЛистОтчет);
					
					ОбластьОтчетКассираОтчет.Параметры.ЗаголовокЛиста = ЗаголовокЛиста;
					ТабличныйДокумент.Присоединить(ОбластьОтчетКассираОтчет);
					
					// Номер первого листа документа "Кассовая книга"
					ОбластьШапкаОтчет.Параметры.ТекстНомерЛиста = "Лист " + ВыборкаДокументовПоДням.НомерЛиста;
					
				Иначе
					
					ЗаголовокЛиста = "КАССА за " + Формат(ДатаЛиста, "ДЛФ=DD");
					ТекстНомерЛиста = "Лист " + ВыборкаДокументовПоДням.НомерЛиста;
					
					ОбластьВкладнойЛист373ПОтчет.Параметры.ЗаголовокЛиста = ЗаголовокЛиста;
					ОбластьВкладнойЛист373ПОтчет.Параметры.ТекстНомерЛиста = ТекстНомерЛиста;
					ШтрихкодированиеПечатныхФорм.ВывестиШтрихкодВТабличныйДокумент(ТабличныйДокумент, Макет, ОбластьВкладнойЛист373ПОтчет, ВыборкаПоДокументамКассоваяКнига.Ссылка);
					ТабличныйДокумент.Вывести(ОбластьВкладнойЛист373ПОтчет);
					
					ОбластьОтчетКассира373ПОтчет.Параметры.ЗаголовокЛиста = ЗаголовокЛиста;
					ОбластьОтчетКассира373ПОтчет.Параметры.ТекстНомерЛиста = ТекстНомерЛиста;
					ТабличныйДокумент.Присоединить(ОбластьОтчетКассира373ПОтчет);
					
				КонецЕсли;
				
				ТабличныйДокумент.Вывести(ОбластьШапкаОтчет);
				ТабличныйДокумент.Присоединить(ОбластьШапкаОтчет);
				
				ОбластьОстатокНаНДОтчет.Параметры.ОстатокНачало = Остаток;
				ТабличныйДокумент.Вывести(ОбластьОстатокНаНДОтчет);
				ТабличныйДокумент.Присоединить(ОбластьОстатокНаНДОтчет);
				
			КонецЕсли;
		
			ПоВалютам = Ложь;
			Для Каждого Строка Из РабочаяТаблица Цикл
				Если ((Строка.Остаток <> 0) Или (Строка.ВалОстаток <> 0)) И (НЕ Строка.Валюта=Справочники.Валюты.ПустаяСсылка()) Тогда
					ПоВалютам = Истина;
					Прервать;
				КонецЕсли;
			КонецЦикла;
			
	//		Высота каждой строки = 13 пунктов
	//		На стандартную страницу помещается 59 строк
	
	//		Высоты секций в строках:
	//		Шапка = 5 стр
	//		ВкладнойЛист = 3 стр
	//		ОтчетКассира = 3 стр
	//		ОстатокНаНачало = 1 стр
	//		ВТомЧисле = 1 стр
	//		Остаток = 1 стр
	//		ВалОстаток = 2 стр
	//		КурсовыеРазницы = 2 стр
	//		КурсовыеРазницыПоВалюте = 1 стр
	//		Строка = 2 стр
	//		СтрокаШирокая = 4 стр
	//		СтрокаВал = 2 стр
	//		СтрокаВалШирокая = 4 стр
	//		Перенос = 1 стр
	//		Оборот = 1 стр
	//		ОборотРуб = 1 стр
	//		ОборотВал = 2 стр
	//		КурсоваяРазница = 1 стр
	//		КурсоваяРазницаПоВалюте = 1 стр
	//		КонечныйОстаток = 1 стр
	//		Подвал = 11 стр
	//		ЛистовЗаМесяц = 1 стр
	//		ЛистовЗаГод = 1 стр
			
			Если ПоВалютам Тогда
				
				Если ДатаЛиста >= ДатаНач Тогда
					ТабличныйДокумент.Вывести(ОбластьВТомЧислеОтчет);
					ТабличныйДокумент.Присоединить(ОбластьВТомЧислеОтчет);
				КонецЕсли;
				
				
				Для Каждого Строка ИЗ РабочаяТаблица Цикл
					
					Валюта     = Строка.Валюта;
					РубОстаток = Строка.Остаток;
					ВалОстаток = Строка.ВалОстаток;
					
					Если Строка.Валюта = Справочники.Валюты.ПустаяСсылка() Тогда
						
						Если ДатаЛиста >= ДатаНач Тогда
							
							ОбластьОстатокОтчет.Параметры.ВалютаРеглУчета = "национальная валюта ("+ВалютаРегламентированногоУчета.НаименованиеПолное+"):";
							ОбластьОстатокОтчет.Параметры.РеглОстаток     = РубОстаток;
							
							ТабличныйДокумент.Вывести(ОбластьОстатокОтчет);
							ТабличныйДокумент.Присоединить(ОбластьОстатокОтчет);
							
						КонецЕсли;
						
					Иначе
						
						Если (РубОстаток <> 0) Или (ВалОстаток <> 0) Тогда
							
							Если ДатаЛиста >= ДатаНач Тогда
								
								ОбластьВалОстатокОтчет.Параметры.ВалютаВалУчета = "иностранная валюта ("+Валюта.НаименованиеПолное+"):";
								ОбластьВалОстатокОтчет.Параметры.ВалОстатокРегл = РубОстаток;
								ОбластьВалОстатокОтчет.Параметры.ВалОстатокВал  = Формат(ВалОстаток,"ЧЦ=15; ЧДЦ=2; ЧРД==")+" "+Валюта.Наименование;
								
								ТабличныйДокумент.Вывести(ОбластьВалОстатокОтчет);
								ТабличныйДокумент.Присоединить(ОбластьВалОстатокОтчет);
								
							КонецЕсли;
							
						КонецЕсли;
						
					КонецЕсли;
					
				КонецЦикла;
				
			КонецЕсли;
			
			ТаблицаДокументы.Очистить();
			Валюты = Новый СписокЗначений;
			
			Если ПоДокументам И ВыборкаДокументовПоДням.День = ДатаЛиста Тогда
				
				ВыборкаДокументов = ВыборкаДокументовПоДням.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам,"Документ");
				
				Пока ВыборкаДокументов.Следующий() Цикл
					
					НоваяСтрока = ТаблицаДокументы.Добавить();
					НоваяСтрока.ВидДокумента = ?(ТипЗнч(ВыборкаДокументов.Документ) = ТипПКО, "ПриходныйОрдер", "РасходныйОрдер");
					НоваяСтрока.Документ     = ВыборкаДокументов.Документ;
					НоваяСтрока.ДатаДок      = ВыборкаДокументов.ДатаДок;
					НоваяСтрока.День         = ВыборкаДокументов.День;
					НоваяСтрока.НомерДок     = ВыборкаДокументов.НомерДок;
					НоваяСтрока.Валюта       = ВыборкаДокументов.Валюта;
					НоваяСтрока.Приход       = ВыборкаДокументов.Приход;
					НоваяСтрока.Расход       = ВыборкаДокументов.Расход;
					НоваяСтрока.Основание    = ВыборкаДокументов.Основание;
					НоваяСтрока.ТекстДок     = ВыборкаДокументов.ТекстДок;
					НоваяСтрока.НомерЛиста   = ВыборкаДокументов.НомерЛиста;
					
					НоваяСтрока.Валютный = ВыборкаДокументов.Валюта <> ВалютаРегламентированногоУчета;
					Если НоваяСтрока.Валютный И Валюты.НайтиПоЗначению(ВыборкаДокументов.Валюта) = Неопределено Тогда
						Валюты.Добавить(ВыборкаДокументов.Валюта);
					КонецЕсли;
					
					ВыборкаСчетов = ВыборкаДокументов.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам,"Счет");
					СписокСчетов  = Новый ТаблицаЗначений;
					СписокСчетов.Колонки.Добавить("Счет");
					Пока ВыборкаСчетов.Следующий() Цикл
						
						СтрокаТаблицыСчетов      = СписокСчетов.Добавить();
						СтрокаТаблицыСчетов.Счет = ВыборкаСчетов.Счет;
						
					КонецЦикла;
					
					СписокСчетов.Свернуть("Счет");
					
					СтрокаСчет = "";
					Для Каждого СтрокаТаблицыСчетов Из СписокСчетов Цикл
						СтрокаСчет = СтрокаСчет + СтрокаТаблицыСчетов.Счет + Символы.ПС;
					КонецЦикла;
					
					
					НоваяСтрока.СтрокаСчет = СтрокаСчет;
					
				КонецЦикла;
				
			КонецЕсли;
			
			СумПриход    = 0;
			СумРасход    = 0;
			ПерваяСтрока = 1;
			Для Каждого СтрокаТаблица ИЗ РабочаяТаблица Цикл
				
				Если СтрокаТаблица.Валюта = Справочники.Валюты.ПустаяСсылка() Тогда
					Продолжить;
				КонецЕсли;
				
				Если ДатаЛиста <> НачалоДня(КонецМесяца(ДатаЛиста)) Тогда
					Если Валюты.НайтиПоЗначению(СтрокаТаблица.Валюта) = Неопределено Тогда
						Продолжить;
					КонецЕсли;
				КонецЕсли;
				
				СтруктураКурсов = РаботаСКурсамиВалют.ПолучитьКурсВалюты(СтрокаТаблица.Валюта,ДатаЛиста);
				
				Курс      = СтруктураКурсов.Курс;
				Кратность = СтруктураКурсов.Кратность;
				Кратность = ?(Кратность=0, 1, Кратность);
				КурсоваяРазница = Окр(СтрокаТаблица.ВалОстаток * Курс / Кратность - СтрокаТаблица.Остаток, 2, 1);
				Если КурсоваяРазница <> 0 Тогда
					Если ПерваяСтрока = 1 Тогда
						Если ДатаЛиста >= ДатаНач Тогда
							
							ТабличныйДокумент.Вывести(ОбластьКурсовыеРазницыОтчет);
							ТабличныйДокумент.Присоединить(ОбластьКурсовыеРазницыОтчет);
							
						КонецЕсли;
						ПерваяСтрока = 0;
					КонецЕсли;
					Валюта = СтрокаТаблица.Валюта;
					Приход = 0;
					Расход = 0;
					КоррСчет = СчетКурсовыхРазниц;
					Если КурсоваяРазница > 0 Тогда
						Приход    = КурсоваяРазница;
						СумПриход = СумПриход+КурсоваяРазница;
					Иначе
						Расход    = -КурсоваяРазница;
						СумРасход = СумРасход-КурсоваяРазница;
					КонецЕсли;   
					СтрокаТаблица.Приход = СтрокаТаблица.Приход+Приход;
					СтрокаТаблица.Расход = СтрокаТаблица.Расход+Расход;
					Если ДатаЛиста >= ДатаНач Тогда
						
						ОбластьКурсовыеРазницыПоВалютеОтчет.Параметры.НадписьКРВалюта = "по " + Валюта.Наименование;
						ОбластьКурсовыеРазницыПоВалютеОтчет.Параметры.КоррСчет = КоррСчет;
						ОбластьКурсовыеРазницыПоВалютеОтчет.Параметры.Приход   = Приход;
						ОбластьКурсовыеРазницыПоВалютеОтчет.Параметры.Расход   = Расход;
						
						ТабличныйДокумент.Вывести(ОбластьКурсовыеРазницыПоВалютеОтчет);
						ТабличныйДокумент.Присоединить(ОбластьКурсовыеРазницыПоВалютеОтчет);
						
					КонецЕсли;
				КонецЕсли;
			КонецЦикла;
			
			// Для простоты настройки печатной формы примем следующие соглашения:
			//	-	высота строк в таблице печатной формы задана жестко,
			//		тогда известно, сколько строк помещается на странице;
			// СтрокНаСтранице = 58;
			//	-	высота шапки и подвала задана жестко и кратна высоте строк таблицы,
			//		тогда можно указать, сколько строк занимают шапка и подвал
			//		в пересчете на строки таблицы;
			//	-	Количество строк шапки определено при выводе валюты в шапку;
			//	-	Количество строк подвала определим позже по количеству валют;
			//	-	для нормальной работы алгоритма необходимо, чтобы шапка и подвал
			//		могли поместиться на одной странице + хотя бы одна строка таблицы:
			//		СтрокНаСтранице >= СтрокШапки + СтрокПодвала + 1
			//	-	если подвал не помещается на странице, он переносится на другую
			//		страницу с последней строкой; исключение составляет случай,
			//		когда в таблице всего одна строка.
			
			// Резервирование строк для вывода сведений о валюте в подвале.
			// Найдем количество валют, по которым будет остаток в конце дня.
			КоличествоВалютВПодвале = РабочаяТаблица.Количество() - 1; // без рублей
			// Добавим валюты, по которым нет итогов, но по которым есть оборот,
			// введенный документами.
			Для Каждого Валюта ИЗ Валюты Цикл
				
				Если РабочаяТаблица.Найти(Валюта.Значение, "Валюта") = Неопределено Тогда
					КоличествоВалютВПодвале = КоличествоВалютВПодвале + 1;
				КонецЕсли;
				
			КонецЦикла;
			// По каждой валюте добавляется:
			//  2 строки для оборота;
			//  2 строки для остатка;
			//  1 строка под курсовую разницу.
			// Для рублей добавляется:
			//  1 строка для оборота;
			//  1 строка для остатка.
			// Добавляет строка для секции "КурсоваяРазница" и "ВТомЧисле".
			
			ПредыдущийНомерЛиста = ВыборкаДокументовПоДням.НомерЛиста;
			
			Для Каждого Документ Из ТаблицаДокументы Цикл
				
				Если Документ.ВидДокумента = "ПриходныйОрдер" или Документ.ВидДокумента = "РасходныйОрдер" Тогда
					ЕстьВалюта = Документ.Валютный;
				Иначе
					ЕстьВалюта = Ложь;
				КонецЕсли;
				
				Если ЕстьВалюта Тогда
					Валюта          = Документ.Валюта;
					СтруктураКурсов = РаботаСКурсамиВалют.ПолучитьКурсВалюты(Валюта,Документ.ДатаДок);
					
					Курс      = СтруктураКурсов.Курс;
					Кратность = СтруктураКурсов.Кратность;
					Кратность = ?(Кратность = 0, 1, Кратность);
				Иначе
					Валюта    = Справочники.Валюты.ПустаяСсылка();
					Курс      = 1;
					Кратность = 1;
				КонецЕсли;
					
				Если Документ.ВидДокумента = "РасходныйОрдер" Тогда
					Клиент = "Выдано " + СокрЛП(Документ.ТекстДок) + ?(ВыводитьОснования = 1, " " + СокрЛП(Документ.Основание), "");
					КоличествоРасходныхДокументов = КоличествоРасходныхДокументов + 1;
					ВалРасход = Документ.Расход;
					Расход    = Окр(?(Документ.Расход=null,0,Документ.Расход)*Курс/Кратность,2,1);
					ВалПриход = 0;
					Приход    = 0;
				Иначе
					Клиент = "Принято от " + СокрЛП(Документ.ТекстДок) + ?(ВыводитьОснования = 1, " " + СокрЛП(Документ.Основание), "");
					КоличествоПриходныхДокументов = КоличествоПриходныхДокументов + 1;
					ВалПриход = Документ.Приход;
					Приход    = Окр(?(Документ.Приход=null,0,Документ.Приход)*Курс/Кратность,2,1);
					ВалРасход = 0;
					Расход    = 0;
				КонецЕсли;
				
				НомерДокПечатнойФормы = ПрефиксацияОбъектовКлиентСервер.ПолучитьНомерНаПечать(
					Документ.НомерДок,
					Ложь,
					Истина
				);
				КоррСчет = Документ.СтрокаСчет;
				
				
				
				
				
				
				// Начинаем новую страницу
				Если ПредыдущийНомерЛиста <> Документ.НомерЛиста Тогда
					
					ПриходЗаДень = РабочаяТаблица.Итог("Приход");
					РасходЗаДень = РабочаяТаблица.Итог("Расход");
					
					Если ДатаЛиста >= ДатаНач Тогда
						
						ОбластьПереносОтчет.Параметры.ПриходЗаДень = ПриходЗаДень;
						ОбластьПереносОтчет.Параметры.РасходЗаДень = РасходЗаДень;
						ТабличныйДокумент.Вывести(ОбластьПереносОтчет);
						ТабличныйДокумент.Присоединить(ОбластьПереносОтчет);
						
						ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
						ОбластьШапкаОтчет.Параметры.ТекстНомерЛиста = "Лист " + Документ.НомерЛиста;
						ТабличныйДокумент.Вывести(ОбластьШапкаОтчет);
						ТабличныйДокумент.Присоединить(ОбластьШапкаОтчет);
						
					КонецЕсли;
					
					ПредыдущийНомерЛиста = Документ.НомерЛиста;
					
				КонецЕсли;
				
				Если ДатаЛиста >= ДатаНач Тогда
					Если ЕстьВалюта Тогда
						Если ВыводитьОснования Тогда
							
							ОбластьСтрокаВалШирокаяОтчет.Параметры.НомерДокПечатнойФормы = НомерДокПечатнойФормы;
							ОбластьСтрокаВалШирокаяОтчет.Параметры.Контрагент = Клиент;
							ОбластьСтрокаВалШирокаяОтчет.Параметры.КоррСчет   = КоррСчет;
							ОбластьСтрокаВалШирокаяОтчет.Параметры.Приход     = Приход;
							ОбластьСтрокаВалШирокаяОтчет.Параметры.Расход     = Расход;
							ОбластьСтрокаВалШирокаяОтчет.Параметры.ВалПриход  = Формат(ВалПриход,"ЧЦ=15; ЧДЦ=2; ЧРД==")+" "+Валюта.Наименование;
							ОбластьСтрокаВалШирокаяОтчет.Параметры.ВалРасход  = Формат(ВалРасход,"ЧЦ=15; ЧДЦ=2; ЧРД==")+" "+Валюта.Наименование;
							ОбластьСтрокаВалШирокаяОтчет.Параметры.Документ   = Документ.Документ;
							
							ТабличныйДокумент.Вывести(ОбластьСтрокаВалШирокаяОтчет);
							ТабличныйДокумент.Присоединить(ОбластьСтрокаВалШирокаяОтчет);
							
						Иначе
							
							ОбластьСтрокаВалОтчет.Параметры.НомерДокПечатнойФормы = НомерДокПечатнойФормы;
							ОбластьСтрокаВалОтчет.Параметры.Контрагент = Клиент;
							ОбластьСтрокаВалОтчет.Параметры.КоррСчет   = КоррСчет;
							ОбластьСтрокаВалОтчет.Параметры.Приход     = Приход;
							ОбластьСтрокаВалОтчет.Параметры.Расход     = Расход;
							ОбластьСтрокаВалОтчет.Параметры.ВалПриход  = Формат(ВалПриход,"ЧЦ=15; ЧДЦ=2; ЧРД==")+" "+Валюта.Наименование;
							ОбластьСтрокаВалОтчет.Параметры.ВалРасход  = Формат(ВалРасход,"ЧЦ=15; ЧДЦ=2; ЧРД==")+" "+Валюта.Наименование;
							ОбластьСтрокаВалОтчет.Параметры.Документ   = Документ.Документ;
							
							ТабличныйДокумент.Вывести(ОбластьСтрокаВалОтчет);
							ТабличныйДокумент.Присоединить(ОбластьСтрокаВалОтчет);
							
						КонецЕсли;
						
					Иначе
						Если ВыводитьОснования Тогда
							
							ОбластьСтрокаШирокаяОтчет.Параметры.НомерДокПечатнойФормы = НомерДокПечатнойФормы;
							ОбластьСтрокаШирокаяОтчет.Параметры.Контрагент = Клиент;
							ОбластьСтрокаШирокаяОтчет.Параметры.КоррСчет   = КоррСчет;
							ОбластьСтрокаШирокаяОтчет.Параметры.Приход     = Приход;
							ОбластьСтрокаШирокаяОтчет.Параметры.Расход     = Расход;
							ОбластьСтрокаШирокаяОтчет.Параметры.Документ   = Документ.Документ;
							
							ТабличныйДокумент.Вывести(ОбластьСтрокаШирокаяОтчет);
							ТабличныйДокумент.Присоединить(ОбластьСтрокаШирокаяОтчет);
							
						Иначе
							
							ОбластьСтрокаОтчет.Параметры.НомерДокПечатнойФормы = НомерДокПечатнойФормы;
							ОбластьСтрокаОтчет.Параметры.Контрагент = Клиент;
							ОбластьСтрокаОтчет.Параметры.КоррСчет   = КоррСчет;
							ОбластьСтрокаОтчет.Параметры.Приход     = Приход;
							ОбластьСтрокаОтчет.Параметры.Расход     = Расход;
							ОбластьСтрокаОтчет.Параметры.Документ   = Документ.Документ;
							
							ТабличныйДокумент.Вывести(ОбластьСтрокаОтчет);
							ТабличныйДокумент.Присоединить(ОбластьСтрокаОтчет);
						КонецЕсли;
					КонецЕсли;
				КонецЕсли;
				
				ДобавитьОбороты(РабочаяТаблица, Валюта, ВалПриход, Приход, ВалРасход, Расход);
				
			КонецЦикла;
			
			ПриходЗаДень = РабочаяТаблица.Итог("Приход");
			РасходЗаДень = РабочаяТаблица.Итог("Расход");
			Если ДатаЛиста >= ДатаНач Тогда
				
				ОбластьОборотОтчет.Параметры.ПриходЗаДень = ПриходЗаДень;
				ОбластьОборотОтчет.Параметры.РасходЗаДень = РасходЗаДень;
				
				ТабличныйДокумент.Вывести(ОбластьОборотОтчет);
				ТабличныйДокумент.Присоединить(ОбластьОборотОтчет);
				
				ПоВалютам = Ложь;
				Для Каждого Строка ИЗ РабочаяТаблица Цикл    
					Если ((Строка.ВалПриход <> 0) Или (Строка.Приход <> 0) Или
						  (Строка.ВалРасход <> 0) Или (Строка.Расход <> 0)) И
						 (НЕ Строка.Валюта=Справочники.Валюты.ПустаяСсылка()) Тогда
						ПоВалютам = Истина;
						Прервать;
					КонецЕсли;
				КонецЦикла;
				Если ПоВалютам Тогда
					Для Каждого Строка ИЗ РабочаяТаблица Цикл
						Валюта = Строка.Валюта;
						ВалПриходЗаДень = Строка.ВалПриход;
						РубПриходЗаДень = Строка.Приход;
						ВалРасходЗаДень = Строка.ВалРасход;
						РубРасходЗаДень = Строка.Расход;
						Если Строка.Валюта = Справочники.Валюты.ПустаяСсылка() Тогда
							
							ОбластьОборотРубОтчет.Параметры.РеглПриходЗаДень = РубПриходЗаДень;
							ОбластьОборотРубОтчет.Параметры.РеглРасходЗаДень = РубРасходЗаДень;
							ОбластьОборотРубОтчет.Параметры.ВалютаРеглУчета  = "национальная валюта (" + ВалютаРегламентированногоУчета.НаименованиеПолное + "):";
							
							ТабличныйДокумент.Вывести(ОбластьОборотРубОтчет);
							ТабличныйДокумент.Присоединить(ОбластьОборотРубОтчет);
						Иначе
							Если (ВалПриходЗаДень <> 0) Или (РубПриходЗаДень <> 0) Или 
								 (ВалРасходЗаДень <> 0) Или (РубРасходЗаДень <> 0) Тогда
								
								ОбластьОборотВалОтчет.Параметры.ВалютаВалУчета      = "иностранная валюта (" + Валюта.НаименованиеПолное + "):";
								ОбластьОборотВалОтчет.Параметры.ВалПриходЗаДеньРегл = РубПриходЗаДень;
								ОбластьОборотВалОтчет.Параметры.ВалРасходЗаДеньРегл = РубРасходЗаДень;
								ОбластьОборотВалОтчет.Параметры.ВалПриходЗаДеньВал  = Формат(ВалПриходЗаДень,"ЧЦ=15; ЧДЦ=2; ЧРД==")+" "+Валюта;
								ОбластьОборотВалОтчет.Параметры.ВалРасходЗаДеньВал  = Формат(ВалРасходЗаДень,"ЧЦ=15; ЧДЦ=2; ЧРД==")+" "+Валюта;
								
								ТабличныйДокумент.Вывести(ОбластьОборотВалОтчет);
								ТабличныйДокумент.Присоединить(ОбластьОборотВалОтчет);
								
							КонецЕсли;
						КонецЕсли;
					КонецЦикла;
				КонецЕсли;
			КонецЕсли;
			
			ПерваяСтрока = Истина;
			Остаток      = Остаток + ПриходЗаДень - РасходЗаДень;
			Для Каждого Строка ИЗ РабочаяТаблица Цикл
				Если Строка.Валюта = Справочники.Валюты.ПустаяСсылка() Тогда
					Продолжить;
				КонецЕсли;
				
				Если ДатаЛиста <> НачалоДня(КонецМесяца(ДатаЛиста)) Тогда
					Если Валюты.НайтиПоЗначению(Строка.Валюта) = Неопределено Тогда
						Продолжить;
					КонецЕсли;
				КонецЕсли;
				
				СтруктураКурсов = РаботаСКурсамиВалют.ПолучитьКурсВалюты(Строка.Валюта, ДатаЛиста);
				
				Курс      = СтруктураКурсов.Курс;
				Кратность = СтруктураКурсов.Кратность;
				Кратность = ?(Кратность=0, 1, Кратность);
				КурсоваяРазница = Окр((Строка.ВалОстаток+Строка.ВалПриход-Строка.ВалРасход)*Курс/Кратность-(Строка.Остаток+Строка.Приход-Строка.Расход), 2, 1);
				Если КурсоваяРазница <> 0 Тогда
					Если ПерваяСтрока Тогда
						Если ДатаЛиста >= ДатаНач Тогда
							ТабличныйДокумент.Вывести(ОбластьКурсоваяРазницаОтчет);
							ТабличныйДокумент.Присоединить(ОбластьКурсоваяРазницаОтчет);
						КонецЕсли;
						ПерваяСтрока = Ложь;
					КонецЕсли;
					Валюта       = Строка.Валюта;
					ПриходЗаДень = 0;
					РасходЗаДень = 0;
					Если КурсоваяРазница > 0 Тогда
						ПриходЗаДень  = КурсоваяРазница;
						Строка.Приход = Строка.Приход + КурсоваяРазница;
					Иначе
						РасходЗаДень  = -КурсоваяРазница;
						Строка.Расход = Строка.Расход - КурсоваяРазница;
					КонецЕсли;
					Если ДатаЛиста >= ДатаНач Тогда
						
						ОбластьКурсоваяРазницаПоВалютеОтчет.Параметры.Валюта       = Валюта;
						ОбластьКурсоваяРазницаПоВалютеОтчет.Параметры.ПриходЗаДень = ПриходЗаДень;
						ОбластьКурсоваяРазницаПоВалютеОтчет.Параметры.РасходЗаДень = РасходЗаДень;
						
						ТабличныйДокумент.Вывести(ОбластьКурсоваяРазницаПоВалютеОтчет);
						ТабличныйДокумент.Присоединить(ОбластьКурсоваяРазницаПоВалютеОтчет);
						
					КонецЕсли;
					Остаток = Остаток + КурсоваяРазница;
				КонецЕсли;
			КонецЦикла;
			
			Если ДатаЛиста >= ДатаНач Тогда
				
				ОбластьКонечныйОстатокОтчет.Параметры.ОстатокКонец = Остаток;
				
				ТабличныйДокумент.Вывести(ОбластьКонечныйОстатокОтчет);
				ТабличныйДокумент.Присоединить(ОбластьКонечныйОстатокОтчет);
			
				ПоВалютам = Ложь;
				Для Каждого Строка ИЗ РабочаяТаблица Цикл
					Если ((Строка.Остаток+Строка.Приход-Строка.Расход <> 0) Или (Строка.ВалОстаток+Строка.ВалПриход-Строка.ВалРасход <> 0)) И (НЕ Строка.Валюта=Справочники.Валюты.ПустаяСсылка()) Тогда
						ПоВалютам = Истина;
						Прервать;
					КонецЕсли;
				КонецЦикла;
				
				Если ПоВалютам Тогда
					ТабличныйДокумент.Вывести(ОбластьВТомЧислеОтчет);
					ТабличныйДокумент.Присоединить(ОбластьВТомЧислеОтчет);
					Для Каждого Строка ИЗ РабочаяТаблица Цикл
						Валюта     = Строка.Валюта;
						РубОстаток = Строка.Остаток + Строка.Приход - Строка.Расход;
						ВалОстаток = Строка.ВалОстаток + Строка.ВалПриход - Строка.ВалРасход;
						Если Строка.Валюта = Справочники.Валюты.ПустаяСсылка() Тогда
							
							ОбластьОстатокОтчет.Параметры.ВалютаРеглУчета = "национальная валюта (" + ВалютаРегламентированногоУчета.НаименованиеПолное+"):";
							ОбластьОстатокОтчет.Параметры.РеглОстаток     = РубОстаток;
							
							ТабличныйДокумент.Вывести(ОбластьОстатокОтчет);
							ТабличныйДокумент.Присоединить(ОбластьОстатокОтчет);
							
						Иначе
							Если (РубОстаток <> 0) Или (ВалОстаток <> 0) Тогда
								
								ОбластьВалОстатокОтчет.Параметры.ВалютаВалУчета = "иностранная валюта (" + Валюта.НаименованиеПолное + "):";
								ОбластьВалОстатокОтчет.Параметры.ВалОстатокРегл = РубОстаток;
								ОбластьВалОстатокОтчет.Параметры.ВалОстатокВал  = Формат(ВалОстаток,"ЧЦ=15; ЧДЦ=2; ЧРД==")+" "+Валюта.Наименование;
								
								ТабличныйДокумент.Вывести(ОбластьВалОстатокОтчет);
								ТабличныйДокумент.Присоединить(ОбластьВалОстатокОтчет);
								
							КонецЕсли;
						КонецЕсли;
					КонецЦикла;
				КонецЕсли;
				
				ОбластьПодвалОтчет.Параметры.НадписьКолПриходныхРасходных=?(КоличествоПриходныхДокументов>0, ЧислоПрописью(КоличествоПриходныхДокументов,"НД=Ложь",",,,,,,,,0")," - ")+ "приходных и "+
				?(КоличествоРасходныхДокументов>0,ЧислоПрописью(КоличествоРасходныхДокументов,"НД=Ложь",",,,,,,,,0")," - ")+"расходных получил.";
				
								
				ОбластьПодвалОтчет.Параметры.ГлБухгалтер = ВыборкаПоДокументамКассоваяКнига.ГлавныйБухгалтер;
				ОбластьПодвалОтчет.Параметры.Кассир = ФизическиеЛица.ФамилияИнициалыФизЛица(ВыборкаПоДокументамКассоваяКнига.Ответственный);
				
				ТабличныйДокумент.Вывести(ОбластьПодвалОтчет);
				ТабличныйДокумент.Присоединить(ОбластьПодвалОтчет);
			КонецЕсли;
			
			Сортировать = Ложь;
			ВыборкаПоВалюте = ВыборкаИтоговПоДням.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам,"Валюта");
			
			Пока ВыборкаПоВалюте.Следующий() Цикл
				Если НЕ ВыборкаПоВалюте.Валюта = Справочники.Валюты.ПустаяСсылка() Тогда
					Строка = РабочаяТаблица.Найти(ВыборкаПоВалюте.Валюта, "Валюта");
					Если Строка = Неопределено Тогда
						Строка        = РабочаяТаблица.Добавить();
						Строка.Валюта = ВыборкаПоВалюте.Валюта;
						Сортировать   = Истина;
					КонецЕсли;
					СуммаКонечныйОстатокДт = ВыборкаПоВалюте.СуммаНачальныйОстатокДт + ВыборкаПоВалюте.СуммаОборот;
					Строка.ВалОстаток = ВыборкаПоВалюте.ВалютнаяСуммаКонечныйОстатокДт;
					Строка.Остаток    = СуммаКонечныйОстатокДт;
				КонецЕсли;
			КонецЦикла;
			
			Строка = РабочаяТаблица.Найти(Справочники.Валюты.ПустаяСсылка(), "Валюта");
			
			Если Строка = Неопределено Тогда
				Строка        = РабочаяТаблица.Добавить();
				Строка.Валюта = Справочники.Валюты.ПустаяСсылка();
				Сортировать   = Истина;
			Иначе
				Строка.Остаток = 0;
			КонецЕсли;
			
			Если (ДатаЛиста = ВыборкаИтоговПоДням.Период) Тогда
				СуммаКонечныйОстатокДт = ВыборкаИтоговПоДням.СуммаНачальныйОстатокДт + ВыборкаИтоговПоДням.СуммаОборот;
				Строка.Остаток = СуммаКонечныйОстатокДт - РабочаяТаблица.Итог("Остаток");
			Иначе
				Если ПоПроводкам Тогда
					Строка.Остаток = ВыборкаИтоговПоДням.СуммаНачальныйОстатокДт - РабочаяТаблица.Итог("Остаток");
				Иначе
					Строка.Остаток = -РабочаяТаблица.Итог("Остаток");
				КонецЕсли;
			КонецЕсли;
			
			Если Сортировать Тогда
				РабочаяТаблица.Сортировать("Валюта");
			КонецЕсли;
			РабочаяТаблица.ЗаполнитьЗначения(0,"ВалПриход, Приход, ВалРасход, Расход");
			
			Если ПоПроводкам И ДатаЛиста = ВыборкаИтоговПоДням.Период Тогда
				ПоПроводкам = ВыборкаИтоговПоДням.Следующий();
			КонецЕсли;
			Если ПоДокументам И ДатаЛиста = ВыборкаДокументовПоДням.День Тогда
				ПоДокументам = ВыборкаДокументовПоДням.Следующий();
			КонецЕсли;
			
			ВывестиПодвал = Истина;
			
		КонецЦикла;
		
		Если ВывестиПодвал Тогда
			
			Если ВыборкаПоДокументамКассоваяКнига.ТипЛиста = Перечисления.ТипыЛистовКассовойКниги.ПоследнийВМесяце Тогда
				
				КоличествоЛистов = ПолучитьКоличествоЛистовКассовойКнигиЗаПериодПоОрганизации(
					ВыборкаПоДокументамКассоваяКнига.Организация,
					НачалоМесяца(ВыборкаПоДокументамКассоваяКнига.Дата),
					КонецМесяца(ВыборкаПоДокументамКассоваяКнига.Дата)
				);
				
				ОбластьЛистовЗаМесяцОтчет.Параметры.НадписьЛистовЗаМесяц = "Количество листов кассовой книги за месяц: " +КоличествоЛистов;
				ТабличныйДокумент.Вывести(ОбластьЛистовЗаМесяцОтчет);
				ТабличныйДокумент.Присоединить(ОбластьЛистовЗаМесяцОтчет);
				
			КонецЕсли;
			
			Если ВыборкаПоДокументамКассоваяКнига.ТипЛиста = Перечисления.ТипыЛистовКассовойКниги.ПоследнийВГоду Тогда
				
				
				КоличествоЛистов = ПолучитьКоличествоЛистовКассовойКнигиЗаПериодПоОрганизации(
					ВыборкаПоДокументамКассоваяКнига.Организация,
					НачалоГода(ВыборкаПоДокументамКассоваяКнига.Дата),
					КонецГода(ВыборкаПоДокументамКассоваяКнига.Дата)
				);
				
				ОбластьЛистовЗаГодОтчет.Параметры.НадписьЛистовЗаГод = "Количество листов кассовой книги за год: " + КоличествоЛистов;
				ТабличныйДокумент.Вывести(ОбластьЛистовЗаГодОтчет);
				ТабличныйДокумент.Присоединить(ОбластьЛистовЗаГодОтчет);
				
			КонецЕсли;
			
		КонецЕсли;
		
		ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		
		УправлениеПечатью.ЗадатьОбластьПечатиДокумента(
			ТабличныйДокумент,
			НомерСтрокиНачало,
			ОбъектыПечати,
			ВыборкаПоДокументамКассоваяКнига.Ссылка
		);
		
	КонецЦикла; // Цикл по выделенным документам
	
	ТабличныйДокумент.ТолькоПросмотр = Истина;
	Возврат ТабличныйДокумент;
	
КонецФункции

#КонецЕсли