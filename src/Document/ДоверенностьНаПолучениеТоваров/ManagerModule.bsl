#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

////////////////////////////////////////////////////////////////////////////////
// ПРОГРАММНЫЙ ИНТЕРФЕЙС

// Возвращает срок действия последней введенной ответственным в систему доверенности
//
// Возвращаемое значение:
//	Число - срок действия последней доверенности
//
Функция ПолучитьСрокДействияПоследнейДоверенности() Экспорт
	
	Запрос = Новый Запрос("
		|ВЫБРАТЬ ПЕРВЫЕ 1
		|	Доверенность.СрокДействия КАК СрокДействия
		|ИЗ
		|	Документ.ДоверенностьНаПолучениеТоваров КАК Доверенность
		|ГДЕ
		|	НЕ Доверенность.ПометкаУдаления
		|	И Доверенность.Ответственный = &Ответственный
		|УПОРЯДОЧИТЬ ПО
		|	Дата УБЫВ
		|");
		
	Запрос.УстановитьПараметр("Ответственный", Пользователи.ТекущийПользователь());
		
	РезультатЗапроса = Запрос.Выполнить();
	Если РезультатЗапроса.Пустой() Тогда
		Возврат Неопределено;
	Иначе
		Выборка = РезультатЗапроса.Выбрать();
		Выборка.Следующий();
		Возврат Выборка.СрокДействия;
	КонецЕсли;
	
КонецФункции

// Возвращает массив имен ролей с правом "Добавление" для данного документа
//
// Возвращаемое значение:
//	Массив - Массив с именами ролей
//
Функция ИменаРолейСПравомДобавления() Экспорт
	
	МассивРолей = Новый Массив;
	МассивРолей.Добавить("ПолныеПрава");
	МассивРолей.Добавить("ДобавлениеИзменениеДоверенностейНаПолучениеТоваров");
	Возврат МассивРолей;
	
КонецФункции

// Формирует запрос проверки при смене статуса списка документов
//
// Параметры:
//	МассивДокументов - Массив - Массив ссылок на документы, которые надо проверять
//	НовыйСтатус - Строка - Имя нового статуса
//	ДополнительныеПараметры - Структура - Структура дополнительных параметров
//
// Возвращаемое значение:
//	Запрос - Запрос проверки перед сменой статуса
//
Функция СформироватьЗапросПроверкиПриСменеСтатуса(МассивДокументов, НовыйСтатус, ДополнительныеПараметры) Экспорт
	
	ЗначениеНовогоСтатуса = Перечисления.СтатусыДоверенностейНаПолучениеТоваров[НовыйСтатус];
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ТаблицаДокументов.Ссылка КАК Ссылка,
	|	ПРЕДСТАВЛЕНИЕ(ТаблицаДокументов.Ссылка) КАК Представление,
	|	ПРЕДСТАВЛЕНИЕ(ТаблицаДокументов.Статус) КАК ПредставлениеТекущегоСтатуса,
	|	ПРЕДСТАВЛЕНИЕ(&Статус) КАК ПредставлениеНовогоСтатуса,
	|	ВЫБОР
	|		КОГДА ТаблицаДокументов.Статус = &Статус
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК СтатусСовпадает,
	|	ИСТИНА КАК Проведен, // Для документа доверенности свойство <Проведенение> установлено в <Запретить>
	|	ТаблицаДокументов.ПометкаУдаления КАК ПометкаУдаления,
	|	ЛОЖЬ КАК ЗаписьПроведением
	|ИЗ
	|	Документ.ДоверенностьНаПолучениеТоваров КАК ТаблицаДокументов
	|ГДЕ
	|	ТаблицаДокументов.Ссылка В(&МассивДокументов)";
	
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.УстановитьПараметр("Статус", ЗначениеНовогоСтатуса);
	Запрос.УстановитьПараметр("МассивДокументов", МассивДокументов);
	
	Возврат Запрос;
	
КонецФункции

// Возвращает результат проверки при смене статуса документа
//
// Параметры:
//	ВыборкаПроверки - ВыборкаИзРезультатаЗапроса - Текущая строка выборки
//	НовыйСтатус - Перечисление - Новый статус
//	ДополнительныеПараметры - Структура - Структура дополнительных параметров
//
// Возвращаемое значение:
//	Булево - Истина, в случае успешного завершения проверки
//
Функция ПроверкаПередСменойСтатуса(ВыборкаПроверки, НовыйСтатус, ДополнительныеПараметры) Экспорт
	
	Возврат Истина; // Дополнительные проверки для доверенности отсутствуют
	
КонецФункции

////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

////////////////////////////////////////////////////////////////////////////////
// Печать

Функция КоличествоПрописью(Количество)

	ЦелаяЧасть   = Цел(Количество);
	ДробнаяЧасть = Окр(Количество - ЦелаяЧасть, 3);

	Если ДробнаяЧасть = Окр(ДробнаяЧасть,0) Тогда
		ПараметрыПрописи = ", , , , , , , , 0";
	ИначеЕсли ДробнаяЧасть = Окр(ДробнаяЧасть, 1) Тогда
		ПараметрыПрописи = "целая, целых, целых, ж, десятая, десятых, десятых, м, 1";
	ИначеЕсли ДробнаяЧасть = Окр(ДробнаяЧасть, 2) Тогда
		ПараметрыПрописи = "целая, целых, целых, ж, сотая, сотых, сотых, м, 2";
	Иначе
		ПараметрыПрописи = "целая, целых, целых, ж, тысячная, тысячных, тысячных, м, 3";
	КонецЕсли;

	Возврат ЧислоПрописью(Количество, ,ПараметрыПрописи);

КонецФункции

Функция СформироватьПечатнуюФорму(Тип, МассивОбъектов, ОбъектыПечати)
	
	УстановитьПривилегированныйРежим(Истина);
	
	ТабличныйДокумент = Новый ТабличныйДокумент;
	МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	ОтветственныеЛицаСервер.СформироватьВременнуюТаблицуОтветственныхЛицДокументов(МассивОбъектов, МенеджерВременныхТаблиц);	
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("МассивОбъектов", МассивОбъектов);
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	Доверенность.Ссылка КАК Ссылка,
	|	Доверенность.Номер КАК Номер,
	|	Доверенность.Дата КАК ДатаДокумента,
	|	Доверенность.Организация КАК Организация,
	|	Доверенность.Организация.Префикс КАК Префикс,
	|	ТаблицаОтветственныеЛица.РуководительНаименование  КАК Руководитель,
	|	ТаблицаОтветственныеЛица.РуководительДолжность КАК ДолжностьРуководителя,
	|	ТаблицаОтветственныеЛица.ГлавныйБухгалтерНаименование КАК ГлавныйБухгалтер,
	|	Доверенность.ФизЛицо КАК ФизЛицо,
	|	Доверенность.ПоДокументу КАК РеквизитыДокументаНаПолучение,
	|	Доверенность.ДатаОкончанияДействия КАК СрокДействия,
	|	Доверенность.Должность КАК Должность,
	|	Доверенность.Ответственный КАК Ответственный,
	|	Доверенность.БанковскийСчет КАК БанковскийСчет,
	|	Доверенность.Контрагент.НаименованиеПолное КАК ПоставщикПредставление,
	|	Доверенность.ДокументОснование КАК ДокументОснование,
	|	Доверенность.ДокументОснование.Номер КАК НомерОснования,
	|	Доверенность.ДокументОснование.Дата КАК ДатаОснования,
	|	Доверенность.ДокументОснование.Организация.Префикс КАК ПрефиксОснования,
	|	Доверенность.Товары.(
	|		НомерСтроки КАК Номер,
	|		ПРЕДСТАВЛЕНИЕ(Доверенность.Товары.НоменклатураПоставщика) КАК НоменклатураПоставщика,
	|		Номенклатура.НаименованиеПолное КАК Номенклатура,
	|		Характеристика.НаименованиеПолное КАК Характеристика,
	|		ВЫБОР
	|			КОГДА ЕСТЬNULL(Доверенность.Товары.Упаковка.Коэффициент, 1) = 1
	|				ТОГДА НЕОПРЕДЕЛЕНО
	|			ИНАЧЕ Доверенность.Товары.Упаковка.Наименование
	|		КОНЕЦ КАК Упаковка,
	|		ВЫБОР
	|			КОГДА Доверенность.Товары.Упаковка = ЗНАЧЕНИЕ(Справочник.УпаковкиНоменклатуры.ПустаяСсылка)
	|				ТОГДА ПРЕДСТАВЛЕНИЕ(Доверенность.Товары.Номенклатура.ЕдиницаИзмерения)
	|			ИНАЧЕ ПРЕДСТАВЛЕНИЕ(Доверенность.Товары.Упаковка.ЕдиницаИзмерения)
	|		КОНЕЦ КАК ЕдиницаИзмеренияПредставление,
	|		КоличествоУпаковок КАК КоличествоУпаковок
	|	),
	|	Доверенность.МатериальныеЦенности.(
	|		НомерСтроки КАК Номер,
	|		МатериальнаяЦенность КАК МатериальнаяЦенность,
	|		Количество КАК Количество,
	|		ПРЕДСТАВЛЕНИЕ(Доверенность.МатериальныеЦенности.ЕдиницаИзмерения) КАК ЕдиницаИзмеренияПредставление
	|	),
	|	Доверенность.ВидДокументаФизЛица КАК ВидДокумента,
	|	Доверенность.СерияДокументаФизЛица КАК ПаспортСерия,
	|	Доверенность.НомерДокументаФизЛица КАК ПаспортНомер,
	|	Доверенность.КемВыданДокументФизлица КАК ПаспортВыдан,
	|	Доверенность.ДатаВыдачиДокументаФизЛица КАК ПаспортДатаВыдачи
	|ИЗ
	|	Документ.ДоверенностьНаПолучениеТоваров КАК Доверенность
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		ТаблицаОтветственныеЛица КАК ТаблицаОтветственныеЛица
	|		ПО Доверенность.Ссылка = ТаблицаОтветственныеЛица.Ссылка
	|ГДЕ
	|	Доверенность.Ссылка В(&МассивОбъектов)
	|
	|УПОРЯДОЧИТЬ ПО
	|	Ссылка";
	
	ДанныеПечати = Запрос.Выполнить().Выбрать();
	
	ПервыйДокумент = Истина;
	
	Макет = УправлениеПечатью.ПолучитьМакет("Документ.ДоверенностьНаПолучениеТоваров.ПФ_MXL_М2");
	
	Если Тип = "ДоверенностьМ2" Тогда
		ТабличныйДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_Доверенность_М2";
	ИначеЕсли Тип = "ДоверенностьМ2а" Тогда
		ТабличныйДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_Доверенность_М2а";
	КонецЕсли;
	
	Пока ДанныеПечати.Следующий() Цикл
		
		Если Не ПервыйДокумент Тогда
			ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		
		ПервыйДокумент = Ложь;
		
		НомерСтрокиНачало = ТабличныйДокумент.ВысотаТаблицы + 1;
		
		НомерДокументаНаПечать        = ПрефиксацияОбъектовКлиентСервер.ПолучитьНомерНаПечать(ДанныеПечати.Номер, Ложь, Истина);
		ФамилияИмяОтчествоДоверенного = ФизическиеЛица.ФамилияИнициалыФизЛица(ДанныеПечати.ФизЛицо);
		
		СведенияОбОрганизации = ФормированиеПечатныхФорм.СведенияОЮрФизЛице(
			ДанныеПечати.Организация,
			ДанныеПечати.ДатаДокумента,
			,
			ДанныеПечати.БанковскийСчет
		);
		
		ПредставлениеОрганизации = ФормированиеПечатныхФорм.ОписаниеОрганизации(
			СведенияОбОрганизации, 
			"ПолноеНаименование,ИНН,КПП,ЮридическийАдрес,Телефоны"
		);
		
		Если Тип = "ДоверенностьМ2" тогда
			
			ОбластьМакета = Макет.ПолучитьОбласть("Отрез");
			ОбластьМакета.Параметры.Заполнить(ДанныеПечати);
			
			ОбластьМакета.Параметры.НомерДокумента = НомерДокументаНаПечать;
			ОбластьМакета.Параметры.ФИОДоверенного = ?(ПустаяСтрока(ДанныеПечати.Должность), "", ДанныеПечати.Должность + " ") + ФамилияИмяОтчествоДоверенного;
			ТабличныйДокумент.Вывести(ОбластьМакета);
			
			НазваниеФормы = НСтр("ru='Типовая межотраслевая форма № М-2'");
			КодПоОКУД = "0315001";
			
		ИначеЕсли Тип = "ДоверенностьМ2а" Тогда
			
			НазваниеФормы = НСтр("ru='Типовая межотраслевая форма № М-2а'");
			КодПоОКУД = "0315002";
			
		КонецЕсли;
		
		// Заполнить реквизиты шапки
		ОбластьМакета = Макет.ПолучитьОбласть("Шапка");
		
		ОбластьМакета.Параметры.Заполнить(ДанныеПечати);
		ОбластьМакета.Параметры.НомерДокумента                = НомерДокументаНаПечать;
		ОбластьМакета.Параметры.НазваниеФормы                 = НазваниеФормы;
		ОбластьМакета.Параметры.ДатаДокумента                 = Формат(ДанныеПечати.ДатаДокумента,"ДФ = ""дд ММММ гггг """"г.""");
		ОбластьМакета.Параметры.СрокДействия                  = Формат(ДанныеПечати.СрокДействия,"ДФ = ""дд ММММ гггг """"г.""");
		ОбластьМакета.Параметры.ФамилияИмяОтчествоДоверенного = ДанныеПечати.ФизЛицо;
		ОбластьМакета.Параметры.ДолжностьДоверенного          = ДанныеПечати.Должность;
		ОбластьМакета.Параметры.ОрганизацияПредставление      = ПредставлениеОрганизации;
		ОбластьМакета.Параметры.РеквизитыПотребителя          = ПредставлениеОрганизации;
		ОбластьМакета.Параметры.РеквизитыПлательщика          = ПредставлениеОрганизации;
		ОбластьМакета.Параметры.ОрганизацияКодПоОКПО          = СведенияОбОрганизации.КодПоОКПО;
		
		ОбластьМакета.Параметры.РеквизитыСчета = ФормированиеПечатныхФорм.ОписаниеОрганизации(
			СведенияОбОрганизации,
			"НомерСчета,Банк,БИК,КоррСчет,"
		);
		
		ШтрихкодированиеПечатныхФорм.ВывестиШтрихкодВТабличныйДокумент(ТабличныйДокумент, Макет, ОбластьМакета, ДанныеПечати.Ссылка);
		ТабличныйДокумент.Вывести(ОбластьМакета);
		
		// Заполнить таблицу
		ОбластьМакета = Макет.ПолучитьОбласть("ЗаголовокТаблицы");
		ТабличныйДокумент.Вывести(ОбластьМакета);
		
		ОбластьМакета = Макет.ПолучитьОбласть("СтрокаТаблицы");
		
		ВыборкаСтрокТовары = ДанныеПечати.Товары.Выбрать();
		ВыборкаСтрокМатериальныеЦенности = ДанныеПечати.МатериальныеЦенности.Выбрать();
		КоличествоСтрок = 0;
		
		Пока ВыборкаСтрокТовары.Следующий() Цикл
			
			ОбластьМакета.Параметры.Заполнить(ВыборкаСтрокТовары);
			
			Если ЗначениеЗаполнено(ВыборкаСтрокТовары.НоменклатураПоставщика) Тогда
				
				ОбластьМакета.Параметры.МатериальнаяЦенность = ВыборкаСтрокТовары.НоменклатураПоставщика;
				
			Иначе
				
				ОбластьМакета.Параметры.МатериальнаяЦенность = НоменклатураКлиентСервер.ПредставлениеНоменклатурыДляПечати(
					ВыборкаСтрокТовары.Номенклатура,
					ВыборкаСтрокТовары.Характеристика
				);
				
			КонецЕсли;
			
			ОбластьМакета.Параметры.КоличествоПрописью = ?(
				ВыборкаСтрокТовары.КоличествоУпаковок = 0,
				"",
				Строка(ВыборкаСтрокТовары.КоличествоУпаковок) + " (" + 
				КоличествоПрописью(ВыборкаСтрокТовары.КоличествоУпаковок) + ")"
			);
			
			ТабличныйДокумент.Вывести(ОбластьМакета);
			
			КоличествоСтрок = КоличествоСтрок + 1;
			
		КонецЦикла;
		
		Пока ВыборкаСтрокМатериальныеЦенности.Следующий() Цикл
			
			ОбластьМакета.Параметры.Заполнить(ВыборкаСтрокМатериальныеЦенности);
			
			ОбластьМакета.Параметры.Номер = ВыборкаСтрокМатериальныеЦенности.Номер + КоличествоСтрок;
			
			ОбластьМакета.Параметры.КоличествоПрописью = ?(
				ВыборкаСтрокМатериальныеЦенности.Количество = 0,
				"",
				Строка(ВыборкаСтрокМатериальныеЦенности.Количество) + " (" + 
				КоличествоПрописью(ВыборкаСтрокМатериальныеЦенности.Количество) + ")"
			);
			
			ТабличныйДокумент.Вывести(ОбластьМакета);
			
		КонецЦикла;
		
		// Заполнить реквизиты подвала
		ОбластьМакета = Макет.ПолучитьОбласть("Подвал");
		
		ОбластьМакета.Параметры.ФИОРуководителя       = ДанныеПечати.Руководитель;
		ОбластьМакета.Параметры.ФИОГлавногоБухгалтера = ДанныеПечати.ГлавныйБухгалтер;
		ТабличныйДокумент.Вывести(ОбластьМакета);
		
		УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабличныйДокумент, НомерСтрокиНачало, ОбъектыПечати, ДанныеПечати.Ссылка);
		
	КонецЦикла;
	
	ТабличныйДокумент.АвтоМасштаб = Истина;
	
	Возврат ТабличныйДокумент;
	
КонецФункции

// Сформировать печатные формы объектов
//
// ВХОДЯЩИЕ:
//   ИменаМакетов    - Строка    - Имена макетов, перечисленные через запятую
//   МассивОбъектов  - Массив    - Массив ссылок на объекты которые нужно распечатать
//   ПараметрыПечати - Структура - Структура дополнительных параметров печати
//
// ИСХОДЯЩИЕ:
//   КоллекцияПечатныхФорм - Таблица значений - Сформированные табличные документы
//   ПараметрыВывода       - Структура        - Параметры сформированных табличных документов
//
Процедура Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт
	
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "М2") Тогда
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм, "М2", "М2 (Доверенность на получение товаров)", СформироватьПечатнуюФорму(ПараметрыПечати["Тип"], МассивОбъектов, ОбъектыПечати));
	КонецЕсли;
	
КонецПроцедуры


#КонецЕсли