#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

////////////////////////////////////////////////////////////////////////////////
// ПРОГРАММНЫЙ ИНТЕРФЕЙС

// Заполняет таблицу реквизитов, зависимых от хозяйственной операции
//
// Параметры:
//	ХозяйственнаяОперация - ПеречислениеСсылка.ХозяйственныеОперации - хозяйственная операция соглашения
//	МассивВсехРеквизитов - Массив - реквизиты, которые не зависят от хозяйственной операции
//	МассивРеквизитовОперации - Массив - реквизиты, которые зависят от хозяйственной операции
//
Процедура ЗаполнитьИменаРеквизитовПоХозяйственнойОперации(ХозяйственнаяОперация, МассивВсехРеквизитов, МассивРеквизитовОперации) Экспорт
	
	МассивВсехРеквизитов = Новый Массив;
	МассивВсехРеквизитов.Добавить("ПодотчетноеЛицо");
	МассивВсехРеквизитов.Добавить("ДатаПлатежа");
	МассивВсехРеквизитов.Добавить("ФормаОплаты");
	МассивВсехРеквизитов.Добавить("ГруппаФинансовогоУчета");
	МассивВсехРеквизитов.Добавить("ЗакупкаПодДеятельность");
	МассивВсехРеквизитов.Добавить("НалогообложениеНДС");
	МассивВсехРеквизитов.Добавить("Товары.ПроцентРучнойСкидки");
	МассивВсехРеквизитов.Добавить("Товары.СуммаРучнойСкидки");
	МассивВсехРеквизитов.Добавить("Товары.СтатьяРасходов");
	МассивВсехРеквизитов.Добавить("Товары.АналитикаРасходов");
	МассивВсехРеквизитов.Добавить("Товары.НомерГТД");
	МассивВсехРеквизитов.Добавить("ТоварыПоДаннымПоставщика.НомерГТД");
	
	ИспользоватьРучныеСкидкиВЗакупках = ПолучитьФункциональнуюОпцию("ИспользоватьРучныеСкидкиВЗакупках");
	
	МассивРеквизитовОперации = Новый Массив;
	Если ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ЗакупкаУПоставщика
	 Или ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ЗакупкаУПоставщикаРеглУчет Тогда
		МассивРеквизитовОперации.Добавить("ДатаПлатежа");
		МассивРеквизитовОперации.Добавить("ФормаОплаты");
		МассивРеквизитовОперации.Добавить("ГруппаФинансовогоУчета");
		МассивРеквизитовОперации.Добавить("ЗакупкаПодДеятельность");
		МассивРеквизитовОперации.Добавить("НалогообложениеНДС");
		МассивРеквизитовОперации.Добавить("Товары.СтатьяРасходов");
		МассивРеквизитовОперации.Добавить("Товары.АналитикаРасходов");
		МассивРеквизитовОперации.Добавить("Товары.НомерГТД");
		МассивРеквизитовОперации.Добавить("ТоварыПоДаннымПоставщика.НомерГТД");
		
		Если ИспользоватьРучныеСкидкиВЗакупках Тогда
			МассивРеквизитовОперации.Добавить("Товары.ПроцентРучнойСкидки");
			МассивРеквизитовОперации.Добавить("Товары.СуммаРучнойСкидки");
		КонецЕсли;
		
	ИначеЕсли ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ЗакупкаЧерезПодотчетноеЛицо Тогда
		МассивРеквизитовОперации.Добавить("ПодотчетноеЛицо");
		МассивРеквизитовОперации.Добавить("ЗакупкаПодДеятельность");
		МассивРеквизитовОперации.Добавить("НалогообложениеНДС");
		МассивРеквизитовОперации.Добавить("Товары.СтатьяРасходов");
		МассивРеквизитовОперации.Добавить("Товары.АналитикаРасходов");
		МассивРеквизитовОперации.Добавить("Товары.НомерГТД");
		МассивРеквизитовОперации.Добавить("ТоварыПоДаннымПоставщика.НомерГТД");
		
		Если ИспользоватьРучныеСкидкиВЗакупках Тогда
			МассивРеквизитовОперации.Добавить("Товары.ПроцентРучнойСкидки");
			МассивРеквизитовОперации.Добавить("Товары.СуммаРучнойСкидки");
		КонецЕсли;
		
	ИначеЕсли ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ПриемНаКомиссию Тогда
		МассивРеквизитовОперации.Добавить("НалогообложениеНДС");
		МассивРеквизитовОперации.Добавить("Товары.НомерГТД");
		МассивРеквизитовОперации.Добавить("ТоварыПоДаннымПоставщика.НомерГТД");
		
	ИначеЕсли ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ЗакупкаПоИмпорту Тогда
		
		МассивРеквизитовОперации.Добавить("ДатаПлатежа");
		МассивРеквизитовОперации.Добавить("ФормаОплаты");
		МассивРеквизитовОперации.Добавить("ГруппаФинансовогоУчета");
		МассивРеквизитовОперации.Добавить("Товары.СтатьяРасходов");
		МассивРеквизитовОперации.Добавить("Товары.АналитикаРасходов");
		
		Если ИспользоватьРучныеСкидкиВЗакупках Тогда
			МассивРеквизитовОперации.Добавить("Товары.ПроцентРучнойСкидки");
			МассивРеквизитовОперации.Добавить("Товары.СуммаРучнойСкидки");
		КонецЕсли;
	
	КонецЕсли;
	
КонецПроцедуры

// Функция определяет реквизиты выбранного документа
//
// Параметры:
//	ДокументСсылка - Ссылка на документа
//
// Возвращаемое значение:
//	Структура - реквизиты выбранного документа
//
Функция ПолучитьРеквизитыДокумента(ДокументСсылка) Экспорт
	
	Запрос = Новый Запрос("
	|ВЫБРАТЬ
	|	ДанныеДокумента.Дата КАК Дата,
	|	ДанныеДокумента.Организация КАК Организация,
	|	ДанныеДокумента.Партнер КАК Партнер,
	|	ДанныеДокумента.Контрагент КАК Контрагент,
	|	ДанныеДокумента.ВалютаВзаиморасчетов КАК ВалютаВзаиморасчетов,
	|	ДанныеДокумента.ХозяйственнаяОперация КАК ХозяйственнаяОперация,
	|	ДанныеДокумента.ЗаказПоставщику КАК ЗаказПоставщику,
	|	ДанныеДокумента.ПоступлениеПоЗаказам КАК ПоступлениеПоЗаказам,
	|	ДанныеДокумента.СуммаДокумента КАК СуммаДокумента,
	|	ДанныеДокумента.СуммаВзаиморасчетов + ЕСТЬNULL(ТаблицаСуммПоРасхождениям.СуммаВзаиморасчетов, 0) КАК СуммаВзаиморасчетов,
	|	ДанныеДокумента.Проведен КАК Проведен,
	|	ДанныеДокумента.Договор КАК Договор,
	|	ДанныеДокумента.ПорядокРасчетов КАК ПорядокРасчетов
	|
	|ИЗ
	|	Документ.ПоступлениеТоваровУслуг КАК ДанныеДокумента,
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ (
	|		ВЫБРАТЬ
	|			СУММА(
	|				ВЫБОР КОГДА ТаблицаРасхождений.ВариантОтраженияРасхождений = ЗНАЧЕНИЕ(Перечисление.ВариантыОтраженияРасхождений.ИзлишкиНаПрочиеДоходы) ТОГДА
	|					-ТаблицаРасхождений.СуммаВзаиморасчетов
	|				ИНАЧЕ
	|					ТаблицаРасхождений.СуммаВзаиморасчетов
	|				КОНЕЦ
	|			) КАК СуммаВзаиморасчетов
	|		ИЗ
	|			Документ.ПоступлениеТоваровУслуг.Расхождения КАК ТаблицаРасхождений
	|		ГДЕ
	|			ТаблицаРасхождений.Ссылка = &ДокументСсылка
	|			И ТаблицаРасхождений.ВариантОтраженияРасхождений В (
	|				ЗНАЧЕНИЕ(Перечисление.ВариантыОтраженияРасхождений.ИзлишкиНаПрочиеДоходы),
	|				ЗНАЧЕНИЕ(Перечисление.ВариантыОтраженияРасхождений.НедостачиНаПрочиеРасходы),
	|				ЗНАЧЕНИЕ(Перечисление.ВариантыОтраженияРасхождений.НедостачиЗаСчетСтороннейКомпании)
	|			)
	|		) КАК ТаблицаСуммПоРасхождениям
	|	ПО
	|		Истина
	|ГДЕ
	|	ДанныеДокумента.Ссылка = &ДокументСсылка
	|");
	
	Запрос.УстановитьПараметр("ДокументСсылка", ДокументСсылка);
	
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда
		Дата = Выборка.Дата;
		Организация = Выборка.Организация;
		Партнер = Выборка.Партнер;
		Контрагент = Выборка.Контрагент;
		Договор = Выборка.Договор;
		ПорядокРасчетов = Выборка.ПорядокРасчетов;
		ВалютаВзаиморасчетов = Выборка.ВалютаВзаиморасчетов;
		ХозяйственнаяОперация = ?(ЗначениеЗаполнено(Выборка.ХозяйственнаяОперация), Выборка.ХозяйственнаяОперация, Перечисления.ХозяйственныеОперации.ЗакупкаУПоставщика);
		ПоЗаказу = Выборка.ПоступлениеПоЗаказам;
		СуммаДокумента = Выборка.СуммаДокумента;
		СуммаВзаиморасчетов = ?(Выборка.Проведен, Выборка.СуммаВзаиморасчетов, 0);
	Иначе
		Дата = Дата(1,1,1);
		Организация = Справочники.Организации.ПустаяСсылка();
		Партнер = Справочники.Партнеры.ПустаяСсылка();
		Контрагент = Справочники.Контрагенты.ПустаяСсылка();
		Договор = Справочники.ДоговорыКонтрагентов.ПустаяСсылка();
		ПорядокРасчетов = Перечисления.ПорядокРасчетов.ПустаяСсылка();
		ВалютаВзаиморасчетов = Справочники.Валюты.ПустаяСсылка();
		ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ЗакупкаУПоставщика;
		ПоЗаказу = Ложь;
		СуммаДокумента = 0;
		СуммаВзаиморасчетов = 0;
	КонецЕсли;
	
	СтруктураРеквизитов = Новый Структура("Дата, Организация, Партнер, Контрагент, Договор, ПорядокРасчетов, ВалютаВзаиморасчетов, ХозяйственнаяОперация, ПоЗаказу, СуммаДокумента, СуммаВзаиморасчетов",
		Дата,
		Организация,
		Партнер,
		Контрагент,
		Договор,
		ПорядокРасчетов,
		ВалютаВзаиморасчетов,
		ХозяйственнаяОперация,
		ПоЗаказу,
		СуммаДокумента,
		СуммаВзаиморасчетов
	);
	
	Возврат СтруктураРеквизитов;

КонецФункции

// Осуществляет вычисление текущего состояния по поступлению без заказа
//
// Параметры:
//	ЗаказПоставщику         - ДокументСсылка.ПоступлениеТоваровУслуг - Документ, состояние которого необходимо вычислить
//	Договор                 - СправочникСсылка.ДоговорыКонтрагентов    - Договор с клиентом
//	СостояниеРасчетов       - УправляемаяФорма - Форма, в реквизиты которой будет помещено рассчитанное состояние
//
Процедура РассчитатьСостояние(Знач ПоступлениеТоваровУслуг,
	                          Знач Договор,
	                          СостояниеРасчетов) Экспорт
	
	ЗаполнитьЗначенияСвойств(СостояниеРасчетов, СтруктураСостоянияРасчетов());
	
	Если ЗначениеЗаполнено(ПоступлениеТоваровУслуг) И ПравоДоступа("Чтение", Метаданные.РегистрыНакопления.РасчетыСПоставщиками) Тогда
		УстановитьПривилегированныйРежим(Истина);
		Запрос = Новый Запрос("
			|ВЫБРАТЬ 
			|// СУММА ОПЛАТЫ /////////////////////////////////////////////////////////////
			|ВЫБОР
			|	КОГДА
			|		ДокументПоступлениеТоваровУслуг.ПорядокРасчетов <> ЗНАЧЕНИЕ(Перечисление.ПорядокРасчетов.ПоДоговорамКонтрагентов) И
			|		ДокументПоступлениеТоваровУслуг.ХозяйственнаяОперация <> ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПриемНаКомиссию) И
			|		ДокументПоступлениеТоваровУслуг.Проведен И
			|		ЕСТЬNULL(РасчетыСПоставщикамиОстатки.КОплатеРасход, 0) > 0
			|	ТОГДА
			|		ВЫРАЗИТЬ (ЕСТЬNULL(РасчетыСПоставщикамиОстатки.КОплатеПриход, 0) КАК ЧИСЛО(15, 2))
			|	ИНАЧЕ
			|		0
			|КОНЕЦ КАК СуммаОплаты,
			|// ПРОЦЕНТ ОПЛАТЫ ///////////////////////////////////////////////////////////
			|ВЫБОР
			|	КОГДА
			|		ДокументПоступлениеТоваровУслуг.ПорядокРасчетов <> ЗНАЧЕНИЕ(Перечисление.ПорядокРасчетов.ПоДоговорамКонтрагентов) И
			|		ДокументПоступлениеТоваровУслуг.ХозяйственнаяОперация <> ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПриемНаКомиссию) И
			|		ДокументПоступлениеТоваровУслуг.Проведен И
			|		ЕСТЬNULL(РасчетыСПоставщикамиОстатки.КОплатеРасход, 0) > 0
			|	ТОГДА
			|		ВЫРАЗИТЬ (ЕСТЬNULL(РасчетыСПоставщикамиОстатки.КОплатеПриход, 0) * 100 / РасчетыСПоставщикамиОстатки.КОплатеРасход КАК ЧИСЛО(15, 0))
			|	ИНАЧЕ
			|		0
			|КОНЕЦ КАК ПроцентОплаты,
			|// СУММА ПРОСРОЧЕННОЙ ОПЛАТЫ ////////////////////////////////////////////////
			|ВЫБОР
			|	КОГДА
			|		ДокументПоступлениеТоваровУслуг.ПорядокРасчетов <> ЗНАЧЕНИЕ(Перечисление.ПорядокРасчетов.ПоДоговорамКонтрагентов) И
			|		ДокументПоступлениеТоваровУслуг.Проведен И
			|		ЕСТЬNULL(РасчетыСПоставщикамиОстатки.КОплатеРасход, 0) > 0
			|		И ЕСТЬNULL(РасчетыСПоставщикамиОстаткиНаДатуАктуальности.КОплатеОстаток, 0) < 0
			|	ТОГДА
			|		ВЫРАЗИТЬ (-ЕСТЬNULL(РасчетыСПоставщикамиОстаткиНаДатуАктуальности.КОплатеОстаток, 0) КАК ЧИСЛО(15, 2))
			|	ИНАЧЕ
			|		0
			|КОНЕЦ КАК СуммаПросроченнойОплаты,
			|// СУММА ПОСТУПЛЕНИЯ ////////////////////////////////////////////////////////
			|ВЫБОР
			|	КОГДА
			|		ДокументПоступлениеТоваровУслуг.ПорядокРасчетов <> ЗНАЧЕНИЕ(Перечисление.ПорядокРасчетов.ПоДоговорамКонтрагентов) И
			|		ДокументПоступлениеТоваровУслуг.Проведен И
			|		ЕСТЬNULL(РасчетыСПоставщикамиОстатки.КОплатеРасход, 0) > 0
			|	ТОГДА
			|		ЕСТЬNULL(РасчетыСПоставщикамиОстатки.КОплатеРасход, 0)
			|	ИНАЧЕ
			|		0
			|КОНЕЦ КАК СуммаПоступления,
			|// ПРОЦЕНТ ПОСТУПЛЕНИЯ //////////////////////////////////////////////////////
			|ВЫБОР
			|	КОГДА
			|		ДокументПоступлениеТоваровУслуг.ПорядокРасчетов <> ЗНАЧЕНИЕ(Перечисление.ПорядокРасчетов.ПоДоговорамКонтрагентов) И
			|		ДокументПоступлениеТоваровУслуг.Проведен И
			|		ЕСТЬNULL(РасчетыСПоставщикамиОстатки.КОплатеРасход, 0) > 0
			|	ТОГДА
			|		ВЫРАЗИТЬ (ЕСТЬNULL(РасчетыСПоставщикамиОстатки.КОплатеРасход, 0) * 100 / ЕСТЬNULL(РасчетыСПоставщикамиОстатки.КОплатеРасход, 0) КАК ЧИСЛО(15, 0))
			|	ИНАЧЕ
			|		0
			|КОНЕЦ КАК ПроцентПоступления,
			|// ДОЛГ (+ НАМ ДОЛЖНЫ, - МЫ ДОЛЖНЫ)//////////////////////////////////////////
			|ВЫБОР
			|	КОГДА
			|		ДокументПоступлениеТоваровУслуг.Проведен И
			|		(ЕСТЬNULL(РасчетыСПоставщикамиОстатки.КОплатеРасход, 0) > 0 ИЛИ
			|		ДокументПоступлениеТоваровУслуг.ПорядокРасчетов = ЗНАЧЕНИЕ(Перечисление.ПорядокРасчетов.ПоДоговорамКонтрагентов))
			|	ТОГДА
			|		ВЫРАЗИТЬ (ЕСТЬNULL(РасчетыСПоставщикамиОстатки.СуммаКонечныйОстаток, 0) КАК ЧИСЛО(15, 2))
			|	ИНАЧЕ
			|		0
			|КОНЕЦ КАК СуммаДолга,
			|ВЫБОР
			|	КОГДА
			|		ДокументПоступлениеТоваровУслуг.ПорядокРасчетов <> ЗНАЧЕНИЕ(Перечисление.ПорядокРасчетов.ПоДоговорамКонтрагентов) И
			|		ДокументПоступлениеТоваровУслуг.Проведен И
			|		ЕСТЬNULL(РасчетыСПоставщикамиОстатки.КОплатеРасход, 0) > 0
			|	ТОГДА
			|		ВЫБОР
			|			КОГДА
			|				ЕСТЬNULL(РасчетыСПоставщикамиОстатки.СуммаКонечныйОстаток, 0) > 0
			|			ТОГДА
			|				ВЫРАЗИТЬ ((ЕСТЬNULL(РасчетыСПоставщикамиОстатки.СуммаКонечныйОстаток, 0) * 100 / ЕСТЬNULL(РасчетыСПоставщикамиОстатки.КОплатеРасход, 0)) КАК ЧИСЛО(15, 0))
			|			ИНАЧЕ
			|				ВЫРАЗИТЬ ((ЕСТЬNULL(-РасчетыСПоставщикамиОстатки.СуммаКонечныйОстаток, 0) * 100 / ЕСТЬNULL(РасчетыСПоставщикамиОстатки.КОплатеРасход, 0)) КАК ЧИСЛО(15, 0))
			|		КОНЕЦ
			|	ИНАЧЕ
			|		0
			|КОНЕЦ КАК ПроцентДолга
			|ИЗ
			|	Документ.ПоступлениеТоваровУслуг КАК ДокументПоступлениеТоваровУслуг
			|ЛЕВОЕ СОЕДИНЕНИЕ
			|	РегистрНакопления.РасчетыСПоставщиками.ОстаткиИОбороты(,,,,ЗаказПоставщику = &РасчетныйДокумент) КАК РасчетыСПоставщикамиОстатки
			|ПО
			|	Истина
			|ЛЕВОЕ СОЕДИНЕНИЕ
			|	РегистрНакопления.РасчетыСПоставщиками.Остатки(КОНЕЦПЕРИОДА(&ТекущаяДата, ДЕНЬ), ЗаказПоставщику = &РасчетныйДокумент) КАК РасчетыСПоставщикамиОстаткиНаДатуАктуальности
			|ПО
			|	Истина
			|ГДЕ
			|	ДокументПоступлениеТоваровУслуг.Ссылка = &ПоступлениеТоваровУслуг
			|
			|");
		
		ПорядокРасчетов = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ПоступлениеТоваровУслуг, "ПорядокРасчетов");
		
		Запрос.УстановитьПараметр("ПоступлениеТоваровУслуг", ПоступлениеТоваровУслуг);
		Запрос.УстановитьПараметр("РасчетныйДокумент", ?(ПорядокРасчетов = Перечисления.ПорядокРасчетов.ПоДоговорамКонтрагентов,
			Договор,
			ПоступлениеТоваровУслуг)
		);
		Запрос.УстановитьПараметр("ТекущаяДата",  НачалоДня(ТекущаяДата()));
		Выборка = Запрос.Выполнить().Выбрать();
		Выборка.Следующий();
		
		ЗаполнитьЗначенияСвойств(СостояниеРасчетов, Выборка);
		
	КонецЕсли;
	
КонецПроцедуры

// Осуществляет инициализацию структуры состояния расчетов
Функция СтруктураСостоянияРасчетов() Экспорт
	Возврат
		Новый Структура(
			"СуммаОплаты, СуммаПоступления, ПроцентОплаты, ПроцентПоступления, СуммаПросроченнойОплаты, СуммаДолга, ПроцентДолга",
			0., 0., 0., 0., 0., 0.,0.);
КонецФункции

// Формирует результат запроса по непоставленной части заказов
//
// Параметры:
//	ДанныеОтбора     - Структура - поля, по которым будут отобраны остатки заказов
//	СкладПоступления - СправочникСсылка.Склады - склад, по которому будут отобраны остатки заказов
//	МассивЗаказов      Массив - заказы, по которым будут отобраны остатки
//
// Вовращаемое значение:
//	Результат запроса - результат запроса по непоставленной части заказов
//
Функция ПолучитьРезультатЗапросаПоОстаткамЗаказов(ДанныеОтбора,
	                                              СкладПоступления = Неопределено,
	                                              МассивЗаказов = Неопределено)

	Запрос = Новый Запрос;
	
	Запрос.УстановитьПараметр("МассивЗаказов",             МассивЗаказов);
	Запрос.УстановитьПараметр("Партнер",                   ДанныеОтбора.Партнер);
	Запрос.УстановитьПараметр("Контрагент",                ДанныеОтбора.Контрагент);
	Запрос.УстановитьПараметр("Договор",                   ДанныеОтбора.Договор);
	Запрос.УстановитьПараметр("Организация",               ДанныеОтбора.Организация);
	Запрос.УстановитьПараметр("ХозяйственнаяОперация",     ДанныеОтбора.ХозяйственнаяОперация);
	Запрос.УстановитьПараметр("Соглашение",                ДанныеОтбора.Соглашение);
	Запрос.УстановитьПараметр("ВалютаВзаиморасчетов",      ДанныеОтбора.ВалютаВзаиморасчетов);
	Запрос.УстановитьПараметр("НалогообложениеНДС",        ДанныеОтбора.НалогообложениеНДС);
	Запрос.УстановитьПараметр("ЦенаВключаетНДС",           ДанныеОтбора.ЦенаВключаетНДС);
	Запрос.УстановитьПараметр("ВернутьМногооборотнуюТару", ДанныеОтбора.ВернутьМногооборотнуюТару);
	Запрос.УстановитьПараметр("Регистратор",               ДанныеОтбора.Ссылка);
	Запрос.УстановитьПараметр("СкладПоступления",          СкладПоступления);
	Запрос.УстановитьПараметр("ОтобратьПоЗаказу",          МассивЗаказов <> Неопределено);

	Запрос.Текст =
	"
	|ВЫБРАТЬ
	|	ТаблицаЗаказы.ЗаказПоставщику        КАК ЗаказПоставщику,
	|	ТаблицаЗаказы.Номенклатура           КАК Номенклатура,
	|	ТаблицаЗаказы.Характеристика         КАК Характеристика,
	|	ТаблицаЗаказы.КодСтроки              КАК КодСтроки,
	|	ТаблицаЗаказы.Склад                  КАК Склад,
	|	СУММА(ТаблицаЗаказы.КОформлению)     КАК Количество
	|
	|ПОМЕСТИТЬ ТаблицаОстатки
	|
	|ИЗ
	|	(ВЫБРАТЬ
	|		ЗаказыОстатки.ЗаказПоставщику        КАК ЗаказПоставщику,
	|		ЗаказыОстатки.Номенклатура           КАК Номенклатура,
	|		ЗаказыОстатки.Характеристика         КАК Характеристика,
	|		ЗаказыОстатки.КодСтроки              КАК КодСтроки,
	|		ЗаказыОстатки.Склад                  КАК Склад,
	|		ЗаказыОстатки.КОформлениюОстаток     КАК КОформлению
	|	ИЗ
	|		РегистрНакопления.ЗаказыПоставщикам.Остатки(,
	|				ВЫБОР КОГДА &ОтобратьПоЗаказу ТОГДА
	|					ЗаказПоставщику В (&МассивЗаказов)
	|				ИНАЧЕ
	|					ЗаказПоставщику.Партнер = &Партнер
	|					И ЗаказПоставщику.Контрагент = &Контрагент
	|					И ЗаказПоставщику.Договор = &Договор
	|					И ЗаказПоставщику.Организация = &Организация
	|					И ЗаказПоставщику.ХозяйственнаяОперация = &ХозяйственнаяОперация
	|					И ЗаказПоставщику.Соглашение = &Соглашение
	|					И ЗаказПоставщику.Валюта = &ВалютаВзаиморасчетов
	|					И ЗаказПоставщику.НалогообложениеНДС = &НалогообложениеНДС
	|					И ЗаказПоставщику.ЦенаВключаетНДС = &ЦенаВключаетНДС
	|					И ЗаказПоставщику.ВернутьМногооборотнуюТару = &ВернутьМногооборотнуюТару
	|				КОНЕЦ
	|				И
	|				ВЫБОР
	|					КОГДА
	|						ВЫРАЗИТЬ(&СкладПоступления КАК Справочник.Склады).ЭтоГруппа
	|					ТОГДА
	|						Склад В ИЕРАРХИИ (&СкладПоступления) ИЛИ Склад = ЗНАЧЕНИЕ(Справочник.Склады.ПустаяСсылка)
	|					ИНАЧЕ
	|						Склад В (ЗНАЧЕНИЕ(Справочник.Склады.ПустаяСсылка), &СкладПоступления)
	|				КОНЕЦ
	|			) КАК ЗаказыОстатки
	|
	|	ОБЪЕДИНИТЬ ВСЕ
	|
	|	ВЫБРАТЬ
	|		ЗаказыДвижения.ЗаказПоставщику,
	|		ЗаказыДвижения.Номенклатура,
	|		ЗаказыДвижения.Характеристика,
	|		ЗаказыДвижения.КодСтроки,
	|		ЗаказыДвижения.Склад,
	|		ВЫБОР КОГДА ЗаказыДвижения.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) ТОГДА
	|				-ЗаказыДвижения.КОформлению
	|			ИНАЧЕ
	|				ЗаказыДвижения.КОформлению
	|		КОНЕЦ
	|	ИЗ
	|		РегистрНакопления.ЗаказыПоставщикам КАК ЗаказыДвижения
	|	ГДЕ
	|		ЗаказыДвижения.Регистратор = &Регистратор
	|		И ВЫБОР КОГДА &ОтобратьПоЗаказу ТОГДА
	|			ЗаказыДвижения.ЗаказПоставщику В (&МассивЗаказов)
	|		ИНАЧЕ
	|			ЗаказыДвижения.ЗаказПоставщику.Партнер = &Партнер
	|			И ЗаказыДвижения.ЗаказПоставщику.Контрагент = &Контрагент
	|			И ЗаказыДвижения.ЗаказПоставщику.Договор = &Договор
	|			И ЗаказыДвижения.ЗаказПоставщику.Организация = &Организация
	|			И ЗаказыДвижения.ЗаказПоставщику.ХозяйственнаяОперация = &ХозяйственнаяОперация
	|			И ЗаказыДвижения.ЗаказПоставщику.Соглашение = &Соглашение
	|			И ЗаказыДвижения.ЗаказПоставщику.Валюта = &ВалютаВзаиморасчетов
	|			И ЗаказыДвижения.ЗаказПоставщику.НалогообложениеНДС = &НалогообложениеНДС
	|			И ЗаказыДвижения.ЗаказПоставщику.ЦенаВключаетНДС = &ЦенаВключаетНДС
	|			И ЗаказыДвижения.ЗаказПоставщику.ВернутьМногооборотнуюТару = &ВернутьМногооборотнуюТару
	|		КОНЕЦ
	|		И ЗаказыДвижения.Активность
	|				И ВЫБОР
	|					КОГДА
	|						ВЫРАЗИТЬ(&СкладПоступления КАК Справочник.Склады).ЭтоГруппа
	|					ТОГДА
	|						ЗаказыДвижения.Склад В ИЕРАРХИИ (&СкладПоступления) ИЛИ Склад = ЗНАЧЕНИЕ(Справочник.Склады.ПустаяСсылка)
	|					ИНАЧЕ
	|						ЗаказыДвижения.Склад В (ЗНАЧЕНИЕ(Справочник.Склады.ПустаяСсылка), &СкладПоступления)
	|				КОНЕЦ
	|	) КАК ТаблицаЗаказы
	|	
	|	СГРУППИРОВАТЬ ПО
	|		ТаблицаЗаказы.ЗаказПоставщику,
	|		ТаблицаЗаказы.Номенклатура,
	|		ТаблицаЗаказы.Характеристика,
	|		ТаблицаЗаказы.КодСтроки,
	|		ТаблицаЗаказы.Склад
	|	
	|	ИМЕЮЩИЕ
	|		СУММА(ТаблицаЗаказы.КОформлению) > 0
	|;
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаОстатки.ЗаказПоставщику           КАК ЗаказПоставщику,
	|	ТаблицаОстатки.Номенклатура              КАК Номенклатура,
	|	ТаблицаОстатки.Характеристика            КАК Характеристика,
	|	ТаблицаОстатки.КодСтроки                 КАК КодСтроки,
	|	ТаблицаОстатки.Количество                КАК Количество,
	|	ТаблицаОстатки.Склад                     КАК Склад,
	|	ЗаказТовары.Ссылка.Сделка                КАК Сделка,
	|	ЗаказТовары.СтатьяРасходов               КАК СтатьяРасходов,
	|	ЗаказТовары.АналитикаРасходов            КАК АналитикаРасходов,
	|	ЗаказТовары.ДатаПоступления              КАК ДатаПоступления,
	|	ЗаказТовары.Упаковка                     КАК Упаковка,
	|	ЗаказТовары.УсловиеЦеныПоставщика        КАК УсловиеЦеныПоставщика,
	|	ЗаказТовары.Количество                   КАК КоличествоПоЗаказу,
	|	ЗаказТовары.Цена                         КАК Цена,
	|	ЗаказТовары.СтавкаНДС                    КАК СтавкаНДС,
	|	ЗаказТовары.Сумма                        КАК Сумма,
	|	ЗаказТовары.СуммаНДС                     КАК СуммаНДС,
	|	ЗаказТовары.СуммаСНДС                    КАК СуммаСНДС,
	|	ЗаказТовары.ПроцентРучнойСкидки          КАК ПроцентРучнойСкидки,
	|	ЗаказТовары.СуммаРучнойСкидки            КАК СуммаРучнойСкидки,
	|	ЗаказТовары.Номенклатура.ТипНоменклатуры КАК ТипНоменклатуры,
	|	ЗаказТовары.НоменклатураПоставщика       КАК НоменклатураПоставщика,
	|	ЗаказТовары.Назначение                   КАК Назначение,
	|	ВЫБОР КОГДА ЗаказТовары.Упаковка = ЗНАЧЕНИЕ(Справочник.УпаковкиНоменклатуры.ПустаяСсылка)
	|			ТОГДА 1
	|		ИНАЧЕ ЗаказТовары.Упаковка.Коэффициент
	|	КОНЕЦ                                    КАК Коэффициент
	|ИЗ
	|	ТаблицаОстатки КАК ТаблицаОстатки
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ЗаказПоставщику.Товары КАК ЗаказТовары
	|		ПО  ТаблицаОстатки.Номенклатура     = ЗаказТовары.Номенклатура
	|			И ТаблицаОстатки.Характеристика = ЗаказТовары.Характеристика
	|			И ТаблицаОстатки.КодСтроки      = ЗаказТовары.КодСтроки
	|			И ТаблицаОстатки.ЗаказПоставщику = ЗаказТовары.Ссылка
	|
	|УПОРЯДОЧИТЬ ПО
	|	ТаблицаОстатки.ЗаказПоставщику,
	|	ЗаказТовары.НомерСтроки
	|";

	УстановитьПривилегированныйРежим(Истина);
	Возврат Запрос.Выполнить();

КонецФункции

// Функция получает список складов со справочным хранением остатков по массиву документов
//
// Параметры:
//	МассивДокументов - массив ссылок документов "Поступление товаров и услуг"
//
// Вовращаемое значение:
//	Список значений - список складов со справочным хранением остатков
//
Функция ПолучитьСписокСкладовСоСправочнымХранением(МассивДокументов) Экспорт
	
	Запрос = Новый Запрос("ВЫБРАТЬ РАЗЛИЧНЫЕ
	                      |	ПоступлениеТоваровУслугТовары.Склад КАК Склад
	                      |ИЗ
	                      |	Документ.ПоступлениеТоваровУслуг.Товары КАК ПоступлениеТоваровУслугТовары
	                      |ГДЕ
	                      |	ПоступлениеТоваровУслугТовары.Склад.ИспользоватьАдресноеХранениеСправочно
	                      |	И ПоступлениеТоваровУслугТовары.Ссылка В(&МассивДокументов)
	                      |
	                      |УПОРЯДОЧИТЬ ПО
	                      |	ПоступлениеТоваровУслугТовары.Склад.Наименование");
	СписокСкладов = Неопределено;
	Запрос.УстановитьПараметр("МассивДокументов", МассивДокументов);
	
	Результат = Запрос.Выполнить();
	
	СписокСкладов = Новый СписокЗначений;
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		СписокСкладов.Добавить(Выборка.Склад);
	КонецЦикла;
	
	Возврат СписокСкладов;
	
КонецФункции

// Заполняет таблицу товаров по данным отбора или массиву заказов
//
// Параметры:
//	ДанныеОтбора            - Структура - поля, по которым будут отобраны остатки заказов для заполнения документа
//	Товары                  - ДанныеФормыКоллекция - таблица товаров, в которую будут помещены остатки заказов
//	МассивЗаказов           - Массив - заказы, по которым будут отобраны остатки
//
Процедура ЗаполнитьПоОстаткамЗаказов(ДанныеОтбора,
	                                 Товары,
	                                 СкладПоступления,
	                                 МассивЗаказов = Неопределено) Экспорт
	
	// Данные по остаткам товаров заказа.
	ВыборкаТовары = ПолучитьРезультатЗапросаПоОстаткамЗаказов(
		ДанныеОтбора,
		СкладПоступления,
		МассивЗаказов
	).Выбрать();
	
	МассивЗаказовПоставщику = Новый Массив();
	
	Пока ВыборкаТовары.Следующий() Цикл
		Если МассивЗаказовПоставщику.Найти(ВыборкаТовары.ЗаказПоставщику) = Неопределено Тогда
			МассивЗаказовПоставщику.Добавить(ВыборкаТовары.ЗаказПоставщику);
		КонецЕсли;
	КонецЦикла;
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("МассивЗаказовПоставщику", МассивЗаказовПоставщику);
	Запрос.УстановитьПараметр("ВалютаДокумента", ДанныеОтбора.Валюта);
	
	Запрос.Текст =
	"
	|ВЫБРАТЬ
	|	НАЧАЛОПЕРИОДА(ТаблицаЗаказов.Дата, ДЕНЬ) КАК Дата,
	|	ТаблицаЗаказов.Ссылка                    КАК ЗаказПоставщику,
	|	ТаблицаЗаказов.Валюта                    КАК Валюта,
	|	ТаблицаЗаказов.ЦенаВключаетНДС           КАК ЦенаВключаетНДС,
	|	ВЫБОР
	|		КОГДА
	|			ТаблицаЗаказов.Валюта <> &ВалютаДокумента
	|		ТОГДА
	|			ИСТИНА
	|		ИНАЧЕ
	|			ЛОЖЬ
	|	КОНЕЦ КАК ПересчитатьВВалютуДокумента
	|ИЗ
	|	Документ.ЗаказПоставщику КАК ТаблицаЗаказов
	|ГДЕ
	|	ТаблицаЗаказов.Ссылка В (&МассивЗаказовПоставщику)
	|;
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	НАЧАЛОПЕРИОДА(ТаблицаЗаказов.Дата, ДЕНЬ) КАК Дата,
	|	ТаблицаЗаказов.Валюта                    КАК Валюта
	|ИЗ
	|	Документ.ЗаказПоставщику КАК ТаблицаЗаказов
	|ГДЕ
	|	ТаблицаЗаказов.Ссылка В (&МассивЗаказовПоставщику)
	|	И ТаблицаЗаказов.Валюта <> &ВалютаДокумента
	|
	|";
	
	РезультатЗапроса = Запрос.ВыполнитьПакет();
	РеквизитыЗаказов = РезультатЗапроса[0].Выбрать();
	
	ТаблицаКурсовВалют = Новый ТаблицаЗначений;
	ТаблицаКурсовВалют.Колонки.Добавить("Валюта",    Новый ОписаниеТипов("СправочникСсылка.Валюты"));
	ТаблицаКурсовВалют.Колонки.Добавить("Дата",      Новый ОписаниеТипов("Дата"));
	ТаблицаКурсовВалют.Колонки.Добавить("Курс",      Новый ОписаниеТипов("Число"));
	ТаблицаКурсовВалют.Колонки.Добавить("Кратность", Новый ОписаниеТипов("Число"));
	
	Выборка = РезультатЗапроса[1].Выбрать();
	
	Пока Выборка.Следующий() Цикл
		
		НоваяСтрока = ТаблицаКурсовВалют.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, Выборка);
		
		КурсыВалюты = РаботаСКурсамиВалют.ПолучитьКурсВалюты(Выборка.Валюта, Выборка.Дата);
		НоваяСтрока.Курс = КурсыВалюты.Курс;
		НоваяСтрока.Кратность = КурсыВалюты.Кратность;
		
	КонецЦикла;
	
	Если ТаблицаКурсовВалют.Количество() > 0 Тогда
		СтруктураКурсовНовойВалюты = РаботаСКурсамиВалют.ПолучитьКурсВалюты(ДанныеОтбора.Валюта, ТекущаяДата());
	КонецЕсли;
	
	ВыборкаТовары.Сбросить();
	Пока ВыборкаТовары.Следующий() Цикл
		
		НеобходимПересчетСумм = (ВыборкаТовары.Количество<>ВыборкаТовары.КоличествоПоЗаказу);
		
		СтрокаТаб = Товары.Добавить();
		ЗаполнитьЗначенияСвойств(СтрокаТаб, ВыборкаТовары);
		
		СтрокаТаб.Количество = ВыборкаТовары.Количество;
		СтрокаТаб.КоличествоУпаковок = ВыборкаТовары.Количество / ВыборкаТовары.Коэффициент;
		
		РеквизитыЗаказов.Сбросить();
		ЗаказНайден = РеквизитыЗаказов.НайтиСледующий(СтрокаТаб.ЗаказПоставщику, "ЗаказПоставщику");
		
		Если ЗаказНайден Тогда
			
			Если РеквизитыЗаказов.ПересчитатьВВалютуДокумента Тогда
				
				ПараметрыОтбора = Новый Структура("Валюта,Дата", РеквизитыЗаказов.Валюта, РеквизитыЗаказов.Дата);
				КурсВалюты = ТаблицаКурсовВалют.НайтиСтроки(ПараметрыОтбора);
				
				Если КурсВалюты.Количество() = 1 Тогда
					
					СтрокаТаб.Цена = РаботаСКурсамиВалютКлиентСервер.ПересчитатьИзВалютыВВалюту(
							СтрокаТаб.Цена,
							РеквизитыЗаказов.Валюта, ДанныеОтбора.Валюта,
							КурсВалюты[0].Курс,СтруктураКурсовНовойВалюты.Курс,
							КурсВалюты[0].Кратность,СтруктураКурсовНовойВалюты.Кратность
					);
					НеобходимПересчетСумм = Истина;
					
				КонецЕсли;
				
			КонецЕсли;
			
		КонецЕсли;
		
		Если НеобходимПересчетСумм Тогда
			
			Ценообразование.ПересчитатьСуммыВСтроке(СтрокаТаб, Ложь, Ложь, Истина, РеквизитыЗаказов.ЦенаВключаетНДС);
			
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

//Имена реквизитов, от значений которых зависят параметры указания серий
//
//	Возвращаемое значение:
//		Строка - имена реквизитов, перечисленные через запятую
//
Функция ИменаРеквизитовДляЗаполненияПараметровУказанияСерий() Экспорт
	ИменаРеквизитов = "Склад,ХозяйственнаяОперация";
	
	Возврат ИменаРеквизитов;
КонецФункции

//Возвращает параметры указания серий для товаров, указанных в документе
//
//	Параметры
//			Объект - Структура - структура значений реквизитов объекта, необходимых для заполнения параметров указания серий
//	Возвращаемое значение
//			Тип Структура
//				Состав полей задается в функции ОбработкаТабличнойЧастиКлиентСервер.ПараметрыУказанияСерий
//
Функция ПараметрыУказанияСерий(Объект) Экспорт
	
	ПараметрыУказанияСерий = НоменклатураКлиентСервер.ПараметрыУказанияСерий();
	
	ИспользованиеСерийСклад = Ложь;
	ГруппаСкладов = Справочники.Склады.ЭтоГруппа(Объект.Склад);
	Если ГруппаСкладов <> Неопределено Тогда
		Если ГруппаСкладов Тогда
			ИспользованиеСерийСклад = ПолучитьФункциональнуюОпцию("ИспользоватьСерииНоменклатуры");
		Иначе
			ИспользованиеСерийСклад = ПолучитьФункциональнуюОпцию("ИспользоватьСерииНоменклатурыСклад", Новый Структура("Склад", Объект.Склад))
			И Не ПолучитьФункциональнуюОпцию("ИспользоватьОрдернуюСхемуПриПоступлении",  Новый Структура("Склад", Объект.Склад));
		КонецЕсли;
	КонецЕсли;
	ИспользованиеСерийСклад = ИспользованиеСерийСклад 
							И Объект.ХозяйственнаяОперация <> Перечисления.ХозяйственныеОперации.ЗакупкаУПоставщикаРеглУчет;
	ПараметрыУказанияСерий.ИспользоватьСерииНоменклатуры = ИспользованиеСерийСклад;
	
	ПараметрыУказанияСерий.СкладскиеОперации.Добавить(Перечисления.СкладскиеОперации.ПриемкаОтПоставщика);
	
	ПараметрыУказанияСерий.ПоляСвязи.Добавить("Склад");
	ПараметрыУказанияСерий.ЭтоНакладная = Истина;
	
	Возврат ПараметрыУказанияСерий;
КонецФункции

// Возвращает массив имен ролей с правом "Добавление" для данного документа
//
// Возвращаемое значение:
//	Массив - Массив с именами ролей
//
Функция ИменаРолейСПравомДобавления() Экспорт
	
	МассивРолей = Новый Массив;
	МассивРолей.Добавить("ПолныеПрава");
	МассивРолей.Добавить("ДобавлениеИзменениеПоступленийТоваровУслугВозвратовПоставщикам");
	Возврат МассивРолей;
	
КонецФункции

// Функция возвращает текст запроса для отражения документа в регламентированном учете.
//
// Возвращаемое значение:
//	Строка - Текст запроса
//
Функция ТекстОтраженияВРеглУчете() Экспорт
	
	ПриемНаКомиссию = "
	|ВЫБРАТЬ //// Прием товаров на комиссию (Дт 004.01 :: Кт )
	|	Операция.Дата КАК Период,
	|	Операция.Организация КАК Организация,
	|	НЕОПРЕДЕЛЕНО КАК ИдентификаторСтроки,
	|
	|   0. КАК Сумма, // Суммы в Альфа-версии не заполняем, было ЕСТЬNULL(Суммы.СуммаБезНДСРегл + Суммы.СуммаНДСРегл, Строки.СуммаСНДС)
	|
	|	НЕОПРЕДЕЛЕНО КАК ВидСчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаУчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаДт,
	|
	|	НЕОПРЕДЕЛЕНО КАК ВалютаДт,
	|	Склады.Подразделение КАК ПодразделениеДт,
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ТоварыНаСкладе) КАК СчетДт,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт1, // В альфа-версии от партий отказываемся, было Операция.Ссылка
	|	Строки.Номенклатура КАК СубконтоДт2,
	|	Строки.Склад КАК СубконтоДт3,
	|	
	|	0 КАК ВалютнаяСуммаДт,
	|	Строки.Количество КАК КоличествоДт,
	|	0 КАК СуммаНУДт,
	|	0 КАК СуммаПРДт,
	|	0 КАК СуммаВРДт,
	|	
	|	НЕОПРЕДЕЛЕНО КАК ВидСчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаУчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаКт,
	|
	|	НЕОПРЕДЕЛЕНО КАК ВалютаКт,
	|	НЕОПРЕДЕЛЕНО КАК ПодразделениеКт,
	|	НЕОПРЕДЕЛЕНО КАК СчетКт,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
	|
	|	0 КАК ВалютнаяСуммаКт,
	|	0 КАК КоличествоКт,
	|	0 КАК СуммаНУКт,
	|	0 КАК СуммаПРКт,
	|	0 КАК СуммаВРКт
	|
	|ИЗ Документ.ПоступлениеТоваровУслуг КАК Операция
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ПоступлениеТоваровУслуг.Товары КАК Строки
	|		ПО Строки.Ссылка = Операция.Ссылка
	|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СуммыДокументовВВалютеРегл КАК Суммы
	|		ПО Суммы.Регистратор = Строки.Ссылка И Суммы.ИдентификаторСтроки = Строки.ИдентификаторСтроки И Суммы.СуммаБезНДСРегл <> 0
	|	ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Склады КАК Склады
	|		ПО Склады.Ссылка = Строки.Склад
	|ГДЕ Операция.Ссылка = &Ссылка
	|	И Строки.Номенклатура.ТипНоменклатуры В (ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Товар),ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара))
	|	И Операция.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПриемНаКомиссию)
	|";
	
	ЗакупкаЦенности = "
	|ВЫБРАТЬ //// Поступление ценностей на склад в собственность (Дт 10, 41 :: Кт 60, 71, 76)
	|	Операция.Дата КАК Период,
	|	Операция.Организация КАК Организация,
	|	НЕОПРЕДЕЛЕНО КАК ИдентификаторСтроки,
	|
	|   (ВЫБОР
	|		КОГДА Операция.ЗакупкаПодДеятельность В (ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаОблагаетсяНДС)
	|				, ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаНаЭкспорт))
	|			ТОГДА ЕСТЬNULL(Суммы.СуммаБезНДСРегл, Строки.СуммаСНДС - Строки.СуммаНДС)
	|		КОГДА Операция.ЗакупкаПодДеятельность В (ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаНеОблагаетсяНДС)
	|				, ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаОблагаетсяЕНВД))
	|			ТОГДА ЕСТЬNULL(Суммы.СуммаБезНДСРегл + Суммы.СуммаНДСРегл, Строки.СуммаСНДС)
	|	КОНЕЦ) КАК Сумма,
	|
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.НаСкладе) КАК ВидСчетаДт,
	|	ВЫБОР КОГДА &ФормироватьВидыЗапасовПоГруппамФинансовогоУчета ТОГДА Строки.ВидЗапасов.ГруппаФинансовогоУчета
	|		ИНАЧЕ Строки.Номенклатура.ГруппаФинансовогоУчета КОНЕЦ КАК АналитикаУчетаДт,
	|	Строки.Склад КАК МестоУчетаДт,
	|
	|	НЕОПРЕДЕЛЕНО КАК ВалютаДт,
	|	Склады.Подразделение КАК ПодразделениеДт,
	|	НЕОПРЕДЕЛЕНО КАК СчетДт,
	|	Строки.Номенклатура КАК СубконтоДт1,
	|	Строки.Склад КАК СубконтоДт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт3,
	|	
	|	0 КАК ВалютнаяСуммаДт,
	|	Строки.Количество КАК КоличествоДт,
	|	0 КАК СуммаНУДт,
	|	0 КАК СуммаПРДт,
	|	0 КАК СуммаВРДт,
	|	
	|	(ВЫБОР КОГДА Операция.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ЗакупкаЧерезПодотчетноеЛицо) ТОГДА НЕОПРЕДЕЛЕНО
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.РасчетыСПоставщиками) КОНЕЦ) КАК ВидСчетаКт,
	|	(ВЫБОР КОГДА Операция.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ЗакупкаЧерезПодотчетноеЛицо) ТОГДА НЕОПРЕДЕЛЕНО
	|		ИНАЧЕ Операция.ГруппаФинансовогоУчета КОНЕЦ) КАК АналитикаУчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаКт,
	|
	|	Операция.ВалютаВзаиморасчетов КАК ВалютаКт,
	|	Операция.Подразделение КАК ПодразделениеКт,
	|	(ВЫБОР
	|		КОГДА Операция.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ЗакупкаЧерезПодотчетноеЛицо) ТОГДА
	|			(ВЫБОР КОГДА Суммы.СуммаБезНДСРегл ЕСТЬ NULL ТОГДА ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.РасчетыСПодотчетнымиЛицами)
	|				ИНАЧЕ ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.РасчетыСПодотчетнымиЛицамиВал) КОНЕЦ)
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО КОНЕЦ) КАК СчетКт,
	|	(ВЫБОР КОГДА Операция.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ЗакупкаЧерезПодотчетноеЛицо) ТОГДА Операция.ПодотчетноеЛицо
	|		ИНАЧЕ Операция.Контрагент КОНЕЦ) КАК СубконтоКт1,
	|	(ВЫБОР КОГДА Операция.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ЗакупкаЧерезПодотчетноеЛицо) ТОГДА НЕОПРЕДЕЛЕНО
	|		ИНАЧЕ Операция.Договор КОНЕЦ) КАК СубконтоКт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
	|
	|   (ВЫБОР
	|		КОГДА Операция.ЗакупкаПодДеятельность В (ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаОблагаетсяНДС)
	|				, ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаНаЭкспорт))
	|			ТОГДА Строки.СуммаВзаиморасчетов - Строки.СуммаНДСВзаиморасчетов
	|		КОГДА Операция.ЗакупкаПодДеятельность В (ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаНеОблагаетсяНДС)
	|				, ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаОблагаетсяЕНВД))
	|			ТОГДА Строки.СуммаВзаиморасчетов
	|	КОНЕЦ) КАК ВалютнаяСуммаКт,
	|	0 КАК КоличествоКт,
	|	0 КАК СуммаНУКт,
	|	0 КАК СуммаПРКт,
	|	0 КАК СуммаВРКт
	|
	|ИЗ Документ.ПоступлениеТоваровУслуг КАК Операция
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ПоступлениеТоваровУслуг.Товары КАК Строки
	|		ПО Строки.Ссылка = Операция.Ссылка
	|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СуммыДокументовВВалютеРегл КАК Суммы
	|		ПО Суммы.Регистратор = Строки.Ссылка И Суммы.ИдентификаторСтроки = Строки.ИдентификаторСтроки И Суммы.СуммаБезНДСРегл <> 0
	|	ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Склады КАК Склады
	|		ПО Склады.Ссылка = Строки.Склад
	|ГДЕ Операция.Ссылка = &Ссылка
	|	И Строки.Номенклатура.ТипНоменклатуры В (ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Товар),ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара))
	|	И Операция.ХозяйственнаяОперация В (ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ЗакупкаУПоставщика)
	|		, ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ЗакупкаУПоставщикаРеглУчет)
	|		, ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ЗакупкаПоИмпорту)
	|		, ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ЗакупкаЧерезПодотчетноеЛицо))
	|";
	
	ЗакупкаУслуги = "
	|ВЫБРАТЬ //// Получение услуг (Дт 08, 2Х, 44, 91 :: Кт 60, 71, 76)
	|	Операция.Дата КАК Период,
	|	Операция.Организация КАК Организация,
	|	НЕОПРЕДЕЛЕНО КАК ИдентификаторСтроки,
	|
	|   (ВЫБОР
	|		КОГДА Операция.ЗакупкаПодДеятельность В (ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаОблагаетсяНДС)
	|				, ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаНаЭкспорт))
	|			ТОГДА ЕСТЬNULL(Суммы.СуммаБезНДСРегл, Строки.СуммаСНДС - Строки.СуммаНДС)
	|		КОГДА Операция.ЗакупкаПодДеятельность В (ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаНеОблагаетсяНДС)
	|				, ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаОблагаетсяЕНВД))
	|			ТОГДА ЕСТЬNULL(Суммы.СуммаБезНДСРегл + Суммы.СуммаНДСРегл, Строки.СуммаСНДС)
	|	КОНЕЦ) КАК Сумма,
	|
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.Расходы) КАК ВидСчетаДт,
	|	Строки.СтатьяРасходов КАК АналитикаУчетаДт,
	|	Операция.Подразделение КАК МестоУчетаДт,
	|
	|	НЕОПРЕДЕЛЕНО КАК ВалютаДт,
	|	Операция.Подразделение КАК ПодразделениеДт,
	|	НЕОПРЕДЕЛЕНО КАК СчетДт,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт2, // Строка.Номенклатура
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт3,
	|	
	|	0 КАК ВалютнаяСуммаДт,
	|	Строки.Количество КАК КоличествоДт, // Наверное 0
	|	0 КАК СуммаНУДт,
	|	0 КАК СуммаПРДт,
	|	0 КАК СуммаВРДт,
	|	
	|	(ВЫБОР КОГДА Операция.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ЗакупкаЧерезПодотчетноеЛицо) ТОГДА НЕОПРЕДЕЛЕНО
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.РасчетыСПоставщиками) КОНЕЦ) КАК ВидСчетаКт,
	|	(ВЫБОР КОГДА Операция.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ЗакупкаЧерезПодотчетноеЛицо) ТОГДА НЕОПРЕДЕЛЕНО
	|		ИНАЧЕ Операция.ГруппаФинансовогоУчета КОНЕЦ) КАК АналитикаУчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаКт,
	|
	|	Операция.ВалютаВзаиморасчетов КАК ВалютаКт,
	|	Операция.Подразделение КАК ПодразделениеКт,
	|	(ВЫБОР
	|		КОГДА Операция.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ЗакупкаЧерезПодотчетноеЛицо) ТОГДА
	|			(ВЫБОР КОГДА Суммы.СуммаБезНДСРегл ЕСТЬ NULL ТОГДА ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.РасчетыСПодотчетнымиЛицами)
	|				ИНАЧЕ ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.РасчетыСПодотчетнымиЛицамиВал) КОНЕЦ)
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО КОНЕЦ) КАК СчетКт,
	|	(ВЫБОР КОГДА Операция.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ЗакупкаЧерезПодотчетноеЛицо) ТОГДА Операция.ПодотчетноеЛицо
	|		ИНАЧЕ Операция.Контрагент КОНЕЦ) КАК СубконтоКт1,
	|	(ВЫБОР КОГДА Операция.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ЗакупкаЧерезПодотчетноеЛицо) ТОГДА НЕОПРЕДЕЛЕНО
	|		ИНАЧЕ Операция.Договор КОНЕЦ) КАК СубконтоКт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
	|
	|   (ВЫБОР
	|		КОГДА Операция.ЗакупкаПодДеятельность В (ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаОблагаетсяНДС)
	|				, ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаНаЭкспорт))
	|			ТОГДА Строки.СуммаВзаиморасчетов - Строки.СуммаНДСВзаиморасчетов
	|		КОГДА Операция.ЗакупкаПодДеятельность В (ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаНеОблагаетсяНДС)
	|				, ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаОблагаетсяЕНВД))
	|			ТОГДА Строки.СуммаВзаиморасчетов
	|	КОНЕЦ) КАК ВалютнаяСуммаКт,
	|	0 КАК КоличествоКт,
	|	0 КАК СуммаНУКт,
	|	0 КАК СуммаПРКт,
	|	0 КАК СуммаВРКт
	|
	|ИЗ Документ.ПоступлениеТоваровУслуг КАК Операция
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ПоступлениеТоваровУслуг.Товары КАК Строки
	|		ПО Строки.Ссылка = Операция.Ссылка
	|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СуммыДокументовВВалютеРегл КАК Суммы
	|		ПО Суммы.Регистратор = Строки.Ссылка И Суммы.ИдентификаторСтроки = Строки.ИдентификаторСтроки И Суммы.СуммаБезНДСРегл <> 0
	|ГДЕ Операция.Ссылка = &Ссылка
	|	И Строки.Номенклатура.ТипНоменклатуры НЕ В
		|		(ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Товар),ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара))
	|	И Операция.ХозяйственнаяОперация В (ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ЗакупкаУПоставщика)
	|		, ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ЗакупкаУПоставщикаРеглУчет)
	|		, ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ЗакупкаПоИмпорту)
	|		, ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ЗакупкаЧерезПодотчетноеЛицо))
	|";
	
	ЗакупкаНДС = "
	|ВЫБРАТЬ //// НДС при приобретении (Дт 19 :: Кт 60, 71, 76)
	|	Операция.Дата КАК Период,
	|	Операция.Организация КАК Организация,
	|	НЕОПРЕДЕЛЕНО КАК ИдентификаторСтроки,
	|
	|   СУММА(ЕСТЬNULL(Суммы.СуммаНДСРегл, Строки.СуммаНДС)) КАК Сумма,
	|
	|	НЕОПРЕДЕЛЕНО КАК ВидСчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаУчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаДт,
	|
	|	НЕОПРЕДЕЛЕНО КАК ВалютаДт,
	|	НЕОПРЕДЕЛЕНО КАК ПодразделениеДт,
	|	(ВЫБОР
	|		КОГДА Операция.ЗакупкаПодДеятельность = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаНаЭкспорт)
	|			ТОГДА ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.НДСПоТоварамРеализованнымПоСтавке0)
	|		КОГДА Строки.Номенклатура.ТипНоменклатуры В
	|			(ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Товар),ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара))
	|			ТОГДА ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.НДСпоПриобретеннымМПЗ)
	|		КОГДА Строки.Номенклатура.ТипНоменклатуры НЕ В
		|		(ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Товар),ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара))
	|			ТОГДА ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.НДСпоПриобретеннымУслугам)
	|	КОНЕЦ) КАК СчетДт,
	|	Операция.Контрагент КАК СубконтоДт1,
	|	Операция.Ссылка КАК СубконтоДт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт3,
	|	
	|	0 КАК ВалютнаяСуммаДт,
	|	0 КАК КоличествоДт,
	|	0 КАК СуммаНУДт,
	|	0 КАК СуммаПРДт,
	|	0 КАК СуммаВРДт,
	|	
	|	(ВЫБОР КОГДА Операция.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ЗакупкаЧерезПодотчетноеЛицо) ТОГДА НЕОПРЕДЕЛЕНО
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.РасчетыСПоставщиками) КОНЕЦ) КАК ВидСчетаКт,
	|	(ВЫБОР КОГДА Операция.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ЗакупкаЧерезПодотчетноеЛицо) ТОГДА НЕОПРЕДЕЛЕНО
	|		ИНАЧЕ Операция.ГруппаФинансовогоУчета КОНЕЦ) КАК АналитикаУчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаКт,
	|
	|	Операция.ВалютаВзаиморасчетов КАК ВалютаКт,
	|	Операция.Подразделение КАК ПодразделениеКт,
	|	(ВЫБОР
	|		КОГДА Операция.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ЗакупкаЧерезПодотчетноеЛицо) ТОГДА
	|			(ВЫБОР КОГДА Суммы.СуммаБезНДСРегл ЕСТЬ NULL ТОГДА ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.РасчетыСПодотчетнымиЛицами)
	|				ИНАЧЕ ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.РасчетыСПодотчетнымиЛицамиВал) КОНЕЦ)
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО КОНЕЦ) КАК СчетКт,
	|	(ВЫБОР КОГДА Операция.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ЗакупкаЧерезПодотчетноеЛицо) ТОГДА Операция.ПодотчетноеЛицо
	|		ИНАЧЕ Операция.Контрагент КОНЕЦ) КАК СубконтоКт1,
	|	(ВЫБОР КОГДА Операция.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ЗакупкаЧерезПодотчетноеЛицо) ТОГДА НЕОПРЕДЕЛЕНО
	|		ИНАЧЕ Операция.Договор КОНЕЦ) КАК СубконтоКт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
	|
	|   СУММА(Строки.СуммаНДСВзаиморасчетов) КАК ВалютнаяСуммаКт,
	|	0 КАК КоличествоКт,
	|	0 КАК СуммаНУКт,
	|	0 КАК СуммаПРКт,
	|	0 КАК СуммаВРКт
	|
	|ИЗ Документ.ПоступлениеТоваровУслуг КАК Операция
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ПоступлениеТоваровУслуг.Товары КАК Строки
	|		ПО Строки.Ссылка = Операция.Ссылка
	|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СуммыДокументовВВалютеРегл КАК Суммы
	|		ПО Суммы.Регистратор = Строки.Ссылка И Суммы.ИдентификаторСтроки = Строки.ИдентификаторСтроки И Суммы.СуммаБезНДСРегл <> 0
	|ГДЕ Операция.Ссылка = &Ссылка
	|	И Операция.ЗакупкаПодДеятельность В (ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаОблагаетсяНДС)
	|		, ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаНаЭкспорт))
	|	И Операция.ХозяйственнаяОперация В (ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ЗакупкаУПоставщика)
	|		, ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ЗакупкаУПоставщикаРеглУчет)
	|		, ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ЗакупкаЧерезПодотчетноеЛицо))
	|СГРУППИРОВАТЬ ПО
	|	Операция.Ссылка,
	|	(ВЫБОР
	|		КОГДА Операция.ЗакупкаПодДеятельность = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаНаЭкспорт)
	|			ТОГДА ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.НДСПоТоварамРеализованнымПоСтавке0)
	|		КОГДА Строки.Номенклатура.ТипНоменклатуры В
	|			(ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Товар),ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара))
	|			ТОГДА ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.НДСпоПриобретеннымМПЗ)
	|		КОГДА Строки.Номенклатура.ТипНоменклатуры НЕ В
		|		(ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Товар),ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара))
	|			ТОГДА ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.НДСпоПриобретеннымУслугам)
	|	КОНЕЦ),
	|	(ВЫБОР
	|		КОГДА Операция.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ЗакупкаЧерезПодотчетноеЛицо) ТОГДА
	|			(ВЫБОР КОГДА Суммы.СуммаБезНДСРегл ЕСТЬ NULL ТОГДА ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.РасчетыСПодотчетнымиЛицами)
	|				ИНАЧЕ ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.РасчетыСПодотчетнымиЛицамиВал) КОНЕЦ)
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО КОНЕЦ)		
	|";
	
	Возврат
	ПриемНаКомиссию
	+ " ОБЪЕДИНИТЬ ВСЕ " + ЗакупкаЦенности
	+ " ОБЪЕДИНИТЬ ВСЕ " + ЗакупкаУслуги
	+ " ОБЪЕДИНИТЬ ВСЕ " + ЗакупкаНДС;
	
КонецФункции

////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

////////////////////////////////////////////////////////////////////////////////
// Проведение

Процедура ИнициализироватьДанныеДокумента(ДокументСсылка, ДополнительныеСвойства) Экспорт

	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("Ссылка", ДокументСсылка);
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ДанныеДокумента.Дата КАК Период,
	|	ДанныеДокумента.ДатаПлатежа КАК ДатаПлатежа,
	|	ДанныеДокумента.ФормаОплаты КАК ФормаОплаты,
	|	ДанныеДокумента.Ссылка КАК Ссылка,
	|	ДанныеДокумента.ПодотчетноеЛицо КАК ПодотчетноеЛицо,
	|	ДанныеДокумента.Организация КАК Организация,
	|	ДанныеДокумента.Партнер КАК Партнер,
	|	ДанныеДокумента.Партнер КАК Поставщик,
	|	ДанныеДокумента.Контрагент КАК Контрагент,
	|	ДанныеДокумента.Соглашение КАК Соглашение,
	|	ДанныеДокумента.Валюта КАК Валюта,
	|	ДанныеДокумента.Соглашение.Валюта КАК ВалютаСоглашения,
	|	ДанныеДокумента.ЦенаВключаетНДС КАК ЦенаВключаетНДС,
	|	ДанныеДокумента.Соглашение.ЦенаВключаетНДС КАК ЦенаВключаетНДССоглашения,
	|	ДанныеДокумента.РегистрироватьЦеныПоставщика КАК РегистрироватьЦеныПоставщика, 
	|	ДанныеДокумента.ВалютаВзаиморасчетов КАК ВалютаВзаиморасчетов,
	|	ДанныеДокумента.НалогообложениеНДС КАК НалогообложениеНДС,
	|	ДанныеДокумента.ЗаказПоставщику КАК ЗаказПоставщику,
	|	ДанныеДокумента.Склад КАК Склад,
	|	ДанныеДокумента.Склад.ИспользоватьОрдернуюСхемуПриПоступлении КАК ИспользоватьОрдернуюСхемуПриПоступлении,
	|	ДанныеДокумента.ХозяйственнаяОперация КАК ХозяйственнаяОперация,
	|	ДанныеДокумента.Подразделение КАК Подразделение,
	|	ДанныеДокумента.СуммаРасхождений КАК СуммаРасхождений,
	|	ДанныеДокумента.СуммаИзлишков КАК СуммаИзлишков,
	|	ДанныеДокумента.СуммаНедостачи КАК СуммаНедостачи,
	|	ДанныеДокумента.СторонняяКомпания КАК СторонняяКомпания,
	|	ДанныеДокумента.КонтрагентСтороннейКомпании КАК КонтрагентСтороннейКомпании,
	|	ДанныеДокумента.ВалютаВзаиморасчетовСоСтороннейКомпанией КАК ВалютаВзаиморасчетовСоСтороннейКомпанией,
	|	ДанныеДокумента.СуммаРасчетовСоСтороннейКомпаниейПоРасхождениям КАК СуммаРасчетовСоСтороннейКомпаниейПоРасхождениям,
	|	ДанныеДокумента.СтатьяРасходовПоРасхождениям КАК СтатьяРасходовПоРасхождениям,
	|	ДанныеДокумента.СтатьяРасходовПоРасхождениям.ВариантРаспределенияРасходов КАК СтатьяРасходовПоРасхождениямВариантРаспределения,
	|	ДанныеДокумента.СтатьяРасходовПоРасхождениям.ВариантРаздельногоУчетаНДС КАК СтатьяРасходовПоРасхождениямВариантРаздельногоУчетаНДС,
	|	ДанныеДокумента.АналитикаРасходовПоРасхождениям КАК АналитикаРасходовПоРасхождениям,
	|	ДанныеДокумента.СтатьяДоходовПоРасхождениям КАК СтатьяДоходовПоРасхождениям,
	|	ДанныеДокумента.АналитикаДоходовПоРасхождениям КАК АналитикаДоходовПоРасхождениям,
	|	ДанныеДокумента.ПоступлениеПоЗаказам КАК ПоступлениеПоЗаказу,
	|	ДанныеДокумента.Соглашение.ВариантПриемкиТоваров КАК ВариантПриемкиТоваров,
	|	ДанныеДокумента.Договор КАК Договор,
	|	ДанныеДокумента.ВернутьМногооборотнуюТару КАК ВернутьМногооборотнуюТару,
	|	ДанныеДокумента.ЗакупкаПодДеятельность КАК ЗакупкаПодДеятельность,
	|	
	|	ВЫБОР КОГДА ДанныеДокумента.ПорядокРасчетов = ЗНАЧЕНИЕ(Перечисление.ПорядокРасчетов.ПоДоговорамКонтрагентов) ТОГДА
	|		ИСТИНА
	|	ИНАЧЕ
	|		ЛОЖЬ
	|	КОНЕЦ КАК РасчетыПоДоговорам,
	|	
	|	ВЫБОР КОГДА ДанныеДокумента.ПорядокРасчетов = ЗНАЧЕНИЕ(Перечисление.ПорядокРасчетов.ПоНакладным) ТОГДА
	|		ИСТИНА
	|	ИНАЧЕ
	|		ЛОЖЬ
	|	КОНЕЦ КАК РасчетыПоНакладным
	|
	|ИЗ
	|	Документ.ПоступлениеТоваровУслуг КАК ДанныеДокумента
	|ГДЕ
	|	ДанныеДокумента.Ссылка = &Ссылка";
	Реквизиты = Запрос.Выполнить().Выбрать();
	Реквизиты.Следующий();

	ИнициализироватьКлючиАналитикиНоменклатуры(Реквизиты);
	
	Коэффициенты = РаботаСКурсамивалютУТ.ПолучитьКоэффициентыПересчетаВалюты(Реквизиты.Валюта, Реквизиты.ВалютаВзаиморасчетов, Реквизиты.Период);
	КоэффициентыДляРасчетовСоСтороннейКомпанией = РаботаСКурсамивалютУТ.ПолучитьКоэффициентыПересчетаВалюты(Реквизиты.Валюта, Реквизиты.ВалютаВзаиморасчетовСоСтороннейКомпанией, Реквизиты.Период);
	
	СтруктураАналитикиПоСтороннейКомпании = Новый Структура();
	СтруктураАналитикиПоСтороннейКомпании.Вставить("Организация", Реквизиты.Организация);
	СтруктураАналитикиПоСтороннейКомпании.Вставить("Партнер", Реквизиты.СторонняяКомпания);
	СтруктураАналитикиПоСтороннейКомпании.Вставить("Контрагент", Реквизиты.КонтрагентСтороннейКомпании);
	
	ПересчитатьТаблицуТоваровВВалютуРегл(Реквизиты, Запрос.МенеджерВременныхТаблиц);
	
	Запрос.УстановитьПараметр("Валюта",                                      					Реквизиты.Валюта);
	Запрос.УстановитьПараметр("Период",                                      					Реквизиты.Период);
	Запрос.УстановитьПараметр("ДатаПлатежа",                                 					Реквизиты.ДатаПлатежа);
	Запрос.УстановитьПараметр("ФормаОплаты",                                 					Реквизиты.ФормаОплаты);
	Запрос.УстановитьПараметр("Организация",                                 					Реквизиты.Организация);
	Запрос.УстановитьПараметр("ЦенаВключаетНДС",                             					?(Реквизиты.ЦенаВключаетНДС, 0, 1));
	Запрос.УстановитьПараметр("ПодотчетноеЛицо",                             					Реквизиты.ПодотчетноеЛицо);
	Запрос.УстановитьПараметр("Партнер",                                     					Реквизиты.Партнер);
	Запрос.УстановитьПараметр("ЗаказПоставщику",                             					Реквизиты.ЗаказПоставщику);
	Запрос.УстановитьПараметр("Подразделение",                               					Реквизиты.Подразделение);
	Запрос.УстановитьПараметр("ПоступлениеПоЗаказу",                         					Реквизиты.ПоступлениеПоЗаказу);
	Запрос.УстановитьПараметр("ХозяйственнаяОперация",                       					Реквизиты.ХозяйственнаяОперация);
	Запрос.УстановитьПараметр("ВалютаВзаиморасчетов",                        					Реквизиты.ВалютаВзаиморасчетов);
	Запрос.УстановитьПараметр("АналитикаУчетаПоПартнерам",                   					РегистрыСведений.АналитикаУчетаПоПартнерам.ЗначениеКлючаАналитики(Реквизиты));
	Запрос.УстановитьПараметр("АналитикаУчетаПоСтороннейКомпании",                   			РегистрыСведений.АналитикаУчетаПоПартнерам.ЗначениеКлючаАналитики(СтруктураАналитикиПоСтороннейКомпании));
	Запрос.УстановитьПараметр("КоэффициентПересчетаВВалютуУПР",              					Коэффициенты.КоэффициентПересчетаВВалютуУПР);
	Запрос.УстановитьПараметр("КоэффициентПересчетаВВалютуРегл",             					Коэффициенты.КоэффициентПересчетаВВалютуРегл);
	Запрос.УстановитьПараметр("КоэффициентПересчетаВВалютуВзаиморасчетов",   					Коэффициенты.КоэффициентПересчетаВВалютуВзаиморасчетов);
	Запрос.УстановитьПараметр("СуммаРасхождений",                                  				Реквизиты.СуммаРасхождений);
	Запрос.УстановитьПараметр("СуммаИзлишков",                                  				Реквизиты.СуммаИзлишков);
	Запрос.УстановитьПараметр("СуммаНедостачи",                                  				Реквизиты.СуммаНедостачи);
	Запрос.УстановитьПараметр("СторонняяКомпания",                        						Реквизиты.СторонняяКомпания);
	Запрос.УстановитьПараметр("КонтрагентСтороннейКомпании",              						Реквизиты.КонтрагентСтороннейКомпании);
	Запрос.УстановитьПараметр("ВалютаВзаиморасчетовСоСтороннейКомпанией",  						Реквизиты.ВалютаВзаиморасчетовСоСтороннейКомпанией);
	Запрос.УстановитьПараметр("СуммаРасчетовСоСтороннейКомпаниейПоРасхождениям",  				Реквизиты.СуммаРасчетовСоСтороннейКомпаниейПоРасхождениям);
	Запрос.УстановитьПараметр("СтатьяРасходовПоРасхождениям",                       			Реквизиты.СтатьяРасходовПоРасхождениям);
	Запрос.УстановитьПараметр("СтатьяРасходовПоРасхождениямВариантРаспределения",      			Реквизиты.СтатьяРасходовПоРасхождениямВариантРаспределения);
	Запрос.УстановитьПараметр("СтатьяРасходовПоРасхождениямВариантРаздельногоУчетаНДС",			Реквизиты.СтатьяРасходовПоРасхождениямВариантРаздельногоУчетаНДС);
	Запрос.УстановитьПараметр("АналитикаРасходовПоРасхождениям",                    			Реквизиты.АналитикаРасходовПоРасхождениям);
	Запрос.УстановитьПараметр("СтатьяДоходовПоРасхождениям",                        			Реквизиты.СтатьяДоходовПоРасхождениям);
	Запрос.УстановитьПараметр("АналитикаДоходовПоРасхождениям",                     			Реквизиты.АналитикаДоходовПоРасхождениям);
	Запрос.УстановитьПараметр("ХозяйственнаяОперацияПоОтражениюРасхожденийВДоходах",			Перечисления.ХозяйственныеОперации.ПрочиеДоходы);
	Запрос.УстановитьПараметр("ХозяйственнаяОперацияПоОтражениюРасхожденийВРасходах",			Перечисления.ХозяйственныеОперации.ПрочиеРасходы);
	Запрос.УстановитьПараметр("ХозяйственнаяОперацияПоРасчетамСоСтороннейКомпанией",  			Перечисления.ХозяйственныеОперации.КорректировкаЗадолженности);
	Запрос.УстановитьПараметр("ХозяйственнаяОперацияПоЗакрытиюДолгаПоставщика",					Перечисления.ХозяйственныеОперации.КорректировкаЗадолженности);
	Запрос.УстановитьПараметр("УчитыватьСебестоимостьТоваровПоВидамЗапасов", 					ПолучитьФункциональнуюОпцию("УчитыватьСебестоимостьТоваровПоВидамЗапасов"));
	Запрос.УстановитьПараметр("ИспользоватьУчетПрочихДоходовРасходов",                          ПолучитьФункциональнуюОпцию("ИспользоватьУчетПрочихДоходовРасходов")); 
	Запрос.УстановитьПараметр("РегистрироватьЦеныПоставщика", 									Реквизиты.РегистрироватьЦеныПоставщика);
	Запрос.УстановитьПараметр("ВалютаСоглашения",												Реквизиты.ВалютаСоглашения);
	Запрос.УстановитьПараметр("Соглашение",														Реквизиты.Соглашение);
	Запрос.УстановитьПараметр("ЦенаВключаетНДСДокумента",										Реквизиты.ЦенаВключаетНДС);
	Запрос.УстановитьПараметр("ЦенаВключаетНДССоглашения",										Реквизиты.ЦенаВключаетНДССоглашения);
	Запрос.УстановитьПараметр("Договор",														Реквизиты.Договор);
	Запрос.УстановитьПараметр("РасчетыПоДоговорам",												Реквизиты.РасчетыПоДоговорам);
	Запрос.УстановитьПараметр("РасчетыПоНакладным",												Реквизиты.РасчетыПоНакладным);
	Запрос.УстановитьПараметр("ВалютаРегламентированногоУчета",									Константы.ВалютаРегламентированногоУчета.Получить());
	Запрос.УстановитьПараметр("ИспользоватьОбособленноеОбеспечениеЗаказов",						ПолучитьФункциональнуюОпцию("ИспользоватьОбособленноеОбеспечениеЗаказов"));
	Запрос.УстановитьПараметр("ЗакупкаПодДеятельность",						                    Реквизиты.ЗакупкаПодДеятельность);
	Запрос.УстановитьПараметр("ВернутьМногооборотнуюТару",										Реквизиты.ВернутьМногооборотнуюТару);
	
	СоответствиеВидовЗапасов = ИнициализироватьВидыЗапасов(Реквизиты);
	Запрос.УстановитьПараметр("СоответствиеВидовЗапасов", СоответствиеВидовЗапасов);
	
	Если Реквизиты.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ЗакупкаУПоставщикаРеглУчет Тогда
		ВидЗапасовУпр = Справочники.ВидыЗапасов.ВидЗапасовДокумента(
			Справочники.Организации.УправленческаяОрганизация,
			Перечисления.ХозяйственныеОперации.ЗакупкаУПоставщикаРеглУчет
		);
		СтруктураУпр = Новый Структура("Организация, Партнер, Контрагент",
			Справочники.Организации.УправленческаяОрганизация,
			Реквизиты.Партнер,
			Реквизиты.Контрагент
		);
		АналитикаУчетаПоПартнерамУпр = РегистрыСведений.АналитикаУчетаПоПартнерам.ЗначениеКлючаАналитики(СтруктураУпр);
		
	Иначе
		АналитикаУчетаПоПартнерамУпр = Неопределено;
	КонецЕсли;
	
	Запрос.УстановитьПараметр("ВидЗапасовУпр", ВидЗапасовУпр);
	Запрос.УстановитьПараметр("АналитикаУчетаПоПартнерамУпр", АналитикаУчетаПоПартнерамУпр);
	
	Если Справочники.СоглашенияСПоставщиками.СоглашениеИспользуетсяПриПриемке(Реквизиты.ВариантПриемкиТоваров)
	   И ЕстьОрдерныеСкладыВТЧТовары(ДокументСсылка) Тогда

		Запрос.УстановитьПараметр("Распоряжение",                    Справочники.СоглашенияСПоставщиками.ПолучитьСоздатьДокументРегистрации(Реквизиты.Соглашение));
		Запрос.УстановитьПараметр("ДокументПоступления",             Реквизиты.Соглашение);
		Запрос.УстановитьПараметр("СоглашениеЯвляетсяРаспоряжением", Истина);
		

	Иначе

		Запрос.УстановитьПараметр("СоглашениеЯвляетсяРаспоряжением", Ложь);
		Запрос.УстановитьПараметр("ДокументПоступления",             ДокументСсылка);
		Запрос.УстановитьПараметр("Распоряжение",                    Неопределено);

	КонецЕсли;

	Запрос.Текст = 
	"
	// 0 ВтТаблицаСерииТоваров
	|ВЫБРАТЬ
	|	ТаблицаТовары.Номенклатура                          КАК Номенклатура,
	|	ТаблицаТовары.Характеристика                        КАК Характеристика,
	|	ТаблицаТовары.Склад                                 КАК Склад,
	|	ТаблицаТовары.Количество                            КАК Количество,
	|	ТаблицаТовары.СтатусУказанияСерий                   КАК СтатусУказанияСерий,
	|	ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка) КАК Серия
	|ПОМЕСТИТЬ ВтТаблицаСерииТоваров
	|ИЗ
	|	Документ.ПоступлениеТоваровУслуг.Товары КАК ТаблицаТовары
	|ГДЕ
	|	ТаблицаТовары.Ссылка = &Ссылка
	|	И (НЕ ТаблицаТовары.Склад.ИспользоватьОрдернуюСхемуПриПоступлении)
	|	И ТаблицаТовары.Номенклатура.ТипНоменклатуры В (ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Товар),ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара))
	|	И &ХозяйственнаяОперация <> ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ЗакупкаУПоставщикаРеглУчет)
	|	И (НЕ ТаблицаТовары.СтатусУказанияСерий В (4, 6, 8, 10))
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ТаблицаСерии.Номенклатура,
	|	ТаблицаСерии.Характеристика,
	|	ТаблицаСерии.Склад,
	|	ТаблицаСерии.Количество,
	|	МАКСИМУМ(ТаблицаТовары.СтатусУказанияСерий),
	|	ТаблицаСерии.Серия
	|ИЗ
	|	Документ.ПоступлениеТоваровУслуг.Серии КАК ТаблицаСерии
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ПоступлениеТоваровУслуг.Товары КАК ТаблицаТовары
	|		ПО ТаблицаСерии.Ссылка = ТаблицаТовары.Ссылка
	|			И ТаблицаСерии.Номенклатура = ТаблицаТовары.Номенклатура
	|			И ТаблицаСерии.Характеристика = ТаблицаТовары.Характеристика
	|			И ТаблицаСерии.Склад = ТаблицаТовары.Склад
	|ГДЕ
	|	ТаблицаСерии.Ссылка = &Ссылка
	|	И ТаблицаТовары.Ссылка = &Ссылка
	|	И ТаблицаСерии.Количество <> 0
	|	И (НЕ ТаблицаТовары.Склад.ИспользоватьОрдернуюСхемуПриПоступлении)
	|	И ТаблицаТовары.Номенклатура.ТипНоменклатуры В (ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Товар),ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара))
	|	И &ХозяйственнаяОперация <> ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ЗакупкаУПоставщикаРеглУчет)
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаСерии.Номенклатура,
	|	ТаблицаСерии.Характеристика,
	|	ТаблицаСерии.Склад,
	|	ТаблицаСерии.Серия,
	|	ТаблицаСерии.Количество
	|
	|ИМЕЮЩИЕ
	|	МАКСИМУМ(ТаблицаТовары.СтатусУказанияСерий) В (4, 6, 8, 10)
	|;
	|////////////////////////////////////////////////////////////////////////////////
	// 1 Временная таблица товаров
	|ВЫБРАТЬ
	|	ТаблицаТовары.НомерСтроки                  КАК НомерСтроки,
	|	ТаблицаТовары.Ссылка                       КАК Ссылка,
	|	ТаблицаТовары.КодСтроки                    КАК КодСтроки,
	|	ТаблицаТовары.СтатьяРасходов               КАК СтатьяРасходов,
	|	ТаблицаТовары.АналитикаРасходов            КАК АналитикаРасходов,
	|	ТаблицаТовары.ЗаказПоставщику              КАК ЗаказПоставщику,
	|	ТаблицаТовары.Номенклатура                 КАК Номенклатура,
	|	ТаблицаТовары.Номенклатура.ТипНоменклатуры КАК ТипНоменклатуры,
	|	ТаблицаТовары.Характеристика               КАК Характеристика,
	|
	|	ТаблицаТовары.НомерГТД                     КАК НомерГТД,
	|	ТаблицаТовары.ВидЗапасов                   КАК ВидЗапасов,
	|
	|	ТаблицаТовары.Количество                   КАК Количество,
	|	ТаблицаТовары.Цена                         КАК Цена,
	|	ТаблицаТовары.Склад                        КАК Склад,
	|	ТаблицаТовары.Сумма                        КАК Сумма,
	|	ТаблицаТовары.СуммаНДС                     КАК СуммаНДС,
	|	ТаблицаТовары.СуммаСНДС                    КАК СуммаСНДС,
	|	ТаблицаТовары.ИдентификаторСтроки          КАК ИдентификаторСтроки,
	|	ТаблицаТовары.Назначение                   КАК Назначение,
	|	ТаблицаТовары.АналитикаУчетаПартий         КАК АналитикаУчетаПартий,
	|
	|	Аналитика.КлючАналитики КАК АналитикаУчетаНоменклатуры,
	|
	|	ВЫРАЗИТЬ((ТаблицаТовары.СуммаСНДС * &КоэффициентПересчетаВВалютуУПР) КАК ЧИСЛО(15,2)) КАК СуммаСНДСУпр,
	|
	|	ВЫРАЗИТЬ(((ТаблицаТовары.СуммаСНДС-ТаблицаТовары.СуммаНДС) * &КоэффициентПересчетаВВалютуУПР) КАК ЧИСЛО(15,2)) КАК СуммаБезНДСУпр,
	|
	|	ВЫРАЗИТЬ(((ТаблицаТовары.СуммаСНДС-ТаблицаТовары.СуммаНДС) * &КоэффициентПересчетаВВалютуРегл) КАК ЧИСЛО(15,2)) КАК СуммаБезНДСРегл,
	|
	|	ВЫРАЗИТЬ((ТаблицаТовары.СуммаСНДС * &КоэффициентПересчетаВВалютуРегл) КАК ЧИСЛО(15,2)) КАК СуммаСНДСРегл,
	|
	|	ВЫРАЗИТЬ((ТаблицаТовары.СуммаНДС * &КоэффициентПересчетаВВалютуРегл) КАК ЧИСЛО(15,2)) КАК СуммаНДСРегл,
	|
	|	ВЫРАЗИТЬ((ТаблицаТовары.СуммаСНДС * &КоэффициентПересчетаВВалютуВзаиморасчетов) КАК ЧИСЛО(15,2)) КАК СуммаСНДСВзаиморасчеты
	|
	|ПОМЕСТИТЬ ВтТаблицаТовары
	|
	|ИЗ
	|	Документ.ПоступлениеТоваровУслуг.Товары КАК ТаблицаТовары
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РегистрСведений.АналитикаУчетаНоменклатуры КАК Аналитика
	|	ПО
	|		ТаблицаТовары.Номенклатура = Аналитика.Номенклатура
	|		И ТаблицаТовары.Характеристика = Аналитика.Характеристика
	|		И (ТаблицаТовары.Склад = Аналитика.Склад И ТаблицаТовары.Номенклатура.ТипНоменклатуры <> ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Работа)
	|			ИЛИ &Подразделение = Аналитика.Склад И ТаблицаТовары.Номенклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Работа))
	|ГДЕ
	|	ТаблицаТовары.Ссылка = &Ссылка
	|;
	|////////////////////////////////////////////////////////////////////////////////////////////
	// 2 ТаблицаЗаказыПоставщикам
	|
	|ВЫБРАТЬ
	|	1                                      КАК Порядок,
	|	ТаблицаТовары.НомерСтроки              КАК НомерСтроки,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
	|	&Период                                КАК Период,
	|	ТаблицаТовары.ЗаказПоставщику          КАК ЗаказПоставщику,
	|	ТаблицаТовары.Номенклатура             КАК Номенклатура,
	|	ТаблицаТовары.Характеристика           КАК Характеристика,
	|	ТаблицаТовары.КодСтроки                КАК КодСтроки,
	|	ВЫБОР КОГДА ТаблицаТовары.Номенклатура.ТипНоменклатуры В (ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Товар),ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара)) ТОГДА
	|			ТаблицаТовары.Склад
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ                                  КАК Склад,
	|	ТаблицаТовары.Количество               КАК Заказано,
	|	ТаблицаТовары.Количество               КАК КОформлению
	|ИЗ
	|	ВтТаблицаТовары КАК ТаблицаТовары
	|ГДЕ
	|	&ПоступлениеПоЗаказу
	|	И ТаблицаТовары.КодСтроки <> 0
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	2                                      КАК Порядок,
	|	ТаблицаТовары.НомерСтроки              КАК НомерСтроки,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	&Период                                КАК Период,
	|	ТаблицаТовары.ЗаказПоставщику          КАК ЗаказПоставщику,
	|	ТаблицаТовары.Номенклатура             КАК Номенклатура,
	|	ТаблицаТовары.Характеристика           КАК Характеристика,
	|	ТаблицаТовары.КодСтроки                КАК КодСтроки,
	|	ВЫБОР КОГДА ТаблицаТовары.Номенклатура.ТипНоменклатуры В (ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Товар),ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара)) ТОГДА
	|			ТаблицаТовары.Склад
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ                                  КАК Склад,
	|	0                                      КАК Заказано,
	|	ТаблицаТовары.Количество               КАК КОформлению
	|ИЗ
	|	ВтТаблицаТовары КАК ТаблицаТовары
	|ГДЕ
	|	ТаблицаТовары.Ссылка = &Ссылка
	|	И ТаблицаТовары.КодСтроки = 0
	|	И &ПоступлениеПоЗаказу
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	3                                      КАК Порядок,
	|	ТаблицаТовары.НомерСтроки              КАК НомерСтроки,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
	|	&Период                                КАК Период,
	|	ТаблицаТовары.ЗаказПоставщику          КАК ЗаказПоставщику,
	|	ТаблицаТовары.Номенклатура             КАК Номенклатура,
	|	ТаблицаТовары.Характеристика           КАК Характеристика,
	|	ТаблицаТовары.КодСтроки                КАК КодСтроки,
	|	ВЫБОР КОГДА ТаблицаТовары.Номенклатура.ТипНоменклатуры В (ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Товар),ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара)) ТОГДА
	|			ТаблицаТовары.Склад
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ                                  КАК Склад,
	|	0                                      КАК Заказано,
	|	ТаблицаТовары.Количество               КАК КОформлению
	|ИЗ
	|	ВтТаблицаТовары КАК ТаблицаТовары
	|ГДЕ
	|	ТаблицаТовары.Ссылка = &Ссылка
	|	И ТаблицаТовары.КодСтроки = 0
	|	И &ПоступлениеПоЗаказу
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	// Недостачи за наш счет или за счет сторонней компании необходимо считать выполненными в заказах поставщикам
	|ВЫБРАТЬ
	|	4                                      КАК Порядок,
	|	0                                      КАК НомерСтроки,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
	|	&Период                                КАК Период,
	|	ТаблицаРасхождения.ЗаказПоставщику     КАК ЗаказПоставщику,
	|	ТаблицаРасхождения.Номенклатура        КАК Номенклатура,
	|	ТаблицаРасхождения.Характеристика      КАК Характеристика,
	|	ТаблицаРасхождения.КодСтроки           КАК КодСтроки,
	|	ВЫБОР КОГДА ТаблицаРасхождения.Номенклатура.ТипНоменклатуры В (ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Товар),ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара)) ТОГДА
	|			ТаблицаРасхождения.Склад
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ                                       КАК Склад,
	|	ТаблицаРасхождения.Количество               КАК Заказано,
	|	ТаблицаРасхождения.Количество               КАК КОформлению
	|ИЗ
	|	Документ.ПоступлениеТоваровУслуг.Расхождения КАК ТаблицаРасхождения
	|ГДЕ
	|	&ПоступлениеПоЗаказу
	|	И ТаблицаРасхождения.Ссылка = &Ссылка
	|	И ТаблицаРасхождения.КодСтроки <> 0
	|	И (ТаблицаРасхождения.ВариантОтраженияРасхождений = ЗНАЧЕНИЕ(Перечисление.ВариантыОтраженияРасхождений.НедостачиНаПрочиеРасходы)
	|	ИЛИ ТаблицаРасхождения.ВариантОтраженияРасхождений = ЗНАЧЕНИЕ(Перечисление.ВариантыОтраженияРасхождений.НедостачиЗаСчетСтороннейКомпании))
	|
	|УПОРЯДОЧИТЬ ПО
	|	Порядок,
	|	НомерСтроки
	|;
	|////////////////////////////////////////////////////////////////////////////////
	// 3 ТаблицаТоварыКПоступлению
	|
	|ВЫБРАТЬ
	|	ТаблицаТовары.НомерСтроки              КАК НомерСтроки,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	&Период                                КАК Период,
	|	ТаблицаТовары.Склад                    КАК Склад,
	|	ВЫБОР
			// Документов поступления будет 1. Соглашение - если в нем есть признак. 2. Поступление, 3 Заказ поставщику
	|		КОГДА &СоглашениеЯвляетсяРаспоряжением Или НЕ &ПоступлениеПоЗаказу ТОГДА
	|			&ДокументПоступления
	|		ИНАЧЕ
	|			ТаблицаТовары.ЗаказПоставщику
	|	КОНЕЦ                                  КАК ДокументПоступления,
	|	ТаблицаТовары.Номенклатура             КАК Номенклатура,
	|	ТаблицаТовары.Характеристика           КАК Характеристика,
	|	ТаблицаТовары.Количество               КАК КПоступлению
	|ИЗ
	|	ВтТаблицаТовары КАК ТаблицаТовары
	|ГДЕ
	|	ТаблицаТовары.Склад.ИспользоватьОрдернуюСхемуПриПоступлении
	|	И (НЕ &ПоступлениеПоЗаказу
	|			ИЛИ (&ПоступлениеПоЗаказу И ТаблицаТовары.КодСтроки = 0))
	|	И ТаблицаТовары.ТипНоменклатуры В (ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Товар),ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара))
	|	И &ХозяйственнаяОперация <> ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ЗакупкаУПоставщикаРеглУчет)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	// Недостачи за наш счет или за счет сторонней компании необходимо считать выполненными по поступлению товаров и услуг
	|ВЫБРАТЬ
	|	0                                      КАК НомерСтроки,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
	|	&Период                                КАК Период,
	|	ВЫБОР КОГДА ТаблицаРасхождения.Номенклатура.ТипНоменклатуры В (ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Товар),ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара)) ТОГДА
	|			ТаблицаРасхождения.Склад
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ                                  КАК Склад,
	|	ТаблицаРасхождения.ЗаказПоставщику     КАК ДокументПоступления,
	|	ТаблицаРасхождения.Номенклатура        КАК Номенклатура,
	|	ТаблицаРасхождения.Характеристика      КАК Характеристика,
	|	ТаблицаРасхождения.Количество          КАК КПоступлению
	|ИЗ
	|	Документ.ПоступлениеТоваровУслуг.Расхождения КАК ТаблицаРасхождения
	|ГДЕ
	|	&ПоступлениеПоЗаказу
	|	И ТаблицаРасхождения.Ссылка = &Ссылка
	|	И ТаблицаРасхождения.КодСтроки <> 0
	|	И (ТаблицаРасхождения.ВариантОтраженияРасхождений = ЗНАЧЕНИЕ(Перечисление.ВариантыОтраженияРасхождений.НедостачиНаПрочиеРасходы)
	|	ИЛИ ТаблицаРасхождения.ВариантОтраженияРасхождений = ЗНАЧЕНИЕ(Перечисление.ВариантыОтраженияРасхождений.НедостачиЗаСчетСтороннейКомпании))
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки
	|;
	|////////////////////////////////////////////////////////////////////////////////
	// 4 ТаблицаТоварыНаСкладах
	|
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	&Период                                КАК Период,
	|	ТаблицаТовары.Склад                    КАК Склад,
	|	ТаблицаТовары.Номенклатура             КАК Номенклатура,
	|	ТаблицаТовары.Характеристика           КАК Характеристика,
	|	ТаблицаТовары.Серия                    КАК Серия,
	|	ТаблицаТовары.Количество               КАК ВНаличии
	|ИЗ
	|	ВтТаблицаСерииТоваров КАК ТаблицаТовары
	|;
	|////////////////////////////////////////////////////////////////////////////////
	// 5 ТаблицаСвободныеОстатки
	|
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	&Период                                КАК Период,
	|	ТаблицаТовары.Склад                    КАК Склад,
	|	ТаблицаТовары.Номенклатура             КАК Номенклатура,
	|	ТаблицаТовары.Характеристика           КАК Характеристика,
	|	ТаблицаТовары.Количество               КАК ВНаличии
	|ИЗ
	|	ВтТаблицаТовары КАК ТаблицаТовары
	|ГДЕ
	|	(НЕ ТаблицаТовары.Склад.ИспользоватьОрдернуюСхемуПриПоступлении
	|				ИЛИ &ИспользоватьОбособленноеОбеспечениеЗаказов)
	|
	|	И ТаблицаТовары.Назначение = ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
	|	И ТаблицаТовары.ТипНоменклатуры В (ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Товар),ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара))
	|
	|;
	|////////////////////////////////////////////////////////////////////////////////
	// 6 ТаблицаДвижениеТоваров
	|
	|ВЫБРАТЬ
	|	ТаблицаТовары.НомерСтроки    КАК НомерСтроки,
	|	&Период                      КАК Период,
	|	ВЫБОР
	|		КОГДА (&ПоступлениеПоЗаказу И &СоглашениеЯвляетсяРаспоряжением) ТОГДА
	|			&Распоряжение
	|		КОГДА (НЕ &ПоступлениеПоЗаказу И &СоглашениеЯвляетсяРаспоряжением) ТОГДА
	|			&Распоряжение
	|		ИНАЧЕ
	|			ТаблицаТовары.ЗаказПоставщику
	|	КОНЕЦ                        КАК Распоряжение,
	|	ТаблицаТовары.Склад          КАК Склад,
	|	ТаблицаТовары.Номенклатура   КАК Номенклатура,
	|	ТаблицаТовары.Назначение     КАК Назначение,
	|	ТаблицаТовары.Характеристика КАК Характеристика,
	|	-ТаблицаТовары.Количество    КАК ПланируемоеПоступление
	|ИЗ
	|	ВтТаблицаТовары КАК ТаблицаТовары
	|ГДЕ
	|	
	|	ТаблицаТовары.ТипНоменклатуры В (ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Товар),ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара))
	|	И &ПоступлениеПоЗаказу
	|	И (НЕ ТаблицаТовары.Склад.ИспользоватьОрдернуюСхемуПриПоступлении
	|				ИЛИ &ИспользоватьОбособленноеОбеспечениеЗаказов)
	|	И &ХозяйственнаяОперация <> ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ЗакупкаУПоставщикаРеглУчет)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ТаблицаТовары.НомерСтроки    КАК НомерСтроки,
	|	&Период                      КАК Период,
	|	&Распоряжение                КАК Распоряжение,
	|	ТаблицаТовары.Склад          КАК Склад,
	|	ТаблицаТовары.Номенклатура   КАК Номенклатура,
	|	НЕОПРЕДЕЛЕНО                 КАК Назначение,
	|	ТаблицаТовары.Характеристика КАК Характеристика,
	|	ТаблицаТовары.Количество     КАК ПланируемоеПоступление
	|ИЗ
	|	ВтТаблицаТовары КАК ТаблицаТовары
	|ГДЕ
	|	
	|	ТаблицаТовары.ТипНоменклатуры В (ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Товар),ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара))
	|	И НЕ &ПоступлениеПоЗаказу
	|	И &СоглашениеЯвляетсяРаспоряжением
	|	И (ТаблицаТовары.Склад.ИспользоватьОрдернуюСхемуПриПоступлении
	|			И НЕ &ИспользоватьОбособленноеОбеспечениеЗаказов)
	|	И &ХозяйственнаяОперация <> ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ЗакупкаУПоставщикаРеглУчет)
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки
	|;
	|////////////////////////////////////////////////////////////////////////////////
	// 7 ТаблицаДвиженияСерийТоваров
	|ВЫБРАТЬ
	|	ТаблицаСерии.Номенклатура   КАК Номенклатура,
	|	ТаблицаСерии.Характеристика КАК Характеристика,
	|	ТаблицаСерии.Серия          КАК Серия,
	|	ТаблицаСерии.Количество КАК Количество,
	|	ТаблицаСерии.Склад КАК Склад,
	|	ЗНАЧЕНИЕ(Справочник.СкладскиеПомещения.ПустаяСсылка) КАК Помещение,
	|	ЗНАЧЕНИЕ(Перечисление.СкладскиеОперации.ПриемкаОтПоставщика) КАК СкладскаяОперация,
	|	&Ссылка                     КАК Документ,
	|	&Период                     КАК Период,
	|	&Ссылка                     КАК Регистратор,
	|	ТаблицаСерии.НомерСтроки    КАК НомерСтроки
	|ИЗ
	|	Документ.ПоступлениеТоваровУслуг.Серии КАК ТаблицаСерии
	|
	|ГДЕ
	|	ТаблицаСерии.Ссылка = &Ссылка
	|	И ТаблицаСерии.Количество <> 0
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки
	|;
	|////////////////////////////////////////////////////////////////////////////////
	// 8 ВременнаяТаблицаКурсыВалют
	|ВЫБРАТЬ
	|	КурсыВалютСрезПоследних.Валюта    КАК Валюта,
	|	КурсыВалютСрезПоследних.Курс      КАК Курс,
	|	КурсыВалютСрезПоследних.Кратность КАК Кратность
	|ПОМЕСТИТЬ
	|	ВременнаяТаблицаКурсыВалют
	|ИЗ
	|	РегистрСведений.КурсыВалют.СрезПоследних(&Период, Валюта=&Валюта ИЛИ Валюта=&ВалютаСоглашения) КАК КурсыВалютСрезПоследних
	|ИНДЕКСИРОВАТЬ ПО
	|	Валюта
	|;
	|////////////////////////////////////////////////////////////////////////////////
	// 9 ВременнаяТаблицаТовары
	|ВЫБРАТЬ
	|	Товары.НоменклатураПоставщика КАК НоменклатураПоставщика,
	|	Товары.Номенклатура           КАК Номенклатура,
	|	Товары.Характеристика         КАК Характеристика,
	|	Товары.УсловиеЦеныПоставщика  КАК УсловиеЦеныПоставщика,
	|	Товары.Упаковка               КАК Упаковка,
	|	ВЫРАЗИТЬ(Товары.Цена
	|				* ВЫБОР
	|					КОГДА
	|						&ЦенаВключаетНДСДокумента И НЕ &ЦенаВключаетНДССоглашения
	|					ТОГДА
	|						ВЫБОР
	|							КОГДА
	|								Товары.СтавкаНДС = ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.БезНДС)
	|								ИЛИ Товары.СтавкаНДС = ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.НДС0)
	|							ТОГДА
	|								1
	|							КОГДА
	|								Товары.СтавкаНДС = ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.НДС18)
	|								ИЛИ Товары.СтавкаНДС = ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.НДС18_118)
	|							ТОГДА
	|								100/118
	|							КОГДА
	|								Товары.СтавкаНДС = ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.НДС10)
	|								ИЛИ Товары.СтавкаНДС = ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.НДС10_110)
	|							ТОГДА
	|								100/110
	|						КОНЕЦ
	|					КОГДА
	|						НЕ &ЦенаВключаетНДСДокумента И &ЦенаВключаетНДССоглашения
	|					ТОГДА
	|						ВЫБОР
	|							КОГДА
	|								Товары.СтавкаНДС = ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.БезНДС)
	|								ИЛИ Товары.СтавкаНДС = ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.НДС0)
	|							ТОГДА
	|								1
	|							КОГДА
	|								Товары.СтавкаНДС = ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.НДС18)
	|								ИЛИ Товары.СтавкаНДС = ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.НДС18_118)
	|							ТОГДА
	|								1.18
	|							КОГДА
	|								Товары.СтавкаНДС = ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.НДС10)
	|								ИЛИ Товары.СтавкаНДС = ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.НДС10_110)
	|							ТОГДА
	|								1.10
	|						КОНЕЦ
	|					ИНАЧЕ
	|						1
	|				КОНЕЦ
	|				* ВЫБОР
	|					КОГДА
	|						&Валюта <> &ВалютаСоглашения
	|					ТОГДА
	|						ВЫБОР
	|							КОГДА ЕСТЬNULL(КурсыВалютыСоглашения.Кратность, 0) > 0
	|								И ЕСТЬNULL(КурсыВалютыСоглашения.Курс, 0) > 0
	|								И ЕСТЬNULL(КурсыВалюты.Кратность, 0) > 0
	|								И ЕСТЬNULL(КурсыВалюты.Курс, 0) > 0
	|							ТОГДА 
	|								(КурсыВалюты.Курс * КурсыВалютыСоглашения.Кратность)
	|								/ (КурсыВалютыСоглашения.Курс * КурсыВалюты.Кратность)
	|							ИНАЧЕ
	|								0
	|						КОНЕЦ
	|					ИНАЧЕ 
	|						1
	|				КОНЕЦ КАК ЧИСЛО(15, 2))
	|	КАК Цена
	|ПОМЕСТИТЬ
	|	ВременнаяТаблицаТовары
	|ИЗ
	|	Документ.ПоступлениеТоваровУслуг.Товары КАК Товары
	|ЛЕВОЕ СОЕДИНЕНИЕ
	|	ВременнаяТаблицаКурсыВалют КАК КурсыВалюты
	|ПО
	|	КурсыВалюты.Валюта = &Валюта
	|ЛЕВОЕ СОЕДИНЕНИЕ
	|	ВременнаяТаблицаКурсыВалют КАК КурсыВалютыСоглашения
	|ПО
	|	КурсыВалютыСоглашения.Валюта = &ВалютаСоглашения
	|ГДЕ
	|	Товары.Ссылка = &Ссылка
	|	И &РегистрироватьЦеныПоставщика
	|	И (Товары.КодСтроки = 0 ИЛИ НЕ Товары.ЗаказПоставщику.РегистрироватьЦеныПоставщика)
	|;
	|////////////////////////////////////////////////////////////////////////////////
	// 10 ТоварыСРазличнымиУпаковкамиЦенами
	|ВЫБРАТЬ
	|	Товары.Номенклатура                    КАК Номенклатура,
	|	Товары.Характеристика                  КАК Характеристика,
	|	Товары.УсловиеЦеныПоставщика           КАК УсловиеЦеныПоставщика,
	|	СРЕДНЕЕ(
	|		Товары.Цена / ВЫБОР
	|				КОГДА
	|					Товары.Упаковка <> ЗНАЧЕНИЕ(Справочник.УпаковкиНоменклатуры.ПустаяСсылка)
	|				ТОГДА
	|					Товары.Упаковка.Коэффициент
	|				ИНАЧЕ
	|					1
	|			КОНЕЦ
	|	) КАК ЦенаЗаБазовуюЕдиницу,
	|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ Товары.Упаковка)  КАК КоличествоРазличныхУпаковок
	|ПОМЕСТИТЬ
	|	ТоварыСРазличнымиУпаковкамиЦенами
	|ИЗ
	|	ВременнаяТаблицаТовары КАК Товары
	|СГРУППИРОВАТЬ ПО
	|	Номенклатура,
	|	Характеристика,
	|	УсловиеЦеныПоставщика
	|;
	|////////////////////////////////////////////////////////////////////////////////
	// 11 ТаблицаЦеныНоменклатуры
	|ВЫБРАТЬ
	|	МАКСИМУМ(Товары.НоменклатураПоставщика) КАК НоменклатураПоставщика,
	|	Товары.Номенклатура                     КАК Номенклатура,
	|	Товары.Характеристика                   КАК Характеристика,
	|	Товары.УсловиеЦеныПоставщика            КАК УсловиеЦеныПоставщика,
	|	&ВалютаСоглашения                       КАК Валюта,
	|	&Период                                 КАК Период,
	|	&Соглашение                             КАК Соглашение,
	|	МИНИМУМ(ВЫБОР
	|				КОГДА
	|					ТоварыСРазличнымиУпаковкамиЦенами.КоличествоРазличныхУпаковок > 1
	|				ТОГДА
	|					ЗНАЧЕНИЕ(Справочник.УпаковкиНоменклатуры.ПустаяСсылка)
	|				ИНАЧЕ
	|					Товары.Упаковка
	|				КОНЕЦ
	|			) КАК Упаковка,
	|	СРЕДНЕЕ(ВЫБОР
	|				КОГДА
	|					ТоварыСРазличнымиУпаковкамиЦенами.КоличествоРазличныхУпаковок > 1
	|				ТОГДА
	|					ТоварыСРазличнымиУпаковкамиЦенами.ЦенаЗаБазовуюЕдиницу
	|				ИНАЧЕ
	|					Товары.Цена
	|				КОНЕЦ
	|			) КАК Цена
	|ИЗ
	|	ВременнаяТаблицаТовары КАК Товары
	|ЛЕВОЕ СОЕДИНЕНИЕ
	|	ТоварыСРазличнымиУпаковкамиЦенами КАК ТоварыСРазличнымиУпаковкамиЦенами
	|ПО
	|	Товары.Номенклатура = ТоварыСРазличнымиУпаковкамиЦенами.Номенклатура
	|	И Товары.Характеристика = ТоварыСРазличнымиУпаковкамиЦенами.Характеристика
	|	И Товары.УсловиеЦеныПоставщика = ТоварыСРазличнымиУпаковкамиЦенами.УсловиеЦеныПоставщика
	|СГРУППИРОВАТЬ ПО
	|	Товары.Номенклатура,
	|	Товары.Характеристика,
	|	Товары.УсловиеЦеныПоставщика
	|;
	|////////////////////////////////////////////////////////////////////////////////
	// 12 ТаблицаОбеспечениеЗаказов
	|ВЫБРАТЬ
	|	&Период                      КАК Период,
	|	ТаблицаТовары.Номенклатура   КАК Номенклатура,
	|	ТаблицаТовары.Характеристика КАК Характеристика,
	|	ВЫБОР КОГДА &ПоступлениеПоЗаказу И ТаблицаТовары.КодСтроки <> 0 ТОГДА
	|			-ТаблицаТовары.Количество
	|		ИНАЧЕ
	|			0
	|	КОНЕЦ                        КАК Заказано,
	|	ВЫБОР КОГДА &ПоступлениеПоЗаказу И ТаблицаТовары.КодСтроки <> 0 ТОГДА
	|			0
	|		ИНАЧЕ
	|			-ТаблицаТовары.Количество 
	|	КОНЕЦ                        КАК КЗаказу,
	|	ТаблицаТовары.Количество     КАК НаличиеПодЗаказ,
	|	ТаблицаТовары.Склад          КАК Склад,
	|	ТаблицаТовары.Назначение     КАК Назначение
	|
	|ИЗ
	|	Документ.ПоступлениеТоваровУслуг.Товары КАК ТаблицаТовары
	|ГДЕ
	|	ТаблицаТовары.Ссылка = &Ссылка
	|	И ТаблицаТовары.Назначение <> ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
	|	И ТаблицаТовары.Номенклатура.ТипНоменклатуры В (ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Товар),ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара))
	|;
	|////////////////////////////////////////////////////////////////////////////////
	// 13 ТаблицаОбеспечениеЗаказовРаботами
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
	|	&Период                                КАК Период,
	|	ТаблицаТовары.Номенклатура             КАК Номенклатура,
	|	ТаблицаТовары.Характеристика           КАК Характеристика,
	|	ВЫБОР 
	|		КОГДА &ПоступлениеПоЗаказу И ТаблицаТовары.КодСтроки <> 0 ТОГДА
	|			0
	|		ИНАЧЕ
	|			ТаблицаТовары.Количество 
	|	КОНЕЦ                                  КАК КОбеспечению,
	|	&Подразделение                         КАК Подразделение,
	|	ТаблицаТовары.Назначение               КАК Назначение
	|
	|ИЗ
	|	Документ.ПоступлениеТоваровУслуг.Товары КАК ТаблицаТовары
	|ГДЕ
	|	ТаблицаТовары.Ссылка = &Ссылка
	|	И ТаблицаТовары.Назначение <> ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
	|	И ТаблицаТовары.Номенклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Работа)
	|	И НЕ (&ПоступлениеПоЗаказу И ТаблицаТовары.КодСтроки <> 0)
	|;
	|////////////////////////////////////////////////////////////////////////////////
	// 14 ТаблицаПринятаяВозвратнаяТара
	|ВЫБРАТЬ
	|	ТаблицаТовары.НомерСтроки              КАК НомерСтроки,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	&Период                                КАК Период,
	|	ТаблицаТовары.Номенклатура             КАК Номенклатура,
	|	ТаблицаТовары.Характеристика           КАК Характеристика,
	|	ТаблицаТовары.Количество               КАК Количество,
	|	ТаблицаТовары.СуммаСНДС                КАК Сумма,
	|	&Партнер                               КАК Партнер,
	|	&Ссылка                                КАК ДокументПоступления
	|ИЗ
	|	втТаблицаТовары КАК ТаблицаТовары
	|ГДЕ
	|	ТаблицаТовары.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара)
	|	И &ВернутьМногооборотнуюТару
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки
	|;
	|////////////////////////////////////////////////////////////////////////////////
	|";
	
	Запрос.Текст = Запрос.Текст
		+ ТекстЗапросаТаблицаДатыПоступленияТоваровОрганизаций()
		+ ТекстЗапросаТаблицаТоварыОрганизаций()
		+ ТекстЗапросаТаблицаТоварыОрганизацийКОформлению()
		+ ТекстЗапросаТаблицаСебестоимостьТоваров()
		+ ТекстЗапросаТаблицаПрочиеДоходы()
		+ ТекстЗапросаТаблицаПрочиеРасходы()
		+ ТекстЗапросаТаблицаДенежныеСредстваКСписаниюСПодотчетныхЛиц()
		+ ТекстЗапросаТаблицаРасчетыСПоставщиками()
		+ ТекстЗапросаТаблицаРасчетыСПоставщикамиПоследовательность()
		+ ТекстЗапросаТаблицаСуммыДокументовВВалютеРегл()
		+ ТекстЗапросаТаблицаПартииТоваровОрганизаций()
		+ ТекстЗапросаТаблицаПартииТоваровОрганизацийПоследовательность()
		+ ТекстЗапросаПроизводственныеЗатраты()
		+ ТекстЗапросаРасчетЗатратВПроизводствеПоследовательность()
		+ ТекстЗапросаТаблицаПартииПрочихРасходов()
		;
	Результат = Запрос.ВыполнитьПакет();

	ТаблицыДляДвижений = ДополнительныеСвойства.ТаблицыДляДвижений;
	// Результат[0] - ВтТаблицаСерииТоваров
	// Результат[1] - ВтТаблицаТовары
	ТаблицыДляДвижений.Вставить("ТаблицаЗаказыПоставщикам",                        	Результат[2].Выгрузить());
	ТаблицыДляДвижений.Вставить("ТаблицаТоварыКПоступлению",                       	Результат[3].Выгрузить());
	ТаблицыДляДвижений.Вставить("ТаблицаТоварыНаСкладах",                          	Результат[4].Выгрузить());
	ТаблицыДляДвижений.Вставить("ТаблицаСвободныеОстатки",                         	Результат[5].Выгрузить());
	ТаблицыДляДвижений.Вставить("ТаблицаДвижениеТоваров",                          	Результат[6].Выгрузить());
	ТаблицыДляДвижений.Вставить("ТаблицаДвиженияСерийТоваров",                     	Результат[7].Выгрузить());
	// Результат[8] - ВременнаяТаблицаКурсыВалют
	// Результат[9] - ВременнаяТаблицаТовары
	// Результат[10] - ТоварыСРазличнымиУпаковкамиЦенами
	ТаблицыДляДвижений.Вставить("ТаблицаЦеныНоменклатуры",                         	Результат[11].Выгрузить());
	//
	ТаблицыДляДвижений.Вставить("ТаблицаОбеспечениеЗаказов",                        Результат[12].Выгрузить());
	ТаблицыДляДвижений.Вставить("ТаблицаОбеспечениеЗаказовРаботами",                Результат[13].Выгрузить());
	ТаблицыДляДвижений.Вставить("ТаблицаПринятаяВозвратнаяТара",                    Результат[14].Выгрузить());
	//
	ТаблицыДляДвижений.Вставить("ТаблицаДатыПоступленияТоваровОрганизаций",        	Результат[15].Выгрузить());
	// Результат[16] - ВтСоответствиеВидовЗапасов
	ТаблицыДляДвижений.Вставить("ТаблицаТоварыОрганизаций",                        	Результат[17].Выгрузить());
	ТаблицыДляДвижений.Вставить("ТаблицаТоварыОрганизацийКОформлению",             	Результат[18].Выгрузить());
	ТаблицыДляДвижений.Вставить("ТаблицаСебестоимостьТоваров",                     	Результат[19].Выгрузить());
	ТаблицыДляДвижений.Вставить("ТаблицаПрочиеДоходы",                             	Результат[20].Выгрузить());
	ТаблицыДляДвижений.Вставить("ТаблицаПрочиеРасходы",                            	Результат[21].Выгрузить());
	ТаблицыДляДвижений.Вставить("ТаблицаДенежныеСредстваКСписаниюСПодотчетныхЛиц", 	Результат[22].Выгрузить());
	ТаблицыДляДвижений.Вставить("ТаблицаРасчетыСПоставщиками",                     	Результат[23].Выгрузить());
	ТаблицыДляДвижений.Вставить("ТаблицаРасчетыСПоставщикамиПоследовательность",   	Результат[24].Выгрузить());
	ТаблицыДляДвижений.Вставить("ТаблицаСуммыДокументовВВалютеРегл",               	Результат[25].Выгрузить());
	ТаблицыДляДвижений.Вставить("ТаблицаПартииТоваровОрганизаций",                 	Результат[26].Выгрузить());
	ТаблицыДляДвижений.Вставить("ТаблицаПартииТоваровОрганизацийПоследовательность",  Результат[27].Выгрузить());
	ТаблицыДляДвижений.Вставить("ТаблицаПроизводственныеЗатраты",                     Результат[28].Выгрузить());
	ТаблицыДляДвижений.Вставить("ТаблицаРасчетЗатратВПроизводствеПоследовательность", Результат[29].Выгрузить());
	ТаблицыДляДвижений.Вставить("ТаблицаПартииПрочихРасходов", 						  Результат[30].Выгрузить());

КонецПроцедуры

Процедура ИнициализироватьКлючиАналитикиНоменклатуры(Реквизиты)

	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	ТаблицаТовары.Склад          КАК Склад,
	|	ТаблицаТовары.Номенклатура   КАК Номенклатура,
	|	ТаблицаТовары.Характеристика КАК Характеристика
	|ИЗ
	|	(ВЫБРАТЬ РАЗЛИЧНЫЕ
	|		ТаблицаТовары.Склад          КАК Склад,
	|		ТаблицаТовары.Номенклатура   КАК Номенклатура,
	|		ТаблицаТовары.Характеристика КАК Характеристика
	|	ИЗ
	|		Документ.ПоступлениеТоваровУслуг.Товары КАК ТаблицаТовары
	|	ГДЕ
	|		ТаблицаТовары.Ссылка = &Ссылка
	|		И ТаблицаТовары.Номенклатура.ТипНоменклатуры В (ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Товар),ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара))
	|	) КАК ТаблицаТовары
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаНоменклатуры КАК Аналитика
	|		ПО ТаблицаТовары.Номенклатура      = Аналитика.Номенклатура
	|			И ТаблицаТовары.Характеристика = Аналитика.Характеристика
	|			И ТаблицаТовары.Склад          = Аналитика.Склад
	|ГДЕ
	|	Аналитика.Номенклатура ЕСТЬ NULL
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	&Подразделение               КАК Склад,
	|	ТаблицаТовары.Номенклатура   КАК Номенклатура,
	|	ТаблицаТовары.Характеристика КАК Характеристика
	|ИЗ
	|	(ВЫБРАТЬ РАЗЛИЧНЫЕ
	|		ТаблицаТовары.Номенклатура   КАК Номенклатура,
	|		ТаблицаТовары.Характеристика КАК Характеристика
	|	ИЗ
	|		Документ.ПоступлениеТоваровУслуг.Товары КАК ТаблицаТовары
	|	ГДЕ
	|		ТаблицаТовары.Ссылка = &Ссылка
	|		И ТаблицаТовары.Номенклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Работа)
	|	) КАК ТаблицаТовары
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаНоменклатуры КАК Аналитика
	|		ПО ТаблицаТовары.Номенклатура      = Аналитика.Номенклатура
	|			И ТаблицаТовары.Характеристика = Аналитика.Характеристика
	|			И &Подразделение               = Аналитика.Склад
	|ГДЕ
	|	Аналитика.Номенклатура ЕСТЬ NULL
	|");	
	Запрос.УстановитьПараметр("Ссылка",        Реквизиты.Ссылка);
	Запрос.УстановитьПараметр("Подразделение", Реквизиты.Подразделение);
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		РегистрыСведений.АналитикаУчетаНоменклатуры.СоздатьКлючАналитики(Выборка)
	КонецЦикла;

КонецПроцедуры

Функция ИнициализироватьВидыЗапасов(Реквизиты)
	
	СоответствиеВидовЗапасов = Новый ТаблицаЗначений;
	СоответствиеВидовЗапасов.Колонки.Добавить("ВидЗапасов", Новый ОписаниеТипов("СправочникСсылка.ВидыЗапасов")); 
	СоответствиеВидовЗапасов.Колонки.Добавить("НовыйВидЗапасов", Новый ОписаниеТипов("СправочникСсылка.ВидыЗапасов")); 
	
	Если Реквизиты.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ЗакупкаУПоставщикаРеглУчет Тогда

		Запрос = Новый Запрос("
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ЗНАЧЕНИЕ(Справочник.Организации.УправленческаяОрганизация) КАК Организация,
		|	ТаблицаТовары.ВидЗапасов КАК ВидЗапасов,
		|	ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.Товар) КАК ТипЗапасов,
		|	Неопределено КАК Комитент,
		|	Неопределено КАК Соглашение,
		|	Неопределено КАК Валюта,
		|	Неопределено КАК НалогообложениеНДС,
		|	Неопределено КАК НалогообложениеОрганизации,
		|	Неопределено КАК Поставщик,
		|	ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка) КАК Назначение,
		|
		|	ТаблицаТовары.ВидЗапасов.ГруппаФинансовогоУчета КАК ГруппаФинансовогоУчета,
		|	Неопределено КАК Подразделение,
		|	Неопределено КАК Менеджер,
		|	Неопределено КАК Сделка,
		|	ЗНАЧЕНИЕ(Перечисление.ВариантыОбособленногоУчетаТоваров.НеВедется) КАК ВариантОбособленногоУчетаТоваров,
		|	Ложь КАК ОбособленныйУчетТоваровПоСделке,
		|	Ложь КАК ДеятельностьОблагаетсяЕНВД,
		|
		|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ЗакупкаУПоставщика) КАК ХозяйственнаяОперация
		|ИЗ
		|	Документ.ПоступлениеТоваровУслуг.Товары КАК ТаблицаТовары
		|ГДЕ
		|	ТаблицаТовары.Ссылка = &Ссылка
		|	И ТаблицаТовары.ВидЗапасов <> ЗНАЧЕНИЕ(Справочник.ВидыЗапасов.ПустаяСсылка)
		|");
		Запрос.УстановитьПараметр("Ссылка", Реквизиты.Ссылка);
		
		Выборка = Запрос.Выполнить().Выбрать();
		Пока Выборка.Следующий() Цикл
			
			НовыйВидЗапасов = Справочники.ВидыЗапасов.ВидЗапасовДокумента(
				Выборка.Организация,
				Выборка.ХозяйственнаяОперация,
				Выборка
			);
			НоваяСтрока = СоответствиеВидовЗапасов.Добавить();
			НоваяСтрока.ВидЗапасов = Выборка.ВидЗапасов;
			НоваяСтрока.НовыйВидЗапасов = НовыйВидЗапасов;
			
		КонецЦикла;
		
	КонецЕсли;
	
	Возврат СоответствиеВидовЗапасов;
	
КонецФункции

Функция ТекстЗапросаТаблицаДатыПоступленияТоваровОрганизаций()
	
	ТекстЗапроса = "
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	&Период КАК ДатаПоступления,
	|	ТаблицаТовары.Номенклатура   КАК Номенклатура,
	|	ТаблицаТовары.Характеристика КАК Характеристика,
	|	ТаблицаТовары.ВидЗапасов     КАК ВидЗапасов,
	|	ТаблицаТовары.НомерГТД       КАК НомерГТД
	|ИЗ
	|	ВтТаблицаТовары КАК ТаблицаТовары
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РегистрСведений.ДатыПоступленияТоваровОрганизаций КАК ПоступленияТоваров
	|	ПО
	|		ТаблицаТовары.ВидЗапасов = ПоступленияТоваров.ВидЗапасов 
	|		И ТаблицаТовары.Номенклатура = ПоступленияТоваров.Номенклатура
	|		И ТаблицаТовары.Характеристика = ПоступленияТоваров.Характеристика 
	|		И ТаблицаТовары.НомерГТД = ПоступленияТоваров.НомерГТД 
	|
	|ГДЕ
	|	ТаблицаТовары.ТипНоменклатуры В (ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Товар),ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара))
	|	И (ПоступленияТоваров.ДатаПоступления ЕСТЬ NULL
	|		ИЛИ ПоступленияТоваров.ДатаПоступления < &Период)
	|
	|УПОРЯДОЧИТЬ ПО
	|	ТаблицаТовары.ВидЗапасов,
	|	ТаблицаТовары.Номенклатура,
	|	ТаблицаТовары.Характеристика,
	|	ТаблицаТовары.НомерГТД
	|;
	|/////////////////////////////////////////////////////////////////////////////
	|";
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаТоварыОрганизаций()
	
	ТекстЗапроса = "
	|ВЫБРАТЬ
	|	СоответствиеВидовЗапасов.ВидЗапасов КАК ВидЗапасов,
	|	СоответствиеВидовЗапасов.НовыйВидЗапасов КАК НовыйВидЗапасов
	|ПОМЕСТИТЬ ВтСоответствиеВидовЗапасов
	|ИЗ
	|	&СоответствиеВидовЗапасов КАК СоответствиеВидовЗапасов
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаТовары.НомерСтроки КАК НомерСтроки,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	&Период КАК Период,
	|	&Организация КАК Организация,
	|	ТаблицаТовары.Склад КАК Склад,
	|	ТаблицаТовары.Номенклатура КАК Номенклатура,
	|	ТаблицаТовары.Характеристика КАК Характеристика,
	|	ТаблицаТовары.ВидЗапасов КАК ВидЗапасов,
	|	ТаблицаТовары.НомерГТД КАК НомерГТД,
	|	ТаблицаТовары.Количество КАК Количество,
	|	ТаблицаТовары.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры
	|ИЗ
	|	ВтТаблицаТовары КАК ТаблицаТовары
	|ГДЕ
	|	ТаблицаТовары.Ссылка = &Ссылка
	|	И ТаблицаТовары.ТипНоменклатуры В (ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Товар),ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара))
	|	И &ХозяйственнаяОперация <> ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ЗакупкаПоИмпорту)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ТаблицаТовары.НомерСтроки,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход),
	|	&Период,
	|	ЗНАЧЕНИЕ(Справочник.Организации.УправленческаяОрганизация),
	|	ТаблицаТовары.Склад,
	|	ТаблицаТовары.Номенклатура,
	|	ТаблицаТовары.Характеристика,
	|	ВтСоответствиеВидовЗапасов.НовыйВидЗапасов,
	|	ТаблицаТовары.НомерГТД,
	|	ТаблицаТовары.Количество,
	|	ТаблицаТовары.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры
	|ИЗ
	|	ВтТаблицаТовары КАК ТаблицаТовары
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		ВтСоответствиеВидовЗапасов КАК ВтСоответствиеВидовЗапасов
	|	ПО
	|		ТаблицаТовары.ВидЗапасов = ВтСоответствиеВидовЗапасов.ВидЗапасов
	|ГДЕ
	|	ТаблицаТовары.Ссылка = &Ссылка
	|	И ТаблицаТовары.ТипНоменклатуры В (ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Товар),ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара))
	|	И &ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ЗакупкаУПоставщикаРеглУчет)
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки
	|;
	|/////////////////////////////////////////////////////////////////////////////
	|";

	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаТоварыОрганизацийКОформлению()
	
	ТекстЗапроса = "
	|ВЫБРАТЬ
	|	ТаблицаТовары.НомерСтроки              КАК НомерСтроки,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	&Период                                КАК Период,
	|	&Организация                           КАК Организация,
	|	&Партнер							   КАК Поставщик,
	|	ТаблицаТовары.Склад                    КАК Склад,
	|	ТаблицаТовары.Номенклатура             КАК Номенклатура,
	|	ТаблицаТовары.Характеристика           КАК Характеристика,
	|	ТаблицаТовары.ВидЗапасов               КАК ВидЗапасов,
	|	ТаблицаТовары.Количество               КАК Количество
	|ИЗ
	|	ВтТаблицаТовары КАК ТаблицаТовары
	|
	|ГДЕ
	|	ТаблицаТовары.Ссылка = &Ссылка
	|	И ТаблицаТовары.ТипНоменклатуры В (ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Товар),ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара))
	|	И &ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ЗакупкаПоИмпорту)
	|;
	|/////////////////////////////////////////////////////////////////////////////
	|";
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаСебестоимостьТоваров()

	ТекстЗапроса = "
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	&Период КАК Период,
	|	ТаблицаТовары.НомерСтроки КАК НомерСтрокиДокумента,
	|	ТаблицаТовары.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|	ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыНаСкладах) КАК РазделУчета,
	|
	|	ВЫБОР КОГДА &УчитыватьСебестоимостьТоваровПоВидамЗапасов ТОГДА
	|   	ТаблицаТовары.ВидЗапасов
	|	ИНАЧЕ
	|		Неопределено
	|	КОНЕЦ КАК ВидЗапасов,
	|
	|	ВЫРАЗИТЬ(ТаблицаТовары.СуммаСНДС * &КоэффициентПересчетаВВалютуУпр КАК ЧИСЛО(15, 2)) КАК Стоимость,
	|	ВЫРАЗИТЬ((ТаблицаТовары.СуммаСНДС - ТаблицаТовары.СуммаНДС) * &КоэффициентПересчетаВВалютуУпр КАК ЧИСЛО(15, 2)) КАК СтоимостьБезНДС,
	|	
	|   ВЫБОР КОГДА &ЗакупкаПодДеятельность В (
	|		ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаОблагаетсяНДС),
	|		ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаНаЭкспорт))
	|	ТОГДА
	|		ЕСТЬNULL(Суммы.СуммаБезНДСРегл, ТаблицаТовары.СуммаБезНДСРегл)
	|
	|	КОГДА &ЗакупкаПодДеятельность В (
	|		ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаНеОблагаетсяНДС),
	|		ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаОблагаетсяЕНВД))
	|	ТОГДА
	|		ЕСТЬNULL(Суммы.СуммаБезНДСРегл + Суммы.СуммаНДСРегл, ТаблицаТовары.СуммаСНДСРегл)
	|	КОНЕЦ КАК СтоимостьРегл,
	|	ТаблицаТовары.Количество КАК Количество,
	|	&АналитикаУчетаПоПартнерам КАК АналитикаУчетаПоПартнерам,
	|	&ХозяйственнаяОперация КАК ХозяйственнаяОперация,
	|	&Организация КАК Организация,
	|   &Ссылка КАК ДокументПоступления
	|ИЗ
	|	ВтТаблицаТовары КАК ТаблицаТовары
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ 
	|		РегистрСведений.СуммыДокументовВВалютеРегл КАК Суммы
	|	ПО
	|		ТаблицаТовары.Ссылка = Суммы.Регистратор
	|		И ТаблицаТовары.ИдентификаторСтроки = Суммы.ИдентификаторСтроки
	|		И Суммы.СуммаБезНДСРегл <> 0
	|ГДЕ
	|	ТаблицаТовары.ТипНоменклатуры В (
	|		ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Товар),
	|		ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара)
	|		)
	|	И &ХозяйственнаяОперация В (
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ЗакупкаУПоставщика),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ЗакупкаУПоставщикаРеглУчет),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ЗакупкаПоИмпорту),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ЗакупкаЧерезПодотчетноеЛицо)
	|		)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	&Период                                КАК Период,
	|	ТаблицаТовары.НомерСтроки              КАК НомерСтрокиДокумента,
	|	ТаблицаТовары.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|	ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыНаСкладах) КАК РазделУчета,
	|
	|	ВЫБОР КОГДА &УчитыватьСебестоимостьТоваровПоВидамЗапасов ТОГДА
	|   	ВтСоответствиеВидовЗапасов.НовыйВидЗапасов
	|	ИНАЧЕ
	|		Неопределено
	|	КОНЕЦ КАК ВидЗапасов,
	|	- ВЫРАЗИТЬ(ТаблицаТовары.СуммаСНДС * &КоэффициентПересчетаВВалютуУпр КАК ЧИСЛО(15, 2)) КАК Стоимость,
	|	- ВЫРАЗИТЬ((ТаблицаТовары.СуммаСНДС - ТаблицаТовары.СуммаНДС) * &КоэффициентПересчетаВВалютуУпр КАК ЧИСЛО(15, 2)) КАК СтоимостьБезНДС,
	|
	|   ВЫБОР КОГДА &ЗакупкаПодДеятельность В (
	|		ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаОблагаетсяНДС),
	|		ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаНаЭкспорт))
	|	ТОГДА
	|		-ЕСТЬNULL(Суммы.СуммаБезНДСРегл, ТаблицаТовары.СуммаБезНДСРегл)
	|
	|	КОГДА &ЗакупкаПодДеятельность В (
	|		ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаНеОблагаетсяНДС),
	|		ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаОблагаетсяЕНВД))
	|	ТОГДА
	|		-ЕСТЬNULL(Суммы.СуммаБезНДСРегл + Суммы.СуммаНДСРегл, ТаблицаТовары.СуммаСНДСРегл)
	|	КОНЕЦ КАК СтоимостьРегл,
	|
	|	-ТаблицаТовары.Количество КАК Количество,
	|	&АналитикаУчетаПоПартнерам КАК АналитикаУчетаПоПартнерам,
	|	&ХозяйственнаяОперация КАК ХозяйственнаяОперация,
	|	ЗНАЧЕНИЕ(Справочник.Организации.УправленческаяОрганизация) КАК Организация,
	|	&Ссылка
	|ИЗ
	|	ВтТаблицаТовары КАК ТаблицаТовары
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		ВтСоответствиеВидовЗапасов КАК ВтСоответствиеВидовЗапасов
	|	ПО
	|		ТаблицаТовары.ВидЗапасов = ВтСоответствиеВидовЗапасов.ВидЗапасов
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ 
	|		РегистрСведений.СуммыДокументовВВалютеРегл КАК Суммы
	|	ПО
	|		ТаблицаТовары.Ссылка = Суммы.Регистратор
	|		И ТаблицаТовары.ИдентификаторСтроки = Суммы.ИдентификаторСтроки
	|		И Суммы.СуммаБезНДСРегл <> 0
	|ГДЕ
	|	ТаблицаТовары.ТипНоменклатуры В (
	|		ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Товар),
	|		ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара)
	|		)
	|	И &ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ЗакупкаУПоставщикаРеглУчет)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	&Период КАК Период,
	|	ТаблицаТовары.НомерСтроки КАК НомерСтрокиДокумента,
	|	ТаблицаТовары.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|
	|	ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПроизводственныеЗатраты) КАК РазделУчета,
	|
	|	Неопределено КАК ВидЗапасов,
	|
	|	ВЫРАЗИТЬ(ТаблицаТовары.СуммаСНДС * &КоэффициентПересчетаВВалютуУпр КАК ЧИСЛО(15, 2)) КАК Стоимость,
	|	ВЫРАЗИТЬ((ТаблицаТовары.СуммаСНДС - ТаблицаТовары.СуммаНДС) * &КоэффициентПересчетаВВалютуУпр КАК ЧИСЛО(15, 2)) КАК СтоимостьБезНДС,
	|
	|   ВЫБОР КОГДА &ЗакупкаПодДеятельность В (
	|		ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаОблагаетсяНДС),
	|		ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаНаЭкспорт))
	|	ТОГДА
	|		ЕСТЬNULL(Суммы.СуммаБезНДСРегл, ТаблицаТовары.СуммаБезНДСРегл)
	|
	|	КОГДА &ЗакупкаПодДеятельность В (
	|		ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаНеОблагаетсяНДС),
	|		ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаОблагаетсяЕНВД))
	|	ТОГДА
	|		ЕСТЬNULL(Суммы.СуммаБезНДСРегл + Суммы.СуммаНДСРегл, ТаблицаТовары.СуммаСНДСРегл)
	|	КОНЕЦ КАК СтоимостьРегл,
	|
	|	ТаблицаТовары.Количество КАК Количество,
	|	&АналитикаУчетаПоПартнерам КАК АналитикаУчетаПоПартнерам,
	|	&ХозяйственнаяОперация КАК ХозяйственнаяОперация,
	|	&Организация КАК Организация,
	|	&Ссылка КАК ДокументПоступления
	|ИЗ
	|	ВтТаблицаТовары КАК ТаблицаТовары
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ 
	|		РегистрСведений.СуммыДокументовВВалютеРегл КАК Суммы
	|	ПО
	|		ТаблицаТовары.Ссылка = Суммы.Регистратор
	|		И ТаблицаТовары.ИдентификаторСтроки = Суммы.ИдентификаторСтроки
	|		И Суммы.СуммаБезНДСРегл <> 0
	|ГДЕ
	|	ТаблицаТовары.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Работа)
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтрокиДокумента
	|;
	|////////////////////////////////////////////////////////////////////////////////
	|";

	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаПрочиеРасходы()

	ТекстЗапроса = "
	|ВЫБРАТЬ
	|	ТаблицаТовары.НомерСтроки КАК НомерСтроки,
	|	&Период КАК Период,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	&Организация КАК Организация,
	|	&Подразделение КАК Подразделение,
	|	ТаблицаТовары.СтатьяРасходов КАК СтатьяРасходов,
	|	ТаблицаТовары.АналитикаРасходов КАК АналитикаРасходов,
	|	ТаблицаТовары.СуммаСНДСУпр КАК Сумма,
	|	ВЫБОР КОГДА ТаблицаТовары.СтатьяРасходов.ВариантРаспределенияРасходов = ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаПроизводственныеЗатраты)
	|	ТОГДА 
	|		  ТаблицаТовары.СуммаБезНДСУпр
	|	ИНАЧЕ
	|		0
	|	КОНЕЦ КАК СуммаБезНДС,
	|
	|	ВЫБОР КОГДА ТаблицаТовары.СтатьяРасходов.ВариантРаспределенияРасходов = ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаПроизводственныеЗатраты)
	|	ТОГДА 
	|		ВЫБОР КОГДА &ЗакупкаПодДеятельность В (
	|			ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаОблагаетсяНДС),
	|			ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаНаЭкспорт))
	|		ТОГДА
	|			ЕСТЬNULL(Суммы.СуммаБезНДСРегл, ТаблицаТовары.СуммаБезНДСРегл)
	|
	|		КОГДА &ЗакупкаПодДеятельность В (
	|			ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаНеОблагаетсяНДС),
	|			ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаОблагаетсяЕНВД))
	|		ТОГДА
	|			ЕСТЬNULL(Суммы.СуммаБезНДСРегл + Суммы.СуммаНДСРегл, ТаблицаТовары.СуммаСНДСРегл)
	|		КОНЕЦ
	|	ИНАЧЕ
	|		0
	|	КОНЕЦ КАК СуммаРегл,
	|
	|	&ХозяйственнаяОперация КАК ХозяйственнаяОперация,
	|	ТаблицаТовары.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры
	|ИЗ
	|	ВтТаблицаТовары КАК ТаблицаТовары
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РегистрСведений.СуммыДокументовВВалютеРегл КАК Суммы
	|	ПО
	|		ТаблицаТовары.Ссылка = Суммы.Регистратор
	|		И ТаблицаТовары.ИдентификаторСтроки = Суммы.ИдентификаторСтроки
	|		И Суммы.СуммаБезНДСРегл <> 0
	|ГДЕ
	|	ТаблицаТовары.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Услуга)
	|	И &ХозяйственнаяОперация <> ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ЗакупкаУПоставщикаРеглУчет)
	|	И ТаблицаТовары.СтатьяРасходов.ВариантРаспределенияРасходов <> ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаСебестоимостьТоваров)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	0,
	|	&Период,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход),
	|	&Организация,
	|	&Подразделение,
	|	&СтатьяРасходовПоРасхождениям,
	|	&АналитикаРасходовПоРасхождениям,
	|	СУММА(ВЫРАЗИТЬ(ТаблицаРасхождений.СуммаСНДС * &КоэффициентПересчетаВВалютуУпр КАК ЧИСЛО(15, 2))),
	|	0,
	|	0,
	|	&ХозяйственнаяОперацияПоОтражениюРасхожденийВРасходах,
	|	NULL
	|ИЗ
	|	Документ.ПоступлениеТоваровУслуг.Расхождения КАК ТаблицаРасхождений
	|ГДЕ
	|	&ХозяйственнаяОперация В (ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ЗакупкаУПоставщика), ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ЗакупкаПоИмпорту))
	|	И ТаблицаРасхождений.Ссылка = &Ссылка
	|	И ТаблицаРасхождений.ВариантОтраженияРасхождений = ЗНАЧЕНИЕ(Перечисление.ВариантыОтраженияРасхождений.НедостачиНаПрочиеРасходы)
	|
	|ИМЕЮЩИЕ
	|	СУММА(ТаблицаРасхождений.Сумма + ТаблицаРасхождений.СуммаНДС * &ЦенаВключаетНДС) > 0
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки
	|;
	|////////////////////////////////////////////////////////////////////////////////
	|";

	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаПартииПрочихРасходов()

	ТекстЗапроса = "
	|ВЫБРАТЬ
	|	ТаблицаТовары.НомерСтроки КАК НомерСтроки,
	|	&Период КАК Период,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	&Организация КАК Организация,
	|	&Подразделение КАК Подразделение,
	|	&Ссылка КАК ДокументПоступленияРасходов,
	|	ТаблицаТовары.СтатьяРасходов КАК СтатьяРасходов,
	|	ТаблицаТовары.АналитикаРасходов КАК АналитикаРасходов,
	|	ВЫБОР КОГДА ТаблицаТовары.СтатьяРасходов.ВариантРаспределенияРасходов <>
	|		ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаСебестоимостьТоваров)
	|	ТОГДА
	|		0
	|	ИНАЧЕ
	|		ТаблицаТовары.СуммаСНДСУпр
	|	КОНЕЦ КАК Стоимость,
	|	ВЫБОР КОГДА ТаблицаТовары.СтатьяРасходов.ВариантРаспределенияРасходов <>
	|		ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаСебестоимостьТоваров)
	|	ТОГДА
	|		0
	|	ИНАЧЕ
	|		ТаблицаТовары.СуммаБезНДСУпр
	|	КОНЕЦ КАК СтоимостьБезНДС,
	|
	|	ЕСТЬNULL(Суммы.СуммаБезНДСРегл, ТаблицаТовары.СуммаБезНДСРегл) КАК СтоимостьРегл,
	|
	|	ЕСТЬNULL(Суммы.СуммаНДСРегл, ТаблицаТовары.СуммаНДСРегл) КАК НДСРегл,
	|
	|	ТаблицаТовары.АналитикаУчетаПартий КАК АналитикаУчетаПартий
	|ИЗ
	|	ВтТаблицаТовары КАК ТаблицаТовары
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РегистрСведений.СуммыДокументовВВалютеРегл КАК Суммы
	|	ПО
	|		ТаблицаТовары.Ссылка = Суммы.Регистратор
	|		И ТаблицаТовары.ИдентификаторСтроки = Суммы.ИдентификаторСтроки
	|		И Суммы.СуммаБезНДСРегл <> 0
	|ГДЕ
	|	ТаблицаТовары.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Услуга)
	|	И ((&ХозяйственнаяОперация <> ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ЗакупкаУПоставщикаРеглУчет) И
	|		ТаблицаТовары.СтатьяРасходов.ВариантРаспределенияРасходов = ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаСебестоимостьТоваров)
	|		 )
	|		ИЛИ (ТаблицаТовары.СтатьяРасходов.ВариантРаспределенияРасходов = ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаНаправленияДеятельности)
	|			И ТаблицаТовары.СтатьяРасходов.ВариантРаздельногоУчетаНДС = ЗНАЧЕНИЕ(Перечисление.ВариантыРаздельногоУчетаНДС.Распределение)
	|			И &Организация <> ЗНАЧЕНИЕ(Справочник.Организации.УправленческаяОрганизация))
	|		)
	|	И &ИспользоватьУчетПрочихДоходовРасходов
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	0,
	|	&Период,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход),
	|	&Организация,
	|	&Подразделение,
	|	&Ссылка,
	|	&СтатьяРасходовПоРасхождениям,
	|	&АналитикаРасходовПоРасхождениям,
	|	СУММА (ВЫБОР КОГДА &СтатьяРасходовПоРасхождениямВариантРаспределения <>
	|					ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаСебестоимостьТоваров)
	|				ТОГДА
	|					0
	|				ИНАЧЕ
	|					ВЫРАЗИТЬ(ТаблицаРасхождений.СуммаСНДС * &КоэффициентПересчетаВВалютуУпр КАК ЧИСЛО(15, 2))
	|			КОНЕЦ),
	|	СУММА (ВЫБОР КОГДА &СтатьяРасходовПоРасхождениямВариантРаспределения <>
	|					ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаСебестоимостьТоваров)
	|				ТОГДА
	|					0
	|				ИНАЧЕ
	|					ВЫРАЗИТЬ((ТаблицаРасхождений.СуммаСНДС - ТаблицаРасхождений.СуммаНДС) * &КоэффициентПересчетаВВалютуУпр КАК ЧИСЛО(15, 2))
	|				КОНЕЦ),
	|	СУММА(ЕСТЬNULL(Суммы.СуммаБезНДСРегл,
	|				ВЫРАЗИТЬ((ТаблицаРасхождений.СуммаСНДС - ТаблицаРасхождений.СуммаНДС) * &КоэффициентПересчетаВВалютуРегл КАК ЧИСЛО(15, 2)))),
	|	СУММА(ЕСТЬNULL(Суммы.СуммаБезНДСРегл,
	|				ВЫРАЗИТЬ(ТаблицаРасхождений.СуммаНДС * &КоэффициентПересчетаВВалютуРегл КАК ЧИСЛО(15, 2)))),
	|	ТаблицаРасхождений.АналитикаУчетаПартий
	|ИЗ
	|	Документ.ПоступлениеТоваровУслуг.Расхождения КАК ТаблицаРасхождений
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РегистрСведений.СуммыДокументовВВалютеРегл КАК Суммы
	|	ПО
	|		ТаблицаРасхождений.Ссылка = Суммы.Регистратор
	|		И ТаблицаРасхождений.ИдентификаторСтроки = Суммы.ИдентификаторСтроки
	|		И Суммы.СуммаБезНДСРегл <> 0
	|ГДЕ
	|	&ХозяйственнаяОперация <> ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПриемНаКомиссию)
	|	И ТаблицаРасхождений.Ссылка = &Ссылка
	|	И ТаблицаРасхождений.ВариантОтраженияРасхождений = ЗНАЧЕНИЕ(Перечисление.ВариантыОтраженияРасхождений.НедостачиНаПрочиеРасходы)
	|	И ((&ХозяйственнаяОперация <> ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ЗакупкаУПоставщикаРеглУчет)
	|		И &СтатьяРасходовПоРасхождениямВариантРаспределения = ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаСебестоимостьТоваров)
	|		)
	|		ИЛИ (
	|			&СтатьяРасходовПоРасхождениямВариантРаспределения = ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаНаправленияДеятельности)
	|			И &СтатьяРасходовПоРасхождениямВариантРаздельногоУчетаНДС = ЗНАЧЕНИЕ(Перечисление.ВариантыРаздельногоУчетаНДС.Распределение)
	|			И &Организация <> ЗНАЧЕНИЕ(Справочник.Организации.УправленческаяОрганизация)
	|			)
	|	)
	|	И &ИспользоватьУчетПрочихДоходовРасходов
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаРасхождений.АналитикаУчетаПартий
	|
	|ИМЕЮЩИЕ
	|	СУММА(ТаблицаРасхождений.Сумма + ТаблицаРасхождений.СуммаНДС * &ЦенаВключаетНДС) > 0
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки
	|;
	|////////////////////////////////////////////////////////////////////////////////
	|";

	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаПрочиеДоходы()

	ТекстЗапроса = "
	|ВЫБРАТЬ
	|	&Период                               			     			КАК Период,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)			     			КАК ВидДвижения,
	|	&Организация                          			     			КАК Организация,
	|	&Подразделение                        			     			КАК Подразделение,
	|	&СтатьяДоходовПоРасхождениям          			     			КАК СтатьяДоходов,
	|	&АналитикаДоходовПоРасхождениям       			     			КАК АналитикаДоходов,
	|	СУММА(ВЫРАЗИТЬ((ТаблицаРасхождений.Сумма + ТаблицаРасхождений.СуммаНДС * &ЦенаВключаетНДС)
	|	* &КоэффициентПересчетаВВалютуУпр КАК ЧИСЛО(15,2)))				КАК Сумма,
	|	&ХозяйственнаяОперацияПоОтражениюРасхожденийВДоходах 			КАК ХозяйственнаяОперация
	|ИЗ
	|	Документ.ПоступлениеТоваровУслуг.Расхождения КАК ТаблицаРасхождений
	|ГДЕ
	|	&ХозяйственнаяОперация В (
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ЗакупкаУПоставщика),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ЗакупкаПоИмпорту)
	|		)
	|	И ТаблицаРасхождений.Ссылка = &Ссылка
	|	И ТаблицаРасхождений.ВариантОтраженияРасхождений = ЗНАЧЕНИЕ(Перечисление.ВариантыОтраженияРасхождений.ИзлишкиНаПрочиеДоходы)
	|	И &ИспользоватьУчетПрочихДоходовРасходов
	|	
	|ИМЕЮЩИЕ
	|	СУММА(ТаблицаРасхождений.Сумма + ТаблицаРасхождений.СуммаНДС * &ЦенаВключаетНДС) > 0
	|
	|;
	|////////////////////////////////////////////////////////////////////////////////
	|";

	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаДенежныеСредстваКСписаниюСПодотчетныхЛиц()

	ТекстЗапроса = "
	|ВЫБРАТЬ
	|	&Период                                КАК Период,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
	|	&Организация                           КАК Организация,
	|	&ПодотчетноеЛицо                       КАК ПодотчетноеЛицо,
	|	&Валюта                                КАК Валюта,
	|	ТаблицаТовары.Ссылка                   КАК РасчетныйДокумент,
	|	&ХозяйственнаяОперация                 КАК ХозяйственнаяОперация,
	|	СУММА(ТаблицаТовары.СуммаСНДС)         КАК Сумма
	|ИЗ
	|	ВтТаблицаТовары КАК ТаблицаТовары
	|ГДЕ
	|	&ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ЗакупкаЧерезПодотчетноеЛицо)
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаТовары.Ссылка
	|;
	|////////////////////////////////////////////////////////////////////////////////
	|";

	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаРасчетыСПоставщиками()
	
	ТекстЗапроса = "
	|ВЫБРАТЬ
	|	&Период КАК Период,
	|	&Период КАК ДатаРегистратора,
	|	&ДатаПлатежа КАК ДатаПлатежа,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
	|	&АналитикаУчетаПоПартнерам КАК АналитикаУчетаПоПартнерам,
	|
	|	ВЫБОР КОГДА &РасчетыПоДоговорам ТОГДА
	|		&Договор
	|	ИНАЧЕ
	|		ТаблицаТовары.ЗаказПоставщику
	|	КОНЕЦ КАК ЗаказПоставщику,
	|
	|	ВЫБОР КОГДА &РасчетыПоДоговорам ТОГДА
	|		ТаблицаТовары.ЗаказПоставщику
	|	ИНАЧЕ
	|		Неопределено
	|	КОНЕЦ КАК ЗакупкаПоЗаказу,
	|
	|	&ВалютаВзаиморасчетов КАК Валюта,
	|	&ХозяйственнаяОперация КАК ХозяйственнаяОперация,
	|	НЕОПРЕДЕЛЕНО КАК ФормаОплаты,
	|	
	|	СУММА(ТаблицаТовары.СуммаВзаиморасчетов) КАК Сумма,
	|	СУММА(0) КАК КОплате,
	|	СУММА(ТаблицаТовары.СуммаВзаиморасчетов) КАК КПоступлению
	|ИЗ
	|	Документ.ПоступлениеТоваровУслуг.Товары КАК ТаблицаТовары
	|ГДЕ
	|	&ХозяйственнаяОперация В (
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ЗакупкаУПоставщика),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ЗакупкаУПоставщикаРеглУчет),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ЗакупкаПоИмпорту)
	|		)
	|	И ТаблицаТовары.Ссылка = &Ссылка
	|	И ТаблицаТовары.КодСтроки <> 0
	|	И &ПоступлениеПоЗаказу
	|	И Не &РасчетыПоНакладным
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаТовары.ЗаказПоставщику
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	&Период КАК Период,
	|	&Период КАК ДатаРегистратора,
	|	&ДатаПлатежа КАК ДатаПлатежа,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	&АналитикаУчетаПоПартнерам КАК АналитикаУчетаПоПартнерам,
	|
	|	ВЫБОР КОГДА &РасчетыПоДоговорам ТОГДА
	|		&Договор
	|	ИНАЧЕ
	|		ТаблицаТовары.ЗаказПоставщику
	|	КОНЕЦ КАК ЗаказПоставщику,
	|
	|	Неопределено КАК ЗакупкаПоЗаказу,
	|	&ВалютаВзаиморасчетов КАК Валюта,
	|	&ХозяйственнаяОперация КАК ХозяйственнаяОперация,
	|	НЕОПРЕДЕЛЕНО КАК ФормаОплаты,
	|	
	|	СУММА(0) КАК Сумма,
	|	СУММА(0) КАК КОплате,
	|	СУММА(ТаблицаТовары.СуммаВзаиморасчетов) КАК КПоступлению
	|ИЗ
	|	Документ.ПоступлениеТоваровУслуг.Товары КАК ТаблицаТовары
	|ГДЕ
	|	&ХозяйственнаяОперация В (
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ЗакупкаУПоставщика),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ЗакупкаУПоставщикаРеглУчет),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ЗакупкаПоИмпорту)
	|		)
	|	И ТаблицаТовары.Ссылка = &Ссылка
	|	И ТаблицаТовары.КодСтроки = 0
	|	И &ПоступлениеПоЗаказу
	|	И Не &РасчетыПоНакладным
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаТовары.ЗаказПоставщику
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	&Период КАК Период,
	|	&Период КАК ДатаРегистратора,
	|	&ДатаПлатежа КАК ДатаПлатежа,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
	|	&АналитикаУчетаПоПартнерам КАК АналитикаУчетаПоПартнерам,
	|
	|	ВЫБОР КОГДА &РасчетыПоДоговорам ТОГДА
	|		&Договор
	|	ИНАЧЕ
	|		ТаблицаТовары.ЗаказПоставщику
	|	КОНЕЦ КАК ЗаказПоставщику,
	|
	|	Неопределено КАК ЗакупкаПоЗаказу,
	|	&ВалютаВзаиморасчетов КАК Валюта,
	|	&ХозяйственнаяОперация КАК ХозяйственнаяОперация,
	|	НЕОПРЕДЕЛЕНО КАК ФормаОплаты,
	|	
	|	СУММА(0) КАК Сумма,
	|	СУММА(0) КАК КОплате,
	|	СУММА(ТаблицаТовары.СуммаВзаиморасчетов) КАК КПоступлению
	|ИЗ
	|	Документ.ПоступлениеТоваровУслуг.Товары КАК ТаблицаТовары
	|ГДЕ
	|	&ХозяйственнаяОперация В (
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ЗакупкаУПоставщика),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ЗакупкаУПоставщикаРеглУчет),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ЗакупкаПоИмпорту)
	|		)
	|	И ТаблицаТовары.Ссылка = &Ссылка
	|	И ТаблицаТовары.КодСтроки = 0
	|	И &ПоступлениеПоЗаказу
	|	И Не &РасчетыПоНакладным
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаТовары.ЗаказПоставщику
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	&Период КАК Период,
	|	&Период КАК ДатаРегистратора,
	|	&ДатаПлатежа КАК ДатаПлатежа,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
	|	&АналитикаУчетаПоПартнерам КАК АналитикаУчетаПоПартнерам,
	|
	|	ВЫБОР КОГДА &РасчетыПоДоговорам ТОГДА
	|		&Договор
	|	ИНАЧЕ
	|		ТаблицаТовары.ЗаказПоставщику
	|	КОНЕЦ КАК ЗаказПоставщику,
	|
	|
	|	ВЫБОР КОГДА &РасчетыПоДоговорам ТОГДА
	|		ТаблицаТовары.ЗаказПоставщику
	|	ИНАЧЕ
	|		Неопределено
	|	КОНЕЦ КАК ЗакупкаПоЗаказу,
	|
	|	&ВалютаВзаиморасчетов КАК Валюта,
	|	&ХозяйственнаяОперация  КАК ХозяйственнаяОперация,
	|	НЕОПРЕДЕЛЕНО КАК ФормаОплаты,
	|
	|	СУММА(0) КАК Сумма,
	|	СУММА(0) КАК КОплате,
	|	СУММА(ТаблицаТовары.СуммаВзаиморасчетов) КАК КПоступлению
	|ИЗ
	|	Документ.ПоступлениеТоваровУслуг.Товары КАК ТаблицаТовары
	|ГДЕ
	|	&ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПриемНаКомиссию)
	|	И ТаблицаТовары.Ссылка = &Ссылка
	|	И ТаблицаТовары.КодСтроки <> 0
	|	И &ПоступлениеПоЗаказу
	|	И Не &РасчетыПоНакладным
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаТовары.ЗаказПоставщику
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	&Период КАК Период,
	|	&Период КАК ДатаРегистратора,
	|	&ДатаПлатежа КАК ДатаПлатежа,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
	|	&АналитикаУчетаПоПартнерам КАК АналитикаУчетаПоПартнерам,
	|
	|	ВЫБОР КОГДА &РасчетыПоДоговорам ТОГДА
	|		&Договор
	|	ИНАЧЕ
	|		ВЫБОР КОГДА &ПоступлениеПоЗаказу И Не &РасчетыПоНакладным ТОГДА
	|			ТаблицаТовары.ЗаказПоставщику
	|		ИНАЧЕ
	|			&Ссылка
	|		КОНЕЦ
	|	КОНЕЦ КАК ЗаказПоставщику,
	|
	|	Неопределено КАК ЗакупкаПоЗаказу,
	|	&ВалютаВзаиморасчетов КАК Валюта,
	|	&ХозяйственнаяОперация КАК ХозяйственнаяОперация,
	|	&ФормаОплаты КАК ФормаОплаты,
	|
	|	СУММА(ТаблицаТовары.СуммаВзаиморасчетов) КАК Сумма,
	|	СУММА(0) КАК КОплате,
	|	СУММА(0) КАК КПоступлению
	|ИЗ
	|	Документ.ПоступлениеТоваровУслуг.Товары КАК ТаблицаТовары
	|ГДЕ
	|	&ХозяйственнаяОперация В (
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ЗакупкаУПоставщика),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ЗакупкаУПоставщикаРеглУчет),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ЗакупкаПоИмпорту)
	|		)
	|	И ТаблицаТовары.Ссылка = &Ссылка
	|	И (ТаблицаТовары.КодСтроки = 0
	|		Или &РасчетыПоНакладным)
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаТовары.ЗаказПоставщику
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	КОНЕЦПЕРИОДА(&ДатаПлатежа, День) КАК Период,
	|	&Период КАК ДатаРегистратора,
	|	&ДатаПлатежа КАК ДатаПлатежа,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
	|	&АналитикаУчетаПоПартнерам КАК АналитикаУчетаПоПартнерам,
	|
	|	ВЫБОР КОГДА &РасчетыПоДоговорам ТОГДА
	|		&Договор
	|	ИНАЧЕ
	|		ВЫБОР КОГДА &ПоступлениеПоЗаказу И Не &РасчетыПоНакладным ТОГДА
	|			ТаблицаТовары.ЗаказПоставщику
	|		ИНАЧЕ
	|			&Ссылка
	|		КОНЕЦ
	|	КОНЕЦ КАК ЗаказПоставщику,
	|
	|	Неопределено КАК ЗакупкаПоЗаказу,
	|	&ВалютаВзаиморасчетов КАК Валюта,
	|	&ХозяйственнаяОперация КАК ХозяйственнаяОперация,
	|	&ФормаОплаты КАК ФормаОплаты,
	|
	|	СУММА(0) КАК Сумма,
	|	СУММА(ТаблицаТовары.СуммаВзаиморасчетов) КАК КОплате,
	|	СУММА(0) КАК КПоступлению
	|ИЗ
	|	Документ.ПоступлениеТоваровУслуг.Товары КАК ТаблицаТовары
	|ГДЕ
	|	&ХозяйственнаяОперация В (
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ЗакупкаУПоставщика),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ЗакупкаУПоставщикаРеглУчет),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ЗакупкаПоИмпорту)
	|		)
	|	И ТаблицаТовары.Ссылка = &Ссылка
	|	И (ТаблицаТовары.КодСтроки = 0
	|		Или &РасчетыПоНакладным)
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаТовары.ЗаказПоставщику
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	&Период КАК Период,
	|	&Период КАК ДатаРегистратора,
	|	&Период КАК ДатаПлатежа,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	&АналитикаУчетаПоПартнерамУпр КАК АналитикаУчетаПоПартнерам,
	|	ТаблицаРасшифровкаПлатежа.Заказ КАК ЗаказПоставщику,
	|	Неопределено КАК ЗакупкаПоЗаказу,
	|	ТаблицаРасшифровкаПлатежа.ВалютаВзаиморасчетов КАК Валюта,
	|	&ХозяйственнаяОперация КАК ХозяйственнаяОперация,
	|	Неопределено КАК ФормаОплаты,
	|	
	|	ТаблицаРасшифровкаПлатежа.СуммаВзаиморасчетов КАК Сумма,
	|	ТаблицаРасшифровкаПлатежа.СуммаВзаиморасчетов КАК КОплате,
	|	0 КАК КПоступлению
	|ИЗ
	|	Документ.ПоступлениеТоваровУслуг.РасшифровкаПлатежа КАК ТаблицаРасшифровкаПлатежа
	|ГДЕ
	|	&ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ЗакупкаУПоставщикаРеглУчет)
	|	И ТаблицаРасшифровкаПлатежа.Ссылка = &Ссылка
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	// ОТНЕСЕНИЕ РАСХОДОВ НА СТОРОННЮЮ КОМПАНИЮ ////////////////////////////////
	|
	|ВЫБРАТЬ
	|	&Период КАК Период,
	|	&Период КАК ДатаРегистратора,
	|	&Период КАК ДатаПлатежа,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	&АналитикаУчетаПоСтороннейКомпании КАК АналитикаУчетаПоПартнерам,
	|	НЕОПРЕДЕЛЕНО КАК ЗаказПоставщику,
	|	Неопределено КАК ЗакупкаПоЗаказу,
	|	&ВалютаВзаиморасчетовСоСтороннейКомпанией КАК Валюта,
	|	&ХозяйственнаяОперацияПоРасчетамСоСтороннейКомпанией КАК ХозяйственнаяОперация,
	|	Неопределено КАК ФормаОплаты,
	|
	|	&СуммаРасчетовСоСтороннейКомпаниейПоРасхождениям КАК Сумма,
	|	&СуммаРасчетовСоСтороннейКомпаниейПоРасхождениям КАК КОплате,
	|	0 КАК КПоступлению
	|ГДЕ
	|	&СуммаРасчетовСоСтороннейКомпаниейПоРасхождениям <> 0
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	// ЗАКРЫТИЕ ДОЛГА ПОСТАВЩИКА, ОТНЕСЕННОГО НА ПРОЧИЕ РАСХОДЫ ПО КОДАМ СТРОК 0
	|
	|ВЫБРАТЬ
	|	&Период КАК Период,
	|	&Период КАК ДатаРегистратора,
	|	&Период КАК ДатаПлатежа,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
	|	&АналитикаУчетаПоПартнерам КАК АналитикаУчетаПоПартнерам,
	|
	|	ВЫБОР КОГДА &РасчетыПоДоговорам ТОГДА
	|		&Договор
	|	ИНАЧЕ
	|		ВЫБОР КОГДА &ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПриемНаКомиссию) ТОГДА
	|			Неопределено
	|		КОГДА &ПоступлениеПоЗаказу И Не &РасчетыПоНакладным ТОГДА
	|			ТаблицаРасхождений.ЗаказПоставщику
	|		ИНАЧЕ
	|			&Ссылка
	|		КОНЕЦ
	|	КОНЕЦ КАК ЗаказПоставщику,
	|
	|	Неопределено КАК ЗакупкаПоЗаказу,
	|	&ВалютаВзаиморасчетов КАК Валюта,
	|	&ХозяйственнаяОперацияПоЗакрытиюДолгаПоставщика КАК ХозяйственнаяОперация,
	|	Неопределено КАК ФормаОплаты,
	|
	|	СУММА(ТаблицаРасхождений.СуммаВзаиморасчетов) КАК Сумма,
	|	СУММА(ТаблицаРасхождений.СуммаВзаиморасчетов) КАК КОплате,
	|	0 КАК КПоступлению
	|ИЗ
	|	Документ.ПоступлениеТоваровУслуг.Расхождения КАК ТаблицаРасхождений
	|ГДЕ
	|	&ХозяйственнаяОперация В (
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ЗакупкаУПоставщика),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ЗакупкаПоИмпорту)
	|		)
	|	И ТаблицаРасхождений.Ссылка = &Ссылка
	|	И ТаблицаРасхождений.ВариантОтраженияРасхождений = ЗНАЧЕНИЕ(Перечисление.ВариантыОтраженияРасхождений.НедостачиНаПрочиеРасходы)
	|	И (ТаблицаРасхождений.КодСтроки = 0
	|		Или &РасчетыПоНакладным)
	|
	|СГРУППИРОВАТЬ ПО
	|	ЗаказПоставщику
	|	
	|ИМЕЮЩИЕ
	|	СУММА(ТаблицаРасхождений.СуммаВзаиморасчетов) > 0
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	// ЗАКРЫТИЕ ДОЛГА ПОСТАВЩИКА, ОТНЕСЕННОГО НА ПРОЧИЕ РАСХОДЫ ПО КОДАМ СТРОК <> 0
	|
	|ВЫБРАТЬ
	|	&Период КАК Период,
	|	&Период КАК ДатаРегистратора,
	|	&Период КАК ДатаПлатежа,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
	|	&АналитикаУчетаПоПартнерам КАК АналитикаУчетаПоПартнерам,
	|
	|	ВЫБОР КОГДА &РасчетыПоДоговорам ТОГДА
	|		&Договор
	|	ИНАЧЕ
	|		ВЫБОР КОГДА &ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПриемНаКомиссию) ТОГДА
	|			Неопределено
	|		КОГДА &ПоступлениеПоЗаказу И Не &РасчетыПоНакладным ТОГДА
	|			ТаблицаРасхождений.ЗаказПоставщику
	|		ИНАЧЕ
	|			&Ссылка
	|		КОНЕЦ
	|	КОНЕЦ КАК ЗаказПоставщику,
	|
	|	Неопределено КАК ЗакупкаПоЗаказу,
	|	&ВалютаВзаиморасчетов КАК Валюта,
	|	&ХозяйственнаяОперацияПоЗакрытиюДолгаПоставщика КАК ХозяйственнаяОперация,
	|	Неопределено КАК ФормаОплаты,
	|
	|	СУММА(ТаблицаРасхождений.СуммаВзаиморасчетов) КАК Сумма,
	|	0 КАК КОплате,
	|	0 КАК КПоступлению
	|ИЗ
	|	Документ.ПоступлениеТоваровУслуг.Расхождения КАК ТаблицаРасхождений
	|ГДЕ
	|	&ХозяйственнаяОперация В (
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ЗакупкаУПоставщика),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ЗакупкаПоИмпорту)
	|		)
	|	И ТаблицаРасхождений.Ссылка = &Ссылка
	|	И ТаблицаРасхождений.ВариантОтраженияРасхождений = ЗНАЧЕНИЕ(Перечисление.ВариантыОтраженияРасхождений.НедостачиНаПрочиеРасходы)
	|	И ТаблицаРасхождений.КодСтроки <> 0
	|	И Не &РасчетыПоНакладным
	|
	|СГРУППИРОВАТЬ ПО
	|	ЗаказПоставщику
	|	
	|ИМЕЮЩИЕ
	|	СУММА(ТаблицаРасхождений.СуммаВзаиморасчетов) > 0
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	// ЗАКРЫТИЕ НАШЕГО ДОЛГА ПОСТАВЩИКУ, ОТНЕСЕННОГО НА ПРОЧИЕ ДОХОДЫ
	|
	|ВЫБРАТЬ
	|	&Период КАК Период,
	|	&Период КАК ДатаРегистратора,
	|	&Период КАК ДатаПлатежа,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
	|	&АналитикаУчетаПоПартнерам КАК АналитикаУчетаПоПартнерам,
	|
	|	ВЫБОР КОГДА &РасчетыПоДоговорам ТОГДА
	|		&Договор
	|	ИНАЧЕ
	|		ВЫБОР КОГДА &ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПриемНаКомиссию) ТОГДА
	|			Неопределено
	|		КОГДА &ПоступлениеПоЗаказу И Не &РасчетыПоНакладным ТОГДА
	|			ТаблицаРасхождений.ЗаказПоставщику
	|		ИНАЧЕ
	|			&Ссылка
	|		КОНЕЦ
	|	КОНЕЦ КАК ЗаказПоставщику,
	|
	|	ВЫБОР КОГДА &РасчетыПоДоговорам И &ПоступлениеПоЗаказу ТОГДА
	|		ТаблицаРасхождений.ЗаказПоставщику
	|	ИНАЧЕ
	|		Неопределено
	|	КОНЕЦ КАК ЗакупкаПоЗаказу,
	|
	|	&ВалютаВзаиморасчетов КАК Валюта,
	|	&ХозяйственнаяОперацияПоЗакрытиюДолгаПоставщика КАК ХозяйственнаяОперация,
	|	Неопределено КАК ФормаОплаты,
	|
	|	-СУММА(ТаблицаРасхождений.СуммаВзаиморасчетов) КАК Сумма,
	|	-СУММА(ТаблицаРасхождений.СуммаВзаиморасчетов) КАК КОплате,
	|	0 КАК КПоступлению
	|ИЗ
	|	Документ.ПоступлениеТоваровУслуг.Расхождения КАК ТаблицаРасхождений
	|ГДЕ
	|	&ХозяйственнаяОперация В (
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ЗакупкаУПоставщика),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ЗакупкаПоИмпорту)
	|		)
	|	И ТаблицаРасхождений.Ссылка = &Ссылка
	|	И ТаблицаРасхождений.ВариантОтраженияРасхождений = ЗНАЧЕНИЕ(Перечисление.ВариантыОтраженияРасхождений.ИзлишкиНаПрочиеДоходы)
	|
	|СГРУППИРОВАТЬ ПО
	|	ЗаказПоставщику
	|	
	|ИМЕЮЩИЕ
	|	СУММА(ТаблицаРасхождений.СуммаВзаиморасчетов) > 0
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	// ЗАКРЫТИЕ ДОЛГА ПОСТАВЩИКА, ОТНЕСЕННОГО НА СТОРОННЮЮ КОМПАНИЮ ПО КОДАМ СТРОК 0
	|
	|ВЫБРАТЬ
	|	&Период КАК Период,
	|	&Период КАК ДатаРегистратора,
	|	&Период КАК ДатаПлатежа,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
	|	&АналитикаУчетаПоПартнерам КАК АналитикаУчетаПоПартнерам,
	|
	|	ВЫБОР КОГДА &РасчетыПоДоговорам ТОГДА
	|		&Договор
	|	ИНАЧЕ
	|		ВЫБОР КОГДА &ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПриемНаКомиссию) ТОГДА
	|			Неопределено
	|		КОГДА &ПоступлениеПоЗаказу И Не &РасчетыПоНакладным ТОГДА
	|			ТаблицаРасхождений.ЗаказПоставщику
	|		ИНАЧЕ
	|			&Ссылка
	|		КОНЕЦ
	|	КОНЕЦ КАК ЗаказПоставщику,
	|
	|	Неопределено КАК ЗакупкаПоЗаказу,
	|	&ВалютаВзаиморасчетов КАК Валюта,
	|	&ХозяйственнаяОперацияПоЗакрытиюДолгаПоставщика КАК ХозяйственнаяОперация,
	|	Неопределено КАК ФормаОплаты,
	|	СУММА(ТаблицаРасхождений.СуммаВзаиморасчетов) КАК Сумма,
	|	СУММА(ТаблицаРасхождений.СуммаВзаиморасчетов) КАК КОплате,
	|	0 КАК КПоступлению
	|ИЗ
	|	Документ.ПоступлениеТоваровУслуг.Расхождения КАК ТаблицаРасхождений
	|ГДЕ
	|	&ХозяйственнаяОперация В (
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ЗакупкаУПоставщика),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ЗакупкаПоИмпорту),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПриемНаКомиссию)
	|		)
	|	И ТаблицаРасхождений.Ссылка = &Ссылка
	|	И ТаблицаРасхождений.ВариантОтраженияРасхождений = ЗНАЧЕНИЕ(Перечисление.ВариантыОтраженияРасхождений.НедостачиЗаСчетСтороннейКомпании)
	|	И (ТаблицаРасхождений.КодСтроки = 0
	|		Или &РасчетыПоНакладным)
	|
	|СГРУППИРОВАТЬ ПО
	|	ЗаказПоставщику
	|	
	|ИМЕЮЩИЕ
	|	СУММА(ТаблицаРасхождений.Сумма + ТаблицаРасхождений.СуммаНДС * &ЦенаВключаетНДС) > 0
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	// ЗАКРЫТИЕ ДОЛГА ПОСТАВЩИКА, ОТНЕСЕННОГО НА СТОРОННЮЮ КОМПАНИЮ ПО КОДАМ СТРОК <> 0
	|
	|ВЫБРАТЬ
	|	&Период КАК Период,
	|	&Период КАК ДатаРегистратора,
	|	&Период КАК ДатаПлатежа,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
	|	&АналитикаУчетаПоПартнерам КАК АналитикаУчетаПоПартнерам,
	|
	|	ВЫБОР КОГДА &РасчетыПоДоговорам ТОГДА
	|		&Договор
	|	ИНАЧЕ
	|		ВЫБОР КОГДА &ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПриемНаКомиссию) ТОГДА
	|			Неопределено
	|		КОГДА &ПоступлениеПоЗаказу И Не &РасчетыПоНакладным ТОГДА
	|			ТаблицаРасхождений.ЗаказПоставщику
	|		ИНАЧЕ
	|			&Ссылка
	|		КОНЕЦ
	|	КОНЕЦ КАК ЗаказПоставщику,
	|
	|	Неопределено КАК ЗакупкаПоЗаказу,
	|	&ВалютаВзаиморасчетов КАК Валюта,
	|	&ХозяйственнаяОперацияПоЗакрытиюДолгаПоставщика КАК ХозяйственнаяОперация,
	|	Неопределено КАК ФормаОплаты,
	|	СУММА(ТаблицаРасхождений.СуммаВзаиморасчетов) КАК Сумма,
	|	0 КАК КОплате,
	|	0 КАК КПоступлению
	|ИЗ
	|	Документ.ПоступлениеТоваровУслуг.Расхождения КАК ТаблицаРасхождений
	|ГДЕ
	|	&ХозяйственнаяОперация В (
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ЗакупкаУПоставщика),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ЗакупкаПоИмпорту),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПриемНаКомиссию)
	|		)
	|	И ТаблицаРасхождений.Ссылка = &Ссылка
	|	И ТаблицаРасхождений.ВариантОтраженияРасхождений = ЗНАЧЕНИЕ(Перечисление.ВариантыОтраженияРасхождений.НедостачиЗаСчетСтороннейКомпании)
	|	И ТаблицаРасхождений.КодСтроки <> 0
	|	И Не &РасчетыПоНакладным
	|
	|СГРУППИРОВАТЬ ПО
	|	ЗаказПоставщику
	|	
	|ИМЕЮЩИЕ
	|	СУММА(ТаблицаРасхождений.Сумма + ТаблицаРасхождений.СуммаНДС * &ЦенаВключаетНДС) > 0
	|
	|;
	|////////////////////////////////////////////////////////////////////////////////
	|";
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаРасчетыСПоставщикамиПоследовательность()
	
	ТекстЗапроса = "
	|ВЫБРАТЬ
	|	&Период КАК Период,
	|	&Ссылка КАК Регистратор,
	|	&АналитикаУчетаПоПартнерам КАК АналитикаУчетаПоПартнерам
	|ГДЕ
	|	&ХозяйственнаяОперация В (
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ЗакупкаУПоставщика),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ЗакупкаУПоставщикаРеглУчет),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ЗакупкаПоИмпорту)
	|		)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	&Период КАК Период,
	|	&Ссылка КАК Регистратор,
	|	&АналитикаУчетаПоПартнерамУпр КАК АналитикаУчетаПоПартнерам
	|ГДЕ
	|	&ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ЗакупкаУПоставщикаРеглУчет)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	&Период КАК Период,
	|	&Ссылка КАК Регистратор,
	|	&АналитикаУчетаПоСтороннейКомпании КАК АналитикаУчетаПоПартнерам
	|ГДЕ
	|	&СуммаРасчетовСоСтороннейКомпаниейПоРасхождениям <> 0
	|;
	|/////////////////////////////////////////////////////////////////////////////
	|";
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ЕстьОрдерныеСкладыВТЧТовары(ЗаказСсылка)

	Запрос = Новый Запрос(
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	1
	|ИЗ
	|	Документ.ПоступлениеТоваровУслуг.Товары КАК Товары
	|ГДЕ
	|	Товары.Ссылка = &ЗаказСсылка
	|	И Товары.Склад.ИспользоватьОрдернуюСхемуПриПоступлении
	|");
	Запрос.УстановитьПараметр("ЗаказСсылка", ЗаказСсылка);
	Возврат Не Запрос.Выполнить().Пустой();

КонецФункции

Функция ТекстЗапросаТаблицаПартииТоваровОрганизаций()
	
	ТекстЗапроса = "
	|ВЫБРАТЬ
	|	ТаблицаТовары.НомерСтроки КАК НомерСтроки,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	&Период КАК Период,
	|	&Организация КАК Организация,
	|	ТаблицаТовары.ВидЗапасов КАК ВидЗапасов,
	|	ТаблицаТовары.НомерГТД КАК НомерГТД,
	|	ТаблицаТовары.Количество КАК Количество,
	|	ТаблицаТовары.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|	&Ссылка КАК ДокументПоступления,
	|	ТаблицаТовары.СуммаСНДСУпр КАК Стоимость,
	|	ТаблицаТовары.СуммаБезНДСУпр КАК СтоимостьБезНДС,
	|	ТаблицаТовары.СуммаБезНДСРегл КАК СтоимостьРегл,
	|	ТаблицаТовары.СуммаСНДСРегл - ТаблицаТовары.СуммаБезНДСРегл КАК НДСРегл,
	|	ТаблицаТовары.АналитикаУчетаПартий КАК АналитикаУчетаПартий,
	|	ТаблицаТовары.Номенклатура КАК Номенклатура,
	|	ТаблицаТовары.Характеристика КАК Характеристика
	|ИЗ
	|	ВтТаблицаТовары КАК ТаблицаТовары
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ 
	|		РегистрСведений.СуммыДокументовВВалютеРегл КАК Суммы
	|	ПО
	|		ТаблицаТовары.Ссылка = Суммы.Регистратор
	|		И ТаблицаТовары.ИдентификаторСтроки = Суммы.ИдентификаторСтроки
	|		И Суммы.СуммаБезНДСРегл <> 0
	|ГДЕ
	|	ТаблицаТовары.Ссылка = &Ссылка
	|	И ТаблицаТовары.ТипНоменклатуры В (ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Товар),ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара))
	|	И &ХозяйственнаяОперация <> ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ЗакупкаПоИмпорту)
	|	И &ХозяйственнаяОперация <> ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПриемНаКомиссию)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ТаблицаТовары.НомерСтроки,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход),
	|	&Период,
	|	ЗНАЧЕНИЕ(Справочник.Организации.УправленческаяОрганизация),
	|	ВтСоответствиеВидовЗапасов.НовыйВидЗапасов,
	|	ТаблицаТовары.НомерГТД,
	|	ТаблицаТовары.Количество,
	|	ТаблицаТовары.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|	&Ссылка,
	|	ТаблицаТовары.СуммаСНДСУпр,
	|	ТаблицаТовары.СуммаБезНДСУпр,
	|	ТаблицаТовары.СуммаБезНДСРегл,
	|	ТаблицаТовары.СуммаСНДСРегл - ТаблицаТовары.СуммаБезНДСРегл,
	|	ТаблицаТовары.АналитикаУчетаПартий,
	|	ТаблицаТовары.Номенклатура,
	|	ТаблицаТовары.Характеристика
	|ИЗ
	|	ВтТаблицаТовары КАК ТаблицаТовары
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		ВтСоответствиеВидовЗапасов КАК ВтСоответствиеВидовЗапасов
	|	ПО
	|		ТаблицаТовары.ВидЗапасов = ВтСоответствиеВидовЗапасов.ВидЗапасов
	|ГДЕ
	|	ТаблицаТовары.Ссылка = &Ссылка
	|	И ТаблицаТовары.ТипНоменклатуры В (ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Товар),ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара))
	|	И &ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ЗакупкаУПоставщикаРеглУчет)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ТаблицаТовары.НомерСтроки КАК НомерСтроки,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	&Период КАК Период,
	|	&Организация КАК Организация,
	|	ТаблицаТовары.ВидЗапасов КАК ВидЗапасов,
	|	ТаблицаТовары.НомерГТД КАК НомерГТД,
	|	ТаблицаТовары.Количество КАК Количество,
	|	ТаблицаТовары.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|	&Ссылка КАК ДокументПоступления,
	|	ТаблицаТовары.СуммаСНДСУпр КАК Стоимость,
	|	ТаблицаТовары.СуммаБезНДСУпр КАК СтоимостьБезНДС,
	|	ТаблицаТовары.СуммаБезНДСРегл КАК СтоимостьРегл,
	|	0 КАК НДСРегл,
	|	ТаблицаТовары.АналитикаУчетаПартий КАК АналитикаУчетаПартий,
	|	ТаблицаТовары.Номенклатура,
	|	ТаблицаТовары.Характеристика
	|ИЗ
	|	ВтТаблицаТовары КАК ТаблицаТовары
	|ГДЕ
	|	ТаблицаТовары.Ссылка = &Ссылка
	|	И ТаблицаТовары.ТипНоменклатуры В (ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Товар),ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара))
	|	И &ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПриемНаКомиссию)
	|
   	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки
	|;
	|/////////////////////////////////////////////////////////////////////////////
	|";  
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаПартииТоваровОрганизацийПоследовательность()
	
	ТекстЗапроса = "
	|ВЫБРАТЬ
	|	&Период КАК Период,
	|	&Ссылка КАК Регистратор,
	|	ТаблицаТовары.Номенклатура,
	|	ТаблицаТовары.Характеристика
	|ИЗ
	|	ВтТаблицаТовары КАК ТаблицаТовары
	|ГДЕ
	|	ТаблицаТовары.Ссылка = &Ссылка
	|	И ТаблицаТовары.ТипНоменклатуры В (ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Товар),ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара))
	|	И &ХозяйственнаяОперация <> ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ЗакупкаПоИмпорту)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	&Период,
	|	&Ссылка,
	|	ТаблицаТовары.Номенклатура,
	|	ТаблицаТовары.Характеристика
	|ИЗ
	|	ВтТаблицаТовары КАК ТаблицаТовары
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВтСоответствиеВидовЗапасов КАК ВтСоответствиеВидовЗапасов
	|		ПО ТаблицаТовары.ВидЗапасов = ВтСоответствиеВидовЗапасов.ВидЗапасов
	|ГДЕ
	|	ТаблицаТовары.Ссылка = &Ссылка
	|	И ТаблицаТовары.ТипНоменклатуры В (ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Товар),ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара))
	|	И &ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ЗакупкаУПоставщикаРеглУчет)
	|;
	|/////////////////////////////////////////////////////////////////////////////
	|";
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаСуммыДокументовВВалютеРегл()
	
	ТекстЗапроса = "
	|ВЫБРАТЬ
	|	ТаблицаТовары.НомерСтроки КАК НомерСтроки,
	|	&Период КАК Период,
	|	&Валюта КАК Валюта,
	|	ТаблицаТовары.ИдентификаторСтроки КАК ИдентификаторСтроки,
	|	ТаблицаТовары.СуммаСНДС - ТаблицаТовары.СуммаНДС КАК СуммаБезНДС,
	|	ТаблицаТовары.СтавкаНДС КАК СтавкаНДС,
	|	ТаблицаТовары.СуммаНДС КАК СуммаНДС,
	|
	|	ВЫБОР КОГДА ТаблицаТовары.СуммаСНДС - ТаблицаТовары.СуммаНДС = ЕСТЬNULL(ДанныеРегистра.СуммаБезНДС, 0) ТОГДА
	|		ЕСТЬNULL(ДанныеРегистра.СуммаБезНДСРегл, 0)
	|	ИНАЧЕ
	|		0
	|	КОНЕЦ КАК СуммаБезНДСРегл,
	|
	|	ВЫБОР КОГДА ТаблицаТовары.СуммаНДС = ЕСТЬNULL(ДанныеРегистра.СуммаНДС, 0) ТОГДА
	|		ЕСТЬNULL(ДанныеРегистра.СуммаНДСРегл, 0)
	|	ИНАЧЕ
	|		0
	|	КОНЕЦ КАК СуммаНДСРегл,
	|
	|	ЗНАЧЕНИЕ(Перечисление.ТипыРасчетовСПартнерами.РасчетыСПоставщиком) КАК ТипРасчетов
	|
	|ИЗ
	|	Документ.ПоступлениеТоваровУслуг.Товары КАК ТаблицаТовары
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РегистрСведений.СуммыДокументовВВалютеРегл КАК ДанныеРегистра
	|	ПО
	|		ДанныеРегистра.Регистратор = &Ссылка
	|		И ТаблицаТовары.ИдентификаторСтроки = ДанныеРегистра.ИдентификаторСтроки
	|ГДЕ
	|	ТаблицаТовары.Ссылка = &Ссылка
	|	И &Валюта <> &ВалютаРегламентированногоУчета
	|	И &ХозяйственнаяОперация В (
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ЗакупкаУПоставщика),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ЗакупкаУПоставщикаРеглУчет),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ЗакупкаПоИмпорту)
	|		)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ТаблицаТовары.НомерСтроки КАК НомерСтроки,
	|	&Период КАК Период,
	|	&Валюта КАК Валюта,
	|	ТаблицаТовары.ИдентификаторСтроки КАК ИдентификаторСтроки,
	|	ТаблицаТовары.СуммаСНДС - ТаблицаТовары.СуммаНДС КАК СуммаБезНДС,
	|	ТаблицаТовары.СтавкаНДС КАК СтавкаНДС,
	|	ТаблицаТовары.СуммаНДС КАК СуммаНДС,
	|	ТаблицаДокументаРегл.СуммаБезНДС КАК СуммаБезНДСРегл,
	|	ТаблицаДокументаРегл.СуммаНДС КАК СуммаНДСРегл,
	|	НЕОПРЕДЕЛЕНО КАК ТипРасчетов
	|
	|ИЗ
	|	Документ.ПоступлениеТоваровУслуг.Товары КАК ТаблицаТовары
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		ТаблицаТоваровПредварительная КАК ТаблицаДокументаРегл
	|	ПО
	|		ТаблицаТовары.ИдентификаторСтроки = ТаблицаДокументаРегл.ИдентификаторСтроки
	|
	|ГДЕ
	|	ТаблицаТовары.Ссылка = &Ссылка
	|	И &Валюта <> &ВалютаРегламентированногоУчета
	|	И &ХозяйственнаяОперация В (
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ЗакупкаЧерезПодотчетноеЛицо),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПриемНаКомиссию)
	|		)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ТаблицаРасхождения.НомерСтроки КАК НомерСтроки,
	|	&Период КАК Период,
	|	&Валюта КАК Валюта,
	|	ТаблицаРасхождения.ИдентификаторСтроки КАК ИдентификаторСтроки,
	|	ТаблицаРасхождения.СуммаСНДС - ТаблицаРасхождения.СуммаНДС КАК СуммаБезНДС,
	|	ТаблицаРасхождения.СтавкаНДС КАК СтавкаНДС,
	|	ТаблицаРасхождения.СуммаНДС КАК СуммаНДС,
	|	(ТаблицаРасхождения.СуммаСНДС - ТаблицаРасхождения.СуммаНДС) * &КоэффициентПересчетаВВалютуРегл КАК СуммаБезНДСРегл,
	|	ТаблицаРасхождения.СуммаНДС * &КоэффициентПересчетаВВалютуРегл КАК СуммаНДСРегл,
	|	НЕОПРЕДЕЛЕНО КАК ТипРасчетов
	|
	|ИЗ
	|	Документ.ПоступлениеТоваровУслуг.Расхождения КАК ТаблицаРасхождения
	|
	|ГДЕ
	|	ТаблицаРасхождения.Ссылка = &Ссылка
	|	И &Валюта <> &ВалютаРегламентированногоУчета
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки
	|;
	|/////////////////////////////////////////////////////////////////////////////
	|";
	
	Возврат ТекстЗапроса;
	
КонецФункции // ТекстЗапросаТаблицаСуммыДокументовВВалютеРегл()

Процедура ПересчитатьТаблицуТоваровВВалютуРегл(Реквизиты, МенеджерВременныхТаблиц)
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.Текст = "
	|ВЫБРАТЬ
	|	ТаблицаДокумента.Ссылка                                КАК Ссылка,
	|	ТаблицаДокумента.НомерСтроки                           КАК НомерСтроки,
	|	ТаблицаДокумента.ИдентификаторСтроки                   КАК ИдентификаторСтроки,
	|	ТаблицаДокумента.СтавкаНДС                             КАК СтавкаНДС,
	|	ТаблицаДокумента.СуммаСНДС                             КАК СуммаСНДС,
	|	ТаблицаДокумента.СуммаНДС                              КАК СуммаНДС,
	|	ТаблицаДокумента.СуммаСНДС - ТаблицаДокумента.СуммаНДС КАК СуммаБезНДС,
	|	&Валюта                                                КАК Валюта,
	|	&Период                                                КАК Дата
	|
	|ПОМЕСТИТЬ ТаблицаТоваровПредварительная
	|ИЗ
	|	Документ.ПоступлениеТоваровУслуг.Товары КАК ТаблицаДокумента
	|
	|ГДЕ
	|	ТаблицаДокумента.Ссылка = &Ссылка
	|	И &Валюта <> &ВалютаРегламентированногоУчета
	|	И &ХозяйственнаяОперация В (
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ЗакупкаЧерезПодотчетноеЛицо),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПриемНаКомиссию)
	|		)
	|";
	Запрос.УстановитьПараметр("Ссылка",                         Реквизиты.Ссылка);
	Запрос.УстановитьПараметр("Период",                         Реквизиты.Период);
	Запрос.УстановитьПараметр("Валюта",                         Реквизиты.Валюта);
	Запрос.УстановитьПараметр("ХозяйственнаяОперация",          Реквизиты.ХозяйственнаяОперация);
	Запрос.УстановитьПараметр("ВалютаРегламентированногоУчета", Константы.ВалютаРегламентированногоУчета.Получить());
	
	Запрос.Выполнить();
	
	ОбщегоНазначенияУТ.ПересчитатьТаблицуТоваровВВалютуРегл(МенеджерВременныхТаблиц);
	
КонецПроцедуры

// Формирует временную таблицу, содержащую табличную часть по таблице данных документов.
//
// Параметры:
//	МенеджерВременныхТаблиц - МенеджерВременныхТаблиц - Менеджер временных таблиц, содержащий таблицу ТаблицаДанныхДокументов с полями:
//		Ссылка,
//		Валюта.
//
//	ПересчитыватьВВалютуРегл - Булево - Признак необходимости пересчета сумм табличной части в валюте регламентированного учета.
//
Процедура ПоместитьВременнуюТаблицуТоваров(МенеджерВременныхТаблиц, ПересчитыватьВВалютуРегл = Истина) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("ВалютаРегламентированногоУчета", Константы.ВалютаРегламентированногоУчета.Получить());
	Запрос.УстановитьПараметр("ПересчитыватьВВалютуРегл",       ПересчитыватьВВалютуРегл);
	
	Если ПересчитыватьВВалютуРегл Тогда
		
		Запрос.Текст = "
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	РасчетыСПоставщиками.АналитикаУчетаПоПартнерам КАК АналитикаУчетаПоПартнерам
		|ИЗ
		|	РегистрНакопления.РасчетыСПоставщиками КАК РасчетыСПоставщиками
		|
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
		|		ТаблицаДанныхДокументов КАК ДанныеДокументов
		|	ПО
		|		РасчетыСПоставщиками.Регистратор = ДанныеДокументов.Ссылка
		|
		|ГДЕ
		|	ДанныеДокументов.Валюта <> &ВалютаРегламентированногоУчета
		|	И РасчетыСПоставщиками.Активность
		|";
		ТаблицаАналитик = Запрос.Выполнить().Выгрузить();
		МассивАналитикУчетаПоПартнерам = ТаблицаАналитик.ВыгрузитьКолонку("АналитикаУчетаПоПартнерам");
		
		ВзаиморасчетыСервер.ВыполнитьПроведениеДокументовПоРасчетамСПоставщиками(МассивАналитикУчетаПоПартнерам);
		
	КонецЕсли;
	
	Запрос.Текст = "
	|ВЫБРАТЬ
	|	ТаблицаДокумента.Ссылка                                КАК Ссылка,
	|	ТаблицаДокумента.НомерСтроки                           КАК НомерСтроки,
	|	ТаблицаДокумента.Номенклатура                          КАК Номенклатура,
	|	ТаблицаДокумента.Характеристика                        КАК Характеристика,
	|	ТаблицаДокумента.Количество                            КАК Количество,
	|	ТаблицаДокумента.КоличествоУпаковок                    КАК КоличествоУпаковок,
	|	ТаблицаДокумента.СуммаСНДС - ТаблицаДокумента.СуммаНДС КАК СуммаБезНДС,
	|	ТаблицаДокумента.СтавкаНДС                             КАК СтавкаНДС,
	|	ТаблицаДокумента.СуммаНДС                              КАК СуммаНДС,
	|	ТаблицаДокумента.Упаковка                              КАК Упаковка,
	|
	|	ВЫБОР КОГДА ТаблицаДокумента.Упаковка = ЗНАЧЕНИЕ(Справочник.УпаковкиНоменклатуры.ПустаяСсылка) ТОГДА
	|		ТаблицаДокумента.Номенклатура.ЕдиницаИзмерения
	|	ИНАЧЕ
	|		ТаблицаДокумента.Упаковка.ЕдиницаИзмерения
	|	КОНЕЦ КАК ЕдиницаИзмерения,
	|
	|	ТаблицаДокумента.Склад                                 КАК Склад
	|
	|ПОМЕСТИТЬ ТаблицаТоваров
	|ИЗ
	|	Документ.ПоступлениеТоваровУслуг.Товары КАК ТаблицаДокумента
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		ТаблицаДанныхДокументов КАК ДанныеДокументов
	|	ПО
	|		ТаблицаДокумента.Ссылка = ДанныеДокументов.Ссылка
	|
	|ГДЕ
	|	ДанныеДокументов.Валюта = &ВалютаРегламентированногоУчета
	|	ИЛИ (НЕ &ПересчитыватьВВалютуРегл)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ТаблицаДокумента.Ссылка                                 КАК Ссылка,
	|	ТаблицаДокумента.НомерСтроки                            КАК НомерСтроки,
	|	ТаблицаДокумента.Номенклатура                           КАК Номенклатура,
	|	ТаблицаДокумента.Характеристика                         КАК Характеристика,
	|	ТаблицаДокумента.Количество                             КАК Количество,
	|	ТаблицаДокумента.КоличествоУпаковок                     КАК КоличествоУпаковок,
	|	ЕСТЬNULL(СуммыДокументовВВалютеРегл.СуммаБезНДСРегл, 0) КАК СуммаБезНДС,
	|	ТаблицаДокумента.СтавкаНДС                              КАК СтавкаНДС,
	|	ЕСТЬNULL(СуммыДокументовВВалютеРегл.СуммаНДСРегл, 0)    КАК СуммаНДС,
	|	ТаблицаДокумента.Упаковка                               КАК Упаковка,
	|
	|	ВЫБОР КОГДА ТаблицаДокумента.Упаковка = ЗНАЧЕНИЕ(Справочник.УпаковкиНоменклатуры.ПустаяСсылка) ТОГДА
	|		ТаблицаДокумента.Номенклатура.ЕдиницаИзмерения
	|	ИНАЧЕ
	|		ТаблицаДокумента.Упаковка.ЕдиницаИзмерения
	|	КОНЕЦ КАК ЕдиницаИзмерения,
	|
	|	ТаблицаДокумента.Склад                                  КАК Склад
	|
	|ИЗ
	|	Документ.ПоступлениеТоваровУслуг.Товары КАК ТаблицаДокумента
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		ТаблицаДанныхДокументов КАК ДанныеДокументов
	|	ПО
	|		ТаблицаДокумента.Ссылка = ДанныеДокументов.Ссылка
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РегистрСведений.СуммыДокументовВВалютеРегл КАК СуммыДокументовВВалютеРегл
	|	ПО
	|		ТаблицаДокумента.Ссылка = СуммыДокументовВВалютеРегл.Регистратор
	|		И ТаблицаДокумента.ИдентификаторСтроки = СуммыДокументовВВалютеРегл.ИдентификаторСтроки
	|
	|ГДЕ
	|	ДанныеДокументов.Валюта <> &ВалютаРегламентированногоУчета
	|	И &ПересчитыватьВВалютуРегл
	|	И СуммыДокументовВВалютеРегл.Активность
	|";
	
	Запрос.Выполнить();
	
КонецПроцедуры

Функция ТекстЗапросаПроизводственныеЗатраты()
	
	ТекстЗапроса = "
	|ВЫБРАТЬ
	|	ТаблицаТовары.НомерСтроки КАК НомерСтроки,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	&Период КАК Период,
	|	&Период КАК ДатаРегистратора,
	|	&Организация КАК Организация,
	|	ТаблицаТовары.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|	ТаблицаТовары.Количество КАК Количество
	|ИЗ
	|	ВтТаблицаТовары КАК ТаблицаТовары
	|ГДЕ
	|	ТаблицаТовары.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Работа)
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки
	|;
	|/////////////////////////////////////////////////////////////////////////////
	|";
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаРасчетЗатратВПроизводствеПоследовательность()
	
	ТекстЗапроса = "
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	&Период КАК Период,
	|	&Ссылка КАК Регистратор,
	|	ТаблицаТовары.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры
	|ИЗ
	|	ВтТаблицаТовары КАК ТаблицаТовары
	|ГДЕ
	|	ТаблицаТовары.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Работа)
	|;
	|/////////////////////////////////////////////////////////////////////////////
	|";
	
	Возврат ТекстЗапроса;
	
КонецФункции

////////////////////////////////////////////////////////////////////////////////
// Печать

// Сформировать печатные формы объектов
//
// ВХОДЯЩИЕ:
//   ИменаМакетов    - Строка    - Имена макетов, перечисленные через запятую
//   МассивОбъектов  - Массив    - Массив ссылок на объекты которые нужно распечатать
//   ПараметрыПечати - Структура - Структура дополнительных параметров печати
//
// ИСХОДЯЩИЕ:
//   КоллекцияПечатныхФорм - Таблица значений - Сформированные табличные документы
//   ПараметрыВывода       - Структура        - Параметры сформированных табличных документов
//
Процедура Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт
	
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "Накладная") Тогда
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм, "Накладная", "Накладная", СформироватьПечатнуюФормуНакладная(МассивОбъектов, ОбъектыПечати));
	КонецЕсли;
	
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "ПриходнаяНакладная") Тогда
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм, "ПриходнаяНакладная", "Приходная накладная", СформироватьПечатнуюФормуПриходнаяНакладная(МассивОбъектов, ОбъектыПечати));
	КонецЕсли;
	
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "Акт") Тогда
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм, "Акт", "Акт об оказании услуг", СформироватьПечатнуюФормуАктОбОказанииУслуг(МассивОбъектов, ОбъектыПечати));
	КонецЕсли;
	
	ФормированиеПечатныхФорм.ЗаполнитьПараметрыОтправки(ПараметрыВывода.ПараметрыОтправки, МассивОбъектов, КоллекцияПечатныхФорм);
	
КонецПроцедуры

Функция ПолучитьДанныеДляПечатнойФормыОтборРазмещениеТоваров(ПараметрыПечати, МассивДокументов) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ПоступлениеТоваровУслугТовары.Ссылка КАК Ссылка,
	|	ПоступлениеТоваровУслугТовары.Склад КАК Склад
	|ПОМЕСТИТЬ СкладыДокумента
	|ИЗ
	|	Документ.ПоступлениеТоваровУслуг.Товары КАК ПоступлениеТоваровУслугТовары
	|ГДЕ
	|	ПоступлениеТоваровУслугТовары.Ссылка В(&МассивОбъектов)
	|	И ПоступлениеТоваровУслугТовары.Склад <> ЗНАЧЕНИЕ(Справочник.Склады.ПустаяСсылка)
	|
	|СГРУППИРОВАТЬ ПО
	|	ПоступлениеТоваровУслугТовары.Ссылка,
	|	ПоступлениеТоваровУслугТовары.Склад
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СкладыДокумента.Ссылка КАК Ссылка,
	|	ПРЕДСТАВЛЕНИЕ(СкладыДокумента.Ссылка) КАК СсылкаПредставление,
	|	ПРЕДСТАВЛЕНИЕ(СкладыДокумента.Склад) КАК СкладПредставление,
	|	СкладыДокумента.Склад КАК Склад,
	|	"""" КАК ПомещениеПредставление,
	|	СкладыДокумента.Ссылка.Дата КАК Дата,
	|	СкладыДокумента.Ссылка.Номер КАК Номер,
	|	ЛОЖЬ КАК ВидОперации,
	|	ИСТИНА КАК СкладыВТЧ,
	|	СкладыДокумента.Склад.ИспользоватьАдресноеХранениеСправочно КАК ИспользуетсяСправочноеХранение,
	|	СкладыДокумента.Склад.ИспользоватьОрдернуюСхемуПриПоступлении КАК НарушенаОрдернаяСхема,
	|	СкладыДокумента.Склад.ИспользоватьСерииНоменклатуры КАК ИспользоватьСерииНоменклатуры
	|ИЗ
	|	СкладыДокумента КАК СкладыДокумента
	|
	|УПОРЯДОЧИТЬ ПО
	|	Ссылка,
	|	Склад
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаТовары.Ссылка КАК Ссылка,
	|	ТаблицаТовары.Номенклатура КАК Номенклатура,
	|	ТаблицаТовары.Характеристика КАК Характеристика,
	|	NULL КАК Серия,
	|	ВЫБОР
	|		КОГДА ТаблицаТовары.Упаковка = ЗНАЧЕНИЕ(Справочник.УпаковкиНоменклатуры.ПустаяСсылка)
	|			ТОГДА ТаблицаТовары.Номенклатура.ЕдиницаИзмерения
	|		ИНАЧЕ ТаблицаТовары.Упаковка
	|	КОНЕЦ КАК Упаковка,
	|	ТаблицаТовары.Склад КАК Склад,
	|	ТаблицаТовары.КоличествоУпаковок КАК КоличествоУпаковок,
	|	ТаблицаТовары.Количество КАК Количество
	|ПОМЕСТИТЬ ТаблицаТовары
	|ИЗ
	|	Документ.ПоступлениеТоваровУслуг.Товары КАК ТаблицаТовары
	|ГДЕ
	|	ТаблицаТовары.Ссылка В(&МассивОбъектов)
	|	И ТаблицаТовары.Номенклатура.ТипНоменклатуры В (ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Товар),ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара))
	|	И (НЕ ТаблицаТовары.СтатусУказанияСерий В (2, 4, 6, 8, 10))
	|	И ТаблицаТовары.Склад.ИспользоватьАдресноеХранениеСправочно
	|	И (НЕ ТаблицаТовары.Склад.ИспользоватьОрдернуюСхемуПриПоступлении)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ТаблицаСерии.Ссылка,
	|	ТаблицаСерии.Номенклатура,
	|	ТаблицаСерии.Характеристика,
	|	ТаблицаСерии.Серия,
	|	ТаблицаСерии.Номенклатура.ЕдиницаИзмерения,
	|	ТаблицаСерии.Склад,
	|	ТаблицаСерии.Количество,
	|	ТаблицаСерии.Количество
	|ИЗ
	|	Документ.ПоступлениеТоваровУслуг.Серии КАК ТаблицаСерии
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ПоступлениеТоваровУслуг.Товары КАК ТаблицаТовары
	|		ПО ТаблицаСерии.Ссылка = ТаблицаТовары.Ссылка
	|			И ТаблицаСерии.Номенклатура = ТаблицаТовары.Номенклатура
	|			И ТаблицаСерии.Характеристика = ТаблицаТовары.Характеристика
	|			И ТаблицаСерии.Склад = ТаблицаТовары.Склад
	|	
	|ГДЕ
	|	ТаблицаСерии.Ссылка В(&МассивОбъектов)
	|	И ТаблицаСерии.Номенклатура.ТипНоменклатуры В (ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Товар),ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара))
	|	И ТаблицаСерии.Склад.ИспользоватьАдресноеХранениеСправочно
	|	И (НЕ ТаблицаСерии.Склад.ИспользоватьОрдернуюСхемуПриПоступлении)
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаСерии.Ссылка,
	|	ТаблицаСерии.Номенклатура,
	|	ТаблицаСерии.Характеристика,
	|	ТаблицаСерии.Серия,
	|	ТаблицаСерии.Склад,
	|	ТаблицаСерии.Количество,
	|	ТаблицаСерии.НомерСтроки
	|
	|ИМЕЮЩИЕ
	|	МАКСИМУМ(ТаблицаТовары.СтатусУказанияСерий) В (2, 4, 6, 8, 10)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаТовары.Ссылка КАК Ссылка,
	|	ТаблицаТовары.Склад КАК Склад,
	|	ТаблицаТовары.Номенклатура КАК Номенклатура,
	|	ТаблицаТовары.Серия КАК Серия,
	|	ТаблицаТовары.Номенклатура.Код КАК Код,
	|	ТаблицаТовары.Номенклатура.Артикул КАК Артикул,
	|	ТаблицаТовары.Номенклатура.НаименованиеПолное КАК ПредставлениеНоменклатуры,
	|	ПРЕДСТАВЛЕНИЕ(ТаблицаТовары.Номенклатура.ЕдиницаИзмерения) КАК ПредставлениеБазовойЕдиницыИзмерения,
	|	ТаблицаТовары.Характеристика.НаименованиеПолное КАК ПредставлениеХарактеристики,
	|	ТаблицаТовары.Упаковка.Наименование КАК ПредставлениеЕдининицыИзмеренияУпаковки,
	|	ТаблицаТовары.Серия.Наименование КАК ПредставлениеСерии,
	|	СУММА(ТаблицаТовары.КоличествоУпаковок) КАК КоличествоУпаковок,
	|	СУММА(ТаблицаТовары.Количество) КАК Количество,
	|	ЕСТЬNULL(РазмещениеОсновнаяЯчейка.Ячейка.РабочийУчасток, ЗНАЧЕНИЕ(Справочник.РабочиеУчастки.ПустаяСсылка)) КАК РабочийУчасток,
	|	ЕСТЬNULL(РазмещениеОсновнаяЯчейка.Ячейка.ПорядокОбхода, 0) КАК ПорядокОбхода,
	|	ЕСТЬNULL(РазмещениеОсновнаяЯчейка.Ячейка, ЗНАЧЕНИЕ(Справочник.СкладскиеЯчейки.ПустаяСсылка)) КАК ОсновнаяЯчейка,
	|	ЕСТЬNULL(РазмещениеОстальныеЯчейки.Ячейка.ПорядокОбхода, 0) КАК ПорядокОбходаДополнительнаяЯчейка,
	|	ПРЕДСТАВЛЕНИЕ(РазмещениеОсновнаяЯчейка.Ячейка.РабочийУчасток) КАК ПредставлениеРабочегоУчастка,
	|	РазмещениеОсновнаяЯчейка.Ячейка.Код КАК ОсновнаяЯчейкаПредставление,
	|	РазмещениеОстальныеЯчейки.Ячейка.Код КАК ЯчейкаПредставление
	|ИЗ
	|	ТаблицаТовары КАК ТаблицаТовары
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РазмещениеНоменклатурыПоСкладскимЯчейкам КАК РазмещениеОсновнаяЯчейка
	|		ПО ТаблицаТовары.Номенклатура = РазмещениеОсновнаяЯчейка.Номенклатура
	|			И (РазмещениеОсновнаяЯчейка.ОсновнаяЯчейка = ИСТИНА)
	|			И (РазмещениеОсновнаяЯчейка.Склад = ТаблицаТовары.Склад)
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РазмещениеНоменклатурыПоСкладскимЯчейкам КАК РазмещениеОстальныеЯчейки
	|		ПО ТаблицаТовары.Номенклатура = РазмещениеОстальныеЯчейки.Номенклатура
	|			И (РазмещениеОстальныеЯчейки.ОсновнаяЯчейка = ЛОЖЬ)
	|			И (РазмещениеОстальныеЯчейки.Склад = ТаблицаТовары.Склад)
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаТовары.Ссылка,
	|	ТаблицаТовары.Склад,
	|	ТаблицаТовары.Номенклатура,
	|	ТаблицаТовары.Характеристика,
	|	ТаблицаТовары.Серия,
	|	ТаблицаТовары.Упаковка,
	|	РазмещениеОсновнаяЯчейка.Ячейка,
	|	РазмещениеОстальныеЯчейки.Ячейка,
	|	ТаблицаТовары.Номенклатура.Код,
	|	ТаблицаТовары.Номенклатура.Артикул,
	|	ТаблицаТовары.Номенклатура.НаименованиеПолное,
	|	ТаблицаТовары.Характеристика.НаименованиеПолное,
	|	ТаблицаТовары.Упаковка.Наименование,
	|	ТаблицаТовары.Серия.Наименование,
	|	РазмещениеОсновнаяЯчейка.Ячейка.Код,
	|	РазмещениеОстальныеЯчейки.Ячейка.Код,
	|	ЕСТЬNULL(РазмещениеОсновнаяЯчейка.Ячейка.РабочийУчасток, ЗНАЧЕНИЕ(Справочник.РабочиеУчастки.ПустаяСсылка)),
	|	ЕСТЬNULL(РазмещениеОсновнаяЯчейка.Ячейка.ПорядокОбхода, 0),
	|	ЕСТЬNULL(РазмещениеОстальныеЯчейки.Ячейка.ПорядокОбхода, 0),
	|	ПРЕДСТАВЛЕНИЕ(ТаблицаТовары.Номенклатура.ЕдиницаИзмерения),
	|	ПРЕДСТАВЛЕНИЕ(РазмещениеОсновнаяЯчейка.Ячейка.РабочийУчасток)
	|
	|УПОРЯДОЧИТЬ ПО
	|	Ссылка,
	|	ТаблицаТовары.Склад,
	|	ПорядокОбхода,
	|	ОсновнаяЯчейкаПредставление,
	|	ПредставлениеНоменклатуры,
	|	ПредставлениеХарактеристики,
	|	ПредставлениеСерии,
	|	ПредставлениеЕдининицыИзмеренияУпаковки,
	|	ПорядокОбходаДополнительнаяЯчейка,
	|	ЯчейкаПредставление
	|ИТОГИ ПО
	|	Ссылка,
	|	Склад,
	|	РабочийУчасток,
	|	ОсновнаяЯчейка,
	|	Номенклатура,
	|	ТаблицаТовары.Характеристика,
	|	Серия,
	|	ТаблицаТовары.Упаковка";
	
	Запрос.УстановитьПараметр("МассивОбъектов", МассивДокументов); 
	МассивРезультатов 			= Запрос.ВыполнитьПакет();
	РезультатПоШапке			= МассивРезультатов[1];
	РезультатПоТабличнойЧасти 	= МассивРезультатов[3];
	СтруктураДанныхДляПечати 	= Новый Структура("РезультатПоШапке, РезультатПоТабличнойЧасти", РезультатПоШапке, РезультатПоТабличнойЧасти);
	
	Возврат СтруктураДанныхДляПечати;
	
КонецФункции

// Функция получает данные для формирования печатной формы  М-4
//
Функция ПолучитьДанныеДляПечатнойФормыМ4(ПараметрыПечати, МассивОбъектов) Экспорт
	
	КолонкаКодов = ФормированиеПечатныхФорм.ИмяДополнительнойКолонки();
	Если Не ЗначениеЗаполнено(КолонкаКодов) Тогда
		КолонкаКодов = "Код";
	КонецЕсли;
	
	МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.Текст = "
	|ВЫБРАТЬ
	|	ДанныеДокументов.Ссылка               КАК Ссылка,
	|	ДанныеДокументов.Дата                 КАК Дата,
	|	ДанныеДокументов.Валюта               КАК Валюта,
	|	ДанныеДокументов.ВалютаВзаиморасчетов КАК ВалютаВзаиморасчетов
	|
	|ПОМЕСТИТЬ ТаблицаДанныхДокументов
	|ИЗ
	|	Документ.ПоступлениеТоваровУслуг КАК ДанныеДокументов
	|
	|ГДЕ
	|	ДанныеДокументов.Ссылка В (&МассивОбъектов)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Ссылка
	|;";
	Запрос.УстановитьПараметр("МассивОбъектов", МассивОбъектов);
	
	Запрос.Выполнить();
	
	ПоместитьВременнуюТаблицуТоваров(МенеджерВременныхТаблиц);
	
	Запрос.Текст = "
	|////////////////////////////////////////////////////////////////////////////
	|// ЗАПРОС ПО ШАПКЕ
	|
	|ВЫБРАТЬ
	|	ПоступлениеТоваровУслуг.Ссылка                     КАК Ссылка,
	|	ПоступлениеТоваровУслуг.Номер                      КАК Номер,
	|	ПоступлениеТоваровУслуг.Дата                       КАК Дата,
	|	ПоступлениеТоваровУслуг.Дата                       КАК ДатаСоставления,
	|	ПоступлениеТоваровУслуг.НомерВходящегоДокумента    КАК НомерСопроводительногоДокумента,
	|	ПоступлениеТоваровУслуг.Контрагент                 КАК Поставщик,
	|	ПоступлениеТоваровУслуг.Организация                КАК Организация,
	|	ПоступлениеТоваровУслуг.Организация.Префикс        КАК Префикс,
	|	ПоступлениеТоваровУслуг.БанковскийСчетОрганизации  КАК БанковскийСчетОрганизации,
	|
	|	ВЫБОР
	|		КОГДА
	|			ПоступлениеТоваровУслуг.Грузоотправитель = ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)
	|		ТОГДА
	|			ПоступлениеТоваровУслуг.Организация
	|		ИНАЧЕ
	|			ПоступлениеТоваровУслуг.Грузоотправитель
	|	КОНЕЦ                                              КАК Грузоотправитель,
	|
	|	ПоступлениеТоваровУслуг.Подразделение              КАК Подразделение,
	|	ПоступлениеТоваровУслуг.Подразделение.Наименование КАК ПредставлениеПодразделения,
	|	ПоступлениеТоваровУслуг.Валюта                     КАК Валюта,
	|	ПоступлениеТоваровУслуг.Принял.Наименование        КАК МОЛ,
	|	ПоступлениеТоваровУслуг.ПринялДолжность            КАК ДолжностьМОЛ
	|
	|ИЗ
	|	Документ.ПоступлениеТоваровУслуг КАК ПоступлениеТоваровУслуг
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		ТаблицаДанныхДокументов КАК ДанныеДокументов
	|	ПО
	|		ПоступлениеТоваровУслуг.Ссылка = ДанныеДокументов.Ссылка
	|
	|УПОРЯДОЧИТЬ ПО
	|	Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////
	|// ЗАПРОС ПО ТАБЛИЧНЫМ ЧАСТЯМ
	|
	|ВЫБРАТЬ
	|	ТаблицаТоваров.Ссылка                                  КАК Ссылка,
	|	ТаблицаТоваров.Склад                                   КАК Склад,
	|	ТаблицаТоваров.Склад.Наименование                      КАК СкладНаименование,
	|	ТаблицаТоваров.Номенклатура                            КАК Номенклатура,
	|	ТаблицаТоваров.Номенклатура.НаименованиеПолное         КАК ТоварНаименование,
	|	
	|	ВЫБОР КОГДА &КолонкаКодов = ""Артикул"" ТОГДА
	|		ТаблицаТоваров.Номенклатура.Артикул
	|	ИНАЧЕ
	|		ТаблицаТоваров.Номенклатура.Код
	|	КОНЕЦ КАК ТоварКод,
	|	
	|	ТаблицаТоваров.ЕдиницаИзмерения.Представление          КАК ЕдиницаИзмеренияНаименование,
	|	ТаблицаТоваров.ЕдиницаИзмерения.Код                    КАК ЕдиницаИзмеренияКод,
	|	ТаблицаТоваров.Характеристика.НаименованиеПолное       КАК Характеристика,
	|
	|	ВЫБОР КОГДА ЕСТЬNULL(ТаблицаТоваров.Упаковка.Коэффициент, 1) = 1 ТОГДА
	|		НЕОПРЕДЕЛЕНО
	|	ИНАЧЕ
	|		ТаблицаТоваров.Упаковка
	|	КОНЕЦ КАК Упаковка,
	|
	|	ТаблицаТоваров.КоличествоУпаковок                      КАК Количество,
	|	ТаблицаТоваров.КоличествоУпаковок                      КАК КоличествоПринято,
	|	ТаблицаТоваров.СуммаБезНДС / ТаблицаТоваров.Количество КАК Цена,
	|	ТаблицаТоваров.СуммаБезНДС                             КАК СуммаБезНДС,
	|	ТаблицаТоваров.СуммаНДС                                КАК СуммаНДС,
	|	ТаблицаТоваров.СуммаБезНДС + ТаблицаТоваров.СуммаНДС   КАК СуммаСНДС,
	|	ВЫБОР
	|		КОГДА
	|			ТаблицаТоваров.Ссылка.ВернутьМногооборотнуюТару
	|			И ТаблицаТоваров.Номенклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара)
	|		ТОГДА
	|			ИСТИНА
	|		ИНАЧЕ
	|			ЛОЖЬ
	|	КОНЕЦ КАК ЭтоВозвратнаяТара
	|
	|ИЗ
	|	ТаблицаТоваров КАК ТаблицаТоваров
	|
	|УПОРЯДОЧИТЬ ПО
	|	Ссылка,
	|	ТаблицаТоваров.НомерСтроки
	|
	|ИТОГИ ПО
	|	Ссылка, Склад
	|";
	Запрос.УстановитьПараметр("КолонкаКодов", КолонкаКодов);
	
	МассивРезультатов         = Запрос.ВыполнитьПакет();
	РезультатПоШапке          = МассивРезультатов[0];
	РезультатПоТабличнойЧасти = МассивРезультатов[1];
	
	СтруктураДанныхДляПечати 	= Новый Структура("РезультатПоШапке, РезультатПоТабличнойЧасти",
	                                               РезультатПоШапке, РезультатПоТабличнойЧасти);
	
	Возврат СтруктураДанныхДляПечати;
	
КонецФункции

// Функция получает данные для формирования печатной формы  ТОРГ-4
//
Функция ПолучитьДанныеДляПечатнойФормыТОРГ4(ПараметрыПечати, МассивОбъектов) Экспорт
	
	КолонкаКодов = ФормированиеПечатныхФорм.ИмяДополнительнойКолонки();
	Если Не ЗначениеЗаполнено(КолонкаКодов) Тогда
		КолонкаКодов = "Код";
	КонецЕсли;
	
	МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.Текст = "
	|ВЫБРАТЬ
	|	ДанныеДокументов.Ссылка КАК Ссылка,
	|	ДанныеДокументов.Валюта КАК Валюта
	|
	|ПОМЕСТИТЬ ТаблицаДанныхДокументов
	|ИЗ
	|	Документ.ПоступлениеТоваровУслуг КАК ДанныеДокументов
	|
	|ГДЕ
	|	ДанныеДокументов.Ссылка В (&МассивОбъектов)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Ссылка
	|;";
	Запрос.УстановитьПараметр("МассивОбъектов", МассивОбъектов);
	
	Запрос.Выполнить();
	
	ПоместитьВременнуюТаблицуТоваров(МенеджерВременныхТаблиц);
	
	ОтветственныеЛицаСервер.СформироватьВременнуюТаблицуОтветственныхЛицДокументов(МассивОбъектов, МенеджерВременныхТаблиц);	
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ПоступлениеТоваровУслуг.Ссылка КАК Ссылка,
	|	ПоступлениеТоваровУслуг.Номер КАК Номер,
	|	ПоступлениеТоваровУслуг.Дата КАК Дата,
	|	ПоступлениеТоваровУслуг.Дата КАК ДатаДокумента,
	|	ПоступлениеТоваровУслуг.ДатаВходящегоДокумента КАК ДатаДокументаСопровождения,
	|	ПоступлениеТоваровУслуг.НомерВходящегоДокумента КАК НомерДокументаСопровождения,
	|	ПоступлениеТоваровУслуг.Контрагент КАК Поставщик,
	|	ПоступлениеТоваровУслуг.Организация КАК Организация,
	|	ПоступлениеТоваровУслуг.Организация.Префикс КАК Префикс,
	|	ПоступлениеТоваровУслуг.БанковскийСчетОрганизации КАК БанковскийСчетОрганизации,
	|	ПоступлениеТоваровУслуг.БанковскийСчетКонтрагента КАК БанковскийСчетКонтрагента,
	|	ПоступлениеТоваровУслуг.БанковскийСчетГрузоотправителя КАК БанковскийСчетГрузоотправителя,
	|	ВЫБОР
	|		КОГДА ПоступлениеТоваровУслуг.Грузоотправитель = ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)
	|			ТОГДА ПоступлениеТоваровУслуг.Организация
	|		ИНАЧЕ ПоступлениеТоваровУслуг.Грузоотправитель
	|	КОНЕЦ КАК Грузоотправитель,
	|	ТаблицаОтветственныеЛица.РуководительНаименование КАК Руководитель,
	|	ТаблицаОтветственныеЛица.РуководительДолжность КАК ДолжностьРуководителя,
	|	ПоступлениеТоваровУслуг.Подразделение.Наименование КАК ПредставлениеПодразделения,
	|	ПоступлениеТоваровУслуг.Валюта КАК Валюта,
	|	ПоступлениеТоваровУслуг.Принял.Наименование КАК МОЛ,
	|	ПоступлениеТоваровУслуг.ПринялДолжность КАК ДолжностьМОЛ
	|ИЗ
	|	Документ.ПоступлениеТоваровУслуг КАК ПоступлениеТоваровУслуг
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ТаблицаДанныхДокументов КАК ДанныеДокументов
	|		ПО ПоступлениеТоваровУслуг.Ссылка = ДанныеДокументов.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ ТаблицаОтветственныеЛица КАК ТаблицаОтветственныеЛица
	|		ПО ПоступлениеТоваровУслуг.Ссылка = ТаблицаОтветственныеЛица.Ссылка
	|
	|УПОРЯДОЧИТЬ ПО
	|	Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаТоваров.Ссылка КАК Ссылка,
	|	ТаблицаТоваров.Склад КАК Склад,
	|	ТаблицаТоваров.Склад.Наименование КАК МестоПриемки,
	|	ТаблицаТоваров.Номенклатура КАК Номенклатура,
	|	ТаблицаТоваров.Номенклатура.НаименованиеПолное КАК ТоварНаименование,
	|	ВЫБОР
	|		КОГДА &КолонкаКодов = ""Артикул""
	|			ТОГДА ТаблицаТоваров.Номенклатура.Артикул
	|		ИНАЧЕ ТаблицаТоваров.Номенклатура.Код
	|	КОНЕЦ КАК ТоварКод,
	|	ТаблицаТоваров.ЕдиницаИзмерения.Представление КАК ЕдиницаИзмеренияНаименование,
	|	ТаблицаТоваров.ЕдиницаИзмерения.Код КАК ЕдиницаИзмеренияКод,
	|	ТаблицаТоваров.Характеристика.НаименованиеПолное КАК Характеристика,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(ТаблицаТоваров.Упаковка.Коэффициент, 1) = 1
	|			ТОГДА НЕОПРЕДЕЛЕНО
	|		ИНАЧЕ ТаблицаТоваров.Упаковка
	|	КОНЕЦ КАК Упаковка,
	|	1 КАК КоличествоВОдномМесте,
	|	ТаблицаТоваров.КоличествоУпаковок КАК Количество,
	|	ТаблицаТоваров.КоличествоУпаковок КАК КоличествоМест,
	|	ВЫБОР
	|		КОГДА &ЗаполненаЕдиницаИзмеренияВеса
	|			ТОГДА ВЫБОР
	|					КОГДА ТаблицаТоваров.Упаковка.Вес ЕСТЬ NULL 
	|						ТОГДА ТаблицаТоваров.Количество * ТаблицаТоваров.Номенклатура.Вес
	|					ИНАЧЕ ТаблицаТоваров.КоличествоУпаковок * ТаблицаТоваров.Упаковка.Вес
	|				КОНЕЦ
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК МассаБрутто,
	|	ВЫБОР
	|		КОГДА &ЗаполненаЕдиницаИзмеренияВеса
	|			ТОГДА ТаблицаТоваров.Количество * ТаблицаТоваров.Номенклатура.Вес
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК МассаНетто,
	|	ТаблицаТоваров.СуммаБезНДС / ТаблицаТоваров.Количество КАК Цена,
	|	ТаблицаТоваров.СуммаБезНДС КАК СуммаБезНДС,
	|	ТаблицаТоваров.СуммаНДС КАК СуммаНДС,
	|	ТаблицаТоваров.СуммаБезНДС + ТаблицаТоваров.СуммаНДС КАК СуммаСНДС,
	|	ВЫБОР
	|		КОГДА
	|			ТаблицаТоваров.Ссылка.ВернутьМногооборотнуюТару
	|			И ТаблицаТоваров.Номенклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара)
	|		ТОГДА
	|			ИСТИНА
	|		ИНАЧЕ
	|			ЛОЖЬ
	|	КОНЕЦ КАК ЭтоВозвратнаяТара
	|ИЗ
	|	ТаблицаТоваров КАК ТаблицаТоваров
	|
	|УПОРЯДОЧИТЬ ПО
	|	Ссылка,
	|	ТаблицаТоваров.НомерСтроки
	|ИТОГИ ПО
	|	Ссылка,
	|	Склад";
	Запрос.УстановитьПараметр("КолонкаКодов",                  КолонкаКодов);
	Запрос.УстановитьПараметр("ЕдиницаИзмеренияВеса",          Константы.ЕдиницаИзмеренияВеса.Получить());
	Запрос.УстановитьПараметр("ЗаполненаЕдиницаИзмеренияВеса", ЗначениеЗаполнено(Константы.ЕдиницаИзмеренияВеса.Получить()));
	
	МассивРезультатов         = Запрос.ВыполнитьПакет();
	РезультатПоШапке          = МассивРезультатов[0];
	РезультатПоТабличнойЧасти = МассивРезультатов[1];
	
	СтруктураДанныхДляПечати 	= Новый Структура("РезультатПоШапке, РезультатПоТабличнойЧасти",
	                                               РезультатПоШапке, РезультатПоТабличнойЧасти);
	
	Возврат СтруктураДанныхДляПечати;
	
КонецФункции

Функция СформироватьПечатнуюФормуНакладная(МассивОбъектов, ОбъектыПечати)
	
	КолонкаКодов = ФормированиеПечатныхФорм.ИмяДополнительнойКолонки();
	ВыводитьКоды = ЗначениеЗаполнено(КолонкаКодов);
	
	ИспользоватьРучныеСкидки = ПолучитьФункциональнуюОпцию("ИспользоватьРучныеСкидкиВЗакупках");
	
	Запрос = Новый Запрос("
	|////////////////////////////////////////////////////////////////////////////
	|// ЗАПРОС ПО ШАПКЕ
	|
	|ВЫБРАТЬ
	|	ПоступлениеТоваровУслуг.Ссылка                                   КАК Ссылка,
	|	ПоступлениеТоваровУслуг.Номер                                    КАК Номер,
	|	ПоступлениеТоваровУслуг.Дата                                     КАК Дата,
	|	ПоступлениеТоваровУслуг.Партнер                                  КАК Партнер,
	|	ПоступлениеТоваровУслуг.Контрагент                               КАК Поставщик,
	|	ПоступлениеТоваровУслуг.Организация                              КАК Организация,
	|	ПоступлениеТоваровУслуг.Организация.Префикс                      КАК Префикс,
	|	ПоступлениеТоваровУслуг.Валюта                                   КАК Валюта,
	|	ПоступлениеТоваровУслуг.ЦенаВключаетНДС                          КАК ЦенаВключаетНДС,
	|	ПоступлениеТоваровУслуг.Принял.Наименование                      КАК ПолучениеПроизвел,
	|	ВЫБОР
	|		КОГДА
	|			ПоступлениеТоваровУслуг.НалогообложениеНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаОблагаетсяНДС)
	|		ТОГДА
	|			ИСТИНА
	|		ИНАЧЕ
	|			ЛОЖЬ
	|	КОНЕЦ КАК УчитыватьНДС
	|ИЗ
	|	Документ.ПоступлениеТоваровУслуг КАК ПоступлениеТоваровУслуг
	|
	|ГДЕ
	|	ПоступлениеТоваровУслуг.Ссылка В (&МассивДокументов)
	|
	|УПОРЯДОЧИТЬ ПО
	|	Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////
	|// ЗАПРОС ПО ТАБЛИЧНЫМ ЧАСТЯМ
	|
	|ВЫБРАТЬ
	|	ВложенныйЗапрос.Ссылка                                                     КАК Ссылка,
	|	ВложенныйЗапрос.Номенклатура                                               КАК Номенклатура,
	|	ВложенныйЗапрос.Номенклатура.НаименованиеПолное                            КАК ТоварНаименованиеПолное,
	|	ВложенныйЗапрос.Номенклатура.Код                                           КАК Код,
	|	ВложенныйЗапрос.Номенклатура.Артикул                                       КАК Артикул,
	|	ВложенныйЗапрос.ЕдиницаИзмерения.Наименование                              КАК ЕдиницаЦены,
	|	ВложенныйЗапрос.ЕдиницаИзмерения                                           КАК ЕдиницаИзмерения,
	|	ВложенныйЗапрос.Характеристика.НаименованиеПолное                          КАК Характеристика,
	|	ВЫБОР КОГДА ЕСТЬNULL(ВложенныйЗапрос.Упаковка.Коэффициент, 1) = 1
	|		ТОГДА НЕОПРЕДЕЛЕНО
	|		ИНАЧЕ ВложенныйЗапрос.Упаковка.Наименование
	|	КОНЕЦ                                                                      КАК Упаковка,
	|	ВложенныйЗапрос.СтавкаНДС                                                  КАК СтавкаНДС,
	|	ВложенныйЗапрос.Цена                                                       КАК Цена,
	|	ВложенныйЗапрос.Количество                                                 КАК Количество,
	|	ВложенныйЗапрос.Сумма                                                      КАК Сумма,
	|	ВложенныйЗапрос.СуммаНДС                                                   КАК СуммаНДС,
	|	ВложенныйЗапрос.СуммаСкидки                                                КАК СуммаСкидки,
	|	ВложенныйЗапрос.СуммаБезСкидки                                             КАК СуммаБезСкидки,
	|	ВложенныйЗапрос.НомерСтроки                                                КАК НомерСтроки,
	|	ВЫБОР
	|		КОГДА
	|			ВложенныйЗапрос.Ссылка.ВернутьМногооборотнуюТару
	|			И ВложенныйЗапрос.Номенклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара)
	|		ТОГДА
	|			ИСТИНА
	|		ИНАЧЕ
	|			ЛОЖЬ
	|	КОНЕЦ КАК ЭтоВозвратнаяТара
	|ИЗ (
	|	ВЫБРАТЬ
	|		ПоступлениеТоваровУслуг.Ссылка КАК Ссылка,
	|		ПоступлениеТоваровУслуг.Номенклатура КАК Номенклатура,
	|
	|		ВЫБОР КОГДА ПоступлениеТоваровУслуг.Упаковка = ЗНАЧЕНИЕ(Справочник.УпаковкиНоменклатуры.ПустаяСсылка) ТОГДА
	|			1
	|		ИНАЧЕ
	|			ПоступлениеТоваровУслуг.Упаковка.Коэффициент
	|		КОНЕЦ КАК Коэффициент,
	|
	|		ВЫБОР КОГДА ПоступлениеТоваровУслуг.Упаковка = ЗНАЧЕНИЕ(Справочник.УпаковкиНоменклатуры.ПустаяСсылка) ТОГДА
	|			ПоступлениеТоваровУслуг.Номенклатура.ЕдиницаИзмерения
	|		ИНАЧЕ
	|			ПоступлениеТоваровУслуг.Упаковка.ЕдиницаИзмерения
	|		КОНЕЦ КАК ЕдиницаИзмерения,
	|
	|		ПоступлениеТоваровУслуг.ПроцентРучнойСкидки         КАК ПроцентСкидки,
	|		ПоступлениеТоваровУслуг.Характеристика              КАК Характеристика,
	|		ПоступлениеТоваровУслуг.Упаковка                    КАК Упаковка,
	|		ПоступлениеТоваровУслуг.СтавкаНДС                   КАК СтавкаНДС,
	|		ПоступлениеТоваровУслуг.Цена                        КАК Цена,
	|		ПоступлениеТоваровУслуг.КоличествоУпаковок          КАК Количество,
	|		ПоступлениеТоваровУслуг.Сумма                       КАК Сумма,
	|		ПоступлениеТоваровУслуг.СуммаРучнойСкидки           КАК СуммаСкидки,
	|		ПоступлениеТоваровУслуг.Сумма +
	|		ПоступлениеТоваровУслуг.СуммаРучнойСкидки           КАК СуммаБезСкидки,
	|		ПоступлениеТоваровУслуг.СуммаНДС                    КАК СуммаНДС,
	|		ПоступлениеТоваровУслуг.НомерСтроки                 КАК НомерСтроки
	|	ИЗ
	|		Документ.ПоступлениеТоваровУслуг.Товары КАК ПоступлениеТоваровУслуг
	|	ГДЕ
	|		ПоступлениеТоваровУслуг.Ссылка В (&МассивДокументов)
	|		И ПоступлениеТоваровУслуг.Номенклатура.ТипНоменклатуры В (ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Товар),ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара))
	|	
	|	) КАК ВложенныйЗапрос
	|
	|УПОРЯДОЧИТЬ ПО
	|	ВложенныйЗапрос.Ссылка,
	|	НомерСтроки
	|
	|ИТОГИ
	|	СУММА(СуммаСкидки)
	|ПО
	|	Ссылка
	|");

	Запрос.УстановитьПараметр("МассивДокументов", 				МассивОбъектов);

	ТабличныйДокумент = Новый ТабличныйДокумент;
	ТабличныйДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_ПоступлениеТоваровУслуг_Накладная";
	
	ТабличныйДокумент = Новый ТабличныйДокумент;
	
	МассивРезультатов 			= Запрос.ВыполнитьПакет();
	ДанныеПечати			= МассивРезультатов[0].Выбрать();
	ВыборкаПоДокументам 	= МассивРезультатов[1].Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	ПервыйДокумент = Истина;
	
	Пока ДанныеПечати.Следующий() Цикл
		
		// Найдем в выборке товары по текущему документу
		СтруктураПоиска = Новый Структура("Ссылка", ДанныеПечати.Ссылка);
		НайденСледующий = ВыборкаПоДокументам.НайтиСледующий(СтруктураПоиска);
		
		// Если в накладной только услуги - перейдем к следующему документу
		
		Если НайденСледующий Тогда
			ВыборкаПоТоварам = ВыборкаПоДокументам.Выбрать();
			ЗаголовокСкидки = ФормированиеПечатныхФорм.НужноВыводитьСкидки(ВыборкаПоТоварам, ИспользоватьРучныеСкидки);
			ЕстьСкидки = ЗаголовокСкидки.ЕстьСкидки;
			ВыборкаПоТоварам.Сбросить();
		Иначе
			Продолжить;
		КонецЕсли;
		
		// Макет необходимо получать для каждого документа, т.к. размеры колонок изменяются динамически
		Макет = УправлениеПечатью.ПолучитьМакет("Документ.ПоступлениеТоваровУслуг.ПФ_MXL_ПоступлениеТоваров");
		
		Если Не ПервыйДокумент Тогда
			ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		
		ПервыйДокумент    = Ложь;
		НомерСтрокиНачало = ТабличныйДокумент.ВысотаТаблицы + 1;
		
		// Выводим шапку накладной
		
		ОбластьМакета = Макет.ПолучитьОбласть("Заголовок");
		ШтрихкодированиеПечатныхФорм.ВывестиШтрихкодВТабличныйДокумент(ТабличныйДокумент, Макет, ОбластьМакета, ДанныеПечати.Ссылка);
		
		ТекстЗаголовка = ОбщегоНазначенияУТКлиентСервер.СформироватьЗаголовокДокумента(ДанныеПечати, НСтр("ru='Поступление товаров'"));
		
		ОбластьМакета.Параметры.ТекстЗаголовка = ТекстЗаголовка;
		ТабличныйДокумент.Вывести(ОбластьМакета);
		
		ОбластьМакета                                   = Макет.ПолучитьОбласть("Поставщик");
		ПредставлениеПоставщика                         = ФормированиеПечатныхФорм.ОписаниеОрганизации(ФормированиеПечатныхФорм.СведенияОЮрФизЛице(ДанныеПечати.Поставщик, ДанныеПечати.Дата), "ПолноеНаименование");
		ОбластьМакета.Параметры.ПредставлениеПоставщика = ПредставлениеПоставщика;
		ОбластьМакета.Параметры.Поставщик               = ДанныеПечати.Поставщик;
		ТабличныйДокумент.Вывести(ОбластьМакета);
		
		ОбластьМакета                                   = Макет.ПолучитьОбласть("Покупатель");
		ПредставлениеПолучателя                         = ФормированиеПечатныхФорм.ОписаниеОрганизации(ФормированиеПечатныхФорм.СведенияОЮрФизЛице(ДанныеПечати.Организация, ДанныеПечати.Дата), "ПолноеНаименование");
		ОбластьМакета.Параметры.ПредставлениеПолучателя = ПредставлениеПолучателя;
		ОбластьМакета.Параметры.Получатель              = ДанныеПечати.Организация;
		ТабличныйДокумент.Вывести(ОбластьМакета);
		
		// Выводим заголовок таблицы Товары
		
		Если ЕстьСкидки Тогда
			ОбластьКолонкаТовар = Макет.Область("ТоварСоСкидкой");
		Иначе
			ОбластьКолонкаТовар = Макет.Область("Товар");
		КонецЕсли;
			
		Если Не ВыводитьКоды Тогда
			
			Если ЕстьСкидки Тогда
				ОбластьКолонкаТовар.ШиринаКолонки = ОбластьКолонкаТовар.ШиринаКолонки * 1.35;
			Иначе
				ОбластьКолонкаТовар.ШиринаКолонки = ОбластьКолонкаТовар.ШиринаКолонки * 1.2;
			КонецЕсли;
			
		КонецЕсли;
		
		Если ЕстьСкидки Тогда
			
			ОбластьНомера  = Макет.ПолучитьОбласть("ШапкаТаблицыСоСкидкой|НомерСтроки");
			ОбластьКодов   = Макет.ПолучитьОбласть("ШапкаТаблицыСоСкидкой|КолонкаКодов");
			ОбластьТовар   = Макет.ПолучитьОбласть("ШапкаТаблицыСоСкидкой|ТоварСоСкидкой");
			ОбластьДанных  = Макет.ПолучитьОбласть("ШапкаТаблицыСоСкидкой|ДанныеСоСкидкой");
			
			ОбластьДанных.Параметры.Скидка = ЗаголовокСкидки.Скидка;
			ОбластьДанных.Параметры.СуммаБезСкидки = ЗаголовокСкидки.СуммаСкидки;
			
		Иначе
			
			ОбластьНомера  = Макет.ПолучитьОбласть("ШапкаТаблицы|НомерСтроки");
			ОбластьКодов   = Макет.ПолучитьОбласть("ШапкаТаблицы|КолонкаКодов");
			ОбластьТовар   = Макет.ПолучитьОбласть("ШапкаТаблицы|Товар");
			ОбластьДанных  = Макет.ПолучитьОбласть("ШапкаТаблицы|Данные");
			
		КонецЕсли;
			
		ТабличныйДокумент.Вывести(ОбластьНомера);
			
		Если ВыводитьКоды Тогда
			ОбластьКодов.Параметры.ИмяКолонкиКодов = КолонкаКодов;
			ТабличныйДокумент.Присоединить(ОбластьКодов);
		КонецЕсли;
			
		ТабличныйДокумент.Присоединить(ОбластьТовар);
		ТабличныйДокумент.Присоединить(ОбластьДанных);
		
		Если ЕстьСкидки Тогда
			
			ОбластьНомера  = Макет.ПолучитьОбласть("СтрокаТаблицыСоСкидкой|НомерСтроки");
			ОбластьКодов   = Макет.ПолучитьОбласть("СтрокаТаблицыСоСкидкой|КолонкаКодов");
			ОбластьТовар   = Макет.ПолучитьОбласть("СтрокаТаблицыСоСкидкой|ТоварСоСкидкой");
			ОбластьДанных  = Макет.ПолучитьОбласть("СтрокаТаблицыСоСкидкой|ДанныеСоСкидкой");
			
		Иначе
			
			ОбластьНомера  = Макет.ПолучитьОбласть("СтрокаТаблицы|НомерСтроки");
			ОбластьКодов   = Макет.ПолучитьОбласть("СтрокаТаблицы|КолонкаКодов");
			ОбластьТовар   = Макет.ПолучитьОбласть("СтрокаТаблицы|Товар");
			ОбластьДанных  = Макет.ПолучитьОбласть("СтрокаТаблицы|Данные");
			
		КонецЕсли;
			
		Сумма          = 0;
		СуммаНДС       = 0;
		ВсегоСкидок    = 0;
		НомерСтроки    = 0;
		ВсегоБезСкидок = 0;
		
		// Выводим строки таблицы Товары
			
		Пока ВыборкаПоТоварам.Следующий() Цикл
			
			НомерСтроки = НомерСтроки + 1;
			
			ОбластьНомера.Параметры.НомерСтроки = НомерСтроки;
			ТабличныйДокумент.Вывести(ОбластьНомера);
			
			Если ВыводитьКоды Тогда
				
				ОбластьКодов.Параметры.Артикул = ВыборкаПоТоварам[КолонкаКодов];
				ТабличныйДокумент.Присоединить(ОбластьКодов);
				
			КонецЕсли;
			
			ОбластьТовар.Параметры.Заполнить(ВыборкаПоТоварам);
			
			ОбластьТовар.Параметры.Товар = НоменклатураКлиентСервер.ПредставлениеНоменклатурыДляПечати(
				ВыборкаПоТоварам.ТоварНаименованиеПолное,
				ВыборкаПоТоварам.Характеристика,
				,
				,
				,
				ВыборкаПоТоварам.ЭтоВозвратнаяТара);
				
			ТабличныйДокумент.Присоединить(ОбластьТовар);

			ОбластьДанных.Параметры.Заполнить(ВыборкаПоТоварам);
			Если ЗаголовокСкидки.ЕстьСкидки Тогда
				ОбластьДанных.Параметры.СуммаСкидки = ?(ЗаголовокСкидки.ТолькоНаценка,- ВыборкаПоТоварам.СуммаСкидки,ВыборкаПоТоварам.СуммаСкидки);
			КонецЕсли; 

			ТабличныйДокумент.Присоединить(ОбластьДанных);
			
			Сумма          = Сумма          + ВыборкаПоТоварам.Сумма;
			СуммаНДС       = СуммаНДС       + ВыборкаПоТоварам.СуммаНДС;
			
			Если ЕстьСкидки Тогда
				ВсегоСкидок    = ВсегоСкидок    + ВыборкаПоТоварам.СуммаСкидки;
				ВсегоБезСкидок = ВсегоБезСкидок + ВыборкаПоТоварам.СуммаБезСкидки;
			КонецЕсли;
			
		КонецЦикла;
		
		// Выводим подвал
		
		Если ЕстьСкидки Тогда
			
			ОбластьНомера  = Макет.ПолучитьОбласть("ПодвалТаблицыСоСкидкой|НомерСтроки");
			ОбластьКодов   = Макет.ПолучитьОбласть("ПодвалТаблицыСоСкидкой|КолонкаКодов");
			ОбластьТовар   = Макет.ПолучитьОбласть("ПодвалТаблицыСоСкидкой|ТоварСоСкидкой");
			ОбластьДанных  = Макет.ПолучитьОбласть("ПодвалТаблицыСоСкидкой|ДанныеСоСкидкой");
			
		Иначе
			
			ОбластьНомера  = Макет.ПолучитьОбласть("ПодвалТаблицы|НомерСтроки");
			ОбластьКодов   = Макет.ПолучитьОбласть("ПодвалТаблицы|КолонкаКодов");
			ОбластьТовар   = Макет.ПолучитьОбласть("ПодвалТаблицы|Товар");
			ОбластьДанных  = Макет.ПолучитьОбласть("ПодвалТаблицы|Данные");
			
		КонецЕсли;
		
		ТабличныйДокумент.Вывести(ОбластьНомера);
		
		Если ВыводитьКоды Тогда
			ТабличныйДокумент.Присоединить(ОбластьКодов);
		КонецЕсли;
		
		ТабличныйДокумент.Присоединить(ОбластьТовар);
		
		Если ЕстьСкидки Тогда
			
			ОбластьДанных.Параметры.ВсегоСкидок    = ?(ЗаголовокСкидки.ТолькоНаценка,-ВсегоСкидок, ВсегоСкидок);
			ОбластьДанных.Параметры.ВсегоБезСкидок = ВсегоБезСкидок;
			
		КонецЕсли;
		
		ОбластьДанных.Параметры.Всего = ФормированиеПечатныхФорм.ФорматСумм(Сумма);
		ТабличныйДокумент.Присоединить(ОбластьДанных);
		
		// Выводим ИтогоНДС
		
		Если ДанныеПечати.УчитыватьНДС Тогда
			
			Если ЕстьСкидки Тогда
				
				ОбластьНомера  = Макет.ПолучитьОбласть("ПодвалТаблицыНДССоСкидкой|НомерСтроки");
				ОбластьКодов   = Макет.ПолучитьОбласть("ПодвалТаблицыНДССоСкидкой|КолонкаКодов");
				ОбластьТовар   = Макет.ПолучитьОбласть("ПодвалТаблицыНДССоСкидкой|ТоварСоСкидкой");
				ОбластьДанных  = Макет.ПолучитьОбласть("ПодвалТаблицыНДССоСкидкой|ДанныеСоСкидкой");
				
			Иначе
				
				ОбластьНомера  = Макет.ПолучитьОбласть("ПодвалТаблицыНДС|НомерСтроки");
				ОбластьКодов   = Макет.ПолучитьОбласть("ПодвалТаблицыНДС|КолонкаКодов");
				ОбластьТовар   = Макет.ПолучитьОбласть("ПодвалТаблицыНДС|Товар");
				ОбластьДанных  = Макет.ПолучитьОбласть("ПодвалТаблицыНДС|Данные");
				
			КонецЕсли;
			
			ТабличныйДокумент.Вывести(ОбластьНомера);
			
			Если ВыводитьКоды Тогда
				ТабличныйДокумент.Присоединить(ОбластьКодов);
			КонецЕсли;
			
			ТабличныйДокумент.Присоединить(ОбластьТовар);
			
			ОбластьДанных.Параметры.ВсегоНДС = ФормированиеПечатныхФорм.ФорматСумм(СуммаНДС);
			ОбластьДанных.Параметры.НДС = ?(ДанныеПечати.ЦенаВключаетНДС, НСтр("ru='В том числе НДС:'"), НСтр("ru='Сумма НДС:'"));
			ТабличныйДокумент.Присоединить(ОбластьДанных);
			
		КонецЕсли;
		
		// Выводим Сумму прописью
		
		ОбластьМакета = Макет.ПолучитьОбласть("СуммаПрописью");
		СуммаКПрописи = Сумма + ?(ДанныеПечати.ЦенаВключаетНДС, 0, СуммаНДС);
		
		ИтоговаяСтрока = НСтр("ru='Всего наименований %КоличествоНаименований%, на сумму %СуммаДокумента% '");
		ИтоговаяСтрока = СтрЗаменить(ИтоговаяСтрока, "%КоличествоНаименований%", ВыборкаПоТоварам.Количество());
		ИтоговаяСтрока = СтрЗаменить(ИтоговаяСтрока, "%СуммаДокумента%", ФормированиеПечатныхФорм.ФорматСумм(СуммаКПрописи, ДанныеПечати.Валюта));

		ОбластьМакета.Параметры.ИтоговаяСтрока = ИтоговаяСтрока;
		ОбластьМакета.Параметры.СуммаПрописью  = РаботаСКурсамиВалют.СформироватьСуммуПрописью(СуммаКПрописи, ДанныеПечати.Валюта);
		
		ТабличныйДокумент.Вывести(ОбластьМакета);
		
		// Выводим подписи
		ОбластьМакета = Макет.ПолучитьОбласть("Подписи");
		
		Если ЗначениеЗаполнено(ДанныеПечати.ПолучениеПроизвел) Тогда
			ОбластьМакета.Параметры.ПолучениеПроизвел = ФизическиеЛица.ФамилияИнициалыФизЛица(ДанныеПечати.ПолучениеПроизвел);
		КонецЕсли;
		
		ТабличныйДокумент.Вывести(ОбластьМакета);
		
		УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабличныйДокумент, НомерСтрокиНачало, ОбъектыПечати, ДанныеПечати.Ссылка);
		
	КонецЦикла;
	
	ТабличныйДокумент.АвтоМасштаб = Истина;

	Если ПривилегированныйРежим() Тогда
		УстановитьПривилегированныйРежим(Ложь);
	КонецЕсли;
	
	Возврат ТабличныйДокумент;

КонецФункции

// Функция помещает необходимые данные в структуру. Структура помещается во временное хранилище
//
// Возвращаемое значение:
//	Адрес   - адрес структуры данных во временном хранилище
//
Функция ПолучитьДанныеДляПечатиЭтикеток(МассивДокументов) Экспорт

	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ПоступлениеТоваровУслугТовары.Номенклатура   КАК Номенклатура,
	|	ПоступлениеТоваровУслугТовары.Характеристика КАК Характеристика,
	|
	|	ВЫБОР КОГДА ПоступлениеТоваровУслугТовары.Ссылка.Склад.ТипСклада = ЗНАЧЕНИЕ(Перечисление.ТипыСкладов.РозничныйМагазин) ТОГДА
	|		ЦеныНоменклатуры.Упаковка
	|	ИНАЧЕ
	|		ПоступлениеТоваровУслугТовары.Упаковка
	|	КОНЕЦ КАК Упаковка,
	|
	|	МИНИМУМ(ПоступлениеТоваровУслугТовары.НомерСтроки) КАК Порядок,
	|	СУММА(
	|		ВЫБОР КОГДА ПоступлениеТоваровУслугТовары.Ссылка.Склад.ТипСклада = ЗНАЧЕНИЕ(Перечисление.ТипыСкладов.РозничныйМагазин) ТОГДА
	|			ПоступлениеТоваровУслугТовары.КоличествоУпаковок * (ЕСТЬNULL(ПоступлениеТоваровУслугТовары.Упаковка.Коэффициент, 1) / ЕСТЬNULL(ЦеныНоменклатуры.Упаковка.Коэффициент, 1))
	|		ИНАЧЕ
	|			ПоступлениеТоваровУслугТовары.КоличествоУпаковок
	|		КОНЕЦ) КАК Количество
	|ИЗ
	|	Документ.ПоступлениеТоваровУслуг.Товары КАК ПоступлениеТоваровУслугТовары
	|	
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЦеныНоменклатуры.СрезПоследних КАК ЦеныНоменклатуры
	|		ПО ЦеныНоменклатуры.Номенклатура   = ПоступлениеТоваровУслугТовары.Номенклатура
	|		 И ЦеныНоменклатуры.Характеристика = ПоступлениеТоваровУслугТовары.Характеристика
	|		 И ЦеныНоменклатуры.ВидЦены        = ПоступлениеТоваровУслугТовары.Ссылка.Склад.РозничныйВидЦены
	|	
	|ГДЕ
	|	ПоступлениеТоваровУслугТовары.Ссылка В(&МассивДокументов)
	|
	|СГРУППИРОВАТЬ ПО
	|	ПоступлениеТоваровУслугТовары.Номенклатура,
	|	ПоступлениеТоваровУслугТовары.Характеристика,
	|	ВЫБОР КОГДА ПоступлениеТоваровУслугТовары.Ссылка.Склад.ТипСклада = ЗНАЧЕНИЕ(Перечисление.ТипыСкладов.РозничныйМагазин) ТОГДА
	|		ЦеныНоменклатуры.Упаковка
	|	ИНАЧЕ
	|		ПоступлениеТоваровУслугТовары.Упаковка
	|	КОНЕЦ
	|
	|УПОРЯДОЧИТЬ ПО
	|	Порядок
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ПоступлениеТоваровУслуг.Организация            КАК Организация,
	|	ПоступлениеТоваровУслуг.Склад                  КАК Склад,
	|	ПоступлениеТоваровУслуг.Склад.РозничныйВидЦены КАК ВидЦены
	|ИЗ
	|	Документ.ПоступлениеТоваровУслуг КАК ПоступлениеТоваровУслуг
	|ГДЕ
	|	ПоступлениеТоваровУслуг.Ссылка В(&МассивДокументов)";
	
	Запрос.УстановитьПараметр("МассивДокументов", МассивДокументов);
	
	МассивРезультатов = Запрос.ВыполнитьПакет();
	
	ТаблицаРеквизитыДокументов = МассивРезультатов[1].Выгрузить();
	МассивОрганизаций = ОбщегоНазначенияУТ.СвернутьТаблицуЗначенийПоРеквизиту(ТаблицаРеквизитыДокументов, "Организация").ВыгрузитьКолонку(0);
	МассивСкладов     = ОбщегоНазначенияУТ.СвернутьТаблицуЗначенийПоРеквизиту(ТаблицаРеквизитыДокументов, "Склад").ВыгрузитьКолонку(0);
	МассивВидовЦен    = ОбщегоНазначенияУТ.СвернутьТаблицуЗначенийПоРеквизиту(ТаблицаРеквизитыДокументов, "ВидЦены").ВыгрузитьКолонку(0);
	
	// Подготовка структуры действий для обработки печати ценников и этикеток
	СтруктураДействий = Новый Структура;
	СтруктураДействий.Вставить("ЗаполнитьОрганизацию", ?(МассивОрганизаций.Количество() = 1, МассивОрганизаций[0], Неопределено));
	СтруктураДействий.Вставить("ЗаполнитьСклад",       ?(МассивСкладов.Количество() = 1,     МассивСкладов[0],     МассивСкладов));
	СтруктураДействий.Вставить("ЗаполнитьВидЦены",     ?(МассивВидовЦен.Количество() = 1,    МассивВидовЦен[0],    Неопределено));
	СтруктураДействий.Вставить("ПоказыватьКолонкуКоличествоВДокументе", Истина);
	СтруктураДействий.Вставить("УстановитьРежимПечатиИзДокумента");
	СтруктураДействий.Вставить("УстановитьРежим", "ПечатьЭтикеток");
	СтруктураДействий.Вставить("ЗаполнитьКоличествоЭтикетокПоДокументу");
	СтруктураДействий.Вставить("ЗаполнитьТаблицуТоваров");
	
	// Подготовка данных для заполенения табличной части обработки печати ценников и этикеток
	СтруктураРезультат = Новый Структура;
	СтруктураРезультат.Вставить("Товары", МассивРезультатов[0].Выгрузить());
	СтруктураРезультат.Вставить("СтруктураДействий", СтруктураДействий);
	
	Возврат ПоместитьВоВременноеХранилище(СтруктураРезультат);
	
КонецФункции

// Функция помещает необходимые данные в структуру. Структура помещается во временное хранилище.
//
// Возвращаемое значение:
//	Адрес - адрес структуры данных во временном хранилище
//
Функция ПолучитьДанныеДляПечатиЦенников(МассивДокументов) Экспорт

	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ПоступлениеТоваровУслугТовары.Номенклатура   КАК Номенклатура,
	|	ПоступлениеТоваровУслугТовары.Характеристика КАК Характеристика,
	|
	|	ВЫБОР КОГДА ПоступлениеТоваровУслугТовары.Ссылка.Склад.ТипСклада = ЗНАЧЕНИЕ(Перечисление.ТипыСкладов.РозничныйМагазин) ТОГДА
	|		ЦеныНоменклатуры.Упаковка
	|	ИНАЧЕ
	|		ПоступлениеТоваровУслугТовары.Упаковка
	|	КОНЕЦ КАК Упаковка,
	|
	|	МИНИМУМ(ПоступлениеТоваровУслугТовары.НомерСтроки) КАК Порядок,
	|	СУММА(
	|		ВЫБОР КОГДА ПоступлениеТоваровУслугТовары.Ссылка.Склад.ТипСклада = ЗНАЧЕНИЕ(Перечисление.ТипыСкладов.РозничныйМагазин) ТОГДА
	|			ПоступлениеТоваровУслугТовары.КоличествоУпаковок * (ЕСТЬNULL(ПоступлениеТоваровУслугТовары.Упаковка.Коэффициент, 1) / ЕСТЬNULL(ЦеныНоменклатуры.Упаковка.Коэффициент, 1))
	|		ИНАЧЕ
	|			ПоступлениеТоваровУслугТовары.КоличествоУпаковок
	|		КОНЕЦ) КАК Количество
	|ИЗ
	|	Документ.ПоступлениеТоваровУслуг.Товары КАК ПоступлениеТоваровУслугТовары
	|	
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЦеныНоменклатуры.СрезПоследних КАК ЦеныНоменклатуры
	|		ПО ЦеныНоменклатуры.Номенклатура   = ПоступлениеТоваровУслугТовары.Номенклатура
	|		 И ЦеныНоменклатуры.Характеристика = ПоступлениеТоваровУслугТовары.Характеристика
	|		 И ЦеныНоменклатуры.ВидЦены        = ПоступлениеТоваровУслугТовары.Ссылка.Склад.РозничныйВидЦены
	|	
	|ГДЕ
	|	ПоступлениеТоваровУслугТовары.Ссылка В(&МассивДокументов)
	|
	|СГРУППИРОВАТЬ ПО
	|	ПоступлениеТоваровУслугТовары.Номенклатура,
	|	ПоступлениеТоваровУслугТовары.Характеристика,
	|	ВЫБОР КОГДА ПоступлениеТоваровУслугТовары.Ссылка.Склад.ТипСклада = ЗНАЧЕНИЕ(Перечисление.ТипыСкладов.РозничныйМагазин) ТОГДА
	|		ЦеныНоменклатуры.Упаковка
	|	ИНАЧЕ
	|		ПоступлениеТоваровУслугТовары.Упаковка
	|	КОНЕЦ
	|
	|УПОРЯДОЧИТЬ ПО
	|	Порядок
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ПоступлениеТоваровУслуг.Организация            КАК Организация,
	|	ПоступлениеТоваровУслуг.Склад                  КАК Склад,
	|	ПоступлениеТоваровУслуг.Склад.РозничныйВидЦены КАК ВидЦены
	|ИЗ
	|	Документ.ПоступлениеТоваровУслуг КАК ПоступлениеТоваровУслуг
	|ГДЕ
	|	ПоступлениеТоваровУслуг.Ссылка В(&МассивДокументов)";
	
	Запрос.УстановитьПараметр("МассивДокументов", МассивДокументов);
	
	МассивРезультатов = Запрос.ВыполнитьПакет();
	
	
	ТаблицаРеквизитыДокументов = МассивРезультатов[1].Выгрузить();
	МассивОрганизаций = ОбщегоНазначенияУТ.СвернутьТаблицуЗначенийПоРеквизиту(ТаблицаРеквизитыДокументов, "Организация").ВыгрузитьКолонку(0);
	МассивСкладов     = ОбщегоНазначенияУТ.СвернутьТаблицуЗначенийПоРеквизиту(ТаблицаРеквизитыДокументов, "Склад").ВыгрузитьКолонку(0);
	МассивВидовЦен    = ОбщегоНазначенияУТ.СвернутьТаблицуЗначенийПоРеквизиту(ТаблицаРеквизитыДокументов, "ВидЦены").ВыгрузитьКолонку(0);
	
	
	// Подготовка структуры действий для обработки печати ценников и этикеток
	СтруктураДействий = Новый Структура;
	СтруктураДействий.Вставить("ЗаполнитьОрганизацию", ?(МассивОрганизаций.Количество() = 1, МассивОрганизаций[0], Неопределено));
	СтруктураДействий.Вставить("ЗаполнитьСклад",       ?(МассивСкладов.Количество() = 1,     МассивСкладов[0],     МассивСкладов));
	СтруктураДействий.Вставить("ЗаполнитьВидЦены",     ?(МассивВидовЦен.Количество() = 1,    МассивВидовЦен[0],    Неопределено));
	СтруктураДействий.Вставить("ПоказыватьКолонкуКоличествоВДокументе", Истина);
	СтруктураДействий.Вставить("УстановитьРежимПечатиИзДокумента");
	СтруктураДействий.Вставить("УстановитьРежим", "ПечатьЦенников");
	СтруктураДействий.Вставить("ЗаполнитьКоличествоЦенниковПоДокументу");
	СтруктураДействий.Вставить("ЗаполнитьТаблицуТоваров");
	
	// Подготовка данных для заполенения табличной части обработки печати ценников и этикеток
	СтруктураРезультат = Новый Структура;
	СтруктураРезультат.Вставить("Товары", МассивРезультатов[0].Выгрузить());
	СтруктураРезультат.Вставить("СтруктураДействий", СтруктураДействий);
	
	Возврат ПоместитьВоВременноеХранилище(СтруктураРезультат);
	
КонецФункции

Функция СформироватьПечатнуюФормуПриходнаяНакладная(МассивОбъектов, ОбъектыПечати)
	
	УстановитьПривилегированныйРежим(Истина);
	
	ТабличныйДокумент = Новый ТабличныйДокумент;
	ТабличныйДокумент.АвтоМасштаб = Истина;
	ТабличныйДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_ПоступлениеТоваровУслуг_ПриходнаяНакладная";
	
	КолонкаКодов = ФормированиеПечатныхФорм.ИмяДополнительнойКолонки();
	ИспользованиеУпаковок = ПолучитьФункциональнуюОпцию("ИспользоватьУпаковкиНоменклатуры");
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Документы.Ссылка КАК Ссылка,
	|	Документы.Организация КАК Организация,
	|	Документы.Контрагент КАК Контрагент,
	|	Документы.Номер КАК Номер,
	|	Документы.Дата КАК Дата,
	|	Документы.Организация.Префикс КАК Префикс
	|ИЗ
	|	Документ.ПоступлениеТоваровУслуг КАК Документы
	|ГДЕ
	|	Документы.Ссылка В(&МассивОбъектов)
	|
	|УПОРЯДОЧИТЬ ПО
	|	Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Товары.Ссылка КАК Ссылка,
	|	Товары.Склад КАК Склад,
	|	ВЫБОР
	|		КОГДА Товары.Упаковка = ЗНАЧЕНИЕ(Справочник.УпаковкиНоменклатуры.ПустаяСсылка)
	|			ТОГДА ПРЕДСТАВЛЕНИЕ(Товары.Номенклатура.ЕдиницаИзмерения)
	|		ИНАЧЕ ПРЕДСТАВЛЕНИЕ(Товары.Упаковка.ЕдиницаИзмерения)
	|	КОНЕЦ КАК ПредставлениеЕдининицыИзмеренияУпаковки,
	|	ПРЕДСТАВЛЕНИЕ(Товары.Номенклатура.ЕдиницаИзмерения) КАК ПредставлениеБазовойЕдиницыИзмерения,
	|	Товары.КоличествоУпаковок КАК КоличествоУпаковок,
	|	Товары.Количество КАК Количество,
	|	Товары.Номенклатура.Код КАК Код,
	|	Товары.Номенклатура.Артикул КАК Артикул,
	|	Товары.Номенклатура.НаименованиеПолное КАК Номенклатура,
	|	Товары.Характеристика.НаименованиеПолное КАК Характеристика,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(Товары.Упаковка.Коэффициент, 1) = 1
	|			ТОГДА НЕОПРЕДЕЛЕНО
	|		ИНАЧЕ Товары.Упаковка.Наименование
	|	КОНЕЦ КАК Упаковка,
	|	ВЫБОР
	|		КОГДА
	|			Товары.Ссылка.ВернутьМногооборотнуюТару
	|			И Товары.Номенклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара)
	|		ТОГДА
	|			ИСТИНА
	|		ИНАЧЕ
	|			ЛОЖЬ
	|	КОНЕЦ КАК ЭтоВозвратнаяТара
	|ИЗ
	|	Документ.ПоступлениеТоваровУслуг.Товары КАК Товары
	|ГДЕ
	|	Товары.Ссылка В(&МассивОбъектов)
	|	И Товары.Номенклатура.ТипНоменклатуры В (ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Товар),ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара))
	|
	|УПОРЯДОЧИТЬ ПО
	|	Ссылка,
	|	Склад,
	|	Товары.НомерСтроки
	|ИТОГИ ПО
	|	Ссылка,
	|	Склад");
	
	Запрос.УстановитьПараметр("МассивОбъектов", МассивОбъектов);
	
	Макет = УправлениеПечатью.ПолучитьМакет("Документ.ПоступлениеТоваровУслуг.ПФ_MXL_ПриходнаяНакладная");
	
	Смещать = ТипСмещенияТабличногоДокумента.ПоВертикали;
	ШиринаУдаленныхКолонок = 0;
	Если КолонкаКодов <> "Артикул" Тогда
		ШиринаУдаленныхКолонок = ШиринаУдаленныхКолонок + Макет.Область("Артикул").ШиринаКолонки;
		Макет.УдалитьОбласть(Макет.Область("Артикул"), Смещать);
	КонецЕсли;
	Если КолонкаКодов<>"Код" Тогда
		ШиринаУдаленныхКолонок = ШиринаУдаленныхКолонок + Макет.Область("Код").ШиринаКолонки;
		Макет.УдалитьОбласть(Макет.Область("Код"), Смещать);
	КонецЕсли;
	
	Если Не ИспользованиеУпаковок Тогда
		ШиринаУдаленныхКолонок = ШиринаУдаленныхКолонок + Макет.Область("УпаковкаКоличество").ШиринаКолонки;
		Макет.УдалитьОбласть(Макет.Область("УпаковкаКоличество"), Смещать);
		ШиринаУдаленныхКолонок = ШиринаУдаленныхКолонок + Макет.Область("УпаковкаПредставление").ШиринаКолонки;
		Макет.УдалитьОбласть(Макет.Область("УпаковкаПредставление"), Смещать);
	КонецЕсли;
	ОбластьПервойКолонкиТоваров = Макет.Область("ПерваяКолонкаТовара");
	ОбластьПервойКолонкиТоваров.ШиринаКолонки = ОбластьПервойКолонкиТоваров.ШиринаКолонки + ШиринаУдаленныхКолонок;
	
	ПакетЗапросов = Запрос.ВыполнитьПакет();
	ДанныеПечати = ПакетЗапросов[0].Выбрать();
	ВыборкаПоДокументам = ПакетЗапросов[1].Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	// Создание массива для проверки: какие из докуметов не попали в выборку
	МассивПроверки = Новый Массив;
	Для Каждого Ссылка Из МассивОбъектов Цикл
		МассивПроверки.Добавить(Ссылка);
	КонецЦикла;
	
	РеквизитыДокумента = Новый Структура("Номер, Дата, Префикс, Представление, ПредставлениеРаспоряжения, ПредставлениеОрганизации, ПредставлениеПартнера");
	РеквизитыДокумента.Вставить("ТекстЗаголовка", НСтр("ru='Приходная накладная'"));
	ПервыйДокумент = Истина;
	
	Пока ДанныеПечати.Следующий() Цикл
		
		Если НЕ ВыборкаПоДокументам.НайтиСледующий(Новый Структура("Ссылка", ДанныеПечати.Ссылка)) Тогда
			Продолжить;
		КонецЕсли;
		
		МассивПроверки.Удалить(МассивПроверки.Найти(ДанныеПечати.Ссылка));
		
		НомерСтрокиНачало = ТабличныйДокумент.ВысотаТаблицы + 1;
		
		ЗаполнитьЗначенияСвойств(РеквизитыДокумента, ДанныеПечати);
		РеквизитыДокумента.ПредставлениеРаспоряжения = ОбщегоНазначенияУТКлиентСервер.СформироватьЗаголовокДокумента(РеквизитыДокумента, НСтр("ru='Поступление товаров'"));
		РеквизитыДокумента.ПредставлениеОрганизации = ФормированиеПечатныхФорм.ОписаниеОрганизации(
			ФормированиеПечатныхФорм.СведенияОЮрФизЛице(
				ДанныеПечати.Организация,
				ДанныеПечати.Дата
			),
			"ПолноеНаименование"
		);
		РеквизитыДокумента.ПредставлениеПартнера = ФормированиеПечатныхФорм.ОписаниеОрганизации(
			ФормированиеПечатныхФорм.СведенияОЮрФизЛице(
				ДанныеПечати.Контрагент,
				ДанныеПечати.Дата
			),
			"ПолноеНаименование"
		);
		
		ВыборкаПоСкладам = ВыборкаПоДокументам.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		Пока ВыборкаПоСкладам.Следующий() Цикл
			
			Если Не ПервыйДокумент Тогда
				ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
			КонецЕсли;
			
			ПервыйДокумент = Ложь;
			
			Область = Макет.ПолучитьОбласть("Заголовок");
			Область.Параметры.Заполнить(РеквизитыДокумента);
			ШтрихкодированиеПечатныхФорм.ВывестиШтрихкодВТабличныйДокумент(ТабличныйДокумент, Макет, Область, ДанныеПечати.Ссылка);
			ТабличныйДокумент.Вывести(Область);
			
			Область = Макет.ПолучитьОбласть("Шапка");
			Область.Параметры.Заполнить(РеквизитыДокумента);
			Область.Параметры.ПредставлениеСклада = ВыборкаПоСкладам.Склад;
			ТабличныйДокумент.Вывести(Область);
			
			Область = Макет.ПолучитьОбласть("Поставщик");
			Область.Параметры.Заполнить(РеквизитыДокумента);
			ТабличныйДокумент.Вывести(Область);
			
			Область = Макет.ПолучитьОбласть("Покупатель");
			Область.Параметры.Заполнить(РеквизитыДокумента);
			ТабличныйДокумент.Вывести(Область);
			
			ТабличныйДокумент.Вывести(Макет.ПолучитьОбласть("ШапкаТаблицы"));
			
			СчетСтрок = 1;
			ВыборкаПоТоварам = ВыборкаПоСкладам.Выбрать();
			Пока ВыборкаПоТоварам.Следующий() Цикл
				
				Область = Макет.ПолучитьОбласть("СтрокаТаблицы");
				Область.Параметры.НомерСтроки = СчетСтрок;
				СчетСтрок = СчетСтрок + 1;
				Область.Параметры.Товар = НоменклатураКлиентСервер.ПредставлениеНоменклатурыДляПечати(
					ВыборкаПоТоварам.Номенклатура,
					ВыборкаПоТоварам.Характеристика,
					,
					,
					,
					ВыборкаПоТоварам.ЭтоВозвратнаяТара
					);
				Область.Параметры.Заполнить(ВыборкаПоТоварам);
				ТабличныйДокумент.Вывести(Область);
				
			КонецЦикла;
			
			Область = Макет.ПолучитьОбласть("ПодвалТаблицы");
			ТабличныйДокумент.Вывести(Область);
			
			Область = Макет.ПолучитьОбласть("Подписи");
			ТекстИтоговойСтроки = НСтр("ru = 'Всего наименований %ВсегоНаименований%'");
			ТекстИтоговойСтроки = СтрЗаменить(ТекстИтоговойСтроки,"%ВсегоНаименований%", СчетСтрок-1);
			Область.Параметры.ИтоговаяСтрока = ТекстИтоговойСтроки;
			ТабличныйДокумент.Вывести(Область);
			
		КонецЦикла;
		УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабличныйДокумент, НомерСтрокиНачало, ОбъектыПечати, ДанныеПечати.Ссылка);
		
	КонецЦикла;
	
	Для Каждого Ссылка Из МассивПроверки Цикл
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
			СтрЗаменить(
				НСтр("ru = 'В документе %Ссылка% отсутствуют товары. Печать приходной накладной не требуется.'"),
				"%Ссылка%",
				Ссылка
			),
			Ссылка
		);
	КонецЦикла;
	
	Если ПривилегированныйРежим() Тогда
		УстановитьПривилегированныйРежим(Ложь);
	КонецЕсли;
	
	Возврат ТабличныйДокумент;
	
КонецФункции

Функция СформироватьПечатнуюФормуАктОбОказанииУслуг(МассивОбъектов, ОбъектыПечати)
	
	УстановитьПривилегированныйРежим(Истина);

	ТабличныйДокумент = Новый ТабличныйДокумент;
	
	КолонкаКодов = ФормированиеПечатныхФорм.ИмяДополнительнойКолонки();
	ВыводитьКоды = ЗначениеЗаполнено(КолонкаКодов);
	
	ИспользоватьРучныеСкидки = ПолучитьФункциональнуюОпцию("ИспользоватьРучныеСкидкиВЗакупках");
	
	Запрос = Новый Запрос("
	|////////////////////////////////////////////////////////////////////////////
	|// ЗАПРОС ПО ШАПКЕ
	|
	|ВЫБРАТЬ
	|	ПоступлениеТоваровУслуг.Ссылка              КАК Ссылка,
	|	ПоступлениеТоваровУслуг.Номер               КАК Номер,
	|	ПоступлениеТоваровУслуг.Дата                КАК Дата,
	|	ПоступлениеТоваровУслуг.Партнер             КАК Партнер,
	|	ПоступлениеТоваровУслуг.Контрагент          КАК Контрагент,
	|	ПоступлениеТоваровУслуг.Организация         КАК Организация,
	|	ПоступлениеТоваровУслуг.Организация.Префикс КАК Префикс,
	|	ПоступлениеТоваровУслуг.Валюта              КАК Валюта,
	|	ПоступлениеТоваровУслуг.ЦенаВключаетНДС     КАК ЦенаВключаетНДС,
	|	ВЫБОР
	|		КОГДА
	|			ПоступлениеТоваровУслуг.НалогообложениеНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаОблагаетсяНДС)
	|		ТОГДА
	|			ИСТИНА
	|		ИНАЧЕ
	|			ЛОЖЬ
	|	КОНЕЦ                                                             КАК УчитыватьНДС,
	|	ПоступлениеТоваровУслуг.Склад.ТекущийОтветственный.Наименование   КАК ОтпускПроизвел
	|ИЗ
	|	Документ.ПоступлениеТоваровУслуг КАК ПоступлениеТоваровУслуг
	|
	|ГДЕ
	|	ПоступлениеТоваровУслуг.Ссылка В (&МассивДокументов)
	|
	|УПОРЯДОЧИТЬ ПО
	|	Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////
	|// ЗАПРОС ПО ТАБЛИЧНЫМ ЧАСТЯМ
	|
	|ВЫБРАТЬ
	|	ВложенныйЗапрос.Ссылка                                                     КАК Ссылка,
	|	ВложенныйЗапрос.Номенклатура                                               КАК Номенклатура,
	|	ВложенныйЗапрос.Номенклатура.НаименованиеПолное                            КАК УслугаНаименованиеПолное,
	|	ВложенныйЗапрос.Номенклатура.Код                                           КАК Код,
	|	ВложенныйЗапрос.Номенклатура.Артикул                                       КАК Артикул,
	|	ВложенныйЗапрос.ЕдиницаИзмерения.Наименование                              КАК ЕдиницаЦены,
	|	ВложенныйЗапрос.ЕдиницаИзмерения                                           КАК ЕдиницаИзмерения,
	|	ВложенныйЗапрос.Характеристика.НаименованиеПолное                          КАК Характеристика,
	|	ВЫБОР КОГДА ЕСТЬNULL(ВложенныйЗапрос.Упаковка.Коэффициент, 1) = 1 
	|		ТОГДА НЕОПРЕДЕЛЕНО
	|		ИНАЧЕ ВложенныйЗапрос.Упаковка.Наименование
	|	КОНЕЦ                                                                      КАК Упаковка,
	|	ВложенныйЗапрос.СтавкаНДС                                                  КАК СтавкаНДС,
	|	ВложенныйЗапрос.Цена                                                       КАК Цена,
	|	ВложенныйЗапрос.Количество                                                 КАК Количество,
	|	ВложенныйЗапрос.Сумма                                                      КАК Сумма,
	|	ВложенныйЗапрос.СуммаНДС                                                   КАК СуммаНДС,
	|	ВложенныйЗапрос.СуммаСкидки                                                КАК СуммаСкидки,
	|	ВложенныйЗапрос.СуммаБезСкидки                                             КАК СуммаБезСкидки,
	|	ВложенныйЗапрос.НомерСтроки                                                КАК НомерСтроки,
	|	Ложь                                                                       КАК ЭтоВозвратнаяТара
	|ИЗ (
	|	ВЫБРАТЬ
	|		ПоступлениеТоваровУслуг.Ссылка КАК Ссылка,
	|		ПоступлениеТоваровУслуг.Номенклатура КАК Номенклатура,
	|
	|		ВЫБОР КОГДА ПоступлениеТоваровУслуг.Упаковка = ЗНАЧЕНИЕ(Справочник.УпаковкиНоменклатуры.ПустаяСсылка) ТОГДА
	|			1
	|		ИНАЧЕ
	|			ПоступлениеТоваровУслуг.Упаковка.Коэффициент
	|		КОНЕЦ КАК Коэффициент,
	|
	|		ВЫБОР КОГДА ПоступлениеТоваровУслуг.Упаковка = ЗНАЧЕНИЕ(Справочник.УпаковкиНоменклатуры.ПустаяСсылка) ТОГДА
	|			ПоступлениеТоваровУслуг.Номенклатура.ЕдиницаИзмерения
	|		ИНАЧЕ
	|			ПоступлениеТоваровУслуг.Упаковка.ЕдиницаИзмерения
	|		КОНЕЦ КАК ЕдиницаИзмерения,
	|
	|		ПоступлениеТоваровУслуг.ПроцентРучнойСкидки         КАК ПроцентСкидки,
	|		ПоступлениеТоваровУслуг.Характеристика              КАК Характеристика,
	|		ПоступлениеТоваровУслуг.Упаковка                    КАК Упаковка,
	|		ПоступлениеТоваровУслуг.СтавкаНДС                   КАК СтавкаНДС,
	|		ПоступлениеТоваровУслуг.Цена                        КАК Цена,
	|		ПоступлениеТоваровУслуг.КоличествоУпаковок          КАК Количество,
	|		ПоступлениеТоваровУслуг.Сумма                       КАК Сумма,
	|		ПоступлениеТоваровУслуг.СуммаРучнойСкидки           КАК СуммаСкидки,
	|		ПоступлениеТоваровУслуг.Сумма +
	|		ПоступлениеТоваровУслуг.СуммаРучнойСкидки           КАК СуммаБезСкидки,
	|		ПоступлениеТоваровУслуг.СуммаНДС                    КАК СуммаНДС,
	|		ПоступлениеТоваровУслуг.НомерСтроки                 КАК НомерСтроки
	|	ИЗ
	|		Документ.ПоступлениеТоваровУслуг.Товары КАК ПоступлениеТоваровУслуг
	|	ГДЕ
	|		ПоступлениеТоваровУслуг.Ссылка В (&МассивДокументов)
	|		И ПоступлениеТоваровУслуг.Номенклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Услуга)
	|	
	|	) КАК ВложенныйЗапрос
	|
	|УПОРЯДОЧИТЬ ПО
	|	ВложенныйЗапрос.Ссылка,
	|	НомерСтроки
	|
	|ИТОГИ
	|	СУММА(СуммаСкидки)
	|ПО
	|	Ссылка
	|");
	
	Запрос.УстановитьПараметр("МассивДокументов", МассивОбъектов);
	
	ТабличныйДокумент = Новый ТабличныйДокумент;
	ТабличныйДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_ПоступлениеТоваровУслуг_Акт";
	
	ТабличныйДокумент = Новый ТабличныйДокумент;
	
	МассивРезультатов   = Запрос.ВыполнитьПакет();
	ДанныеПечати        = МассивРезультатов[0].Выбрать();;
	ВыборкаПоДокументам = МассивРезультатов[1].Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);;
	
	ПервыйДокумент = Истина;
	
	Пока ДанныеПечати.Следующий() Цикл
		
		// Найдем в выборке товары по текущему документу
		СтруктураПоиска = Новый Структура("Ссылка", ДанныеПечати.Ссылка);
		НайденСледующий = ВыборкаПоДокументам.НайтиСледующий(СтруктураПоиска);
		
		// Если в накладной только услуги - перейдем к следующему документу
		Если НайденСледующий Тогда
			ВыборкаПоУслугам = ВыборкаПоДокументам.Выбрать();
			ЗаголовокСкидки = ФормированиеПечатныхФорм.НужноВыводитьСкидки(ВыборкаПоУслугам, ИспользоватьРучныеСкидки);
			ЕстьСкидки = ЗаголовокСкидки.ЕстьСкидки;
			ВыборкаПоУслугам.Сбросить();
		Иначе
			
			Текст = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				НСтр("ru = 'В документе %1 отсутствуют услуги. Печать акта об оказании услуг не требуется.'"),
				ДанныеПечати.Ссылка
				);
				
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
				Текст,
				ДанныеПечати.Ссылка
			);
			
			Продолжить;
		КонецЕсли;
		
		Если Не ПервыйДокумент Тогда
			ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		
		ПервыйДокумент    = Ложь;
		НомерСтрокиНачало = ТабличныйДокумент.ВысотаТаблицы + 1;
		
		Макет = УправлениеПечатью.ПолучитьМакет("Документ.ПоступлениеТоваровУслуг.ПФ_MXL_Акт");
		
		// Выводим шапку акта
		
		ОбластьМакета                          = Макет.ПолучитьОбласть("Заголовок");
		ШтрихкодированиеПечатныхФорм.ВывестиШтрихкодВТабличныйДокумент(ТабличныйДокумент, Макет, ОбластьМакета, ДанныеПечати.Ссылка);
		
		ТекстЗаголовка = ОбщегоНазначенияУТКлиентСервер.СформироватьЗаголовокДокумента(ДанныеПечати, НСтр("ru='Акт'"));
		
		ОбластьМакета.Параметры.ТекстЗаголовка = ТекстЗаголовка;
		ТабличныйДокумент.Вывести(ОбластьМакета);
		
		ОбластьМакета                                   = Макет.ПолучитьОбласть("Поставщик");
		ПредставлениеПоставщика                         = ФормированиеПечатныхФорм.ОписаниеОрганизации(ФормированиеПечатныхФорм.СведенияОЮрФизЛице(ДанныеПечати.Контрагент, ДанныеПечати.Дата), "ПолноеНаименование,");
		ОбластьМакета.Параметры.ПредставлениеПоставщика = ПредставлениеПоставщика;
		ОбластьМакета.Параметры.Поставщик               = ДанныеПечати.Контрагент;
		ТабличныйДокумент.Вывести(ОбластьМакета);
		
		ОбластьМакета                                   = Макет.ПолучитьОбласть("Покупатель");
		ПредставлениеПолучателя                         = ФормированиеПечатныхФорм.ОписаниеОрганизации(ФормированиеПечатныхФорм.СведенияОЮрФизЛице(ДанныеПечати.Организация, ДанныеПечати.Дата), "ПолноеНаименование,");
		ОбластьМакета.Параметры.ПредставлениеПолучателя = ПредставлениеПолучателя;
		ОбластьМакета.Параметры.Получатель              = ДанныеПечати.Организация;
		ТабличныйДокумент.Вывести(ОбластьМакета);
		
		// Выводим заголовок таблицы Услуги
		
		Если ЕстьСкидки Тогда
			
			ОбластьМакета = Макет.ПолучитьОбласть("ШапкаТаблицыСоСкидкой");
			ОбластьСтроки = Макет.ПолучитьОбласть("СтрокаСоСкидкой");
			
			ОбластьМакета.Параметры.Скидка = ЗаголовокСкидки.Скидка;
			ОбластьМакета.Параметры.СуммаБезСкидки = ЗаголовокСкидки.СуммаСкидки;
		Иначе
			
			ОбластьМакета = Макет.ПолучитьОбласть("ШапкаТаблицы");
			ОбластьСтроки = Макет.ПолучитьОбласть("Строка");
			
		КонецЕсли;
		
		ТабличныйДокумент.Вывести(ОбластьМакета);
		
		Сумма       = 0;
		СуммаНДС    = 0;
		НомерСтроки = 0;
		
		// Выводим строки таблицы Услуги
		
		Пока ВыборкаПоУслугам.Следующий() Цикл
		
			НомерСтроки = НомерСтроки + 1;
			
			ОбластьСтроки.Параметры.Заполнить(ВыборкаПоУслугам);
			ОбластьСтроки.Параметры.НомерСтроки = НомерСтроки;
			ОбластьСтроки.Параметры.Товар       = НоменклатураКлиентСервер.ПредставлениеНоменклатурыДляПечати(
				ВыборкаПоУслугам.УслугаНаименованиеПолное,
				ВыборкаПоУслугам.Характеристика
				);
			
			Если ЕстьСкидки Тогда
				
				ОбластьСтроки.Параметры.Скидка         = ?(ЗаголовокСкидки.ТолькоНаценка,- ВыборкаПоУслугам.СуммаСкидки,ВыборкаПоУслугам.СуммаСкидки);
				ОбластьСтроки.Параметры.СуммаБезСкидки = ФормированиеПечатныхФорм.ФорматСумм(ВыборкаПоУслугам.Сумма + ВыборкаПоУслугам.СуммаСкидки);
				
			КонецЕсли;
			
			Сумма    = Сумма    + ВыборкаПоУслугам.Сумма;
			СуммаНДС = СуммаНДС + ВыборкаПоУслугам.СуммаНДС;
			
			ТабличныйДокумент.Вывести(ОбластьСтроки);
		
		КонецЦикла;
		
		ОбластьМакета                 = Макет.ПолучитьОбласть("Итого");
		ОбластьМакета.Параметры.Всего = ФормированиеПечатныхФорм.ФорматСумм(Сумма);
		ТабличныйДокумент.Вывести(ОбластьМакета);
		
		Если ДанныеПечати.УчитыватьНДС Тогда
			
			ОбластьМакета = Макет.ПолучитьОбласть("ИтогоНДС");
			
			ОбластьМакета.Параметры.ВсегоНДС = ФормированиеПечатныхФорм.ФорматСумм(СуммаНДС);
			ОбластьМакета.Параметры.НДС      = ?(ДанныеПечати.ЦенаВключаетНДС, НСтр("ru = 'В том числе НДС'"), НСтр("ru = ' Сумма НДС'"));
			
			ТабличныйДокумент.Вывести(ОбластьМакета);
			
		КонецЕсли;

		СуммаКПрописи                          = Сумма + ?(ДанныеПечати.ЦенаВключаетНДС, 0, СуммаНДС);
		ОбластьМакета                          = Макет.ПолучитьОбласть("СуммаПрописью");
		
		ИтоговаяСтрока = НСтр("ru = 'Всего оказано услуг %КоличествоНаименований%, на сумму %СуммаДокумента%'");
		ИтоговаяСтрока = СтрЗаменить(ИтоговаяСтрока, "%КоличествоНаименований%", НомерСтроки);
		ИтоговаяСтрока = СтрЗаменить(ИтоговаяСтрока, "%СуммаДокумента%", ФормированиеПечатныхФорм.ФорматСумм(СуммаКПрописи, ДанныеПечати.Валюта));
		
		ОбластьМакета.Параметры.ИтоговаяСтрока = ИтоговаяСтрока;
		ОбластьМакета.Параметры.СуммаПрописью  = РаботаСКурсамиВалют.СформироватьСуммуПрописью(СуммаКПрописи, ДанныеПечати.Валюта);
		ТабличныйДокумент.Вывести(ОбластьМакета);

		ОбластьМакета = Макет.ПолучитьОбласть("Подписи");
		
		
		ТабличныйДокумент.Вывести(ОбластьМакета);
		
		УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабличныйДокумент, НомерСтрокиНачало, ОбъектыПечати, ДанныеПечати.Ссылка);
		
	КонецЦикла;
	
	ТабличныйДокумент.АвтоМасштаб = Истина;
	
	Если ПривилегированныйРежим() Тогда
		УстановитьПривилегированныйРежим(Ложь);
	КонецЕсли;
	
	Возврат ТабличныйДокумент;
	
КонецФункции

Процедура ЗаполнитьСтруктуруПолучателейПечатныхФорм(СтруктураДанныхОбъектаПечати) Экспорт
	
	СтруктураДанныхОбъектаПечати.ОсновнойПолучатель = "Партнер";
	
	СтруктураДанныхОбъектаПечати.МассивРеквизитовПолучателей.Добавить("Партнер");
	Если ПолучитьФункциональнуюОпцию("ИспользоватьПартнеровИКонтрагентов") Тогда 
		СтруктураДанныхОбъектаПечати.МассивРеквизитовПолучателей.Добавить("Контрагент");
	КонецЕсли;
	СтруктураДанныхОбъектаПечати.МассивРеквизитовПолучателей.Добавить("Грузоотправитель");
	СтруктураДанныхОбъектаПечати.МассивРеквизитовПолучателей.Добавить("Грузополучатель");
	
КонецПроцедуры

/////////////////////////////////////////////////////////////////////////////////
// Обновление информационной базы

Процедура ЗаполнитьРеквизитЗакупкиПодДеятельность() Экспорт 
	
	НалогообложениеОрганизаций = Новый Соответствие;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	Документ.Ссылка КАК Ссылка
	|ИЗ
	|	Документ.ПоступлениеТоваровУслуг КАК Документ
	|ГДЕ
	|	Документ.ЗакупкаПодДеятельность = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПустаяСсылка)
	|";
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		
		ДокументОбъект = Выборка.Ссылка.ПолучитьОбъект();
		
		Если ДокументОбъект.УдалитьЗакупкаПодДеятельностьОблагаемуюЕНВД Тогда
			 ДокументОбъект.ЗакупкаПодДеятельность = Перечисления.ТипыНалогообложенияНДС.ПродажаОблагаетсяЕНВД
		 Иначе
			НалогообложениеНДС = НалогообложениеОрганизаций.Получить(ДокументОбъект.Организация);
			Если НалогообложениеНДС = Неопределено Тогда
				НалогообложениеНДС = Справочники.Организации.НалогообложениеНДС(ДокументОбъект.Организация, ДокументОбъект.Склад, ДокументОбъект.Дата);
				НалогообложениеОрганизаций.Вставить(ДокументОбъект.Организация, НалогообложениеНДС);
			КонецЕсли;
			ДокументОбъект.ЗакупкаПодДеятельность = НалогообложениеНДС;
		КонецЕсли;
		
		ДокументОбъект.ОбменДанными.Загрузка = Истина;
		ДокументОбъект.Записать(РежимЗаписиДокумента.Запись);
		
	КонецЦикла;
	
КонецПроцедуры

#КонецЕсли