#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

////////////////////////////////////////////////////////////////////////////////
// ПРОГРАММНЫЙ ИНТЕРФЕЙС

////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

// Функция определяет реквизиты выбранного документа.
//
// Параметры:
//  ДокументСсылка - ДокументСсылка.ВнутреннееПотреблениеТоваров - Ссылка на документ
//
// Возвращаемое значение:
//	Структура - реквизиты внутреннего потребления товаров
//
Функция ПолучитьРеквизитыДокумента(ДокументСсылка) Экспорт
	
	Запрос = Новый Запрос("
	|ВЫБРАТЬ
	|	ДанныеДокумента.Дата КАК Дата,
	|	ДанныеДокумента.Организация КАК Организация
	|ИЗ
	|	Документ.СписаниеНедостачТоваров КАК ДанныеДокумента
	|ГДЕ
	|	ДанныеДокумента.Ссылка = &ДокументСсылка
	|");
	
	Запрос.УстановитьПараметр("ДокументСсылка", ДокументСсылка);
	
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда
		Дата = Выборка.Дата;
		Организация = Выборка.Организация;
	Иначе
		Дата = Дата(1,1,1);
		Организация = Неопределено;
	КонецЕсли;
	
	СтруктураРеквизитов = Новый Структура("Дата, Организация",
		Дата,
		Организация,
	);
	
	Возврат СтруктураРеквизитов;

КонецФункции // ПолучитьРеквизитыДокумента()

// Функция возвращает текст запроса для отражения документа в регламентированном учете.
//
// Возвращаемое значение:
//	Строка - Текст запроса
//                                                                               
Функция ТекстОтраженияВРеглУчете() Экспорт
	
	ТекстОтнесениеРасходовПоКомиссионномуТовару = "
	|ВЫБРАТЬ   //// Отнесение расходов по комиссионному товару (Дт <94, 44.02> :: Кт 76.ОК)
	|
	|	Операция.Дата КАК Период,
	|	Операция.Организация КАК Организация,
	|   НЕОПРЕДЕЛЕНО КАК ИдентификаторСтроки,
	|
	|	ЕСТЬNULL(Стоимости.СтоимостьРегл * Строки.Количество,0) КАК Сумма,
	|
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.Расходы) КАК ВидСчетаДт,
	|	Операция.СтатьяРасходов КАК АналитикаУчетаДт,
	|	Операция.Подразделение КАК МестоУчетаДт,
	|
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаДт,
	|	Операция.Подразделение КАК ПодразделениеДт,
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетДт,
	|
	|	Операция.СтатьяРасходов КАК СубконтоДт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт3,
	|
	|	0 КАК ВалютнаяСуммаДт,
	|	0 КАК КоличествоДт,
	|	0 КАК СуммаНУДт,
	|	0 КАК СуммаПРДт,
	|	0 КАК СуммаВРДт,
	|
	|	НЕОПРЕДЕЛЕНО КАК ВидСчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаУчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаКт,
	|
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаКт,
	|	Операция.Подразделение КАК ПодразделениеКт,
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ТоварыКОформлениюОтчетовКомитенту) КАК СчетКт,
	|
	|	Строки.ВидЗапасов.Контрагент КАК СубконтоКт1,
	|	Строки.Номенклатура КАК СубконтоКт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
	|
	|	0 КАК ВалютнаяСуммаКт,
	|	Строки.Количество КАК КоличествоКт,
	|	0 КАК СуммаНУКт,
	|	0 КАК СуммаПРКт,
	|	0 КАК СуммаВРКт
	|
	|ИЗ
	|	Документ.СписаниеНедостачТоваров КАК Операция
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.СписаниеНедостачТоваров.ВидыЗапасов КАК Строки
	|		ПО Строки.Ссылка = Операция.Ссылка
	|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаНоменклатуры КАК Аналитика
	|		ПО Аналитика.Номенклатура = Строки.Номенклатура 
	|			И Аналитика.Характеристика = Строки.Характеристика
	|			И Аналитика.Склад = Строки.ВидЗапасов.Комитент
	|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СтоимостьТоваров КАК Стоимости
	|		ПО Стоимости.Период = НАЧАЛОПЕРИОДА(Операция.Дата, Месяц)
	|			И Стоимости.АналитикаУчетаНоменклатуры = Аналитика.КлючАналитики
	|			И Стоимости.Организация = Операция.Организация
	|			И (Строки.ВидЗапасов = Стоимости.ВидЗапасов И &УчитыватьСебестоимостьТоваровПоВидамЗапасов 
	|			ИЛИ Не &УчитыватьСебестоимостьТоваровПоВидамЗапасов)
	|ГДЕ
	|	Операция.Ссылка = &Ссылка
	|	И Строки.ВидЗапасов.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.КомиссионныйТовар)
	|";
	
	ТекстСписаниеКомиссионногоТовара = "
	|ВЫБРАТЬ	//// Списание комиссионного товара (Дт :: Кт 004.01)
	|
	|	Операция.Дата КАК Период,
	|	Операция.Организация КАК Организация,
	|   НЕОПРЕДЕЛЕНО КАК ИдентификаторСтроки,
	|
	|	0 КАК Сумма,
	|
	|	НЕОПРЕДЕЛЕНО КАК ВидСчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаУчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаДт,
	|
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаДт,
	|	НЕОПРЕДЕЛЕНО КАК ПодразделениеДт,
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетДт,
	|
	|	НЕОПРЕДЕЛЕНО СубконтоДт1,
	|	НЕОПРЕДЕЛЕНО СубконтоДт2,
	|	НЕОПРЕДЕЛЕНО СубконтоДт3,
	|
	|	0 КАК ВалютнаяСуммаДт,
	|	0 КАК КоличествоДт,
	|	0 КАК СуммаНУДт,
	|	0 КАК СуммаПРДт,
	|	0 КАК СуммаВРДт,
	|
	|	НЕОПРЕДЕЛЕНО КАК ВидСчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаУчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаКт,
	|
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаКт,
	|	Операция.Подразделение КАК ПодразделениеКт,
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ТоварыНаСкладе),
	|
	|	Строки.Номенклатура КАК СубконтоКт1,
	|	Операция.Склад КАК СубконтоКт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
	|
	|	0 КАК ВалютнаяСуммаКт,
	|	Строки.Количество КАК КоличествоКт,
	|	0 КАК СуммаНУКт,
	|	0 КАК СуммаПРКт,
	|	0 КАК СуммаВРКт
	|
	|ИЗ
	|	Документ.СписаниеНедостачТоваров КАК Операция
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.СписаниеНедостачТоваров.ВидыЗапасов КАК Строки
	|		ПО (Строки.Ссылка = Операция.Ссылка)
	|ГДЕ
	|	Операция.Ссылка = &Ссылка
	|	И Строки.ВидЗапасов.ТипЗапасов 			= 	ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.КомиссионныйТовар)
	|";
	
	ТекстОтнесениеРасходовПоСобственномуТовару = "
	|ВЫБРАТЬ   //// Списание на расходы собственных товаров (Дт <94, 44.02> :: Кт 41.01)
	|
	|	Операция.Дата КАК Период,
	|	Операция.Организация КАК Организация,
	|   НЕОПРЕДЕЛЕНО КАК ИдентификаторСтроки,
	|
	|	ЕСТЬNULL(СтоимостьТоваров.СтоимостьРегл * Строки.Количество,0) КАК Сумма,
	|
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.Расходы) КАК ВидСчетаДт,
	|	Операция.СтатьяРасходов КАК АналитикаУчетаДт,
	|	Операция.Подразделение КАК МестоУчетаДт,
	|
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаДт,
	|	Операция.Подразделение КАК ПодразделениеДт,
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетДт,
	|
	|	Операция.СтатьяРасходов КАК СубконтоДт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт3,
	|
	|	0 КАК ВалютнаяСуммаДт,
	|	0 КАК КоличествоДт,
	|	0 КАК СуммаНУДт,
	|	0 КАК СуммаПРДт,
	|	0 КАК СуммаВРДт,
	|
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.НаСкладе) КАК ВидСчетаКт,
	|	ВЫБОР
	|		КОГДА &ФормироватьВидыЗапасовПоГруппамФинансовогоУчета
	|			ТОГДА Строки.ВидЗапасов.ГруппаФинансовогоУчета
	|		ИНАЧЕ Строки.Номенклатура.ГруппаФинансовогоУчета
	|	КОНЕЦ КАК АналитикаУчетаКт,
	|	Операция.Склад КАК МестоУчетаКт,
	|
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаКт,
	|	Операция.Склад.Подразделение КАК ПодразделениеКт,
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетКт,
	|
	|	Строки.Номенклатура КАК СубконтоКт1,
	|	Операция.Склад КАК СубконтоКт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
	|
	|	0 КАК ВалютнаяСуммаКт,
	|	Строки.Количество КАК КоличествоКт,
	|	0 КАК СуммаНУКт,
	|	0 КАК СуммаПРКт,
	|	0 КАК СуммаВРКт
	|
	|ИЗ
	|	Документ.СписаниеНедостачТоваров КАК Операция
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.СписаниеНедостачТоваров.ВидыЗапасов КАК Строки
	|    	ПО Строки.Ссылка = Операция.Ссылка
	|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаНоменклатуры КАК Аналитика
	|		ПО Аналитика.Номенклатура = Строки.Номенклатура 
	|			И Аналитика.Характеристика = Строки.Характеристика
	|			И Аналитика.Склад = Строки.Ссылка.Склад
	|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СтоимостьТоваров КАК СтоимостьТоваров
	|		ПО СтоимостьТоваров.Период = НАЧАЛОПЕРИОДА(Операция.Дата, Месяц)
	|			И СтоимостьТоваров.АналитикаУчетаНоменклатуры = Аналитика.КлючАналитики
	|			И СтоимостьТоваров.Организация = Операция.Организация
	|			И (Строки.ВидЗапасов = СтоимостьТоваров.ВидЗапасов И &УчитыватьСебестоимостьТоваровПоВидамЗапасов 
	|				ИЛИ Не &УчитыватьСебестоимостьТоваровПоВидамЗапасов)
	|ГДЕ
	|	Операция.Ссылка = &Ссылка
	|	И Строки.ВидЗапасов.ТипЗапасов <> ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.КомиссионныйТовар)
	|";
	
	Возврат
	ТекстСписаниеКомиссионногоТовара
	+ " ОБЪЕДИНИТЬ ВСЕ " + ТекстОтнесениеРасходовПоКомиссионномуТовару
	+ " ОБЪЕДИНИТЬ ВСЕ " + ТекстОтнесениеРасходовПоСобственномуТовару
	;
	
КонецФункции

////////////////////////////////////////////////////////////////////////////////
// Проведение

Процедура ИнициализироватьДанныеДокумента(ДокументСсылка, ДополнительныеСвойства) Экспорт

	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	ДанныеДокумента.Ссылка КАК Ссылка,
	|	ДанныеДокумента.Дата КАК Период,
	|	ДанныеДокумента.Организация КАК Организация,
	|	ДанныеДокумента.Склад КАК Склад,
	|	ДанныеДокумента.АналитикаРасходов КАК АналитикаРасходов,
	|	ДанныеДокумента.СтатьяРасходов КАК СтатьяРасходов,
	|	ДанныеДокумента.Подразделение КАК Подразделение,
	|	ДанныеДокумента.ДокументОснование КАК ДокументОснование,
	|	ДанныеДокумента.Склад.ИспользоватьОрдернуюСхемуПриОтраженииИзлишковНедостач КАК ИспользоватьОрдернуюСхемуПриОтраженииИзлишковНедостач
	|ИЗ
	|	Документ.СписаниеНедостачТоваров КАК ДанныеДокумента
	|ГДЕ
	|	ДанныеДокумента.Ссылка = &Ссылка");
	Запрос.УстановитьПараметр("Ссылка", ДокументСсылка);
	Реквизиты = Запрос.Выполнить().Выбрать();
	Реквизиты.Следующий();

	ИнициализироватьКлючиАналитикиНоменклатуры(Реквизиты);

	Запрос.УстановитьПараметр("Ссылка",                        ДокументСсылка);
	Запрос.УстановитьПараметр("Период",                        Реквизиты.Период);
	Запрос.УстановитьПараметр("Склад",                         Реквизиты.Склад);
	Запрос.УстановитьПараметр("Организация",                   Реквизиты.Организация);
	Запрос.УстановитьПараметр("СтатьяРасходов",                Реквизиты.СтатьяРасходов);
	Запрос.УстановитьПараметр("АналитикаРасходов",             Реквизиты.АналитикаРасходов);
	Запрос.УстановитьПараметр("Подразделение",                 Реквизиты.Подразделение);
	Запрос.УстановитьПараметр("ХозяйственнаяОперация",         Перечисления.ХозяйственныеОперации.СписаниеТоваров);
	Запрос.УстановитьПараметр("ДокументОснование",             Реквизиты.ДокументОснование);
 	Запрос.УстановитьПараметр("ПоОснованию",                   ЗначениеЗаполнено(Реквизиты.ДокументОснование));
	Запрос.УстановитьПараметр("ИспользоватьОрдернуюСхемуПриОтраженииИзлишковНедостач", Реквизиты.ИспользоватьОрдернуюСхемуПриОтраженииИзлишковНедостач);
	Запрос.УстановитьПараметр("УчитыватьСебестоимостьТоваровПоВидамЗапасов", ПолучитьФункциональнуюОпцию("УчитыватьСебестоимостьТоваровПоВидамЗапасов"));

	Запрос.Текст ="
	// 0 ТаблицаТоварыКОформлениюИзлишковНедостач
	|ВЫБРАТЬ
	|	ТаблицаТовары.НомерСтроки              КАК НомерСтроки,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	&Период                                КАК Период,
	|	ТаблицаТовары.Номенклатура             КАК Номенклатура,
	|	ТаблицаТовары.Характеристика           КАК Характеристика,
	|	&ДокументОснование                     КАК ДокументОснование,
	|	&Склад                                 КАК Склад,
	|	ТаблицаТовары.Количество               КАК КОформлениюАктов
	|
	|ИЗ
	|	Документ.СписаниеНедостачТоваров.Товары КАК ТаблицаТовары
	|ГДЕ
	|	ТаблицаТовары.Ссылка = &Ссылка
	|   И ТаблицаТовары.Количество <> 0
	|	И &ПоОснованию
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки
	|;
	|/////////////////////////////////////////////////////////////////////////////
	// 1 ТаблицаТоварыНаСкладах
	|ВЫБРАТЬ
	|	&Период КАК Период,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
	|	&Склад КАК Склад,
	|	ТаблицаТовары.Номенклатура,
	|	ТаблицаТовары.Характеристика,
	|	ТаблицаТовары.Количество КАК ВНаличии
	|ИЗ
	|	Документ.СписаниеНедостачТоваров.Товары КАК ТаблицаТовары
	|ГДЕ
	|	ТаблицаТовары.Ссылка = &Ссылка
	|	И (НЕ &ИспользоватьОрдернуюСхемуПриОтраженииИзлишковНедостач)
	|	И ТаблицаТовары.Количество <> 0
	|;
	|/////////////////////////////////////////////////////////////////////////////
	// 2  ТаблицаСвободныеОстатки 
	|ВЫБРАТЬ
	|	&Период КАК Период,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
	|	&Склад КАК Склад,
	|	ТаблицаТовары.Номенклатура,
	|	ТаблицаТовары.Характеристика,
	|	ТаблицаТовары.Количество КАК ВНаличии,
	|	ТаблицаТовары.НомерСтроки КАК НомерСтроки
	|ИЗ
	|	Документ.СписаниеНедостачТоваров.Товары КАК ТаблицаТовары
	|ГДЕ
	|	(НЕ &ИспользоватьОрдернуюСхемуПриОтраженииИзлишковНедостач)
	|	И ТаблицаТовары.Ссылка = &Ссылка
	|   И ТаблицаТовары.Количество <> 0
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки
	|;
	|///////////////////////////////////////////////////////////////////";
	Запрос.Текст = Запрос.Текст 
		+ ТекстЗапросаТаблицаТоварыОрганизаций()
		+ ТекстЗапросаТаблицаТоварыКОформлениюОтчетовКомитенту()
		+ ТекстЗапросаВтАналитика()
		+ ТекстЗапросаТаблицаСебестоимостьТоваров()
		+ ТекстЗапросаТаблицаПартииТоваровОрганизацийПоследовательность()
		;
	Результат = Запрос.ВыполнитьПакет();

	ДополнительныеСвойства.ТаблицыДляДвижений.Вставить("ТаблицаТоварыКОформлениюИзлишковНедостач",   		Результат[0].Выгрузить());
	ДополнительныеСвойства.ТаблицыДляДвижений.Вставить("ТаблицаТоварыНаСкладах",                     		Результат[1].Выгрузить());
	ДополнительныеСвойства.ТаблицыДляДвижений.Вставить("ТаблицаСвободныеОстатки",                    		Результат[2].Выгрузить());
	ДополнительныеСвойства.ТаблицыДляДвижений.Вставить("ТаблицаТоварыОрганизаций",                   		Результат[3].Выгрузить());
	ДополнительныеСвойства.ТаблицыДляДвижений.Вставить("ТаблицаТоварыКОформлениюОтчетовКомитенту",   		Результат[4].Выгрузить());
	// 5 Временная таблица аналитик
	ДополнительныеСвойства.ТаблицыДляДвижений.Вставить("ТаблицаСебестоимостьТоваров",                		Результат[6].Выгрузить());
	ДополнительныеСвойства.ТаблицыДляДвижений.Вставить("ТаблицаПартииТоваровОрганизацийПоследовательность",	Результат[7].Выгрузить());

КонецПроцедуры

Процедура ИнициализироватьКлючиАналитикиНоменклатуры(Реквизиты)

	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	ТаблицаТовары.Склад          КАК Склад,
	|	ТаблицаТовары.Номенклатура   КАК Номенклатура,
	|	ТаблицаТовары.Характеристика КАК Характеристика
	|ИЗ
	|	(ВЫБРАТЬ РАЗЛИЧНЫЕ
	|		ВЫБОР КОГДА ТаблицаВидыЗапасов.ВидЗапасов.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.КомиссионныйТовар) ТОГДА
	|			ТаблицаВидыЗапасов.ВидЗапасов.Комитент
	|		ИНАЧЕ
	|			&Склад
	|		КОНЕЦ КАК Склад,
	|		ТаблицаВидыЗапасов.Номенклатура КАК Номенклатура,
	|		ТаблицаВидыЗапасов.Характеристика КАК Характеристика
	|	ИЗ
	|		Документ.СписаниеНедостачТоваров.ВидыЗапасов КАК ТаблицаВидыЗапасов
	|	ГДЕ
	|		ТаблицаВидыЗапасов.Ссылка = &Ссылка
	|
	|	) КАК ТаблицаТовары
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РегистрСведений.АналитикаУчетаНоменклатуры КАК Аналитика
	|	ПО
	|		ТаблицаТовары.Номенклатура     = Аналитика.Номенклатура
	|		И ТаблицаТовары.Характеристика = Аналитика.Характеристика
	|		И ТаблицаТовары.Склад          = Аналитика.Склад
	|ГДЕ
	|	Аналитика.КлючАналитики ЕСТЬ NULL
	|");
	Запрос.УстановитьПараметр("Ссылка", Реквизиты.Ссылка);
	Запрос.УстановитьПараметр("Склад",  Реквизиты.Склад);
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		РегистрыСведений.АналитикаУчетаНоменклатуры.СоздатьКлючАналитики(Выборка)
	КонецЦикла;

КонецПроцедуры

Функция ТекстЗапросаТаблицаТоварыОрганизаций()
	
	ТекстЗапроса = "
	|ВЫБРАТЬ
	|	ТаблицаВидыЗапасов.НомерСтроки КАК НомерСтроки,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
	|	&Период КАК Период,
	|	&Склад КАК Склад,
	|	&Организация КАК ОрганизацияОтгрузки,
	|	&Организация КАК Организация,
	|	ТаблицаВидыЗапасов.Номенклатура КАК Номенклатура,
	|	ТаблицаВидыЗапасов.Характеристика КАК Характеристика,
	|	ТаблицаВидыЗапасов.ВидЗапасов КАК ВидЗапасов,
	|	ТаблицаВидыЗапасов.НомерГТД КАК НомерГТД,
	|	ТаблицаВидыЗапасов.Количество КАК Количество,
	|	КлючиАналитики.КлючАналитики КАК АналитикаУчетаНоменклатуры,
	|	ЗНАЧЕНИЕ (Перечисление.ТипыНалогообложенияНДС.ПродажаНеОблагаетсяНДС) КАК НалогообложениеНДС
	|ИЗ
	|	Документ.СписаниеНедостачТоваров.ВидыЗапасов КАК ТаблицаВидыЗапасов
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаНоменклатуры КАК КлючиАналитики
	|		ПО ТаблицаВидыЗапасов.Номенклатура = КлючиАналитики.Номенклатура
	|			И ТаблицаВидыЗапасов.Характеристика = КлючиАналитики.Характеристика
	|			И (&Склад = КлючиАналитики.Склад)
	|ГДЕ
	|	ТаблицаВидыЗапасов.Ссылка = &Ссылка
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки
	|;
	|/////////////////////////////////////////////////////////////////////////////
	|";
	
	Возврат ТекстЗапроса;
	
КонецФункции // ТекстЗапросаТаблицаТоварыОрганизаций()

Функция ТекстЗапросаТаблицаТоварыКОформлениюОтчетовКомитенту()
	
	ТекстЗапроса = "
	|ВЫБРАТЬ
	|	ТаблицаВидыЗапасов.НомерСтроки КАК НомерСтроки,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	&Период КАК Период,
	|	ТаблицаВидыЗапасов.ВидЗапасов.Валюта КАК Валюта,
	|	ТаблицаВидыЗапасов.ВидЗапасов КАК ВидЗапасов,
	|	ТаблицаВидыЗапасов.Номенклатура КАК Номенклатура,
	|	ТаблицаВидыЗапасов.Характеристика КАК Характеристика,
	|	ТаблицаВидыЗапасов.НомерГТД КАК НомерГТД,
	|	&ХозяйственнаяОперация КАК ХозяйственнаяОперация,
	|	0 КАК Количество,
	|	ТаблицаВидыЗапасов.Количество КАК КоличествоСписано,
	|	0 КАК СуммаВыручки
	|
	|ИЗ
	|	Документ.СписаниеНедостачТоваров.ВидыЗапасов КАК ТаблицаВидыЗапасов
	|
	|ГДЕ
	|	ТаблицаВидыЗапасов.Ссылка = &Ссылка
	|	И ТаблицаВидыЗапасов.ВидЗапасов.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.КомиссионныйТовар)
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки
	|;
	|/////////////////////////////////////////////////////////////////////////////
	|";
	
	Возврат ТекстЗапроса;
	
КонецФункции // ТекстЗапросаТаблицаТоварыКОформлениюОтчетовКомитенту()

Функция ТекстЗапросаВтАналитика()
	
	ТекстЗапроса = "
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	АналитикаНоменклатуры.КлючАналитики КАК АналитикаУчетаНоменклатуры,
	|	ТаблицаВидыЗапасов.ВидЗапасов КАК ВидЗапасов,
	|	ТаблицаВидыЗапасов.Номенклатура КАК Номенклатура,
	|	ТаблицаВидыЗапасов.Характеристика КАК Характеристика
	|
	|ПОМЕСТИТЬ ВтАналитика
	|ИЗ
	|	Документ.СписаниеНедостачТоваров.ВидыЗапасов КАК ТаблицаВидыЗапасов
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РегистрСведений.АналитикаУчетаНоменклатуры КАК АналитикаНоменклатуры
	|	ПО
	|		ТаблицаВидыЗапасов.Номенклатура = АналитикаНоменклатуры.Номенклатура
	|		И ТаблицаВидыЗапасов.Характеристика = АналитикаНоменклатуры.Характеристика
	|		И (ВЫБОР КОГДА ТаблицаВидыЗапасов.ВидЗапасов.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.КомиссионныйТовар) ТОГДА
	|			ТаблицаВидыЗапасов.ВидЗапасов.Комитент
	|		ИНАЧЕ
	|			&Склад
	|		КОНЕЦ = АналитикаНоменклатуры.Склад)
	|ГДЕ
	|	ТаблицаВидыЗапасов.Ссылка = &Ссылка
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ВидЗапасов,
	|	Номенклатура,
	|	Характеристика
	|;
	|////////////////////////////////////////////////////////////////////////////////
	|";

	Возврат ТекстЗапроса;
	
КонецФункции // ТекстЗапросаВтАналитика()

Функция ТекстЗапросаТаблицаСебестоимостьТоваров()

	ТекстЗапроса = "
	|ВЫБРАТЬ
	|	ВидыЗапасов.НомерСтроки КАК НомерСтрокиДокумента,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
	|	&Период КАК Период,
	|	ВтАналитика.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|	&Организация КАК Организация,
	|	ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыНаСкладах) КАК РазделУчета,
	|
	|	ВЫБОР КОГДА &УчитыватьСебестоимостьТоваровПоВидамЗапасов ТОГДА
	|   	ВидыЗапасов.ВидЗапасов
	|	ИНАЧЕ
	|		Неопределено
	|	КОНЕЦ КАК ВидЗапасов,
	|
	|	ВидыЗапасов.Количество КАК Количество,
	|	&Подразделение КАК Подразделение,
	|	&АналитикаРасходов КАК АналитикаРасходов,
	|	&СтатьяРасходов КАК СтатьяРасходовСписания,
	|	&ХозяйственнаяОперация КАК ХозяйственнаяОперация
	|
	|ИЗ
	|	Документ.СписаниеНедостачТоваров.ВидыЗапасов КАК ВидыЗапасов
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		ВтАналитика  КАК ВтАналитика
	|	ПО
	|		ВидыЗапасов.Номенклатура = ВтАналитика.Номенклатура
	|		И ВидыЗапасов.Характеристика = ВтАналитика.Характеристика
	|		И ВидыЗапасов.ВидЗапасов = ВтАналитика.ВидЗапасов
	|
	|ГДЕ
	|	ВидыЗапасов.Ссылка = &Ссылка
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтрокиДокумента
	|;
	|////////////////////////////////////////////////////////////////////////////////
	|";

	Возврат ТекстЗапроса;
	
КонецФункции // ТекстЗапросаТаблицаСебестоимостьТоваров()

Функция ТекстЗапросаТаблицаПартииТоваровОрганизацийПоследовательность()
	
	ТекстЗапроса = "
	|ВЫБРАТЬ
	|	&Период КАК Период,
	|	ТаблицаВидыЗапасов.Номенклатура КАК Номенклатура,
	|	ТаблицаВидыЗапасов.Характеристика КАК Характеристика,
	|	&Ссылка КАК Регистратор
	|ИЗ
	|	Документ.СписаниеНедостачТоваров.ВидыЗапасов КАК ТаблицаВидыЗапасов
	|ГДЕ
	|	ТаблицаВидыЗапасов.Ссылка = &Ссылка
	|;
	|/////////////////////////////////////////////////////////////////////////////
	|";
	
	Возврат ТекстЗапроса;
	
КонецФункции // ТекстЗапросаТаблицаПартииТоваровОрганизацийПоследовательность()

////////////////////////////////////////////////////////////////////////////////
// Печать

Процедура Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт

	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "АктСписанияТоваров") Тогда

		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(
			КоллекцияПечатныхФорм, 
			"АктСписанияТоваров",
			"Акт о списании товаров",
			СформироватьПечатнуюФормуАктСписанияТоваров(МассивОбъектов, ОбъектыПечати)
		);
				
	КонецЕсли;			
	
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "ТОРГ16") Тогда

		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(
			КоллекцияПечатныхФорм, 
			"ТОРГ16",
			"ТОРГ-16(Акт о списании товаров)",
			СформироватьПечатнуюФормуТОРГ16(МассивОбъектов, ОбъектыПечати, ПараметрыПечати)
		);
		
	КонецЕсли;
	
КонецПроцедуры

// Функция формирует таблицу курсов валют по дням.
//	Параметры:
//			МассивДокументов - Массив - массив ссылок на документы, на даты которых нужно получить курсы валют
//
Функция ТаблицаКурсовВалют(МассивДокументов)
	
	ВалютаРегламентированногоУчета = Константы.ВалютаРегламентированногоУчета.Получить();
	
	Запрос = Новый Запрос("ВЫБРАТЬ РАЗЛИЧНЫЕ
	                      |	СписаниеНедостачТоваров.Ссылка КАК Ссылка,
	                      |	НАЧАЛОПЕРИОДА(СписаниеНедостачТоваров.Дата, ДЕНЬ) КАК Дата,
	                      |	СписаниеНедостачТоваров.ВидЦены.ВалютаЦены КАК Валюта
	                      |ИЗ
	                      |	Документ.СписаниеНедостачТоваров КАК СписаниеНедостачТоваров
	                      |ГДЕ
	                      |	СписаниеНедостачТоваров.Ссылка В(&МассивДокументов)
	                      |	И СписаниеНедостачТоваров.ВидЦены.ВалютаЦены <> &ВалютаРегламентированногоУчета
	                      |
	                      |УПОРЯДОЧИТЬ ПО
	                      |	Валюта,
	                      |	Дата");
	Запрос.УстановитьПараметр("ВалютаРегламентированногоУчета", ВалютаРегламентированногоУчета);
	Запрос.УстановитьПараметр("МассивДокументов", МассивДокументов);
	
	ТаблицаКурсовВалют = Новый ТаблицаЗначений;
	ТаблицаКурсовВалют.Колонки.Добавить("Ссылка",    Новый ОписаниеТипов("ДокументСсылка.СписаниеНедостачТоваров"));
	ТаблицаКурсовВалют.Колонки.Добавить("Валюта",    Новый ОписаниеТипов("СправочникСсылка.Валюты"));
	ТаблицаКурсовВалют.Колонки.Добавить("Дата",      Новый ОписаниеТипов("Дата"));
	ТаблицаКурсовВалют.Колонки.Добавить("Курс",      Новый ОписаниеТипов("Число"));
	ТаблицаКурсовВалют.Колонки.Добавить("Кратность", Новый ОписаниеТипов("Число"));
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		
		НоваяСтрока = ТаблицаКурсовВалют.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, Выборка);
		
		КурсыВалюты = РаботаСКурсамиВалют.ПолучитьКурсВалюты(Выборка.Валюта, Выборка.Дата);
		НоваяСтрока.Курс = КурсыВалюты.Курс;
		НоваяСтрока.Кратность = КурсыВалюты.Кратность;
		
	КонецЦикла;
	
	Возврат ТаблицаКурсовВалют;
	
КонецФункции // ТаблицаКурсовВалют()

Функция СформироватьПечатнуюФормуТОРГ16(МассивОбъектов, ОбъектыПечати, ПараметрыПечати)
	
	УстановитьПривилегированныйРежим(Истина);
	
	МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	ОтветственныеЛицаСервер.СформироватьВременнуюТаблицуОтветственныхЛицДокументов(МассивОбъектов, МенеджерВременныхТаблиц);	
	
	ЗапросПоДокументам = Новый Запрос;
	ЗапросПоДокументам.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	ЗапросПоДокументам.УстановитьПараметр("МассивОбъектов", МассивОбъектов);
	ЗапросПоДокументам.Текст =
	"ВЫБРАТЬ
	|	РасчетСебестоимостиТоваровОрганизации.Ссылка.ПредварительныйРасчет КАК ПредварительныйРасчет,
	|	ТаблицаОтветственныеЛица.РуководительНаименование  КАК Руководитель,
	|	ТаблицаОтветственныеЛица.РуководительДолжность КАК ДолжностьРуководителя,
	|	ТаблицаОтветственныеЛица.ГлавныйБухгалтерНаименование КАК ГлавныйБухгалтер,
	|	ПРЕДСТАВЛЕНИЕ(Документ.Организация.НаименованиеСокращенное) КАК ОрганизацияПредставление,
	|	ПРЕДСТАВЛЕНИЕ(Документ.Организация.КодПоОКПО) КАК ОрганизацияПоОКПО,
	|	ПРЕДСТАВЛЕНИЕ(Документ.Организация.Префикс) КАК Префикс,
	|	ПРЕДСТАВЛЕНИЕ(Документ.Склад) КАК СкладПредставление,
	|	Документ.Ссылка КАК Ссылка,
	|	Документ.Номер КАК Номер,
	|	Документ.Дата КАК ДатаДокумента,
	|	Документ.Организация КАК Организация,
	|	Документ.Склад.ТекущийОтветственный КАК Кладовщик,
	|	Документ.Склад.ТекущаяДолжностьОтветственного КАК ДолжностьКладовщика,
	|	Документ.Ответственный.ФизическоеЛицо КАК Ответственный,
	|	Документ.ИсточникИнформацииОЦенахДляПечати КАК ИсточникИнформацииОЦенахДляПечати,
	|	Документ.ВидЦены КАК ВидЦен,
	|	Документ.Склад КАК Склад,
	|	Документ.ДокументОснование.Номер КАК НомерОснования,
	|	Документ.ДокументОснование.Дата КАК ОснованиеДата,
	|	Документ.ДокументОснование КАК ДокументОснование
	|ИЗ
	|	Документ.СписаниеНедостачТоваров КАК Документ
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.РасчетСебестоимостиТоваров.Организации КАК РасчетСебестоимостиТоваровОрганизации
	|		ПО Документ.Организация = РасчетСебестоимостиТоваровОрганизации.Организация
	|			И (РасчетСебестоимостиТоваровОрганизации.Ссылка.Дата МЕЖДУ НАЧАЛОПЕРИОДА(Документ.Дата, МЕСЯЦ) И КОНЕЦПЕРИОДА(Документ.Дата, МЕСЯЦ))
	|			И (РасчетСебестоимостиТоваровОрганизации.Ссылка.Проведен)
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		ТаблицаОтветственныеЛица КАК ТаблицаОтветственныеЛица
	|		ПО Документ.Ссылка = ТаблицаОтветственныеЛица.Ссылка
	|ГДЕ
	|	Документ.Ссылка В(&МассивОбъектов)
	|
	|УПОРЯДОЧИТЬ ПО
	|	Ссылка";
	 	
	ВыборкаПоДокументам		= ЗапросПоДокументам.Выполнить().Выбрать();
	
	ДопКолонка 				= ФормированиеПечатныхФорм.ИмяДополнительнойКолонки();
	ИспользуетсяДопКолонка 	= ЗначениеЗаполнено(ДопКолонка);
	
	РезультатыПоДокументам 	= ЗапросПоДокументам.ВыполнитьПакет();
	ВыборкаПоДокументам 	= РезультатыПоДокументам[0].Выбрать();
	ТаблицаКурсовВалют 		= ТаблицаКурсовВалют(МассивОбъектов);
	
	ВалютаРегл 	= Константы.ВалютаРегламентированногоУчета.Получить();	
	Макет 		= УправлениеПечатью.ПолучитьМакет("Документ.СписаниеНедостачТоваров.ПФ_MXL_ТОРГ16");
	
	ТабДокумент = Новый ТабличныйДокумент;
	ТабДокумент.ОриентацияСтраницы = ОриентацияСтраницы.Ландшафт;
	
	ТабДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_СписаниеНедостачТоваров_ТОРГ16";
	
	ОбластьШапки 						= Макет.ПолучитьОбласть("Шапка");
	ОбластьЗаголовокТаблицыПервогоЛиста = Макет.ПолучитьОбласть("ЗаголовокТаблицыПервогоЛиста");
	ОбластьСтрокаПервогоЛиста 			= Макет.ПолучитьОбласть("СтрокаПервогоЛиста");
	ОбластьЗаголовокТаблицыВторогоЛиста = Макет.ПолучитьОбласть("ЗаголовокТаблицыВторогоЛиста");
	ОбластьСтрокаВторогоЛиста 			= Макет.ПолучитьОбласть("СтрокаВторогоЛиста");
	ОбластьИтого 						= Макет.ПолучитьОбласть("Итого");
	ОбластьПодвал 						= Макет.ПолучитьОбласть("Подвал");
	
	НомерДокумента = 0;
	КоличествоДокументов = ВыборкаПоДокументам.Количество();
	
	Пока ВыборкаПоДокументам.Следующий() Цикл
		
		ЗапросПоТоварам = Новый Запрос;
		
		Если ВыборкаПоДокументам.ИсточникИнформацииОЦенахДляПечати = Перечисления.ИсточникиИнформацииОЦенахДляПечати.ПоВидуЦен Тогда
			
			ЗапросПоТоварам.Текст =
			"ВЫБРАТЬ
			|	СписаниеНедостачТоваровТовары.Характеристика.НаименованиеПолное КАК ХарактеристикаПредставление,
			|	ПРЕДСТАВЛЕНИЕ(СписаниеНедостачТоваровТовары.Номенклатура.ЕдиницаИзмерения) КАК ЕдиницаИзмеренияПредставление,
			|	СписаниеНедостачТоваровТовары.Номенклатура." + ?(ИспользуетсяДопКолонка, ДопКолонка, "Код") +" КАК ТоварКод," + "
			|	СписаниеНедостачТоваровТовары.Количество КАК КоличествоМест,
			|	СписаниеНедостачТоваровТовары.НомерСтроки КАК НомерСтроки,
			|	ВЫБОР
			|		КОГДА НЕ ЦеныНоменклатуры.Упаковка.Коэффициент ЕСТЬ NULL 
			|				И ЦеныНоменклатуры.Упаковка.Коэффициент <> 0
			|			ТОГДА ЕСТЬNULL(ЦеныНоменклатуры.Цена, 0) / ЦеныНоменклатуры.Упаковка.Коэффициент
			|		ИНАЧЕ ЕСТЬNULL(ЦеныНоменклатуры.Цена, 0)
			|	КОНЕЦ КАК Цена,
			|	СписаниеНедостачТоваровТовары.Номенклатура.НаименованиеПолное КАК НоменклатураПредставление,
			|	СписаниеНедостачТоваровТовары.Номенклатура.ЕдиницаИзмерения.Код КАК ЕдиницаИзмеренияКодПоОКЕИ,
			|	СписаниеНедостачТоваровТовары.Номенклатура.Вес КАК МассаОдногоМеста
			|ИЗ
			|	Документ.СписаниеНедостачТоваров.Товары КАК СписаниеНедостачТоваровТовары
			|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЦеныНоменклатуры.СрезПоследних(
			|				КОНЕЦПЕРИОДА(&ДатаЦен, ДЕНЬ),
			|				(ВидЦены, Номенклатура, Характеристика) В
			|					(ВЫБРАТЬ
			|						&ВидЦен,
			|						СписаниеНедостачТоваровТовары.Номенклатура,
			|						СписаниеНедостачТоваровТовары.Характеристика
			|					ИЗ
			|						Документ.СписаниеНедостачТоваров.Товары КАК СписаниеНедостачТоваровТовары
			|					ГДЕ
			|						СписаниеНедостачТоваровТовары.Ссылка = &ТекущийДокумент)) КАК ЦеныНоменклатуры
			|		ПО СписаниеНедостачТоваровТовары.Номенклатура = ЦеныНоменклатуры.Номенклатура
			|			И СписаниеНедостачТоваровТовары.Характеристика = ЦеныНоменклатуры.Характеристика
			|ГДЕ
			|	СписаниеНедостачТоваровТовары.Ссылка = &ТекущийДокумент
			|
			|УПОРЯДОЧИТЬ ПО
			|	СписаниеНедостачТоваровТовары.НомерСтроки";
			
			ЗапросПоТоварам.УстановитьПараметр("ТекущийДокумент", ВыборкаПоДокументам.Ссылка);
			ЗапросПоТоварам.УстановитьПараметр("ДатаЦен", ВыборкаПоДокументам.ДатаДокумента);
			ЗапросПоТоварам.УстановитьПараметр("ВидЦен", ВыборкаПоДокументам.ВидЦен); 
			РезультатЗапроса = ЗапросПоТоварам.Выполнить();
			ВыборкаСтрокТовары = РезультатЗапроса.Выбрать();
			ВыборкаПоДатам = РезультатЗапроса.Выбрать();
			
		ИначеЕсли ВыборкаПоДокументам.ИсточникИнформацииОЦенахДляПечати = Перечисления.ИсточникиИнформацииОЦенахДляПечати.ПоСебестоимости Тогда
			
			Если ВыборкаПоДокументам.ПредварительныйРасчет = Null Тогда
				ТекстСообщения = НСтр("ru = 'Не удалось получить цены по себестоимости для документа %Документ%: на %Период% не произведен расчет себестоимости.'");
				
				ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Документ%", ВыборкаПоДокументам.Ссылка);
				ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Период%", Формат(НачалоМесяца(ВыборкаПоДокументам.ДатаДокумента),"ДЛФ=DD"));
				
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения);
				
				Продолжить;
			КонецЕсли;
			
			Если ВыборкаПоДокументам.ПредварительныйРасчет Тогда
				
				ТекстСообщения = НСтр("ru = 'При печати документа %Документ% использовались данные предварительного расчета себестоимости.'");
				ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Документ%", ВыборкаПоДокументам.Ссылка);
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения);
				
				ЗапросПоТоварам.Текст =
				"ВЫБРАТЬ
				|	СписаниеНедостачТоваровВидЗапасов.Номенклатура КАК Номенклатура,
				|	СписаниеНедостачТоваровВидЗапасов.Характеристика КАК Характеристика,
				|	СписаниеНедостачТоваровВидЗапасов.ВидЗапасов КАК ВидЗапасов,
				|	СправочникКлючейАналитики.Ссылка КАК КлючАналитикиУчетаНоменклатуры,
				|	СписаниеНедостачТоваровВидЗапасов.Количество КАК Количество,
				|	СписаниеНедостачТоваровВидЗапасов.НомерСтроки КАК НомерСтроки
				|ПОМЕСТИТЬ ТаблицаКлючейАналитики
				|ИЗ
				|	Документ.СписаниеНедостачТоваров.ВидыЗапасов КАК СписаниеНедостачТоваровВидЗапасов
				|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.КлючиАналитикиУчетаНоменклатуры КАК СправочникКлючейАналитики
				|		ПО (СправочникКлючейАналитики.Номенклатура = СписаниеНедостачТоваровВидЗапасов.Номенклатура)
				|			И (СправочникКлючейАналитики.Характеристика = СписаниеНедостачТоваровВидЗапасов.Характеристика)
				|			И (СправочникКлючейАналитики.Склад = &Склад)
				|ГДЕ
				|	СписаниеНедостачТоваровВидЗапасов.Ссылка = &ТекущийДокумент
				|	И СписаниеНедостачТоваровВидЗапасов.Ссылка.Проведен
				|;
				|
				|////////////////////////////////////////////////////////////////////////////////
				|ВЫБРАТЬ
				|	ТаблицаСписаниеНедостачТоваров.Характеристика.НаименованиеПолное КАК ХарактеристикаПредставление,
				|	ПРЕДСТАВЛЕНИЕ(ТаблицаСписаниеНедостачТоваров.Номенклатура.ЕдиницаИзмерения) КАК ЕдиницаИзмеренияПредставление,
				|	ТаблицаСписаниеНедостачТоваров.Номенклатура." + ?(ИспользуетсяДопКолонка, ДопКолонка, "Код") +" КАК ТоварКод," + "
				|	ТаблицаСписаниеНедостачТоваров.Количество КАК КоличествоМест,
				|	ТаблицаСписаниеНедостачТоваров.НомерСтроки КАК НомерСтроки,
				|	ЕСТЬNULL(ЦеныНоменклатуры.СтоимостьРегл, 0) КАК Цена,
				|	ТаблицаСписаниеНедостачТоваров.Номенклатура.НаименованиеПолное КАК НоменклатураПредставление,
				|	ТаблицаСписаниеНедостачТоваров.Номенклатура.ЕдиницаИзмерения.Код КАК ЕдиницаИзмеренияКодПоОКЕИ,
				|	ТаблицаСписаниеНедостачТоваров.Номенклатура.Вес КАК МассаОдногоМеста
				|ИЗ
				|	ТаблицаКлючейАналитики КАК ТаблицаСписаниеНедостачТоваров
				|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СтоимостьТоваров.СрезПоследних(
				|				КОНЕЦПЕРИОДА(&ДатаЦен, ДЕНЬ),
				|				(АналитикаУчетаНоменклатуры, Организация, ВидЗапасов) В
				|					(ВЫБРАТЬ
				|						Таблица.КлючАналитикиУчетаНоменклатуры,
				|						&Организация,
				|						Таблица.ВидЗапасов
				|					ИЗ
				|						ТаблицаКлючейАналитики КАК Таблица)) КАК ЦеныНоменклатуры
				|		ПО ТаблицаСписаниеНедостачТоваров.КлючАналитикиУчетаНоменклатуры = ЦеныНоменклатуры.АналитикаУчетаНоменклатуры
				|			И (ТаблицаСписаниеНедостачТоваров.ВидЗапасов = ЦеныНоменклатуры.ВидЗапасов И &УчитыватьСебестоимостьТоваровПоВидамЗапасов
				|				ИЛИ НЕ &УчитыватьСебестоимостьТоваровПоВидамЗапасов)
				|			И (ЦеныНоменклатуры.Организация = &Организация)
				|
				|УПОРЯДОЧИТЬ ПО
				|	ТаблицаСписаниеНедостачТоваров.НомерСтроки";
				
								
			Иначе
				
				ЗапросПоТоварам.Текст =
				"ВЫБРАТЬ
				|	СписаниеНедостачТоваровВидЗапасов.Номенклатура КАК Номенклатура,
				|	СписаниеНедостачТоваровВидЗапасов.Характеристика КАК Характеристика,
				|	СписаниеНедостачТоваровВидЗапасов.ВидЗапасов КАК ВидЗапасов,
				|	СправочникКлючейАналитики.Ссылка КАК КлючАналитикиУчетаНоменклатуры,
				|	СписаниеНедостачТоваровВидЗапасов.Количество КАК Количество,
				|	СписаниеНедостачТоваровВидЗапасов.НомерСтроки КАК НомерСтроки
				|ПОМЕСТИТЬ ТаблицаКлючейАналитики
				|ИЗ
				|	Документ.СписаниеНедостачТоваров.ВидыЗапасов КАК СписаниеНедостачТоваровВидЗапасов
				|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.КлючиАналитикиУчетаНоменклатуры КАК СправочникКлючейАналитики
				|		ПО (СправочникКлючейАналитики.Номенклатура = СписаниеНедостачТоваровВидЗапасов.Номенклатура)
				|			И (СправочникКлючейАналитики.Характеристика = СписаниеНедостачТоваровВидЗапасов.Характеристика)
				|			И (СправочникКлючейАналитики.Склад = &Склад)
				|ГДЕ
				|	СписаниеНедостачТоваровВидЗапасов.Ссылка = &ТекущийДокумент
				|	И СписаниеНедостачТоваровВидЗапасов.Ссылка.Проведен
				|;
				|
				|////////////////////////////////////////////////////////////////////////////////
				|ВЫБРАТЬ
				|	ТаблицаСписаниеНедостачТоваров.Характеристика.НаименованиеПолное КАК ХарактеристикаПредставление,
				|	ПРЕДСТАВЛЕНИЕ(ТаблицаСписаниеНедостачТоваров.Номенклатура.ЕдиницаИзмерения) КАК ЕдиницаИзмеренияПредставление,
				|	ТаблицаСписаниеНедостачТоваров.Номенклатура." + ?(ИспользуетсяДопКолонка, ДопКолонка, "Код") +" КАК ТоварКод," + "
				|	ТаблицаСписаниеНедостачТоваров.Количество КАК КоличествоМест,
				|	ТаблицаСписаниеНедостачТоваров.НомерСтроки КАК НомерСтроки,
				|	ВЫБОР 
				|   	КОГДА ЕСТЬNULL(СебестоимостьТоваров.КоличествоОстаток, 0) = 0 
				|   		ТОГДА 0
				|  		ИНАЧЕ 
				|			ЕСТЬNULL(СебестоимостьТоваров.СтоимостьРеглОстаток, 0) / СебестоимостьТоваров.КоличествоОстаток
				|	КОНЕЦ КАК Цена,
				|	ТаблицаСписаниеНедостачТоваров.Номенклатура.НаименованиеПолное КАК НоменклатураПредставление,
				|	ТаблицаСписаниеНедостачТоваров.Номенклатура.ЕдиницаИзмерения.Код КАК ЕдиницаИзмеренияКодПоОКЕИ,
				|	ТаблицаСписаниеНедостачТоваров.Номенклатура.Вес КАК МассаОдногоМеста
				|ИЗ
				|	ТаблицаКлючейАналитики КАК ТаблицаСписаниеНедостачТоваров
				|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.СебестоимостьТоваров.Остатки(КОНЕЦПЕРИОДА(&ДатаЦен, МЕСЯЦ), Организация = &Организация) КАК СебестоимостьТоваров
				|			ПО ТаблицаСписаниеНедостачТоваров.КлючАналитикиУчетаНоменклатуры = СебестоимостьТоваров.АналитикаУчетаНоменклатуры
				|				И (ТаблицаСписаниеНедостачТоваров.ВидЗапасов = СебестоимостьТоваров.ВидЗапасов И &УчитыватьСебестоимостьТоваровПоВидамЗапасов
			|				ИЛИ НЕ &УчитыватьСебестоимостьТоваровПоВидамЗапасов)
				|				И (СебестоимостьТоваров.Организация = &Организация)
				|
				|УПОРЯДОЧИТЬ ПО
				|	ТаблицаСписаниеНедостачТоваров.НомерСтроки";
								
			КонецЕсли;
			
			ЗапросПоТоварам.УстановитьПараметр("ТекущийДокумент", ВыборкаПоДокументам.Ссылка);
			ЗапросПоТоварам.УстановитьПараметр("ДатаЦен", ВыборкаПоДокументам.ДатаДокумента);
			ЗапросПоТоварам.УстановитьПараметр("Организация", ВыборкаПоДокументам.Организация);
			ЗапросПоТоварам.УстановитьПараметр("Склад", ВыборкаПоДокументам.Склад);
			
			УчитыватьСебестоимостьТоваровПоВидамЗапасов = ПолучитьФункциональнуюОпцию("УчитыватьСебестоимостьТоваровПоВидамЗапасов");
			ЗапросПоТоварам.УстановитьПараметр("УчитыватьСебестоимостьТоваровПоВидамЗапасов", УчитыватьСебестоимостьТоваровПоВидамЗапасов);
			
			РезультатыПоТоварам = ЗапросПоТоварам.ВыполнитьПакет();
			ВыборкаСтрокТовары	= РезультатыПоТоварам[1].Выбрать();
			ВыборкаПоДатам = РезультатыПоТоварам[1].Выбрать();
			
		КонецЕсли; 	
		
		КоэффициентПересчета 	= ТаблицаКурсовВалют.Найти(ВыборкаПоДокументам.Ссылка, "Ссылка");
		КурсВалюты				= ?(ЗначениеЗаполнено(КоэффициентПересчета), КоэффициентПересчета.Курс, 1);
		
		ОбластьШапки.Параметры.Заполнить(ВыборкаПоДокументам);
		
		ОбластьШапки.Параметры.НомерДокумента 				= ПрефиксацияОбъектовКлиентСервер.ПолучитьНомерНаПечать(ВыборкаПоДокументам.Номер, Ложь, Истина);
		ОбластьШапки.Параметры.ОснованиеНомер 				= ПрефиксацияОбъектовКлиентСервер.ПолучитьНомерНаПечать(ВыборкаПоДокументам.НомерОснования, Ложь, Истина);
		ОбластьШапки.Параметры.ФИОРуководителя 				= ВыборкаПоДокументам.Руководитель;
		ОбластьШапки.Параметры.ПодразделениеПредставление 	= СкладыСервер.ПолучитьПредставлениеСклада(ВыборкаПоДокументам.СкладПредставление);
		
		Если ЗначениеЗаполнено(ВыборкаПоДокументам.ДокументОснование) Тогда
			ПредставлениеОснования 	= ВыборкаПоДокументам.ДокументОснование.ПолучитьОбъект().Метаданные().Синоним;				
			ОбластьШапки.Параметры.ОснованиеПредставление = ПредставлениеОснования;
		КонецЕсли;
		ШтрихкодированиеПечатныхФорм.ВывестиШтрихкодВТабличныйДокумент(ТабДокумент, Макет, ОбластьШапки, ВыборкаПоДокументам.Ссылка);
		ТабДокумент.Вывести(ОбластьШапки);
		
		НомерСтраницы = 0;
		НомерСтроки   = 0;
		
		МассивВыводимыхОбластей = Новый Массив;
		МассивВыводимыхОбластей.Добавить(ОбластьСтрокаПервогоЛиста);
		
		Пока ВыборкаПоДатам.Следующий() Цикл
			
			НомерСтроки = НомерСтроки + 1;
			ОбластьСтрокаПервогоЛиста.Параметры.ДатаСписанияТовара = ВыборкаПоДокументам.ДатаДокумента;
			
			Если НомерСтроки = 1 Тогда // первая строка
				
				НомерСтраницы = НомерСтраницы + 1;
				ОбластьЗаголовокТаблицыПервогоЛиста.Параметры.НомерСтраницы = "Страница " + НомерСтраницы;
				ТабДокумент.Вывести(ОбластьЗаголовокТаблицыПервогоЛиста);
				
			ИначеЕсли НомерСтроки <> 1 И Не ТабДокумент.ПроверитьВывод(МассивВыводимыхОбластей) Тогда
				
				НомерСтраницы = НомерСтраницы + 1;
				ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
				ОбластьЗаголовокТаблицыПервогоЛиста.Параметры.НомерСтраницы = "Страница " + НомерСтраницы;
				ТабДокумент.Вывести(ОбластьЗаголовокТаблицыПервогоЛиста);
				
			КонецЕсли;
			
			ТабДокумент.Вывести(ОбластьСтрокаПервогоЛиста);
			
		КонецЦикла;
		
		ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		
		ИтогоСтоимость = 0;
		
		// Выводим многострочную часть документа
		КоличествоСтрок = ВыборкаСтрокТовары.Количество();
		НомерСтроки = 0;
		Пока ВыборкаСтрокТовары.Следующий() Цикл
			
			НомерСтроки = НомерСтроки + 1;
			
			ОбластьСтрокаВторогоЛиста.Параметры.Заполнить(ВыборкаСтрокТовары);
			
			КоличествоМест = ?(ВыборкаСтрокТовары.КоличествоМест = 0, ВыборкаСтрокТовары.Количество, ВыборкаСтрокТовары.КоличествоМест);
			ОбластьСтрокаВторогоЛиста.Параметры.КоличествоМест = КоличествоМест;
			
			ОбластьСтрокаВторогоЛиста.Параметры.ТоварНаименование = НоменклатураКлиентСервер.ПредставлениеНоменклатурыДляПечати(
				ВыборкаСтрокТовары.НоменклатураПредставление,
				ВыборкаСтрокТовары.ХарактеристикаПредставление
			);
			
			ЦенаНеЗадана = НЕ ЗначениеЗаполнено(ВыборкаСтрокТовары.Цена);
			ОбластьСтрокаВторогоЛиста.Параметры.Цена 		= ?(ЦенаНеЗадана, 0, ВыборкаСтрокТовары.Цена * КурсВалюты);
			ОбластьСтрокаВторогоЛиста.Параметры.Стоимость 	= ?(ЦенаНеЗадана, 0, ВыборкаСтрокТовары.Цена * ВыборкаСтрокТовары.КоличествоМест * КурсВалюты);
			
			Если НомерСтроки = 1 Тогда // первая строка
				
				НомерСтраницы = НомерСтраницы + 1;
				ОбластьЗаголовокТаблицыВторогоЛиста.Параметры.НомерСтраницы = "Страница " + НомерСтраницы;
				ТабДокумент.Вывести(ОбластьЗаголовокТаблицыВторогоЛиста);
				
			Иначе
				
				МассивВыводимыхОбластей.Очистить();
				МассивВыводимыхОбластей.Добавить(ОбластьСтрокаВторогоЛиста);
				
				Если НомерСтроки = КоличествоСтрок Тогда
					
					МассивВыводимыхОбластей.Добавить(ОбластьИтого);
					
				КонецЕсли;
				
				Если НомерСтроки <> 1 И Не ТабДокумент.ПроверитьВывод(МассивВыводимыхОбластей) Тогда
					
					
					НомерСтраницы = НомерСтраницы + 1;
					ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
					ОбластьЗаголовокТаблицыВторогоЛиста.Параметры.НомерСтраницы = "Страница " + НомерСтраницы;
					ТабДокумент.Вывести(ОбластьЗаголовокТаблицыВторогоЛиста);
					
				КонецЕсли;
				
			КонецЕсли;
			
			ТабДокумент.Вывести(ОбластьСтрокаВторогоЛиста);
			
			// Обновим итоги по документу
			ИтогоСтоимость = ИтогоСтоимость + ОбластьСтрокаВторогоЛиста.Параметры.Стоимость;
			
		КонецЦикла;
		
		// Выводим итоги по документу в общем
		ОбластьИтого.Параметры.Итого = ИтогоСтоимость;
		ТабДокумент.Вывести(ОбластьИтого);
		
		// Выводим подвал документа
		МассивВыводимыхОбластей.Очистить();
		МассивВыводимыхОбластей.Добавить(ОбластьПодвал);
		Если Не ТабДокумент.ПроверитьВывод(МассивВыводимыхОбластей) Тогда
			НомерСтраницы = НомерСтраницы + 1;
			ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		
		ОбластьПодвал.Параметры.Заполнить(ВыборкаПоДокументам);
		КопеекЦифрами = (ИтогоСтоимость - Цел(ИтогоСтоимость)) * 100;
		ОбластьПодвал.Параметры.КопеекЦифрами = Формат(КопеекЦифрами, "ЧЦ=2; ЧДЦ=0; ЧН='00'");
		ОбластьПодвал.Параметры.СуммаСписанияПрописью 	= РаботаСКурсамиВалют.СформироватьСуммуПрописью(Цел(ИтогоСтоимость), Справочники.Валюты.ПустаяСсылка(), Истина);
		ОбластьПодвал.Параметры.ДолжностьПредседателя	= ВыборкаПоДокументам.ДолжностьРуководителя;
		ОбластьПодвал.Параметры.ФИОпредседателя     	= ВыборкаПоДокументам.Руководитель;
		ОбластьПодвал.Параметры.ДолжностьЧленаКомиссии2 = НСтр("ru='Главный бухгалтер'");
		ОбластьПодвал.Параметры.ФИОЧленаКомиссии2       = ВыборкаПоДокументам.ГлавныйБухгалтер;
		ОбластьПодвал.Параметры.ДолжностьМОЛ           	= ВыборкаПоДокументам.ДолжностьКладовщика;
		ОбластьПодвал.Параметры.ФИОМОЛ                 	= ФизическиеЛица.ФамилияИнициалыФизЛица(ВыборкаПоДокументам.Кладовщик);
		
		ТабДокумент.Вывести(ОбластьПодвал);
		
		НомерДокумента = НомерДокумента + 1;
		Если НомерДокумента < КоличествоДокументов Тогда
			ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		
	КонецЦикла;
	
	ТабДокумент.АвтоМасштаб = Истина;
	
	Если ПривилегированныйРежим() Тогда
		УстановитьПривилегированныйРежим(Ложь);
	КонецЕсли;
	
	Возврат ТабДокумент;
	
КонецФункции

Функция СформироватьПечатнуюФормуАктСписанияТоваров(МассивОбъектов, ОбъектыПечати)

	УстановитьПривилегированныйРежим(Истина);
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("МассивОбъектов", МассивОбъектов);
	ДопКолонка = ФормированиеПечатныхФорм.ИмяДополнительнойКолонки();
	ВыводитьДопКолонку = ЗначениеЗаполнено(ДопКолонка);
	Запрос.Текст =
	"ВЫБРАТЬ
	|	Документ.Ссылка КАК Ссылка,
	|	Документ.Номер КАК Номер,
	|	Документ.Дата КАК Дата,
	|	Документ.Склад КАК Склад,
	|	Документ.Подразделение КАК Подразделение,
	|	Документ.Организация КАК Организация,
	|	ПРЕДСТАВЛЕНИЕ(Документ.Склад) КАК СкладПредставление,
	|	ПРЕДСТАВЛЕНИЕ(Документ.Подразделение) КАК ПодразделениеПредставление,
	|	Документ.Организация.НаименованиеСокращенное КАК ОрганизацияПредставление,
	|	Документ.Организация.Префикс КАК Префикс,
	|	Документ.Склад.ТекущийОтветственный КАК Кладовщик,
	|	Документ.Ответственный.ФизическоеЛицо КАК Ответственный,
	|	Документ.ДокументОснование КАК ДокументОснование,
	|	Документ.ДокументОснование КАК Основание,
	|	Документ.ДокументОснование.Номер КАК НомерОснования,
	|	Документ.ДокументОснование.Дата КАК ДатаОснования
	|ИЗ
	|	Документ.СписаниеНедостачТоваров КАК Документ
	|ГДЕ
	|	Документ.Ссылка В(&МассивОбъектов)
	|
	|УПОРЯДОЧИТЬ ПО
	|	Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СписаниеНедостачТоваровТовары.Ссылка КАК Ссылка,
	|	СписаниеНедостачТоваровТовары.НомерСтроки КАК НомерСтроки,
	|	СписаниеНедостачТоваровТовары.Номенклатура КАК Номенклатура,
	|	СписаниеНедостачТоваровТовары.Характеристика КАК Характеристика,
	|	СписаниеНедостачТоваровТовары.Количество КАК Количество,
	|	" + ?(ВыводитьДопКолонку, "СписаниеНедостачТоваровТовары.Номенклатура." + ДопКолонка +" КАК ДопКолонка,", "") + "
	|	СписаниеНедостачТоваровТовары.Номенклатура.НаименованиеПолное КАК НоменклатураПредставление,
	|	СписаниеНедостачТоваровТовары.Характеристика.НаименованиеПолное КАК ХарактеристикаПредставление,
	|	ПРЕДСТАВЛЕНИЕ(СписаниеНедостачТоваровТовары.Номенклатура.ЕдиницаИзмерения) КАК ЕдиницаИзмеренияПредставление
	|ИЗ
	|	Документ.СписаниеНедостачТоваров.Товары КАК СписаниеНедостачТоваровТовары
	|ГДЕ
	|	СписаниеНедостачТоваровТовары.Ссылка В(&МассивОбъектов)
	|УПОРЯДОЧИТЬ ПО
	|	Ссылка,
	|	НомерСтроки
	|ИТОГИ ПО
	|	Ссылка";
	
	Результаты = Запрос.ВыполнитьПакет();
	ВыборкаПоДокументам = Результаты[0].Выбрать();
	ВыборкаПоТоварам 	= Результаты[1].Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	РеквизитыДокумента 	= Новый Структура("Номер, Дата, Префикс");
	СинонимДокумента 	= НСтр("ru='Акт о списании товаров'");
	
	ТабДокумент = Новый ТабличныйДокумент;
	ТабДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_СписаниеНедостачТоваров_АктОСписанииТоваров";
	
	Макет = УправлениеПечатью.ПолучитьМакет("Документ.СписаниеНедостачТоваров.ПФ_MXL_АктОСписанииТоваров");
	ОбластьЗаголовок = Макет.ПолучитьОбласть("Заголовок");
	ОбластьОснование  = Макет.ПолучитьОбласть("Основание");
	
	ОбластьНомераШапка = Макет.ПолучитьОбласть("ШапкаТаблицы|НомерСтроки");
	ОбластьКодовШапка  = Макет.ПолучитьОбласть("ШапкаТаблицы|КолонкаКодов");
	ОбластьТоварШапка  = Макет.ПолучитьОбласть("ШапкаТаблицы|Товар");
	ОбластьДанныеШапка = Макет.ПолучитьОбласть("ШапкаТаблицы|Данные");
	Если Не ВыводитьДопКолонку Тогда
		Макет.Область("Товар").ШиринаКолонки = Макет.Область("Товар").ШиринаКолонки
			+ Макет.Область("КолонкаКодов").ШиринаКолонки;
	КонецЕсли;
	ОбластьНомераСтрока = Макет.ПолучитьОбласть("Строка|НомерСтроки");
	ОбластьКодовСтрока  = Макет.ПолучитьОбласть("Строка|КолонкаКодов");
	ОбластьТоварСтрока  = Макет.ПолучитьОбласть("Строка|Товар");
	ОбластьДанныхСтрока = Макет.ПолучитьОбласть("Строка|Данные");
	
	ОбластьНомераПодвалТаблицы = Макет.ПолучитьОбласть("ПодвалТаблицы|НомерСтроки");
	ОбластьКодовПодвалТаблицы  = Макет.ПолучитьОбласть("ПодвалТаблицы|КолонкаКодов");
	ОбластьТоварПодвалТаблицы  = Макет.ПолучитьОбласть("ПодвалТаблицы|Товар");
	ОбластьДанныхПодвалТаблицы = Макет.ПолучитьОбласть("ПодвалТаблицы|Данные");
	
	ОбластьПодписи       	= Макет.ПолучитьОбласть("Подписи");
	ОбластьКоличествоВсего 	= Макет.ПолучитьОбласть("КоличествоВсего");
	
	ПервыйДокумент = Истина;
	Пока ВыборкаПоДокументам.Следующий() Цикл
		
		Если Не ПервыйДокумент Тогда
			ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		
		ПервыйДокумент = Ложь;
		
		НомерСтрокиНачало = ТабДокумент.ВысотаТаблицы + 1;
		
		ЗаполнитьЗначенияСвойств(РеквизитыДокумента, ВыборкаПоДокументам);
		ОбластьЗаголовок.Параметры.Заполнить(ВыборкаПоДокументам);
		ОбластьЗаголовок.Параметры.ТекстЗаголовка = ОбщегоНазначенияУТКлиентСервер.СформироватьЗаголовокДокумента(РеквизитыДокумента, СинонимДокумента);
		ОбластьЗаголовок.Параметры.СкладПредставление = СкладыСервер.ПолучитьПредставлениеСклада(ВыборкаПоДокументам.СкладПредставление);
		ШтрихкодированиеПечатныхФорм.ВывестиШтрихкодВТабличныйДокумент(ТабДокумент, Макет, ОбластьЗаголовок, ВыборкаПоДокументам.Ссылка);
		ТабДокумент.Вывести(ОбластьЗаголовок);
		
		Если ЗначениеЗаполнено(ВыборкаПоДокументам.ДокументОснование) Тогда
			РеквизитыОснования = Новый Структура("Номер, Дата, Префикс", ВыборкаПоДокументам.НомерОснования, ВыборкаПоДокументам.ДатаОснования);
			ПредставлениеОснования 	= ВыборкаПоДокументам.Основание.ПолучитьОбъект().Метаданные().Синоним;				
			ОбластьОснование.Параметры.ОснованиеПредставление = ОбщегоНазначенияУТКлиентСервер.СформироватьЗаголовокДокумента(РеквизитыОснования, ПредставлениеОснования);
			ТабДокумент.Вывести(ОбластьОснование);
		КонецЕсли;
		// Вывод строк.
		Если НЕ ВыборкаПоТоварам.НайтиСледующий(Новый Структура("Ссылка",ВыборкаПоДокументам.Ссылка)) Тогда
			Продолжить;
		КонецЕсли;
		
		// Вывод шапки.
		ТабДокумент.Вывести(ОбластьНомераШапка);
		
		Если ВыводитьДопКолонку Тогда
			ОбластьКодовШапка.Параметры.ДопКолонка = ДопКолонка;
			ТабДокумент.Присоединить(ОбластьКодовШапка);
		КонецЕсли;
		
		ТабДокумент.Присоединить(ОбластьТоварШапка);
		ТабДокумент.Присоединить(ОбластьДанныеШапка);
		
		ВсегоНаименований = 0;
		
		ВыборкаПоСтрокам = ВыборкаПоТоварам.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		Пока ВыборкаПоСтрокам.Следующий() Цикл
			ОбластьНомераСтрока.Параметры.Заполнить(ВыборкаПоСтрокам);
			ТабДокумент.Вывести(ОбластьНомераСтрока);
			Если ВыводитьДопКолонку Тогда
				ОбластьКодовСтрока.Параметры.Заполнить(ВыборкаПоСтрокам);
				ТабДокумент.Присоединить(ОбластьКодовСтрока);
			КонецЕсли;
			
			// Номенклатура.
			ОбластьТоварСтрока.Параметры.Номенклатура = ВыборкаПоСтрокам.Номенклатура;
			ОбластьТоварСтрока.Параметры.НоменклатураПредставление = НоменклатураКлиентСервер.ПредставлениеНоменклатурыДляПечати(
				ВыборкаПоСтрокам.НоменклатураПредставление,
				ВыборкаПоСтрокам.ХарактеристикаПредставление
			);
			ТабДокумент.Присоединить(ОбластьТоварСтрока);
			// Данные количестве.
			ОбластьДанныхСтрока.Параметры.Заполнить(ВыборкаПоСтрокам);
			ТабДокумент.Присоединить(ОбластьДанныхСтрока);
			ВсегоНаименований = ВсегоНаименований + 1;
		КонецЦикла;
		
		// Вывод итогов.
		ТабДокумент.Вывести(ОбластьНомераПодвалТаблицы);
		Если ВыводитьДопКолонку Тогда
			ТабДокумент.Присоединить(ОбластьКодовПодвалТаблицы);
		КонецЕсли;
		ТабДокумент.Присоединить(ОбластьТоварПодвалТаблицы);
		ТабДокумент.Присоединить(ОбластьДанныхПодвалТаблицы);
		ТекстИтоговойСтроки = НСтр("ru = 'Всего наименований %ВсегоНаименований%'");
		ТекстИтоговойСтроки = СтрЗаменить(ТекстИтоговойСтроки,"%ВсегоНаименований%", ВсегоНаименований);
		ОбластьКоличествоВсего.Параметры.ИтоговаяСтрока = ТекстИтоговойСтроки;
		ТабДокумент.Вывести(ОбластьКоличествоВсего);
		
		// Вывод подписей.
		ОбластьПодписи.Параметры.Ответственный = ФизическиеЛица.ФамилияИнициалыФизЛица(ВыборкаПоДокументам.Ответственный);
		ОбластьПодписи.Параметры.Кладовщик = ФизическиеЛица.ФамилияИнициалыФизЛица(ВыборкаПоДокументам.Кладовщик);		
		ТабДокумент.Вывести(ОбластьПодписи);
		
		УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабДокумент, НомерСтрокиНачало, ОбъектыПечати, ВыборкаПоДокументам.Ссылка);
		
	КонецЦикла;
	
	Если ПривилегированныйРежим() Тогда
		УстановитьПривилегированныйРежим(Ложь);
	КонецЕсли;
	
	Возврат ТабДокумент;
	
КонецФункции
////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

////////////////////////////////////////////////////////////////////////////////
// Обновление информационной базы

Процедура ЗаполнитьИсточникИнформацииОЦенахДляПечати() Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	СписаниеНедостачТоваров.Ссылка КАК Ссылка
	|ИЗ
	|	Документ.СписаниеНедостачТоваров КАК СписаниеНедостачТоваров
	|ГДЕ
	|	СписаниеНедостачТоваров.ИсточникИнформацииОЦенахДляПечати = ЗНАЧЕНИЕ(Перечисление.ИсточникиИнформацииОЦенахДляПечати.ПустаяСсылка)";
		
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		
		ДокументОбъект = Выборка.Ссылка.ПолучитьОбъект();
		ДокументОбъект.ИсточникИнформацииОЦенахДляПечати = Перечисления.ИсточникиИнформацииОЦенахДляПечати.ПоВидуЦен;
		ДокументОбъект.ОбменДанными.Загрузка = Истина;
		ДокументОбъект.Записать();
		
	КонецЦикла;
	
КонецПроцедуры


#КонецЕсли