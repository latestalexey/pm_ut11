#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

////////////////////////////////////////////////////////////////////////////////
// ПРОГРАММНЫЙ ИНТЕРФЕЙС

// Возвращает список кодов видов операций,
//	предусмотренных законодательством.
//
// Возвращаемое значение:
//	СписокЗначений - Список кодов видов операций.
//
Функция СписокКодовВидовОпераций() Экспорт
	
	СписокКодов = Новый СписокЗначений;
	
	СписокКодов.Добавить("02", НСтр("ru='02 Авансы выданные'"));
	СписокКодов.Добавить("05", НСтр("ru='05 Авансы выданные по договорам комиссии'"));
	СписокКодов.Добавить("12", НСтр("ru='12 Авансы выданные за товары, права, п.3,4,5.1 статьи 154, пп.1-4 статьи 155 НК'"));
	
	Возврат СписокКодов;
	
КонецФункции

// Переформировывает движения счетов-фактур по регистру НДСЗаписиКнигиПродаж без перепроведения документа.
// Сбрасывает статус отражения в регл. учете.
//
// Параметры:
//	МассивДокументов - Массив - Документы, движения которых необходимо актуализировать.
//
Процедура СформироватьДвиженияПоКнигеПродаж(МассивРегистраторов) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	МассивДокументов = Новый Массив;
	
	Запрос = Новый Запрос("
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	СчетФактура.Ссылка КАК Документ,
	|	СчетФактура.Дата КАК ДатаДокумента,
	|	СчетФактура.Организация КАК ОрганизацияДокумента,
	|	СчетФактура.Контрагент КАК Контрагент,
	|	СчетФактура.ДокументОснование КАК ДокументОснование
	|
	|ИЗ
	|	РегистрНакопления.РасчетыСПоставщикамиПоДокументам КАК Расчеты
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Документ.СчетФактураПолученныйАванс КАК СчетФактура
	|	ПО
	|		Расчеты.РасчетныйДокумент = СчетФактура.ДокументОснование
	|
	|ГДЕ
	|	Расчеты.Регистратор В (&МассивРегистраторов)
	|	И СчетФактура.Проведен
	|");
	Запрос.УстановитьПараметр("МассивРегистраторов", МассивРегистраторов);
	
	ЗапросТаблицыДвижений = Новый Запрос;
	ЗапросТаблицыДвижений.Текст = ТекстЗапросаТаблицаНДСЗаписиКнигиПокупок()
	                              + ТекстЗапросаТаблицаНДСЗаписиКнигиПродаж();
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		
		ЗапросТаблицыДвижений.УстановитьПараметр("Ссылка",         Выборка.Документ);
		ЗапросТаблицыДвижений.УстановитьПараметр("Период",         Выборка.ДатаДокумента);
		ЗапросТаблицыДвижений.УстановитьПараметр("Организация",    Выборка.ОрганизацияДокумента);
		ЗапросТаблицыДвижений.УстановитьПараметр("Поставщик",      Выборка.Контрагент);
		ЗапросТаблицыДвижений.УстановитьПараметр("ДокументОплаты", Выборка.ДокументОснование);
		ЗапросТаблицыДвижений.УстановитьПараметр("ДатаОплаты",     ПолучитьДатуОплаты(Выборка.ДокументОснование));
		
		Результат = ЗапросТаблицыДвижений.ВыполнитьПакет();
		
		ТаблицаНДСЗаписиКнигиПродаж = ВыполнитьЗачетАванса(
			Результат[0].Выгрузить(),
			Результат[1].Выгрузить(),
			Выборка);
		
		НаборЗаписейКнигиПродаж = РегистрыНакопления.НДСЗаписиКнигиПродаж.СоздатьНаборЗаписей();
		НаборЗаписейКнигиПродаж.Отбор.Регистратор.Установить(Выборка.Документ);
		НаборЗаписейКнигиПродаж.Загрузить(ТаблицаНДСЗаписиКнигиПродаж);
		НаборЗаписейКнигиПродаж.УстановитьАктивность(Истина);
		НаборЗаписейКнигиПродаж.Записать();
		
		МассивДокументов.Добавить(Выборка.Документ);
		
	КонецЦикла;
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

////////////////////////////////////////////////////////////////////////////////
// Проведение

Процедура ИнициализироватьДанныеДокумента(ДокументСсылка, ДополнительныеСвойства) Экспорт

	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Ссылка", ДокументСсылка);
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ДанныеДокумента.Ссылка КАК Ссылка,
	|	ДанныеДокумента.Организация КАК Организация,
	|	ДанныеДокумента.Контрагент КАК Контрагент,
	|	ДанныеДокумента.ДокументОснование КАК ДокументОснование,
	|	ЕСТЬNULL(ДанныеДокумента.ДокументОснование.Дата, НЕОПРЕДЕЛЕНО) КАК ДатаОснования,
	|	ДанныеДокумента.Дата КАК Период,
	|	ДанныеДокумента.КодВидаОперации,
	|	ДанныеДокумента.ДатаВходящегоДокумента,
	|	ДанныеДокумента.НомерВходящегоДокумента,
	|	ДанныеДокумента.ПолученВЭлектронномВиде
	|ИЗ
	|	Документ.СчетФактураПолученныйАванс КАК ДанныеДокумента
	|ГДЕ
	|	ДанныеДокумента.Ссылка = &Ссылка";
	
	Реквизиты = Запрос.Выполнить().Выбрать();
	Реквизиты.Следующий();
	
	Запрос.УстановитьПараметр("Период",         			Реквизиты.Период);	
	Запрос.УстановитьПараметр("Организация",    			Реквизиты.Организация);	
	Запрос.УстановитьПараметр("Поставщик",      			Реквизиты.Контрагент);	
	Запрос.УстановитьПараметр("ДокументОплаты", 			Реквизиты.ДокументОснование);
	Запрос.УстановитьПараметр("ДатаОснования", 				Реквизиты.ДатаОснования);
	Запрос.УстановитьПараметр("ДатаОплаты", 				ПолучитьДатуОплаты(Реквизиты.ДокументОснование));	
	Запрос.УстановитьПараметр("КодВидаОперации",			Реквизиты.КодВидаОперации);
	Запрос.УстановитьПараметр("Номер",						Реквизиты.НомерВходящегоДокумента);
	Запрос.УстановитьПараметр("Дата", 						Реквизиты.ДатаВходящегоДокумента);
	Запрос.УстановитьПараметр("ПолученВЭлектронномВиде", 	Реквизиты.ПолученВЭлектронномВиде);
	Запрос.УстановитьПараметр("ВалютаРеглУчета",			Константы.ВалютаРегламентированногоУчета.Получить());
	
	Запрос.Текст = 	ТекстЗапросаТаблицаЖурналУчетаСчетовФактур()
					+ ТекстЗапросаТаблицаНДСЗаписиКнигиПокупок()
					+ ТекстЗапросаТаблицаНДСЗаписиКнигиПродаж ()
					;
					
	Результат = Запрос.ВыполнитьПакет();
	
	ТаблицыДляДвижений = ДополнительныеСвойства.ТаблицыДляДвижений;
	ТаблицыДляДвижений.Вставить("ТаблицаЖурналУчетаСчетовФактур", 	Результат[0].Выгрузить());
	ТаблицыДляДвижений.Вставить("ТаблицаНДСЗаписиКнигиПокупок",  Результат[1].Выгрузить());
	ТаблицыДляДвижений.Вставить("ТаблицаНДСЗаписиКнигиПродаж", ВыполнитьЗачетАванса(
		Результат[1].Выгрузить(), 
		Результат[2].Выгрузить(), 
		Реквизиты)
	);

	
КонецПроцедуры

Функция ТекстЗапросаТаблицаЖурналУчетаСчетовФактур()
	
	ТекстЗапроса = "
	|ВЫБРАТЬ
	|	&Период КАК Период,
	|	&Организация КАК Организация,
	|	&Поставщик КАК Контрагент,
	|	&Ссылка КАК СчетФактура,
	|	&Период КАК ДатаВыставленияПолучения,
	|	ЗНАЧЕНИЕ(Перечисление.ЧастиЖурналаУчетаСчетовФактур.ПолученныеСчетаФактуры) КАК ЧастьЖурнала,
	|	ВЫБОР
	|		КОГДА &ПолученВЭлектронномВиде
	|			ТОГДА 2
	|		ИНАЧЕ 1
	|	КОНЕЦ КАК КодСпособаВыставленияПолучения,
	|	&КодВидаОперации КАК КодВидаОперации,
	|	&Номер КАК НомерСчетаФактуры,
	|	&Дата КАК ДатаСчетаФактуры,
	|	&ВалютаРеглУчета КАК Валюта, 
	|	ТаблицаАвансы.Сумма КАК СуммаПоСчетуФактуре,
	|	ТаблицаАвансы.СуммаНДС КАК СуммаНДС,
	|	0 КАК СуммаПоСчетуФактуреРазницаУменьшение,
	|	0 КАК СуммаПоСчетуФактуреРазницаУвеличение,
	|	0 КАК СуммаНДСРазницаУменьшение,
	|	0 КАК СуммаНДСРазницаУвеличение,
	|	ЛОЖЬ КАК ПоСтавкеБезНДС,
	|	ЛОЖЬ КАК СчетФактураНеВыставляется
	|ИЗ
	|	Документ.СчетФактураПолученныйАванс.Авансы КАК ТаблицаАвансы
	|ГДЕ
	|	ТаблицаАвансы.Ссылка = &Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|";
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаНДСЗаписиКнигиПокупок()
	
	ТекстЗапроса = "
	|ВЫБРАТЬ
	|	&Период КАК Период,
	|	&Организация КАК Организация,
	|	&Поставщик КАК Поставщик,
	|	&ДокументОплаты КАК СчетФактура,
	|	&ДатаОплаты КАК ДатаОплаты,
	|	&ДокументОплаты КАК ДокументОплаты,
	|	ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.АвансыВыданные) КАК ВидЦенности,
	|	ЗНАЧЕНИЕ(Перечисление.СобытияПоНДСПокупки.ПредъявленНДСКВычету) КАК Событие,
	|	&Период КАК ДатаСобытия,
	|	ТаблицаАвансы.СтавкаНДС КАК СтавкаНДС,
	|	ТаблицаАвансы.СуммаНДС КАК НДС,
	|	ВЫБОР
	|		КОГДА ТаблицаАвансы.Сумма <> 0
	|			ТОГДА ТаблицаАвансы.Сумма - ТаблицаАвансы.СуммаНДС
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК СуммаБезНДС
	|ИЗ
	|	Документ.СчетФактураПолученныйАванс.Авансы КАК ТаблицаАвансы
	|ГДЕ
	|	ТаблицаАвансы.Ссылка = &Ссылка
	|	И &Организация <> ЗНАЧЕНИЕ(Справочник.Организации.УправленческаяОрганизация)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|";
	
	Возврат ТекстЗапроса	
	
КонецФункции

Функция ТекстЗапросаТаблицаНДСЗаписиКнигиПродаж()
	
	ТекстЗапроса = "
	|ВЫБРАТЬ
	|	РасчетыСПоставщикамиПоДокументамОбороты.Период КАК Период,
	|	&Организация КАК Организация,
	|	РасчетыСПоставщикамиПоДокументамОбороты.АналитикаУчетаПоПартнерам.Контрагент КАК Покупатель,
	|	&ДокументОплаты КАК СчетФактура,
	|	ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.АвансыВыданные) КАК ВидЦенности,
	|	РасчетыСПоставщикамиПоДокументамОбороты.Период КАК ДатаОплаты,
	|	&ДокументОплаты КАК ДокументОплаты,
	|	ЗНАЧЕНИЕ(Перечисление.СобытияПоНДСПродажи.ВосстановлениеНДС) КАК Событие,
	|	РасчетыСПоставщикамиПоДокументамОбороты.Период КАК ДатаСобытия,
	|	ВЫБОР 
	|		КОГДА РасчетыСПоставщикамиПоДокументамОбороты.ПредоплатаРеглРасход > 0 
	|			ТОГДА РасчетыСПоставщикамиПоДокументамОбороты.ПредоплатаРеглРасход
	|		ИНАЧЕ (-РасчетыСПоставщикамиПоДокументамОбороты.ПредоплатаРеглПриход)
	|	КОНЕЦ КАК СуммаЗачета
	|ИЗ
	|	РегистрНакопления.РасчетыСПоставщикамиПоДокументам.Обороты(
	|			,
	|			,
	|			Регистратор,
	|			АналитикаУчетаПоПартнерам.Организация = &Организация
	|				И РасчетныйДокумент = &ДокументОплаты) КАК РасчетыСПоставщикамиПоДокументамОбороты
	|ГДЕ
	|	РасчетыСПоставщикамиПоДокументамОбороты.ПредоплатаРеглРасход > 0
	|	ИЛИ РасчетыСПоставщикамиПоДокументамОбороты.ПредоплатаРеглПриход < 0
	|	И &Организация <> ЗНАЧЕНИЕ(Справочник.Организации.УправленческаяОрганизация)
	|
	|УПОРЯДОЧИТЬ ПО
	|	Период
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|";
	
	Возврат ТекстЗапроса	
	
КонецФункции

////////////////////////////////////////////////////////////////////////////////
// Проведение по регл. учету

Функция ТекстОтраженияВРеглУчете() Экспорт

	ТекстВосстановлениеНДС = "
		|ВЫБРАТЬ // Восстановление НДС с полученного аванса <Дт 76.ВА :: Кт 68.02>
		|	Операция.Дата КАК Период,
		|	Операция.Организация КАК Организация,
		|	НЕОПРЕДЕЛЕНО КАК ИдентификаторСтроки,
		|
		|	ЕСТЬNULL(Регистр.НДС,0) КАК Сумма,
		|
		|	НЕОПРЕДЕЛЕНО КАК ВидСчетаДт,
		|	НЕОПРЕДЕЛЕНО КАК ГруппаФинансовогоУчетаДт,
		|	НЕОПРЕДЕЛЕНО КАК МестоУчетаДт,
		|
		|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаДт,
		|	ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка) КАК ПодразделениеДт,
		|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.НДСпоАвансамИПредоплатамВыданным) КАК СчетДт,
		|
		|	Операция.Контрагент КАК СубконтоДт1,
		|	Операция.ДокументОснование КАК СубконтоДт2,
		|	НЕОПРЕДЕЛЕНО КАК СубконтоДт3,
		|
		|	0 КАК ВалютнаяСуммаДт,
		|	0 КАК КоличествоДт,
		|	0 КАК СуммаНУДт,
		|	0 КАК СуммаПРДт,
		|	0 КАК СуммаВРДт,
		|
		|	НЕОПРЕДЕЛЕНО КАК ВидСчетаКт,
		|	НЕОПРЕДЕЛЕНО КАК ГруппаФинансовогоУчетаКт,
		|	НЕОПРЕДЕЛЕНО КАК МестоУчетаКт,
		|
		|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаКт,
		|	ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка) КАК ПодразделениеКт,
		|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.НДС) КАК СчетКт,
		|
		|	ЗНАЧЕНИЕ(Перечисление.ВидыПлатежейВГосБюджет.Налог) КАК СубконтоКт1,
		|	НЕОПРЕДЕЛЕНО КАК СубконтоКт2,
		|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
		|
		|	0 КАК ВалютнаяСуммаКт,
		|	0 КАК КоличествоКт,
		|	0 КАК СуммаНУКт,
		|	0 КАК СуммаПРКт,
		|	0 КАК СуммаВРКт
		|ИЗ
		|	Документ.СчетФактураПолученныйАванс КАК Операция
		|
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
		|		РегистрНакопления.НДСЗаписиКнигиПродаж КАК Регистр
		|	ПО
		|		Регистр.Регистратор = Операция.Ссылка
		|ГДЕ
		|	Операция.Ссылка = &Ссылка
		|";
		
	ТекстВычетНДС = "
		|ВЫБРАТЬ // Вычет НДС с полученного аванса <Дт 68.02 :: Кт 76.ВА>
		|	ЕСТЬNULL(Регистр.Период, Операция.Дата) КАК Период,
		|	Операция.Организация КАК Организация,
		|	НЕОПРЕДЕЛЕНО КАК ИдентификаторСтроки,
		|
		|	ЕСТЬNULL(Регистр.НДС,0) КАК Сумма,
		|
		|	НЕОПРЕДЕЛЕНО КАК ВидСчетаДт,
		|	НЕОПРЕДЕЛЕНО КАК ГруппаФинансовогоУчетаДт,
		|	НЕОПРЕДЕЛЕНО КАК МестоУчетаДт,
		|
		|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаДт,
		|	ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка) КАК ПодразделениеДт,
		|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.НДС) КАК СчетДт,
		|
		|	ЗНАЧЕНИЕ(Перечисление.ВидыПлатежейВГосБюджет.Налог) КАК СубконтоДт1,
		|	НЕОПРЕДЕЛЕНО КАК СубконтоДт2,
		|	НЕОПРЕДЕЛЕНО КАК СубконтоДт3,
		|
		|	0 КАК ВалютнаяСуммаДт,
		|	0 КАК КоличествоДт,
		|	0 КАК СуммаНУДт,
		|	0 КАК СуммаПРДт,
		|	0 КАК СуммаВРДт,
		|
		|	НЕОПРЕДЕЛЕНО КАК ВидСчетаКт,
		|	НЕОПРЕДЕЛЕНО КАК ГруппаФинансовогоУчетаКт,
		|	НЕОПРЕДЕЛЕНО КАК МестоУчетаКт,
		|
		|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаКт,
		|	ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка) КАК ПодразделениеКт,
		|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.НДСпоАвансамИПредоплатамВыданным) КАК СчетКт,
		|
		|	Операция.Контрагент КАК СубконтоКт1,
		|	Операция.ДокументОснование КАК СубконтоКт2,
		|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
		|
		|	0 КАК ВалютнаяСуммаКт,
		|	0 КАК КоличествоКт,
		|	0 КАК СуммаНУКт,
		|	0 КАК СуммаПРКт,
		|	0 КАК СуммаВРКт
		|ИЗ
		|	Документ.СчетФактураПолученныйАванс КАК Операция
		|
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
		|		РегистрНакопления.НДСЗаписиКнигиПокупок КАК Регистр
		|	ПО
		|		Регистр.Регистратор = Операция.Ссылка
		|ГДЕ
		|	Операция.Ссылка = &Ссылка
		|";
			   	
	Возврат
		ТекстВосстановлениеНДС
		+ " ОБЪЕДИНИТЬ ВСЕ " + ТекстВычетНДС;
	
КонецФункции

////////////////////////////////////////////////////////////////////////////////
// Прочее

Функция ВыполнитьЗачетАванса(ТаблицаАванса,ТаблицаЗачетАванса,Реквизиты)
	
	ТаблицаЗаписиКнигиПродаж = РегистрыНакопления.НДСЗаписиКнигиПродаж.СоздатьНаборЗаписей().ВыгрузитьКолонки();
	ТаблицаЗаписиКнигиПродаж.Колонки.Удалить("Активность");
	
	ДатаПоступленияАванса = ТаблицаАванса[0].Период;	
	
	Для Каждого ПогашенныйАвансПоСФ Из ТаблицаЗачетАванса Цикл
		
		ДатаЗачетаАванса = ПогашенныйАвансПоСФ.Период;
		
		//Определение сумм для зачета
		МассивСуммаБезНДС = Новый Массив();
		МассивСуммаНДС = Новый Массив();
		
		СуммаБезНДС = 0;
		СуммаНДС = 0;
		
		Для Каждого СтрокаАванса Из ТаблицаАванса Цикл
			
			МассивСуммаБезНДС.Добавить(СтрокаАванса.СуммаБезНДС);
			МассивСуммаНДС.Добавить(СтрокаАванса.НДС);

			СуммаБезНДС = СуммаБезНДС + СтрокаАванса.СуммаБезНДС;
			СуммаНДС = СуммаНДС + СтрокаАванса.НДС;
			
		КонецЦикла; 

		СуммаСНДС = Мин(ПогашенныйАвансПоСФ.СуммаЗачета, (СуммаБезНДС+СуммаНДС));
		Если СуммаСНДС = 0 Тогда
			Продолжить;
		КонецЕсли;

		СуммаБезНДС = Окр(СуммаБезНДС * СуммаСНДС/(СуммаБезНДС + СуммаНДС),2);
		СуммаНДС = СуммаСНДС - СуммаБезНДС;
			
		Если СуммаБезНДС > 0 Тогда
			МассивСуммаБезНДС = ОбщегоНазначенияУТКлиентСервер.РаспределитьПропорционально(СуммаБезНДС, МассивСуммаБезНДС);
		КонецЕсли;
		
		Если СуммаНДС > 0 Тогда
			МассивСуммаНДС = ОбщегоНазначенияУТКлиентСервер.РаспределитьПропорционально(СуммаНДС, МассивСуммаНДС);
		КонецЕсли; 
		
		Счетчик =0;
		
		//Зачет аванса - записи книги продаж
		Для Каждого СтрокаАванса Из ТаблицаАванса Цикл
			
			Если ?(СуммаБезНДС > 0, МассивСуммаБезНДС[Счетчик], 0) = 0 
				И ?(СуммаНДС > 0, МассивСуммаНДС[Счетчик], 0) = 0 Тогда
				Продолжить;
			КонецЕсли; 
			
			СтрокаРезультата = ТаблицаЗаписиКнигиПродаж.Добавить();
			ЗаполнитьЗначенияСвойств(СтрокаРезультата, ПогашенныйАвансПоСФ);
			
			СтрокаРезультата.СчетФактура	= СтрокаАванса.СчетФактура;
			СтрокаРезультата.Покупатель		= СтрокаАванса.Поставщик;
			СтрокаРезультата.СтавкаНДС		= СтрокаАванса.СтавкаНДС;

			СтрокаРезультата.СуммаБезНДС	= ?(СуммаБезНДС > 0, МассивСуммаБезНДС[Счетчик],0);
			СтрокаРезультата.НДС			=  ?(СуммаНДС > 0, МассивСуммаНДС[Счетчик],0);

			Счетчик = Счетчик + 1;
			
		КонецЦикла; 
	КонецЦикла;
	
	Возврат ТаблицаЗаписиКнигиПродаж;
	
КонецФункции

Функция ПолучитьДатуОплаты(ДокументОснование)
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	МИНИМУМ(ДенежныеСредстваКСписаниюБезналичныеОстаткиИОбороты.Период) КАК ДатаОплаты
	|ИЗ
	|	РегистрНакопления.ДенежныеСредстваКСписаниюБезналичные.ОстаткиИОбороты(, , День, , Документ = &ДокументОплаты) КАК ДенежныеСредстваКСписаниюБезналичныеОстаткиИОбороты
	|ГДЕ
	|	ДенежныеСредстваКСписаниюБезналичныеОстаткиИОбороты.СуммаКонечныйОстаток = 0"
	;
	
	Запрос.УстановитьПараметр("ДокументОплаты",ДокументОснование);
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Если Выборка.Следующий() Тогда
		Возврат Выборка.ДатаОплаты
	Иначе
		Возврат ДокументОснование.Дата;
	КонецЕсли;	
	
КонецФункции	

#КонецЕсли
