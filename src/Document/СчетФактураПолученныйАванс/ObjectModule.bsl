#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ 

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, СтандартнаяОбработка)
	
	ТипОснования = ТипЗнч(ДанныеЗаполнения);
	
	СтрокаАванс = Неопределено;
	Если ТипОснования = Тип("ДокументСсылка.СписаниеБезналичныхДенежныхСредств") 
		ИЛИ ТипОснования = Тип("ДокументСсылка.РасходныйКассовыйОрдер") Тогда
		
		ДокументОснование = ДанныеЗаполнения;
		Организация       = ДанныеЗаполнения.Организация;
		Контрагент        = ДоходыИРасходыСервер.ПолучитьКонтрагентаИзОснования(ДокументОснование);
		
		СуммаАванса = СуммаАванса(ДокументОснование);
		Если СуммаАванса <> 0 Тогда
			СтрокаАванс = Авансы.Добавить();
			СтрокаАванс.Сумма = СуммаАванса;
		КонецЕсли; 
		
	ИначеЕсли ТипОснования = Тип("ДокументСсылка.АвансовыйОтчет") Тогда
		
		ДокументОснование = ДанныеЗаполнения;
		Организация       = ДанныеЗаполнения.Организация;
		
	ИначеЕсли ТипОснования = Тип("Структура") Тогда
		
		ЗаполнитьЗначенияСвойств(ЭтотОбъект, ДанныеЗаполнения);
		
		СтрокаАванс = Авансы.Добавить();
		ЗаполнитьЗначенияСвойств(СтрокаАванс, ДанныеЗаполнения);
		
		Если ДанныеЗаполнения.Свойство("Валюта") Тогда
			ВалютаРеглУчета = Константы.ВалютаРегламентированногоУчета.Получить();
			Если ДанныеЗаполнения.Валюта <> ВалютаРеглУчета Тогда
				СтруктураКурса = РаботаСКурсамиВалют.ПолучитьКурсВалюты(ДанныеЗаполнения.Валюта, ДанныеЗаполнения.ДатаКурса);
				СтрокаАванс.Сумма = РаботаСКурсамиВалютКлиентСервер.ПересчитатьИзВалютыВВалюту(
												СтрокаАванс.Сумма,
												ДанныеЗаполнения.Валюта, ВалютаРеглУчета,
												СтруктураКурса.Курс, 1,
												СтруктураКурса.Кратность, 1);
			КонецЕсли; 
			
		КонецЕсли; 
		
	КонецЕсли; 

	Если СтрокаАванс <> Неопределено Тогда
		СтрокаАванс.СтавкаНДС = Перечисления.СтавкиНДС.НДС18_118;
		Если СтрокаАванс.Сумма <> 0 Тогда
			ТекПроцентНДС = ЦенообразованиеКлиентСервер.ПолучитьСтавкуНДСЧислом(СтрокаАванс.СтавкаНДС);
			СтрокаАванс.СуммаНДС = ЦенообразованиеКлиентСервер.РассчитатьСуммуНДС(СтрокаАванс.Сумма, ТекПроцентНДС);
		КонецЕсли; 
	КонецЕсли; 
	
	ИнициализироватьДокумент(ДанныеЗаполнения);
	
КонецПроцедуры

Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	
	ПроведениеСервер.ИнициализироватьДополнительныеСвойстваДляПроведения(Ссылка, ДополнительныеСвойства, РежимПроведения);
	
	Документы.СчетФактураПолученныйАванс.ИнициализироватьДанныеДокумента(Ссылка, ДополнительныеСвойства);
	
	ПроведениеСервер.ПодготовитьНаборыЗаписейКРегистрацииДвижений(ЭтотОбъект);
	
	ДоходыИРасходыСервер.ОтразитьЖурналУчетаСчетовФактур(ДополнительныеСвойства, Движения, Отказ);
	ДоходыИРасходыСервер.ОтразитьНДСЗаписиКнигиПокупок(ДополнительныеСвойства, Движения, Отказ);
    ДоходыИРасходыСервер.ОтразитьНДСЗаписиКнигиПродаж(ДополнительныеСвойства, Движения, Отказ);
	
	ПроведениеСервер.ЗаписатьНаборыЗаписей(ЭтотОбъект);
	ПроведениеСервер.ОчиститьДополнительныеСвойстваДляПроведения(ДополнительныеСвойства);
	
КонецПроцедуры

Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	
	МассивНепроверяемыхРеквизитов = Новый Массив;
	
	Если ТипЗнч(ДокументОснование) <> Тип("ДокументСсылка.ВводОстатков") 
		И ТипЗнч(ДокументОснование) <> Тип("ДокументСсылка.АвансовыйОтчет") 
		И ТипЗнч(ДокументОснование) <> Тип("ДокументСсылка.ВзаимозачетЗадолженности") Тогда
		
		МассивНепроверяемыхРеквизитов.Добавить("Контрагент");
	КонецЕсли; 
	
	Если Дата < Константы.ДатаНачалаПримененияПостановления1137.Получить() Тогда
		МассивНепроверяемыхРеквизитов.Добавить("КодВидаОперации");
	КонецЕсли;
	
	ОбщегоНазначения.УдалитьНепроверяемыеРеквизитыИзМассива(ПроверяемыеРеквизиты, МассивНепроверяемыхРеквизитов);
	
КонецПроцедуры

Процедура ОбработкаУдаленияПроведения(Отказ)
	
	// Инициализация дополнительных свойств для проведения документа
	ПроведениеСервер.ИнициализироватьДополнительныеСвойстваДляПроведения(Ссылка, ДополнительныеСвойства);
	
	// Подготовка наборов записей
	ПроведениеСервер.ПодготовитьНаборыЗаписейКРегистрацииДвижений(ЭтотОбъект);

	// Запись наборов записей
	ПроведениеСервер.ЗаписатьНаборыЗаписей(ЭтотОбъект);

	ПроведениеСервер.ОчиститьДополнительныеСвойстваДляПроведения(ДополнительныеСвойства);

КонецПроцедуры

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;

	Если Не ПометкаУдаления Тогда
		ПроверитьДублиСчетФактуры(Отказ);
	КонецЕсли;
	
	ДополнительныеСвойства.Вставить("ЭтоНовый",    ЭтоНовый());
	ДополнительныеСвойства.Вставить("РежимЗаписи", РежимЗаписи);
	
	Сумма    = Авансы.Итог("Сумма");
	СуммаНДС = Авансы.Итог("СуммаНДС");
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

////////////////////////////////////////////////////////////////////////////////
// Инициализация и заполнение

Процедура ИнициализироватьДокумент(ДанныеЗаполнения = Неопределено)
	
	Организация = ЗначениеНастроекПовтИсп.ПолучитьОрганизациюПоУмолчанию(Организация);
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// Прочее

// Процедура проверяет дублирование счета-фактуры.
//
// Параметры:
//	Отказ - Булево - Признак отказа от записи документа
//
Процедура ПроверитьДублиСчетФактуры(Отказ)
	
	УстановитьПривилегированныйРежим(Истина);
	
	Запрос = Новый Запрос("ВЫБРАТЬ ПЕРВЫЕ 1
	                      |	ДанныеДокумента.Ссылка КАК Ссылка
	                      |ИЗ
	                      |	Документ.СчетФактураПолученныйАванс КАК ДанныеДокумента
	                      |ГДЕ
	                      |	ДанныеДокумента.Ссылка <> &Ссылка
	                      |	И ДанныеДокумента.ДокументОснование = &ДокументОснование
	                      |	И ДанныеДокумента.Проведен
	                      |	И ДанныеДокумента.Контрагент = &Контрагент");
	
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	Запрос.УстановитьПараметр("ДокументОснование", ДокументОснование);
	Запрос.УстановитьПараметр("Контрагент", Контрагент);
	
	Результат = Запрос.Выполнить();
	Выборка = Результат.Выбрать();
	Если Выборка.Следующий() Тогда
		
		Текст = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			НСтр("ru = 'Для документа %1 уже введен счет-фактура %2'"),
			ДокументОснование,
			Выборка.Ссылка
		);
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
			Текст,
			ЭтотОбъект,
			"ДокументОснование",
			,
			Отказ
		);
		
	КонецЕсли;
	
КонецПроцедуры

// Возвращает сумму аванса в валюте регл. учета
//
// Параметры:
//  Документ	- Расчетный документ
//
// Возвращаемое значение:
//   Число   - Сумма аванса в валюте регл. учета
//
Функция СуммаАванса(Документ)

	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	Расчеты.РасчетныйДокумент КАК ДокументОснование,
	               |	СУММА(Расчеты.ПредоплатаРеглПриход) КАК СуммаАвансаРегл
	               |ИЗ
	               |	РегистрНакопления.РасчетыСПоставщикамиПоДокументам.Обороты(, , , РасчетныйДокумент = &РасчетныйДокумент) КАК Расчеты
	               |ГДЕ
	               |	Расчеты.ПредоплатаПриход > 0
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	Расчеты.РасчетныйДокумент";
	
    Запрос.УстановитьПараметр("РасчетныйДокумент", Документ);
	
	Результат = Запрос.Выполнить();
	Если Результат.Пустой() Тогда
		Возврат 0;
	КонецЕсли;
	
	Выборка = Результат.Выбрать();
	Выборка.Следующий();
	
	Возврат Выборка.СуммаАвансаРегл;
	
КонецФункции

#КонецЕсли