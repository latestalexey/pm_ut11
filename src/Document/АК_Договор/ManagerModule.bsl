////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

// Функция возвращает таблицу реквизитов, зависимых от хозяйственной операции документа.
//
Функция ПолучитьМассивыРеквизитов(ХозяйственнаяОперация, МассивВсехРеквизитов, МассивРеквизитовОперации) Экспорт
	
	МассивВсехРеквизитов = Новый Массив;
	МассивВсехРеквизитов.Добавить("ГрафикОплаты");
	МассивВсехРеквизитов.Добавить("ФормаОплаты");
	МассивВсехРеквизитов.Добавить("Товары.ПроцентРучнойСкидки");
	МассивВсехРеквизитов.Добавить("Товары.СуммаРучнойСкидки");
	МассивВсехРеквизитов.Добавить("Товары.ПроцентАвтоматическойСкидки");
	МассивВсехРеквизитов.Добавить("Товары.СуммаАвтоматическойСкидки");
	
	МассивРеквизитовОперации = Новый Массив;
	Если ХозяйственнаяОперация <> Перечисления.ХозяйственныеОперации.ПередачаНаКомиссию Тогда
		МассивРеквизитовОперации.Добавить("ГрафикОплаты");
		МассивРеквизитовОперации.Добавить("ФормаОплаты");
		МассивРеквизитовОперации.Добавить("Товары.ПроцентРучнойСкидки");
		МассивРеквизитовОперации.Добавить("Товары.СуммаРучнойСкидки");
		МассивРеквизитовОперации.Добавить("Товары.ПроцентАвтоматическойСкидки");
		МассивРеквизитовОперации.Добавить("Товары.СуммаАвтоматическойСкидки");
	КонецЕсли;
	
КонецФункции // ПолучитьМассивыРеквизитов()

// Осуществялет вычисление текущего состояния коммерческого предложения
//
// Параметры:
// КоммерческоеПредложение - ДокументСсылка.КоммерческоеПредложение - Документ, состояние которого необходимо вычислить
// Состояние - Строка - Реквизит, в который будет помещено рассчитанное состояние
// СостояниеПросрочено - Булево - Реквизит, в который будет помещен признак просроченности состояния
// КартинкаСостояния   - Картинка - Картинка состояния коммерческого предложения
// 
Процедура РассчитатьСостояние(Знач КоммерческоеПредложение, Состояние, СостояниеПросрочено, КартинкаСостояния) Экспорт
	
	Запрос = Новый Запрос("
		|ВЫБРАТЬ
		|ВЫБОР
		|	// НЕ ПРОВЕДЕНО ///////////////////////////////////////////////////////////
		|	КОГДА
		|		НЕ КоммерческоеПредложениеКлиенту.Проведен
		|	ТОГДА
		|		НЕОПРЕДЕЛЕНО
		|	// ОТМЕНЕНО ///////////////////////////////////////////////////////////////
		|	КОГДА
		|		КоммерческоеПредложениеКлиенту.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыКоммерческихПредложенийКлиентам.Отменено)
		|	ТОГДА
		|		ЗНАЧЕНИЕ(Перечисление.СостоянияКоммерческихПредложенийКлиентам.Отменено)
		|	// ДЕЙСТВУЕТ //////////////////////////////////////////////////////////////
		|	КОГДА
		|		КоммерческоеПредложениеКлиенту.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыКоммерческихПредложенийКлиентам.Действует)
		|	ТОГДА
		|		ЗНАЧЕНИЕ(Перечисление.СостоянияКоммерческихПредложенийКлиентам.Действует)
		|	// ОЖИДАЕТСЯ СОГЛАСОВАНИЕ /////////////////////////////////////////////////
		|	КОГДА
		|		КоммерческоеПредложениеКлиенту.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыКоммерческихПредложенийКлиентам.НеСогласовано)
		|	ТОГДА
		|		ЗНАЧЕНИЕ(Перечисление.СостоянияКоммерческихПредложенийКлиентам.ОжидаетсяСогласование)
		|КОНЕЦ КАК Состояние,
		|ВЫБОР
		|	// НЕ ПРОВЕДЕНО ///////////////////////////////////////////////////////////
		|	КОГДА
		|		НЕ КоммерческоеПредложениеКлиенту.Проведен
		|	ТОГДА
		|		""""
		|	// ОТМЕНЕНО ///////////////////////////////////////////////////////////////
		|	КОГДА
		|		КоммерческоеПредложениеКлиенту.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыКоммерческихПредложенийКлиентам.Отменено)
		|	ТОГДА
		|		""СостояниеКоммерческогоПредложенияКлиентуОтменено""
		|	// ДЕЙСТВУЕТ //////////////////////////////////////////////////////////////
		|	КОГДА
		|		КоммерческоеПредложениеКлиенту.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыКоммерческихПредложенийКлиентам.Действует)
		|	ТОГДА
		|		""СостояниеКоммерческогоПредложенияКлиентуДействует""
		|	// ОЖИДАЕТСЯ СОГЛАСОВАНИЕ /////////////////////////////////////////////////
		|	КОГДА
		|		КоммерческоеПредложениеКлиенту.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыКоммерческихПредложенийКлиентам.НеСогласовано)
		|	ТОГДА
		|		""СостояниеКоммерческогоПредложенияКлиентуОжидаетсяСогласование""
		|	ИНАЧЕ
		|		""""
		|КОНЕЦ КАК ИмяКартинки,
		|ВЫБОР
		|	// СОГЛАСОВАНИЕ ПРОСРОЧЕНО ////////////////////////////////////////////////
		|	КОГДА
		|		КоммерческоеПредложениеКлиенту.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыКоммерческихПредложенийКлиентам.НеСогласовано)
		|		И КоммерческоеПредложениеКлиенту.СрокДействия < &ТекущаяДата
		|		И КоммерческоеПредложениеКлиенту.СрокДействия <> ДАТАВРЕМЯ(1,1,1)
		|	ТОГДА
		|		ИСТИНА
		|	// СРОК ДЕЙСТВИЯ ИСТЕК ////////////////////////////////////////////////////
		|	КОГДА
		|		КоммерческоеПредложениеКлиенту.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыКоммерческихПредложенийКлиентам.Действует)
		|		И КоммерческоеПредложениеКлиенту.СрокДействия < &ТекущаяДата
		|		И КоммерческоеПредложениеКлиенту.СрокДействия <> ДАТАВРЕМЯ(1,1,1)
		|	ТОГДА
		|		ИСТИНА
		|	ИНАЧЕ
		|		ЛОЖЬ
		|КОНЕЦ КАК Просрочен
		|ИЗ
		|	Документ.КоммерческоеПредложениеКлиенту КАК КоммерческоеПредложениеКлиенту
		|ГДЕ
		|	КоммерческоеПредложениеКлиенту.Ссылка = &КоммерческоеПредложение
		|");
		
	Запрос.УстановитьПараметр("КоммерческоеПредложение", КоммерческоеПредложение);
	Запрос.УстановитьПараметр("ТекущаяДата",  НачалоДня(ТекущаяДата()));
	Выборка = Запрос.Выполнить().Выбрать();
	Выборка.Следующий();
	
	Состояние           = Выборка.Состояние;
	СостояниеПросрочено = Выборка.Просрочен;
	Если ЗначениеЗаполнено(Выборка.ИмяКартинки) Тогда
		КартинкаСостояния            = БиблиотекаКартинок[Выборка.ИмяКартинки];
	Иначе
		КартинкаСостояния = Новый Картинка;
	КонецЕсли;
	
КонецПроцедуры // РассчитатьСостояние()

// Устанавливает статус коммерческих предложений клиентам.
//
// Параметры:
// КоммерческиеПредложения - Массив -  массив ссылок на коммерческие предложения
// Статус                  - ПеречислениеСсылка.СтатусыКоммерческихПредложенийКлиентам - статус, который будет установлен у коммерческих предложений.
//
Функция УстановитьСтатус(Знач КоммерческиеПредложения, Знач Статус) Экспорт
	
	МассивСсылок = Новый Массив();
	КоличествоОбработанных = 0;
	
	Для Каждого КоммерческоеПредложения Из КоммерческиеПредложения Цикл
	
		Если ТипЗнч(КоммерческоеПредложения) = Тип("СтрокаГруппировкиДинамическогоСписка") Тогда
			Продолжить;
		КонецЕсли;
		
		МассивСсылок.Добавить(КоммерческоеПредложения);
		
	КонецЦикла;
	
	Если МассивСсылок = 0 Тогда
		Возврат КоличествоОбработанных;
	КонецЕсли;
	
	Запрос = Новый Запрос("
		|ВЫБРАТЬ
		|	КоммерческоеПредложениеКлиенту.Ссылка КАК Ссылка
		|ИЗ
		|	Документ.КоммерческоеПредложениеКлиенту КАК КоммерческоеПредложениеКлиенту
		|ГДЕ
		|	КоммерческоеПредложениеКлиенту.Ссылка В(&МассивСсылок)
		|	И КоммерческоеПредложениеКлиенту.Статус <> &Статус
		|");
	
	Запрос.УстановитьПараметр("МассивСсылок", МассивСсылок);
	Запрос.УстановитьПараметр("Статус",       Статус);
	Выборка = Запрос.Выполнить().Выбрать();
	
	НачатьТранзакцию();
	
	Пока Выборка.Следующий() Цикл
		
		Попытка
			ЗаблокироватьДанныеДляРедактирования(Выборка.Ссылка);
		Исключение
			
			ТекстОшибки = НСтр("ru='Не удалось заблокировать %Документ%. %ОписаниеОшибки%'");
			ТекстОшибки = СтрЗаменить(ТекстОшибки, "%Документ%",       Выборка.Ссылка);
			ТекстОшибки = СтрЗаменить(ТекстОшибки, "%ОписаниеОшибки%", КраткоеПредставлениеОшибки(ИнформацияОбОшибке()));
			
			ОтменитьТранзакцию();
			
			ВызватьИсключение ТекстОшибки;
			
		КонецПопытки;
		
		Объект        = Выборка.Ссылка.ПолучитьОбъект();
		Объект.Статус = Статус;
		
		НетОшибок = Истина;
		
		Если Объект.Проведен Тогда
			
			Если Статус = Перечисления.СтатусыКоммерческихПредложенийКлиентам.НеСогласовано Тогда
				Если Объект.Согласован Тогда
					Объект.Согласован = Ложь;
				КонецЕсли;
			КонецЕсли;
			
			НетОшибок = Объект.ПроверитьЗаполнение();
			
		Иначе
			
			ТекстОшибки = НСтр("ru='%Документ% не проведен, статус не изменен'");
			ТекстОшибки = СтрЗаменить(ТекстОшибки, "%Документ%", Выборка.Ссылка);
			
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
				ТекстОшибки,
				Объект,
				,
				,
			);
			
			НетОшибок = Ложь;
		
		КонецЕсли;
			
		Если Не НетОшибок Тогда
			Продолжить;
		КонецЕсли;

		Попытка
			
			Объект.Записать(РежимЗаписиДокумента.Запись);
			КоличествоОбработанных = КоличествоОбработанных + 1;
			
		Исключение
			
			ТекстОшибки = НСтр("ru='Не удалось записать %Документ%. %ОписаниеОшибки%'");
			ТекстОшибки = СтрЗаменить(ТекстОшибки, "%Документ%",       Выборка.Ссылка);
			ТекстОшибки = СтрЗаменить(ТекстОшибки, "%ОписаниеОшибки%", КраткоеПредставлениеОшибки(ИнформацияОбОшибке()));
			ОтменитьТранзакцию();
			ВызватьИсключение ТекстОшибки;
			
		КонецПопытки

	КонецЦикла;

	ЗафиксироватьТранзакцию();
	
	Возврат КоличествоОбработанных;

КонецФункции // УстановитьСтатус()

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ПЕЧАТИ

Функция ПолучитьДанныеПечати(знач МассивДокументов, знач МассивИменМакетов) Экспорт
	
	Возврат Новый Структура("Данные,Макеты",
				ПолучитьДанныеОбъектаПоМакетам(МассивДокументов, МассивИменМакетов),
				ПолучитьМакетыИОписанияСекций(МассивИменМакетов));
	
КонецФункции // ПолучитьДанныеПечати()

Функция ПолучитьОписаниеОбластейКоммерческоеПредложение()

	Секции = Новый Структура;
	
	УправлениеПечатью.ДобавитьОписаниеОбласти(Секции, "Заголовок",              "Общая");
	Возврат Секции;

КонецФункции // ПолучитьОписаниеОбластейКоммерческоеПредложение()

Функция ПолучитьДанныеКоммерческоеПредложение(СсылкаНаОбъект)
	ВалютаУпр = ЗначениеНастроекПовтИсп.ПолучитьЗначениеКонстанты("ВалютаУправленческогоУчета");
	Запрос = Новый Запрос("ВЫБРАТЬ
	                      |	АК_ДоговорПечать.Соглашение,
						  | АК_ДоговорПечать.Ссылка,
	                      |	АК_ДоговорПечать.Сумма,
						  |	АК_ДоговорПечать.Самовывоз,
						  |	АК_ДоговорПечать.МоментОплаты,
                          | АК_ДоговорПечать.Контрагент,
						  | АК_ДоговорПечать.БанковскийСчетКонтрагента,
                          |	АК_ДоговорПечать.Соглашение.Контрагент,
	                      |	АК_ДоговорПечать.Соглашение.Организация,
	                      |	АК_ДоговорПечать.Соглашение.ГрафикОплаты
	                      |ИЗ
	                      |	Документ.АК_ДоговорПечать КАК АК_ДоговорПечать
	                      |ГДЕ
	                      |	АК_ДоговорПечать.Ссылка = &КоммерческоеПредложение");
	
	Запрос.УстановитьПараметр("КоммерческоеПредложение",СсылкаНаОбъект);
	
	РезультатыЗапроса = Запрос.Выполнить();
	Выборка = РезультатыЗапроса.Выбрать();
	Выборка.Следующий();
	
	ДанныеОбъекта = Новый Структура;
	АК_Контрагент= Выборка.Контрагент;
	АК_Сумма = Выборка.Сумма;
	ДанныеОбъекта.Вставить("Соглашение",          Выборка.Соглашение);
	ДанныеОбъекта.Вставить("Номер",               Выборка.Ссылка.номер);
	ДанныеОбъекта.Вставить("СтрокаСамовывоз",     ?(Выборка.Самовывоз=Ложь, "отгрузки транспортом по выбору Поставщика по адресу Заказчика.", 
																		"самовывоза Товара в местонахождение Товара по адресу."));
	ДанныеОбъекта.Вставить("СтрокаМоментОплаты",  ?(Выборка.МоментОплаты,"с момента подписания товарных накладных.",
																			"с момента подписания Спецификации (с момента готовности товара к отгрузке по письму уведомлению, если иное не указанно в соответствующей Спецификацией)."));
   	ДанныеОбъекта.Вставить("Контрагент",          Выборка.Контрагент);   
	ДанныеОбъекта.Вставить("Контрагент1",         Выборка.Контрагент);   
	ДанныеОбъекта.Вставить("Контрагент2",         Выборка.Контрагент);  
	Если ЗначениеЗаполнено(Выборка.Контрагент) Тогда
		склонениеФИО= Выборка.Контрагент.ФизЛицо.Наименование;
		склонениеФИО = Падеж(склонениеФИО,2,);
	Иначе
		склонениеФИО= "";
	КонецЕсли;	
	ДанныеОбъекта.Вставить("ФизЛицоКонтрагент",                   склонениеФИО);
    ДанныеОбъекта.Вставить("Дата",                          Формат(Выборка.Ссылка.дата,"ДЛФ=ДД"));
	ДанныеОбъекта.Вставить("Организация",                          Выборка.СоглашениеОрганизация);
	ДанныеОбъекта.Вставить("ГрафикОплаты",                              Выборка.СоглашениеГрафикОплаты);
	ДанныеОбъекта.Вставить("СрокРеализации",                              Выборка.Соглашение.СрокРеализации);

	СведенияОПокупателе       = ФормированиеПечатныхФорм.СведенияОЮрФизЛице(Выборка.Контрагент,       Выборка.Ссылка.Дата,, Выборка.БанковскийСчетКонтрагента);
	СтрокаСРеквизитами =  ФормированиеПечатныхФорм.ОписаниеОрганизации(СведенияОПокупателе, 
		"ПолноеНаименование,ЮридическийАдрес,ИНН,КПП,НомерСчета,КоррСчет,Банк,БИК,Телефоны");
	Запрос = Новый Запрос("ВЫБРАТЬ
						  |	КонтрагентыКонтактнаяИнформация.АдресЭП
						  |ИЗ
						  |	Справочник.Контрагенты.КонтактнаяИнформация КАК КонтрагентыКонтактнаяИнформация
						  |ГДЕ
						  |	КонтрагентыКонтактнаяИнформация.Ссылка = &Ссылка
						  |	И КонтрагентыКонтактнаяИнформация.АдресЭП <> """"");
	Запрос.УстановитьПараметр("Ссылка",АК_Контрагент);
	РезультатыЗапроса = Запрос.Выполнить();
	Выборка = РезультатыЗапроса.Выбрать();
	Если Выборка.Следующий() Тогда
		СтрокаСРеквизитами = СтрокаСРеквизитами + Символы.ПС + "e-mail: "+Строка(Выборка.АдресЭП);
	КонецЕсли;
	ДанныеОбъекта.Вставить("СтрокаСРеквизитами",  СтрокаСРеквизитами);  
	
	
	//Получения суммы спецификации
	Запрос = Новый ЗАпрос("ВЫБРАТЬ
	                      |	ЕстьNull(Сумма(АК_Договор_СпецификацияТовары.Сумма),0) КАК Сумма,
	                      |	ЕстьNull(Сумма(АК_Договор_СпецификацияТовары.СуммаНДС),0) КАК СуммаНДС
	                      |ИЗ
	                      |	Документ.АК_Договор_Спецификация.Товары КАК АК_Договор_СпецификацияТовары
	                      |ГДЕ
	                      |	АК_Договор_СпецификацияТовары.Ссылка В(&СписокДокументов)
	                      |	И АК_Договор_СпецификацияТовары.Активность = ИСТИНА");
						  
	ДокОбъект = СсылкаНаОбъект.ПолучитьОбъект();
	МассивДокументов = Новый Массив;
	Для КАждого Стр ИЗ ДокОбъект.Спецификации Цикл
		Если Стр.Печатать Тогда
			МассивДокументов.добавить(Стр.Документ);
		КонецЕсли;	
	КонецЦикла;	
	Запрос.УстановитьПараметр("СписокДокументов",МассивДокументов);
	Выборка = Запрос.Выполнить().выбрать();
	Если Выборка.Следующий() Тогда
		 АК_Сумма = Выборка.Сумма;
	КонецЕсли;	
	ДанныеОбъекта.Вставить("Сумма",               ФормированиеПечатныхФорм.СформироватьСуммуПрописью(АК_Сумма, ВалютаУпр));
    Запрос = Новый Запрос("ВЫБРАТЬ
                          |	ЕСТЬNULL(ГрафикиОплатыЭтапы.ПроцентПлатежа, 0) КАК ПроцентПлатежа
                          |ИЗ
                          |	Справочник.ГрафикиОплаты.Этапы КАК ГрафикиОплатыЭтапы
                          |ГДЕ
                          |	ГрафикиОплатыЭтапы.Ссылка = &Ссылка
                          |	И ГрафикиОплатыЭтапы.ВариантОплаты = &ВариантОплаты");
	Запрос.УстановитьПараметр("Ссылка",АК_Контрагент);
	Запрос.УстановитьПараметр("ВариантОплаты",Перечисления.ВариантыОплатыКлиентом.ПредоплатаДоОтгрузки);
	РезультатыЗапроса = Запрос.Выполнить();
	Выборка = РезультатыЗапроса.Выбрать();
	Если Выборка.Следующий() Тогда
		ДанныеОбъекта.Вставить("ПроцПредоплаты",                              Выборка.ПроцентПлатежа);
		ДанныеОбъекта.Вставить("Процдоплаты",                              100-Выборка.ПроцентПлатежа);
        ДанныеОбъекта.Вставить("СуммаПредоплаты",                              ФормированиеПечатныхФорм.СформироватьСуммуПрописью(АК_Сумма*Выборка.ПроцентПлатежа, ВалютаУпр));
		ДанныеОбъекта.Вставить("Суммадоплаты",                              ФормированиеПечатныхФорм.СформироватьСуммуПрописью(АК_Сумма*(100-Выборка.ПроцентПлатежа), ВалютаУпр));
	Иначе
		ДанныеОбъекта.Вставить("ПроцПредоплаты",                              0);
		ДанныеОбъекта.Вставить("Процдоплаты",                              100);
        ДанныеОбъекта.Вставить("СуммаПредоплаты",                              0);
		ДанныеОбъекта.Вставить("Суммадоплаты",                              ФормированиеПечатныхФорм.СформироватьСуммуПрописью(АК_Сумма, ВалютаУпр));
	КонецЕсли;	

	Возврат ДанныеОбъекта;

КонецФункции // ПолучитьДанныеКоммерческоеПредложение()

Функция ПолучитьДанныеМебель(СсылкаНаОбъект)
	
	Запрос = Новый Запрос("ВЫБРАТЬ
	                      |	АК_ДоговорПечать.Соглашение,
						  | АК_ДоговорПечать.Ссылка,
	                      |	АК_ДоговорПечать.Сумма,
						  | АК_ДоговорПечать.Контрагент,
						  | АК_ДоговорПечать.БанковскийСчетКонтрагента,
                          |	АК_ДоговорПечать.Соглашение.Организация,
	                      |	АК_ДоговорПечать.Соглашение.ГрафикОплаты
	                      |ИЗ
	                      |	Документ.АК_ДоговорПечать КАК АК_ДоговорПечать
	                      |ГДЕ
	                      |	АК_ДоговорПечать.Ссылка = &КоммерческоеПредложение");
	
	Запрос.УстановитьПараметр("КоммерческоеПредложение",СсылкаНаОбъект);
	
	РезультатыЗапроса = Запрос.Выполнить();
	Выборка = РезультатыЗапроса.Выбрать();
	Выборка.Следующий();
	
	ДанныеОбъекта = Новый Структура;
	ДанныеОбъекта.Вставить("Соглашение",          Выборка.Соглашение);
	ДанныеОбъекта.Вставить("Номер",               Выборка.Ссылка.номер);
	ДанныеОбъекта.Вставить("Контрагент",          Выборка.Контрагент);   
	
	Если ЗначениеЗаполнено(Выборка.Контрагент) Тогда
		склонениеФИО= Выборка.Контрагент.ФизЛицо.Наименование;
		склонениеФИО = Падеж(склонениеФИО,2,);
	Иначе
		склонениеФИО= "";
	КонецЕсли;	
	ДанныеОбъекта.Вставить("ФизЛицоКонтрагент",                   склонениеФИО);
    ДанныеОбъекта.Вставить("Дата",                          Формат(Выборка.Ссылка.дата,"ДЛФ=ДД"));
	ДанныеОбъекта.Вставить("Организация",                          Выборка.СоглашениеОрганизация);
	ВалютаУпр = ЗначениеНастроекПовтИсп.ПолучитьЗначениеКонстанты("ВалютаУправленческогоУчета");
	//Получения суммы спецификации
	Запрос = Новый ЗАпрос("ВЫБРАТЬ
	                      |	ЕстьNull(Сумма(АК_Договор_СпецификацияТовары.Сумма),0) КАК Сумма,
	                      |	ЕстьNull(Сумма(АК_Договор_СпецификацияТовары.СуммаНДС),0) КАК СуммаНДС
	                      |ИЗ
	                      |	Документ.АК_Договор_Спецификация.Товары КАК АК_Договор_СпецификацияТовары
	                      |ГДЕ
	                      |	АК_Договор_СпецификацияТовары.Ссылка В(&СписокДокументов)
	                      |	И АК_Договор_СпецификацияТовары.Активность = ИСТИНА");
						  
	ДокОбъект = СсылкаНаОбъект.ПолучитьОбъект();
	МассивДокументов = Новый Массив;
	Для КАждого Стр ИЗ ДокОбъект.Спецификации Цикл
		Если Стр.Печатать Тогда
			МассивДокументов.добавить(Стр.Документ);
		КонецЕсли;	
	КонецЦикла;	
	Запрос.УстановитьПараметр("СписокДокументов",МассивДокументов);
	ВыборкаСумма = Запрос.Выполнить().выбрать();
	Если ВыборкаСумма.Следующий() Тогда
		 АК_Сумма = ВыборкаСумма.Сумма;
		 АК_СУммаБезНДС = ВыборкаСумма.Сумма-ВыборкаСумма.СуммаНДС
	Иначе
		 АК_Сумма = 0;
		 АК_СУммаБезНДС = 0;
	КонецЕсли;	

	ДанныеОбъекта.Вставить("СуммаПрописью",          ФормированиеПечатныхФорм.СформироватьСуммуПрописью(АК_Сумма, ВалютаУпр));
    ДанныеОбъекта.Вставить("СуммаБезНДС",          ФормированиеПечатныхФорм.СформироватьСуммуПрописью(АК_СУммаБезНДС, ВалютаУпр));

	СведенияОбОрганизации       = ФормированиеПечатныхФорм.СведенияОЮрФизЛице(Выборка.СоглашениеОрганизация,       Выборка.Ссылка.Дата,, );
	ФактАдресОрганизации = ФормированиеПечатныхФорм.ОписаниеОрганизации(СведенияОбОрганизации, "ФактическийАдрес");
	ДанныеОбъекта.Вставить("ФактАдресОрганизации",  ФактАдресОрганизации); 
	
	СведенияОПокупателе       = ФормированиеПечатныхФорм.СведенияОЮрФизЛице(Выборка.Контрагент,       Выборка.Ссылка.Дата,, Выборка.БанковскийСчетКонтрагента);
	ФактАдресКонтрагента = ФормированиеПечатныхФорм.ОписаниеОрганизации(СведенияОПокупателе, "ФактическийАдрес");
	ДанныеОбъекта.Вставить("ФактАдресКонтрагента",  ФактАдресКонтрагента);  
	СтрокаСРеквизитами =  ФормированиеПечатныхФорм.ОписаниеОрганизации(СведенияОПокупателе, 
		"ПолноеНаименование,ЮридическийАдрес,ИНН,КПП,НомерСчета,КоррСчет,Банк,БИК,Телефоны");
	//Получение адреса ЭП	
	Запрос = Новый Запрос("ВЫБРАТЬ
	                      |	КонтрагентыКонтактнаяИнформация.АдресЭП,
	                      |	КонтрагентыКонтактнаяИнформация.НомерТелефона
	                      |ИЗ
	                      |	Справочник.Контрагенты.КонтактнаяИнформация КАК КонтрагентыКонтактнаяИнформация
	                      |ГДЕ
	                      |	КонтрагентыКонтактнаяИнформация.Ссылка = &Ссылка
	                      |	И КонтрагентыКонтактнаяИнформация.АдресЭП <> """"");
	Запрос.УстановитьПараметр("Ссылка",Выборка.Контрагент);
	РезультатыЗапроса = Запрос.Выполнить();
	Выборка = РезультатыЗапроса.Выбрать();
	Если Выборка.Следующий() Тогда
		СтрокаСРеквизитами = СтрокаСРеквизитами + Символы.ПС + "e-mail: "+Строка(Выборка.АдресЭП);
	КонецЕсли;	
	//-Получение Адреса ЭП
	
	ДанныеОбъекта.Вставить("СтрокаСРеквизитами",  СтрокаСРеквизитами);  
		
	Возврат ДанныеОбъекта;

КонецФункции // ПолучитьДанныеКоммерческоеПредложение()

Функция ПолучитьДанныеОбъектаПоМакетам(знач МассивДокументов, знач МассивИменМакетов) Экспорт
	
	ДанныеПоВсемОбъектам = Новый Соответствие;
	
	Для Каждого ОбъектСсылка Из МассивДокументов Цикл
		ДанныеОбъектаПоМакетам = Новый Структура;
		Для Каждого ИмяМакета Из МассивИменМакетов Цикл
			ДанныеОбъекта = Неопределено;
			Если ИмяМакета = "АК_DOC_Договор" Тогда
				ДанныеОбъекта = ПолучитьДанныеКоммерческоеПредложение(ОбъектСсылка);
			ИначеЕсли ИмяМакета = "АК_DOC_Договор100" Тогда
				ДанныеОбъекта = ПолучитьДанныеКоммерческоеПредложение(ОбъектСсылка);
			ИначеЕсли ИмяМакета = "АК_DOC_МонтажМебели" Тогда
				ДанныеОбъекта = ПолучитьДанныеМебель(ОбъектСсылка);
            ИначеЕсли ИмяМакета = "АК_DOC_ПеревозкаМебели" Тогда
				ДанныеОбъекта = ПолучитьДанныеМебель(ОбъектСсылка);
			КонецЕсли;
			Если ДанныеОбъекта <> Неопределено Тогда
				ДанныеОбъектаПоМакетам.Вставить(ИмяМакета, ДанныеОбъекта);
			КонецЕсли;
		КонецЦикла;
		ДанныеПоВсемОбъектам.Вставить(ОбъектСсылка, ДанныеОбъектаПоМакетам);
	КонецЦикла;
	

	Возврат ДанныеПоВсемОбъектам;
	
КонецФункции // ПолучитьДанныеОбъектаПоМакетам()

Функция ПолучитьМакетыИОписанияСекций(знач МассивИменМакетов) Экспорт
	
	ОписаниеСекций = Новый Структура;
	ДвоичныеДанныеМакетов = Новый Структура;
	
	Для Каждого ИмяМакета Из МассивИменМакетов Цикл
		
		Макет = Неопределено;
		ОписаниеСекцийМакета = Неопределено;
		
		Если ИмяМакета = "АК_DOC_Договор" Тогда
			ОписаниеСекцийМакета = ПолучитьОписаниеОбластейКоммерческоеПредложение();
			Макет = УправлениеПечатью.ПолучитьМакет("Документ.АК_ДоговорПечать.АК_DOC_Договор");
		ИначеЕсли ИмяМакета = "АК_DOC_Договор100" Тогда
			ОписаниеСекцийМакета = ПолучитьОписаниеОбластейКоммерческоеПредложение();
			Макет = УправлениеПечатью.ПолучитьМакет("Документ.АК_ДоговорПечать.АК_DOC_Договор100");
		ИначеЕсли ИмяМакета = "АК_DOC_МонтажМебели" Тогда
			ОписаниеСекцийМакета = ПолучитьОписаниеОбластейКоммерческоеПредложение();
			Макет = УправлениеПечатью.ПолучитьМакет("Документ.АК_ДоговорПечать.АК_DOC_МонтажМебели");
		ИначеЕсли ИмяМакета = "АК_DOC_ПеревозкаМебели" Тогда
			ОписаниеСекцийМакета = ПолучитьОписаниеОбластейКоммерческоеПредложение();
			Макет = УправлениеПечатью.ПолучитьМакет("Документ.АК_ДоговорПечать.АК_DOC_ПеревозкаМебели");
		КонецЕсли;
		
		Если ОписаниеСекцийМакета <> Неопределено И Макет <> Неопределено Тогда
			
			ОписаниеСекций.Вставить(ИмяМакета, ОписаниеСекцийМакета);
			ДвоичныеДанныеМакетов.Вставить(ИмяМакета, Макет);
			
		КонецЕсли;
		
	КонецЦикла;
	
	Возврат Новый Структура(
						"ОписаниеСекций,ДвоичныеДанныеМакетов",
						ОписаниеСекций,
						ДвоичныеДанныеМакетов
					);
	
КонецФункции // ПолучитьМакетыИОписанияСекций()

 // Сформировать печатные формы объектов
//
// ВХОДЯЩИЕ:
//   ИменаМакетов    - Строка    - Имена макетов, перечисленные через запятую
//   МассивОбъектов  - Массив    - Массив ссылок на объекты которые нужно распечатать
//   ПараметрыПечати - Структура - Структура дополнительных параметров печати
//
// ИСХОДЯЩИЕ:
//   КоллекцияПечатныхФорм - Таблица значений - Сформированные табличные документы
//   ПараметрыВывода       - Структура        - Параметры сформированных табличных документов
//
Процедура Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт
	
	ПараметрыВывода.ДоступнаПечатьПоКомплектно = Истина;
	
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "АК_Договор50") Тогда
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм, "АК_Договор50", "Договор 50%", СформироватьПечатнуюФормуДоговора50(МассивОбъектов, ОбъектыПечати));
	КонецЕсли;
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "АК_Договор100") Тогда
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм, "АК_Договор100", "Договор 100%", СформироватьПечатнуюФормуДоговора100(МассивОбъектов, ОбъектыПечати));
	КонецЕсли;
    Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "АК_ДоговорМонтажМебели") Тогда
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм, "АК_ДоговорМонтажМебели", "Договор на монтаж мебели", СформироватьПечатнуюФормуДоговораМонтажМебели(МассивОбъектов, ОбъектыПечати));
	КонецЕсли;
 	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "АК_ДоговорПеревозкаМебели") Тогда
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм, "АК_ДоговорПеревозкаМебели", "Договор на перевозку мебели", СформироватьПечатнуюФормуДоговораПеревозкаМебели(МассивОбъектов, ОбъектыПечати));
	КонецЕсли;

КонецПроцедуры // Печать()


Функция СформироватьПечатнуюФормуДоговора100(МассивОбъектов, ОбъектыПечати)
	Для Каждого СсылкаНаОбъект Из МассивОбъектов Цикл

	УстановитьПривилегированныйРежим(Истина);

	ТабличныйДокумент = Новый ТабличныйДокумент;
	ТабличныйДокумент.КоличествоЭкземпляров=1;
	
	ВалютаУпр = ЗначениеНастроекПовтИсп.ПолучитьЗначениеКонстанты("ВалютаУправленческогоУчета");
	Запрос = Новый Запрос("ВЫБРАТЬ
	                      |	АК_Договора.Соглашение,
						  | АК_Договора.Ссылка,
	                      |	АК_Договора.Сумма,
						  |	АК_Договора.Самовывоз,
						  |	АК_Договора.МоментОплаты,
                          | АК_Договора.Контрагент,
						  | АК_Договора.ФизЛицо,
                          | АК_Договора.БанковскийСчетКонтрагента,
                          |	АК_Договора.Соглашение.Контрагент,
	                      |	АК_Договора.Соглашение.Организация,
	                      |	АК_Договора.Соглашение.ГрафикОплаты
	                      |ИЗ
	                      |	Документ.АК_Договора КАК АК_Договора
	                      |ГДЕ
	                      |	АК_Договора.Ссылка = &КоммерческоеПредложение");
	
	Запрос.УстановитьПараметр("КоммерческоеПредложение",СсылкаНаОбъект);
	
	РезультатыЗапроса = Запрос.Выполнить();
	Выборка = РезультатыЗапроса.Выбрать();
	Выборка.Следующий();
	
	АК_Контрагент= Выборка.Контрагент;
	АК_Сумма = Выборка.Сумма;
	склонениеФИО= Выборка.ФизЛицо.Наименование;
	склонениеФИО = Падеж(склонениеФИО,2,);
	ФизЛицоНадпись = СократитьФИО(Выборка.ФизЛицо.Наименование);
	ДолжностьФизЛицо =Выборка.ФизЛицо.АК_Должность.Наименование; 

	//Получаем Сведения о контрагенте
	СведенияОПокупателе       = ФормированиеПечатныхФорм.СведенияОЮрФизЛице(Выборка.Контрагент,       Выборка.Ссылка.Дата,, Выборка.БанковскийСчетКонтрагента);
	СтрокаСРеквизитами =  ФормированиеПечатныхФорм.ОписаниеОрганизации(СведенияОПокупателе, 
		"ПолноеНаименование,ЮридическийАдрес,ИНН,КПП,НомерСчета,КоррСчет,Банк,БИК,Телефоны");
	Запрос = Новый Запрос("ВЫБРАТЬ
						  |	КонтрагентыКонтактнаяИнформация.АдресЭП
						  |ИЗ
						  |	Справочник.Контрагенты.КонтактнаяИнформация КАК КонтрагентыКонтактнаяИнформация
						  |ГДЕ
						  |	КонтрагентыКонтактнаяИнформация.Ссылка = &Ссылка
						  |	И КонтрагентыКонтактнаяИнформация.АдресЭП <> """"");
	Запрос.УстановитьПараметр("Ссылка",АК_Контрагент);
	РезультатыЗапроса = Запрос.Выполнить();
	ВыборкаАдрес = РезультатыЗапроса.Выбрать();
	Если ВыборкаАдрес.Следующий() Тогда
		СтрокаСРеквизитами = СтрокаСРеквизитами + Символы.ПС + "e-mail: "+Строка(Выборка.АдресЭП);
	КонецЕсли;
	//Получили сведения о контрагенте
	
	
	////Получения суммы спецификации
	Запрос = Новый ЗАпрос("ВЫБРАТЬ
						  |	ЕстьNull(Сумма(АК_Договор_СпецификацияТовары.Сумма),0) КАК Сумма,
						  |	ЕстьNull(Сумма(АК_Договор_СпецификацияТовары.СуммаНДС),0) КАК СуммаНДС
						  |ИЗ
						  |	Документ.АК_Договор_Спецификация.Товары КАК АК_Договор_СпецификацияТовары
						  |ГДЕ
						  |	АК_Договор_СпецификацияТовары.Ссылка В(&СписокДокументов)
						  |	И АК_Договор_СпецификацияТовары.Активность = ИСТИНА");
						  
	ДокОбъект = СсылкаНаОбъект.ПолучитьОбъект();
	МассивДокументов = Новый Массив;
	Для КАждого Стр ИЗ ДокОбъект.Спецификации Цикл
		Если Стр.Печатать Тогда
			МассивДокументов.добавить(Стр.Документ);
		КонецЕсли;	
	КонецЦикла;	
	Запрос.УстановитьПараметр("СписокДокументов",МассивДокументов);
	ВыборкаСумма = Запрос.Выполнить().выбрать();
	Если ВыборкаСумма.Следующий() Тогда
		 АК_Сумма = ВыборкаСумма.Сумма;
	КонецЕсли;	
		
	ТабличныйДокумент = Новый ТабличныйДокумент;
	Макет = УправлениеПечатью.ПолучитьМакет("Документ.АК_Договора.АК_Договор100");
	ОбластьМакета = Макет.ПолучитьОбласть("Заголовок");
    ОбластьМакета.Параметры.Номер =Выборка.Ссылка.номер;
	ОбластьМакета.Параметры.Дата =Формат(Выборка.Ссылка.дата,"ДЛФ=ДД");
    ТабличныйДокумент.Вывести(ОбластьМакета);

	ОбластьМакета = Макет.ПолучитьОбласть("Текст");
		
	ОбластьМакета.Параметры.Контрагент =АК_Контрагент;
	ОбластьМакета.Параметры.ФизЛицоКонтрагент =склонениеФИО;
	ОбластьМакета.Параметры.Соглашение =Выборка.Соглашение;
    ОбластьМакета.Параметры.СтрокаСамовывоз = ?(Выборка.Самовывоз=Ложь, "отгрузки транспортом по выбору Поставщика по адресу Заказчика.", 
																		"самовывоза Товара в местонахождение Товара по адресу.");
    ОбластьМакета.Параметры.СрокРеализации = Выборка.Соглашение.СрокРеализации;
	ОбластьМакета.Параметры.Сумма =ФормированиеПечатныхФорм.СформироватьСуммуПрописью(АК_Сумма, ВалютаУпр);
	ТабличныйДокумент.Вывести(ОбластьМакета);
	ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
	ОбластьМакета = Макет.ПолучитьОбласть("Реквизиты");
    ОбластьМакета.Параметры.СтрокаСРеквизитами =СтрокаСРеквизитами;
	ОбластьМакета.Параметры.ФизЛицоНадпись =ФизЛицоНадпись;
    ОбластьМакета.Параметры.ДолжностьФизЛицо =ДолжностьФизЛицо;

	ТабличныйДокумент.Вывести(ОбластьМакета);

	ТабличныйДокумент.АвтоМасштаб = Истина;
	
	Если ПривилегированныйРежим() Тогда
	    УстановитьПривилегированныйРежим(Ложь);	
	КонецЕсли;
	
	Возврат ТабличныйДокумент;
	КонецЦикла;
КонецФункции // 

Функция СформироватьПечатнуюФормуДоговора50(МассивОбъектов, ОбъектыПечати)
	Для Каждого СсылкаНаОбъект Из МассивОбъектов Цикл

	УстановитьПривилегированныйРежим(Истина);

	ТабличныйДокумент = Новый ТабличныйДокумент;
	ТабличныйДокумент.КоличествоЭкземпляров=1;
	
	ВалютаУпр = ЗначениеНастроекПовтИсп.ПолучитьЗначениеКонстанты("ВалютаУправленческогоУчета");
	Запрос = Новый Запрос("ВЫБРАТЬ
	                      |	АК_Договора.Соглашение,
						  | АК_Договора.Ссылка,
	                      |	АК_Договора.Сумма,
						  |	АК_Договора.Самовывоз,
						  |	АК_Договора.МоментОплаты,
                          | АК_Договора.Контрагент,
						  | АК_Договора.ФизЛицо,
						  | АК_Договора.БанковскийСчетКонтрагента,
                          |	АК_Договора.Соглашение.Контрагент,
	                      |	АК_Договора.Соглашение.Организация,
	                      |	АК_Договора.Соглашение.ГрафикОплаты
	                      |ИЗ
	                      |	Документ.АК_Договора КАК АК_Договора
	                      |ГДЕ
	                      |	АК_Договора.Ссылка = &КоммерческоеПредложение");
	
	Запрос.УстановитьПараметр("КоммерческоеПредложение",СсылкаНаОбъект);
	
	РезультатыЗапроса = Запрос.Выполнить();
	Выборка = РезультатыЗапроса.Выбрать();
	Выборка.Следующий();
	
	АК_Контрагент= Выборка.Контрагент;
	АК_Сумма = Выборка.Сумма;
	склонениеФИО= Выборка.ФизЛицо.Наименование;
	склонениеФИО = Падеж(склонениеФИО,2,);
	ФизЛицоНадпись = СократитьФИО(Выборка.ФизЛицо.Наименование);	
	ДолжностьФизЛицо =Выборка.ФизЛицо.АК_Должность.Наименование; 

	
	//Получаем Сведения о контрагенте
	СведенияОПокупателе       = ФормированиеПечатныхФорм.СведенияОЮрФизЛице(Выборка.Контрагент,       Выборка.Ссылка.Дата,, Выборка.БанковскийСчетКонтрагента);
	СтрокаСРеквизитами =  ФормированиеПечатныхФорм.ОписаниеОрганизации(СведенияОПокупателе, 
		"ПолноеНаименование,ЮридическийАдрес,ИНН,КПП,НомерСчета,КоррСчет,Банк,БИК,Телефоны");
	Запрос = Новый Запрос("ВЫБРАТЬ
						  |	КонтрагентыКонтактнаяИнформация.АдресЭП
						  |ИЗ
						  |	Справочник.Контрагенты.КонтактнаяИнформация КАК КонтрагентыКонтактнаяИнформация
						  |ГДЕ
						  |	КонтрагентыКонтактнаяИнформация.Ссылка = &Ссылка
						  |	И КонтрагентыКонтактнаяИнформация.АдресЭП <> """"");
	Запрос.УстановитьПараметр("Ссылка",АК_Контрагент);
	РезультатыЗапроса = Запрос.Выполнить();
	ВыборкаАдрес = РезультатыЗапроса.Выбрать();
	Если ВыборкаАдрес.Следующий() Тогда
		СтрокаСРеквизитами = СтрокаСРеквизитами + Символы.ПС + "e-mail: "+Строка(Выборка.АдресЭП);
	КонецЕсли;
	//Получили сведения о контрагенте
	
	
	////Получения суммы спецификации
	Запрос = Новый ЗАпрос("ВЫБРАТЬ
						  |	ЕстьNull(Сумма(АК_Договор_СпецификацияТовары.Сумма),0) КАК Сумма,
						  |	ЕстьNull(Сумма(АК_Договор_СпецификацияТовары.СуммаНДС),0) КАК СуммаНДС
						  |ИЗ
						  |	Документ.АК_Договор_Спецификация.Товары КАК АК_Договор_СпецификацияТовары
						  |ГДЕ
						  |	АК_Договор_СпецификацияТовары.Ссылка В(&СписокДокументов)
						  |	И АК_Договор_СпецификацияТовары.Активность = ИСТИНА");
						  
	ДокОбъект = СсылкаНаОбъект.ПолучитьОбъект();
	МассивДокументов = Новый Массив;
	Для КАждого Стр ИЗ ДокОбъект.Спецификации Цикл
		Если Стр.Печатать Тогда
			МассивДокументов.добавить(Стр.Документ);
		КонецЕсли;	
	КонецЦикла;	
	Запрос.УстановитьПараметр("СписокДокументов",МассивДокументов);
	ВыборкаСумма = Запрос.Выполнить().выбрать();
	Если ВыборкаСумма.Следующий() Тогда
		 АК_Сумма = ВыборкаСумма.Сумма;
	КонецЕсли;	
	Запрос = Новый Запрос("ВЫБРАТЬ
						  |	ЕСТЬNULL(ГрафикиОплатыЭтапы.ПроцентПлатежа, 0) КАК ПроцентПлатежа
						  |ИЗ
						  |	Справочник.ГрафикиОплаты.Этапы КАК ГрафикиОплатыЭтапы
						  |ГДЕ
						  |	ГрафикиОплатыЭтапы.Ссылка = &Ссылка
						  |	И ГрафикиОплатыЭтапы.ВариантОплаты = &ВариантОплаты");
	Запрос.УстановитьПараметр("Ссылка",АК_Контрагент);
	Запрос.УстановитьПараметр("ВариантОплаты",Перечисления.ВариантыОплатыКлиентом.ПредоплатаДоОтгрузки);
	РезультатыЗапроса = Запрос.Выполнить();
	ВыборкаПроцент = РезультатыЗапроса.Выбрать();
	Если Выборка.Следующий() Тогда
		ПроцПредоплаты = ВыборкаПроцент.ПроцентПлатежа;
		Процдоплаты= 100-ВыборкаПроцент.ПроцентПлатежа;
		СуммаПредоплаты= ФормированиеПечатныхФорм.СформироватьСуммуПрописью(АК_Сумма*ВыборкаПроцент.ПроцентПлатежа, ВалютаУпр);
		Суммадоплаты=ФормированиеПечатныхФорм.СформироватьСуммуПрописью(АК_Сумма*(100-ВыборкаПроцент.ПроцентПлатежа), ВалютаУпр);
	Иначе
		ПроцПредоплаты=0;
		Процдоплаты=100;
		СуммаПредоплаты= ФормированиеПечатныхФорм.СформироватьСуммуПрописью(0, ВалютаУпр);
		Суммадоплаты=ФормированиеПечатныхФорм.СформироватьСуммуПрописью(АК_Сумма, ВалютаУпр);
	КонецЕсли;	
	
	ТабличныйДокумент = Новый ТабличныйДокумент;
	Макет = УправлениеПечатью.ПолучитьМакет("Документ.АК_Договора.АК_Договор50");
	ОбластьМакета = Макет.ПолучитьОбласть("Заголовок");
    ОбластьМакета.Параметры.Номер =Выборка.Ссылка.номер;
	ОбластьМакета.Параметры.Дата =Формат(Выборка.Ссылка.дата,"ДЛФ=ДД");
    ТабличныйДокумент.Вывести(ОбластьМакета);

	ОбластьМакета = Макет.ПолучитьОбласть("Текст");
		
	ОбластьМакета.Параметры.Контрагент =АК_Контрагент;
	ОбластьМакета.Параметры.ФизЛицоКонтрагент =склонениеФИО;
	ОбластьМакета.Параметры.Соглашение =Выборка.Соглашение;
    ОбластьМакета.Параметры.СтрокаСамовывоз = ?(Выборка.Самовывоз=Ложь, "отгрузки транспортом по выбору Поставщика по адресу Заказчика.", 
																		"самовывоза Товара в местонахождение Товара по адресу.");
    ОбластьМакета.Параметры.СрокРеализации = Выборка.Соглашение.СрокРеализации;
	ОбластьМакета.Параметры.СтрокаМоментОплаты= ?(Выборка.МоментОплаты,"с момента подписания товарных накладных.",
																			"с момента подписания Спецификации (с момента готовности товара к отгрузке по письму уведомлению, если иное не указанно в соответствующей Спецификацией).");
	ОбластьМакета.Параметры.ПроцПредоплаты =ПроцПредоплаты;
	ОбластьМакета.Параметры.Процдоплаты =Процдоплаты;
	ОбластьМакета.Параметры.СуммаПредоплаты =СуммаПредоплаты;
	ОбластьМакета.Параметры.Суммадоплаты =Суммадоплаты;
	ТабличныйДокумент.Вывести(ОбластьМакета);
	
	ОбластьМакета = Макет.ПолучитьОбласть("Реквизиты");
    ОбластьМакета.Параметры.СтрокаСРеквизитами =СтрокаСРеквизитами;
	ОбластьМакета.Параметры.ФизЛицоНадпись =ФизЛицоНадпись;
    ОбластьМакета.Параметры.ДолжностьФизЛицо =ДолжностьФизЛицо;

	ТабличныйДокумент.Вывести(ОбластьМакета);

	ТабличныйДокумент.АвтоМасштаб = Истина;
	
	Если ПривилегированныйРежим() Тогда
	    УстановитьПривилегированныйРежим(Ложь);	
	КонецЕсли;
	
	Возврат ТабличныйДокумент;
	КонецЦикла;
КонецФункции // 

Функция СформироватьПечатнуюФормуДоговораПеревозкаМебели(МассивОбъектов, ОбъектыПечати)
	Для Каждого СсылкаНаОбъект Из МассивОбъектов Цикл

	УстановитьПривилегированныйРежим(Истина);

	ТабличныйДокумент = Новый ТабличныйДокумент;
	ТабличныйДокумент.КоличествоЭкземпляров=1;
	
	ВалютаУпр = ЗначениеНастроекПовтИсп.ПолучитьЗначениеКонстанты("ВалютаУправленческогоУчета");
	Запрос = Новый Запрос("ВЫБРАТЬ
	                      |	АК_Договора.Соглашение,
						  | АК_Договора.Ссылка,
	                      |	АК_Договора.Сумма,
						  | АК_Договора.Контрагент,
						  | АК_Договора.ФизЛицо,
						  | АК_Договора.БанковскийСчетКонтрагента,
                          |	АК_Договора.Соглашение.Организация,
	                      |	АК_Договора.Соглашение.ГрафикОплаты
	                      |ИЗ
	                      |	Документ.АК_Договора КАК АК_Договора
	                      |ГДЕ
	                      |	АК_Договора.Ссылка = &КоммерческоеПредложение");
	
	Запрос.УстановитьПараметр("КоммерческоеПредложение",СсылкаНаОбъект);
	
	РезультатыЗапроса = Запрос.Выполнить();
	Выборка = РезультатыЗапроса.Выбрать();
	Выборка.Следующий();
	АК_Контрагент =  Выборка.Контрагент;
		
	склонениеФИО= Выборка.ФизЛицо.Наименование;
	склонениеФИО = Падеж(склонениеФИО,2,);
	ФизЛицоНадпись = СократитьФИО(Выборка.ФизЛицо.Наименование);	
	ДолжностьФизЛицо =Выборка.ФизЛицо.АК_Должность.Наименование; 
    
	ВалютаУпр = ЗначениеНастроекПовтИсп.ПолучитьЗначениеКонстанты("ВалютаУправленческогоУчета");
	//Получения суммы спецификации
	Запрос = Новый ЗАпрос("ВЫБРАТЬ
	                      |	ЕстьNull(Сумма(АК_Договор_СпецификацияТовары.Сумма),0) КАК Сумма,
	                      |	ЕстьNull(Сумма(АК_Договор_СпецификацияТовары.СуммаНДС),0) КАК СуммаНДС
	                      |ИЗ
	                      |	Документ.АК_Договор_Спецификация.Товары КАК АК_Договор_СпецификацияТовары
	                      |ГДЕ
	                      |	АК_Договор_СпецификацияТовары.Ссылка В(&СписокДокументов)
	                      |	И АК_Договор_СпецификацияТовары.Активность = ИСТИНА");
						  
	ДокОбъект = СсылкаНаОбъект.ПолучитьОбъект();
	МассивДокументов = Новый Массив;
	Для КАждого Стр ИЗ ДокОбъект.Спецификации Цикл
		Если Стр.Печатать Тогда
			МассивДокументов.добавить(Стр.Документ);
		КонецЕсли;	
	КонецЦикла;	
	Запрос.УстановитьПараметр("СписокДокументов",МассивДокументов);
	ВыборкаСумма = Запрос.Выполнить().выбрать();
	Если ВыборкаСумма.Следующий() Тогда
		 АК_Сумма = ВыборкаСумма.Сумма;
		 АК_СУммаБезНДС = ВыборкаСумма.Сумма-ВыборкаСумма.СуммаНДС
	Иначе
		 АК_Сумма = 0;
		 АК_СУммаБезНДС = 0;
	КонецЕсли;	

	СведенияОбОрганизации       = ФормированиеПечатныхФорм.СведенияОЮрФизЛице(Выборка.СоглашениеОрганизация,       Выборка.Ссылка.Дата,, );
	ФактАдресОрганизации = ФормированиеПечатныхФорм.ОписаниеОрганизации(СведенияОбОрганизации, "ФактическийАдрес");
		
	СведенияОПокупателе       = ФормированиеПечатныхФорм.СведенияОЮрФизЛице(Выборка.Контрагент,       Выборка.Ссылка.Дата,, Выборка.БанковскийСчетКонтрагента);
	ФактАдресКонтрагента = ФормированиеПечатныхФорм.ОписаниеОрганизации(СведенияОПокупателе, "ФактическийАдрес");
	СтрокаСРеквизитами =  ФормированиеПечатныхФорм.ОписаниеОрганизации(СведенияОПокупателе, 
		"ПолноеНаименование,ЮридическийАдрес,ИНН,КПП,НомерСчета,КоррСчет,Банк,БИК,Телефоны");
	//Получение адреса ЭП	
	Запрос = Новый Запрос("ВЫБРАТЬ
	                      |	КонтрагентыКонтактнаяИнформация.АдресЭП,
	                      |	КонтрагентыКонтактнаяИнформация.НомерТелефона
	                      |ИЗ
	                      |	Справочник.Контрагенты.КонтактнаяИнформация КАК КонтрагентыКонтактнаяИнформация
	                      |ГДЕ
	                      |	КонтрагентыКонтактнаяИнформация.Ссылка = &Ссылка
	                      |	И КонтрагентыКонтактнаяИнформация.АдресЭП <> """"");
	Запрос.УстановитьПараметр("Ссылка",Выборка.Контрагент);
	РезультатыЗапроса = Запрос.Выполнить();
	ВыборкаРеквизит = РезультатыЗапроса.Выбрать();
	Если ВыборкаРеквизит.Следующий() Тогда
		СтрокаСРеквизитами = СтрокаСРеквизитами + Символы.ПС + "e-mail: "+Строка(ВыборкаРеквизит.АдресЭП);
	КонецЕсли;	
	//-Получение Адреса ЭП
	
		
	
	
			
	ТабличныйДокумент = Новый ТабличныйДокумент;
	Макет = УправлениеПечатью.ПолучитьМакет("Документ.АК_Договора.АК_ДоговорПеревозкаМебели");
	ОбластьМакета = Макет.ПолучитьОбласть("Заголовок");
    ОбластьМакета.Параметры.Номер =Выборка.Ссылка.номер;
	ОбластьМакета.Параметры.Дата =Формат(Выборка.Ссылка.дата,"ДЛФ=ДД");
    ТабличныйДокумент.Вывести(ОбластьМакета);

	ОбластьМакета = Макет.ПолучитьОбласть("Текст");
		
	ОбластьМакета.Параметры.Контрагент =АК_Контрагент;
	ОбластьМакета.Параметры.ФизЛицоКонтрагент =склонениеФИО;
	ОбластьМакета.Параметры.Соглашение =Выборка.Соглашение;
	ОбластьМакета.Параметры.ФактАдресКонтрагент =ФактАдресКонтрагента;
	ОбластьМакета.Параметры.ФактАдресОрганизации =ФактАдресОрганизации;

 	ОбластьМакета.Параметры.СуммаПрописью = ФормированиеПечатныхФорм.СформироватьСуммуПрописью(АК_Сумма, ВалютаУпр);
	ОбластьМакета.Параметры.СуммаБезНДС = ФормированиеПечатныхФорм.СформироватьСуммуПрописью(АК_СУммаБезНДС, ВалютаУпр);

	ТабличныйДокумент.Вывести(ОбластьМакета);
	ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
	ОбластьМакета = Макет.ПолучитьОбласть("Реквизиты");
    ОбластьМакета.Параметры.СтрокаСРеквизитами =СтрокаСРеквизитами;
	ОбластьМакета.Параметры.ФизЛицоНадпись =ФизЛицоНадпись;
	ОбластьМакета.Параметры.ДолжностьФизЛицо =ДолжностьФизЛицо;

	ТабличныйДокумент.Вывести(ОбластьМакета);

	ТабличныйДокумент.АвтоМасштаб = Истина;
	
	Если ПривилегированныйРежим() Тогда
	    УстановитьПривилегированныйРежим(Ложь);	
	КонецЕсли;
	
	Возврат ТабличныйДокумент;
	КонецЦикла;
КонецФункции // 

Функция СформироватьПечатнуюФормуДоговораМонтажМебели(МассивОбъектов, ОбъектыПечати)
	Для Каждого СсылкаНаОбъект Из МассивОбъектов Цикл

	УстановитьПривилегированныйРежим(Истина);

	ТабличныйДокумент = Новый ТабличныйДокумент;
	ТабличныйДокумент.КоличествоЭкземпляров=1;
	
	ВалютаУпр = ЗначениеНастроекПовтИсп.ПолучитьЗначениеКонстанты("ВалютаУправленческогоУчета");
	Запрос = Новый Запрос("ВЫБРАТЬ
	                      |	АК_Договора.Соглашение,
						  | АК_Договора.Ссылка,
	                      |	АК_Договора.Сумма,
						  | АК_Договора.Контрагент,
						  | АК_Договора.ФизЛицо,
						  | АК_Договора.БанковскийСчетКонтрагента,
                          |	АК_Договора.Соглашение.Организация,
	                      |	АК_Договора.Соглашение.ГрафикОплаты
	                      |ИЗ
	                      |	Документ.АК_Договора КАК АК_Договора
	                      |ГДЕ
	                      |	АК_Договора.Ссылка = &КоммерческоеПредложение");
	
	Запрос.УстановитьПараметр("КоммерческоеПредложение",СсылкаНаОбъект);
	
	РезультатыЗапроса = Запрос.Выполнить();
	Выборка = РезультатыЗапроса.Выбрать();
	Выборка.Следующий();
	АК_Контрагент =  Выборка.Контрагент;
		
	склонениеФИО= Выборка.ФизЛицо.Наименование;
	склонениеФИО = Падеж(склонениеФИО,2,);
	ФизЛицоНадпись = СократитьФИО(Выборка.ФизЛицо.Наименование);
	ДолжностьФизЛицо =Выборка.ФизЛицо.АК_Должность.Наименование; 

	ВалютаУпр = ЗначениеНастроекПовтИсп.ПолучитьЗначениеКонстанты("ВалютаУправленческогоУчета");
	//Получения суммы спецификации
	Запрос = Новый ЗАпрос("ВЫБРАТЬ
	                      |	ЕстьNull(Сумма(АК_Договор_СпецификацияТовары.Сумма),0) КАК Сумма,
	                      |	ЕстьNull(Сумма(АК_Договор_СпецификацияТовары.СуммаНДС),0) КАК СуммаНДС
	                      |ИЗ
	                      |	Документ.АК_Договор_Спецификация.Товары КАК АК_Договор_СпецификацияТовары
	                      |ГДЕ
	                      |	АК_Договор_СпецификацияТовары.Ссылка В(&СписокДокументов)
	                      |	И АК_Договор_СпецификацияТовары.Активность = ИСТИНА");
						  
	ДокОбъект = СсылкаНаОбъект.ПолучитьОбъект();
	МассивДокументов = Новый Массив;
	Для КАждого Стр ИЗ ДокОбъект.Спецификации Цикл
		Если Стр.Печатать Тогда
			МассивДокументов.добавить(Стр.Документ);
		КонецЕсли;	
	КонецЦикла;	
	Запрос.УстановитьПараметр("СписокДокументов",МассивДокументов);
	ВыборкаСумма = Запрос.Выполнить().выбрать();
	Если ВыборкаСумма.Следующий() Тогда
		 АК_Сумма = ВыборкаСумма.Сумма;
		 АК_СУммаБезНДС = ВыборкаСумма.Сумма-ВыборкаСумма.СуммаНДС
	Иначе
		 АК_Сумма = 0;
		 АК_СУммаБезНДС = 0;
	КонецЕсли;	

	СведенияОбОрганизации       = ФормированиеПечатныхФорм.СведенияОЮрФизЛице(Выборка.СоглашениеОрганизация,       Выборка.Ссылка.Дата,, );
	ФактАдресОрганизации = ФормированиеПечатныхФорм.ОписаниеОрганизации(СведенияОбОрганизации, "ФактическийАдрес");
		
	СведенияОПокупателе       = ФормированиеПечатныхФорм.СведенияОЮрФизЛице(Выборка.Контрагент,       Выборка.Ссылка.Дата,, Выборка.БанковскийСчетКонтрагента);
	ФактАдресКонтрагента = ФормированиеПечатныхФорм.ОписаниеОрганизации(СведенияОПокупателе, "ФактическийАдрес");
	СтрокаСРеквизитами =  ФормированиеПечатныхФорм.ОписаниеОрганизации(СведенияОПокупателе, 
		"ПолноеНаименование,ЮридическийАдрес,ИНН,КПП,НомерСчета,КоррСчет,Банк,БИК,Телефоны");
	//Получение адреса ЭП	
	Запрос = Новый Запрос("ВЫБРАТЬ
	                      |	КонтрагентыКонтактнаяИнформация.АдресЭП,
	                      |	КонтрагентыКонтактнаяИнформация.НомерТелефона
	                      |ИЗ
	                      |	Справочник.Контрагенты.КонтактнаяИнформация КАК КонтрагентыКонтактнаяИнформация
	                      |ГДЕ
	                      |	КонтрагентыКонтактнаяИнформация.Ссылка = &Ссылка
	                      |	И КонтрагентыКонтактнаяИнформация.АдресЭП <> """"");
	Запрос.УстановитьПараметр("Ссылка",Выборка.Контрагент);
	РезультатыЗапроса = Запрос.Выполнить();
	ВыборкаРеквизит = РезультатыЗапроса.Выбрать();
	Если ВыборкаРеквизит.Следующий() Тогда
		СтрокаСРеквизитами = СтрокаСРеквизитами + Символы.ПС + "e-mail: "+Строка(ВыборкаРеквизит.АдресЭП);
	КонецЕсли;	
	//-Получение Адреса ЭП
	
		
	
	
			
	ТабличныйДокумент = Новый ТабличныйДокумент;
	Макет = УправлениеПечатью.ПолучитьМакет("Документ.АК_Договора.АК_ДоговорМонтажМебели");
	ОбластьМакета = Макет.ПолучитьОбласть("Заголовок");
    ОбластьМакета.Параметры.Номер =Выборка.Ссылка.номер;
	ОбластьМакета.Параметры.Дата =Формат(Выборка.Ссылка.дата,"ДЛФ=ДД");
    ТабличныйДокумент.Вывести(ОбластьМакета);

	ОбластьМакета = Макет.ПолучитьОбласть("Текст");
		
	ОбластьМакета.Параметры.Контрагент =АК_Контрагент;
	ОбластьМакета.Параметры.ФизЛицоКонтрагент =склонениеФИО;
	ОбластьМакета.Параметры.Соглашение =Выборка.Соглашение;
 	ОбластьМакета.Параметры.СуммаПрописью = ФормированиеПечатныхФорм.СформироватьСуммуПрописью(АК_Сумма, ВалютаУпр);
	ОбластьМакета.Параметры.СуммаБезНДС = ФормированиеПечатныхФорм.СформироватьСуммуПрописью(АК_СУммаБезНДС, ВалютаУпр);

	ТабличныйДокумент.Вывести(ОбластьМакета);
	ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
	ОбластьМакета = Макет.ПолучитьОбласть("Реквизиты");
    ОбластьМакета.Параметры.СтрокаСРеквизитами =СтрокаСРеквизитами;
	ОбластьМакета.Параметры.ФизЛицоНадпись =ФизЛицоНадпись;
	ОбластьМакета.Параметры.ДолжностьФизЛицо =ДолжностьФизЛицо;

	ТабличныйДокумент.Вывести(ОбластьМакета);

	ТабличныйДокумент.АвтоМасштаб = Истина;
	
	Если ПривилегированныйРежим() Тогда
	    УстановитьПривилегированныйРежим(Ложь);	
	КонецЕсли;
	
	Возврат ТабличныйДокумент;
	КонецЦикла;
КонецФункции // 
 
Функция ПадежС(z1,Знач z2=2,Знач z3="*",z4=0) Экспорт
  z5=Найти(z1,"-");
  z6=?(z5=0,"","-"+ПадежС(Сред(z1,z5+1,СтрДлина(z1)-z5+1),z2,z3,z4));
  z1=НРег(?(z5=0,z1,Лев(z1,z5-1)));
  z7=Прав(z1,3);z8=Прав(z7,2);z9=Прав(z8,1);
  z5=СтрДлина(z1);
  za=Найти("ая ия ел ок яц ий па да ца ша ба та га ка",z8);
  zb=Найти("аеёийоуэюяжнгхкчшщ",Лев(z7,1));
  zc=Макс(z2,-z2);
  zd=?(za=4,5,Найти("айяь",z9));
  zd=?((zc=1)или(z9=".")или((z4=2)и(Найти("оиеу"+?(z3="ч","","бвгджзклмнпрстфхцчшщъ"),z9)>0))или((z4=1)и(Найти("мия мяэ лия кия жая лея",z7)>0)),9,?((zd=4)и(z3="ч"),2,?(z4=1,?(Найти("оеиую",z9)+Найти("их ых аа еа ёа иа оа уа ыа эа юа яа",z8)>0,9,?(z3<>"ч",?(za=1,7,?(z9="а",?(za>18,1,6),9)),?(((Найти("ой ый",z8)>0)и(z5>4)и(Прав(z1,4)<>"опой"))или((zb>10)и(za=16)),8,zd))),zd)));
  ze=Найти("лец вей бей дец пец мец нец рец вец аец иец ыец бер",z7);
  zf=?((zd=8)и(zc<>5),?((zb>15)или(Найти("жий ний",z7)>0),"е","о"),?(z1="лев","ьв",?((Найти("аеёийоуэюя",Сред(z1,z5-3 ,1))=0)и((zb>11)или(zb=0))и(ze<>45),"",?(za=7,"л",?(za=10,"к",?(za=13,"йц",?(ze=0,"",?(ze<12,"ь"+?(ze=1,"ц",""),?(ze<37,"ц",?(ze<49,"йц","р"))))))))));
//  zf=?((zd=9)или((z4=3)и(z3="ы")),z1,Лев(z1,z5-?((zd>6)или(zf<>""),2,?(zd>0,1,0)))+zf+СокрП(Сред("а у а "+Сред("оыые",Найти("внч",z9)+1,1)+"ме "+?(Найти("гжкхш",Лев(z8,1))>0,"и","ы")+" е у ойе я ю я ем"+?(za=16,"и","е")+" и е ю ейе и и ь ьюи и и ю ейи ойойу ойойойойуюойойгомуго"+?((zf="е")или(za=16)или((zb>12)и(zb<16)),"и","ы")+"мм",10*zd+2*zc-3,2)));
  zf=?((zd=9)или((z4=3)и(Прав(z1,1)="ы")),z1,Лев(z1,z5-?((zd>6)или(zf<>""),2,?(zd>0,1,0)))+zf+СокрП(Сред("а у а "+Сред("оыые",Найти("внч",z9)+1,1)+"ме "+?(Найти("гжкхш",Лев(z8,1))>0,"и","ы")+" е у ойе я ю я ем"+?(za=16,"и","е")+" и е ю ейе и и ь ьюи и и ю ейи ойойу ойойойойуюойойгомуго"+?((zf="е")или(za=16)или((zb>12)и(zb<16)),"и","ы")+"мм",10*zd+2*zc-3,2)));
Возврат ?(""=z1,"",?(z4>0,ВРег(Лев(zf,1))+?((z2<0)и(z4>1),".",Сред(zf,2)),zf)+z6);
КонецФункции

Функция ПадежП(Знач z1,Знач z2,z3=0) Экспорт
		
  z1=СокрЛП(z1);z4=Найти(z1+" "," ")+1;z5=Лев(z1,z4-2);z6=Прав(z5,2);
  z7=?((Найти("ая ий ый",z6)>0)и(Найти("ющий нный",Сред(z1,z4-5,4))=0)и(z3=0),"1","*");
Возврат НРег(?((z6="ая")или(Прав(z6,1)="а"),ПадежС(z5,z2,z7,1)+" "+ПадежС(Сред(z1,z4),z2),ПадежС(z5,z2,"ч",1)+?((z6="ий")и(Найти(z1," ")=0),""," "+?(z7="1",ПадежП(Сред(z1,z4),z2,Число(z7)),Сред(z1,z4)))));
КонецФункции

Функция Падеж(Знач z1,Знач z2,z3=0) Экспорт
	
	z1 = z1+" ";
	ФИО="";
	Пока Найти(z1," ") Цикл
		z11 = Лев(z1,Найти(z1," ")-1);
		z1 = Сред(z1,Найти(z1," ")+1);
		Если ЗначениеЗаполнено(ФИО) Тогда
			ФИО = ФИО + " ";
		КонецЕсли;	
		ФИО = ФИО+ВРег(Лев(ПадежП(z11,2,),1))+Сред(ПадежП(z11,2,),2);
	КонецЦикла;	
	возврат ФИО;
КонецФункции	

Функция  СократитьФИО(Знач z1)
	
	
	z1=z1+" ";
	ФИО=Лев(z1,Найти(z1," ")-1);
	z1= Сред(z1,Найти(z1," ")+1);
	Пока Найти(z1," ") Цикл
         ФИО=ФИО+ " "+ВРег(Лев(z1,1))+".";
		 z1=Сред(z1,Найти(z1," ")+1);
	 КонецЦикла;
	 возврат ФИО;

 КонецФункции
 
 
 