#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

////////////////////////////////////////////////////////////////////////////////
// ПРОГРАММНЫЙ ИНТЕРФЕЙС


////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ



////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

///////////////////////////////////////////////////////////////////////////////
// Проведение

Процедура ИнициализироватьДанныеДокумента(ДокументСсылка, СтруктураДополнительныеСвойства) Экспорт
	
	Запрос = Новый Запрос("ВЫБРАТЬ
	|	ДанныеДокумента.Дата КАК Период,
	|	ДанныеДокумента.ХозяйственнаяОперация КАК ХозяйственнаяОперация,
	|	ДанныеДокумента.Организация КАК Организация,
	|	ДанныеДокумента.Подразделение КАК Подразделение
	|ИЗ
	|	Документ.НачисленияКредитовИДепозитов КАК ДанныеДокумента
	|ГДЕ
	|	ДанныеДокумента.Ссылка = &Ссылка");
	Запрос.УстановитьПараметр("Ссылка", ДокументСсылка);
	Реквизиты = Запрос.Выполнить().Выбрать();
	Реквизиты.Следующий();
	
	МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	ИнициализироватьКлючиАналитикиУчетаПоПартнерам(Реквизиты, ДокументСсылка, МенеджерВременныхТаблиц);
	
	Запрос.Текст = ТекстЗапросаТаблицаПрочиеДоходы()
		+ ТекстЗапросаТаблицаПрочиеРасходы()
		+ ТексЗапросаТаблицаРасчетыПоДоговорамКредитовИДепозитов();
	
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("Период", Реквизиты.Период);
	Запрос.УстановитьПараметр("Организация", Реквизиты.Организация);
	Запрос.УстановитьПараметр("ХозяйственнаяОперация", Реквизиты.ХозяйственнаяОперация);
	Запрос.УстановитьПараметр("Подразделение", Реквизиты.Подразделение);
	Запрос.УстановитьПараметр("ИспользоватьУчетПрочихДоходовРасходов", ПолучитьФункциональнуюОпцию("ИспользоватьУчетПрочихДоходовРасходов")); 
	
	ВалютаУпр = Константы.ВалютаУправленческогоУчета.Получить();
	ВалютаРегл = Константы.ВалютаРегламентированногоУчета.Получить();	
	КурсРегл = РаботаСКурсамиВалют.ПолучитьКурсВалюты(ВалютаРегл, Реквизиты.Период);
	
	МассивРезультатов = Запрос.ВыполнитьПакет();
		
	ТаблицаПрочиеДоходы = МассивРезультатов[0].Выгрузить();
	Для Каждого Стр Из ТаблицаПрочиеДоходы Цикл
		
		КурсУпр = РаботаСКурсамиВалют.ПолучитьКурсВалюты(ВалютаУпр, Стр.Период);
		КурсВзаиморасчетов = РаботаСКурсамиВалют.ПолучитьКурсВалюты(Стр.Валюта, Стр.Период);
		Стр.Сумма = РаботаСКурсамиВалютКлиентСервер.ПересчитатьПоКурсу(
												Стр.Сумма, 
												Новый Структура("Валюта, Курс, Кратность", КурсВзаиморасчетов.Валюта, КурсВзаиморасчетов.Курс, КурсВзаиморасчетов.Кратность),
												Новый Структура("Валюта, Курс, Кратность", КурсУпр.Валюта, КурсУпр.Курс, КурсУпр.Кратность)
											);
	КонецЦикла;
	СтруктураДополнительныеСвойства.ТаблицыДляДвижений.Вставить("ТаблицаПрочиеДоходы", ТаблицаПрочиеДоходы);
	
	ТаблицаПрочиеРасходы = МассивРезультатов[1].Выгрузить();
	Для Каждого Стр Из ТаблицаПрочиеРасходы Цикл
		
		КурсУпр = РаботаСКурсамиВалют.ПолучитьКурсВалюты(ВалютаУпр, Стр.Период);
		КурсВзаиморасчетов = РаботаСКурсамиВалют.ПолучитьКурсВалюты(Стр.Валюта, Стр.Период);
		Стр.Сумма = РаботаСКурсамиВалютКлиентСервер.ПересчитатьПоКурсу(
												Стр.Сумма, 
												Новый Структура("Валюта, Курс, Кратность", КурсВзаиморасчетов.Валюта, КурсВзаиморасчетов.Курс, КурсВзаиморасчетов.Кратность),
												Новый Структура("Валюта, Курс, Кратность", КурсУпр.Валюта, КурсУпр.Курс, КурсУпр.Кратность)
											);
		Стр.СуммаБезНДС = РаботаСКурсамиВалютКлиентСервер.ПересчитатьПоКурсу(
												Стр.СуммаБезНДС, 
												Новый Структура("Валюта, Курс, Кратность", КурсВзаиморасчетов.Валюта, КурсВзаиморасчетов.Курс, КурсВзаиморасчетов.Кратность),
												Новый Структура("Валюта, Курс, Кратность", КурсУпр.Валюта, КурсУпр.Курс, КурсУпр.Кратность)
											);
		Стр.СуммаРегл = РаботаСКурсамиВалютКлиентСервер.ПересчитатьПоКурсу(
												Стр.СуммаРегл, 
												Новый Структура("Валюта, Курс, Кратность", КурсВзаиморасчетов.Валюта, КурсВзаиморасчетов.Курс, КурсВзаиморасчетов.Кратность),
												Новый Структура("Валюта, Курс, Кратность", КурсРегл.Валюта, КурсРегл.Курс, КурсРегл.Кратность)
											);
	КонецЦикла;
	СтруктураДополнительныеСвойства.ТаблицыДляДвижений.Вставить("ТаблицаПрочиеРасходы", ТаблицаПрочиеРасходы);
	
	СтруктураДополнительныеСвойства.ТаблицыДляДвижений.Вставить("ТаблицаРасчетыПоДоговорамКредитовИДепозитов", МассивРезультатов[2].Выгрузить());	
	
КонецПроцедуры

Процедура ИнициализироватьКлючиАналитикиУчетаПоПартнерам(Реквизиты, ДокументСсылка, МенеджерВременныхТаблиц)

	Запрос = Новый Запрос(
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	&Организация КАК Организация,
	|	ТаблицаНачислений.Контрагент КАК Контрагент,
	|	ТаблицаНачислений.Контрагент.Партнер КАК Партнер
	|ИЗ
	|	Документ.НачисленияКредитовИДепозитов.Начисления КАК ТаблицаНачислений
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаПоПартнерам КАК Аналитика
	|		ПО (&Организация = Аналитика.Организация)
	|			И ТаблицаНачислений.Контрагент = Аналитика.Контрагент
	|			И ТаблицаНачислений.Контрагент.Партнер = Аналитика.Партнер
	|ГДЕ
	|	ТаблицаНачислений.Ссылка = &Ссылка
	|	И Аналитика.КлючАналитики ЕСТЬ NULL ");
	Запрос.УстановитьПараметр("Ссылка", ДокументСсылка);
	Запрос.УстановитьПараметр("Организация", Реквизиты.Организация);
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;

	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		РегистрыСведений.АналитикаУчетаПоПартнерам.СоздатьКлючАналитики(Выборка);
	КонецЦикла;

КонецПроцедуры

Функция ТекстЗапросаТаблицаПрочиеДоходы()
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ТаблицаДоходы.НомерСтроки КАК НомерСтроки,
	|	&Период КАК Период,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	&Организация КАК Организация,
	|	&Подразделение КАК Подразделение,
	|	ТаблицаДоходы.СтатьяДоходовРасходов КАК СтатьяДоходов,
	|	ТаблицаДоходы.Договор КАК АналитикаДоходов,	
	|	ТаблицаДоходы.ВалютаВзаиморасчетов КАК Валюта,
	|	ТаблицаДоходы.СуммаВзаиморасчетов КАК Сумма,
	|	&ХозяйственнаяОперация КАК ХозяйственнаяОперация
	|ИЗ
	|	Документ.НачисленияКредитовИДепозитов.Начисления КАК ТаблицаДоходы
	|ГДЕ
	|	ТаблицаДоходы.Ссылка = &Ссылка
	|	И &ИспользоватьУчетПрочихДоходовРасходов
	|	И &ХозяйственнаяОперация В (
	|			ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.НачисленияПоДепозитам), 
	|			ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.НачисленияПоЗаймамВыданным))
	|;
	|////////////////////////////////////////////////////////////////////////////////
	|";

	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаПрочиеРасходы()

	ТекстЗапроса = "
	|ВЫБРАТЬ
	|	ТаблицаРасходы.НомерСтроки КАК НомерСтроки,
	|	ТаблицаРасходы.Дата КАК Период,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	&Организация КАК Организация,
	|	&Подразделение КАК Подразделение,
	|	ТаблицаРасходы.СтатьяДоходовРасходов КАК СтатьяРасходов,
	|	ТаблицаРасходы.Договор КАК АналитикаРасходов,	
	|	ТаблицаРасходы.ВалютаВзаиморасчетов КАК Валюта,
	|
	|	ТаблицаРасходы.СуммаВзаиморасчетов КАК Сумма,
	|
	|	ВЫБОР КОГДА ТаблицаРасходы.СтатьяДоходовРасходов.ВариантРаспределенияРасходов = ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаСебестоимостьТоваров) ТОГДА
	|		ТаблицаРасходы.СуммаВзаиморасчетов
	|	ИНАЧЕ
	|		0
	|	КОНЕЦ КАК СуммаБезНДС,
	|
	|	ТаблицаРасходы.СуммаВзаиморасчетов КАК СуммаРегл,
	|
	|	&ХозяйственнаяОперация КАК ХозяйственнаяОперация
	|ИЗ
	|	Документ.НачисленияКредитовИДепозитов.Начисления КАК ТаблицаРасходы
	|ГДЕ
	|	ТаблицаРасходы.Ссылка = &Ссылка
	|	И &ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.НачисленияПоКредитам)
	|	И &ИспользоватьУчетПрочихДоходовРасходов
	|;
	|////////////////////////////////////////////////////////////////////////////////
	|";

	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТексЗапросаТаблицаРасчетыПоДоговорамКредитовИДепозитов()
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ВЫБОР
	|		КОГДА ТаблицаНачислений.Договор.ХарактерДоговора = ЗНАЧЕНИЕ(Перечисление.ХарактерДоговораКредитовИДепозитов.КредитИлиЗайм)
	|			ТОГДА ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|		ИНАЧЕ ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|	КОНЕЦ КАК ВидДвижения,
	|	ТаблицаНачислений.Дата КАК Период,
	|	&Организация,
	|	ТаблицаНачислений.Контрагент.Партнер КАК Партнер,
	|	ТаблицаНачислений.Контрагент,
	|	ЕСТЬNULL(АналитикаПоПартнерам.КлючАналитики, НЕОПРЕДЕЛЕНО) КАК АналитикаУчетаПоПартнерам,
	|	ТаблицаНачислений.Договор,
	|	ТаблицаНачислений.ВалютаВзаиморасчетов КАК Валюта,
	|	ТаблицаНачислений.СтатьяДоходовРасходов,
	|	ТаблицаНачислений.СтатьяДоходовРасходов КАК СтатьяАналитики,
	|	ЗНАЧЕНИЕ(Перечисление.ТипГрафикаКредитовИДепозитов.Начисления) КАК ТипГрафика,
	|	ТаблицаНачислений.ТипСуммыГрафика КАК ТипСуммы,
	|	ТаблицаНачислений.СуммаВзаиморасчетов КАК СуммаВВалюте
	|ИЗ
	|	Документ.НачисленияКредитовИДепозитов.Начисления КАК ТаблицаНачислений
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаПоПартнерам КАК АналитикаПоПартнерам
	|		ПО (&Организация = АналитикаПоПартнерам.Организация)
	|			И ТаблицаНачислений.Контрагент.Партнер = АналитикаПоПартнерам.Партнер
	|			И ТаблицаНачислений.Контрагент = АналитикаПоПартнерам.Контрагент
	|ГДЕ
	|	ТаблицаНачислений.Ссылка = &Ссылка
	|;
	|////////////////////////////////////////////////////////////////////////////////
	|";
	
	Возврат ТекстЗапроса;
	
КонецФункции	


#КонецЕсли