#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

////////////////////////////////////////////////////////////////////////////////
// ПРОГРАММНЫЙ ИНТЕРФЕЙС

//Имена реквизитов, от значений которых зависят параметры указания серий
//
//	Возвращаемое значение:
//		Строка - имена реквизитов, перечисленные через запятую
//
Функция ИменаРеквизитовДляЗаполненияПараметровУказанияСерий() Экспорт
	ИменаРеквизитов = "Склад,Помещение,Статус,СкладскаяОперация,Распоряжение";
	
	Возврат ИменаРеквизитов;
КонецФункции

//Возвращает параметры указания серий для товаров, указанных в документе
//
//	Параметры
//			Объект - Структура - структура значений реквизитов объекта, необходимых для заполнения параметров указания серий
//	Возвращаемое значение
//			Тип Структура
//				Состав полей задается в функции ОбработкаТабличнойЧастиКлиентСервер.ПараметрыУказанияСерий
//
Функция ПараметрыУказанияСерий(Объект) Экспорт
	
	ПараметрыУказанияСерий = НоменклатураКлиентСервер.ПараметрыУказанияСерий();
	
	ПараметрыУказанияСерий.ИспользоватьСерииНоменклатуры = 
				ПолучитьФункциональнуюОпцию("ИспользоватьСерииНоменклатурыСклад",Новый Структура("Склад",Объект.Склад));
	
	ПараметрыУказанияСерий.СкладскиеОперации.Добавить(Объект.СкладскаяОперация);
	
	Если Объект.Статус = Перечисления.СтатусыРасходныхОрдеров.КУказаниюСерий Тогда
		
		ПараметрыУказанияСерий.ПодготовкаОрдера = Истина;
		ПараметрыУказанияСерий.ПланированиеОтгрузки = Ложь;
		ПараметрыУказанияСерий.ПланированиеОтбора = Ложь;
		ПараметрыУказанияСерий.ПроверкаОтбора = Ложь;
		ПараметрыУказанияСерий.ФактОтбора = Ложь;
		
	ИначеЕсли Объект.Статус = Перечисления.СтатусыРасходныхОрдеров.КОтбору Тогда
		
		ПараметрыУказанияСерий.ПодготовкаОрдера = Ложь;
		ПараметрыУказанияСерий.ПланированиеОтгрузки = Ложь;
		ПараметрыУказанияСерий.ПланированиеОтбора = Истина;
		ПараметрыУказанияСерий.ПроверкаОтбора = Ложь;
		ПараметрыУказанияСерий.ФактОтбора = Ложь;
		
	ИначеЕсли Объект.Статус = Перечисления.СтатусыРасходныхОрдеров.КПроверке Тогда	
		
		Если СкладыСервер.ИспользоватьАдресноеХранение(Объект.Склад, Объект.Помещение) Тогда
			ПараметрыУказанияСерий.ПоляСвязи.Добавить("Упаковка");
		КонецЕсли;
		
		ПараметрыУказанияСерий.ПодготовкаОрдера = Ложь;
		ПараметрыУказанияСерий.ПланированиеОтгрузки = Ложь;
		ПараметрыУказанияСерий.ПланированиеОтбора = Ложь;
		ПараметрыУказанияСерий.ПроверкаОтбора = Истина;
		ПараметрыУказанияСерий.ФактОтбора = Ложь;
		
	ИначеЕсли Объект.Статус = Перечисления.СтатусыРасходныхОрдеров.КОтгрузке
		Или Объект.Статус = Перечисления.СтатусыРасходныхОрдеров.Отгружен Тогда
		
		Если СкладыСервер.ИспользоватьАдресноеХранение(Объект.Склад, Объект.Помещение) Тогда
			ПараметрыУказанияСерий.ПоляСвязи.Добавить("Упаковка");
		КонецЕсли;
		
		ПараметрыУказанияСерий.ПодготовкаОрдера = Ложь;
		ПараметрыУказанияСерий.ПланированиеОтгрузки = Ложь;
		ПараметрыУказанияСерий.ПланированиеОтбора = Ложь;
		ПараметрыУказанияСерий.ПроверкаОтбора = Ложь;
		ПараметрыУказанияСерий.ФактОтбора = Истина;
		
	КонецЕсли;
	
	ПараметрыУказанияСерий.ЭтоОрдер = Истина;
	ПараметрыУказанияСерий.ИмяПоляПомещение = "Помещение";
	ПараметрыУказанияСерий.ДокументОтгрузки = Объект.Распоряжение;
	                             
	Возврат ПараметрыУказанияСерий;
КонецФункции

// Возвращает складскую операцию по типу распоряжения
// Параметры:
//		 Распоряжение - ссылка на документ-распоряжение на поступление товаров
// Возвращаемое значение
//		Тип - ПеречислениеСсылка.СкладскиеОперации
Функция СкладскаяОперацияПоРаспоряжению(Распоряжение) Экспорт
	
	ТипРаспоряжения = ТипЗнч(Распоряжение);
		
	Если ТипРаспоряжения = Тип("ДокументСсылка.РеализацияТоваровУслуг") Тогда
		
		Возврат Перечисления.СкладскиеОперации.ОтгрузкаКлиенту;
		
	ИначеЕсли ТипРаспоряжения = Тип("ДокументСсылка.СборкаТоваров") Тогда
		
		Если Распоряжение.ТипОперации = Перечисления.ТипыОперацийЗаказаНаСборку.СборкаИзКомплектующих Тогда
			Возврат Перечисления.СкладскиеОперации.ОтгрузкаКомплектующихДляСборки;
		Иначе
			Возврат Перечисления.СкладскиеОперации.ОтгрузкаКомплектовДляРазборки;
		КонецЕсли;
			
	ИначеЕсли ТипРаспоряжения = Тип("ДокументСсылка.ПеремещениеТоваров") Тогда
		
		Возврат Перечисления.СкладскиеОперации.ОтгрузкаПоПеремещению;
		
	ИначеЕсли ТипРаспоряжения = Тип("ДокументСсылка.ВозвратТоваровПоставщику") Тогда
		
		Возврат Перечисления.СкладскиеОперации.ОтгрузкаПоВозвратуПоставщику;
		
	ИначеЕсли ТипРаспоряжения = Тип("ДокументСсылка.ВнутреннееПотреблениеТоваров") Тогда
		
		Возврат Перечисления.СкладскиеОперации.ОтгрузкаНаВнутренниеНужды;
		
	Иначе 
		
		Возврат Перечисления.СкладскиеОперации.ПустаяСсылка();
		
	КонецЕсли;
	
КонецФункции

//Определяет по распоряжению и складу, выполянется ли отгрузка по заданию на перевозку или нет.
//Возвращает структуру реквизитов по доставке
//	Параметры
//		ЗначенияРеквизитов - структура со значениями реквизитов ордера (Склад, Распоряжение, ДатаОтгрузки, Приоритет)
//	Возвращаемое значение:
//		Структура:
//			ОтгрузкаПоЗаданиюНаПеревозку - Булево	
//          ЗаданиеНаПеревозку - ДокументСсылка.ЗаданиеНаПеревозку
//			ПорядокДоставки - Строка
//			ДатаОтгрузки - Дата
//			Приоритет - ПеречислениеСсылка.Приоритеты
//
Функция РеквизитыДоставкиПоРаспоряжению(ЗначенияРеквизитов) Экспорт
	
	СтрутураВозврата = Новый Структура;
	
	СтрутураВозврата.Вставить("ОтгрузкаПоЗаданиюНаПеревозку", Ложь);
	СтрутураВозврата.Вставить("ЗаданиеНаПеревозку", Документы.ЗаданиеНаПеревозку.ПустаяСсылка());
	СтрутураВозврата.Вставить("ПорядокДоставки", "");
	СтрутураВозврата.Вставить("ДатаОтгрузки", ЗначенияРеквизитов.ДатаОтгрузки);
  	СтрутураВозврата.Вставить("Приоритет", ЗначенияРеквизитов.Приоритет);

	Если Не (ЗначениеЗаполнено(ЗначенияРеквизитов.Склад)
		И СкладыСервер.НачинатьОтгрузкуПослеФормированияЗаданияНаПеревозку(ЗначенияРеквизитов.Склад)
		И (ТипЗнч(ЗначенияРеквизитов.Распоряжение) = Тип("ДокументСсылка.РеализацияТоваровУслуг")
			Или ТипЗнч(ЗначенияРеквизитов.Распоряжение) = Тип("ДокументСсылка.ПеремещениеТоваров"))) Тогда
			Возврат СтрутураВозврата;
	КонецЕсли;
	
	РеквизитыРаспоряжения = Новый Структура("СпособДоставки");
	
	РеквизитыРаспоряжения = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(ЗначенияРеквизитов.Распоряжение, РеквизитыРаспоряжения);
	
	Если Не (РеквизитыРаспоряжения.СпособДоставки = Перечисления.СпособыДоставки.ДоКлиента
		Или (РеквизитыРаспоряжения.СпособДоставки = Перечисления.СпособыДоставки.СиламиПеревозчикаПоАдресу)) Тогда
			Возврат СтрутураВозврата;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ЗаданиеНаПеревозкуРаспоряжения.Ссылка.КоличествоПунктов КАК КоличествоПунктов,
	|	ЗаданиеНаПеревозкуРаспоряжения.Ссылка КАК ЗаданиеНаПеревозку,
	|	ЗаданиеНаПеревозкуМаршрут.НомерСтроки КАК ПорядокВМаршруте,
	|	ЗаданиеНаПеревозкуРаспоряжения.Ссылка.ДатаВремяРейсаПланС КАК ПланВыезда,
	|	ЗаданиеНаПеревозкуРаспоряжения.Ссылка.Приоритет КАК Приоритет
	|ИЗ
	|	Документ.ЗаданиеНаПеревозку.Распоряжения КАК ЗаданиеНаПеревозкуРаспоряжения
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ЗаданиеНаПеревозку.Маршрут КАК ЗаданиеНаПеревозкуМаршрут
	|		ПО ЗаданиеНаПеревозкуРаспоряжения.Ссылка = ЗаданиеНаПеревозкуМаршрут.Ссылка
	|			И ЗаданиеНаПеревозкуРаспоряжения.КлючСвязи = ЗаданиеНаПеревозкуМаршрут.КлючСвязи
	|ГДЕ
	|	ЗаданиеНаПеревозкуРаспоряжения.Ссылка.Проведен
	|	И ЗаданиеНаПеревозкуРаспоряжения.Ссылка.Статус В (ЗНАЧЕНИЕ(Перечисление.СтатусыЗаданийНаПеревозку.КПогрузке), ЗНАЧЕНИЕ(Перечисление.СтатусыЗаданийНаПеревозку.Отправлен))
	|	И ЗаданиеНаПеревозкуРаспоряжения.Распоряжение = &Распоряжение";
	
	Запрос.УстановитьПараметр("Распоряжение", ЗначенияРеквизитов.Распоряжение);
	
	СтрутураВозврата.ОтгрузкаПоЗаданиюНаПеревозку = Истина;
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Если Выборка.Следующий() Тогда
		СтрутураВозврата.ЗаданиеНаПеревозку = Выборка.ЗаданиеНаПеревозку;
		СтрутураВозврата.ДатаОтгрузки       = Выборка.ПланВыезда;
		СтрутураВозврата.Приоритет          = Выборка.Приоритет;
		ПорядокДоставкиСтрока = НСтр("ru = '%ПорядокВМаршруте% из %КоличествоПунктов%'");
		
		ПорядокДоставкиСтрока = СтрЗаменить(ПорядокДоставкиСтрока,"%ПорядокВМаршруте%", Формат(Выборка.ПорядокВМаршруте,"ЧЦ=2; ЧВН="));
		ПорядокДоставкиСтрока = СтрЗаменить(ПорядокДоставкиСтрока,"%КоличествоПунктов%", Формат(Выборка.КоличествоПунктов,"ЧЦ=2; ЧВН="));
		
		СтрутураВозврата.ПорядокДоставки = ПорядокДоставкиСтрока;
	КонецЕсли;
	
	Возврат СтрутураВозврата;
КонецФункции

////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

////////////////////////////////////////////////////////////////////////////////
// Проведение

Процедура ИнициализироватьДанныеДокумента(ДокументСсылка, ДополнительныеСвойства) Экспорт

	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Ссылка", ДокументСсылка);
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ДанныеШапки.ДатаОтгрузки КАК Период,
	|	ДанныеШапки.Склад КАК Склад,
	|	ДанныеШапки.Статус КАК Статус,
	|	ДанныеШапки.Распоряжение КАК Распоряжение,
	|	ДанныеШапки.СкладскаяОперация КАК СкладскаяОперация,
	|	ВЫБОР
	|		КОГДА ДанныеШапки.Склад.ИспользоватьСкладскиеПомещения
	|			ТОГДА ДанныеШапки.Помещение.ИспользоватьАдресноеХранение
	|		ИНАЧЕ ДанныеШапки.Склад.ИспользоватьАдресноеХранение
	|	КОНЕЦ КАК ИспользоватьАдресноеХранение,
	|	ДанныеШапки.Помещение КАК Помещение,
	|	ДанныеШапки.ЗонаОтгрузки КАК ЗонаОтгрузки,
	|	ДанныеШапки.Склад.ИспользоватьСкладскиеПомещения КАК ИспользоватьСкладскиеПомещения
	|ИЗ
	|	Документ.РасходныйОрдерНаТовары КАК ДанныеШапки
	|ГДЕ
	|	ДанныеШапки.Ссылка = &Ссылка";
	Реквизиты = Запрос.Выполнить().Выбрать();
	Реквизиты.Следующий();

	Запрос.УстановитьПараметр("Статус",          		Реквизиты.Статус);
	Запрос.УстановитьПараметр("Период",          		Реквизиты.Период);                         
	Запрос.УстановитьПараметр("Склад",           		Реквизиты.Склад);
	Запрос.УстановитьПараметр("Распоряжение",			Реквизиты.Распоряжение);
	Запрос.УстановитьПараметр("Помещение",    			Реквизиты.Помещение);
	Запрос.УстановитьПараметр("ЗонаОтгрузки",    		Реквизиты.ЗонаОтгрузки);
	Запрос.УстановитьПараметр("ИспользоватьАдресноеХранение", Реквизиты.ИспользоватьАдресноеХранение);
 	Запрос.УстановитьПараметр("СкладскаяОперация", Реквизиты.СкладскаяОперация);
 	Запрос.УстановитьПараметр("ИспользоватьСкладскиеПомещения", Реквизиты.ИспользоватьСкладскиеПомещения);

	Запрос.Текст =
	// 0 ВтТаблицаТовары
	"ВЫБРАТЬ
	|	ТаблицаТовары.Номенклатура,
	|	ТаблицаТовары.Характеристика,
	|	ТаблицаТовары.Количество,
	|	ТаблицаТовары.СтатусУказанияСерий КАК СтатусУказанияСерий,
	|	ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка) КАК Серия
	|ПОМЕСТИТЬ ВтТаблицаТовары
	|ИЗ
	|	Документ.РасходныйОрдерНаТовары.Товары КАК ТаблицаТовары
	|ГДЕ
	|	ТаблицаТовары.Ссылка = &Ссылка
	|	И ТаблицаТовары.Количество <> 0
	|	И НЕ (ТаблицаТовары.СтатусУказанияСерий В (4, 6, 8, 10))
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ТаблицаСерии.Номенклатура,
	|	ТаблицаСерии.Характеристика,
	|	ТаблицаСерии.Количество,
	|	МАКСИМУМ(ТаблицаТовары.СтатусУказанияСерий),
	|	ТаблицаСерии.Серия
	|ИЗ
	|	Документ.РасходныйОрдерНаТовары.Серии КАК ТаблицаСерии
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.РасходныйОрдерНаТовары.Товары КАК ТаблицаТовары
	|		ПО ТаблицаСерии.Ссылка = ТаблицаТовары.Ссылка
	|			И ТаблицаСерии.Номенклатура = ТаблицаТовары.Номенклатура
	|			И ТаблицаСерии.Характеристика = ТаблицаТовары.Характеристика
	|ГДЕ
	|	ТаблицаСерии.Ссылка = &Ссылка
	|	И ТаблицаТовары.Ссылка = &Ссылка
	|	И ТаблицаСерии.Количество <> 0
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаСерии.Номенклатура,
	|	ТаблицаСерии.Характеристика,
	|	ТаблицаСерии.Серия,
	|	ТаблицаСерии.Количество
	|
	|ИМЕЮЩИЕ
	|	МАКСИМУМ(ТаблицаТовары.СтатусУказанияСерий) В (4, 6, 8, 10)
	|;
	|////////////////////////////////////////////////////////////////////////////////
	// 1 ТаблицаТоварыНаСкладах
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
	|	&Период КАК Период,
	|	&Склад КАК Склад,
	|	&Помещение КАК Помещение,
	|	ТаблицаТовары.Номенклатура КАК Номенклатура,
	|	ТаблицаТовары.Характеристика КАК Характеристика,
	|	ТаблицаТовары.Количество КАК ВНаличии,
	|	0 КАК КОтгрузке,
	|	ТаблицаТовары.Серия КАК Серия,
	|	ЛОЖЬ КАК КонтролироватьОстатки
	|ИЗ
	|	ВтТаблицаТовары КАК ТаблицаТовары
	|ГДЕ
	|	&Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыРасходныхОрдеров.Отгружен)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход),
	|	&Период,
	|	&Склад,
	|	&Помещение,
	|	ТаблицаТовары.Номенклатура,
	|	ТаблицаТовары.Характеристика,
	|	0,
	|	ТаблицаТовары.Количество,
	|	ТаблицаТовары.Серия,
	|	ВЫБОР
	|		КОГДА &Статус В (ЗНАЧЕНИЕ(Перечисление.СтатусыРасходныхОрдеров.КОтбору), ЗНАЧЕНИЕ(Перечисление.СтатусыРасходныхОрдеров.КУказаниюСерий))
	|			ТОГДА ВЫБОР
	|					КОГДА &ИспользоватьСкладскиеПомещения
	|						ТОГДА ИСТИНА
	|					КОГДА ТаблицаТовары.СтатусУказанияСерий В (6, 8)
	|						ТОГДА ИСТИНА
	|					ИНАЧЕ ЛОЖЬ
	|				КОНЕЦ
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ
	|ИЗ
	|	ВтТаблицаТовары КАК ТаблицаТовары
	|ГДЕ
	|	(&Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыРасходныхОрдеров.КПроверке)
	|			ИЛИ &Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыРасходныхОрдеров.КОтгрузке)
	|			ИЛИ &Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыРасходныхОрдеров.КОтбору)
	|			ИЛИ &Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыРасходныхОрдеров.КУказаниюСерий)
	|			ИЛИ &Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыРасходныхОрдеров.ВРаботе))
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	// 2 ТаблицаТоварыКОтгрузке
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
	|	&Период КАК Период,
	|	&Склад КАК Склад,
	|	ТаблицаТовары.Номенклатура КАК Номенклатура,
	|	ТаблицаТовары.Характеристика КАК Характеристика,
	|	ВЫБОР
	|		КОГДА ТаблицаТовары.СтатусУказанияСерий = 10
	|			ТОГДА ТаблицаТовары.Серия
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяССылка)
	|	КОНЕЦ КАК Серия,
	|	&Распоряжение КАК ДокументОтгрузки,
	|	ТаблицаТовары.Количество КАК КОтгрузке,
	|	0 КАК Собирается,
	|	0 КАК Собрано
	|ИЗ
	|	ВтТаблицаТовары КАК ТаблицаТовары
	|ГДЕ
	|	&Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыРасходныхОрдеров.Отгружен)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход),
	|	&Период,
	|	&Склад,
	|	ТаблицаТовары.Номенклатура,
	|	ТаблицаТовары.Характеристика,
	|	ВЫБОР
	|		КОГДА ТаблицаТовары.СтатусУказанияСерий = 10
	|			ТОГДА ТаблицаТовары.Серия
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяССылка)
	|	КОНЕЦ,
	|	&Распоряжение,
	|	0,
	|	ТаблицаТовары.Количество,
	|	0
	|ИЗ
	|	ВтТаблицаТовары КАК ТаблицаТовары
	|ГДЕ
	|	&Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыРасходныхОрдеров.КПроверке)
	|		ИЛИ &Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыРасходныхОрдеров.КОтбору)
	|		ИЛИ &Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыРасходныхОрдеров.КУказаниюСерий)
	|		ИЛИ &Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыРасходныхОрдеров.ВРаботе)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход),
	|	&Период,
	|	&Склад,
	|	ТаблицаТовары.Номенклатура,
	|	ТаблицаТовары.Характеристика,
	|	ВЫБОР
	|		КОГДА ТаблицаТовары.СтатусУказанияСерий = 10
	|			ТОГДА ТаблицаТовары.Серия
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяССылка)
	|	КОНЕЦ,
	|	&Распоряжение,
	|	0,
	|	0,
	|	ТаблицаТовары.Количество
	|ИЗ
	|	ВтТаблицаТовары КАК ТаблицаТовары
	|ГДЕ
	|	&Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыРасходныхОрдеров.КОтгрузке)
	|
	|;
	|////////////////////////////////////////////////////////////////////////////////
	// 3 ТаблицаТоварыКОтбору
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
	|	&Период КАК Период,
	|	ТаблицаТовары.Номенклатура КАК Номенклатура,
	|	ТаблицаТовары.Характеристика КАК Характеристика,
	|	ВЫБОР
	|		КОГДА ТаблицаТовары.СтатусУказанияСерий В (6, 8, 10)
	|			ТОГДА ТаблицаТовары.Серия
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяССылка)
	|	КОНЕЦ КАК Серия,
	|	&Ссылка КАК Распоряжение,
	|	ТаблицаТовары.Количество КАК Отобрано,
	|	0 КАК КОтбору
	|ИЗ
	|	ВтТаблицаТовары КАК ТаблицаТовары
	|ГДЕ
	|	&ИспользоватьАдресноеХранение
	|	И (&Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыРасходныхОрдеров.Отгружен)
	|			ИЛИ &Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыРасходныхОрдеров.КОтгрузке)
	|			ИЛИ &Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыРасходныхОрдеров.КПроверке)
	|			ИЛИ &Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыРасходныхОрдеров.ВРаботе))
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход),
	|	&Период,
	|	ТаблицаТовары.Номенклатура,
	|	ТаблицаТовары.Характеристика,
	|	ВЫБОР
	|		КОГДА ТаблицаТовары.СтатусУказанияСерий В (6, 8, 10)
	|			ТОГДА ТаблицаТовары.Серия
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяССылка)
	|	КОНЕЦ КАК Серия,
	|	&Ссылка,
	|	0,
	|	ТаблицаТовары.Количество
	|ИЗ
	|	ВтТаблицаТовары КАК ТаблицаТовары
	|ГДЕ
	|	&ИспользоватьАдресноеХранение
	|	И &Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыРасходныхОрдеров.КОтбору)
	|;
	|////////////////////////////////////////////////////////////////////////////////
	// 4 ТаблицаДвиженияСерийТоваров
	|ВЫБРАТЬ
	|	ТаблицаСерии.Номенклатура КАК Номенклатура,
	|	ТаблицаСерии.Характеристика КАК Характеристика,
	|	ТаблицаСерии.Серия КАК Серия,
	|	ТаблицаСерии.Количество КАК Количество,
	|	&Склад КАК Склад,
	|	&Помещение КАК Помещение,
	|	&СкладскаяОперация КАК СкладскаяОперация,
	|	&Распоряжение КАК Документ,
	|	&Период КАК Период,
	|	&Ссылка КАК Регистратор,
	|	ТаблицаСерии.НомерСтроки КАК НомерСтроки
	|ИЗ
	|	Документ.РасходныйОрдерНаТовары.Серии КАК ТаблицаСерии
	|
	|ГДЕ
	|	ТаблицаСерии.Ссылка = &Ссылка
	|	И ТаблицаСерии.Количество <> 0
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки
	|;
	|////////////////////////////////////////////////////////////////////////////////
	// 5 ТаблицаРезервыСерий
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
	|	&Период                                КАК Период,
	|	&Склад                                 КАК Склад,
	|	ТаблицаТовары.Номенклатура             КАК Номенклатура,
	|	ТаблицаТовары.Характеристика           КАК Характеристика,
	|	ТаблицаТовары.Серия                    КАК Серия,
	|	&Распоряжение                          КАК ДокументРезерва,
	|	ТаблицаТовары.Количество               КАК Количество
	|ИЗ
	|	ВтТаблицаТовары КАК ТаблицаТовары
	|ГДЕ
	|	ТаблицаТовары.СтатусУказанияСерий = 10
	|";	
	
	Результат = Запрос.ВыполнитьПакет();

	ДополнительныеСвойства.ТаблицыДляДвижений.Вставить("ТаблицаТоварыНаСкладах", Результат[1].Выгрузить());
	ДополнительныеСвойства.ТаблицыДляДвижений.Вставить("ТаблицаТоварыКОтгрузке", Результат[2].Выгрузить());
	ДополнительныеСвойства.ТаблицыДляДвижений.Вставить("ТаблицаТоварыКОтбору",   Результат[3].Выгрузить());
	ДополнительныеСвойства.ТаблицыДляДвижений.Вставить("ТаблицаДвиженияСерийТоваров",   Результат[4].Выгрузить());
	ДополнительныеСвойства.ТаблицыДляДвижений.Вставить("ТаблицаРезервыСерийТоваров",   Результат[5].Выгрузить());

КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// Печать

Процедура Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "РасходныйОрдерНаТовары") Тогда
		
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(
			КоллекцияПечатныхФорм,
			"РасходныйОрдерНаТовары",
			"Расходный ордер на товары",
			ПечатьРасходногоОрдераНаТовары(МассивОбъектов, ОбъектыПечати)
		);
	КонецЕсли;
	
	
	  	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "акОрдерНаТоварыСГрузовымиМестами") Тогда
		
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(
			КоллекцияПечатныхФорм,
			"акОрдерНаТоварыСГрузовымиМестами",
			"Ордер На Товары С Грузовыми Местами",
			ПечатьПриходногоОрдераНаТоварыСГрузовымиМестами(МассивОбъектов[0])
		);
	КонецЕсли;

КонецПроцедуры

//{ ООО "АСТЭК" Разработчик: Бурыкин Александр  27.11.2013
   
&НаСервере
функция ПечатьПриходногоОрдераНаТоварыСГрузовымиМестами(СсылкаНаДокумент) 
	
	//Если   ТИП(СсылкаНаДокумент) = ТИП(Документы.ПриходныйОрдерНаТовары) Тогда
		ДокументОбъект = СсылкаНаДокумент.получитьОбъект();
		ТабличнаяЧастьТовары = ДокументОбъект.Товары.выгрузить();	
		ТабличнаяЧастьГрузовыеМеста = ДокументОбъект.акГрузовыеМеста.выгрузить();	
		
		ТаблицаДляПечати = новый ТаблицаЗначений;
		ТаблицаДляПечати.Колонки.Добавить("Номенклатура");
		//ТаблицаДляПечати.колонки.добавить("ЕдиницаИзмерения");
		ТаблицаДляПечати.колонки.Добавить("КоличествоФакт");
		ТаблицаДляПечати.колонки.Добавить("ГрузовоеМесто");
		ТаблицаДляПечати.колонки.Добавить("КоличествоГрузовыхМестФакт");
		ТаблицаДляПечати.колонки.Добавить("КоличествоПринято");
		ТаблицаДляПечати.колонки.Добавить("Упаковка");

				
		Для каждого СтрокаТовары Из ТабличнаяЧастьТовары Цикл
			НоваяСтрока =	ТаблицаДляПечати.Добавить(); 
			НоваяСтрока.Номенклатура = СтрокаТовары.номенклатура;
			//НоваяСтрока.ЕдиницаИзмерения = СтрокаТовары.
			НоваяСтрока.КоличествоФакт = СтрокаТовары.Количество;
			НоваяСтрока.КоличествоГрузовыхМестФакт = СтрокаТовары.акКоличествоГрузовыхМестФакт;
			НоваяСтрока.Упаковка = СтрокаТовары.Упаковка;
			
			Отбор = новый структура("Номенклатура",СтрокаТовары.Номенклатура);
		Для каждого СтрокаОтбора из ТабличнаяЧастьГрузовыеМеста.найтиСтроки(Отбор) Цикл
		      НоваяСтрока =	ТаблицаДляПечати.Добавить(); 
              НоваяСтрока.номенклатура = СтрокаОтбора.НаименованиеГрузовогоМеста;
			  НоваяСтрока.КоличествоПринято = СтрокаОтбора.КоличествоПринято;
		КонецЦикла;
	КонецЦикла;

	
	Макет = СсылкаНаДокумент.получитьОбъект().ПолучитьМакет("акОрдерНаТоварыСГрузовымиМестами");

	//ОбластьШтрихкода = макет.ПолучитьОбласть("ОбластьШтрихкода");
	
	Заголовок = макет.ПолучитьОбласть("Заголовок");
	Поставщик = макет.ПолучитьОбласть("Поставщик");
	Шапка = макет.ПолучитьОбласть("Шапка");
	ШапкаТоваров = макет.ПолучитьОбласть("ШапкаТаблицы");
	
	СтрокаТаблицы = макет.ПолучитьОбласть("СтрокаТаблицы");
	СтрокаГрузовыхМест = макет.ПолучитьОбласть("СтрокаГрузовыхМест");
	
	ПодвалТаблицы = макет.ПолучитьОбласть("ПодвалТаблицы");
	Подписи = макет.ПолучитьОбласть("Подписи");
	
	
	
	ТабличныйДокумент = Новый ТабличныйДокумент;
	
	//ТабличныйДокумент.Вывести(ОбластьШтрихкода);
	
	Заголовок.Параметры.ТекстЗаголовка = Строка(СсылкаНаДокумент);	
	ТабличныйДокумент.Вывести(Заголовок);
	
	Поставщик.Параметры.ПредставлениеПартнера = СсылкаНаДокумент.распоряжение.партнер;	
	ТабличныйДокумент.Вывести(Поставщик);
	
	Шапка.Параметры.ПредставлениеСклада = СсылкаНаДокумент.склад;
	Шапка.Параметры.ПредставлениеРаспоряжения = СсылкаНаДокумент.распоряжение;
	ТабличныйДокумент.Вывести(Шапка); 
	
	ШапкаТоваров.Параметры.ИмяКолонкиКодов = "Артикул";
	ТабличныйДокумент.Вывести(ШапкаТоваров);
	
	НомерСтроки = 0;
	Для каждого СтрокаТаблицыПечати ИЗ ТаблицаДляПечати Цикл
		 НомерСтроки = НомерСтроки+1;
		Если ТИП("СправочникСсылка.Номенклатура") = ТипЗнч(СтрокаТаблицыПечати.номенклатура) Тогда
		СтрокаТаблицы.Параметры.номерСтроки = НомерСтроки; 
		СтрокаТаблицы.Параметры.артикул = СтрокаТаблицыПечати.номенклатура.артикул;
		СтрокаТаблицы.Параметры.товар = СтрокаТаблицыПечати.номенклатура;
		СтрокаТаблицы.Параметры.Количество   =  СтрокаТаблицыПечати.КоличествоФакт;
	//	СтрокаТаблицы.Параметры.ПредставлениеБазовойЕдиницыИзмерения = нету в ТЧ
		 СтрокаТаблицы.Параметры.ИтогГрузовыхМест   =  СтрокаТаблицыПечати.КоличествоГрузовыхМестФакт;	
		 ТабличныйДокумент.Вывести(СтрокаТаблицы);
		Иначе
		СтрокаГрузовыхМест.Параметры.номерСтроки = номерСтроки;
		СтрокаГрузовыхМест.Параметры.грузовоеМесто = СтрокаТаблицыПечати.номенклатура;
		СтрокаГрузовыхМест.Параметры.КоличествоГрузовыхМест = СтрокаТаблицыПечати.количествоПринято;
        ТабличныйДокумент.Вывести(СтрокаГрузовыхМест);
        КонецЕсли;

	КонецЦикла;

	ТабличныйДокумент.Вывести(ПодвалТаблицы);
	
    Подписи.Параметры.итоговаяСтрока = "Количество товаров: " + Строка(СсылкаНаДокумент.товары.количество());
	Подписи.Параметры.ПредставлениеОтветственного =  Пользователи.ТекущийПользователь();
	ТабличныйДокумент.Вывести(Подписи);
	
	
	       
	 
	 
	 
	 
	 	Возврат ТабличныйДокумент;	
		
	
КонецФункции

//}
Функция ПечатьРасходногоОрдераНаТовары(МассивОбъектов, ОбъектыПечати)
	
	ТабличныйДокумент = Новый ТабличныйДокумент;
	ТабличныйДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_РасходныйОрдерНаТовары_РасходныйОрдерНаТовары";
	
	КолонкаКодов = ФормированиеПечатныхФорм.ИмяДополнительнойКолонки();
	ВыводитьКоды = ЗначениеЗаполнено(КолонкаКодов);
	
	РеквизитыДокумента = Новый Структура("Номер, Дата, Префикс,Представление");
	СинонимДокумента = НСтр("ru='Расходный ордер на товары'");
	
	ИспользоватьУпаковкиНоменклатуры = ПолучитьФункциональнуюОпцию("ИспользоватьУпаковкиНоменклатуры");
	
	ЗапросПоШапке = Новый Запрос;
	ЗапросПоШапке.Текст = 
	"ВЫБРАТЬ
	|	РасходныйОрдерНаТовары.Ссылка,
	|	ПРЕДСТАВЛЕНИЕ(РасходныйОрдерНаТовары.Склад) КАК ПредставлениеСклада,
	|	ПРЕДСТАВЛЕНИЕ(РасходныйОрдерНаТовары.Помещение) КАК ПредставлениеПомещения,
	|	ПРЕДСТАВЛЕНИЕ(РасходныйОрдерНаТовары.ЗонаОтгрузки) КАК ПредставлениеЗоныОтгрузки,
	|	ВЫБОР
	|		КОГДА ТИПЗНАЧЕНИЯ(РасходныйОрдерНаТовары.Распоряжение) = ТИП(Документ.ПеремещениеТоваров)
	|			ТОГДА ПРЕДСТАВЛЕНИЕ(РасходныйОрдерНаТовары.Распоряжение.СкладПолучатель)
	|		ИНАЧЕ ВЫБОР
	|				КОГДА ТИПЗНАЧЕНИЯ(РасходныйОрдерНаТовары.Распоряжение) = ТИП(Документ.СборкаТоваров)
	|					ТОГДА ПРЕДСТАВЛЕНИЕ(РасходныйОрдерНаТовары.Распоряжение.Склад)
	|				ИНАЧЕ ВЫБОР
	|						КОГДА ТИПЗНАЧЕНИЯ(РасходныйОрдерНаТовары.Распоряжение) = ТИП(Документ.ВнутреннееПотреблениеТоваров)
	|							ТОГДА ПРЕДСТАВЛЕНИЕ(РасходныйОрдерНаТовары.Распоряжение.Подразделение)
	|						ИНАЧЕ ПРЕДСТАВЛЕНИЕ(РасходныйОрдерНаТовары.Распоряжение.Партнер)
	|					КОНЕЦ
	|			КОНЕЦ
	|	КОНЕЦ КАК ПредставлениеПартнера,
	|	ПРЕДСТАВЛЕНИЕ(РасходныйОрдерНаТовары.Распоряжение.Организация.Префикс) КАК РаспоряжениеПрефикс,
	|	ПРЕДСТАВЛЕНИЕ(РасходныйОрдерНаТовары.Распоряжение) КАК РаспоряжениеПредставление,
	|	РасходныйОрдерНаТовары.Распоряжение.Номер КАК РаспоряжениеНомер,
	|	РасходныйОрдерНаТовары.Распоряжение.Дата КАК РаспоряжениеДата,
	|	ПРЕДСТАВЛЕНИЕ(РасходныйОрдерНаТовары.Распоряжение.Организация) КАК ПредставлениеОрганизации,
	|	РасходныйОрдерНаТовары.Дата КАК Дата,
	|	РасходныйОрдерНаТовары.ДатаОтгрузки КАК ДатаОтгрузки,
	|	РасходныйОрдерНаТовары.Номер КАК Номер,
	|	РасходныйОрдерНаТовары.Ответственный.ФизическоеЛицо КАК Ответственный,
	|	РасходныйОрдерНаТовары.Склад КАК Склад,
	|	РасходныйОрдерНаТовары.Помещение КАК Помещение,
	|	РасходныйОрдерНаТовары.Склад.ИспользоватьСерииНоменклатуры КАК ИспользоватьСерииНоменклатуры,
	|	РасходныйОрдерНаТовары.ОтгрузкаПоЗаданиюНаПеревозку КАК ОтгрузкаПоЗаданиюНаПеревозку,
	|	РасходныйОрдерНаТовары.ПорядокДоставки КАК ПорядокДоставки,
	|	РасходныйОрдерНаТовары.ЗаданиеНаПеревозку.Дата КАК ЗаданиеНаПеревозкуДата,
	|	РасходныйОрдерНаТовары.ЗаданиеНаПеревозку.Номер КАК ЗаданиеНаПеревозкуНомер,
	|	ПРЕДСТАВЛЕНИЕ(РасходныйОрдерНаТовары.ЗаданиеНаПеревозку) КАК ЗаданиеНаПеревозкуПредставление
	|ИЗ
	|	Документ.РасходныйОрдерНаТовары КАК РасходныйОрдерНаТовары
	|ГДЕ
	|	РасходныйОрдерНаТовары.Ссылка В(&МассивОбъектов)
	|
	|УПОРЯДОЧИТЬ ПО
	|	РасходныйОрдерНаТовары.Ссылка
	|ИТОГИ ПО
	|	ИспользоватьСерииНоменклатуры";
	
	ЗапросПоШапке.УстановитьПараметр("МассивОбъектов", МассивОбъектов);
	
	ДеревоОбъектов = ЗапросПоШапке.Выполнить().Выгрузить(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	Для Каждого ИспользованиеСерий Из ДеревоОбъектов.Строки Цикл
						
		Если ИспользованиеСерий.ИспользоватьСерииНоменклатуры Тогда
			
			ТекстЗапросаПоТоварам = 
			"ВЫБРАТЬ
			|	РасходныйОрдерНаТоварыТовары.Ссылка КАК Ссылка,
			|	РасходныйОрдерНаТоварыТовары.Номенклатура.Код КАК Код,
			|	" + ?(ВыводитьКоды, "РасходныйОрдерНаТоварыТовары.Номенклатура." + КолонкаКодов +" КАК Артикул,", "") + "
			|	РасходныйОрдерНаТоварыТовары.Номенклатура.НаименованиеПолное КАК ПредставлениеНоменклатуры,
			|	РасходныйОрдерНаТоварыТовары.Характеристика.НаименованиеПолное КАК ПредставлениеХарактеристики,
			|	"""" КАК ПредставлениеСерии,
			|	РасходныйОрдерНаТоварыТовары.КоличествоУпаковок,
			|	РасходныйОрдерНаТоварыТовары.Количество,
			|	ПРЕДСТАВЛЕНИЕ(РасходныйОрдерНаТоварыТовары.Номенклатура.ЕдиницаИзмерения) КАК ПредставлениеБазовойЕдиницыИзмерения,
			|	ВЫБОР
			|		КОГДА РасходныйОрдерНаТоварыТовары.Упаковка <> ЗНАЧЕНИЕ(Справочник.УпаковкиНоменклатуры.ПустаяСсылка)
			|			ТОГДА ПРЕДСТАВЛЕНИЕ(РасходныйОрдерНаТоварыТовары.Упаковка)
			|		ИНАЧЕ ПРЕДСТАВЛЕНИЕ(РасходныйОрдерНаТоварыТовары.Номенклатура.ЕдиницаИзмерения)
			|	КОНЕЦ КАК ПредставлениеЕдининицыИзмеренияУпаковки
			|ИЗ
			|	Документ.РасходныйОрдерНаТовары.Товары КАК РасходныйОрдерНаТоварыТовары
			|
			|ГДЕ
			|	РасходныйОрдерНаТоварыТовары.Ссылка В(&МассивОбъектов)
			|	И НЕ (РасходныйОрдерНаТоварыТовары.СтатусУказанияСерий В (2, 4, 6, 8, 10))
			|
			|ОБЪЕДИНИТЬ ВСЕ
			|
			|ВЫБРАТЬ
			|	РасходныйОрдерНаТоварыСерии.Ссылка КАК Ссылка,
			|	РасходныйОрдерНаТоварыСерии.Номенклатура.Код КАК Код,
			|	" + ?(ВыводитьКоды, "РасходныйОрдерНаТоварыСерии.Номенклатура." + КолонкаКодов +" КАК Артикул,", "") + "
			|	РасходныйОрдерНаТоварыСерии.Номенклатура.НаименованиеПолное КАК ПредставлениеНоменклатуры,
			|	РасходныйОрдерНаТоварыСерии.Характеристика.НаименованиеПолное КАК ПредставлениеХарактеристики,
			|	РасходныйОрдерНаТоварыСерии.Серия.Наименование КАК ПредставлениеСерии,
			|	РасходныйОрдерНаТоварыСерии.КоличествоУпаковок,
			|	РасходныйОрдерНаТоварыСерии.Количество,
			|	ПРЕДСТАВЛЕНИЕ(РасходныйОрдерНаТоварыСерии.Номенклатура.ЕдиницаИзмерения) КАК ПредставлениеБазовойЕдиницыИзмерения,
			|	ВЫБОР
			|		КОГДА РасходныйОрдерНаТоварыСерии.Упаковка <> ЗНАЧЕНИЕ(Справочник.УпаковкиНоменклатуры.ПустаяСсылка)
			|			ТОГДА ПРЕДСТАВЛЕНИЕ(РасходныйОрдерНаТоварыСерии.Упаковка)
			|		ИНАЧЕ ПРЕДСТАВЛЕНИЕ(РасходныйОрдерНаТоварыСерии.Номенклатура.ЕдиницаИзмерения)
			|	КОНЕЦ КАК ПредставлениеЕдининицыИзмеренияУпаковки
			|ИЗ
			|	Документ.РасходныйОрдерНаТовары.Серии КАК РасходныйОрдерНаТоварыСерии
			|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.РасходныйОрдерНаТовары.Товары КАК ТаблицаТовары
			|		ПО РасходныйОрдерНаТоварыСерии.Ссылка = ТаблицаТовары.Ссылка
			|			И РасходныйОрдерНаТоварыСерии.Номенклатура = ТаблицаТовары.Номенклатура
			|			И РасходныйОрдерНаТоварыСерии.Характеристика = ТаблицаТовары.Характеристика
			|			И (РасходныйОрдерНаТоварыСерии.Упаковка = ТаблицаТовары.Упаковка
			|				ИЛИ РасходныйОрдерНаТоварыСерии.Ссылка.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыРасходныхОрдеров.КОтбору)
			|				ИЛИ РасходныйОрдерНаТоварыСерии.Ссылка.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыРасходныхОрдеров.КУказаниюСерий)
			|				ИЛИ НЕ ВЫБОР КОГДА РасходныйОрдерНаТоварыСерии.Ссылка.Склад.ИспользоватьСкладскиеПомещения ТОГДА
			|					РасходныйОрдерНаТоварыСерии.Ссылка.Помещение.ИспользоватьАдресноеХранение
			|				ИНАЧЕ
			|					РасходныйОрдерНаТоварыСерии.Ссылка.Склад.ИспользоватьАдресноеХранение
			|				КОНЕЦ)
			|	
			|ГДЕ
			|	РасходныйОрдерНаТоварыСерии.Ссылка В(&МассивОбъектов)
			|
			|СГРУППИРОВАТЬ ПО
			|	РасходныйОрдерНаТоварыСерии.Ссылка,
			|	РасходныйОрдерНаТоварыСерии.Номенклатура,
			|	РасходныйОрдерНаТоварыСерии.Характеристика,
			|	РасходныйОрдерНаТоварыСерии.Серия,
			|	РасходныйОрдерНаТоварыСерии.Упаковка,
			|	РасходныйОрдерНаТоварыСерии.КоличествоУпаковок,
			|	РасходныйОрдерНаТоварыСерии.Количество,
			|	РасходныйОрдерНаТоварыСерии.НомерСтроки
			|
			|ИМЕЮЩИЕ
			|	МАКСИМУМ(ТаблицаТовары.СтатусУказанияСерий) В (2, 4, 6, 8, 10)
			|
			|УПОРЯДОЧИТЬ ПО
			|	Ссылка,
			|	ПредставлениеНоменклатуры,
			|	ПредставлениеХарактеристики,
			|	ПредставлениеСерии
			|
			|ИТОГИ ПО
			|	Ссылка";
			
		Иначе
			
			ТекстЗапросаПоТоварам = 
			"ВЫБРАТЬ
			|	РасходныйОрдерНаТоварыТовары.Ссылка КАК Ссылка,
			|	РасходныйОрдерНаТоварыТовары.Номенклатура.Код КАК Код,
			|	" + ?(ВыводитьКоды, "РасходныйОрдерНаТоварыТовары.Номенклатура." + КолонкаКодов +" КАК Артикул,", "") + "
			|	РасходныйОрдерНаТоварыТовары.Номенклатура.НаименованиеПолное КАК ПредставлениеНоменклатуры,
			|	РасходныйОрдерНаТоварыТовары.Характеристика.НаименованиеПолное КАК ПредставлениеХарактеристики,
			|	"""" КАК ПредставлениеСерии,
			|	РасходныйОрдерНаТоварыТовары.КоличествоУпаковок,
			|	РасходныйОрдерНаТоварыТовары.Количество,
			|	ПРЕДСТАВЛЕНИЕ(РасходныйОрдерНаТоварыТовары.Номенклатура.ЕдиницаИзмерения) КАК ПредставлениеБазовойЕдиницыИзмерения,
			|	ВЫБОР
			|		КОГДА РасходныйОрдерНаТоварыТовары.Упаковка <> ЗНАЧЕНИЕ(Справочник.УпаковкиНоменклатуры.ПустаяСсылка)
			|			ТОГДА ПРЕДСТАВЛЕНИЕ(РасходныйОрдерНаТоварыТовары.Упаковка)
			|		ИНАЧЕ ПРЕДСТАВЛЕНИЕ(РасходныйОрдерНаТоварыТовары.Номенклатура.ЕдиницаИзмерения)
			|	КОНЕЦ КАК ПредставлениеЕдининицыИзмеренияУпаковки
			|ИЗ
			|	Документ.РасходныйОрдерНаТовары.Товары КАК РасходныйОрдерНаТоварыТовары
			|
			|ГДЕ
			|	РасходныйОрдерНаТоварыТовары.Ссылка В(&МассивОбъектов)
			|
			|УПОРЯДОЧИТЬ ПО
			|	Ссылка,
			|	РасходныйОрдерНаТоварыТовары.НомерСтроки
			|ИТОГИ ПО
			|	Ссылка";
			
		КонецЕсли;
	
		ЗапросПоТоварам = Новый Запрос;
		ЗапросПоТоварам.Текст = ТекстЗапросаПоТоварам;
		ЗапросПоТоварам.УстановитьПараметр("МассивОбъектов", ИспользованиеСерий.Строки.ВыгрузитьКолонку("Ссылка"));
		
		ВыборкаПоТабличнымЧастям = ЗапросПоТоварам.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		
		ПервыйДокумент = Истина;
	
		Для Каждого ВыборкаПоДокументам Из ИспользованиеСерий.Строки Цикл
			
			Если НЕ ВыборкаПоТабличнымЧастям.НайтиСледующий(Новый Структура("Ссылка",ВыборкаПоДокументам.Ссылка)) Тогда
				Продолжить;
			КонецЕсли;
			
			ИспользуетсяАдресноеХранение = СкладыСервер.ИспользоватьАдресноеХранение(ВыборкаПоДокументам.Склад, ВыборкаПоДокументам.Помещение);
			
			ВыводитьУпаковки = ИспользоватьУпаковкиНоменклатуры Или ИспользуетсяАдресноеХранение;
			
			//Макет получаем в цикле,т.к. ширина колонок зависит от склада и помещения в документе
			Макет = УправлениеПечатью.ПолучитьМакет("Документ.РасходныйОрдерНаТовары.ПФ_MXL_РасходныйОрдерНаТовары");
			
			ОбластьЗаголовок 		= Макет.ПолучитьОбласть("Заголовок");
			
			ОбластьЗаданиеНаПеревозку = Макет.ПолучитьОбласть("ЗаданиеНаПеревозку");
			
			ОбластьШапка 			= Макет.ПолучитьОбласть("Шапка");
			ОбластьПоставщик	 	= Макет.ПолучитьОбласть("Поставщик");
			ОбластьПокупатель	 	= Макет.ПолучитьОбласть("Покупатель");
			
			ОбластьШапкаТаблицыНачало 	= Макет.ПолучитьОбласть("ШапкаТаблицы|НачалоСтроки");
			ОбластьСтрокаТаблицыНачало 	= Макет.ПолучитьОбласть("СтрокаТаблицы|НачалоСтроки");
			ОбластьПодвалТаблицыНачало 	= Макет.ПолучитьОбласть("ПодвалТаблицы|НачалоСтроки");
			
			ОбластьШапкаТаблицыКолонкаКодов 	= Макет.ПолучитьОбласть("ШапкаТаблицы|КолонкаКодов");
			ОбластьСтрокаТаблицыКолонкаКодов 	= Макет.ПолучитьОбласть("СтрокаТаблицы|КолонкаКодов");
			ОбластьПодвалТаблицыКолонкаКодов 	= Макет.ПолучитьОбласть("ПодвалТаблицы|КолонкаКодов");
			
			ОбластьШапкаТаблицыКолонкаКодов.Параметры.ИмяКолонкиКодов = КолонкаКодов; 
			
			ОбластьШапкаТаблицыКолонкаУпаковок 		= Макет.ПолучитьОбласть("ШапкаТаблицы|КолонкаУпаковок");
			ОбластьСтрокаТаблицыКолонкаУпаковок 	= Макет.ПолучитьОбласть("СтрокаТаблицы|КолонкаУпаковок");
			ОбластьПодвалТаблицыКолонкаУпаковок		= Макет.ПолучитьОбласть("ПодвалТаблицы|КолонкаУпаковок");

			ОбластьПодписей = Макет.ПолучитьОбласть("Подписи");
			
			ОбластьКолонкаТоваров = Макет.Область("КолонкаТоваров");
			
			Если НЕ ВыводитьКоды Тогда
				ОбластьКолонкаТоваров.ШиринаКолонки = ОбластьКолонкаТоваров.ШиринаКолонки + Макет.Область("КолонкаКодов").ШиринаКолонки;
			КонецЕсли;
			
			Если НЕ ВыводитьУпаковки Тогда
				ОбластьКолонкаТоваров.ШиринаКолонки = ОбластьКолонкаТоваров.ШиринаКолонки + Макет.Область("КолонкаУпаковокКоличество").ШиринаКолонки
				+ Макет.Область("КолонкаУпаковокПредставление").ШиринаКолонки; 		
			КонецЕсли;
			
			ОбластьШапкаТаблицыКолонкаТоваров 	= Макет.ПолучитьОбласть("ШапкаТаблицы|КолонкаТоваров");
			ОбластьСтрокаТаблицыКолонкаТоваров 	= Макет.ПолучитьОбласть("СтрокаТаблицы|КолонкаТоваров");
			ОбластьПодвалТаблицыКолонкаТоваров 	= Макет.ПолучитьОбласть("ПодвалТаблицы|КолонкаТоваров");
			
			ОбластьШапкаТаблицыКонец 	= Макет.ПолучитьОбласть("ШапкаТаблицы|КонецСтроки");
			ОбластьСтрокаТаблицыКонец 	= Макет.ПолучитьОбласть("СтрокаТаблицы|КонецСтроки");
			ОбластьПодвалТаблицыКонец 	= Макет.ПолучитьОбласть("ПодвалТаблицы|КонецСтроки");
			
			ВыборкаПоСтрокамТЧ = ВыборкаПоТабличнымЧастям.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
			
			Если Не ПервыйДокумент Тогда
				ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
			КонецЕсли;
			
			ШтрихкодированиеПечатныхФорм.ВывестиШтрихкодВТабличныйДокумент(ТабличныйДокумент, Макет, ОбластьЗаголовок, ВыборкаПоДокументам.Ссылка);
			
			ПервыйДокумент = Ложь;
			НомерСтрокиНачало = ТабличныйДокумент.ВысотаТаблицы + 1;
					
			Если ИспользуетсяАдресноеХранение Тогда
				
				ТекстЗоны = НСтр("ru='Зона отгрузки:'");
				ЗонаПредставление = ВыборкаПоДокументам.ПредставлениеЗоныОтгрузки;
				
			Иначе
				
				ТекстЗоны = "";
				ЗонаПредставление = "";
				
			КонецЕсли;
			
			ЗаполнитьЗначенияСвойств(РеквизитыДокумента, ВыборкаПоДокументам);
			
			ОбластьЗаголовок.Параметры.ТекстЗаголовка = ОбщегоНазначенияУТКлиентСервер.СформироватьЗаголовокДокумента(РеквизитыДокумента, СинонимДокумента);
			
			ТабличныйДокумент.Вывести(ОбластьЗаголовок);
			
			ОбластьПоставщик.Параметры.Заполнить(ВыборкаПоДокументам);
			ТабличныйДокумент.Вывести(ОбластьПоставщик);
			
			Если ЗначениеЗаполнено(ВыборкаПоДокументам.ПредставлениеПартнера) Тогда
				//если не перемещение или оприходование
				ОбластьПокупатель.Параметры.Заполнить(ВыборкаПоДокументам);
				ТабличныйДокумент.Вывести(ОбластьПокупатель);
			КонецЕсли;
			
			ОбластьШапка.Параметры.ПредставлениеСклада			= СкладыСервер.ПолучитьПредставлениеСклада(ВыборкаПоДокументам.ПредставлениеСклада,ВыборкаПоДокументам.ПредставлениеПомещения);
			ОбластьШапка.Параметры.ТекстЗоны 					= ТекстЗоны;
			ОбластьШапка.Параметры.ПредставлениеЗоныОтгрузки	= ЗонаПредставление;
			
			РеквизитыДокумента.Дата          = ВыборкаПоДокументам.РаспоряжениеДата;
			РеквизитыДокумента.Номер         = ВыборкаПоДокументам.РаспоряжениеНомер;
			РеквизитыДокумента.Префикс       = ВыборкаПоДокументам.РаспоряжениеПрефикс;
			РеквизитыДокумента.Представление = ВыборкаПоДокументам.РаспоряжениеПредставление;
			
			ОбластьШапка.Параметры.ПредставлениеРаспоряжения	= ОбщегоНазначенияУТКлиентСервер.СформироватьЗаголовокДокумента(РеквизитыДокумента);
			ОбластьШапка.Параметры.ДатаОтгрузки					= ВыборкаПоДокументам.ДатаОтгрузки;
					
			ТабличныйДокумент.Вывести(ОбластьШапка);
			
			Если ВыборкаПоДокументам.ОтгрузкаПоЗаданиюНаПеревозку Тогда
				
				РеквизитыДокумента.Дата          = ВыборкаПоДокументам.ЗаданиеНаПеревозкуДата;
				РеквизитыДокумента.Номер         = ВыборкаПоДокументам.ЗаданиеНаПеревозкуНомер;
				РеквизитыДокумента.Префикс       = "";
				РеквизитыДокумента.Представление = ВыборкаПоДокументам.ЗаданиеНаПеревозкуПредставление;
				
				ОбластьЗаданиеНаПеревозку.Параметры.ПредставлениеЗаданияНаПеревозку	 =  ОбщегоНазначенияУТКлиентСервер.СформироватьЗаголовокДокумента(РеквизитыДокумента);				
				ОбластьЗаданиеНаПеревозку.Параметры.ПорядокДоставки = ВыборкаПоДокументам.ПорядокДоставки;
			
				ТабличныйДокумент.Вывести(ОбластьЗаданиеНаПеревозку);
				
			КонецЕсли;
		
			ТабличныйДокумент.Вывести(ОбластьШапкаТаблицыНачало);
			
			Если ВыводитьКоды Тогда
				ТабличныйДокумент.Присоединить(ОбластьШапкаТаблицыКолонкаКодов);
			КонецЕсли;
			
			ТабличныйДокумент.Присоединить(ОбластьШапкаТаблицыКолонкаТоваров);
			
			Если ВыводитьУпаковки Тогда
				ТабличныйДокумент.Присоединить(ОбластьШапкаТаблицыКолонкаУпаковок);
			КонецЕсли;
			
			ТабличныйДокумент.Присоединить(ОбластьШапкаТаблицыКонец);

			ВсегоНаименований = 0;
			
			Пока ВыборкаПоСтрокамТЧ.Следующий() Цикл
				
				ОбластьСтрокаТаблицыНачало.Параметры.Заполнить(ВыборкаПоСтрокамТЧ);
				ОбластьСтрокаТаблицыНачало.Параметры.НомерСтроки = ВсегоНаименований + 1;
				
				ТабличныйДокумент.Вывести(ОбластьСтрокаТаблицыНачало);
				
				Если ВыводитьКоды Тогда
					ОбластьСтрокаТаблицыКолонкаКодов.Параметры.Артикул = ВыборкаПоСтрокамТЧ[КолонкаКодов];
					ТабличныйДокумент.Присоединить(ОбластьСтрокаТаблицыКолонкаКодов);
				КонецЕсли;
				
				ОбластьСтрокаТаблицыКолонкаТоваров.Параметры.Товар = НоменклатураКлиентСервер.ПредставлениеНоменклатурыДляПечати(
					ВыборкаПоСтрокамТЧ.ПредставлениеНоменклатуры,
					ВыборкаПоСтрокамТЧ.ПредставлениеХарактеристики,
					, // Упаковка
					ВыборкаПоСтрокамТЧ.ПредставлениеСерии
				);
				
				ТабличныйДокумент.Присоединить(ОбластьСтрокаТаблицыКолонкаТоваров);
				
				Если ВыводитьУпаковки Тогда
					ОбластьСтрокаТаблицыКолонкаУпаковок.Параметры.Заполнить(ВыборкаПоСтрокамТЧ);
					ТабличныйДокумент.Присоединить(ОбластьСтрокаТаблицыКолонкаУпаковок);
				КонецЕсли;
				
				ОбластьСтрокаТаблицыКонец.Параметры.Заполнить(ВыборкаПоСтрокамТЧ);
				ТабличныйДокумент.Присоединить(ОбластьСтрокаТаблицыКонец);	
				
				ВсегоНаименований = ВсегоНаименований + 1;
				
			КонецЦикла;
			
			ТабличныйДокумент.Вывести(ОбластьПодвалТаблицыНачало);
			Если ВыводитьКоды Тогда
				ТабличныйДокумент.Присоединить(ОбластьПодвалТаблицыКолонкаКодов);
			КонецЕсли;
			ТабличныйДокумент.Присоединить(ОбластьПодвалТаблицыКолонкаТоваров);
			Если ВыводитьУпаковки Тогда
				ТабличныйДокумент.Присоединить(ОбластьПодвалТаблицыКолонкаУпаковок);
			КонецЕсли;
			ТабличныйДокумент.Присоединить(ОбластьПодвалТаблицыКонец);
			
			ТекстИтоговойСтроки = НСтр("ru = 'Всего наименований %ВсегоНаименований%'");
			ТекстИтоговойСтроки = СтрЗаменить(ТекстИтоговойСтроки,"%ВсегоНаименований%", ВсегоНаименований);
			ОбластьПодписей.Параметры.ИтоговаяСтрока = ТекстИтоговойСтроки;
			
			ОбластьПодписей.Параметры.ПредставлениеОтветсвенного = ФизическиеЛица.ФамилияИнициалыФизЛица(ВыборкаПоДокументам.Ответственный);
			
			ТабличныйДокумент.Вывести(ОбластьПодписей);
			
			УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабличныйДокумент, НомерСтрокиНачало, ОбъектыПечати, ВыборкаПоДокументам.Ссылка);
		КонецЦикла;
		
	КонецЦикла;
	
	ТабличныйДокумент.АвтоМасштаб = Истина;
	
	Возврат ТабличныйДокумент;	
КонецФункции

Функция ПолучитьДанныеДляПечатнойФормыОтборРазмещениеТоваров(ПараметрыПечати, МассивДокументов) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	РасходныйОрдерНаТовары.Ссылка КАК Ссылка,
	|	ПРЕДСТАВЛЕНИЕ(РасходныйОрдерНаТовары.Ссылка) КАК СсылкаПредставление,
	|	ПРЕДСТАВЛЕНИЕ(РасходныйОрдерНаТовары.Склад) КАК СкладПредставление,
	|	ПРЕДСТАВЛЕНИЕ(РасходныйОрдерНаТовары.Помещение) КАК ПомещениеПредставление,
	|	РасходныйОрдерНаТовары.Дата КАК Дата,
	|	РасходныйОрдерНаТовары.Номер КАК Номер,
	|	ЛОЖЬ КАК СкладыВТЧ,
	|	ЛОЖЬ КАК НарушенаОрдернаяСхема,
	|	ВЫБОР
	|		КОГДА РасходныйОрдерНаТовары.Склад.ИспользоватьСкладскиеПомещения
	|			ТОГДА РасходныйОрдерНаТовары.Помещение.ИспользоватьАдресноеХранениеСправочно
	|		ИНАЧЕ РасходныйОрдерНаТовары.Склад.ИспользоватьАдресноеХранениеСправочно
	|	КОНЕЦ КАК ИспользуетсяСправочноеХранение,
	|	NULL КАК ВидОперации,
	|	РасходныйОрдерНаТовары.Склад.ИспользоватьСерииНоменклатуры КАК ИспользоватьСерииНоменклатуры,
	|	ПРЕДСТАВЛЕНИЕ(РасходныйОрдерНаТовары.Распоряжение.Ссылка) КАК ОснованиеПредставление,
	|	РасходныйОрдерНаТовары.Распоряжение.Дата КАК ОснованиеДата,
	|	РасходныйОрдерНаТовары.Распоряжение.Номер КАК ОснованиеНомер,
	|	ПРЕДСТАВЛЕНИЕ(РасходныйОрдерНаТовары.ЗаданиеНаПеревозку.Ссылка) КАК ЗаданиеНаПеревозкуПредставление,
	|	РасходныйОрдерНаТовары.ЗаданиеНаПеревозку.Дата КАК ЗаданиеНаПеревозкуДата,
	|	РасходныйОрдерНаТовары.ЗаданиеНаПеревозку.Номер КАК ЗаданиеНаПеревозкуНомер,
	|	РасходныйОрдерНаТовары.ПорядокДоставки КАК ПорядокДоставки,
	|	РасходныйОрдерНаТовары.ОтгрузкаПоЗаданиюНаПеревозку КАК ОтгрузкаПоЗаданиюНаПеревозку
	|ИЗ
	|	Документ.РасходныйОрдерНаТовары КАК РасходныйОрдерНаТовары
	|ГДЕ
	|	РасходныйОрдерНаТовары.Ссылка В(&МассивОбъектов)
	|
	|УПОРЯДОЧИТЬ ПО
	|	Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаТовары.Ссылка КАК Ссылка,
	|	ТаблицаТовары.Номенклатура КАК Номенклатура,
	|	ТаблицаТовары.Характеристика КАК Характеристика,
	|	NULL КАК Серия,
	|	ВЫБОР
	|		КОГДА ТаблицаТовары.Упаковка = ЗНАЧЕНИЕ(Справочник.УпаковкиНоменклатуры.ПустаяСсылка)
	|			ТОГДА ТаблицаТовары.Номенклатура.ЕдиницаИзмерения
	|		ИНАЧЕ ТаблицаТовары.Упаковка
	|	КОНЕЦ КАК Упаковка,
	|	ТаблицаТовары.КоличествоУпаковок КАК КоличествоУпаковок,
	|	ТаблицаТовары.Количество КАК Количество
	|ПОМЕСТИТЬ ТаблицаТовары
	|ИЗ
	|	Документ.РасходныйОрдерНаТовары.Товары КАК ТаблицаТовары
	|ГДЕ
	|	ТаблицаТовары.Ссылка В(&МассивОбъектов)
	|	И НЕ ТаблицаТовары.СтатусУказанияСерий В (2, 4, 6, 8, 10)
	|	И ВЫБОР
	|			КОГДА ТаблицаТовары.Ссылка.Склад.ИспользоватьСкладскиеПомещения
	|				ТОГДА ТаблицаТовары.Ссылка.Помещение.ИспользоватьАдресноеХранениеСправочно
	|			ИНАЧЕ ТаблицаТовары.Ссылка.Склад.ИспользоватьАдресноеХранениеСправочно
	|		КОНЕЦ
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ТаблицаСерии.Ссылка,
	|	ТаблицаСерии.Номенклатура,
	|	ТаблицаСерии.Характеристика,
	|	ТаблицаСерии.Серия,
	|	ТаблицаСерии.Номенклатура.ЕдиницаИзмерения,
	|	ТаблицаСерии.Количество,
	|	ТаблицаСерии.Количество
	|ИЗ
	|	Документ.РасходныйОрдерНаТовары.Серии КАК ТаблицаСерии
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.РасходныйОрдерНаТовары.Товары КАК ТаблицаТовары
	|		ПО ТаблицаСерии.Ссылка = ТаблицаТовары.Ссылка
	|			И ТаблицаСерии.Номенклатура = ТаблицаТовары.Номенклатура
	|			И ТаблицаСерии.Характеристика = ТаблицаТовары.Характеристика
	|ГДЕ
	|	ТаблицаСерии.Ссылка В(&МассивОбъектов)
	|	И ВЫБОР
	|			КОГДА ТаблицаСерии.Ссылка.Склад.ИспользоватьСкладскиеПомещения
	|				ТОГДА ТаблицаСерии.Ссылка.Помещение.ИспользоватьАдресноеХранениеСправочно
	|			ИНАЧЕ ТаблицаСерии.Ссылка.Склад.ИспользоватьАдресноеХранениеСправочно
	|		КОНЕЦ
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаСерии.Ссылка,
	|	ТаблицаСерии.Номенклатура,
	|	ТаблицаСерии.Характеристика,
	|	ТаблицаСерии.Серия,
	|	ТаблицаСерии.Упаковка,
	|	ТаблицаСерии.КоличествоУпаковок,
	|	ТаблицаСерии.Количество,
	|	ТаблицаСерии.НомерСтроки,
	|	ТаблицаСерии.Номенклатура.ЕдиницаИзмерения,
	|	ТаблицаСерии.Количество
	|
	|ИМЕЮЩИЕ
	|	МАКСИМУМ(ТаблицаТовары.СтатусУказанияСерий) В (2, 4, 6, 8, 10)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаТовары.Ссылка КАК Ссылка,
	|	ТаблицаТовары.Номенклатура КАК Номенклатура,
	|	ТаблицаТовары.Серия КАК Серия,
	|	ТаблицаТовары.Номенклатура.Код КАК Код,
	|	ТаблицаТовары.Номенклатура.Артикул КАК Артикул,
	|	ТаблицаТовары.Номенклатура.НаименованиеПолное КАК ПредставлениеНоменклатуры,
	|	ПРЕДСТАВЛЕНИЕ(ТаблицаТовары.Номенклатура.ЕдиницаИзмерения) КАК ПредставлениеБазовойЕдиницыИзмерения,
	|	ТаблицаТовары.Характеристика.НаименованиеПолное КАК ПредставлениеХарактеристики,
	|	ТаблицаТовары.Упаковка.Наименование КАК ПредставлениеЕдининицыИзмеренияУпаковки,
	|	ТаблицаТовары.Серия.Наименование КАК ПредставлениеСерии,
	|	СУММА(ТаблицаТовары.КоличествоУпаковок) КАК КоличествоУпаковок,
	|	СУММА(ТаблицаТовары.Количество) КАК Количество,
	|	ЕСТЬNULL(РазмещениеОсновнаяЯчейка.Ячейка.РабочийУчасток, ЗНАЧЕНИЕ(Справочник.РабочиеУчастки.ПустаяСсылка)) КАК РабочийУчасток,
	|	ЕСТЬNULL(РазмещениеОсновнаяЯчейка.Ячейка.ПорядокОбхода, 0) КАК ПорядокОбхода,
	|	ЕСТЬNULL(РазмещениеОсновнаяЯчейка.Ячейка, ЗНАЧЕНИЕ(Справочник.СкладскиеЯчейки.ПустаяСсылка)) КАК ОсновнаяЯчейка,
	|	ЕСТЬNULL(РазмещениеОстальныеЯчейки.Ячейка.ПорядокОбхода, 0) КАК ПорядокОбходаДополнительнаяЯчейка,
	|	ПРЕДСТАВЛЕНИЕ(РазмещениеОсновнаяЯчейка.Ячейка.РабочийУчасток) КАК ПредставлениеРабочегоУчастка,
	|	РазмещениеОсновнаяЯчейка.Ячейка.Код КАК ОсновнаяЯчейкаПредставление,
	|	РазмещениеОстальныеЯчейки.Ячейка.Код КАК ЯчейкаПредставление
	|ИЗ
	|	ТаблицаТовары КАК ТаблицаТовары
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РазмещениеНоменклатурыПоСкладскимЯчейкам КАК РазмещениеОсновнаяЯчейка
	|		ПО ТаблицаТовары.Номенклатура = РазмещениеОсновнаяЯчейка.Номенклатура
	|			И (РазмещениеОсновнаяЯчейка.ОсновнаяЯчейка = ИСТИНА)
	|			И (РазмещениеОсновнаяЯчейка.Склад = ТаблицаТовары.Ссылка.Склад)
	|			И (ВЫБОР
	|				КОГДА ТаблицаТовары.Ссылка.Склад.ИспользоватьСкладскиеПомещения
	|					ТОГДА РазмещениеОсновнаяЯчейка.Помещение = ТаблицаТовары.Ссылка.Помещение
	|				ИНАЧЕ РазмещениеОсновнаяЯчейка.Помещение = ЗНАЧЕНИЕ(Справочник.СкладскиеПомещения.ПустаяСсылка)
	|			КОНЕЦ)
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РазмещениеНоменклатурыПоСкладскимЯчейкам КАК РазмещениеОстальныеЯчейки
	|		ПО ТаблицаТовары.Номенклатура = РазмещениеОстальныеЯчейки.Номенклатура
	|			И (РазмещениеОстальныеЯчейки.ОсновнаяЯчейка = ЛОЖЬ)
	|			И (РазмещениеОстальныеЯчейки.Склад = ТаблицаТовары.Ссылка.Склад)
	|			И (ВЫБОР
	|				КОГДА ТаблицаТовары.Ссылка.Склад.ИспользоватьСкладскиеПомещения
	|					ТОГДА РазмещениеОстальныеЯчейки.Помещение = ТаблицаТовары.Ссылка.Помещение
	|				ИНАЧЕ РазмещениеОстальныеЯчейки.Помещение = ЗНАЧЕНИЕ(Справочник.СкладскиеПомещения.ПустаяСсылка)
	|			КОНЕЦ)
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаТовары.Ссылка,
	|	ТаблицаТовары.Номенклатура,
	|	ТаблицаТовары.Характеристика,
	|	ТаблицаТовары.Серия,
	|	ТаблицаТовары.Упаковка,
	|	РазмещениеОсновнаяЯчейка.Ячейка,
	|	РазмещениеОстальныеЯчейки.Ячейка,
	|	ТаблицаТовары.Номенклатура.Код,
	|	ТаблицаТовары.Номенклатура.Артикул,
	|	ТаблицаТовары.Номенклатура.НаименованиеПолное,
	|	ТаблицаТовары.Характеристика.НаименованиеПолное,
	|	ТаблицаТовары.Упаковка.Наименование,
	|	ТаблицаТовары.Серия.Наименование,
	|	РазмещениеОсновнаяЯчейка.Ячейка.Код,
	|	РазмещениеОстальныеЯчейки.Ячейка.Код,
	|	ЕСТЬNULL(РазмещениеОсновнаяЯчейка.Ячейка.РабочийУчасток, ЗНАЧЕНИЕ(Справочник.РабочиеУчастки.ПустаяСсылка)),
	|	ЕСТЬNULL(РазмещениеОсновнаяЯчейка.Ячейка.ПорядокОбхода, 0),
	|	ЕСТЬNULL(РазмещениеОстальныеЯчейки.Ячейка.ПорядокОбхода, 0),
	|	ПРЕДСТАВЛЕНИЕ(ТаблицаТовары.Номенклатура.ЕдиницаИзмерения),
	|	ПРЕДСТАВЛЕНИЕ(РазмещениеОсновнаяЯчейка.Ячейка.РабочийУчасток)
	|
	|УПОРЯДОЧИТЬ ПО
	|	Ссылка,
	|	ПорядокОбхода,
	|	ОсновнаяЯчейкаПредставление,
	|	ПредставлениеНоменклатуры,
	|	ПредставлениеХарактеристики,
	|	ПредставлениеСерии,
	|	ПредставлениеЕдининицыИзмеренияУпаковки,
	|	ПорядокОбходаДополнительнаяЯчейка,
	|	ЯчейкаПредставление
	|ИТОГИ ПО
	|	Ссылка,
	|	РабочийУчасток,
	|	ОсновнаяЯчейка,
	|	Номенклатура,
	|	ТаблицаТовары.Характеристика,
	|	Серия,
	|	ТаблицаТовары.Упаковка";
	
	Запрос.УстановитьПараметр("МассивОбъектов", МассивДокументов); 
	МассивРезультатов 			= Запрос.ВыполнитьПакет();
	РезультатПоШапке			= МассивРезультатов[0];
	РезультатПоТабличнойЧасти 	= МассивРезультатов[2];
	СтруктураДанныхДляПечати 	= Новый Структура("РезультатПоШапке, РезультатПоТабличнойЧасти",РезультатПоШапке, РезультатПоТабличнойЧасти);
	
	Возврат СтруктураДанныхДляПечати;
КонецФункции

////////////////////////////////////////////////////////////////////////////////
// Прочее

Функция ОрдерныеСкладыПриОтгрузке(Знач Распоряжение, Знач Склад) Экспорт
	Запрос = Новый Запрос;
	МассивСкладов = Новый Массив;
	ТипДокумента = Распоряжение.Метаданные().Имя;
	Запрос.УстановитьПараметр("Ссылка", Распоряжение);
	Запрос.Текст =
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
	|	Товары.Склад КАК Склад
	|ИЗ
	|	Документ." + ТипДокумента + ".Товары КАК Товары
	|ГДЕ
	|	Товары.Ссылка = &Ссылка
	|	И Товары.Склад.ИспользоватьОрдернуюСхемуПриОтгрузке
	|	И Товары.Ссылка.Склад.ЭтоГруппа
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	Распоряжение.Склад
	|ИЗ
	|	Документ." + ТипДокумента + " КАК Распоряжение
	|ГДЕ
	|	Распоряжение.Ссылка = &Ссылка
	|	И (НЕ Распоряжение.Склад.ЭтоГруппа)
	|	И Распоряжение.Склад.ИспользоватьОрдернуюСхемуПриОтгрузке";
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		МассивСкладов.Добавить(Выборка.Склад);
	КонецЦикла;
	Если ЗначениеЗаполнено(Склад) 
		И МассивСкладов.Найти(Склад) = Неопределено Тогда
		МассивСкладов.Добавить(Склад);
	КонецЕсли;
	Возврат МассивСкладов
КонецФункции

#КонецЕсли