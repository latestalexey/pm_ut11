#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

////////////////////////////////////////////////////////////////////////////////
// Проведение

Процедура ИнициализироватьДанныеДокумента(ДокументСсылка, ДополнительныеСвойства) Экспорт

	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Ссылка", ДокументСсылка);
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ДанныеДокумента.Ссылка                 КАК Ссылка,
	|	ДанныеДокумента.Дата                   КАК Период,
	|	ДанныеДокумента.Организация            КАК Организация,
	|	ДанныеДокумента.Контрагент             КАК Контрагент,
	|	ДанныеДокумента.Валюта                 КАК Валюта,
	|	ДанныеДокумента.ДокументРасчетов       КАК ДокументРасчетов,
	|	ДанныеДокумента.ЗаписьДополнительногоЛиста КАК ЗаписьДополнительногоЛиста,
	|	ВЫБОР
	|		КОГДА ДанныеДокумента.ЗаписьДополнительногоЛиста
	|			ТОГДА ДанныеДокумента.КорректируемыйПериод
	|		ИНАЧЕ ДАТАВРЕМЯ(1, 1, 1)
	|	КОНЕЦ                                      КАК КорректируемыйПериод,
	|	ДанныеДокумента.КодВидаОперации            КАК КодВидаОперации,
	|	ДанныеДокумента.ПредъявленСчетФактура      КАК ПредъявленСчетФактура,
	|	ДанныеДокумента.ДатаСчетаФактуры           КАК ДатаСчетаФактуры,
	|	ДанныеДокумента.НомерСчетаФактуры          КАК НомерСчетаФактуры,
	|	ДанныеДокумента.ДатаПолучения              КАК ДатаПолучения,
	|	ДанныеДокумента.ПолученВЭлектронномВиде    КАК ПолученВЭлектронномВиде,
	|	ДанныеДокумента.СпособКорректировкиНДС     КАК СпособКорректировкиНДС
	|ИЗ
	|	Документ.ЗаписьКнигиПокупок КАК ДанныеДокумента
	|ГДЕ
	|	ДанныеДокумента.Ссылка = &Ссылка";
	Реквизиты = Запрос.Выполнить().Выбрать();
	Реквизиты.Следующий();
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	&СчетФактура КАК СчетФактура,
	|	&ДатаДокумента КАК Период,
	|	&Организация КАК Организация,
	|	&Поставщик КАК Поставщик,
	|	&ЗаписьДополнительногоЛиста КАК ЗаписьДополнительногоЛиста,
	|	&КорректируемыйПериод КАК КорректируемыйПериод,
	|	ВЫБОР
	|		КОГДА &СпособКорректировкиНДС В (ЗНАЧЕНИЕ(Перечисление.СпособыКорректировкиНДС.Отложить),
	|											ЗНАЧЕНИЕ(Перечисление.СпособыКорректировкиНДС.Заблокировать))
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.Товары)
	|		ИНАЧЕ
	|			ТаблицаЦенности.ВидЦенности
	|	КОНЕЦ КАК ВидЦенности,
	|	ВЫБОР
	|		КОГДА &СпособКорректировкиНДС В (ЗНАЧЕНИЕ(Перечисление.СпособыКорректировкиНДС.Отложить),
	|											ЗНАЧЕНИЕ(Перечисление.СпособыКорректировкиНДС.Заблокировать))
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.СобытияПоНДСПокупки.ПредъявленНДСКВычету)
	|		ИНАЧЕ
	|			ТаблицаЦенности.Событие
	|	КОНЕЦ КАК Событие,
	|	&ДатаДокумента КАК ДатаСобытия,
	|	ТаблицаЦенности.СтавкаНДС КАК СтавкаНДС,
	|	СУММА(ВЫБОР
	|			КОГДА &ЭтоТаможеннаяДекларация ТОГДА
	|				0
	|			КОГДА &СпособКорректировкиНДС = ЗНАЧЕНИЕ(Перечисление.СпособыКорректировкиНДС.Отложить)
	|					ИЛИ &СпособКорректировкиНДС = ЗНАЧЕНИЕ(Перечисление.СпособыКорректировкиНДС.Заблокировать)
	|				ТОГДА -ТаблицаЦенности.Сумма
	|			ИНАЧЕ ТаблицаЦенности.Сумма
	|		КОНЕЦ * &КоэффициентПересчетаВалюты) КАК СуммаБезНДС,
	|	СУММА(ВЫБОР
	|			КОГДА &СпособКорректировкиНДС = ЗНАЧЕНИЕ(Перечисление.СпособыКорректировкиНДС.Отложить)
	|					ИЛИ &СпособКорректировкиНДС = ЗНАЧЕНИЕ(Перечисление.СпособыКорректировкиНДС.Заблокировать)
	|				ТОГДА -ТаблицаЦенности.СуммаНДС
	|			ИНАЧЕ ТаблицаЦенности.СуммаНДС
	|		КОНЕЦ * &КоэффициентПересчетаВалюты) КАК НДС,
	|	NULL КАК ДатаОплаты,
	|	NULL КАК ДокументОплаты
	|ИЗ
	|	Документ.ЗаписьКнигиПокупок.Ценности КАК ТаблицаЦенности
	|ГДЕ
	|	ТаблицаЦенности.Ссылка = &Ссылка
	|
	|СГРУППИРОВАТЬ ПО
	|	ВЫБОР
	|		КОГДА &СпособКорректировкиНДС В (ЗНАЧЕНИЕ(Перечисление.СпособыКорректировкиНДС.Отложить),
	|											ЗНАЧЕНИЕ(Перечисление.СпособыКорректировкиНДС.Заблокировать))
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.Товары)
	|		ИНАЧЕ
	|			ТаблицаЦенности.ВидЦенности
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА &СпособКорректировкиНДС В (ЗНАЧЕНИЕ(Перечисление.СпособыКорректировкиНДС.Отложить),
	|											ЗНАЧЕНИЕ(Перечисление.СпособыКорректировкиНДС.Заблокировать))
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.СобытияПоНДСПокупки.ПредъявленНДСКВычету)
	|		ИНАЧЕ
	|			ТаблицаЦенности.Событие
	|	КОНЕЦ,
	|	ТаблицаЦенности.Номенклатура,
	|	ТаблицаЦенности.СтавкаНДС
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	&СчетФактура,
	|	&ДатаДокумента,
	|	&Организация,
	|	&Поставщик,
	|	&ЗаписьДополнительногоЛиста,
	|	&КорректируемыйПериод,
	|	NULL,
	|	NULL,
	|	&ДатаДокумента,
	|	0,
	|	0,
	|	0,
	|	ТаблицаДокументыОплаты.ДатаОплаты,
	|	ТаблицаДокументыОплаты.ДокументОплаты
	|ИЗ
	|	Документ.ЗаписьКнигиПокупок.ДокументыОплаты КАК ТаблицаДокументыОплаты
	|ГДЕ
	|	ТаблицаДокументыОплаты.Ссылка = &Ссылка
	|
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	&ДатаДокумента КАК Период,
	|	ТаблицаЦенности.Ссылка.Организация КАК Организация,
	|	&Поставщик КАК Контрагент,
	|	&Ссылка КАК СчетФактура,
	|	ЗНАЧЕНИЕ(Перечисление.ЧастиЖурналаУчетаСчетовФактур.ПолученныеСчетаФактуры) КАК ЧастьЖурнала,
	|	&ДатаПолучения КАК ДатаВыставленияПолучения,
	|	&ПолученВЭлектронномВиде КАК КодСпособаВыставленияПолучения,
	|	&КодВидаОперации КАК КодВидаОперации,
	|	&НомерСчетаФактуры КАК НомерСчетаФактуры,
	|	&ДатаСчетаФактуры КАК ДатаСчетаФактуры,
	|	&Валюта КАК Валюта,
	|	СУММА((ТаблицаЦенности.Сумма + ТаблицаЦенности.СуммаНДС)* &КоэффициентПересчетаВалюты) КАК СуммаПоСчетуФактуре,
	|	СУММА(ТаблицаЦенности.СуммаНДС * &КоэффициентПересчетаВалюты) КАК СуммаНДС
	|ИЗ
	|	Документ.ЗаписьКнигиПокупок.Ценности КАК ТаблицаЦенности
	|ГДЕ
	|	ТаблицаЦенности.Ссылка = &Ссылка
	|	И &ДатаПолучения <> ДАТАВРЕМЯ(01,01,0001,00,00,00)
	|	И &Организация <> ЗНАЧЕНИЕ(Справочник.Организации.УправленческаяОрганизация)
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаЦенности.Ссылка.Организация
	|";
		
	Запрос.УстановитьПараметр("ДатаДокумента", Реквизиты.Период);
	Запрос.УстановитьПараметр("Организация",   Реквизиты.Организация);
	Запрос.УстановитьПараметр("Поставщик",     Реквизиты.Контрагент);
	Запрос.УстановитьПараметр("Валюта",        Реквизиты.Валюта);
	Запрос.УстановитьПараметр("СчетФактура",   ?(ЗначениеЗаполнено(Реквизиты.ДокументРасчетов), Реквизиты.ДокументРасчетов, ДокументСсылка));	
	Запрос.УстановитьПараметр("ЗаписьДополнительногоЛиста", Реквизиты.ЗаписьДополнительногоЛиста);
	Запрос.УстановитьПараметр("КорректируемыйПериод",       Реквизиты.КорректируемыйПериод);
	Запрос.УстановитьПараметр("КодВидаОперации",            Реквизиты.КодВидаОперации);
	Запрос.УстановитьПараметр("ПредъявленСчетФактура",      Реквизиты.ПредъявленСчетФактура);
	Запрос.УстановитьПараметр("ДатаСчетаФактуры",           Реквизиты.ДатаСчетаФактуры);
	Запрос.УстановитьПараметр("НомерСчетаФактуры",          Реквизиты.НомерСчетаФактуры);
	Запрос.УстановитьПараметр("ДатаПолучения",              Реквизиты.ДатаПолучения);
	Запрос.УстановитьПараметр("ПолученВЭлектронномВиде",    ?(Реквизиты.ПолученВЭлектронномВиде,2,1));
	
	Запрос.УстановитьПараметр("СпособКорректировкиНДС",     Реквизиты.СпособКорректировкиНДС);
	
	Запрос.УстановитьПараметр("ЭтоТаможеннаяДекларация", ЗначениеЗаполнено(Реквизиты.ДокументРасчетов) 
															И ТипЗнч(Реквизиты.ДокументРасчетов) = Тип("ДокументСсылка.ТаможеннаяДекларацияИмпорт"));
	
	// Рассчитаем коэффициент пересчета суммы в валюту регл. учета
	КоэффициентПересчетаВалюты = 1;
	ВалютаРеглУчета = Константы.ВалютаРегламентированногоУчета.Получить();
	Если Реквизиты.Валюта <> ВалютаРеглУчета Тогда
		Коэффициенты = РаботаСКурсамивалютУТ.ПолучитьКоэффициентыПересчетаВалюты(Реквизиты.Валюта, Неопределено, Реквизиты.Период);
		КоэффициентПересчетаВалюты = Коэффициенты.КоэффициентПересчетаВВалютуРегл;
	КонецЕсли; 
	Запрос.УстановитьПараметр("КоэффициентПересчетаВалюты", КоэффициентПересчетаВалюты);
	
	Результат = Запрос.ВыполнитьПакет();
	
	ТаблицыДляДвижений = ДополнительныеСвойства.ТаблицыДляДвижений;
	ТаблицыДляДвижений.Вставить("ТаблицаНДСЗаписиКнигиПокупок",		Результат[0].Выгрузить());
	ТаблицыДляДвижений.Вставить("ТаблицаЖурналУчетаСчетовФактур",	Результат[1].Выгрузить());
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// Обновление информационной базы

Процедура ЗаполнитьКодВидаОперацииСчетаФактуры() Экспорт
	
	Запрос = Новый Запрос("
	|ВЫБРАТЬ
	|	ЗаписьКнигиПокупок.Ссылка
	|ИЗ
	|	Документ.ЗаписьКнигиПокупок КАК ЗаписьКнигиПокупок
	|ГДЕ
	|	ЗаписьКнигиПокупок.ПредъявленСчетФактура
	|	И ЗаписьКнигиПокупок.КодВидаОперации = """"
	|	И ЗаписьКнигиПокупок.Проведен
	|");
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		ДокументОбъект = Выборка.Ссылка.ПолучитьОбъект();
		ДокументОбъект.КодВидаОперации = "01";
		ДокументОбъект.ОбменДанными.Загрузка = Истина;
		ДокументОбъект.Записать();
	КонецЦикла;
	
КонецПроцедуры

Процедура ЗаполнитьДатуПолученияИСобытие() Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ЗаписьКнигиПокупок.Ссылка КАК Регистратор,
	|	ВЫБОР
	|		КОГДА ЗаписьКнигиПокупок.ПредъявленСчетФактура
	|				И ЗаписьКнигиПокупок.ДатаПолучения = ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК ЗаполнитьДатуПолучения,
	|	ВЫБОР
	|		КОГДА ЗаписьКнигиПокупок.СпособКорректировкиНДС = ЗНАЧЕНИЕ(Перечисление.СпособыКорректировкиНДС.Скорректировать)
	|				И ЗаписьКнигиПокупокЦенности.Событие = ЗНАЧЕНИЕ(Перечисление.СобытияПоНДСПокупки.ПустаяСсылка)
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК ЗаполнитьСобытие
	|ИЗ
	|	Документ.ЗаписьКнигиПокупок КАК ЗаписьКнигиПокупок
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ЗаписьКнигиПокупок.Ценности КАК ЗаписьКнигиПокупокЦенности
	|		ПО ЗаписьКнигиПокупок.Ссылка = ЗаписьКнигиПокупокЦенности.Ссылка
	|ГДЕ
	|	ЗаписьКнигиПокупок.Проведен
	|	И (ЗаписьКнигиПокупок.ПредъявленСчетФактура
	|				И ЗаписьКнигиПокупок.ДатаПолучения = ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	|			ИЛИ ЗаписьКнигиПокупок.СпособКорректировкиНДС = ЗНАЧЕНИЕ(Перечисление.СпособыКорректировкиНДС.Скорректировать)
	|				И ЗаписьКнигиПокупокЦенности.Событие = ЗНАЧЕНИЕ(Перечисление.СобытияПоНДСПокупки.ПустаяСсылка))";
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		
		Если НЕ Выборка.ЗаполнитьДатуПолучения
			И НЕ Выборка.ЗаполнитьСобытие Тогда
				Продолжить;
		КонецЕсли;
		
		ДокументОбъект = Выборка.Регистратор.ПолучитьОбъект();
		Если Выборка.ЗаполнитьДатуПолучения Тогда
			ДокументОбъект.ДатаПолучения = ДокументОбъект.Дата;
		КонецЕсли;
		Если Выборка.ЗаполнитьСобытие Тогда
			Для Каждого Строка Из ДокументОбъект.Ценности Цикл
				Строка.Событие = Перечисления.СобытияПоНДСПокупки.ПредъявленНДСКВычету
			КонецЦикла;
		КонецЕсли;
		
		Попытка
			ДокументОбъект.Записать(РежимЗаписиДокумента.Проведение);
		Исключение
		КонецПопытки;
		
	КонецЦикла;
	
КонецПроцедуры

#КонецЕсли