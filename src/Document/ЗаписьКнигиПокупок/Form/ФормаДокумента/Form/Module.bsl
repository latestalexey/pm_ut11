&НаКлиенте
Перем КэшированныеЗначения;

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// Обработчик подсистемы "Дополнительные отчеты и обработки"
	ДополнительныеОтчетыИОбработки.ПриСозданииНаСервере(ЭтаФорма);
	
	// Обработчик механизма "ВерсионированиеОбъектов"
	ВерсионированиеОбъектов.ПриСозданииНаСервере(ЭтаФорма);
	
	Если НЕ ЗначениеЗаполнено(Объект.Ссылка) Тогда
		ПриЧтенииСозданииНаСервере();
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
	ПриЧтенииСозданииНаСервере();
	
	Элементы.ГруппаКомментарий.Картинка = ОбщегоНазначенияУТ.ПолучитьКартинкуКомментария(Объект.Комментарий);
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗаписью(Отказ, ПараметрыЗаписи)
	
	Если Объект.СпособКорректировкиНДС <> ПредопределенноеЗначение("Перечисление.СпособыКорректировкиНДС.Скорректировать")
		ИЛИ ЗначениеЗаполнено(Объект.ДокументРасчетов) Тогда
		
		Объект.ПредъявленСчетФактура	= Ложь;
	КонецЕсли;
	
	Если НЕ Объект.ПредъявленСчетФактура Тогда
		Объект.ДатаСчетаФактуры			= '00010101';
		Объект.НомерСчетаФактуры		= "";
		Получен = Ложь;
	Конецесли;
	
	Если НЕ Получен Тогда
		Объект.ДатаПолучения = '00010101';
		Объект.ПолученВЭлектронномВиде = Ложь;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	
	НоменклатураСервер.ЗаполнитьСлужебныеРеквизитыПоНоменклатуреВКоллекции(
		Объект.Ценности,
		Новый Структура("ЗаполнитьПризнакВедетсяУчетПоГТД",
			Новый Структура("Номенклатура", "ВедетсяУчетПоГТД")
		)
	);
	
	Элементы.ГруппаКомментарий.Картинка = ОбщегоНазначенияУТ.ПолучитьКартинкуКомментария(Объект.Комментарий);
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ ШАПКИ ФОРМЫ

&НаКлиенте
Процедура ВалютаПриИзменении(Элемент)
	
	Если НеобходимоПересчитатьВалюту() Тогда
		
		ПриИзмененииВалютыСервер(Объект.Валюта);
		ЦенообразованиеКлиент.ОповеститьОбОкончанииПересчетаСуммВВалюту(ВалютаДокумента, Объект.Валюта);
		
	КонецЕсли;
	
	ВалютаДокумента = Объект.Валюта;
	
КонецПроцедуры

&НаКлиенте
Процедура ПредъявленСчетФактураПриИзменении(Элемент)
	
	УстановитьДоступностьРеквизитовСчетФактуры(ЭтаФорма);
	Если НЕ Объект.ПредъявленСчетФактура Тогда
		Получен = Ложь;
	КонецЕсли;
	УстановитьДоступностьРеквизитовПолучения(ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаписьДополнительногоЛистаПриИзменении(Элемент)
	
	УстановитьДоступностьЭлементовДопЛистов(ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура ДокументРасчетовПриИзменении(Элемент)
	
	ПриИзмененииОперацииДокумента();
	
КонецПроцедуры

&НаКлиенте
Процедура СпособКорректировкиНДСПриИзменении(Элемент)
	
	ПриИзмененииОперацииДокумента();
	
КонецПроцедуры

&НаКлиенте
Процедура КодВидаОперацииНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ВыбранныйЭлемент = ВыбратьИзМеню(СписокКодовВидовОпераций(), Элемент);
	Если ВыбранныйЭлемент <> Неопределено Тогда
		Объект.КодВидаОперации = ВыбранныйЭлемент.Значение
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПолученПриИзменении(Элемент)
	
	Модифицированность = Истина;
	
	УстановитьДоступностьРеквизитовПолучения(ЭтаФорма);
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ ТАБЛИЦЫ ФОРМЫ ЦЕННОСТИ

&НаКлиенте
Процедура ЦенностиПослеУдаления(Элемент)
	
	ОбновитьСуммыПодвала(ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура ЦенностиПриОкончанииРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования)
	
	ОбновитьСуммыПодвала(ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура ЦенностиСуммаПриИзменении(Элемент)
	
	ТекущаяСтрока = Элементы.Ценности.ТекущиеДанные;
	
	СтруктураПересчетаСуммы = ПолучитьСтруктуруПересчетаСуммыНДСВСтрокеТЧ();
	
	СтруктураДействий = Новый Структура;
	СтруктураДействий.Вставить("ПересчитатьСуммуНДС", СтруктураПересчетаСуммы);
	
	ОбработкаТабличнойЧастиКлиент.ОбработатьСтрокуТЧ(ТекущаяСтрока, СтруктураДействий, КэшированныеЗначения);
	
	ОбновитьСуммыПодвала(ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура ЦенностиСтавкаНДСПриИзменении(Элемент)

	ТекущаяСтрока = Элементы.Ценности.ТекущиеДанные;
	
	СтруктураПересчетаСуммы = ПолучитьСтруктуруПересчетаСуммыНДСВСтрокеТЧ();
	
	СтруктураДействий = Новый Структура;
	СтруктураДействий.Вставить("ПересчитатьСуммуНДС", СтруктураПересчетаСуммы);
	
	ОбработкаТабличнойЧастиКлиент.ОбработатьСтрокуТЧ(ТекущаяСтрока, СтруктураДействий, КэшированныеЗначения);
	
	ОбновитьСуммыПодвала(ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура ЦенностиНоменклатураПриИзменении(Элемент)
	
	ТекущаяСтрока = Элементы.Ценности.ТекущиеДанные;
	
	СтруктураПересчетаСуммы = ПолучитьСтруктуруПересчетаСуммыНДСВСтрокеТЧ();
	
	СтруктураДействий = Новый Структура;
	СтруктураДействий.Вставить("ЗаполнитьСтавкуНДС", НалогообложениеНДС);
	СтруктураДействий.Вставить("ПересчитатьСуммуНДС", СтруктураПересчетаСуммы);
	СтруктураДействий.Вставить("ЗаполнитьПризнакВедетсяУчетПоГТД", Новый Структура("Номенклатура", "ВедетсяУчетПоГТД"));
	
	ОбработкаТабличнойЧастиКлиент.ОбработатьСтрокуТЧ(ТекущаяСтрока, СтруктураДействий, КэшированныеЗначения);
	
	ОбновитьСуммыПодвала(ЭтаФорма);

КонецПроцедуры

&НаКлиенте
Процедура ЦенностиКоличествоПриИзменении(Элемент)
	
	ТекущаяСтрока = Элементы.Ценности.ТекущиеДанные;
	
	// Изменим знак в суммах
	Если ТекущаяСтрока.Количество < 0 И ТекущаяСтрока.Сумма > 0 
		ИЛИ ТекущаяСтрока.Количество >= 0 И ТекущаяСтрока.Сумма < 0 Тогда
		ТекущаяСтрока.Сумма = -ТекущаяСтрока.Сумма;
	КонецЕсли; 
	Если ТекущаяСтрока.Количество < 0 И ТекущаяСтрока.СуммаНДС > 0 
		ИЛИ ТекущаяСтрока.Количество >= 0 И ТекущаяСтрока.СуммаНДС < 0 Тогда
		ТекущаяСтрока.СуммаНДС = -ТекущаяСтрока.СуммаНДС;
	КонецЕсли; 
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ ТАБЛИЦЫ ФОРМЫ ДОКУМЕНТЫ ОПЛАТЫ

&НаКлиенте
Процедура ДокументыОплатыДокументОплатыПриИзменении(Элемент)
	
	ТекущаяСтрока = Элементы.ДокументыОплаты.ТекущиеДанные;
	Если ЗначениеЗаполнено(ТекущаяСтрока.ДокументОплаты) Тогда
		ТекущаяСтрока.ДатаОплаты = ОбщегоНазначения.ПолучитьЗначениеРеквизита(ТекущаяСтрока.ДокументОплаты, "Дата");
	КонецЕсли; 
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

////////////////////////////////////////////////////////////////////////////////
// При изменении реквизитов

// Пересчитывает суммы документа в выбранную валюту
//
// Параметры:
// НоваяВалюта - Валюта, в которую необходимо пересчитать суммы
//
&НаСервере
Процедура ПриИзмененииВалютыСервер(НоваяВалюта)
	
	СтараяВалюта                = ВалютаДокумента;
	ДатаДокумента               = ?(ЗначениеЗаполнено(Объект.Дата), Объект.Дата,ТекущаяДата());
	СтруктураКурсовСтаройВалюты = РаботаСКурсамиВалют.ПолучитьКурсВалюты(СтараяВалюта, ДатаДокумента);
	СтруктураКурсовНовойВалюты  = РаботаСКурсамиВалют.ПолучитьКурсВалюты(НоваяВалюта,  ДатаДокумента);
	
	Для Каждого ТекСтрока Из Объект.Ценности Цикл
		
		ТекСтрока.Сумма = РаботаСКурсамиВалютКлиентСервер.ПересчитатьИзВалютыВВалюту(
			ТекСтрока.Сумма,
			СтараяВалюта,НоваяВалюта,
			СтруктураКурсовСтаройВалюты.Курс,СтруктураКурсовНовойВалюты.Курс,
			СтруктураКурсовСтаройВалюты.Кратность,СтруктураКурсовНовойВалюты.Кратность);
			
		ТекСтрока.СуммаНДС = Ценообразование.РассчитатьСуммуНДС(ТекСтрока.Сумма, ТекСтрока.СтавкаНДС, Ложь);
		
	КонецЦикла;
	
	ОбновитьСуммыПодвала(ЭтаФорма);
	
КонецПроцедуры

// Изменяет видимость, доступность реквизитов
//
&НаКлиенте
Процедура ПриИзмененииОперацииДокумента()

	УстановитьВидимостьЭлементовПоОперации(ЭтаФорма, ОтложитьНДС, ЗаблокироватьНДС);
	
	Если Объект.ПредъявленСчетФактура Тогда
		Если ЗначениеЗаполнено(Объект.ДокументРасчетов)
			ИЛИ Объект.СпособКорректировкиНДС = ОтложитьНДС 
			ИЛИ Объект.СпособКорректировкиНДС = ЗаблокироватьНДС Тогда
			
			Объект.ПредъявленСчетФактура = Ложь;
			УстановитьДоступностьРеквизитовСчетФактуры(ЭтаФорма);
			Получен = Ложь;
			УстановитьДоступностьРеквизитовПолучения(ЭтаФорма);
		КонецЕсли; 
	КонецЕсли; 
	
КонецПроцедуры
 
////////////////////////////////////////////////////////////////////////////////
// Прочее

&НаСервере
Процедура ПриЧтенииСозданииНаСервере()

	// Константы
	ОтложитьНДС      = Перечисления.СпособыКорректировкиНДС.Отложить;
	ЗаблокироватьНДС = Перечисления.СпособыКорректировкиНДС.Заблокировать;
	НалогообложениеНДС = Перечисления.ТипыНалогообложенияНДС.ПродажаОблагаетсяНДС;

	ВалютаДокумента = Объект.Валюта;
	УстановитьВидимостьЭлементовПоОперации(ЭтаФорма, ОтложитьНДС, ЗаблокироватьНДС);
	УстановитьДоступностьРеквизитовСчетФактуры(ЭтаФорма);
	УстановитьДоступностьЭлементовДопЛистов(ЭтаФорма);
	
	НоменклатураСервер.ЗаполнитьСлужебныеРеквизитыПоНоменклатуреВКоллекции(
		Объект.Ценности,
		Новый Структура("ЗаполнитьПризнакВедетсяУчетПоГТД",
			Новый Структура("Номенклатура", "ВедетсяУчетПоГТД")
		)
	);

	ОбновитьСуммыПодвала(ЭтаФорма);
	
	Получен = ЗначениеЗаполнено(Объект.ДатаПолучения);
	УстановитьДоступностьРеквизитовПолучения(ЭтаФорма);
	
КонецПроцедуры

&НаСервере
Процедура ОбработкаПроверкиЗаполненияНаСервере(Отказ, ПроверяемыеРеквизиты)
	
	ТекстСообщенияДатаПолучения = НСтр("ru = 'Поле ""Дата получения"" не заполнено'");
	
	Если Получен И НЕ ЗначениеЗаполнено(Объект.ДатаПолучения) Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщенияДатаПолучения,,"ДатаПолучения","Объект",Отказ);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Функция НеобходимоПересчитатьВалюту()

	Если Не ЗначениеЗаполнено(Объект.Валюта) Тогда
		Возврат Ложь;
	ИначеЕсли Не ЗначениеЗаполнено(ВалютаДокумента) Тогда
		Возврат Ложь;
	ИначеЕсли ВалютаДокумента = Объект.Валюта Тогда
		Возврат Ложь;
	ИначеЕсли Объект.Ценности.Итог("Сумма") = 0 Тогда
		Возврат Ложь;
	КонецЕсли;
	
	ТекстСообщения = НСтр("ru='Пересчитать суммы в документе в валюту %1 ?'");
	ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ТекстСообщения, Объект.Валюта);
	
	ОтветНаВопрос = Вопрос(ТекстСообщения, РежимДиалогаВопрос.ДаНет);

	Если ОтветНаВопрос = КодВозвратаДиалога.Да Тогда
		Возврат Истина;
	Иначе
		Возврат Ложь;
	КонецЕсли;

КонецФункции

&НаКлиентеНаСервереБезКонтекста
Процедура УстановитьВидимостьЭлементовПоОперации(Форма, ОтложитьНДС, ЗаблокироватьНДС)

	ЭтоКорректировкаНДСКВычету = ЗначениеЗаполнено(Форма.Объект.ДокументРасчетов);
	ЭтоРаспределениеНДС = Форма.Объект.СпособКорректировкиНДС = ОтложитьНДС ИЛИ Форма.Объект.СпособКорректировкиНДС = ЗаблокироватьНДС; 
	
	//Операция "корректировка НДС"
	Форма.Элементы.ЦенностиВидЦенности.Видимость = НЕ ЭтоРаспределениеНДС;
	Форма.Элементы.ЦенностиСобытие.Видимость = НЕ ЭтоРаспределениеНДС;
	
	//Операция "распределение НД"
	Форма.Элементы.ЦенностиНоменклатура.Видимость = ЭтоРаспределениеНДС;
	Форма.Элементы.ЦенностиКоличество.Видимость   = ЭтоРаспределениеНДС;
	
	// Операция "НДС к вычету"
	Форма.Элементы.ПредъявленСчетФактура.Доступность = НЕ ЭтоКорректировкаНДСКВычету И НЕ ЭтоРаспределениеНДС;
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура УстановитьДоступностьРеквизитовСчетФактуры(Форма)
	
	Форма.Элементы.ДатаСчетаФактуры.Доступность  = Форма.Объект.ПредъявленСчетФактура;
	Форма.Элементы.НомерСчетаФактуры.Доступность = Форма.Объект.ПредъявленСчетФактура;
	Форма.Элементы.КодВидаОперации.Доступность   = Форма.Объект.ПредъявленСчетФактура;
	Форма.Элементы.Получен.Доступность           = Форма.Объект.ПредъявленСчетФактура;
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура УстановитьДоступностьЭлементовДопЛистов(Форма)

	Форма.Элементы.КорректируемыйПериод.Доступность = Форма.Объект.ЗаписьДополнительногоЛиста; 
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура ОбновитьСуммыПодвала(Форма)

	Форма.СуммаВсего = Форма.Объект.Ценности.Итог("Сумма") + Форма.Объект.Ценности.Итог("СуммаНДС");

КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Функция ПолучитьСтруктуруПересчетаСуммыНДСВСтрокеТЧ()

	СтруктураЗаполненияЦены = Новый Структура;
	СтруктураЗаполненияЦены.Вставить("ЦенаВключаетНДС", Ложь);
	
	Возврат СтруктураЗаполненияЦены;

КонецФункции

&НаСервере
Функция СписокКодовВидовОпераций()
	
	Возврат Документы.СчетФактураПолученный.СписокКодовВидовОпераций();
	
КонецФункции

&НаКлиентеНаСервереБезКонтекста
Процедура УстановитьДоступностьРеквизитовПолучения(Форма)
	
	Форма.Элементы.ДатаПолучения.Доступность			= Форма.Получен;
	Форма.Элементы.ПолученВЭлектронномВиде.Доступность	= Форма.Получен;
	
КонецПроцедуры
