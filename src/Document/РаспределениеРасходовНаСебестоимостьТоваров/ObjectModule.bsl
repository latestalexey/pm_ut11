#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда


///////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, СтандартнаяОбработка)
	
	ИнициализироватьДокумент(ДанныеЗаполнения);
	
КонецПроцедуры

Процедура ПриКопировании(ОбъектКопирования)

	Расходы.Очистить();	
	
КонецПроцедуры

Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	
	МассивНепроверяемыхРеквизитов = Новый Массив;
	Если РаспределениеПоВсемОрганизациям Тогда
		МассивНепроверяемыхРеквизитов.Добавить("Организация");
	Иначе
		МассивНепроверяемыхРеквизитов.Добавить("Расходы.Организация");
	КонецЕсли;
	
	ОбщегоНазначения.УдалитьНепроверяемыеРеквизитыИзМассива(
		ПроверяемыеРеквизиты,
		МассивНепроверяемыхРеквизитов
	);
	
КонецПроцедуры

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	ДополнительныеСвойства.Вставить("ЭтоНовый",    ЭтоНовый());
	ДополнительныеСвойства.Вставить("РежимЗаписи", РежимЗаписи);
	
	Если РаспределениеПоВсемОрганизациям Тогда
		Если ЗначениеЗаполнено(Организация) Тогда
			Организация = Неопределено;
		КонецЕсли;
	Иначе
		Для Каждого СтрокаТаблицы Из Расходы Цикл
			Если Не ЗначениеЗаполнено(СтрокаТаблицы.Организация) Тогда
				СтрокаТаблицы.Организация = Организация;
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
	ОбновитьПредставлениеОрганизации();
	
КонецПроцедуры

Процедура ОбработкаПроведения(Отказ, РежимПроведения)

	// Инициализация дополнительных свойств для проведения документа
	ПроведениеСервер.ИнициализироватьДополнительныеСвойстваДляПроведения(Ссылка, ДополнительныеСвойства, РежимПроведения);
	
	// Инициализация данных документа
	Документы.РаспределениеРасходовНаСебестоимостьТоваров.ИнициализироватьДанныеДокумента(Ссылка, ДополнительныеСвойства);
	
	// Подготовка наборов записей
	ПроведениеСервер.ПодготовитьНаборыЗаписейКРегистрацииДвижений(ЭтотОбъект);
	
	// Движения по прочим доходам и расходам.
	ДоходыИРасходыСервер.ОтразитьПрочиеРасходы(ДополнительныеСвойства, Движения, Отказ);
	
	// Запись наборов записей
	ПроведениеСервер.ЗаписатьНаборыЗаписей(ЭтотОбъект);
	
	// Выполним распределение расходов на себестоимость товаров.
	ДоходыИРасходыСервер.РаспределитьРасходыНаСебестоимостьТоваровПоБазе(ЭтотОбъект, ДополнительныеСвойства, Движения, Отказ);
	
	ПроведениеСервер.ОчиститьДополнительныеСвойстваДляПроведения(ДополнительныеСвойства);

КонецПроцедуры

Процедура ОбработкаУдаленияПроведения(Отказ)
	
	// Инициализация дополнительных свойств для проведения документа
	ПроведениеСервер.ИнициализироватьДополнительныеСвойстваДляПроведения(Ссылка, ДополнительныеСвойства);
	
	// Подготовка наборов записей
	ПроведениеСервер.ПодготовитьНаборыЗаписейКРегистрацииДвижений(ЭтотОбъект);
	
	// Запись наборов записей
	ПроведениеСервер.ЗаписатьНаборыЗаписей(ЭтотОбъект);
	
	ПроведениеСервер.ОчиститьДополнительныеСвойстваДляПроведения(ДополнительныеСвойства);

КонецПроцедуры

///////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

///////////////////////////////////////////////////////////////////////////////
// Инициализация и заполнение

Процедура ИнициализироватьДокумент(ДанныеЗаполнения = Неопределено)
	
	Ответственный = Пользователи.ТекущийПользователь();
	
	Организация = ОбщегоНазначения.ХранилищеОбщихНастроекЗагрузить("ТекущаяОрганизация",);
	Организация = ЗначениеНастроекПовтИсп.ПолучитьОрганизациюПоУмолчанию(Организация);
	
КонецПроцедуры

///////////////////////////////////////////////////////////////////////////////
// Прочее

Процедура ОбновитьПредставлениеОрганизации()

	УстановитьПривилегированныйРежим(Истина);
	
	Запрос = Новый Запрос("
	|ВЫБРАТЬ
	|	ДанныеСправочника.Наименование КАК ОрганизацияПредставление
	|ИЗ
	|	Справочник.Организации КАК ДанныеСправочника
	|ГДЕ
	|	ДанныеСправочника.Ссылка В (&МассивОрганизаций)
	|
	|УПОРЯДОЧИТЬ ПО
	|	ОрганизацияПредставление
	|");
	
	МассивОрганизаций = Расходы.ВыгрузитьКолонку("Организация");
	Запрос.УстановитьПараметр("МассивОрганизаций", МассивОрганизаций);
	
	ТекстПредставлениеОрганизаций = "";
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		ТекстПредставлениеОрганизаций = ТекстПредставлениеОрганизаций
			+ ?(ПустаяСтрока(ТекстПредставлениеОрганизаций), "", ", ")
			+ Выборка.ОрганизацияПредставление;
	КонецЦикла;

	Если ПустаяСтрока(ТекстПредставлениеОрганизаций) Тогда 
		ТекстПредставлениеОрганизаций = НСтр("ru = 'Укажите организацию'");
	КонецЕсли;

	Если ПредставлениеОрганизаций <> ТекстПредставлениеОрганизаций Тогда
		ПредставлениеОрганизаций = ТекстПредставлениеОрганизаций;
	КонецЕсли;

КонецПроцедуры

#КонецЕсли