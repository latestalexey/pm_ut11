#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

// Инициализирует таблицы значений, содержащие данные табличных частей документа
// Таблицы значений сохраняет в свойствах структуры "ДополнительныеСвойства"
//
Процедура ИнициализироватьДанныеДокумента(ДокументСсылка, ДополнительныеСвойства) Экспорт

	Запрос = Новый Запрос(
	// 0 ТаблицаЦеныНоменклатурыПоставщика
	"ВЫБРАТЬ
	|	ТаблицаТовары.Ссылка.Соглашение        КАК Соглашение,
	|	ТаблицаТовары.НоменклатураПоставщика   КАК НоменклатураПоставщика,
	|	ТаблицаТовары.Номенклатура             КАК Номенклатура,
	|	ТаблицаТовары.Характеристика           КАК Характеристика,
	|	ТаблицаТовары.Упаковка                 КАК Упаковка,
	|	ТаблицаТовары.УсловиеЦеныПоставщика    КАК УсловиеЦеныПоставщика,
	|	ТаблицаТовары.Цена                     КАК Цена,
	|	ТаблицаТовары.Ссылка.Соглашение.Валюта КАК Валюта,
	|	ТаблицаТовары.Ссылка.Дата              КАК ПЕРИОД
	|ИЗ
	|	Документ.РегистрацияЦенНоменклатурыПоставщика.Товары КАК ТаблицаТовары
	|ГДЕ
	|	ТаблицаТовары.Ссылка = &Ссылка
	|	И ТаблицаТовары.Номенклатура <> ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка)
	|");

	Запрос.УстановитьПараметр("Ссылка", ДокументСсылка);
	Результат = Запрос.ВыполнитьПакет();

	ДополнительныеСвойства.ТаблицыДляДвижений.Вставить("ТаблицаЦеныНоменклатуры", Результат[0].Выгрузить());

КонецПроцедуры

Функция РассчитатьНомерВПределахДня(ДатаДокумента, Ссылка) Экспорт
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	МАКСИМУМ(УстановкаЦенНоменклатуры.Дата) КАК Дата
	|ИЗ
	|	Документ.РегистрацияЦенНоменклатурыПоставщика КАК УстановкаЦенНоменклатуры
	|ГДЕ
	|	УстановкаЦенНоменклатуры.Ссылка <> &Ссылка
	|	И УстановкаЦенНоменклатуры.Дата МЕЖДУ НАЧАЛОПЕРИОДА(&ДатаДокумента, ДЕНЬ) И КОНЕЦПЕРИОДА(&ДатаДокумента, ДЕНЬ)");
	
	Запрос.УстановитьПараметр("ДатаДокумента", ДатаДокумента);
	Запрос.УстановитьПараметр("Ссылка",        Ссылка);
	
	Результат = Запрос.Выполнить();
	Выборка = Результат.Выбрать();
	
	Если Выборка.Следующий() И Выборка.Дата <> Null Тогда
		Возврат Выборка.Дата - НачалоДня(ДатаДокумента) + 2;
	Иначе
		Возврат 1;
	КонецЕсли;
	
КонецФункции

Функция РассчитатьДатуДокумента(ДатаДокумента, НомерВПределахДня) Экспорт
	
	Возврат НачалоДня(ДатаДокумента) + НомерВПределахДня - 1;
	
КонецФункции

// Заполняет регистрацию цен номенклатуры поставщика на основании поступления или заказа поставщику
//
// Параметры:
//  Основание - Ссылка на поступление или заказ поставщику.
//
Процедура ЗаполнитьРегистрациюЦенПоДокументуЗакупки(Основание, ДокументОбъект) Экспорт
	
	ИмяТаблицы = Основание.Метаданные().Имя;
	
	Запрос = Новый Запрос("
		|ВЫБРАТЬ
		|	ДокументЗакупки.Дата                         КАК Дата,
		|	ДокументЗакупки.Валюта                       КАК Валюта,
		|	ДокументЗакупки.Соглашение.Валюта            КАК ВалютаСоглашения,
		|	ДокументЗакупки.Партнер                      КАК Партнер,
		|	ДокументЗакупки.Соглашение                   КАК Соглашение,
		|	ДокументЗакупки.ЦенаВключаетНДС              КАК ЦенаВключаетНДС,
		|	ДокументЗакупки.Соглашение.ЦенаВключаетНДС   КАК ЦенаВключаетНДССоглашения,
		|	ДокументЗакупки.Ссылка                       КАК ДокументОснование,
		|	НЕ ДокументЗакупки.Проведен                  КАК ЕстьОшибкиПроведен,
		|	ДокументЗакупки.РегистрироватьЦеныПоставщика КАК РегистрироватьЦеныПоставщика
		|ИЗ
		|	Документ." + ИмяТаблицы + " КАК ДокументЗакупки
		|ГДЕ
		|	ДокументЗакупки.Ссылка = &Ссылка
		|");
		
	Запрос.УстановитьПараметр("Ссылка", Основание);
	РезультатЗапроса = Запрос.Выполнить();
	ВыборкаШапка = РезультатЗапроса.Выбрать();
	ВыборкаШапка.Следующий();
	
	ОбщегоНазначенияУТ.ПроверитьВозможностьВводаНаОсновании(
		ВыборкаШапка.ДокументОснование,
		,
		ВыборкаШапка.ЕстьОшибкиПроведен,
	);
	
	СообщитьОбОшибкахРегистрацииЦенОснованием(ВыборкаШапка.РегистрироватьЦеныПоставщика, ВыборкаШапка.ДокументОснование);
	ЗаполнитьЗначенияСвойств(ДокументОбъект, ВыборкаШапка);
	
	Запрос = Новый Запрос("
		|ВЫБРАТЬ
		|	КурсыВалютСрезПоследних.Валюта    КАК Валюта,
		|	КурсыВалютСрезПоследних.Курс      КАК Курс,
		|	КурсыВалютСрезПоследних.Кратность КАК Кратность
		|ПОМЕСТИТЬ
		|	ВременнаяТаблицаКурсыВалют
		|ИЗ
		|	РегистрСведений.КурсыВалют.СрезПоследних(&Дата, Валюта=&Валюта ИЛИ Валюта=&ВалютаСоглашения) КАК КурсыВалютСрезПоследних
		|ИНДЕКСИРОВАТЬ ПО
		|	Валюта
		|;
		|ВЫБРАТЬ
		|	Товары.НоменклатураПоставщика КАК НоменклатураПоставщика,
		|	Товары.Номенклатура           КАК Номенклатура,
		|	Товары.Характеристика         КАК Характеристика,
		|	Товары.УсловиеЦеныПоставщика  КАК УсловиеЦеныПоставщика,
		|	Товары.Упаковка               КАК Упаковка,
		|	ВЫРАЗИТЬ(Товары.Цена 
		|				* ВЫБОР
		|					КОГДА
		|						&ЦенаВключаетНДС И НЕ &ЦенаВключаетНДССоглашения
		|					ТОГДА
		|						ВЫБОР
		|							КОГДА
		|								Товары.СтавкаНДС = ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.БезНДС)
		|								ИЛИ Товары.СтавкаНДС = ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.НДС0)
		|							ТОГДА
		|								1
		|							КОГДА
		|								Товары.СтавкаНДС = ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.НДС18)
		|								ИЛИ Товары.СтавкаНДС = ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.НДС18_118)
		|							ТОГДА
		|								100/118
		|							КОГДА
		|								Товары.СтавкаНДС = ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.НДС10)
		|								ИЛИ Товары.СтавкаНДС = ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.НДС10_110)
		|							ТОГДА
		|								100/110
		|						КОНЕЦ
		|					КОГДА
		|						НЕ &ЦенаВключаетНДС И &ЦенаВключаетНДССоглашения
		|					ТОГДА
		|						ВЫБОР
		|							КОГДА
		|								Товары.СтавкаНДС = ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.БезНДС)
		|								ИЛИ Товары.СтавкаНДС = ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.НДС0)
		|							ТОГДА
		|								1
		|							КОГДА
		|								Товары.СтавкаНДС = ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.НДС18)
		|								ИЛИ Товары.СтавкаНДС = ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.НДС18_118)
		|							ТОГДА
		|								1.18
		|							КОГДА
		|								Товары.СтавкаНДС = ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.НДС10)
		|								ИЛИ Товары.СтавкаНДС = ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.НДС10_110)
		|							ТОГДА
		|								1.10
		|						КОНЕЦ
		|					ИНАЧЕ
		|						1
		|				КОНЕЦ
		|				* ВЫБОР
		|					КОГДА
		|						&Валюта <> &ВалютаСоглашения
		|					ТОГДА
		|						ВЫБОР
		|							КОГДА ЕСТЬNULL(КурсыВалютыСоглашения.Кратность, 0) > 0
		|								И ЕСТЬNULL(КурсыВалютыСоглашения.Курс, 0) > 0
		|								И ЕСТЬNULL(КурсыВалюты.Кратность, 0) > 0
		|								И ЕСТЬNULL(КурсыВалюты.Курс, 0) > 0
		|							ТОГДА 
		|								(КурсыВалюты.Курс * КурсыВалютыСоглашения.Кратность)
		|								/ (КурсыВалютыСоглашения.Курс * КурсыВалюты.Кратность)
		|							ИНАЧЕ
		|								0
		|						КОНЕЦ
		|					ИНАЧЕ 
		|						1
		|				КОНЕЦ КАК ЧИСЛО(15, 2))
		|	КАК Цена
		|ПОМЕСТИТЬ
		|	Товары
		|ИЗ
		|	Документ." + ИмяТаблицы + ".Товары КАК Товары
		|ЛЕВОЕ СОЕДИНЕНИЕ
		|	ВременнаяТаблицаКурсыВалют КАК КурсыВалюты
		|ПО
		|	КурсыВалюты.Валюта = &Валюта
		|ЛЕВОЕ СОЕДИНЕНИЕ
		|	ВременнаяТаблицаКурсыВалют КАК КурсыВалютыСоглашения
		|ПО
		|	КурсыВалютыСоглашения.Валюта = &ВалютаСоглашения
		|ГДЕ
		|	Товары.Ссылка = &Ссылка
		|;
		|ВЫБРАТЬ
		|	Товары.Номенклатура                    КАК Номенклатура,
		|	Товары.Характеристика                  КАК Характеристика,
		|	Товары.УсловиеЦеныПоставщика           КАК УсловиеЦеныПоставщика,
		|	СРЕДНЕЕ(
		|		Товары.Цена / ВЫБОР
		|				КОГДА
		|					Товары.Упаковка <> ЗНАЧЕНИЕ(Справочник.УпаковкиНоменклатуры.ПустаяСсылка)
		|				ТОГДА
		|					Товары.Упаковка.Коэффициент
		|				ИНАЧЕ
		|					1
		|			КОНЕЦ
		|	) КАК ЦенаЗаБазовуюЕдиницу,
		|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ Товары.Упаковка)  КАК КоличествоРазличныхУпаковок
		|ПОМЕСТИТЬ
		|	ТоварыСРазличнымиУпаковкамиЦенами
		|ИЗ
		|	Товары КАК Товары
		|СГРУППИРОВАТЬ ПО
		|	Номенклатура,
		|	Характеристика,
		|	УсловиеЦеныПоставщика
		|;
		|ВЫБРАТЬ
		|	МАКСИМУМ(Товары.НоменклатураПоставщика) КАК НоменклатураПоставщика,
		|	Товары.Номенклатура                     КАК Номенклатура,
		|	Товары.Характеристика                   КАК Характеристика,
		|	Товары.УсловиеЦеныПоставщика            КАК УсловиеЦеныПоставщика,
		|	МИНИМУМ(ВЫБОР
		|				КОГДА
		|					ТоварыСРазличнымиУпаковкамиЦенами.КоличествоРазличныхУпаковок > 1
		|				ТОГДА
		|					ЗНАЧЕНИЕ(Справочник.УпаковкиНоменклатуры.ПустаяСсылка)
		|				ИНАЧЕ
		|					Товары.Упаковка
		|				КОНЕЦ
		|			) КАК Упаковка,
		|	СРЕДНЕЕ(ВЫБОР
		|				КОГДА
		|					ТоварыСРазличнымиУпаковкамиЦенами.КоличествоРазличныхУпаковок > 1
		|				ТОГДА
		|					ТоварыСРазличнымиУпаковкамиЦенами.ЦенаЗаБазовуюЕдиницу
		|				ИНАЧЕ
		|					Товары.Цена
		|				КОНЕЦ
		|			) КАК Цена
		|ИЗ
		|	Товары КАК Товары
		|ЛЕВОЕ СОЕДИНЕНИЕ
		|	ТоварыСРазличнымиУпаковкамиЦенами КАК ТоварыСРазличнымиУпаковкамиЦенами
		|ПО
		|	Товары.Номенклатура = ТоварыСРазличнымиУпаковкамиЦенами.Номенклатура
		|	И Товары.Характеристика = ТоварыСРазличнымиУпаковкамиЦенами.Характеристика
		|	И Товары.УсловиеЦеныПоставщика = ТоварыСРазличнымиУпаковкамиЦенами.УсловиеЦеныПоставщика
		|СГРУППИРОВАТЬ ПО
		|	Товары.Номенклатура,
		|	Товары.Характеристика,
		|	Товары.УсловиеЦеныПоставщика
		|");
		
	Запрос.УстановитьПараметр("Ссылка",                    Основание);
	Запрос.УстановитьПараметр("Дата",                      ВыборкаШапка.Дата);
	Запрос.УстановитьПараметр("Валюта",                    ВыборкаШапка.Валюта);
	Запрос.УстановитьПараметр("ВалютаСоглашения",          ВыборкаШапка.ВалютаСоглашения);
	Запрос.УстановитьПараметр("ЦенаВключаетНДС",           ВыборкаШапка.ЦенаВключаетНДС);
	Запрос.УстановитьПараметр("ЦенаВключаетНДССоглашения", ВыборкаШапка.ЦенаВключаетНДССоглашения);
	
	РезультатЗапроса = Запрос.ВыполнитьПакет();
	ДокументОбъект.Товары.Загрузить(РезультатЗапроса[3].Выгрузить());
	
КонецПроцедуры

Процедура СообщитьОбОшибкахРегистрацииЦенОснованием(РегистрироватьЦеныПоставщикаОснованием, ДокументРегистрацииЦенПоставщика)
	
	Если РегистрироватьЦеныПоставщикаОснованием Тогда
		
		ТекстОшибки = НСтр("ru='Цены уже зарегистрированы документом %Документ%. Ввод на основании не требуется.'");
		ТекстОшибки = СтрЗаменить(ТекстОшибки, "%Документ%", ДокументРегистрацииЦенПоставщика);
		
		ВызватьИсключение ТекстОшибки;
		
	КонецЕсли;
	
КонецПроцедуры


#КонецЕсли