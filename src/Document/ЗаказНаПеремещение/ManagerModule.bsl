#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

////////////////////////////////////////////////////////////////////////////////
// ПРОГРАММНЫЙ ИНТЕРФЕЙС

// Функция возвращает таблицу реквизитов, зависимых от хозяйственной операции документа.
//
Функция ПолучитьМассивыРеквизитов(ХозяйственнаяОперация, МассивВсехРеквизитов, МассивРеквизитовОперации) Экспорт
	
	МассивВсехРеквизитов = Новый Массив;
	МассивВсехРеквизитов.Добавить("ОрганизацияПолучатель");
	
	МассивРеквизитовОперации = Новый Массив;
	Если ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВнутренняяПередачаТоваров Тогда
		МассивРеквизитовОперации.Добавить("ОрганизацияПолучатель");
		
	КонецЕсли;
	
КонецФункции

// Формирует структуру для создания перемещения товаров по одному или нескольким заказам на перемещение
// 		Если в переданных заказах отличаются реквизиты шапки, выдается сообщение об ошибке
//
// Параметры:
//  МассивСсылок - Массив - заказы на перемещение, по которым необходимо ввести накладную
// 	РеквизитыШапки - Структура - структура, в которую будут помещены реквизиты шапки из массива заказов
//
// Возвращаемое значение:
// 	Булево - Ложь, если в переданных заказах отличаются реквизиты шапки
//
Функция ДанныеЗаполненияПеремещения(МассивСсылок, РеквизитыШапки) Экспорт
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	МИНИМУМ(Заказ.ХозяйственнаяОперация)    КАК ХозяйственнаяОперация,
	|	МИНИМУМ(Заказ.Организация)              КАК Организация,
	|	МИНИМУМ(Заказ.ОрганизацияПолучатель)    КАК ОрганизацияПолучатель,
	|	МИНИМУМ(Заказ.СкладОтправитель)         КАК СкладОтправитель,
	|	МИНИМУМ(Заказ.СкладПолучатель)          КАК СкладПолучатель,
	|	МИНИМУМ(Заказ.Подразделение)            КАК Подразделение,
	|	ВЫБОР
	|		КОГДА
	|			КОЛИЧЕСТВО(РАЗЛИЧНЫЕ Заказ.ХозяйственнаяОперация) > 1
	|		ТОГДА
	|			ИСТИНА
	|		ИНАЧЕ
	|			ЛОЖЬ
	|	КОНЕЦ КАК ЕстьОтличияОперация,
	|	ВЫБОР
	|		КОГДА
	|			КОЛИЧЕСТВО(РАЗЛИЧНЫЕ Заказ.Организация) > 1
	|		ТОГДА
	|			ИСТИНА
	|		ИНАЧЕ
	|			ЛОЖЬ
	|	КОНЕЦ КАК ЕстьОтличияОрганизация,
	|	ВЫБОР
	|		КОГДА
	|			КОЛИЧЕСТВО(РАЗЛИЧНЫЕ Заказ.ОрганизацияПолучатель) > 1
	|		ТОГДА
	|			ИСТИНА
	|		ИНАЧЕ
	|			ЛОЖЬ
	|	КОНЕЦ КАК ЕстьОтличияОрганизацияПолучатель,
	|	ВЫБОР
	|		КОГДА
	|			КОЛИЧЕСТВО(РАЗЛИЧНЫЕ Заказ.СкладОтправитель) > 1
	|		ТОГДА
	|			ИСТИНА
	|		ИНАЧЕ
	|			ЛОЖЬ
	|	КОНЕЦ КАК ЕстьОтличияСкладОтправитель,
	|	ВЫБОР
	|		КОГДА
	|			КОЛИЧЕСТВО(РАЗЛИЧНЫЕ Заказ.СкладПолучатель) > 1
	|		ТОГДА
	|			ИСТИНА
	|		ИНАЧЕ
	|			ЛОЖЬ
	|	КОНЕЦ КАК ЕстьОтличияСкладПолучатель,
	|	ВЫБОР
	|		КОГДА
	|			КОЛИЧЕСТВО(РАЗЛИЧНЫЕ Заказ.Подразделение) > 1
	|		ТОГДА
	|			ИСТИНА
	|		ИНАЧЕ
	|			ЛОЖЬ
	|	КОНЕЦ КАК ЕстьОтличияПодразделение
	|ИЗ
	|	Документ.ЗаказНаПеремещение КАК Заказ
	|ГДЕ
	|	Заказ.Ссылка В(&МассивСсылок)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Заказ.Ссылка КАК Заказ,
	|	Заказ.Статус КАК Статус,
	|	(НЕ Заказ.Проведен) КАК ЕстьОшибкиПроведен,
	|	ВЫБОР
	|		КОГДА Заказ.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыВнутреннихЗаказов.Закрыт)
	|				ИЛИ Заказ.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыВнутреннихЗаказов.КВыполнению)
	|			ТОГДА ЛОЖЬ
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ КАК ЕстьОшибкиСтатус
	|ИЗ
	|	Документ.ЗаказНаПеремещение КАК Заказ
	|ГДЕ
	|	Заказ.Ссылка В(&МассивСсылок)
	|	И ((НЕ Заказ.Проведен)
	|			ИЛИ Заказ.Статус <> ЗНАЧЕНИЕ(Перечисление.СтатусыВнутреннихЗаказов.КВыполнению)
	|				И Заказ.Статус <> ЗНАЧЕНИЕ(Перечисление.СтатусыВнутреннихЗаказов.Закрыт))");
	
	Запрос.УстановитьПараметр("МассивСсылок", МассивСсылок);
	РезультатЗапроса = Запрос.ВыполнитьПакет();
	ВыборкаРеквизитыШапки = РезультатЗапроса[0].Выбрать();
	ВыборкаРеквизитыШапки.Следующий();
	
	Отказ = Ложь;
	
	Если ВыборкаРеквизитыШапки.ЕстьОтличияОперация Тогда
		
		ТекстСообщения = НСтр("ru='У выделенных распоряжений отличается операция'");
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
			ТекстСообщения,
			,
			,
			,
			Отказ
		);
		
	Иначе
		
		ТекстСообщения = НСтр("ru='У выделенных распоряжений отличается поле ""%ПредставлениеПоля%""'");
		
		Если ВыборкаРеквизитыШапки.ЕстьОтличияОрганизация Тогда
			
			ПредставлениеПоля = НСтр("ru='Организация'");
			Если ВыборкаРеквизитыШапки.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВнутренняяПередачаТоваров Тогда
				ПредставлениеПоля = НСтр("ru='Организация-отправитель'");
			КонецЕсли;
			
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
				СтрЗаменить(ТекстСообщения, "%ПредставлениеПоля%", ПредставлениеПоля),
				,
				,
				,
				Отказ
			);
			
		КонецЕсли;
		
		Если ВыборкаРеквизитыШапки.ЕстьОтличияОрганизацияПолучатель Тогда
			
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
				СтрЗаменить(ТекстСообщения, "%ПредставлениеПоля%", НСтр("ru='Организация-получатель'")),
				,
				,
				,
				Отказ
			);
			
		КонецЕсли;
		
		Если ВыборкаРеквизитыШапки.ЕстьОтличияСкладОтправитель Тогда
			
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
				СтрЗаменить(ТекстСообщения, "%ПредставлениеПоля%", НСтр("ru='Склад-отправитель'")),
				,
				,
				,
				Отказ
			);
			
		КонецЕсли;
		
		Если ВыборкаРеквизитыШапки.ЕстьОтличияСкладПолучатель Тогда
			
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
				СтрЗаменить(ТекстСообщения, "%ПредставлениеПоля%", НСтр("ru='Склад-получатель'")),
				,
				,
				,
				Отказ
			);
			
		КонецЕсли;
		
		Если ВыборкаРеквизитыШапки.ЕстьОтличияПодразделение Тогда
			
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
				СтрЗаменить(ТекстСообщения, "%ПредставлениеПоля%", НСтр("ru='Подразделение'")),
				,
				,
				,
				Отказ
			);
			
		КонецЕсли;
		
	КонецЕсли;
	
	
	Если Отказ Тогда
		
		ТекстОшибки = НСтр("ru='Ввод одного перемещения товаров на основании выделенных распоряжений невозможен'");
		
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
			ТекстОшибки,
			,
			,
			,
			Отказ
		);
		
	Иначе
		
		Если Не РезультатЗапроса[1].Пустой() Тогда
			
			ВыборкаЗаказы = РезультатЗапроса[1].Выбрать();
			
			Пока ВыборкаЗаказы.Следующий() Цикл
				
				Если ВыборкаЗаказы.ЕстьОшибкиПроведен Тогда
					
					ТекстОшибки = НСтр("ru='Документ %Документ% не проведен. Ввод на основании непроведенного документа запрещен.'");
					ТекстОшибки = СтрЗаменить(ТекстОшибки, "%Документ%", ВыборкаЗаказы.Заказ);
					
					ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
						ТекстОшибки,
						,
						,
						,
						Отказ
					);
					
				ИначеЕсли ВыборкаЗаказы.ЕстьОшибкиСтатус Тогда
					
					ТекстОшибки = НСтр("ru='Документ %Документ% находится в статусе ""%Статус%"". Ввод на основании разрешен только в статусах ""К выполнению"", ""Закрыт"".'");
					ТекстОшибки = СтрЗаменить(ТекстОшибки, "%Документ%", ВыборкаЗаказы.Заказ);
					ТекстОшибки = СтрЗаменить(ТекстОшибки, "%Статус%",   ВыборкаЗаказы.Статус);
					
					ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
						ТекстОшибки,
						,
						,
						,
						Отказ
					);
					
				КонецЕсли;
				
			КонецЦикла;
			
		КонецЕсли;
		
		РеквизитыШапки.Вставить("ХозяйственнаяОперация", ВыборкаРеквизитыШапки.ХозяйственнаяОперация);
		РеквизитыШапки.Вставить("Организация",           ВыборкаРеквизитыШапки.Организация);
		РеквизитыШапки.Вставить("ОрганизацияПолучатель", ВыборкаРеквизитыШапки.ОрганизацияПолучатель);
		РеквизитыШапки.Вставить("СкладОтправитель",      ВыборкаРеквизитыШапки.СкладОтправитель);
		РеквизитыШапки.Вставить("СкладПолучатель",       ВыборкаРеквизитыШапки.СкладПолучатель);
		РеквизитыШапки.Вставить("Подразделение",         ВыборкаРеквизитыШапки.Подразделение);
		
	КонецЕсли;
	
	Возврат Не Отказ;
	
КонецФункции

// Возвращает массив имен ролей с правом "Добавление" для данного документа
//
// Возвращаемое значение:
//	Массив - Массив с именами ролей
//
Функция ИменаРолейСПравомДобавления() Экспорт
	
	МассивРолей = Новый Массив;
	
	МассивРолей.Добавить("ПолныеПрава");
	МассивРолей.Добавить("ДобавлениеИзменениеЗаказовНаПеремещение");
	
	Возврат МассивРолей;
	
КонецФункции

// Формирует запрос проверки при смене статуса списка документов
//
// Параметры:
//	МассивДокументов - Массив - Массив ссылок на документы, которые надо проверять
//	НовыйСтатус - Строка - Имя нового статуса
//	ДополнительныеПараметры - Структура - Структура дополнительных параметров
//
// Возвращаемое значение:
//	Запрос - Запрос проверки перед сменой статуса
//
Функция СформироватьЗапросПроверкиПриСменеСтатуса(МассивДокументов, НовыйСтатус, ДополнительныеПараметры) Экспорт
	
	ЗначениеНовогоСтатуса = Перечисления.СтатусыВнутреннихЗаказов[НовыйСтатус];
	
	Если ДополнительныеПараметры <> Неопределено И ДополнительныеПараметры.Свойство("КонтрольВыполненияЗаказа") Тогда
		
		ТекстЗапроса =
		"ВЫБРАТЬ
		|	Остатки.ЗаказНаПеремещение КАК ЗаказНаПеремещение
		|ПОМЕСТИТЬ
		|	втОстаткиПоЗаказам
		|ИЗ
		|	РегистрНакопления.ЗаказыНаПеремещение.Остатки(, ЗаказНаПеремещение В (&МассивДокументов)) КАК Остатки
		|СГРУППИРОВАТЬ ПО
		|	Остатки.ЗаказНаПеремещение
		|;
		|ВЫБРАТЬ
		|	ТаблицаДокументов.Ссылка КАК Ссылка,
		|	ПРЕДСТАВЛЕНИЕ(ТаблицаДокументов.Ссылка) КАК Представление,
		|	ПРЕДСТАВЛЕНИЕ(ТаблицаДокументов.Статус) КАК ПредставлениеТекущегоСтатуса,
		|	ПРЕДСТАВЛЕНИЕ(&Статус) КАК ПредставлениеНовогоСтатуса,
		|	ВЫБОР
		|		КОГДА ТаблицаДокументов.Статус = &Статус
		|			ТОГДА ИСТИНА
		|		ИНАЧЕ ЛОЖЬ
		|	КОНЕЦ КАК СтатусСовпадает,
		|	ТаблицаДокументов.Проведен КАК Проведен,
		|	ТаблицаДокументов.ПометкаУдаления КАК ПометкаУдаления,
		|	ИСТИНА КАК ЗаписьПроведением,
		|	ВЫБОР
		|		КОГДА втОстаткиПоЗаказам.ЗаказНаПеремещение ЕСТЬ NULL 
		|			ТОГДА ЛОЖЬ
		|		ИНАЧЕ ИСТИНА
		|	КОНЕЦ КАК ЕстьОстаткиПоЗаказу
		|ИЗ
		|	Документ.ЗаказНаПеремещение КАК ТаблицаДокументов
		|ЛЕВОЕ СОЕДИНЕНИЕ
		|	втОстаткиПоЗаказам
		|ПО
		|	ТаблицаДокументов.Ссылка = втОстаткиПоЗаказам.ЗаказНаПеремещение
		|ГДЕ
		|	ТаблицаДокументов.Ссылка В (&МассивДокументов)
		|";
		
	Иначе
		
		ТекстЗапроса =
		"ВЫБРАТЬ
		|	ТаблицаДокументов.Ссылка КАК Ссылка,
		|	ПРЕДСТАВЛЕНИЕ(ТаблицаДокументов.Ссылка) КАК Представление,
		|	ПРЕДСТАВЛЕНИЕ(ТаблицаДокументов.Статус) КАК ПредставлениеТекущегоСтатуса,
		|	ПРЕДСТАВЛЕНИЕ(&Статус) КАК ПредставлениеНовогоСтатуса,
		|	ВЫБОР
		|		КОГДА ТаблицаДокументов.Статус = &Статус
		|			ТОГДА ИСТИНА
		|		ИНАЧЕ ЛОЖЬ
		|	КОНЕЦ КАК СтатусСовпадает,
		|	ТаблицаДокументов.Проведен КАК Проведен,
		|	ТаблицаДокументов.ПометкаУдаления КАК ПометкаУдаления,
		|	ИСТИНА КАК ЗаписьПроведением
		|ИЗ
		|	Документ.ЗаказНаПеремещение КАК ТаблицаДокументов
		|ГДЕ
		|	ТаблицаДокументов.Ссылка В(&МассивДокументов)
		|";
		
	КонецЕсли;
		
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.УстановитьПараметр("Статус", ЗначениеНовогоСтатуса);
	Запрос.УстановитьПараметр("МассивДокументов", МассивДокументов);
	
	Возврат Запрос;
	
КонецФункции

// Возвращает результат проверки при смене статуса документа
//
// Параметры:
//	ВыборкаПроверки - ВыборкаИзРезультатаЗапроса - Текущая строка выборки
//	НовыйСтатус - Перечисление - Новый статус
//	ДополнительныеПараметры - Структура - Структура дополнительных параметров
//
// Возвращаемое значение:
//	Булево - Истина, в случае успешного завершения проверки
//
Функция ПроверкаПередСменойСтатуса(ВыборкаПроверки, НовыйСтатус, ДополнительныеПараметры) Экспорт
	
	Отказ = Ложь;
	
	Если ДополнительныеПараметры = Неопределено Тогда
		
		Возврат Не Отказ;
		
	КонецЕсли;
	
	Если ДополнительныеПараметры.Свойство("КонтрольВыполненияЗаказа") И ВыборкаПроверки.ЕстьОстаткиПоЗаказу Тогда
		
		ТекстОшибки = НСтр("ru='У документа %Документ% статус ""%Статус%"" не установлен, т.к. заказ выполнен не полностью'");
		ТекстОшибки = СтрЗаменить(ТекстОшибки, "%Документ%", ВыборкаПроверки.Ссылка);
		ТекстОшибки = СтрЗаменить(ТекстОшибки, "%Статус%", ВыборкаПроверки.ПредставлениеНовогоСтатуса);
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстОшибки, ВыборкаПроверки.Ссылка);
		Отказ = Истина;
		
	КонецЕсли;
	
	Возврат Не Отказ;
	
КонецФункции

Функция ТаблицаНеобеспеченнойПотребности(Заказ) Экспорт

	УстановитьПривилегированныйРежим(Истина);

	Запрос = Новый Запрос(
	"
	|ВЫБРАТЬ
	|	Заказы.Номенклатура                        КАК Номенклатура,
	|	Заказы.Характеристика                      КАК Характеристика,
	|	Заказы.ЗаказНаПеремещение.СкладОтправитель КАК Склад,
	|	ВЫБОР КОГДА Товары.Назначение = ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка) ТОГДА
	|			Заказы.ЗаказНаПеремещение.Назначение
	|		ИНАЧЕ
	|			Товары.Назначение
	|	КОНЕЦ                                      КАК Назначение,
	|	СУММА(Заказы.ЗаказаноОстаток)              КАК Заказано,
	|	ВЫБОР КОГДА МАКСИМУМ(Товары.Упаковка) <> МИНИМУМ(Товары.Упаковка) ТОГДА
	|		ЗНАЧЕНИЕ(Справочник.УпаковкиНоменклатуры.ПустаяСсылка)
	|	ИНАЧЕ
	|		МАКСИМУМ(Товары.Упаковка)
	|	КОНЕЦ                                      КАК Упаковка,
	|	МАКСИМУМ(Товары.НомерСтроки)               КАК НомерСтроки
	|
	|ПОМЕСТИТЬ НоменклатураЗаказа
	|
	|ИЗ
	|	РегистрНакопления.ЗаказыНаПеремещение.Остатки(,
	|			ЗаказНаПеремещение = &Заказ
	|		) КАК Заказы
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ЗаказНаПеремещение.Товары КАК Товары
	|		ПО Заказы.ЗаказНаПеремещение = Товары.Ссылка
	|			И Заказы.Номенклатура    = Товары.Номенклатура
	|			И Заказы.Характеристика  = Товары.Характеристика
	|			И Заказы.КодСтроки       = Товары.КодСтроки
	|ГДЕ
	|	Товары.ВариантОбеспечения = ЗНАЧЕНИЕ(Перечисление.ВариантыОбеспечения.ПодЗаказ)
	|
	|СГРУППИРОВАТЬ ПО
	|	Заказы.Номенклатура,
	|	Заказы.Характеристика,
	|	Заказы.ЗаказНаПеремещение,
	|	Товары.Назначение
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Обеспечение.Номенклатура    КАК Номенклатура,
	|	Обеспечение.Характеристика  КАК Характеристика,
	|	Обеспечение.Склад           КАК Склад,
	|	Обеспечение.Назначение      КАК Назначение,
	|	Обеспечение.КЗаказуОстаток  КАК Заказать
	|
	|ПОМЕСТИТЬ Потребность
	|
	|ИЗ
	|	РегистрНакопления.ОбеспечениеЗаказов.Остатки(
	|			,
	|			(Номенклатура, Характеристика, Склад, Назначение) В
	|				(ВЫБРАТЬ
	|					Т.Номенклатура,
	|					Т.Характеристика,
	|					Т.Склад,
	|					Т.Назначение
	|				ИЗ
	|					НоменклатураЗаказа КАК Т)
	|			) КАК Обеспечение
	|ГДЕ
	|	Обеспечение.КЗаказуОстаток > 0
	|	
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Т.Номенклатура   КАК Номенклатура,
	|	Т.Характеристика КАК Характеристика,
	|	Т.Склад          КАК Склад,
	|	Т.Назначение     КАК Назначение,
	|	Т.Заказать       КАК Заказать
	|
	|ИЗ
	|	Потребность КАК Т
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Т.Номенклатура                                КАК Номенклатура,
	|	Т.Номенклатура.СтавкаНДС                      КАК СтавкаНДС,
	|	Т.Характеристика                              КАК Характеристика,
	|	Т.Склад                                       КАК Склад,
	|	Т.Заказано                                    КАК Количество,
	|	Т.Заказано/ЕСТЬNULL(Т.Упаковка.Коэффициент,1) КАК КоличествоУпаковок,
	|	ЕСТЬNULL(Т.Упаковка.Коэффициент,1)            КАК УпаковкаКоэффициент,
	|	Т.Упаковка                                    КАК Упаковка,
	|	Т.НомерСтроки                                 КАК НомерСтроки,
	|	Т.Назначение                                  КАК Назначение
	|ИЗ
	|	НоменклатураЗаказа КАК Т
	|ГДЕ
	|	(Т.Номенклатура, Т.Характеристика, Т.Склад, Т.Назначение)
	|			В (ВЫБРАТЬ
	|				Т.Номенклатура,
	|				Т.Характеристика,
	|				Т.Склад,
	|				Т.Назначение
	|			ИЗ
	|				Потребность КАК Т)
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки
	|");
	Запрос.УстановитьПараметр("Заказ", Заказ);
	МассивРезультатов = Запрос.ВыполнитьПакет();

	ТаблицаПотребностей = МассивРезультатов[2].Выгрузить();

	ТаблицаТовары = МассивРезультатов[3].Выгрузить();
	ТаблицаТовары.Индексы.Добавить("Номенклатура, Характеристика, Склад");

	СтруктураПоиска = Новый Структура("Номенклатура, Характеристика, Склад");

	Для Каждого СтрокаПотребности Из ТаблицаПотребностей Цикл

		ЗаполнитьЗначенияСвойств(СтруктураПоиска, СтрокаПотребности);
		СтрокиТоваров = ТаблицаТовары.НайтиСтроки(СтруктураПоиска);
		Для Каждого СтрокаТоваров Из СтрокиТоваров Цикл

			Заказать = Мин(СтрокаПотребности.Заказать, СтрокаТоваров.Количество);

			Если Заказать > 0 Тогда

				Если Заказать < СтрокаТоваров.Количество Тогда 

					СтрокаТоваров.Количество         = Заказать;
					СтрокаТоваров.КоличествоУпаковок = СтрокаТоваров.Количество/СтрокаТоваров.УпаковкаКоэффициент;

				КонецЕсли;
			Иначе

				ТаблицаТовары.Удалить(СтрокаТоваров);

			КонецЕсли;

			СтрокаПотребности.Заказать = СтрокаПотребности.Заказать - Заказать;

		КонецЦикла;
	КонецЦикла;

	Возврат ТаблицаТовары;

КонецФункции

//Имена реквизитов, от значений которых зависят параметры указания серий
//
//	Возвращаемое значение:
//		Строка - имена реквизитов, перечисленные через запятую
//
Функция ИменаРеквизитовДляЗаполненияПараметровУказанияСерий() Экспорт
	ИменаРеквизитов = "СкладОтправитель";
	
	Возврат ИменаРеквизитов;
КонецФункции

//Возвращает параметры указания серий для товаров, указанных в документе
//
//	Параметры
//			Объект - Структура - структура значений реквизитов объекта, необходимых для заполнения параметров указания серий
//	Возвращаемое значение
//			Тип Структура
//				Состав полей задается в функции ОбработкаТабличнойЧастиКлиентСервер.ПараметрыУказанияСерий
//
Функция ПараметрыУказанияСерий(Объект) Экспорт
	
	ПараметрыУказанияСерий = НоменклатураКлиентСервер.ПараметрыУказанияСерий();
	
	ПараметрыУказанияСерий.ИспользоватьСерииНоменклатуры =
						ПолучитьФункциональнуюОпцию("ИспользоватьСерииНоменклатурыСклад", Новый Структура("Склад", Объект.СкладОтправитель));
	ПараметрыУказанияСерий.СкладскиеОперации.Добавить(Перечисления.СкладскиеОперации.ОтгрузкаПоПеремещению);
	ПараметрыУказанияСерий.ПоляСвязи.Добавить("УказыватьСерии");
	
	ПараметрыУказанияСерий.ИмяПоляСклад = "СкладОтправитель";
	ПараметрыУказанияСерий.ЭтоЗаказ = Истина;
	ПараметрыУказанияСерий.ПланированиеОтгрузки = Истина;
	
	Возврат ПараметрыУказанияСерий;
	
КонецФункции

////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

////////////////////////////////////////////////////////////////////////////////
// Проведение

Процедура ИнициализироватьДанныеДокумента(ДокументСсылка, ДополнительныеСвойства) Экспорт

	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Ссылка", ДокументСсылка);
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ДанныеШапки.Дата             КАК Период,
	|	ДанныеШапки.СкладОтправитель КАК СкладОтправитель,
	|	ДанныеШапки.СкладПолучатель  КАК СкладПолучатель,
	|	ДанныеШапки.Статус           КАК Статус,
	|	ДанныеШапки.СкладПолучатель.ИспользоватьОрдернуюСхемуПриПоступлении КАК ИспользоватьОрдернуюСхемуПриПоступлении
	|ИЗ
	|	Документ.ЗаказНаПеремещение КАК ДанныеШапки
	|ГДЕ
	|	ДанныеШапки.Ссылка = &Ссылка
	|";
	Реквизиты = Запрос.Выполнить().Выбрать();
	Реквизиты.Следующий();

	Запрос.УстановитьПараметр("Период",           Реквизиты.Период);
	Запрос.УстановитьПараметр("СкладОтправитель", Реквизиты.СкладОтправитель);
	Запрос.УстановитьПараметр("СкладПолучатель",  Реквизиты.СкладПолучатель);
	Запрос.УстановитьПараметр("Статус",           Реквизиты.Статус);
	Запрос.УстановитьПараметр("ИспользоватьОрдернуюСхемуПриПоступлении", Реквизиты.ИспользоватьОрдернуюСхемуПриПоступлении);
	

	Запрос.Текст = 
	// 0 ТаблицаЗаказыНаПеремещение
	"ВЫБРАТЬ
	|	МАКСИМУМ(ВложенныйЗапрос.Порядок)      КАК Порядок,
	|	МАКСИМУМ(ВложенныйЗапрос.НомерСтроки)  КАК НомерСтроки,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	ВложенныйЗапрос.Период                 КАК Период,
	|	ВложенныйЗапрос.ЗаказНаПеремещение     КАК ЗаказНаПеремещение,
	|	ВложенныйЗапрос.Номенклатура           КАК Номенклатура,
	|	ВложенныйЗапрос.Характеристика         КАК Характеристика,
	|	ВложенныйЗапрос.КодСтроки              КАК КодСтроки,
	|	СУММА(ВложенныйЗапрос.КОформлению)     КАК КОформлению,
	|	СУММА(ВложенныйЗапрос.Заказано)        КАК Заказано
	|ИЗ
	|	(ВЫБРАТЬ
	|		1                            КАК Порядок,
	|		ТаблицаТовары.НомерСтроки    КАК НомерСтроки,
	|		НачалоПериода(&Период, День) КАК Период,
	|		ТаблицаТовары.Ссылка         КАК ЗаказНаПеремещение,
	|		ТаблицаТовары.Номенклатура   КАК Номенклатура,
	|		ТаблицаТовары.Характеристика КАК Характеристика,
	|		ТаблицаТовары.КодСтроки      КАК КодСтроки,
	|		0                            КАК КОформлению,
	|		ТаблицаТовары.Количество     КАК Заказано
	|	ИЗ
	|		Документ.ЗаказНаПеремещение.Товары КАК ТаблицаТовары
	|	ГДЕ
	|		ТаблицаТовары.Ссылка = &Ссылка
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		2,
	|		ТаблицаТовары.НомерСтроки    КАК НомерСтроки,
	|		ТаблицаТовары.НачалоОтгрузки КАК ПЕРИОД,
	|		ТаблицаТовары.Ссылка         КАК ЗаказНаПеремещение,
	|		ТаблицаТовары.Номенклатура   КАК Номенклатура,
	|		ТаблицаТовары.Характеристика КАК Характеристика,
	|		ТаблицаТовары.КодСтроки      КАК КодСтроки,
	|		ТаблицаТовары.Количество     КАК КОформлению,
	|		0                            КАК Заказано
	|	ИЗ
	|		Документ.ЗаказНаПеремещение.Товары КАК ТаблицаТовары
	|	ГДЕ
	|		ТаблицаТовары.Ссылка = &Ссылка
	|		И (НЕ ТаблицаТовары.Отменено)
	|		И &Статус В (ЗНАЧЕНИЕ(Перечисление.СтатусыВнутреннихЗаказов.КВыполнению),
	|					ЗНАЧЕНИЕ(Перечисление.СтатусыВнутреннихЗаказов.Закрыт))
	|		) КАК ВложенныйЗапрос
	|
	|СГРУППИРОВАТЬ ПО
	|	ВложенныйЗапрос.Характеристика,
	|	ВложенныйЗапрос.Период,
	|	ВложенныйЗапрос.ЗаказНаПеремещение,
	|	ВложенныйЗапрос.Номенклатура,
	|	ВложенныйЗапрос.КодСтроки
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	3                                      КАК Порядок,
	|	ТаблицаТовары.НомерСтроки              КАК НомерСтроки,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	&Период                                КАК Период,
	|	ТаблицаТовары.Ссылка                   КАК ЗаказНаПеремещение,
	|	ТаблицаТовары.Номенклатура             КАК Номенклатура,
	|	ТаблицаТовары.Характеристика           КАК Характеристика,
	|	ТаблицаТовары.КодСтроки                КАК КодСтроки,
	|	0                                      КАК КОформлению,
	|	-ТаблицаТовары.Количество              КАК Заказано
	|ИЗ
	|	Документ.ЗаказНаПеремещение.Товары КАК ТаблицаТовары
	|ГДЕ
	|	ТаблицаТовары.Ссылка = &Ссылка
	|	И ТаблицаТовары.Отменено
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки,
	|	Порядок
	|;
	|////////////////////////////////////////////////////////////////////////////////
	// 1 ТаблицаДвижениеТоваров
	|ВЫБРАТЬ
	|	1                                КАК Порядок,
	|	ТаблицаТовары.НомерСтроки        КАК НомерСтроки,
	|	ТаблицаТовары.НачалоОтгрузки     КАК Период,
	|	ТаблицаТовары.Ссылка             КАК Распоряжение,
	|	&СкладОтправитель                КАК Склад,
	|	ТаблицаТовары.Номенклатура       КАК Номенклатура,
	|	ТаблицаТовары.Характеристика     КАК Характеристика,
	|	ТаблицаТовары.ВариантОбеспечения КАК ВариантОбеспечения,
	|	ВЫБОР КОГДА ТаблицаТовары.ВариантОбеспечения <> ЗНАЧЕНИЕ(Перечисление.ВариантыОбеспечения.ПустаяСсылка) ТОГДА
	|			ВЫБОР КОГДА ТаблицаТовары.Назначение = ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка) ТОГДА
	|					ТаблицаТовары.Ссылка.Назначение
	|				ИНАЧЕ
	|					ТаблицаТовары.Назначение
	|			КОНЕЦ
	|		ИНАЧЕ
	|			НЕОПРЕДЕЛЕНО
	|	КОНЕЦ                        КАК Назначение,
	|	0                            КАК ПланируемоеПоступление,
	|	ТаблицаТовары.Количество     КАК ПланируемаяОтгрузка
	|ИЗ
	|	Документ.ЗаказНаПеремещение.Товары КАК ТаблицаТовары
	|ГДЕ
	|	ТаблицаТовары.Ссылка = &Ссылка
	|	И НЕ (ТаблицаТовары.УказыватьСерии И ТаблицаТовары.СтатусУказанияСерий = 10)
	|	И (НЕ ТаблицаТовары.Отменено)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	2                                    КАК Порядок,
	|	ТаблицаТовары.НомерСтроки            КАК НомерСтроки,
	|	ТаблицаТовары.ОкончаниеПоступления   КАК Период,
	|	ТаблицаТовары.Ссылка                 КАК Распоряжение,
	|	&СкладПолучатель                     КАК Склад,
	|	ТаблицаТовары.Номенклатура           КАК Номенклатура,
	|	ТаблицаТовары.Характеристика         КАК Характеристика,
	|	ТаблицаТовары.ВариантОбеспечения     КАК ВариантОбеспечения,
	|	ТаблицаТовары.Назначение             КАК Назначение,
	|	ТаблицаТовары.Количество             КАК ПланируемоеПоступление,
	|	0                                    КАК ПланируемаяОтгрузка
	|ИЗ
	|	Документ.ЗаказНаПеремещение.Товары КАК ТаблицаТовары
	|ГДЕ
	|	ТаблицаТовары.Ссылка = &Ссылка
	|	И (НЕ ТаблицаТовары.Отменено)
	|
	|УПОРЯДОЧИТЬ ПО
	|	Порядок, 
	|	НомерСтроки
	|;
	|////////////////////////////////////////////////////////////////////////////////
	// 2 ТаблицаСвободныеОстатки
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	&Период                                КАК Период,
	|	&СкладОтправитель                      КАК Склад,
	|	ТаблицаТовары.Номенклатура             КАК Номенклатура,
	|	ТаблицаТовары.Характеристика           КАК Характеристика,
	|	0                                      КАК ВНаличии,
	|	ТаблицаТовары.Количество               КАК ВРезерве
	|ИЗ
	|	Документ.ЗаказНаПеремещение.Товары КАК ТаблицаТовары
	|ГДЕ
	|	ТаблицаТовары.Ссылка = &Ссылка
	|	И (НЕ ТаблицаТовары.УказыватьСерии И ТаблицаТовары.СтатусУказанияСерий <> 10)
	|	И ТаблицаТовары.ВариантОбеспечения = ЗНАЧЕНИЕ(Перечисление.ВариантыОбеспечения.ПустаяСсылка)
	|	И (НЕ ТаблицаТовары.Отменено)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
	|	&Период                                КАК Период,
	|	&СкладОтправитель                      КАК Склад,
	|	ТаблицаТовары.Номенклатура             КАК Номенклатура,
	|	ТаблицаТовары.Характеристика           КАК Характеристика,
	|	ТаблицаТовары.Количество               КАК ВНаличии,
	|	0                                      КАК ВРезерве
	|ИЗ
	|	Документ.ЗаказНаПеремещение.Товары КАК ТаблицаТовары
	|ГДЕ
	|	ТаблицаТовары.Ссылка = &Ссылка
	|	И ((ТаблицаТовары.УказыватьСерии И ТаблицаТовары.СтатусУказанияСерий = 10)
	|		ИЛИ ТаблицаТовары.ВариантОбеспечения = ЗНАЧЕНИЕ(Перечисление.ВариантыОбеспечения.СоСклада))
	|	И (НЕ ТаблицаТовары.Отменено)
	|;
	|////////////////////////////////////////////////////////////////////////////////
	// 3 ТаблицаРезервыСерийТоваров
	|ВЫБРАТЬ
	|	ТаблицаСерии.НомерСтроки               КАК НомерСтроки,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	&Период                                КАК Период,
	|	&Ссылка                                КАК ДокументРезерва,
	|	&СкладОтправитель                      КАК Склад,
	|	ТаблицаСерии.Номенклатура              КАК Номенклатура,
	|	ТаблицаСерии.Характеристика            КАК Характеристика,
	|	ТаблицаСерии.Серия                     КАК Серия,
	|	ТаблицаСерии.Количество                КАК Количество
	|ИЗ
	|	Документ.ЗаказНаПеремещение.Серии КАК ТаблицаСерии
	|ГДЕ
	|	ТаблицаСерии.Ссылка = &Ссылка
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ТаблицаТовары.НомерСтроки,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход),
	|	&Период,
	|	&Ссылка,
	|	&СкладОтправитель КАК Склад,
	|	ТаблицаТовары.Номенклатура,
	|	ТаблицаТовары.Характеристика,
	|	ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка),
	|	ТаблицаТовары.Количество
	|ИЗ
	|	Документ.ЗаказНаПеремещение.Товары КАК ТаблицаТовары
	|ГДЕ
	|	ТаблицаТовары.Ссылка = &Ссылка
	|	И ТаблицаТовары.СтатусУказанияСерий В (11,12)
	|;
	|////////////////////////////////////////////////////////////////////////////////
	//4.ТаблицаОбеспечениеЗаказов
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	&Период                                КАК Период,
	|	&СкладПолучатель                       КАК Склад,
	|	ТаблицаТовары.Номенклатура             КАК Номенклатура,
	|	ТаблицаТовары.Характеристика           КАК Характеристика,
	|	ТаблицаТовары.Назначение               КАК Назначение,
	|	0                                      КАК Потребность,
	|	ТаблицаТовары.Количество               КАК Заказано,
	|	0                                      КАК НаличиеСоСклада
	|ИЗ
	|	Документ.ЗаказНаПеремещение.Товары КАК ТаблицаТовары
	|ГДЕ
	|	ТаблицаТовары.Ссылка = &Ссылка
	|	И ТаблицаТовары.Назначение <> ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
	|	И (НЕ ТаблицаТовары.Отменено)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	&Период                                КАК Период,
	|	&СкладОтправитель                      КАК Склад,
	|	ТаблицаТовары.Номенклатура             КАК Номенклатура,
	|	ТаблицаТовары.Характеристика           КАК Характеристика,
	|	ВЫБОР КОГДА ТаблицаТовары.Назначение = ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка) ТОГДА
	|			ТаблицаТовары.Ссылка.Назначение
	|		ИНАЧЕ
	|			ТаблицаТовары.Назначение
	|	КОНЕЦ                                  КАК Назначение,
	|	ВЫБОР КОГДА ТаблицаТовары.ВариантОбеспечения = ЗНАЧЕНИЕ(Перечисление.ВариантыОбеспечения.СоСклада) ТОГДА
	|		0
	|	ИНАЧЕ
	|		ТаблицаТовары.Количество
	|	КОНЕЦ                                  КАК Потребность,
	|
	|	0                                      КАК Заказано,
	|
	|	ВЫБОР КОГДА ТаблицаТовары.ВариантОбеспечения = ЗНАЧЕНИЕ(Перечисление.ВариантыОбеспечения.СоСклада) ТОГДА
	|		ТаблицаТовары.Количество
	|	ИНАЧЕ
	|		0
	|	КОНЕЦ КАК НаличиеСоСклада
	|ИЗ
	|	Документ.ЗаказНаПеремещение.Товары КАК ТаблицаТовары
	|ГДЕ
	|	ТаблицаТовары.Ссылка = &Ссылка
	|	И ТаблицаТовары.ВариантОбеспечения <> ЗНАЧЕНИЕ(Перечисление.ВариантыОбеспечения.ПустаяСсылка)
	|	И (НЕ ТаблицаТовары.Отменено)
	|";
	
	Результат = Запрос.ВыполнитьПакет();
	ТаблицыДляДвижений = ДополнительныеСвойства.ТаблицыДляДвижений;
	ТаблицыДляДвижений.Вставить("ТаблицаЗаказыНаПеремещение", Результат[0].Выгрузить());
	ТаблицыДляДвижений.Вставить("ТаблицаДвижениеТоваров",     Результат[1].Выгрузить());
	ТаблицыДляДвижений.Вставить("ТаблицаСвободныеОстатки",    Результат[2].Выгрузить());
 	ТаблицыДляДвижений.Вставить("ТаблицаРезервыСерийТоваров", Результат[3].Выгрузить());
	ТаблицыДляДвижений.Вставить("ТаблицаОбеспечениеЗаказов",  Результат[4].Выгрузить());

КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// Печать

// Процедура печати документа.
//
Процедура Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт
	
	ПараметрыВывода.ДоступнаПечатьПоКомплектно = Истина;
	
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "ЗаказНаПеремещение") Тогда
		
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(
			КоллекцияПечатныхФорм,
			"ЗаказНаПеремещение",
			"Заказ на перемещение",
			СформироватьПечатнуюФормуЗаказНаПеремещение(МассивОбъектов, ОбъектыПечати)
		);
		
	КонецЕсли;
	
КонецПроцедуры

// Функция формирует табличный документ с печатной формой заказа,
// разработанной методистами
//
// Возвращаемое значение:
//  Табличный документ - печатная форма накладной
//
Функция СформироватьПечатнуюФормуЗаказНаПеремещение(МассивОбъектов, ОбъектыПечати)
	
	Колонка = ФормированиеПечатныхФорм.ИмяДополнительнойКолонки();
	ВыводитьКоды = ЗначениеЗаполнено(Колонка);
	
	ИспользоватьУпаковкиНоменклатуры = ПолучитьФункциональнуюОпцию("ИспользоватьУпаковкиНоменклатуры");

	ТабДокумент = Новый ТабличныйДокумент;
	ТабДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_ЗаказНаПеремещение";
	Макет = УправлениеПечатью.ПолучитьМакет("Документ.ЗаказНаПеремещение.ПФ_MXL_ЗаказНаПеремещение");
	
	ОбластьЗаголовка  = Макет.ПолучитьОбласть("Заголовок");
	
	Если ВыводитьКоды Тогда
		
		ОбластьКодовШапка  = Макет.ПолучитьОбласть("ШапкаТаблицы|КолонкаКодов");
		ОбластьКодовШапка.Параметры.ИмяКолонкиКодов = Колонка;
		
		ОбластьКодовСтрока = Макет.ПолучитьОбласть("Строка|КолонкаКодов");
		ОбластьКодовПодвал = Макет.ПолучитьОбласть("Подвал|КолонкаКодов");
		
	Иначе
		
		ОбластьТовары = Макет.Область("Товар");
		ОбластьТовары.ШиринаКолонки = ОбластьТовары.ШиринаКолонки + Макет.Область("КолонкаКодов").ШиринаКолонки;
		
	КонецЕсли;
	
	Если ИспользоватьУпаковкиНоменклатуры Тогда
		
		ОбластьУпаковокШапка  =  Макет.ПолучитьОбласть("ШапкаТаблицы|КолонкаУпаковок");
		ОбластьУпаковокСтрока =  Макет.ПолучитьОбласть("Строка|КолонкаУпаковок");
		ОбластьУпаковокПодвал =  Макет.ПолучитьОбласть("Подвал|КолонкаУпаковок");
		
	Иначе
		
		ОбластьТовары = Макет.Область("Товар");
		ОбластьТовары.ШиринаКолонки = ОбластьТовары.ШиринаКолонки 
									  + Макет.Область("КолонкаУпаковокКоличество").ШиринаКолонки
									  + Макет.Область("КолонкаУпаковокПредставление").ШиринаКолонки;
									  
	КонецЕсли;
	
	ОбластьНомераШапка = Макет.ПолучитьОбласть("ШапкаТаблицы|НомерСтроки");
	ОбластьДанныхШапка = Макет.ПолучитьОбласть("ШапкаТаблицы|Товар");
	ОбластьКонецСтрокиШапка = Макет.ПолучитьОбласть("ШапкаТаблицы|КонецСтроки");
	
	ОбластьНомераСтрока = Макет.ПолучитьОбласть("Строка|НомерСтроки");
	ОбластьДанныхСтрока = Макет.ПолучитьОбласть("Строка|Товар");
	ОбластьКонецСтрокиСтрока = Макет.ПолучитьОбласть("Строка|КонецСтроки");
	
	ОбластьНомераПодвал = Макет.ПолучитьОбласть("Подвал|НомерСтроки");
	ОбластьДанныхПодвал = Макет.ПолучитьОбласть("Подвал|Товар");
	ОбластьКонецСтрокиПодвал = Макет.ПолучитьОбласть("Подвал|КонецСтроки");
	
	ОбластьПодписей = Макет.ПолучитьОбласть("Подписи");
	
	ЗапросПоШапке = Новый Запрос;
	ЗапросПоШапке.Текст = 
	"ВЫБРАТЬ
	|	ЗаказНаПеремещение.Ссылка КАК Ссылка,
	|	ЗаказНаПеремещение.Номер КАК Номер,
	|	ЗаказНаПеремещение.Дата КАК Дата,
	|	ЗаказНаПеремещение.Организация.Префикс КАК Префикс,
	|	ПРЕДСТАВЛЕНИЕССЫЛКИ(ЗаказНаПеремещение.СкладОтправитель) КАК ОтправительПредставление,
	|	ПРЕДСТАВЛЕНИЕССЫЛКИ(ЗаказНаПеремещение.СкладПолучатель) КАК ПолучательПредставление,
	|	ЗаказНаПеремещение.Организация.НаименованиеСокращенное КАК ОрганизацияПредставление,
	|	ЗаказНаПеремещение.Ответственный.ФизическоеЛицо.Наименование КАК Менеджер,
	|	ВЫБОР
	|		КОГДА ЗаказНаПеремещение.СкладОтправитель.ИспользоватьСерииНоменклатуры
	|				ИЛИ ЗаказНаПеремещение.СкладПолучатель.ИспользоватьСерииНоменклатуры
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК ИспользоватьСерииНоменклатуры
	|ИЗ
	|	Документ.ЗаказНаПеремещение КАК ЗаказНаПеремещение
	|ГДЕ
	|	ЗаказНаПеремещение.Ссылка В(&МассивДокументов)
	|
	|УПОРЯДОЧИТЬ ПО
	|	Ссылка
	|ИТОГИ ПО
	|	ИспользоватьСерииНоменклатуры";
	
	ЗапросПоШапке.УстановитьПараметр("МассивДокументов", МассивОбъектов);
	
	ДеревоОбъектов = ЗапросПоШапке.Выполнить().Выгрузить(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	Для каждого ИспользованиеСерий из ДеревоОбъектов.Строки Цикл
						
		Если ИспользованиеСерий.ИспользоватьСерииНоменклатуры Тогда
			
			ТекстЗапросаПоТоварам = 
			"ВЫБРАТЬ
			|	ТаблицаТовары.Ссылка КАК Ссылка,
			|	ТаблицаТовары.Номенклатура КАК Товар,
			|	ТаблицаТовары.Номенклатура.НаименованиеПолное КАК ТоварНаименование,
			|	ТаблицаТовары.Номенклатура.Код КАК Код,
			|	ТаблицаТовары.Номенклатура.Артикул КАК Артикул,
			|	ТаблицаТовары.Характеристика.НаименованиеПолное КАК Характеристика,
			|	"""" КАК Серия,
			|	ВЫБОР
			|		КОГДА ТаблицаТовары.Упаковка = ЗНАЧЕНИЕ(Справочник.УпаковкиНоменклатуры.ПустаяСсылка)
			|			ТОГДА ПРЕДСТАВЛЕНИЕССЫЛКИ(ТаблицаТовары.Номенклатура.ЕдиницаИзмерения)
			|		ИНАЧЕ ПРЕДСТАВЛЕНИЕССЫЛКИ(ТаблицаТовары.Упаковка)
			|	КОНЕЦ КАК ПредставлениеЕдининицыИзмеренияУпаковки,
			|	ПРЕДСТАВЛЕНИЕССЫЛКИ(ТаблицаТовары.Номенклатура.ЕдиницаИзмерения) КАК ПредставлениеБазовойЕдиницыИзмерения,
			|	ТаблицаТовары.КоличествоУпаковок КАК КоличествоУпаковок,
			|	ТаблицаТовары.Количество КАК Количество
			|ИЗ
			|	Документ.ЗаказНаПеремещение.Товары КАК ТаблицаТовары
			|ГДЕ
			|	ТаблицаТовары.Ссылка В(&МассивОбъектов)
			|	И НЕ ТаблицаТовары.СтатусУказанияСерий В (2, 4, 6, 8, 10)
			|
			|ОБЪЕДИНИТЬ ВСЕ
			|
			|ВЫБРАТЬ
			|	ТаблицаСерии.Ссылка,
			|	ТаблицаСерии.Номенклатура,
			|	ТаблицаСерии.Номенклатура.НаименованиеПолное,
			|	ТаблицаСерии.Номенклатура.Код,
			|	ТаблицаСерии.Номенклатура.Артикул,
			|	ТаблицаСерии.Характеристика.НаименованиеПолное,
			|	ТаблицаСерии.Серия.Наименование,
			|	ТаблицаСерии.Номенклатура.ЕдиницаИзмерения,
			|	ПРЕДСТАВЛЕНИЕССЫЛКИ(ТаблицаСерии.Номенклатура.ЕдиницаИзмерения),
			|	ТаблицаСерии.Количество,
			|	ТаблицаСерии.Количество
			|ИЗ
			|	Документ.ЗаказНаПеремещение.Серии КАК ТаблицаСерии
			|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ЗаказНаПеремещение.Товары КАК ТаблицаТовары
			|		ПО ТаблицаСерии.Ссылка = ТаблицаТовары.Ссылка
			|			И ТаблицаСерии.Номенклатура = ТаблицаТовары.Номенклатура
			|			И ТаблицаСерии.Характеристика = ТаблицаТовары.Характеристика
			|ГДЕ
			|	ТаблицаСерии.Ссылка В(&МассивОбъектов)
			|
			|СГРУППИРОВАТЬ ПО
			|	ТаблицаСерии.Ссылка,
			|	ТаблицаСерии.Номенклатура,
			|	ТаблицаСерии.Характеристика,
			|	ТаблицаСерии.Серия,
			|	ТаблицаСерии.Количество,
			|	ТаблицаСерии.НомерСтроки
			|
			|ИМЕЮЩИЕ
			|	МАКСИМУМ(ТаблицаТовары.СтатусУказанияСерий) В (2, 4, 6, 8, 10)
			|
			|УПОРЯДОЧИТЬ ПО
			|	Ссылка,
			|	ТоварНаименование,
			|	Характеристика,
			|	Серия
			|ИТОГИ ПО
			|	Ссылка";
			
		Иначе
			
			ТекстЗапросаПоТоварам = 
			"ВЫБРАТЬ
			|	ТаблицаТовары.Ссылка КАК Ссылка,
			|	ТаблицаТовары.Номенклатура КАК Товар,
			|	ТаблицаТовары.Номенклатура.НаименованиеПолное КАК ТоварНаименование,
			|	ТаблицаТовары.Номенклатура.Код КАК Код,
			|	ТаблицаТовары.Номенклатура.Артикул КАК Артикул,
			|	ТаблицаТовары.Характеристика.НаименованиеПолное КАК Характеристика,
			|	"""" КАК Серия,
			|	ВЫБОР
			|		КОГДА ТаблицаТовары.Упаковка = ЗНАЧЕНИЕ(Справочник.УпаковкиНоменклатуры.ПустаяСсылка)
			|			ТОГДА ПРЕДСТАВЛЕНИЕССЫЛКИ(ТаблицаТовары.Номенклатура.ЕдиницаИзмерения)
			|		ИНАЧЕ ПРЕДСТАВЛЕНИЕССЫЛКИ(ТаблицаТовары.Упаковка)
			|	КОНЕЦ КАК ПредставлениеЕдининицыИзмеренияУпаковки,
			|	ПРЕДСТАВЛЕНИЕССЫЛКИ(ТаблицаТовары.Номенклатура.ЕдиницаИзмерения) КАК ПредставлениеБазовойЕдиницыИзмерения,
			|	ТаблицаТовары.КоличествоУпаковок КАК КоличествоУпаковок,
			|	ТаблицаТовары.Количество КАК Количество
			|ИЗ
			|	Документ.ЗаказНаПеремещение.Товары КАК ТаблицаТовары
			|ГДЕ
			|	ТаблицаТовары.Ссылка В(&МассивОбъектов)
			|	И НЕ ТаблицаТовары.Отменено
			|
			|УПОРЯДОЧИТЬ ПО
			|	Ссылка
			|ИТОГИ ПО
			|	Ссылка";
			
		КонецЕсли;
		
		ЗапросПоТоварам = Новый Запрос;
		ЗапросПоТоварам.Текст = ТекстЗапросаПоТоварам;
		ЗапросПоТоварам.УстановитьПараметр("МассивОбъектов", ИспользованиеСерий.Строки.ВыгрузитьКолонку("Ссылка"));
		ВыборкаПоТабличнымЧастям = ЗапросПоТоварам.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		
		ПервыйДокумент = Истина;

		Для каждого Шапка из ИспользованиеСерий.Строки Цикл
			
			НомерСтрокиНачало = ТабДокумент.ВысотаТаблицы + 1;
			
			Если Не ПервыйДокумент Тогда
				
				ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
				
			КонецЕсли;
			
			ПервыйДокумент = Ложь;
			
			// Вывод шапки заказа
			ОбластьЗаголовка.Параметры.ТекстЗаголовка = ОбщегоНазначенияУТКлиентСервер.СформироватьЗаголовокДокумента(Шапка, "Заказ на перемещение");
			ОбластьЗаголовка.Параметры.Заполнить(Шапка);
			ШтрихкодированиеПечатныхФорм.ВывестиШтрихкодВТабличныйДокумент(ТабДокумент, Макет, ОбластьЗаголовка, Шапка.Ссылка);
			ТабДокумент.Вывести(ОбластьЗаголовка);
			
			ТабДокумент.Вывести(ОбластьНомераШапка);
			
			Если ВыводитьКоды Тогда
				
				ТабДокумент.Присоединить(ОбластьКодовШапка);
				
			КонецЕсли;
			
			ТабДокумент.Присоединить(ОбластьДанныхШапка);
			
			Если ИспользоватьУпаковкиНоменклатуры Тогда
				
				ТабДокумент.Присоединить(ОбластьУпаковокШапка);
				
			КонецЕсли;
			
			ТабДокумент.Присоединить(ОбластьКонецСтрокиШапка);
			
			// Выборка товаров
			Если НЕ ВыборкаПоТабличнымЧастям.НайтиСледующий(Новый Структура("Ссылка", Шапка.Ссылка)) Тогда
				
				Продолжить;
				
			КонецЕсли;
			
			ВыборкаСтрокТовары = ВыборкаПоТабличнымЧастям.Выбрать();
			
			НомерСтроки = 1;
			
			Пока ВыборкаСтрокТовары.Следующий() Цикл

				ОбластьНомераСтрока.Параметры.НомерСтроки = НомерСтроки;
				ТабДокумент.Вывести(ОбластьНомераСтрока);
				
				Если ВыводитьКоды Тогда
					
					ОбластьКодовСтрока.Параметры.Артикул = ВыборкаСтрокТовары[Колонка];
					ТабДокумент.Присоединить(ОбластьКодовСтрока);
					
				КонецЕсли;
				
				ОбластьДанныхСтрока.Параметры.Заполнить(ВыборкаСтрокТовары);
				ОбластьДанныхСтрока.Параметры.Товар = НоменклатураКлиентСервер.ПредставлениеНоменклатурыДляПечати(
					СокрЛП(ВыборкаСтрокТовары.ТоварНаименование),
					СокрЛП(ВыборкаСтрокТовары.Характеристика),
					, // Упаковка
					СокрЛП(ВыборкаСтрокТовары.Серия)
				);
				
				ТабДокумент.Присоединить(ОбластьДанныхСтрока);
				
				Если ИспользоватьУпаковкиНоменклатуры Тогда
					
					ОбластьУпаковокСтрока.Параметры.Заполнить(ВыборкаСтрокТовары);
					ТабДокумент.Присоединить(ОбластьУпаковокСтрока);
					
				КонецЕсли;
				
				ОбластьКонецСтрокиСтрока.Параметры.Заполнить(ВыборкаСтрокТовары);
				ТабДокумент.Присоединить(ОбластьКонецСтрокиСтрока);
				
				НомерСтроки = НомерСтроки + 1;
				
			КонецЦикла;
			
			ТабДокумент.Вывести(ОбластьНомераПодвал);
			
			Если ВыводитьКоды Тогда
				
				ТабДокумент.Присоединить(ОбластьКодовПодвал);
				
			КонецЕсли;
			
			ТабДокумент.Присоединить(ОбластьДанныхПодвал);
			
			Если ИспользоватьУпаковкиНоменклатуры Тогда
				
				ТабДокумент.Присоединить(ОбластьУпаковокПодвал);
				
			КонецЕсли;
			
			ТабДокумент.Присоединить(ОбластьКонецСтрокиПодвал);
			
			// Вывод подписи.
			ОбластьПодписи = Макет.ПолучитьОбласть("Подписи");
			ОбластьПодписи.Параметры.ФИОМенеджер = ФизическиеЛица.ФамилияИнициалыФизЛица(Шапка.Менеджер);
			ТабДокумент.Вывести(ОбластьПодписи);
			
			УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабДокумент, НомерСтрокиНачало, ОбъектыПечати, Шапка.Ссылка);
			
		КонецЦикла;
		
	КонецЦикла;
	
	ТабДокумент.АвтоМасштаб = Истина;
	
	Возврат ТабДокумент;

КонецФункции

#КонецЕсли