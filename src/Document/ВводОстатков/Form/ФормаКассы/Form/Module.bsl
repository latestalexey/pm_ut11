////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)

	// Пропускаем инициализацию, чтобы гарантировать получение формы при передаче параметра "АвтоТест".
	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;
	КонецЕсли;
	
	ВалютаРегламентированногоУчета = Константы.ВалютаРегламентированногоУчета.Получить();
	ИспользуетсяНесколькоКасс = ПолучитьФункциональнуюОпцию("ИспользоватьНесколькоКасс");
	
	Если (НЕ ИспользуетсяНесколькоКасс) И ВозможностьОткрытияДокументаОтУстановленныхФО() Тогда
	    Возврат;
	КонецЕсли;
	
	Если Не ИспользуетсяНесколькоКасс Тогда
		ЕдинственнаяКасса = ЗначениеНастроекПовтИсп.ПолучитьКассуОрганизацииПоУмолчанию();
		ВалютаКассы = ЕдинственнаяКасса.ВалютаДенежныхСредств;
		Если Объект.Кассы.Количество() > 0 Тогда
			ОстатокВКассе = Объект.Кассы[0].Сумма;
		КонецЕсли;
	КонецЕсли;
	УстановитьВидимость();
		
КонецПроцедуры

&НаКлиенте
Процедура ПередЗаписью(Отказ, ПараметрыЗаписи)
	
	Если Не ИспользуетсяНесколькоКасс 
		И Объект.ТипОперации = ПредопределенноеЗначение("Перечисление.ТипыОперацийВводаОстатков.ОстаткиВКассах") Тогда
		Если НЕ ЗначениеЗаполнено(ЕдинственнаяКасса) Тогда
			ПодробноеПредставлениеОшибки =
				НСтр("ru = 'В информационной базе используется одна касса,
				|но ее свойства на настроены в панели администрирования.'")
			;
			Отказ = Истина;
			ВызватьИсключение ПодробноеПредставлениеОшибки;
		КонецЕсли;
		Объект.Кассы.Очистить();
		НоваяСтрока = Объект.Кассы.Добавить();
		НоваяСтрока.Касса = ЕдинственнаяКасса;
		НоваяСтрока.Сумма = ОстатокВКассе;
		КассыСуммаПриИзмененииСервер(
			НоваяСтрока.Сумма,
			НоваяСтрока.Касса,
			,
			НоваяСтрока.СуммаРегл,
			Объект.ТипОперации, 
			ВалютаРегламентированногоУчета,
			Объект.Дата
		);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	
	ПараметрыЗаписи.Вставить("ТипОперации", Объект.ТипОперации);
	Оповестить("Запись_ВводОстатков", ПараметрыЗаписи, Объект.Ссылка);
	
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	Элементы.ГруппаКомментарий.Картинка = ОбщегоНазначенияУТ.ПолучитьКартинкуКомментария(Объект.Комментарий);
КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	
	Элементы.ГруппаКомментарий.Картинка = ОбщегоНазначенияУТ.ПолучитьКартинкуКомментария(Объект.Комментарий);
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ТАБЛИЦЫ ФОРМЫ КАССЫ

&НаКлиенте
Процедура КассыПриОкончанииРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования)
	
	Если НоваяСтрока И НЕ ИспользуетсяНесколькоКасс Тогда
	
		Элемент.ТекущиеДанные.Касса = ЕдинственнаяКасса;
	
	КонецЕсли; 
	
КонецПроцедуры

&НаКлиенте
Процедура КассыКассаПриИзменении(Элемент)
	
	СтрокаКассаПриИзменении();

КонецПроцедуры

&НаКлиенте
Процедура КассыСуммаПриИзменении(Элемент)
	
	СтрокаКассаПриИзменении();
	
КонецПроцедуры

&НаКлиенте
Процедура СтрокаКассаПриИзменении()
	
	СтрокаТаблЧасти = Элементы.Кассы.ТекущиеДанные;
	КассыСуммаПриИзмененииСервер(
		СтрокаТаблЧасти.Сумма,
		СтрокаТаблЧасти.Касса,
		,
		СтрокаТаблЧасти.СуммаРегл,
		Объект.ТипОперации, 
		ВалютаРегламентированногоУчета,
		Объект.Дата
	);
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ТАБЛИЦЫ ФОРМЫ КАССЫККМ

&НаКлиенте
Процедура КассыККМКассаККМПриИзменении(Элемент)

	СтрокаКассаККМПриИзменении();

КонецПроцедуры

&НаКлиенте
Процедура КассыККМСуммаПриИзменении(Элемент)

	СтрокаКассаККМПриИзменении();
	
КонецПроцедуры

&НаКлиенте
Процедура СтрокаКассаККМПриИзменении()
	
	СтрокаТаблЧасти = Элементы.КассыККМ.ТекущиеДанные;
	КассыСуммаПриИзмененииСервер(
		СтрокаТаблЧасти.Сумма,
		,
		СтрокаТаблЧасти.КассаККМ,
		СтрокаТаблЧасти.СуммаРегл,
		Объект.ТипОперации,
		ВалютаРегламентированногоУчета,
		Объект.Дата
	);
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

&НаСервере
Процедура УстановитьВидимость()
	
	Элементы.ГруппаОднаКасса.Видимость = Не ИспользуетсяНесколькоКасс
		И Объект.ТипОперации = Перечисления.ТипыОперацийВводаОстатков.ОстаткиВКассах;
	Элементы.КомментарийОднаКасса.Видимость = Элементы.ГруппаОднаКасса.Видимость;
	Элементы.ГруппаКассы.Видимость		= 
		Объект.ТипОперации = Перечисления.ТипыОперацийВводаОстатков.ОстаткиВКассах
		И ИспользуетсяНесколькоКасс;
	Элементы.ГруппаКассыККМ.Видимость 	= 
		Объект.ТипОперации = Перечисления.ТипыОперацийВводаОстатков.ОстаткиВАвтономныхКассахККМКОформлениюОтчетовОРозничныхПродажах
		Или Объект.ТипОперации = Перечисления.ТипыОперацийВводаОстатков.ОстаткиВАвтономныхКассахККМПоРозничнойВыручке;
	Элементы.ГруппаКомментарий.Видимость = ИспользуетсяНесколькоКасс;
	Для Каждого Страница Из Элементы.ГруппаТипыОпераций.ПодчиненныеЭлементы Цикл
		Если Страница.Видимость И Страница.Имя <> "ГруппаКомментарий" Тогда
			Страница.Заголовок = Объект.ТипОперации;
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

&НаСервереБезКонтекста
Процедура КассыСуммаПриИзмененииСервер(Сумма, Касса = Неопределено, КассаККМ = Неопределено, СуммаРегл, ИмяОперации, ВалютаРегламентированногоУчета, ДатаДокумента)
	
	Если ИмяОперации = Перечисления.ТипыОперацийВводаОстатков.ОстаткиВКассах Тогда
		Валюта = Справочники.Кассы.ПолучитьРеквизитыКассы(Касса).Валюта;
	ИначеЕсли ИмяОперации = Перечисления.ТипыОперацийВводаОстатков.ОстаткиВАвтономныхКассахККМКОформлениюОтчетовОРозничныхПродажах
			  ИЛИ ИмяОперации = Перечисления.ТипыОперацийВводаОстатков.ОстаткиВАвтономныхКассахККМПоРозничнойВыручке Тогда	
		Валюта = Справочники.КассыККМ.РеквизитыКассыККМ(КассаККМ).Валюта;
	КонецЕсли;
	Если Валюта = ВалютаРегламентированногоУчета Тогда
		СуммаРегл = Сумма;
	Иначе
		КоэффициентПересчета = РаботаСКурсамиВалютУТ.ПолучитьКоэффициентПересчетаИзВалютыВВалюту(Валюта, ВалютаРегламентированногоУчета, ДатаДокумента);
		СуммаРегл = Окр(Сумма * КоэффициентПересчета, 2, 1);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура КомментарийОднаКассаНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	ОбщегоНазначенияКлиент.ОткрытьФормуРедактированияКомментария(Элемент.ТекстРедактирования, Объект.Комментарий, Модифицированность);
	
КонецПроцедуры

Функция ВозможностьОткрытияДокументаОтУстановленныхФО()
	
	Результат = Истина;
	
	Касса = ЗначениеНастроекПовтИсп.ПолучитьКассуОрганизацииПоУмолчанию();
	Если Не ЗначениеЗаполнено(Касса) Тогда
		
		Запрос = Новый Запрос(
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ ПЕРВЫЕ 2
		|	Кассы.Ссылка
		|ИЗ
		|	Справочник.Кассы КАК Кассы");
		
		Если Запрос.Выполнить().Выбрать().Количество() = 2 Тогда
			ВызватьИсключение НСтр("ru = 'Не удалось заполнить поле ""Касса"". В информационной базе введено несколько касс,
			|Включите функциональную опцию ""Использовать несколько касс""!'");
		Иначе
			ВызватьИсключение НСтр("ru = 'Не удалось заполнить поле ""Касса"". Возможно, в информационной базе не введено ни одной кассы!'");
		КонецЕсли;
		Результат = Ложь;
		
	КонецЕсли;
	
    Возврат Результат;
	
КонецФункции	