////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// Обработчик подсистемы "Внешние обработки"
	ДополнительныеОтчетыИОбработки.ПриСозданииНаСервере(ЭтаФорма);
	Документы.ВводОстатков.ПолучитьСписокТиповОпераций(СписокДоступныхТиповОпераций);
	
	ИнициализироватьТаблицуПоясненийКОперациям();
	ОтборОрганизацияПриИзмененииСервер();
	
	ИспользоватьНесколькоКасс = ПолучитьФункциональнуюОпцию("ИспользоватьНесколькоКасс");
	ИспользоватьНесколькоРасчетныхСчетов = ПолучитьФункциональнуюОпцию("ИспользоватьНесколькоРасчетныхСчетов");
	ИспользоватьРозничныеПродажи = ПолучитьФункциональнуюОпцию("ИспользоватьРозничныеПродажи");
	ИспользоватьНесколькоВалют = ПолучитьФункциональнуюОпцию("ИспользоватьНесколькоВалют");
	
	ЕдинственнаяВалюта = ДоходыИРасходыСервер.ПолучитьВалютуУправленческогоУчета();
	ЕдинственнаяКасса = ЗначениеНастроекПовтИсп.ПолучитьКассуОрганизацииПоУмолчанию();
	ЕдинственныйРасчетныйСчет = ЗначениеНастроекПовтИсп.ПолучитьБанковскийСчетОрганизацииПоУмолчанию();
	
	КомандаКассы = Команды.Найти("ОткрытьФормуСпискаКассы");
	КомандаРасчетныеСчета = Команды.Найти("ОткрытьФормуСпискаБанковскиеСчета");
	КомандаВалюты = Команды.Найти("ОткрытьФормуСпискаВалют");
	
	Если ИспользоватьНесколькоКасс Тогда
		КомандаКассы.Заголовок = НСтр("ru='Кассы'");
	Иначе
		КомандаКассы.Заголовок = НСтр("ru='Касса'");
	КонецЕсли;
	
	Если ИспользоватьНесколькоРасчетныхСчетов Тогда
		КомандаРасчетныеСчета.Заголовок = НСтр("ru='Банковские счета'");
	Иначе
		КомандаРасчетныеСчета.Заголовок = НСтр("ru='Банковский счет'");
	КонецЕсли;
	
	Если ИспользоватьНесколькоВалют Тогда
		КомандаВалюты.Заголовок = НСтр("ru='Валюты'");
	Иначе
		КомандаВалюты.Заголовок = НСтр("ru='Валюта'");
	КонецЕсли;
	
	
	Если НЕ ИспользоватьРозничныеПродажи Тогда
		Элементы.ДенежныеСредстваКассыККМ.Видимость = Ложь;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПриЗагрузкеДанныхИзНастроекНаСервере(Настройки)
	
	ОтборОрганизацияПриИзмененииСервер();
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ ШАПКИ ФОРМЫ

&НаКлиенте
Процедура ОтборОрганизацияПриИзменении(Элемент)
	
	ТекущийРаздел = Элементы.ДеревоОпераций.ТекущиеДанные.Раздел;
	ТекущаяОперация = Элементы.ДеревоОпераций.ТекущиеДанные.ОперацияВводаОстатков;
	ОтборОрганизацияПриИзмененииСервер();
	РазвернутьДеревоОпераций();
	
КонецПроцедуры

&НаСервере
Процедура ОтборОрганизацияПриИзмененииСервер()
	
	Если НЕ ПолучитьФункциональнуюОпцию("ИспользоватьНесколькоОрганизаций") Тогда
		ОтборОрганизация = Справочники.Организации.ПустаяСсылка();
		Элементы.ОтборОрганизация.Видимость = Ложь;
	КонецЕсли;
	ОтборыСписковКлиентСервер.ИзменитьЭлементОтбораСписка(Список, "Организация", ОтборОрганизация, ЗначениеЗаполнено(ОтборОрганизация));
	ОбновитьСтатусыТиповОпераций();
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ КОМАНД ФОРМЫ

&НаКлиенте
Процедура ОткрытьФормуСпискаВалют(Команда)
	
	Если ИспользоватьНесколькоВалют Тогда
		
		Форма = ПолучитьФорму("Справочник.Валюты.Форма.ФормаСписка", , ,"ВводОстатков");
		Форма.Открыть();
		
	Иначе
		
		ОткрытьФорму("Справочник.Валюты.ФормаОбъекта",
			Новый Структура("Ключ",ЕдинственнаяВалюта),
			ЭтаФорма);
		
	КонецЕсли;
	
	
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьФормуСпискаБанковскиеСчета(Команда)
	
	Если ИспользоватьНесколькоРасчетныхСчетов Тогда
		
		ПараметрыФормы = Новый Структура;
		Если ЗначениеЗаполнено(ОтборОрганизация) Тогда
			Отбор = Новый Структура;
			Отбор.Вставить("Владелец", ОтборОрганизация);
			ПараметрыФормы.Вставить("Отбор", Отбор);
		КонецЕсли;

		Форма = ПолучитьФорму("Справочник.БанковскиеСчетаОрганизаций.Форма.ФормаСписка", ПараметрыФормы, ,"ВводОстатков");
		Форма.Открыть();
		
	Иначе
		
		ОткрытьФорму("Справочник.БанковскиеСчетаОрганизаций.ФормаОбъекта",
			Новый Структура("Ключ",ЕдинственныйРасчетныйСчет),
			ЭтаФорма);
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьФормуСпискаКассы(Команда)
	
	Если ИспользоватьНесколькоКасс Тогда
		
		ПараметрыФормы = Новый Структура;
		Если ЗначениеЗаполнено(ОтборОрганизация) Тогда
			Отбор = Новый Структура;
			Отбор.Вставить("Владелец", ОтборОрганизация);
			ПараметрыФормы.Вставить("Отбор", Отбор);
		КонецЕсли;
		
		ОткрытьФорму("Справочник.Кассы.Форма.ФормаСписка", ПараметрыФормы, , "ВводОстатков");
		
	Иначе
		
		ОткрытьФорму("Справочник.Кассы.ФормаОбъекта",
			Новый Структура("Ключ",ЕдинственнаяКасса),
			ЭтаФорма);
		
	КонецЕсли
	
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьФормуСпискаКассыККМ(Команда)

	ПараметрыФормы = Новый Структура;
	Если ЗначениеЗаполнено(ОтборОрганизация) Тогда
		Отбор = Новый Структура;
		Отбор.Вставить("Владелец", ОтборОрганизация);
		ПараметрыФормы.Вставить("Отбор", Отбор);
	КонецЕсли;

	ОткрытьФорму("Справочник.КассыККМ.Форма.ФормаСписка", ПараметрыФормы, ,"ВводОстатков");
	
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьФормуСпискаПартнеры(Команда)
	
	ОткрытьФорму("Справочник.Партнеры.Форма.ФормаСписка", , ,"ВводОстатков");
	
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьФормуСпискаПодразделения(Команда)

	ОткрытьФорму("Справочник.СтруктураПредприятия.Форма.ФормаСписка", , ,"ВводОстатков");

КонецПроцедуры

&НаКлиенте
Процедура ОткрытьФормуСпискаФизическиеЛица(Команда)

	ОткрытьФорму("Справочник.ФизическиеЛица.Форма.ФормаСписка", , ,"ВводОстатков");

КонецПроцедуры

&НаКлиенте
Процедура ОткрытьФормуСпискаСоглашенияСКлиентами(Команда)

	ОткрытьФорму("Справочник.СоглашенияСКлиентами.Форма.ФормаСписка", , ,"ВводОстатков");

КонецПроцедуры

&НаКлиенте
Процедура ОткрытьФормуСпискаСоглашенияСПоставщиками(Команда)

	ОткрытьФорму("Справочник.СоглашенияСПоставщиками.Форма.ФормаСписка", , ,"ВводОстатков");

КонецПроцедуры

&НаКлиенте
Процедура ОткрытьФормуСпискаСклады(Команда)

	ОткрытьФорму("Справочник.Склады.Форма.ФормаСписка", , ,"ВводОстатков");

КонецПроцедуры

&НаКлиенте
Процедура ОткрытьФормуСпискаНоменклатура(Команда)

	ОткрытьФорму("Справочник.Номенклатура.Форма.ФормаСписка", , ,"ВводОстатков");

КонецПроцедуры

&НаКлиенте
Процедура ОткрытьФормуСпискаДоговорыЭквайринга(Команда)

	ОткрытьФорму("Справочник.ДоговорыЭквайринга.Форма.ФормаСписка", , ,"ВводОстатков");

КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

&НаКлиенте
Процедура РазвернутьДеревоОпераций()
	
	АктивнаяСтрока = Неопределено;
	КоллекцияЭлементовДерева=ДеревоОпераций.ПолучитьЭлементы();
	Для Каждого Строка Из КоллекцияЭлементовДерева Цикл
		ИдентификаторСтроки=Строка.ПолучитьИдентификатор();
		Если Строка.Раздел = ТекущийРаздел И Строка.ОперацияВводаОстатков = ТекущаяОперация Тогда
			АктивнаяСтрока = ИдентификаторСтроки;
		КонецЕсли;
		Элементы.ДеревоОпераций.Развернуть(ИдентификаторСтроки, Истина);
		ПодчиненныеСтроки = Строка.ПолучитьЭлементы();
		Для Каждого Элемент Из ПодчиненныеСтроки Цикл
			ИдентификаторСтроки=Элемент.ПолучитьИдентификатор();
			Если Элемент.Раздел = ТекущийРаздел И Элемент.ОперацияВводаОстатков = ТекущаяОперация Тогда
				АктивнаяСтрока = ИдентификаторСтроки;
			КонецЕсли;
		КонецЦикла;
	КонецЦикла;
	
	Если АктивнаяСтрока <> Неопределено Тогда
		Элементы.ДеревоОпераций.ТекущаяСтрока = АктивнаяСтрока;
	Иначе
		Элементы.ДеревоОпераций.ТекущаяСтрока = ИдентификаторСтроки;
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если ИмяСобытия = НСтр("ru='Запись_ВводОстатков'") Тогда
		Если Параметр.Свойство("ТипОперации") Тогда
			ОбновитьСтатусыТиповОпераций(Параметр.ТипОперации);
		Иначе
			ОбновитьСтатусыТиповОпераций();
		КонецЕсли;
		Элементы.Список.ТекущаяСтрока = Источник;
	КонецЕсли;
	РазвернутьДеревоОпераций();
	
КонецПроцедуры

&НаСервере
Процедура ОбновитьСтатусыТиповОпераций(ТипОперации = Неопределено)
	
	Запрос = Новый Запрос;
	Запрос.Текст =
		"ВЫБРАТЬ
		|	ВводОстатков.Ссылка
		|ИЗ
		|	Документ.ВводОстатков КАК ВводОстатков
		|ГДЕ
		|	(ВводОстатков.Организация = &Организация ИЛИ &ПоВсемОрг)
		|	И
		|	ВводОстатков.ТипОперации В (&СписокДоступныхТиповОпераций)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ПеречислениеТипыОперацийВводаОстатков.Ссылка КАК ОперацияВводаОстатков,
		|	ЕСТЬNULL(ВводОстатков.КоличДокументов, 0) КАК Количество,
		|	ВЫБОР
		|		КОГДА ПеречислениеТипыОперацийВводаОстатков.Ссылка В (ЗНАЧЕНИЕ(Перечисление.ТипыОперацийВводаОстатков.ОстаткиВКассах), ЗНАЧЕНИЕ(Перечисление.ТипыОперацийВводаОстатков.ОстаткиВАвтономныхКассахККМКОформлениюОтчетовОРозничныхПродажах), ЗНАЧЕНИЕ(Перечисление.ТипыОперацийВводаОстатков.ОстаткиВАвтономныхКассахККМПоРозничнойВыручке), ЗНАЧЕНИЕ(Перечисление.ТипыОперацийВводаОстатков.ОстаткиНаБанковскихСчетах))
		|			ТОГДА ""Денежные средства""
		|		КОГДА ПеречислениеТипыОперацийВводаОстатков.Ссылка В (ЗНАЧЕНИЕ(Перечисление.ТипыОперацийВводаОстатков.ОстаткиЗадолженностиПодотчетниковПоБезналичнымРасчетам), ЗНАЧЕНИЕ(Перечисление.ТипыОперацийВводаОстатков.ОстаткиЗадолженностиПодотчетниковПоНаличнымРасчетам), ЗНАЧЕНИЕ(Перечисление.ТипыОперацийВводаОстатков.ПерерасходыПодотчетныхСредств))
		|			ТОГДА ""Подотчетные лица""
		|		КОГДА ПеречислениеТипыОперацийВводаОстатков.Ссылка В (ЗНАЧЕНИЕ(Перечисление.ТипыОперацийВводаОстатков.ОстаткиЗадолженностиКлиентов), ЗНАЧЕНИЕ(Перечисление.ТипыОперацийВводаОстатков.ОстаткиПоАвансамКлиентов), ЗНАЧЕНИЕ(Перечисление.ТипыОперацийВводаОстатков.ОстаткиЗадолженностиПередПоставщиками), ЗНАЧЕНИЕ(Перечисление.ТипыОперацийВводаОстатков.ОстаткиПоАвансамПоставщикам))
		|			ТОГДА ""Расчеты с партнерами""
		|		КОГДА ПеречислениеТипыОперацийВводаОстатков.Ссылка В (ЗНАЧЕНИЕ(Перечисление.ТипыОперацийВводаОстатков.ОстаткиСобственныхТоваров), ЗНАЧЕНИЕ(Перечисление.ТипыОперацийВводаОстатков.ОстаткиСобственныхТоваровНаАдресномСкладе), ЗНАЧЕНИЕ(Перечисление.ТипыОперацийВводаОстатков.ОстаткиТоваровПолученныхНаКомиссию), ЗНАЧЕНИЕ(Перечисление.ТипыОперацийВводаОстатков.ОстаткиТоваровПолученныхНаКомиссиюНаАдресномСкладе), ЗНАЧЕНИЕ(Перечисление.ТипыОперацийВводаОстатков.ОстаткиТоваровПереданныхНаКомиссию), ЗНАЧЕНИЕ(Перечисление.ТипыОперацийВводаОстатков.ОстаткиВозвратнойТарыПереданнойКлиентам), ЗНАЧЕНИЕ(Перечисление.ТипыОперацийВводаОстатков.ОстаткиВозвратнойТарыПринятойОтПоставщиков), ЗНАЧЕНИЕ(Перечисление.ТипыОперацийВводаОстатков.ОстаткиВозвратнойТарыПринятойОтПоставщиковНаАдресномСкладе))
		|			ТОГДА ""Товары""
		|		КОГДА ПеречислениеТипыОперацийВводаОстатков.Ссылка В (ЗНАЧЕНИЕ(Перечисление.ТипыОперацийВводаОстатков.ОстаткиРасчетовМеждуОрганизациямиПоРеализациям), ЗНАЧЕНИЕ(Перечисление.ТипыОперацийВводаОстатков.ОстаткиРасчетовМеждуОрганизациямиПоАвансам))
		|			ТОГДА ""Расчеты между организациями""
		|		КОГДА ПеречислениеТипыОперацийВводаОстатков.Ссылка В (ЗНАЧЕНИЕ(Перечисление.ТипыОперацийВводаОстатков.СторноОтчетовПоЭквайрингу))
		|			ТОГДА ""Эквайринговые операции""
		|	КОНЕЦ КАК Раздел
		|ИЗ
		|	Перечисление.ТипыОперацийВводаОстатков КАК ПеречислениеТипыОперацийВводаОстатков
		|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|			КОЛИЧЕСТВО(ВводОстатков.Ссылка) КАК КоличДокументов,
		|			ВводОстатков.ТипОперации КАК ТипОперации
		|		ИЗ
		|			Документ.ВводОстатков КАК ВводОстатков
		|		ГДЕ
		|		(ВводОстатков.ТипОперации = &ТипОперации ИЛИ &ПоВсемТипам)
		|		И
		|		(ВводОстатков.Организация = &Организация ИЛИ &ПоВсемОрг)
		|		СГРУППИРОВАТЬ ПО
		|			ВводОстатков.ТипОперации) КАК ВводОстатков
		|		ПО ПеречислениеТипыОперацийВводаОстатков.Ссылка = ВводОстатков.ТипОперации
		|ГДЕ
		|	ПеречислениеТипыОперацийВводаОстатков.Ссылка В (&СписокДоступныхТиповОпераций)
		|ИТОГИ ПО
		|	Раздел";

	Если ТипОперации = Неопределено Тогда 
		Запрос.УстановитьПараметр("ТипОперации",Неопределено);
		Запрос.УстановитьПараметр("ПоВсемТипам",Истина);
	Иначе
		Запрос.УстановитьПараметр("ТипОперации",ТипОперации);
		Запрос.УстановитьПараметр("ПоВсемТипам",Ложь);
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ОтборОрганизация) Тогда 
		Запрос.УстановитьПараметр("Организация",ОтборОрганизация);
		Запрос.УстановитьПараметр("ПоВсемОрг",Ложь);
	Иначе
		Запрос.УстановитьПараметр("Организация",Неопределено);
		Запрос.УстановитьПараметр("ПоВсемОрг",Истина);
	КонецЕсли;
	
	Запрос.УстановитьПараметр("СписокДоступныхТиповОпераций",СписокДоступныхТиповОпераций);
	
	РезультатЗапроса = Запрос.ВыполнитьПакет();
	ВсегоДокументов = РезультатЗапроса[0].Выгрузить().Количество();
	
	Если ТипОперации = Неопределено Тогда
		
		Дерево = ДеревоОпераций;
		Дерево.ПолучитьЭлементы().Очистить();
		
		СтрокаВсего = Дерево.ПолучитьЭлементы().Добавить();
		СтрокаВсего.ОперацияВводаОстатков = Перечисления.ТипыОперацийВводаОстатков.ПустаяСсылка();
		СтрокаВсего.Количество = ВсегоДокументов;
		ПредставлениеОперации = НСтр("ru='Все документы (%ВсегоДокументов%)'");
		ПредставлениеОперации = СтрЗаменить(ПредставлениеОперации, "%ВсегоДокументов%", ВсегоДокументов);
		СтрокаВсего.ПредставлениеОперации = ПредставлениеОперации;
		СтрокаВсего.СтатусОперации = 2;
		
		ВыборкаРазделы = РезультатЗапроса[1].Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);

		Пока ВыборкаРазделы.Следующий() Цикл
			СтрокаГруппы = Дерево.ПолучитьЭлементы().Добавить();
			ЗаполнитьЗначенияСвойств(СтрокаГруппы, ВыборкаРазделы);
			СтрокаГруппы.СтатусОперации = 2;
			ВыборкаДетальныеЗаписи = ВыборкаРазделы.Выбрать();

			Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
				СтрокаОперация = СтрокаГруппы.ПолучитьЭлементы().Добавить();
				СтрокаОперация.ОперацияВводаОстатков = ВыборкаДетальныеЗаписи.ОперацияВводаОстатков;
				СтрокаОперация.Количество = ВыборкаДетальныеЗаписи.Количество;
				СтрокаОперация.ПредставлениеОперации = Строка(ВыборкаДетальныеЗаписи.ОперацияВводаОстатков);
				СтрокаОперация.СтатусОперации = 1;
				Если ВыборкаДетальныеЗаписи.Количество > 0 Тогда
					СтрокаОперация.ПредставлениеОперации = СтрокаОперация.ПредставлениеОперации + " ("+ВыборкаДетальныеЗаписи.Количество+")";
					СтрокаОперация.СтатусОперации = 0;
				КонецЕсли;
			КонецЦикла;
		КонецЦикла;
		
	Иначе

		Дерево = РеквизитФормыВЗначение("ДеревоОпераций");
		ВыборкаРазделы = РезультатЗапроса[1].Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);

		Пока ВыборкаРазделы.Следующий() Цикл
			ВыборкаДетальныеЗаписи = ВыборкаРазделы.Выбрать();
			Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
				Если ВыборкаДетальныеЗаписи.ОперацияВводаОстатков = ТипОперации Тогда
					СтрокаОперация = Дерево.Строки.Найти(ВыборкаДетальныеЗаписи.ОперацияВводаОстатков,"ОперацияВводаОстатков", Истина);
					Если СтрокаОперация <> Неопределено Тогда
						СтрокаОперация.Количество = ВыборкаДетальныеЗаписи.Количество;
						СтрокаОперация.ПредставлениеОперации = ВыборкаДетальныеЗаписи.ОперацияВводаОстатков;
						СтрокаОперация.СтатусОперации = 1;
						Если ВыборкаДетальныеЗаписи.Количество > 0 Тогда
							СтрокаОперация.ПредставлениеОперации = СтрокаОперация.ПредставлениеОперации + " ("+ВыборкаДетальныеЗаписи.Количество+")";
							СтрокаОперация.СтатусОперации = 0;
						КонецЕсли;
					КонецЕсли;
				КонецЕсли;
			КонецЦикла;
		КонецЦикла;
		ПараметрыОтбора = Новый Структура;
		ПараметрыОтбора.Вставить("Раздел", "");
		ПараметрыОтбора.Вставить("ОперацияВводаОстатков", Перечисления.ТипыОперацийВводаОстатков.ПустаяСсылка());
		НайденныеСтроки = Дерево.Строки.НайтиСтроки(ПараметрыОтбора);
		Если НайденныеСтроки[0] <> Неопределено Тогда
			СтрокаВсего = НайденныеСтроки[0];
			СтрокаВсего.Количество = ВсегоДокументов;
			ПредставлениеОперации = НСтр("ru='Все документы (%ВсегоДокументов%)'");
			ПредставлениеОперации = СтрЗаменить(ПредставлениеОперации, "%ВсегоДокументов%", ВсегоДокументов);
			СтрокаВсего.ПредставлениеОперации = ПредставлениеОперации;
		КонецЕсли;

		ЗначениеВРеквизитФормы(Дерево, "ДеревоОпераций");
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ДеревоОперацийПриАктивизацииСтроки(Элемент)
	
	Если ЗначениеЗаполнено(Элемент.ТекущиеДанные.ОперацияВводаОстатков) Тогда
		ОтборПоТипамОпераций.Очистить();
		ОтборПоТипамОпераций.Добавить(Элемент.ТекущиеДанные.ОперацияВводаОстатков);
		ИзменитьЭлементОтбораГруппы();
	Иначе
		Если Элемент.ТекущиеДанные.Раздел = "" Тогда
			ОтборПоТипамОпераций.Очистить();
			ОтборПоТипамОпераций.ЗагрузитьЗначения(СписокДоступныхТиповОпераций.ВыгрузитьЗначения());
			ИзменитьЭлементОтбораГруппы();
		Иначе	
			УстановитьОтборПоТипамОперацийРаздела(Элемент.ТекущиеДанные.Раздел);
			ИзменитьЭлементОтбораГруппы();
		КонецЕсли;
	КонецЕсли;
	ТекущийРаздел = Элементы.ДеревоОпераций.ТекущиеДанные.Раздел;
	ТекущаяОперация = Элементы.ДеревоОпераций.ТекущиеДанные.ОперацияВводаОстатков;
	УстановитьТекстПоясненияИДополнительныеСсылки();
	
КонецПроцедуры

&НаСервере
Процедура ИзменитьЭлементОтбораГруппы()
	
	ГруппаЭлементовОтбора = ОтборыСписковКлиентСервер.СоздатьГруппуЭлементовОтбора(Список.Отбор.Элементы, "ТипОперации", ТипГруппыЭлементовОтбораКомпоновкиДанных.ГруппаИли);
	ОтборыСписковКлиентСервер.ИзменитьЭлементОтбораГруппыСписка(ГруппаЭлементовОтбора, "ТипОперации", ОтборПоТипамОпераций , Истина, ВидСравненияКомпоновкиДанных.ВСписке)
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьТекстПоясненияИДополнительныеСсылки()
	
	УстановитьТекстПояснения(Элементы.ДеревоОпераций.ТекущиеДанные.Раздел, Элементы.ДеревоОпераций.ТекущиеДанные.ОперацияВводаОстатков);
	ВидимаяСтраница = ОпределитьВидимуюСтраницуСсылок(Элементы.ДеревоОпераций.ТекущиеДанные.Раздел, Элементы.ДеревоОпераций.ТекущиеДанные.ОперацияВводаОстатков);
	Если ВидимаяСтраница = НСтр("ru='ГруппаВсе'") Тогда
		Элементы.ГруппаДокументы.ТекущаяСтраница = Элементы[ВидимаяСтраница];
	Иначе
		Элементы.ГруппаДокументы.ТекущаяСтраница = Элементы[НСтр("ru='ГруппаПоТипам'")];
		Элементы.ГруппаШапка.ТекущаяСтраница = Элементы[ВидимаяСтраница];
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьТекстПояснения(Раздел, Операция)
	
	Отбор = Новый Структура;
	Отбор.Вставить("Раздел", Раздел);
	Отбор.Вставить("ОперацияВводаОстатков", Операция);
	
	МассивСтрок = ТЗТекстПояснений.НайтиСтроки(Отбор);
	Если МассивСтрок.Количество()>0 Тогда
		ТекущийТекстПояснения = МассивСтрок[0].Пояснение;
	Иначе
		ТекущийТекстПояснения = "";
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ИнициализироватьТаблицуПоясненийКОперациям()
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
		|	ПеречислениеТипыОперацийВводаОстатков.Ссылка КАК ОперацияВводаОстатков,
		|	ВЫБОР
		|		КОГДА ПеречислениеТипыОперацийВводаОстатков.Ссылка В (
		|				ЗНАЧЕНИЕ(Перечисление.ТипыОперацийВводаОстатков.ОстаткиВКассах),
		|				ЗНАЧЕНИЕ(Перечисление.ТипыОперацийВводаОстатков.ОстаткиВАвтономныхКассахККМКОформлениюОтчетовОРозничныхПродажах),
		|				ЗНАЧЕНИЕ(Перечисление.ТипыОперацийВводаОстатков.ОстаткиВАвтономныхКассахККМПоРозничнойВыручке),
		|				ЗНАЧЕНИЕ(Перечисление.ТипыОперацийВводаОстатков.ОстаткиНаБанковскихСчетах))
		|			ТОГДА &ЗаголовокДС
		|		КОГДА ПеречислениеТипыОперацийВводаОстатков.Ссылка В (
		|				ЗНАЧЕНИЕ(Перечисление.ТипыОперацийВводаОстатков.ОстаткиЗадолженностиПодотчетниковПоБезналичнымРасчетам),
		|				ЗНАЧЕНИЕ(Перечисление.ТипыОперацийВводаОстатков.ОстаткиЗадолженностиПодотчетниковПоНаличнымРасчетам),
		|				ЗНАЧЕНИЕ(Перечисление.ТипыОперацийВводаОстатков.ПерерасходыПодотчетныхСредств))
		|			ТОГДА &ЗаголовокПодотчетники
		|		КОГДА ПеречислениеТипыОперацийВводаОстатков.Ссылка В (
		|				ЗНАЧЕНИЕ(Перечисление.ТипыОперацийВводаОстатков.ОстаткиЗадолженностиКлиентов),
		|				ЗНАЧЕНИЕ(Перечисление.ТипыОперацийВводаОстатков.ОстаткиПоАвансамКлиентов),
		|				ЗНАЧЕНИЕ(Перечисление.ТипыОперацийВводаОстатков.ОстаткиЗадолженностиПередПоставщиками),
		|				ЗНАЧЕНИЕ(Перечисление.ТипыОперацийВводаОстатков.ОстаткиПоАвансамПоставщикам))
		|			ТОГДА &ЗаголовокПартнеры
		|		КОГДА ПеречислениеТипыОперацийВводаОстатков.Ссылка В (
		|				ЗНАЧЕНИЕ(Перечисление.ТипыОперацийВводаОстатков.ОстаткиСобственныхТоваров),
		|				ЗНАЧЕНИЕ(Перечисление.ТипыОперацийВводаОстатков.ОстаткиСобственныхТоваровНаАдресномСкладе),
		|				ЗНАЧЕНИЕ(Перечисление.ТипыОперацийВводаОстатков.ОстаткиТоваровПолученныхНаКомиссию),
		|				ЗНАЧЕНИЕ(Перечисление.ТипыОперацийВводаОстатков.ОстаткиТоваровПолученныхНаКомиссиюНаАдресномСкладе),
		|				ЗНАЧЕНИЕ(Перечисление.ТипыОперацийВводаОстатков.ОстаткиТоваровПереданныхНаКомиссию),
		|				ЗНАЧЕНИЕ(Перечисление.ТипыОперацийВводаОстатков.ОстаткиВозвратнойТарыПереданнойКлиентам),
		|				ЗНАЧЕНИЕ(Перечисление.ТипыОперацийВводаОстатков.ОстаткиВозвратнойТарыПринятойОтПоставщиков),
		|				ЗНАЧЕНИЕ(Перечисление.ТипыОперацийВводаОстатков.ОстаткиВозвратнойТарыПринятойОтПоставщиковНаАдресномСкладе))
		|			ТОГДА &ЗаголовокТовары
		|		КОГДА ПеречислениеТипыОперацийВводаОстатков.Ссылка В (
		|				ЗНАЧЕНИЕ(Перечисление.ТипыОперацийВводаОстатков.ОстаткиРасчетовМеждуОрганизациямиПоРеализациям),
		|				ЗНАЧЕНИЕ(Перечисление.ТипыОперацийВводаОстатков.ОстаткиРасчетовМеждуОрганизациямиПоАвансам))
		|			ТОГДА &ЗаголовокИнтеркампани
		|		КОГДА ПеречислениеТипыОперацийВводаОстатков.Ссылка = ЗНАЧЕНИЕ(Перечисление.ТипыОперацийВводаОстатков.СторноОтчетовПоЭквайрингу)
		|			ТОГДА &ЗаголовокЭквайринг
		|	КОНЕЦ КАК Раздел
		|ИЗ
		|	Перечисление.ТипыОперацийВводаОстатков КАК ПеречислениеТипыОперацийВводаОстатков
		|
		|ИТОГИ ПО Раздел";
		
	ЗаголовокДС = НСтр("ru='Денежные средства'");
	ЗаголовокПодотчетники = НСтр("ru='Подотчетные лица'");
	ЗаголовокПартнеры = НСтр("ru='Расчеты с партнерами'");
	ЗаголовокТовары = НСтр("ru='Товары'");
	ЗаголовокИнтеркампани = НСтр("ru='Расчеты между организациями'");
	ЗаголовокЭквайринг = НСтр("ru='Эквайринговые операции'");
		
	Запрос.УстановитьПараметр("ЗаголовокДС", ЗаголовокДС);
	Запрос.УстановитьПараметр("ЗаголовокПодотчетники", ЗаголовокПодотчетники);
	Запрос.УстановитьПараметр("ЗаголовокПартнеры", ЗаголовокПартнеры);
	Запрос.УстановитьПараметр("ЗаголовокТовары", ЗаголовокТовары);
	Запрос.УстановитьПараметр("ЗаголовокИнтеркампани", ЗаголовокИнтеркампани);
	Запрос.УстановитьПараметр("ЗаголовокЭквайринг", ЗаголовокЭквайринг);
		
	Результат = Запрос.Выполнить();
	
	ВыборкаРазделы = Результат.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);

	Пока ВыборкаРазделы.Следующий() Цикл
		НоваяСтрока = ТЗТекстПояснений.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока,ВыборкаРазделы);
		Если ВыборкаРазделы.Раздел = ЗаголовокДС Тогда
			НоваяСтрока.Пояснение = НСтр("ru='Вводятся остатки наличных и безналичных денежных средств организаций'")
		ИначеЕсли ВыборкаРазделы.Раздел = ЗаголовокПодотчетники Тогда
			НоваяСтрока.Пояснение = НСтр("ru='Вводятся остатки взаиморасчетов организаций с подотчетными лицами'")
		ИначеЕсли ВыборкаРазделы.Раздел = ЗаголовокПартнеры Тогда
			НоваяСтрока.Пояснение = НСтр("ru='Вводятся остатки взаиморасчетов между организациями и партнерами компании (клиентами и поставщиками)'")
		ИначеЕсли ВыборкаРазделы.Раздел = ЗаголовокИнтеркампани Тогда
			НоваяСтрока.Пояснение = НСтр("ru='Вводятся остатки взаиморасчетов между собственными организациями'")
		ИначеЕсли ВыборкаРазделы.Раздел = ЗаголовокТовары Тогда
			НоваяСтрока.Пояснение = НСтр("ru='Вводятся остатки товаров организаций'")
		ИначеЕсли ВыборкаРазделы.Раздел = ЗаголовокЭквайринг Тогда
			НоваяСтрока.Пояснение = НСтр("ru='Вводятся остатки задолженности банков по эквайринговым операциям, проведенным до начала ведения учета'")
		КонецЕсли;
		ВыборкаДетальныеЗаписи = ВыборкаРазделы.Выбрать();
		Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
			НоваяСтрока = ТЗТекстПояснений.Добавить();
			НоваяСтрока.ОперацияВводаОстатков = ВыборкаДетальныеЗаписи.ОперацияВводаОстатков;
			Если ВыборкаДетальныеЗаписи.ОперацияВводаОстатков = Перечисления.ТипыОперацийВводаОстатков.ОстаткиВАвтономныхКассахККМКОформлениюОтчетовОРозничныхПродажах Тогда
				НоваяСтрока.Пояснение = НСтр("ru='Вводятся остатки задолженности автономных касс ККМ по оформлению отчетов о розничных продажах'")
			ИначеЕсли ВыборкаДетальныеЗаписи.ОперацияВводаОстатков = Перечисления.ТипыОперацийВводаОстатков.ОстаткиВАвтономныхКассахККМПоРозничнойВыручке Тогда
				НоваяСтрока.Пояснение = НСтр("ru='Вводятся остатки наличных денежных средств, находящихся в автономных кассах ККМ'")
			ИначеЕсли ВыборкаДетальныеЗаписи.ОперацияВводаОстатков = Перечисления.ТипыОперацийВводаОстатков.ОстаткиВКассах Тогда
				НоваяСтрока.Пояснение = НСтр("ru='Вводятся остатки наличных денежных средств, находящихся в кассах организаций'")
			ИначеЕсли ВыборкаДетальныеЗаписи.ОперацияВводаОстатков = Перечисления.ТипыОперацийВводаОстатков.ОстаткиНаБанковскихСчетах Тогда
				НоваяСтрока.Пояснение = НСтр("ru='Вводятся остатки безналичных денежных средств, находящихся на банковских счетах организаций'")
			ИначеЕсли ВыборкаДетальныеЗаписи.ОперацияВводаОстатков = Перечисления.ТипыОперацийВводаОстатков.ОстаткиЗадолженностиКлиентов Тогда
				НоваяСтрока.Пояснение = НСтр("ru='Вводятся остатки дебиторской задолженности клиентов перед организациями'")
			ИначеЕсли ВыборкаДетальныеЗаписи.ОперацияВводаОстатков = Перечисления.ТипыОперацийВводаОстатков.ОстаткиПоАвансамКлиентов Тогда
				НоваяСтрока.Пояснение = НСтр("ru='Вводятся остатки авансов, полученных от клиентов'")
			ИначеЕсли ВыборкаДетальныеЗаписи.ОперацияВводаОстатков = Перечисления.ТипыОперацийВводаОстатков.ОстаткиЗадолженностиПередПоставщиками Тогда
				НоваяСтрока.Пояснение = НСтр("ru='Вводятся остатки кредиторской задолженности организаций перед поставщиками'")
			ИначеЕсли ВыборкаДетальныеЗаписи.ОперацияВводаОстатков = Перечисления.ТипыОперацийВводаОстатков.ОстаткиПоАвансамПоставщикам Тогда
				НоваяСтрока.Пояснение = НСтр("ru='Вводятся остатки авансов, выданных поставщикам'")
			ИначеЕсли ВыборкаДетальныеЗаписи.ОперацияВводаОстатков = Перечисления.ТипыОперацийВводаОстатков.ОстаткиЗадолженностиПодотчетниковПоБезналичнымРасчетам Тогда
				НоваяСтрока.Пояснение = НСтр("ru='Вводятся остатки задолженности подотчетных лиц по выданным безналичным денежным средствам'")
			ИначеЕсли ВыборкаДетальныеЗаписи.ОперацияВводаОстатков = Перечисления.ТипыОперацийВводаОстатков.ОстаткиЗадолженностиПодотчетниковПоНаличнымРасчетам Тогда
				НоваяСтрока.Пояснение = НСтр("ru='Вводятся остатки задолженности подотчетных лиц по выданным наличным денежным средствам'")
			ИначеЕсли ВыборкаДетальныеЗаписи.ОперацияВводаОстатков = Перечисления.ТипыОперацийВводаОстатков.ПерерасходыПодотчетныхСредств Тогда
				НоваяСтрока.Пояснение = НСтр("ru='Вводятся остатки перерасходов денежных средств по оформленным авансовым отчетам'")
			ИначеЕсли ВыборкаДетальныеЗаписи.ОперацияВводаОстатков = Перечисления.ТипыОперацийВводаОстатков.ОстаткиРасчетовМеждуОрганизациямиПоАвансам Тогда
				НоваяСтрока.Пояснение = НСтр("ru='Вводятся остатки расчетов между организациями по выданным авансам'")
			ИначеЕсли ВыборкаДетальныеЗаписи.ОперацияВводаОстатков = Перечисления.ТипыОперацийВводаОстатков.ОстаткиРасчетовМеждуОрганизациямиПоРеализациям Тогда
				НоваяСтрока.Пояснение = НСтр("ru='Вводятся остатки расчетов между организациями по реализованным товарам и оказанным услугам'")
			ИначеЕсли ВыборкаДетальныеЗаписи.ОперацияВводаОстатков = Перечисления.ТипыОперацийВводаОстатков.ОстаткиСобственныхТоваров Тогда
				НоваяСтрока.Пояснение = НСтр("ru='Вводятся остатки собственных товаров организаций на обычных (не адресных) складах'")
			ИначеЕсли ВыборкаДетальныеЗаписи.ОперацияВводаОстатков = Перечисления.ТипыОперацийВводаОстатков.ОстаткиСобственныхТоваровНаАдресномСкладе Тогда
				НоваяСтрока.Пояснение = НСтр("ru='Вводятся остатки собственных товаров организаций на адресных складах'")
			ИначеЕсли ВыборкаДетальныеЗаписи.ОперацияВводаОстатков = Перечисления.ТипыОперацийВводаОстатков.ОстаткиТоваровПереданныхНаКомиссию Тогда
				НоваяСтрока.Пояснение = НСтр("ru='Вводятся остатки собственных товаров организаций, переданные на комиссию'")
			ИначеЕсли ВыборкаДетальныеЗаписи.ОперацияВводаОстатков = Перечисления.ТипыОперацийВводаОстатков.ОстаткиТоваровПолученныхНаКомиссию Тогда
				НоваяСтрока.Пояснение = НСтр("ru='Вводятся остатки товаров, принятых на комиссию на обычных (не адресных) складах'")
			ИначеЕсли ВыборкаДетальныеЗаписи.ОперацияВводаОстатков = Перечисления.ТипыОперацийВводаОстатков.ОстаткиТоваровПолученныхНаКомиссиюНаАдресномСкладе Тогда
				НоваяСтрока.Пояснение = НСтр("ru='Вводятся остатки товаров, принятых на комиссию на адресных складах'")
			ИначеЕсли ВыборкаДетальныеЗаписи.ОперацияВводаОстатков = Перечисления.ТипыОперацийВводаОстатков.СторноОтчетовПоЭквайрингу Тогда
				НоваяСтрока.Пояснение = НСтр("ru='Вводятся остатки задолженности банков по эквайринговым операциям, проведенным до начала ведения учета'")
			ИначеЕсли ВыборкаДетальныеЗаписи.ОперацияВводаОстатков = Перечисления.ТипыОперацийВводаОстатков.ОстаткиВозвратнойТарыПереданнойКлиентам Тогда
				НоваяСтрока.Пояснение = НСтр("ru='Вводятся остатки возвратной тары, переданной клиентам'")
			ИначеЕсли ВыборкаДетальныеЗаписи.ОперацияВводаОстатков = Перечисления.ТипыОперацийВводаОстатков.ОстаткиВозвратнойТарыПринятойОтПоставщиков Тогда
				НоваяСтрока.Пояснение = НСтр("ru='Вводятся остатки возвратной тары, принятой от поставщиков'")
			ИначеЕсли ВыборкаДетальныеЗаписи.ОперацияВводаОстатков = Перечисления.ТипыОперацийВводаОстатков.ОстаткиВозвратнойТарыПринятойОтПоставщиковНаАдресномСкладе Тогда
				НоваяСтрока.Пояснение = НСтр("ru='Вводятся остатки возвратной тары, принятой от поставщиков на адресных складах'")
			КонецЕсли;
		КонецЦикла;
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Функция ОпределитьВидимуюСтраницуСсылок(Раздел = Неопределено, Операция = Неопределено)

	Если Раздел = НСтр("ru='Денежные средства'") Тогда
			Возврат "ГруппаДенежныеСредства";
	ИначеЕсли Операция = ПредопределенноеЗначение("Перечисление.ТипыОперацийВводаОстатков.ОстаткиВКассах") Тогда
			Возврат "ГруппаКассы";
	ИначеЕсли Операция = ПредопределенноеЗначение("Перечисление.ТипыОперацийВводаОстатков.ОстаткиВАвтономныхКассахККМКОформлениюОтчетовОРозничныхПродажах") 
		ИЛИ Операция = ПредопределенноеЗначение("Перечисление.ТипыОперацийВводаОстатков.ОстаткиВАвтономныхКассахККМПоРозничнойВыручке") Тогда
			Возврат "ГруппаКассыККМ";
	ИначеЕсли Операция = ПредопределенноеЗначение("Перечисление.ТипыОперацийВводаОстатков.ОстаткиНаБанковскихСчетах") Тогда
			Возврат "ГруппаБанковскиеСчета";
	ИначеЕсли Раздел = НСтр("ru='Расчеты с партнерами'")
		ИЛИ Операция = ПредопределенноеЗначение("Перечисление.ТипыОперацийВводаОстатков.ОстаткиЗадолженностиКлиентов")
		ИЛИ Операция = ПредопределенноеЗначение("Перечисление.ТипыОперацийВводаОстатков.ОстаткиЗадолженностиПередПоставщиками")
		ИЛИ Операция = ПредопределенноеЗначение("Перечисление.ТипыОперацийВводаОстатков.ОстаткиПоАвансамКлиентов")
		ИЛИ Операция = ПредопределенноеЗначение("Перечисление.ТипыОперацийВводаОстатков.ОстаткиПоАвансамПоставщикам") Тогда
			Возврат "ГруппаРасчетыСКлиентами";
	ИначеЕсли Раздел = НСтр("ru='Подотчетные лица'")
		ИЛИ Операция = ПредопределенноеЗначение("Перечисление.ТипыОперацийВводаОстатков.ОстаткиЗадолженностиПодотчетниковПоБезналичнымРасчетам")
		ИЛИ Операция = ПредопределенноеЗначение("Перечисление.ТипыОперацийВводаОстатков.ОстаткиЗадолженностиПодотчетниковПоНаличнымРасчетам")
		ИЛИ Операция = ПредопределенноеЗначение("Перечисление.ТипыОперацийВводаОстатков.ПерерасходыПодотчетныхСредств") Тогда
			Возврат "ГруппаПодотчетныеЛица";
	ИначеЕсли Раздел = НСтр("ru='Расчеты между организациями'")
		ИЛИ Операция = ПредопределенноеЗначение("Перечисление.ТипыОперацийВводаОстатков.ОстаткиРасчетовМеждуОрганизациямиПоАвансам")
		ИЛИ Операция = ПредопределенноеЗначение("Перечисление.ТипыОперацийВводаОстатков.ОстаткиРасчетовМеждуОрганизациямиПоРеализациям") Тогда
			Возврат "ГруппаРасчетыМеждуОрганизациями";
	ИначеЕсли Раздел = НСтр("ru='Товары'") Тогда
			Возврат "ГруппаТовары";
	ИначеЕсли Операция = ПредопределенноеЗначение("Перечисление.ТипыОперацийВводаОстатков.ОстаткиСобственныхТоваров")
		ИЛИ Операция = ПредопределенноеЗначение("Перечисление.ТипыОперацийВводаОстатков.ОстаткиСобственныхТоваровНаАдресномСкладе") Тогда
			Возврат "ГруппаСобственныеТовары";
	ИначеЕсли Операция = ПредопределенноеЗначение("Перечисление.ТипыОперацийВводаОстатков.ОстаткиТоваровПереданныхНаКомиссию") Тогда
			Возврат "ГруппаТоварыПереданныеНаКомиссию";
	ИначеЕсли Операция = ПредопределенноеЗначение("Перечисление.ТипыОперацийВводаОстатков.ОстаткиТоваровПолученныхНаКомиссию")
		ИЛИ Операция = ПредопределенноеЗначение("Перечисление.ТипыОперацийВводаОстатков.ОстаткиТоваровПолученныхНаКомиссиюНаАдресномСкладе") Тогда
			Возврат "ГруппаТоварыПолученныеНаКомиссию";
	ИначеЕсли Операция = ПредопределенноеЗначение("Перечисление.ТипыОперацийВводаОстатков.ОстаткиВозвратнойТарыПринятойОтПоставщиков")
		ИЛИ Операция = ПредопределенноеЗначение("Перечисление.ТипыОперацийВводаОстатков.ОстаткиВозвратнойТарыПринятойОтПоставщиковНаАдресномСкладе") Тогда
			Возврат "ГруппаПринятаяТара";
	ИначеЕсли Операция = ПредопределенноеЗначение("Перечисление.ТипыОперацийВводаОстатков.ОстаткиВозвратнойТарыПереданнойКлиентам") Тогда
			Возврат "ГруппаПереданнаяТара";
	ИначеЕсли Раздел = НСтр("ru='Эквайринговые операции'") 
		ИЛИ Операция = ПредопределенноеЗначение("Перечисление.ТипыОперацийВводаОстатков.СторноОтчетовПоЭквайрингу") Тогда
			Возврат "ГруппаЭквайринговыеОперации";
	Иначе 
		Возврат "ГруппаВсе";
	КонецЕсли;
	
КонецФункции

&НаСервере
Процедура УстановитьОтборПоТипамОперацийРаздела(ИмяРаздела)
	
	Дерево = РеквизитФормыВЗначение("ДеревоОпераций");
	ГруппаДерева = Дерево.Строки.Найти(ИмяРаздела, "Раздел");
	МассивТиповОпераций  = Новый Массив;
	Если ГруппаДерева <> Неопределено Тогда
		Для Каждого Строка Из ГруппаДерева.Строки Цикл
			МассивТиповОпераций.Добавить(Строка.ОперацияВводаОстатков);
		КонецЦикла;
	КонецЕсли;
	ОтборПоТипамОпераций.ЗагрузитьЗначения(МассивТиповОпераций);
	
КонецПроцедуры

&НаКлиенте
Процедура СписокПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа)

	Если НЕ Копирование Тогда
		Отказ = Истина;
		ПараметрыФормы = Новый Структура;
		ПараметрыФормы.Вставить("Организация", ОтборОрганизация);
		ПараметрыФормы.Вставить("ОтборПоТипамОпераций", ОтборПоТипамОпераций);
		ОткрытьФорму("Документ.ВводОстатков.ФормаОбъекта", ПараметрыФормы,,);
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ДеревоОперацийПередНачаломИзменения(Элемент, Отказ)
	
	Отказ = Истина;
	
КонецПроцедуры

