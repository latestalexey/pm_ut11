#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда


////////////////////////////////////////////////////////////////////////////////
// ПРОГРАММНЫЙ ИНТЕРФЕЙС

//Имена реквизитов, от значений которых зависят параметры указания серий
//
//	Возвращаемое значение:
//		Строка - имена реквизитов, перечисленные через запятую
//
Функция ИменаРеквизитовДляЗаполненияПараметровУказанияСерий() Экспорт
	ИменаРеквизитов = "Склад";
	
	Возврат ИменаРеквизитов;
КонецФункции

//Возвращает параметры указания серий для товаров, указанных в документе
//
//	Параметры
//			Объект - Структура - структура значений реквизитов объекта, необходимых для заполнения параметров указания серий
//	Возвращаемое значение
//			Тип Структура
//				Состав полей задается в функции ОбработкаТабличнойЧастиКлиентСервер.ПараметрыУказанияСерий
//
Функция ПараметрыУказанияСерий(Объект) Экспорт
	
	ПараметрыУказанияСерий = НоменклатураКлиентСервер.ПараметрыУказанияСерий();
	
	ПараметрыУказанияСерий.ИспользоватьСерииНоменклатуры =
		ПолучитьФункциональнуюОпцию("ИспользоватьСерииНоменклатурыСклад", Новый Структура("Склад",Объект.Склад));
	ПараметрыУказанияСерий.СкладскиеОперации.Добавить(Перечисления.СкладскиеОперации.ВводОстатков);
	ПараметрыУказанияСерий.ЭтоОрдер = Истина;
	ПараметрыУказанияСерий.ИмяПоляПомещение = "Помещение";
	ПараметрыУказанияСерий.ПроцедураЗаполненияСерий = "ВводОстатков";
	
	Возврат ПараметрыУказанияСерий;
	
КонецФункции

// Процедура заполняет статусы указания серий в строках ТЧ товары (комментарий содержит описание подсистемы серий)
//
// Параметры:
//	Объект - ДокументОбъект, ДанныеФормыСтруктура - объект, в котором нужно заполнить статусы. Тип: ДанныеФормыСтруктура или ДокументОбъект
//  ПараметрыУказанияСерий - Структура - структура параметров указания серий, возвращаемая соотвествующей процедурой модуля менеджера документа (обработки)
//  СтрокиТоваровДляОбработки - массив строк товаров, в которых нужно заполнить статусы указания серий,
//									если передано "Неопределено", то статусы заполняются во всех строках товаров
//      
//	СтрокиСерийДляОбработки - массив строк серий, по данным которых нужно заполнить статусы указания серий,
//									если передано "Неопределено", то учитываются все строки серий
//
Процедура ЗаполнитьСтатусыУказанияСерий(Объект,ПараметрыУказанияСерий,СтрокиТоваровДляОбработки,СтрокиСерийДляОбработки) Экспорт
	
	Если (Не ПараметрыУказанияСерий.ИспользоватьСерииНоменклатуры)
		Или (Объект.ТипОперации <>  Перечисления.ТипыОперацийВводаОстатков.ОстаткиСобственныхТоваровНаАдресномСкладе
		И Объект.ТипОперации <> Перечисления.ТипыОперацийВводаОстатков.ОстаткиСобственныхТоваров
		И Объект.ТипОперации <> Перечисления.ТипыОперацийВводаОстатков.ОстаткиТоваровПолученныхНаКомиссиюНаАдресномСкладе
		И Объект.ТипОперации <> Перечисления.ТипыОперацийВводаОстатков.ОстаткиТоваровПолученныхНаКомиссию) Тогда
		
		Если ПолучитьФункциональнуюОпцию("ИспользоватьСерииНоменклатуры") Тогда
			Для Каждого СтрТабл из Объект.Товары Цикл
				СтрТабл.СтатусУказанияСерий = 0;	
			КонецЦикла;
		КонецЕсли;
		
		Возврат;
	КонецЕсли;
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ТаблицаТоваров.Номенклатура,
	|	ТаблицаТоваров.Характеристика,
	|	ТаблицаТоваров.Количество,
	|	ТаблицаТоваров.НомерСтроки,
	|	ТаблицаТоваров.СтатусУказанияСерий
	|ПОМЕСТИТЬ ТаблицаТоваров
	|ИЗ
	|	&ТаблицаТоваров КАК ТаблицаТоваров
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаТоваров.Номенклатура,
	|	ТаблицаТоваров.Характеристика,
	|	СУММА(ТаблицаТоваров.Количество) КАК Количество,
	|	ВЫРАЗИТЬ(ТаблицаТоваров.Номенклатура КАК Справочник.Номенклатура).ВидНоменклатуры КАК ВидНоменклатуры
	|ПОМЕСТИТЬ ТаблицаТоваровДляЗапроса
	|ИЗ
	|	ТаблицаТоваров КАК ТаблицаТоваров
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаТоваров.Номенклатура,
	|	ТаблицаТоваров.Характеристика,
	|	ВЫРАЗИТЬ(ТаблицаТоваров.Номенклатура КАК Справочник.Номенклатура).ВидНоменклатуры
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаСерий.Номенклатура,
	|	ТаблицаСерий.Характеристика,
	|	ТаблицаСерий.Количество
	|ПОМЕСТИТЬ ТаблицаСерий
	|ИЗ
	|	&ТаблицаСерий КАК ТаблицаСерий
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаСерий.Номенклатура,
	|	ТаблицаСерий.Характеристика,
	|	СУММА(ТаблицаСерий.Количество) КАК Количество
	|ПОМЕСТИТЬ ТаблицаСерийДляЗапроса
	|ИЗ
	|	ТаблицаСерий КАК ТаблицаСерий
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаСерий.Номенклатура,
	|	ТаблицаСерий.Характеристика
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаТоваров.НомерСтроки КАК НомерСтроки,
	|	ТаблицаТоваров.СтатусУказанияСерий КАК СтатусУказанияСерийСтарый,
	|	ВЫБОР
	|		КОГДА (НЕ СкладПолитикиУчетаСерий.ПолитикаУчетаСерий ЕСТЬ NULL )
	|				И (&ТипОперации = ЗНАЧЕНИЕ(Перечисление.ТипыОперацийВводаОстатков.ОстаткиСобственныхТоваровНаАдресномСкладе)
	|					ИЛИ &ТипОперации = ЗНАЧЕНИЕ(Перечисление.ТипыОперацийВводаОстатков.ОстаткиСобственныхТоваров)
	|					ИЛИ &ТипОперации = ЗНАЧЕНИЕ(Перечисление.ТипыОперацийВводаОстатков.ОстаткиТоваровПолученныхНаКомиссиюНаАдресномСкладе)
	|					ИЛИ &ТипОперации = ЗНАЧЕНИЕ(Перечисление.ТипыОперацийВводаОстатков.ОстаткиТоваровПолученныхНаКомиссию))
	|			ТОГДА ВЫБОР
	|					КОГДА СкладПолитикиУчетаСерий.ПолитикаУчетаСерий.УказыватьПриПланированииОтгрузки
	|						ТОГДА ВЫБОР
	|								КОГДА ТаблицаТоваровДляЗапроса.Количество = ЕСТЬNULL(ТаблицаСерийДляЗапроса.Количество, 0)
	|										И ТаблицаТоваровДляЗапроса.Количество > 0
	|									ТОГДА 10
	|								ИНАЧЕ 9
	|							КОНЕЦ
	|					КОГДА СкладПолитикиУчетаСерий.ПолитикаУчетаСерий.УказыватьПриПланированииОтбора
	|						ТОГДА ВЫБОР
	|								КОГДА ТаблицаТоваровДляЗапроса.Количество = ЕСТЬNULL(ТаблицаСерийДляЗапроса.Количество, 0)
	|										И ТаблицаТоваровДляЗапроса.Количество > 0
	|									ТОГДА 8
	|								ИНАЧЕ 7
	|							КОНЕЦ
	|					КОГДА СкладПолитикиУчетаСерий.ПолитикаУчетаСерий.УказыватьПоФактуОтбора
	|							И СкладПолитикиУчетаСерий.ПолитикаУчетаСерий.УчитыватьОстаткиСерий
	|						ТОГДА ВЫБОР
	|								КОГДА ТаблицаТоваровДляЗапроса.Количество = ЕСТЬNULL(ТаблицаСерийДляЗапроса.Количество, 0)
	|										И ТаблицаТоваровДляЗапроса.Количество > 0
	|									ТОГДА 4
	|								ИНАЧЕ 3
	|							КОНЕЦ
	|					ИНАЧЕ 0
	|				КОНЕЦ
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК СтатусУказанияСерий
	|ПОМЕСТИТЬ ТаблицаСтатусов
	|ИЗ
	|	ТаблицаТоваровДляЗапроса КАК ТаблицаТоваровДляЗапроса
	|		ЛЕВОЕ СОЕДИНЕНИЕ ТаблицаСерийДляЗапроса КАК ТаблицаСерийДляЗапроса
	|		ПО ТаблицаТоваровДляЗапроса.Номенклатура = ТаблицаСерийДляЗапроса.Номенклатура
	|			И ТаблицаТоваровДляЗапроса.Характеристика = ТаблицаСерийДляЗапроса.Характеристика
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ВидыНоменклатуры.ПолитикиУчетаСерий КАК СкладПолитикиУчетаСерий
	|		ПО (СкладПолитикиУчетаСерий.Склад = &Склад)
	|			И ТаблицаТоваровДляЗапроса.ВидНоменклатуры = СкладПолитикиУчетаСерий.Ссылка
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ТаблицаТоваров КАК ТаблицаТоваров
	|		ПО ТаблицаТоваровДляЗапроса.Номенклатура = ТаблицаТоваров.Номенклатура
	|			И ТаблицаТоваровДляЗапроса.Характеристика = ТаблицаТоваров.Характеристика
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаСтатусов.НомерСтроки КАК НомерСтроки,
	|	ТаблицаСтатусов.СтатусУказанияСерий
	|ИЗ
	|	ТаблицаСтатусов КАК ТаблицаСтатусов
	|ГДЕ
	|	ТаблицаСтатусов.СтатусУказанияСерийСтарый <> ТаблицаСтатусов.СтатусУказанияСерий
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки";
	
	Запрос = Новый Запрос;
	Запрос.Текст = ТекстЗапроса;
	
	Запрос.УстановитьПараметр("Склад", Объект.Склад);
	Запрос.УстановитьПараметр("ТипОперации", Объект.ТипОперации);
	
	Если СтрокиСерийДляОбработки <> Неопределено
		И СтрокиТоваровДляОбработки <> Неопределено Тогда
		Запрос.УстановитьПараметр("ТаблицаТоваров", Объект.Товары.Выгрузить(СтрокиТоваровДляОбработки,"Номенклатура, Характеристика, Количество,НомерСтроки, СтатусУказанияСерий"));
		Запрос.УстановитьПараметр("ТаблицаСерий", Объект.Серии.Выгрузить(СтрокиСерийДляОбработки,"Номенклатура, Характеристика, Количество"));
	Иначе
		Запрос.УстановитьПараметр("ТаблицаТоваров", Объект.Товары.Выгрузить(,"Номенклатура, Характеристика, Количество,НомерСтроки, СтатусУказанияСерий"));
		Запрос.УстановитьПараметр("ТаблицаСерий", Объект.Серии.Выгрузить(,"Номенклатура, Характеристика, Количество"));
	КонецЕсли;
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		СтрТабл = Объект.Товары[Выборка.НомерСтроки - 1];
		
		СтрТабл.СтатусУказанияСерий = Выборка.СтатусУказанияСерий;
	КонецЦикла;
	
КонецПроцедуры

// Функция возвращает текст запроса для отражения документа в регламентированном учете.
//
// Возвращаемое значение:
//	Строка - Текст запроса
//
Функция ТекстОтраженияВРеглУчете() Экспорт
	
	ТекстОстаткиСобственныхТоваров = "
	|ВЫБРАТЬ // Остатки собственных товаров (Дт 41 :: Кт 000)
	|	Операция.Дата КАК Период,
	|	Операция.Организация КАК Организация,
	|	НЕОПРЕДЕЛЕНО КАК ИдентификаторСтроки,
	|
	|	Строки.СуммаРегл КАК Сумма,
	|
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.НаСкладе) КАК ВидСчетаДт,
	|	ВЫБОР КОГДА &ФормироватьВидыЗапасовПоГруппамФинансовогоУчета ТОГДА
	|		Строки.ВидЗапасов.ГруппаФинансовогоУчета
	|	ИНАЧЕ
	|		Строки.Номенклатура.ГруппаФинансовогоУчета
	|	КОНЕЦ КАК АналитикаУчетаДт,
	|	Операция.Склад КАК МестоУчетаДт,
	|
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаДт,
	|	Операция.Склад.Подразделение КАК ПодразделениеДт,
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетДт,
	|	Операция.Склад КАК СубконтоДт1,
	|	Строки.Номенклатура КАК СубконтоДт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт3,
	|	
	|	0 КАК ВалютнаяСуммаДт,
	|	Строки.Количество КАК КоличествоДт,
	|	0 КАК СуммаНУДт,
	|	0 КАК СуммаПРДт,
	|	0 КАК СуммаВРДт,
	|	
	|	НЕОПРЕДЕЛЕНО КАК ВидСчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаУчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаКт,
	|
	|	НЕОПРЕДЕЛЕНО КАК ВалютаКт,
	|	НЕОПРЕДЕЛЕНО КАК ПодразделениеКт,
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.Вспомогательный) КАК СчетКт,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
	|
	|	0 КАК ВалютнаяСуммаКт,
	|	0 КАК КоличествоКт,
	|	0 КАК СуммаНУКт,
	|	0 КАК СуммаПРКт,
	|	0 КАК СуммаВРКт
	|
	|ИЗ
	|	Документ.ВводОстатков КАК Операция
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Документ.ВводОстатков.Товары КАК Строки
	|	ПО
	|		Строки.Ссылка = Операция.Ссылка
	|ГДЕ
	|	Операция.Ссылка = &Ссылка
	|	И Операция.ТипОперации В (
	|		ЗНАЧЕНИЕ(Перечисление.ТипыОперацийВводаОстатков.ОстаткиСобственныхТоваров),
	|		ЗНАЧЕНИЕ(Перечисление.ТипыОперацийВводаОстатков.ОстаткиСобственныхТоваровНаАдресномСкладе)
	|	)
	|";
	
	ТекстОстаткиКомиссионныхТоваров = "
	|ВЫБРАТЬ // Остатки товаров, принятых на комиссию (Дт 004.01 :: Кт 000)
	|	Операция.Дата КАК Период,
	|	Операция.Организация КАК Организация,
	|	НЕОПРЕДЕЛЕНО КАК ИдентификаторСтроки,
	|
	|	0 КАК Сумма,
	|
	|	НЕОПРЕДЕЛЕНО КАК ВидСчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаУчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаДт,
	|
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаДт,
	|	Операция.Склад.Подразделение КАК ПодразделениеДт,
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ТоварыНаСкладе) КАК СчетДт,
	|	Операция.Склад КАК СубконтоДт1,
	|	Строки.Номенклатура КАК СубконтоДт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт3,
	|	
	|	0 КАК ВалютнаяСуммаДт,
	|	Строки.Количество КАК КоличествоДт,
	|	0 КАК СуммаНУДт,
	|	0 КАК СуммаПРДт,
	|	0 КАК СуммаВРДт,
	|	
	|	НЕОПРЕДЕЛЕНО КАК ВидСчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаУчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаКт,
	|
	|	НЕОПРЕДЕЛЕНО КАК ВалютаКт,
	|	НЕОПРЕДЕЛЕНО КАК ПодразделениеКт,
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетКт,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
	|
	|	0 КАК ВалютнаяСуммаКт,
	|	0 КАК КоличествоКт,
	|	0 КАК СуммаНУКт,
	|	0 КАК СуммаПРКт,
	|	0 КАК СуммаВРКт
	|
	|ИЗ
	|	Документ.ВводОстатков КАК Операция
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Документ.ВводОстатков.Товары КАК Строки
	|	ПО
	|		Строки.Ссылка = Операция.Ссылка
	|ГДЕ
	|	Операция.Ссылка = &Ссылка
	|	И Операция.ТипОперации В (
	|		ЗНАЧЕНИЕ(Перечисление.ТипыОперацийВводаОстатков.ОстаткиТоваровПолученныхНаКомиссию),
	|		ЗНАЧЕНИЕ(Перечисление.ТипыОперацийВводаОстатков.ОстаткиТоваровПолученныхНаКомиссиюНаАдресномСкладе)
	|	)
	|";
	
	ТекстОстаткиПереданныхТоваров = "
	|ВЫБРАТЬ // Остатки товаров, переданных на комиссию (Дт 45 :: Кт 000)
	|	Операция.Дата КАК Период,
	|	Операция.Организация КАК Организация,
	|	НЕОПРЕДЕЛЕНО КАК ИдентификаторСтроки,
	|
	|	Строки.СуммаРегл КАК Сумма,
	|
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.ПередачаНаКомиссию) КАК ВидСчетаДт,
	|	ВЫБОР КОГДА &ФормироватьВидыЗапасовПоГруппамФинансовогоУчета ТОГДА
	|		Строки.ВидЗапасов.ГруппаФинансовогоУчета
	|	ИНАЧЕ
	|		Строки.Номенклатура.ГруппаФинансовогоУчета
	|	КОНЕЦ КАК АналитикаУчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаДт,
	|
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаДт,
	|	Операция.Подразделение КАК ПодразделениеДт,
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетДт,
	|	Операция.Контрагент КАК СубконтоДт1,
	|	Строки.Номенклатура КАК СубконтоДт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт3,
	|	
	|	0 КАК ВалютнаяСуммаДт,
	|	Строки.Количество КАК КоличествоДт,
	|	0 КАК СуммаНУДт,
	|	0 КАК СуммаПРДт,
	|	0 КАК СуммаВРДт,
	|	
	|	НЕОПРЕДЕЛЕНО КАК ВидСчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаУчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаКт,
	|
	|	НЕОПРЕДЕЛЕНО КАК ВалютаКт,
	|	НЕОПРЕДЕЛЕНО КАК ПодразделениеКт,
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.Вспомогательный) КАК СчетКт,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
	|
	|	0 КАК ВалютнаяСуммаКт,
	|	0 КАК КоличествоКт,
	|	0 КАК СуммаНУКт,
	|	0 КАК СуммаПРКт,
	|	0 КАК СуммаВРКт
	|
	|ИЗ
	|	Документ.ВводОстатков КАК Операция
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Документ.ВводОстатков.Товары КАК Строки
	|	ПО
	|		Строки.Ссылка = Операция.Ссылка
	|ГДЕ
	|	Операция.Ссылка = &Ссылка
	|	И Операция.ТипОперации = ЗНАЧЕНИЕ(Перечисление.ТипыОперацийВводаОстатков.ОстаткиТоваровПереданныхНаКомиссию)
	|";
	
	ТекстОстаткиПолученныхАвансов = "
	|ВЫБРАТЬ // Остатки авансов, полученных от клиентов (Дт 000 :: Кт 62.02)
	|	Операция.Дата КАК Период,
	|	Операция.Организация КАК Организация,
	|	НЕОПРЕДЕЛЕНО КАК ИдентификаторСтроки,
	|
	|	Строки.СуммаРегл КАК Сумма,
	|
	|	НЕОПРЕДЕЛЕНО КАК ВидСчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаУчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаДт,
	|
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаДт,
	|	НЕОПРЕДЕЛЕНО КАК ПодразделениеДт,
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.Вспомогательный) КАК СчетДт,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт3,
	|	
	|	0 КАК ВалютнаяСуммаДт,
	|	0 КАК КоличествоДт,
	|	0 КАК СуммаНУДт,
	|	0 КАК СуммаПРДт,
	|	0 КАК СуммаВРДт,
	|	
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.АвансыПолученные) КАК ВидСчетаКт,
	|	ЕСТЬNULL(Строки.РасчетныйДокумент.ГруппаФинансовогоУчета, ЗНАЧЕНИЕ(Справочник.ГруппыФинансовогоУчетаРасчетов.ПустаяСсылка)) КАК АналитикаУчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаКт,
	|
	|	Строки.ВалютаВзаиморасчетов КАК ВалютаКт,
	|	Строки.РасчетныйДокумент.Подразделение КАК ПодразделениеКт,
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетКт,
	|	Строки.Контрагент КАК СубконтоКт1,
	|	ВЫБОР КОГДА Строки.РасчетныйДокумент ССЫЛКА Справочник.ДоговорыКонтрагентов ТОГДА
	|		Строки.РасчетныйДокумент
	|	ИНАЧЕ
	|		Строки.РасчетныйДокумент.Договор
	|	КОНЕЦ КАК СубконтоКт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
	|
	|	Строки.Сумма КАК ВалютнаяСуммаКт,
	|	0 КАК КоличествоКт,
	|	0 КАК СуммаНУКт,
	|	0 КАК СуммаПРКт,
	|	0 КАК СуммаВРКт
	|
	|ИЗ
	|	Документ.ВводОстатков КАК Операция
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Документ.ВводОстатков.РасчетыСПартнерами КАК Строки
	|	ПО
	|		Строки.Ссылка = Операция.Ссылка
	|ГДЕ
	|	Операция.Ссылка = &Ссылка
	|	И Операция.ТипОперации = ЗНАЧЕНИЕ(Перечисление.ТипыОперацийВводаОстатков.ОстаткиПоАвансамКлиентов)
	|";
	
	ТекстОстаткиЗадолженностиКлиентов = "
	|ВЫБРАТЬ // Остатки задолженности клиентов (Дт 62.01 :: Кт 000)
	|	Операция.Дата КАК Период,
	|	Операция.Организация КАК Организация,
	|	НЕОПРЕДЕЛЕНО КАК ИдентификаторСтроки,
	|
	|	Строки.СуммаРегл КАК Сумма,
	|
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.РасчетыСКлиентами) КАК ВидСчетаДт,
	|	ЕСТЬNULL(Строки.РасчетныйДокумент.ГруппаФинансовогоУчета, ЗНАЧЕНИЕ(Справочник.ГруппыФинансовогоУчетаРасчетов.ПустаяСсылка)) КАК АналитикаУчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаДт,
	|
	|	Строки.ВалютаВзаиморасчетов КАК ВалютаДт,
	|	Строки.РасчетныйДокумент.Подразделение КАК ПодразделениеДт,
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетДт,
	|	Строки.Контрагент КАК СубконтоДт1,
	|	ВЫБОР КОГДА Строки.РасчетныйДокумент ССЫЛКА Справочник.ДоговорыКонтрагентов ТОГДА
	|		Строки.РасчетныйДокумент
	|	ИНАЧЕ
	|		Строки.РасчетныйДокумент.Договор
	|	КОНЕЦ КАК СубконтоДт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт3,
	|	
	|	Строки.Сумма КАК ВалютнаяСуммаДт,
	|	0 КАК КоличествоДт,
	|	0 КАК СуммаНУДт,
	|	0 КАК СуммаПРДт,
	|	0 КАК СуммаВРДт,
	|	
	|	НЕОПРЕДЕЛЕНО КАК ВидСчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаУчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаКт,
	|
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаКт,
	|	НЕОПРЕДЕЛЕНО КАК ПодразделениеКт,
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.Вспомогательный) КАК СчетКт,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
	|
	|	0 КАК ВалютнаяСуммаКт,
	|	0 КАК КоличествоКт,
	|	0 КАК СуммаНУКт,
	|	0 КАК СуммаПРКт,
	|	0 КАК СуммаВРКт
	|
	|ИЗ
	|	Документ.ВводОстатков КАК Операция
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Документ.ВводОстатков.РасчетыСПартнерами КАК Строки
	|	ПО
	|		Строки.Ссылка = Операция.Ссылка
	|ГДЕ
	|	Операция.Ссылка = &Ссылка
	|	И Операция.ТипОперации = ЗНАЧЕНИЕ(Перечисление.ТипыОперацийВводаОстатков.ОстаткиЗадолженностиКлиентов)
	|";
	
	ТекстОстаткиЗадолженностьПередПоставщиками = "
	|ВЫБРАТЬ // Остатки задолженности перед поставщиками (Дт 000 :: Кт 60.01)
	|	Операция.Дата КАК Период,
	|	Операция.Организация КАК Организация,
	|	НЕОПРЕДЕЛЕНО КАК ИдентификаторСтроки,
	|
	|	Строки.СуммаРегл КАК Сумма,
	|
	|	НЕОПРЕДЕЛЕНО КАК ВидСчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаУчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаДт,
	|
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаДт,
	|	НЕОПРЕДЕЛЕНО КАК ПодразделениеДт,
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.Вспомогательный) КАК СчетДт,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт3,
	|	
	|	0 КАК ВалютнаяСуммаДт,
	|	0 КАК КоличествоДт,
	|	0 КАК СуммаНУДт,
	|	0 КАК СуммаПРДт,
	|	0 КАК СуммаВРДт,
	|	
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.РасчетыСПоставщиками) КАК ВидСчетаКт,
	|	ЕСТЬNULL(Строки.РасчетныйДокумент.ГруппаФинансовогоУчета, ЗНАЧЕНИЕ(Справочник.ГруппыФинансовогоУчетаРасчетов.ПустаяСсылка)) КАК АналитикаУчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаКт,
	|
	|	Строки.ВалютаВзаиморасчетов КАК ВалютаКт,
	|	Строки.РасчетныйДокумент.Подразделение КАК ПодразделениеКт,
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетКт,
	|	Строки.Контрагент КАК СубконтоКт1,
	|	ВЫБОР КОГДА Строки.РасчетныйДокумент ССЫЛКА Справочник.ДоговорыКонтрагентов ТОГДА
	|		Строки.РасчетныйДокумент
	|	ИНАЧЕ
	|		Строки.РасчетныйДокумент.Договор
	|	КОНЕЦ КАК СубконтоКт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
	|
	|	Строки.Сумма КАК ВалютнаяСуммаКт,
	|	0 КАК КоличествоКт,
	|	0 КАК СуммаНУКт,
	|	0 КАК СуммаПРКт,
	|	0 КАК СуммаВРКт
	|
	|ИЗ
	|	Документ.ВводОстатков КАК Операция
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Документ.ВводОстатков.РасчетыСПартнерами КАК Строки
	|	ПО
	|		Строки.Ссылка = Операция.Ссылка
	|ГДЕ
	|	Операция.Ссылка = &Ссылка
	|	И Операция.ТипОперации = ЗНАЧЕНИЕ(Перечисление.ТипыОперацийВводаОстатков.ОстаткиЗадолженностиПередПоставщиками)
	|";
	
	ТекстОстаткиАвансовПоставщикам = "
	|ВЫБРАТЬ // Остатки авансов поставщикам (Дт 60.02 :: Кт 000)
	|	Операция.Дата КАК Период,
	|	Операция.Организация КАК Организация,
	|	НЕОПРЕДЕЛЕНО КАК ИдентификаторСтроки,
	|
	|	Строки.СуммаРегл КАК Сумма,
	|
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.АвансыВыданные) КАК ВидСчетаДт,
	|	ЕСТЬNULL(Строки.РасчетныйДокумент.ГруппаФинансовогоУчета, ЗНАЧЕНИЕ(Справочник.ГруппыФинансовогоУчетаРасчетов.ПустаяСсылка)) КАК АналитикаУчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаДт,
	|
	|	Строки.ВалютаВзаиморасчетов КАК ВалютаДт,
	|	Строки.РасчетныйДокумент.Подразделение КАК ПодразделениеДт,
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетДт,
	|	Строки.Контрагент КАК СубконтоДт1,
	|	ВЫБОР КОГДА Строки.РасчетныйДокумент ССЫЛКА Справочник.ДоговорыКонтрагентов ТОГДА
	|		Строки.РасчетныйДокумент
	|	ИНАЧЕ
	|		Строки.РасчетныйДокумент.Договор
	|	КОНЕЦ КАК СубконтоДт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт3,
	|	
	|	Строки.Сумма КАК ВалютнаяСуммаДт,
	|	0 КАК КоличествоДт,
	|	0 КАК СуммаНУДт,
	|	0 КАК СуммаПРДт,
	|	0 КАК СуммаВРДт,
	|	
	|	НЕОПРЕДЕЛЕНО КАК ВидСчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаУчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаКт,
	|
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаКт,
	|	НЕОПРЕДЕЛЕНО КАК ПодразделениеКт,
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.Вспомогательный) КАК СчетКт,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
	|
	|	0 КАК ВалютнаяСуммаКт,
	|	0 КАК КоличествоКт,
	|	0 КАК СуммаНУКт,
	|	0 КАК СуммаПРКт,
	|	0 КАК СуммаВРКт
	|
	|ИЗ
	|	Документ.ВводОстатков КАК Операция
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Документ.ВводОстатков.РасчетыСПартнерами КАК Строки
	|	ПО
	|		Строки.Ссылка = Операция.Ссылка
	|ГДЕ
	|	Операция.Ссылка = &Ссылка
	|	И Операция.ТипОперации = ЗНАЧЕНИЕ(Перечисление.ТипыОперацийВводаОстатков.ОстаткиПоАвансамПоставщикам)
	|";
	
	ТекстОстаткиВКассах = "
	|ВЫБРАТЬ // Остатки наличных денежных средств (Дт 50.01 :: Кт 000)
	|	Операция.Дата КАК Период,
	|	Операция.Организация КАК Организация,
	|	НЕОПРЕДЕЛЕНО КАК ИдентификаторСтроки,
	|
	|	Строки.СуммаРегл КАК Сумма,
	|
	|	НЕОПРЕДЕЛЕНО КАК ВидСчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаУчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаДт,
	|
	|	Строки.Касса.ВалютаДенежныхСредств КАК ВалютаДт,
	|	Строки.Касса.Подразделение КАК ПодразделениеДт,
	|	ВЫБОР КОГДА Строки.Касса.ВалютаДенежныхСредств = Константы.ВалютаРегламентированногоУчета ТОГДА
	|		ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.КассаОрганизации)
	|	ИНАЧЕ
	|		ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.КассаОрганизацииВал)
	|	КОНЕЦ КАК СчетДт,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт3,
	|	
	|	Строки.Сумма КАК ВалютнаяСуммаДт,
	|	0 КАК КоличествоДт,
	|	0 КАК СуммаНУДт,
	|	0 КАК СуммаПРДт,
	|	0 КАК СуммаВРДт,
	|	
	|	НЕОПРЕДЕЛЕНО КАК ВидСчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаУчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаКт,
	|
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаКт,
	|	НЕОПРЕДЕЛЕНО КАК ПодразделениеКт,
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.Вспомогательный) КАК СчетКт,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
	|
	|	0 КАК ВалютнаяСуммаКт,
	|	0 КАК КоличествоКт,
	|	0 КАК СуммаНУКт,
	|	0 КАК СуммаПРКт,
	|	0 КАК СуммаВРКт
	|
	|ИЗ
	|	Документ.ВводОстатков КАК Операция
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Документ.ВводОстатков.Кассы КАК Строки
	|	ПО
	|		Строки.Ссылка = Операция.Ссылка
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Константы КАК Константы
	|	ПО
	|		Истина
	|ГДЕ
	|	Операция.Ссылка = &Ссылка
	|	И Операция.ТипОперации = ЗНАЧЕНИЕ(Перечисление.ТипыОперацийВводаОстатков.ОстаткиВКассах)
	|";
	
	ТекстОстаткиВКассахККМ = "
	|ВЫБРАТЬ // Остатки наличных денежных средств (Дт 50.01 :: Кт 000)
	|	Операция.Дата КАК Период,
	|	Операция.Организация КАК Организация,
	|	НЕОПРЕДЕЛЕНО КАК ИдентификаторСтроки,
	|
	|	Строки.СуммаРегл КАК Сумма,
	|
	|	НЕОПРЕДЕЛЕНО КАК ВидСчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаУчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаДт,
	|
	|	Строки.КассаККМ.ВалютаДенежныхСредств КАК ВалютаДт,
	|	Строки.КассаККМ.Подразделение КАК ПодразделениеДт,
	|	ВЫБОР КОГДА Строки.КассаККМ.ВалютаДенежныхСредств = Константы.ВалютаРегламентированногоУчета ТОГДА
	|		ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ОперационнаяКасса)
	|	ИНАЧЕ
	|		ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.КассаОрганизацииВал)
	|	КОНЕЦ КАК СчетДт,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт3,
	|	
	|	Строки.Сумма КАК ВалютнаяСуммаДт,
	|	0 КАК КоличествоДт,
	|	0 КАК СуммаНУДт,
	|	0 КАК СуммаПРДт,
	|	0 КАК СуммаВРДт,
	|	
	|	НЕОПРЕДЕЛЕНО КАК ВидСчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаУчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаКт,
	|
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаКт,
	|	НЕОПРЕДЕЛЕНО КАК ПодразделениеКт,
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.Вспомогательный) КАК СчетКт,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
	|
	|	0 КАК ВалютнаяСуммаКт,
	|	0 КАК КоличествоКт,
	|	0 КАК СуммаНУКт,
	|	0 КАК СуммаПРКт,
	|	0 КАК СуммаВРКт
	|
	|ИЗ
	|	Документ.ВводОстатков КАК Операция
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Документ.ВводОстатков.КассыККМ КАК Строки
	|	ПО
	|		Строки.Ссылка = Операция.Ссылка
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Константы КАК Константы
	|	ПО
	|		Истина
	|ГДЕ
	|	Операция.Ссылка = &Ссылка
	|	И Операция.ТипОперации = ЗНАЧЕНИЕ(Перечисление.ТипыОперацийВводаОстатков.ОстаткиВАвтономныхКассахККМПоРозничнойВыручке)
	|";
	
	ТекстОстаткиНаБанковскихСчетах = "
	|ВЫБРАТЬ // Остатки безналичных денежных средств (Дт 51, 52 :: Кт 000)
	|	Операция.Дата КАК Период,
	|	Операция.Организация КАК Организация,
	|	НЕОПРЕДЕЛЕНО КАК ИдентификаторСтроки,
	|
	|	Строки.СуммаРегл КАК Сумма,
	|
	|	НЕОПРЕДЕЛЕНО КАК ВидСчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаУчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаДт,
	|
	|	Строки.БанковскийСчет.ВалютаДенежныхСредств КАК ВалютаДт,
	|	Строки.БанковскийСчет.Подразделение КАК ПодразделениеДт,
	|	ВЫБОР КОГДА Строки.БанковскийСчет.ВалютаДенежныхСредств = Константы.ВалютаРегламентированногоУчета ТОГДА
	|		ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.РасчетныеСчета)
	|	ИНАЧЕ
	|		ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ВалютныеСчета)
	|	КОНЕЦ КАК СчетДт,
	|	Строки.БанковскийСчет КАК СубконтоДт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт3,
	|	
	|	Строки.Сумма КАК ВалютнаяСуммаДт,
	|	0 КАК КоличествоДт,
	|	0 КАК СуммаНУДт,
	|	0 КАК СуммаПРДт,
	|	0 КАК СуммаВРДт,
	|	
	|	НЕОПРЕДЕЛЕНО КАК ВидСчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаУчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаКт,
	|
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаКт,
	|	НЕОПРЕДЕЛЕНО КАК ПодразделениеКт,
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.Вспомогательный) КАК СчетКт,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
	|
	|	0 КАК ВалютнаяСуммаКт,
	|	0 КАК КоличествоКт,
	|	0 КАК СуммаНУКт,
	|	0 КАК СуммаПРКт,
	|	0 КАК СуммаВРКт
	|
	|ИЗ
	|	Документ.ВводОстатков КАК Операция
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Документ.ВводОстатков.БанковскиеСчета КАК Строки
	|	ПО
	|		Строки.Ссылка = Операция.Ссылка
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Константы КАК Константы
	|	ПО
	|		Истина
	|ГДЕ
	|	Операция.Ссылка = &Ссылка
	|	И Операция.ТипОперации = ЗНАЧЕНИЕ(Перечисление.ТипыОперацийВводаОстатков.ОстаткиНаБанковскихСчетах)
	|";
	
	ТекстОстаткиУПодотчетныхЛиц = "
	|ВЫБРАТЬ // Остатки наличных денежных средств (Дт 71 :: Кт 000)
	|	Операция.Дата КАК Период,
	|	Операция.Организация КАК Организация,
	|	НЕОПРЕДЕЛЕНО КАК ИдентификаторСтроки,
	|
	|	Строки.СуммаРегл КАК Сумма,
	|
	|	НЕОПРЕДЕЛЕНО КАК ВидСчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаУчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаДт,
	|
	|	Строки.Валюта КАК ВалютаДт,
	|	Операция.Подразделение КАК ПодразделениеДт,
	|	ВЫБОР КОГДА Строки.Валюта = Константы.ВалютаРегламентированногоУчета ТОГДА
	|		ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.РасчетыСПодотчетнымиЛицами)
	|	ИНАЧЕ
	|		ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.РасчетыСПодотчетнымиЛицамиВал)
	|	КОНЕЦ КАК СчетДт,
	|	Строки.ПодотчетноеЛицо КАК СубконтоДт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт3,
	|	
	|	Строки.Сумма КАК ВалютнаяСуммаДт,
	|	0 КАК КоличествоДт,
	|	0 КАК СуммаНУДт,
	|	0 КАК СуммаПРДт,
	|	0 КАК СуммаВРДт,
	|	
	|	НЕОПРЕДЕЛЕНО КАК ВидСчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаУчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаКт,
	|
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаКт,
	|	НЕОПРЕДЕЛЕНО КАК ПодразделениеКт,
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.Вспомогательный) КАК СчетКт,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
	|
	|	0 КАК ВалютнаяСуммаКт,
	|	0 КАК КоличествоКт,
	|	0 КАК СуммаНУКт,
	|	0 КАК СуммаПРКт,
	|	0 КАК СуммаВРКт
	|
	|ИЗ
	|	Документ.ВводОстатков КАК Операция
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Документ.ВводОстатков.РасчетыСПодотчетниками КАК Строки
	|	ПО
	|		Строки.Ссылка = Операция.Ссылка
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Константы КАК Константы
	|	ПО
	|		Истина
	|ГДЕ
	|	Операция.Ссылка = &Ссылка
	|	И Операция.ТипОперации В (
	|		ЗНАЧЕНИЕ(Перечисление.ТипыОперацийВводаОстатков.ОстаткиЗадолженностиПодотчетниковПоНаличнымРасчетам),
	|		ЗНАЧЕНИЕ(Перечисление.ТипыОперацийВводаОстатков.ОстаткиЗадолженностиПодотчетниковПоБезналичнымРасчетам)
	|	)
	|";
	
	ТекстПерерасходыПодотчетныхЛиц = "
	|ВЫБРАТЬ // Остатки наличных денежных средств (Дт 000 :: Кт 71)
	|	Операция.Дата КАК Период,
	|	Операция.Организация КАК Организация,
	|	НЕОПРЕДЕЛЕНО КАК ИдентификаторСтроки,
	|
	|	Строки.СуммаРегл КАК Сумма,
	|
	|	НЕОПРЕДЕЛЕНО КАК ВидСчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаУчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаДт,
	|
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаДт,
	|	НЕОПРЕДЕЛЕНО КАК ПодразделениеДт,
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.Вспомогательный) КАК СчетДт,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт3,
	|	
	|	0 КАК ВалютнаяСуммаДт,
	|	0 КАК КоличествоДт,
	|	0 КАК СуммаНУДт,
	|	0 КАК СуммаПРДт,
	|	0 КАК СуммаВРДт,
	|	
	|	НЕОПРЕДЕЛЕНО КАК ВидСчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаУчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаКт,
	|
	|	Строки.Валюта КАК ВалютаКт,
	|	Операция.Подразделение КАК ПодразделениеКт,
	|	ВЫБОР КОГДА Строки.Валюта = Константы.ВалютаРегламентированногоУчета ТОГДА
	|		ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.РасчетыСПодотчетнымиЛицами)
	|	ИНАЧЕ
	|		ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.РасчетыСПодотчетнымиЛицамиВал)
	|	КОНЕЦ КАК СчетКт,
	|	Строки.ПодотчетноеЛицо КАК СубконтоКт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
	|
	|	Строки.Сумма КАК ВалютнаяСуммаКт,
	|	0 КАК КоличествоКт,
	|	0 КАК СуммаНУКт,
	|	0 КАК СуммаПРКт,
	|	0 КАК СуммаВРКт
	|
	|ИЗ
	|	Документ.ВводОстатков КАК Операция
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Документ.ВводОстатков.РасчетыСПодотчетниками КАК Строки
	|	ПО
	|		Строки.Ссылка = Операция.Ссылка
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Константы КАК Константы
	|	ПО
	|		Истина
	|ГДЕ
	|	Операция.Ссылка = &Ссылка
	|	И Операция.ТипОперации = ЗНАЧЕНИЕ(Перечисление.ТипыОперацийВводаОстатков.ПерерасходыПодотчетныхСредств)
	|";
	
	Возврат ТекстОстаткиСобственныхТоваров
	+ "ОБЪЕДИНИТЬ ВСЕ" + ТекстОстаткиКомиссионныхТоваров
	+ "ОБЪЕДИНИТЬ ВСЕ" + ТекстОстаткиПереданныхТоваров
	+ "ОБЪЕДИНИТЬ ВСЕ" + ТекстОстаткиПолученныхАвансов
	+ "ОБЪЕДИНИТЬ ВСЕ" + ТекстОстаткиЗадолженностиКлиентов
	+ "ОБЪЕДИНИТЬ ВСЕ" + ТекстОстаткиЗадолженностьПередПоставщиками
	+ "ОБЪЕДИНИТЬ ВСЕ" + ТекстОстаткиАвансовПоставщикам
	+ "ОБЪЕДИНИТЬ ВСЕ" + ТекстОстаткиВКассах
	+ "ОБЪЕДИНИТЬ ВСЕ" + ТекстОстаткиВКассахККМ
	+ "ОБЪЕДИНИТЬ ВСЕ" + ТекстОстаткиНаБанковскихСчетах
	+ "ОБЪЕДИНИТЬ ВСЕ" + ТекстОстаткиУПодотчетныхЛиц
	+ "ОБЪЕДИНИТЬ ВСЕ" + ТекстПерерасходыПодотчетныхЛиц;
	
КонецФункции

// Процедура формирует список доступных типов операций ввода начальных остатков, исходя из настройки функциональных опций.
//
// Параметр процедуры:
// СписокТиповОпераций - СписокЗначений
//
Процедура ПолучитьСписокТиповОпераций(СписокТиповОпераций) Экспорт

	//СписокТиповОпераций = Новый СписокЗначений;
	СписокИсключаемыхТипов = Новый СписокЗначений;
	
	ИспользоватьАдресноеХранение = ПолучитьФункциональнуюОпцию("ИспользоватьАдресноеХранение", Новый Структура);
	Если Не ИспользоватьАдресноеХранение Тогда
		СписокИсключаемыхТипов.Добавить(Перечисления.ТипыОперацийВводаОстатков.ОстаткиСобственныхТоваровНаАдресномСкладе);
		СписокИсключаемыхТипов.Добавить(Перечисления.ТипыОперацийВводаОстатков.ОстаткиТоваровПолученныхНаКомиссиюНаАдресномСкладе);
		СписокИсключаемыхТипов.Добавить(Перечисления.ТипыОперацийВводаОстатков.ОстаткиВозвратнойТарыПринятойОтПоставщиковНаАдресномСкладе);
	КонецЕсли;
	
	Если Не ПолучитьФункциональнуюОпцию("ИспользоватьОплатуПлатежнымиКартами") Тогда
		СписокИсключаемыхТипов.Добавить(Перечисления.ТипыОперацийВводаОстатков.СторноОтчетовПоЭквайрингу);
	КонецЕсли;
	
	Если Не ПолучитьФункциональнуюОпцию("ИспользоватьКомиссиюПриПродажах") Тогда
		СписокИсключаемыхТипов.Добавить(Перечисления.ТипыОперацийВводаОстатков.ОстаткиТоваровПереданныхНаКомиссию);
	КонецЕсли;
	
	Если Не ПолучитьФункциональнуюОпцию("ИспользоватьКомиссиюПриЗакупках") Тогда
		СписокИсключаемыхТипов.Добавить(Перечисления.ТипыОперацийВводаОстатков.ОстаткиТоваровПолученныхНаКомиссию);
		СписокИсключаемыхТипов.Добавить(Перечисления.ТипыОперацийВводаОстатков.ОстаткиТоваровПолученныхНаКомиссиюНаАдресномСкладе);
	КонецЕсли;

	Если Не ПолучитьФункциональнуюОпцию("ИспользоватьРозничныеПродажи") Тогда
		СписокИсключаемыхТипов.Добавить(Перечисления.ТипыОперацийВводаОстатков.ОстаткиВАвтономныхКассахККМКОформлениюОтчетовОРозничныхПродажах);
		СписокИсключаемыхТипов.Добавить(Перечисления.ТипыОперацийВводаОстатков.ОстаткиВАвтономныхКассахККМПоРозничнойВыручке);
	КонецЕсли;

	Если Не ПолучитьФункциональнуюОпцию("ИспользоватьПередачиТоваровМеждуОрганизациями") Тогда
		СписокИсключаемыхТипов.Добавить(Перечисления.ТипыОперацийВводаОстатков.ОстаткиРасчетовМеждуОрганизациямиПоАвансам);
		СписокИсключаемыхТипов.Добавить(Перечисления.ТипыОперацийВводаОстатков.ОстаткиРасчетовМеждуОрганизациямиПоРеализациям);
	КонецЕсли;
	
	Если Не ПолучитьФункциональнуюОпцию("ИспользоватьМногооборотнуюТару") Тогда
		СписокИсключаемыхТипов.Добавить(Перечисления.ТипыОперацийВводаОстатков.ОстаткиВозвратнойТарыПереданнойКлиентам);
		СписокИсключаемыхТипов.Добавить(Перечисления.ТипыОперацийВводаОстатков.ОстаткиВозвратнойТарыПринятойОтПоставщиков);
		СписокИсключаемыхТипов.Добавить(Перечисления.ТипыОперацийВводаОстатков.ОстаткиВозвратнойТарыПринятойОтПоставщиковНаАдресномСкладе);
	КонецЕсли;
	
	Для Каждого ЭлементМетаданных Из Метаданные.Перечисления.ТипыОперацийВводаОстатков.ЗначенияПеречисления Цикл
		
		ТипОперации = Перечисления.ТипыОперацийВводаОстатков[ЭлементМетаданных.Имя];
		Если СписокИсключаемыхТипов.НайтиПоЗначению(ТипОперации) = Неопределено Тогда
			СписокТиповОпераций.Добавить(ТипОперации);
		КонецЕсли;
	
	КонецЦикла; 
	
	//Возврат СписокТиповОпераций;

КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

////////////////////////////////////////////////////////////////////////////////
// Проведение

Процедура ИнициализироватьДанныеДокумента(ДокументСсылка, ДополнительныеСвойства) Экспорт

	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Ссылка", ДокументСсылка);
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ДанныеДокумента.Дата КАК Период,
	|	ДанныеДокумента.Ссылка КАК Ссылка,
	|	ДанныеДокумента.Организация КАК Организация,
	|	ДанныеДокумента.ОрганизацияПолучатель КАК ОрганизацияПолучатель,
	|	ДанныеДокумента.Склад КАК Склад,
	|	ДанныеДокумента.Валюта КАК Валюта,
	|	ДанныеДокумента.Помещение КАК Помещение,
	|	ДанныеДокумента.ТипОперации КАК ТипОперации,
	|	ДанныеДокумента.НалогообложениеНДС КАК НалогообложениеНДС,
	|	ДанныеДокумента.РаспоряжениеНаИнвентаризациюТоваров КАК РаспоряжениеНаИнвентаризациюТоваров,
	|	ДанныеДокумента.Партнер КАК Партнер,
	|	ДанныеДокумента.СоглашениеСКомиссионером КАК СоглашениеСКомиссионером,
	|	ДанныеДокумента.СоглашениеСКомитентом КАК СоглашениеСКомитентом,
	|	ЕСТЬNULL(ДанныеДокумента.Склад.ИспользоватьОрдернуюСхемуПриОтраженииИзлишковНедостач, ЛОЖЬ) КАК ИспользоватьОрдернуюСхемуПриОтраженииИзлишковНедостач,
	|
	|	ДанныеДокумента.Партнер КАК Поставщик,
	|	ДанныеДокумента.СоглашениеСКомитентом КАК Соглашение,
	|	Ложь КАК ОбособленныйУчетТоваровПоСделке,
	|	Неопределено КАК ВариантОбособленногоУчетаТоваров
	|ИЗ
	|	Документ.ВводОстатков КАК ДанныеДокумента
	|ГДЕ
	|	ДанныеДокумента.Ссылка = &Ссылка";
	Реквизиты = Запрос.Выполнить().Выбрать();
	Реквизиты.Следующий();

	Коэффициенты = РаботаСКурсамивалютУТ.ПолучитьКоэффициентыПересчетаВалюты(Константы.ВалютаУправленческогоУчета.Получить(), Неопределено, Реквизиты.Период);

	Если Реквизиты.ТипОперации = Перечисления.ТипыОперацийВводаОстатков.ОстаткиСобственныхТоваров
		Или Реквизиты.ТипОперации = Перечисления.ТипыОперацийВводаОстатков.ОстаткиСобственныхТоваровНаАдресномСкладе
		Или Реквизиты.ТипОперации = Перечисления.ТипыОперацийВводаОстатков.ОстаткиТоваровПолученныхНаКомиссию
		Или Реквизиты.ТипОперации = Перечисления.ТипыОперацийВводаОстатков.ОстаткиТоваровПереданныхНаКомиссию
		Или Реквизиты.ТипОперации = Перечисления.ТипыОперацийВводаОстатков.ОстаткиВозвратнойТарыПереданнойКлиентам
		Или Реквизиты.ТипОперации = Перечисления.ТипыОперацийВводаОстатков.ОстаткиВозвратнойТарыПринятойОтПоставщиков
		Или Реквизиты.ТипОперации = Перечисления.ТипыОперацийВводаОстатков.ОстаткиВозвратнойТарыПринятойОтПоставщиковНаАдресномСкладе Тогда
		ИнициализироватьКлючиАналитикиНоменклатуры(Реквизиты);
	КонецЕсли;
	
	АналитикаВзаиморасчетовПоставщик = Неопределено;
	АналитикаВзаиморасчетовКлиент = Неопределено;
	
	МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	ИнициализироватьКлючиАналитикиПоПартнерам(Реквизиты, МенеджерВременныхТаблиц);

	Если Реквизиты.ТипОперации = Перечисления.ТипыОперацийВводаОстатков.ОстаткиРасчетовМеждуОрганизациямиПоАвансам
		Или Реквизиты.ТипОперации = Перечисления.ТипыОперацийВводаОстатков.ОстаткиРасчетовМеждуОрганизациямиПоРеализациям Тогда
		
		СтруктураПоставщик = Новый Структура("Организация, Партнер, Контрагент",
			Реквизиты.ОрганизацияПолучатель,
			Справочники.Партнеры.НашеПредприятие,
			Реквизиты.Организация
		);
		АналитикаВзаиморасчетовПоставщик = РегистрыСведений.АналитикаУчетаПоПартнерам.ЗначениеКлючаАналитики(СтруктураПоставщик);
		
		СтруктураКлиент = Новый Структура("Организация, Партнер, Контрагент",
			Реквизиты.Организация,
			Справочники.Партнеры.НашеПредприятие,
			Реквизиты.ОрганизацияПолучатель
		);
		АналитикаВзаиморасчетовКлиент = РегистрыСведений.АналитикаУчетаПоПартнерам.ЗначениеКлючаАналитики(СтруктураКлиент);
		
	КонецЕсли;

	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("Период"                      , Реквизиты.Период);
	Если Реквизиты.ТипОперации = Перечисления.ТипыОперацийВводаОстатков.ОстаткиТоваровПереданныхНаКомиссию Или
		Реквизиты.ТипОперации = Перечисления.ТипыОперацийВводаОстатков.ОстаткиВозвратнойТарыПереданнойКлиентам Тогда
		Запрос.УстановитьПараметр("Склад" , Реквизиты.Партнер);
	Иначе
		Запрос.УстановитьПараметр("Склад" , Реквизиты.Склад);
	КонецЕсли;
	Запрос.УстановитьПараметр("Помещение"                   , Реквизиты.Помещение);
	Запрос.УстановитьПараметр("Организация"                 , Реквизиты.Организация);
	Запрос.УстановитьПараметр("ТипОперации"                 , Реквизиты.ТипОперации);
	Запрос.УстановитьПараметр("Партнер"			            , Реквизиты.Партнер);
	Запрос.УстановитьПараметр("СоглашениеСКомиссионером"	, Реквизиты.СоглашениеСКомиссионером);
	Запрос.УстановитьПараметр("НалогообложениеНДС"			, Реквизиты.НалогообложениеНДС);
	Запрос.УстановитьПараметр("РаспоряжениеНаИнвентаризациюТоваров", Реквизиты.РаспоряжениеНаИнвентаризациюТоваров);
	Запрос.УстановитьПараметр("ИспользоватьОрдернуюСхемуПриОтраженииИзлишковНедостач", Реквизиты.ИспользоватьОрдернуюСхемуПриОтраженииИзлишковНедостач);
	Запрос.УстановитьПараметр("УчитыватьСебестоимостьТоваровПоВидамЗапасов", ПолучитьФункциональнуюОпцию("УчитыватьСебестоимостьТоваровПоВидамЗапасов"));
	Запрос.УстановитьПараметр("АналитикаВзаиморасчетовПоставщик", АналитикаВзаиморасчетовПоставщик);
	Запрос.УстановитьПараметр("АналитикаВзаиморасчетовКлиент", АналитикаВзаиморасчетовКлиент);
	Запрос.УстановитьПараметр("КоэффициентПересчетаВВалютуРегл", Коэффициенты.КоэффициентПересчетаВВалютуРегл);
	
	Запрос.Текст = 
	// 0 ВТТаблицаТоваров
	// 1 ТаблицаТоварыНаСкладах
	ТекстЗапросаТаблицаТоварыНаСкладах()
	// 2 ТаблицаСвободныеОстатки
	+ ТекстЗапросаТаблицаСвободныеОстатки()
	// 3 ТаблицаСебестоимостьТоваров
	+ ТекстЗапросаТаблицаСебестоимостьТоваров()
	// 4 ТаблицаДатыПоступленияТоваровОрганизаций
	+ ТекстЗапросаТаблицаДатыПоступленияТоваровОрганизаций()
	// 5 ТаблицаДатыПередачиТоваровНаКомиссию
	+ ТекстЗапросаТаблицаДатыПередачиТоваровНаКомиссию()
	// 6 ТаблицаТоварыОрганизаций
	+ ТекстЗапросаТаблицаТоварыОрганизаций()
	// 7 ТаблицаДенежныеСредстваНаличные
	+ ТекстЗапросаТаблицаДенежныеСредстваНаличные()
	// 8 ТаблицаДенежныеСредстваВКассахККМ
	+ ТекстЗапросаТаблицаДенежныеСредстваВКассахККМ()
	// 9 ТаблицаДенежныеСредстваБезналичные
	+ ТекстЗапросаТаблицаДенежныеСредстваБезналичные()
	// 10 ТаблицаРасчетыСПартнерами
	+ ТекстЗапросаВременнаяТаблицаРасчетыСПартнерами()
	// 11 ТаблицаРасчетыСКлиентами
	+ ТекстЗапросаТаблицаРасчетыСКлиентами()
	// 12 ТаблицаРасчетыСКлиентамиПоследовательность
	+ ТекстЗапросаТаблицаРасчетыСКлиентамиПоследовательность()
	// 13 ТаблицаРасчетыСПоставщиками
	+ ТекстЗапросаТаблицаРасчетыСПоставщиками()
	// 14 ТаблицаРасчетыСПоставщикамиПоследовательность
	+ ТекстЗапросаТаблицаРасчетыСПоставщикамиПоследовательность()
	// 15 ТаблицаТоварыПереданныеНаКомиссию
	+ ТекстЗапросаТаблицаТоварыПереданныеНаКомиссию()
	// 16 ТаблицаДенежныеСредстваУПодотчетныхЛиц
	+ ТекстЗапросаТаблицаДенежныеСредстваУПодотчетныхЛиц()
	// 17 ТаблицаРасчетыПоЭквайрингу
	+ ТекстЗапросаТаблицаРасчетыПоЭквайрингу()
	// 18 ТаблицаТоварыКОформлениюИзлишковНедостач
	+ ТекстЗапросаТаблицаТоварыКОформлениюИзлишковНедостач()
	// 19 ТаблицаДвиженияСерийТоваров
	+ ТекстЗапросаТаблицаДвиженияСерийТоваров()
	+ ТекстЗапросаТаблицаПартииТоваровОрганизаций()
	+ ТекстЗапросаТаблицаПартииТоваровОрганизацийПоследовательность()
	+ ТекстЗапросаТаблицаПартииТоваровПереданныеНаКомиссию()
	+ ТекстЗапросаТаблицаПринятаяВозвратнаяТара()
	+ ТекстЗапросаТаблицаПереданнаяВозвратнаяТара()
	;

	Результат = Запрос.ВыполнитьПакет();
	ТаблицыДляДвижений = ДополнительныеСвойства.ТаблицыДляДвижений;
	// Результат[0] - ВТТаблицаТоваров
	ТаблицыДляДвижений.Вставить("ТаблицаТоварыНаСкладах"                       		, Результат[1].Выгрузить());
	ТаблицыДляДвижений.Вставить("ТаблицаСвободныеОстатки"                      		, Результат[2].Выгрузить());
	ТаблицыДляДвижений.Вставить("ТаблицаСебестоимостьТоваров"                  		, Результат[3].Выгрузить());
	ТаблицыДляДвижений.Вставить("ТаблицаДатыПоступленияТоваровОрганизаций"     		, Результат[4].Выгрузить());
	ТаблицыДляДвижений.Вставить("ТаблицаДатыПередачиТоваровНаКомиссию"         		, Результат[5].Выгрузить());
	ТаблицыДляДвижений.Вставить("ТаблицаТоварыОрганизаций"                     		, Результат[6].Выгрузить());
	ТаблицыДляДвижений.Вставить("ТаблицаДенежныеСредстваНаличные"             		, Результат[7].Выгрузить());
	ТаблицыДляДвижений.Вставить("ТаблицаДенежныеСредстваВКассахККМ"            		, Результат[8].Выгрузить());
	ТаблицыДляДвижений.Вставить("ТаблицаДенежныеСредстваБезналичные"           		, Результат[9].Выгрузить());
	// Результат[10] - Временная таблица ТаблицаРасчетыСПартнерами
	ТаблицыДляДвижений.Вставить("ТаблицаРасчетыСКлиентами"                     		, Результат[11].Выгрузить());
	ТаблицыДляДвижений.Вставить("ТаблицаРасчетыСКлиентамиПоследовательность"   		, Результат[12].Выгрузить());
	ТаблицыДляДвижений.Вставить("ТаблицаРасчетыСПоставщиками"                  		, Результат[13].Выгрузить());
	ТаблицыДляДвижений.Вставить("ТаблицаРасчетыСПоставщикамиПоследовательность"		, Результат[14].Выгрузить());
	ТаблицыДляДвижений.Вставить("ТаблицаТоварыПереданныеНаКомиссию"            		, Результат[15].Выгрузить());
	ТаблицыДляДвижений.Вставить("ТаблицаДенежныеСредстваУПодотчетныхЛиц"       		, Результат[16].Выгрузить());
	ТаблицыДляДвижений.Вставить("ТаблицаРасчетыПоЭквайрингу"                   		, Результат[17].Выгрузить());
 	ТаблицыДляДвижений.Вставить("ТаблицаТоварыКОформлениюИзлишковНедостач"     		, Результат[18].Выгрузить());
  	ТаблицыДляДвижений.Вставить("ТаблицаДвиженияСерийТоваров"                  		, Результат[19].Выгрузить());
	ТаблицыДляДвижений.Вставить("ТаблицаПартииТоваровОрганизаций"                  	, Результат[20].Выгрузить());
	ТаблицыДляДвижений.Вставить("ТаблицаПартииТоваровОрганизацийПоследовательность"	, Результат[21].Выгрузить());
	ТаблицыДляДвижений.Вставить("ТаблицаПартииТоваровПереданныеНаКомиссию"          , Результат[22].Выгрузить());
	ТаблицыДляДвижений.Вставить("ТаблицаПринятаяВозвратнаяТара                    "	, Результат[23].Выгрузить());
	ТаблицыДляДвижений.Вставить("ТаблицаПереданнаяВозвратнаяТара"                   , Результат[24].Выгрузить());

КонецПроцедуры

Процедура ИнициализироватьКлючиАналитикиНоменклатуры(Реквизиты)

	Запрос = Новый Запрос();
	Запрос.Текст =
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ТаблицаТовары.Номенклатура КАК Номенклатура,
	|	ТаблицаТовары.Характеристика КАК Характеристика,
	|	&Склад КАК Склад
	|ИЗ
	|	Документ.ВводОстатков.Товары КАК ТаблицаТовары
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаНоменклатуры КАК Аналитика
	|		ПО ТаблицаТовары.Номенклатура = Аналитика.Номенклатура
	|			И ТаблицаТовары.Характеристика = Аналитика.Характеристика
	|			И (&Склад = Аналитика.Склад)
	|ГДЕ
	|	ТаблицаТовары.Ссылка = &Ссылка
	|	И Аналитика.Номенклатура ЕСТЬ NULL ";
	Запрос.УстановитьПараметр("Ссылка", Реквизиты.Ссылка);
	
	Если Реквизиты.ТипОперации = Перечисления.ТипыОперацийВводаОстатков.ОстаткиТоваровПереданныхНаКомиссию Или
		Реквизиты.ТипОперации = Перечисления.ТипыОперацийВводаОстатков.ОстаткиВозвратнойТарыПереданнойКлиентам Тогда
		Запрос.УстановитьПараметр("Склад" , Реквизиты.Партнер);
	Иначе
		Запрос.УстановитьПараметр("Склад" , Реквизиты.Склад);
	КонецЕсли;
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		РегистрыСведений.АналитикаУчетаНоменклатуры.СоздатьКлючАналитики(Выборка);
	КонецЦикла;

КонецПроцедуры

Процедура ИнициализироватьКлючиАналитикиПоПартнерам(Реквизиты, МенеджерВременныхТаблиц)

	Запрос = Новый Запрос("
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ТаблицаРасчетыСПартнерами.РасчетныйДокумент КАК РасчетныйДокумент,
	|	ВЫБОР КОГДА ТаблицаРасчетыСПартнерами.РасчетныйДокумент.Организация.ГоловнаяОрганизация = &Организация ТОГДА
	|		ТаблицаРасчетыСПартнерами.РасчетныйДокумент.Организация
	|	ИНАЧЕ
	|		&Организация
	|	КОНЕЦ КАК Организация
	|
	|ПОМЕСТИТЬ ТаблицаОбъектовРасчетов
	|ИЗ
	|	Документ.ВводОстатков.РасчетыСПартнерами КАК ТаблицаРасчетыСПартнерами
	|	
	|ГДЕ
	|	ТаблицаРасчетыСПартнерами.Ссылка = &Ссылка
	|	И &ТипОперации В (
	|		ЗНАЧЕНИЕ(Перечисление.ТипыОперацийВводаОстатков.ОстаткиЗадолженностиКлиентов),
	|		ЗНАЧЕНИЕ(Перечисление.ТипыОперацийВводаОстатков.ОстаткиПоАвансамКлиентов),
	|		ЗНАЧЕНИЕ(Перечисление.ТипыОперацийВводаОстатков.ОстаткиЗадолженностиПередПоставщиками),
	|		ЗНАЧЕНИЕ(Перечисление.ТипыОперацийВводаОстатков.ОстаткиПоАвансамПоставщикам)
	|	)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	РасчетныйДокумент
	|;
	|/////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ТаблицаОбъектовРасчетов.Организация КАК Организация,
	|	ТаблицаРасчетыСПартнерами.Партнер КАК Партнер,
	|	ТаблицаРасчетыСПартнерами.Контрагент КАК Контрагент
	|ИЗ
	|	Документ.ВводОстатков.РасчетыСПартнерами КАК ТаблицаРасчетыСПартнерами
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		ТаблицаОбъектовРасчетов КАК ТаблицаОбъектовРасчетов
	|	ПО
	| 		ТаблицаРасчетыСПартнерами.РасчетныйДокумент = ТаблицаОбъектовРасчетов.РасчетныйДокумент
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РегистрСведений.АналитикаУчетаПоПартнерам КАК РегистрАналитикаУчетаПоПартнерам
	|	ПО
	|		ТаблицаОбъектовРасчетов.Организация = РегистрАналитикаУчетаПоПартнерам.Организация
	|		И ТаблицаРасчетыСПартнерами.Партнер = РегистрАналитикаУчетаПоПартнерам.Партнер
	|		И ТаблицаРасчетыСПартнерами.Контрагент = РегистрАналитикаУчетаПоПартнерам.Контрагент
	|ГДЕ
	|	ТаблицаРасчетыСПартнерами.Ссылка = &Ссылка
	|	И РегистрАналитикаУчетаПоПартнерам.КлючАналитики ЕСТЬ NULL
	|	И &ТипОперации В (
	|		ЗНАЧЕНИЕ(Перечисление.ТипыОперацийВводаОстатков.ОстаткиЗадолженностиКлиентов),
	|		ЗНАЧЕНИЕ(Перечисление.ТипыОперацийВводаОстатков.ОстаткиПоАвансамКлиентов),
	|		ЗНАЧЕНИЕ(Перечисление.ТипыОперацийВводаОстатков.ОстаткиЗадолженностиПередПоставщиками),
	|		ЗНАЧЕНИЕ(Перечисление.ТипыОперацийВводаОстатков.ОстаткиПоАвансамПоставщикам)
	|	)
	|");

	Запрос.УстановитьПараметр("Ссылка"     , Реквизиты.Ссылка);
	Запрос.УстановитьПараметр("Организация", Реквизиты.Организация);
	Запрос.УстановитьПараметр("ТипОперации", Реквизиты.ТипОперации);
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;

	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		РегистрыСведений.АналитикаУчетаПоПартнерам.ЗначениеКлючаАналитики(Выборка);
	КонецЦикла;

КонецПроцедуры

Функция ТекстЗапросаТаблицаДатыПоступленияТоваровОрганизаций()
	
	ТекстЗапроса = "
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	&Период КАК ДатаПоступления,
	|	ТаблицаТовары.Номенклатура КАК Номенклатура,
	|	ТаблицаТовары.Характеристика КАК Характеристика,
	|	ТаблицаТовары.ВидЗапасов КАК ВидЗапасов,
	|	ТаблицаТовары.НомерГТД КАК НомерГТД
	|ИЗ
	|	Документ.ВводОстатков.Товары КАК ТаблицаТовары
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ
	|			РегистрСведений.ДатыПоступленияТоваровОрганизаций КАК ПоступленияТоваров
	|		ПО 
	|			ТаблицаТовары.ВидЗапасов = ПоступленияТоваров.ВидЗапасов
	|			И ТаблицаТовары.Номенклатура = ПоступленияТоваров.Номенклатура
	|			И ТаблицаТовары.Характеристика = ПоступленияТоваров.Характеристика
	|			И ТаблицаТовары.НомерГТД = ПоступленияТоваров.НомерГТД
	|ГДЕ
	|	ТаблицаТовары.Ссылка = &Ссылка
	|	И (ПоступленияТоваров.ДатаПоступления ЕСТЬ NULL 
	|			ИЛИ ПоступленияТоваров.ДатаПоступления < &Период)
	|	И (&ТипОперации = ЗНАЧЕНИЕ(Перечисление.ТипыОперацийВводаОстатков.ОстаткиСобственныхТоваровНаАдресномСкладе)
	|			ИЛИ &ТипОперации = ЗНАЧЕНИЕ(Перечисление.ТипыОперацийВводаОстатков.ОстаткиСобственныхТоваров)
	|			ИЛИ &ТипОперации = ЗНАЧЕНИЕ(Перечисление.ТипыОперацийВводаОстатков.ОстаткиТоваровПолученныхНаКомиссиюНаАдресномСкладе)
	|			ИЛИ &ТипОперации = ЗНАЧЕНИЕ(Перечисление.ТипыОперацийВводаОстатков.ОстаткиТоваровПолученныхНаКомиссию)
	|			ИЛИ &ТипОперации = ЗНАЧЕНИЕ(Перечисление.ТипыОперацийВводаОстатков.ОстаткиВозвратнойТарыПринятойОтПоставщиков)
	|			ИЛИ &ТипОперации = ЗНАЧЕНИЕ(Перечисление.ТипыОперацийВводаОстатков.ОстаткиВозвратнойТарыПринятойОтПоставщиковНаАдресномСкладе)
	|			)
	|
	|УПОРЯДОЧИТЬ ПО
	|	ТаблицаТовары.ВидЗапасов,
	|	ТаблицаТовары.Номенклатура,
	|	ТаблицаТовары.Характеристика,
	|	ТаблицаТовары.НомерГТД
	|;
	|/////////////////////////////////////////////////////////////////////////////
	|";

	
	Возврат ТекстЗапроса;
	
КонецФункции // ТекстЗапросаТаблицаДатыПоступленияТоваровОрганизаций()

Функция ТекстЗапросаТаблицаДатыПередачиТоваровНаКомиссию()
	         
	ТекстЗапроса = "
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	&Период КАК ДатаПередачи,
	|	Товары.Номенклатура КАК Номенклатура,
	|	Товары.Характеристика КАК Характеристика,
	|	Товары.ВидЗапасов КАК ВидЗапасов,
	|	Товары.НомерГТД КАК НомерГТД,
	|	&Партнер КАК Партнер,
	|	&СоглашениеСКомиссионером КАК Соглашение,
	|	&Организация КАК Организация
	|ИЗ
	|	Документ.ВводОстатков.Товары КАК Товары
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РегистрСведений.ДатыПередачиТоваровНаКомиссию КАК ДатыПередачиТоваровНаКомиссию
	|	ПО
	|		Товары.ВидЗапасов = ДатыПередачиТоваровНаКомиссию.ВидЗапасов 
	|		И Товары.Номенклатура = ДатыПередачиТоваровНаКомиссию.Номенклатура
	|		И Товары.Характеристика = ДатыПередачиТоваровНаКомиссию.Характеристика 
	|		И Товары.НомерГТД = ДатыПередачиТоваровНаКомиссию.НомерГТД 
	|		И ДатыПередачиТоваровНаКомиссию.Партнер = &Партнер
	|		И ДатыПередачиТоваровНаКомиссию.Соглашение = &СоглашениеСКомиссионером
	|		И ДатыПередачиТоваровНаКомиссию.Организация = &Организация
	|
	|ГДЕ
	|	Товары.Ссылка = &Ссылка
	|	И &ТипОперации = ЗНАЧЕНИЕ(Перечисление.ТипыОперацийВводаОстатков.ОстаткиТоваровПереданныхНаКомиссию)
	|	И (ДатыПередачиТоваровНаКомиссию.ДатаПередачи ЕСТЬ NULL
	|		ИЛИ ДатыПередачиТоваровНаКомиссию.ДатаПередачи < &Период)
	|
	|УПОРЯДОЧИТЬ ПО
	|	Товары.Номенклатура,
	|	Товары.Характеристика,
	|	Товары.НомерГТД
	|;
	|/////////////////////////////////////////////////////////////////////////////
	|";

	
	Возврат ТекстЗапроса;
	
КонецФункции // ТекстЗапросаТаблицаДатыПередачиТоваровНаКомиссию()

Функция ТекстЗапросаТаблицаТоварыОрганизаций()
	
	ТекстЗапроса = "
	|ВЫБРАТЬ
	|	ТаблицаТовары.НомерСтроки КАК НомерСтроки,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	&Период КАК Период,
	|	&Организация КАК Организация,
	|	&Склад КАК Склад,
	|	ТаблицаТовары.Номенклатура КАК Номенклатура,
	|	ТаблицаТовары.Характеристика КАК Характеристика,
	|	ТаблицаТовары.ВидЗапасов КАК ВидЗапасов,
	|	ТаблицаТовары.НомерГТД КАК НомерГТД,
	|	ТаблицаТовары.Количество КАК Количество,
	|	КлючиАналитики.КлючАналитики КАК АналитикаУчетаНоменклатуры
	|ИЗ
	|	Документ.ВводОстатков.Товары КАК ТаблицаТовары
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаНоменклатуры КАК КлючиАналитики
	|		ПО ТаблицаТовары.Номенклатура = КлючиАналитики.Номенклатура
	|			И ТаблицаТовары.Характеристика = КлючиАналитики.Характеристика
	|			И (&Склад = КлючиАналитики.Склад)
	|ГДЕ
	|	ТаблицаТовары.Ссылка = &Ссылка
	|	И (&ТипОперации = ЗНАЧЕНИЕ(Перечисление.ТипыОперацийВводаОстатков.ОстаткиСобственныхТоваров)
	|			ИЛИ &ТипОперации = ЗНАЧЕНИЕ(Перечисление.ТипыОперацийВводаОстатков.ОстаткиСобственныхТоваровНаАдресномСкладе)
	|			ИЛИ &ТипОперации = ЗНАЧЕНИЕ(Перечисление.ТипыОперацийВводаОстатков.ОстаткиТоваровПолученныхНаКомиссию)
	|			ИЛИ &ТипОперации = ЗНАЧЕНИЕ(Перечисление.ТипыОперацийВводаОстатков.ОстаткиТоваровПолученныхНаКомиссиюНаАдресномСкладе)
	|			ИЛИ &ТипОперации = ЗНАЧЕНИЕ(Перечисление.ТипыОперацийВводаОстатков.ОстаткиВозвратнойТарыПринятойОтПоставщиков)
	|			ИЛИ &ТипОперации = ЗНАЧЕНИЕ(Перечисление.ТипыОперацийВводаОстатков.ОстаткиВозвратнойТарыПринятойОтПоставщиковНаАдресномСкладе)
	|		)
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки
	|;
	|/////////////////////////////////////////////////////////////////////////////
	|";
	
	Возврат ТекстЗапроса;
	
КонецФункции // ТекстЗапросаТаблицаТоварыОрганизаций()

Функция ТекстЗапросаТаблицаДенежныеСредстваНаличные()
	
	ТекстЗапроса = "
	|ВЫБРАТЬ
	|	&Период                                КАК Период,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	&Организация                           КАК Организация,
	|	ТаблицаКассы.Касса                     КАК Касса,
	|	ТаблицаКассы.Сумма                     КАК Сумма
	|ИЗ
	|	Документ.ВводОстатков.Кассы КАК ТаблицаКассы
	|ГДЕ
	|	ТаблицаКассы.Ссылка = &Ссылка
	|	И &ТипОперации = ЗНАЧЕНИЕ(Перечисление.ТипыОперацийВводаОстатков.ОстаткиВКассах)
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки
	|;
	|/////////////////////////////////////////////////////////////////////////////
	|";
	
	Возврат ТекстЗапроса;
	
КонецФункции // ТекстЗапросаТаблицаДенежныеСредстваНаличные()

Функция ТекстЗапросаТаблицаДенежныеСредстваВКассахККМ()
	
	ТекстЗапроса = "
	|ВЫБРАТЬ
	|	&Период КАК Период,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	&Организация КАК Организация,
	|	ТаблицаКассы.КассаККМ КАК КассаККМ,
	|	ТаблицаКассы.Сумма КАК Сумма,
	|	ТаблицаКассы.НомерСтроки КАК НомерСтроки
	|ИЗ
	|	Документ.ВводОстатков.КассыККМ КАК ТаблицаКассы
	|ГДЕ
	|	ТаблицаКассы.Ссылка = &Ссылка
	|	И &ТипОперации = ЗНАЧЕНИЕ(Перечисление.ТипыОперацийВводаОстатков.ОстаткиВАвтономныхКассахККМПоРозничнойВыручке)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	&Период,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход),
	|	&Организация,
	|	ТаблицаКассы.КассаККМ,
	|	ТаблицаКассы.Сумма,
	|	ТаблицаКассы.НомерСтроки
	|ИЗ
	|	Документ.ВводОстатков.КассыККМ КАК ТаблицаКассы
	|ГДЕ
	|	ТаблицаКассы.Ссылка = &Ссылка
	|	И &ТипОперации = ЗНАЧЕНИЕ(Перечисление.ТипыОперацийВводаОстатков.ОстаткиВАвтономныхКассахККМКОформлениюОтчетовОРозничныхПродажах)
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки
	|;
	|/////////////////////////////////////////////////////////////////////////////
	|";
	
	Возврат ТекстЗапроса;
	
КонецФункции // ТекстЗапросаТаблицаДенежныеСредстваНаличные()

Функция ТекстЗапросаТаблицаДенежныеСредстваБезналичные()
	
	ТекстЗапроса = "
	|ВЫБРАТЬ
	|	&Период                                КАК Период,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	&Организация                           КАК Организация,
	|	ТаблицаБанковскиеСчета.БанковскийСчет  КАК БанковскийСчет,
	|	ТаблицаБанковскиеСчета.Сумма           КАК Сумма
	|ИЗ
	|	Документ.ВводОстатков.БанковскиеСчета КАК ТаблицаБанковскиеСчета
	|ГДЕ
	|	ТаблицаБанковскиеСчета.Ссылка = &Ссылка
	|	И &ТипОперации = ЗНАЧЕНИЕ(Перечисление.ТипыОперацийВводаОстатков.ОстаткиНаБанковскихСчетах)
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки
	|;
	|/////////////////////////////////////////////////////////////////////////////
	|";
	
	Возврат ТекстЗапроса;
	
КонецФункции // ТекстЗапросаТаблицаДенежныеСредстваБезналичные()

Функция ТекстЗапросаВременнаяТаблицаРасчетыСПартнерами()
	
	ТекстЗапроса = "
	|ВЫБРАТЬ
	|	ТаблицаРасчетыСПартнерами.НомерСтроки КАК НомерСтроки,
	|	ТаблицаРасчетыСПартнерами.ДатаПлатежа КАК ДатаПлатежа,
	|	ТаблицаРасчетыСПартнерами.РасчетныйДокумент КАК РасчетныйДокумент,
	|
	|	ТаблицаРасчетыСПартнерами.Сумма КАК Сумма,
	|	ТаблицаРасчетыСПартнерами.ВалютаВзаиморасчетов,
	|	ТаблицаРасчетыСПартнерами.СуммаРегл КАК СуммаРегл,
	|
	|	ЕСТЬNULL(Аналитика.КлючАналитики, Неопределено) КАК КлючАналитики
	|
	|ПОМЕСТИТЬ ТаблицаРасчетыСПартнерами
	|ИЗ
	|	Документ.ВводОстатков.РасчетыСПартнерами КАК ТаблицаРасчетыСПартнерами
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		ТаблицаОбъектовРасчетов КАК ТаблицаОбъектовРасчетов
	|	ПО
	| 		ТаблицаРасчетыСПартнерами.РасчетныйДокумент = ТаблицаОбъектовРасчетов.РасчетныйДокумент
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РегистрСведений.АналитикаУчетаПоПартнерам КАК Аналитика
	|	ПО
	|		ТаблицаОбъектовРасчетов.Организация = Аналитика.Организация
	|		И ТаблицаРасчетыСПартнерами.Контрагент = Аналитика.Контрагент
	|		И ТаблицаРасчетыСПартнерами.Партнер = Аналитика.Партнер
	|ГДЕ
	|	ТаблицаРасчетыСПартнерами.Ссылка = &Ссылка
	|;
	|/////////////////////////////////////////////////////////////////////////////
	|";
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаРасчетыСКлиентами()
	   
	ТекстЗапроса = "
	|ВЫБРАТЬ
	|	1 КАК Порядок,
	|	ТаблицаРасчетыСКлиентами.НомерСтроки КАК НомерСтроки,
	|	&Период КАК Период,
	|	&Период КАК ДатаРегистратора,
	|	ТаблицаРасчетыСКлиентами.ДатаПлатежа КАК ДатаПлатежа,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	&Организация КАК Организация,
	|	ТаблицаРасчетыСКлиентами.РасчетныйДокумент КАК ЗаказКлиента,
	|	ТаблицаРасчетыСКлиентами.ВалютаВзаиморасчетов КАК Валюта,
	|	ТаблицаРасчетыСКлиентами.КлючАналитики КАК АналитикаУчетаПоПартнерам,
	|	ТаблицаРасчетыСКлиентами.Сумма КАК Сумма,
	|	0 КАК КОплате,
	|	0 КАК СуммаРегл
	|ИЗ
	|	ТаблицаРасчетыСПартнерами КАК ТаблицаРасчетыСКлиентами
	|ГДЕ
	|	&ТипОперации = ЗНАЧЕНИЕ(Перечисление.ТипыОперацийВводаОстатков.ОстаткиЗадолженностиКлиентов)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	2 КАК Порядок,
	|	ТаблицаРасчетыСКлиентами.НомерСтроки КАК НомерСтроки,
	|	КОНЕЦПЕРИОДА(ТаблицаРасчетыСКлиентами.ДатаПлатежа, День) КАК Период,
	|	&Период КАК ДатаРегистратора,
	|	ТаблицаРасчетыСКлиентами.ДатаПлатежа КАК ДатаПлатежа,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	&Организация КАК Организация,
	|	ТаблицаРасчетыСКлиентами.РасчетныйДокумент КАК ЗаказКлиента,
	|	ТаблицаРасчетыСКлиентами.ВалютаВзаиморасчетов КАК Валюта,
	|	ТаблицаРасчетыСКлиентами.КлючАналитики КАК АналитикаУчетаПоПартнерам,
	|	0 КАК Сумма,
	|	ТаблицаРасчетыСКлиентами.Сумма КАК КОплате,
	|	0 КАК СуммаРегл
	|ИЗ
	|	ТаблицаРасчетыСПартнерами КАК ТаблицаРасчетыСКлиентами
	|ГДЕ
	|	&ТипОперации = ЗНАЧЕНИЕ(Перечисление.ТипыОперацийВводаОстатков.ОстаткиЗадолженностиКлиентов)
    |
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	3 КАК Порядок,
	|	ТаблицаРасчетыСКлиентами.НомерСтроки,
	|	&Период КАК Период,
	|	&Период КАК ДатаРегистратора,
	|	NULL  КАК ДатаПлатежа,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
	|	&Организация КАК Организация,
	|	ТаблицаРасчетыСКлиентами.РасчетныйДокумент КАК ЗаказКлиента,
	|	ТаблицаРасчетыСКлиентами.ВалютаВзаиморасчетов,
	|	ТаблицаРасчетыСКлиентами.КлючАналитики КАК АналитикаУчетаПоПартнерам,
	|	ТаблицаРасчетыСКлиентами.Сумма КАК 		Сумма,
	|	ТаблицаРасчетыСКлиентами.Сумма КАК		КОплате,
	|	ТаблицаРасчетыСКлиентами.СуммаРегл КАК 	СуммаРегл
	|ИЗ
	|	ТаблицаРасчетыСПартнерами КАК ТаблицаРасчетыСКлиентами
	|ГДЕ
	|	&ТипОперации = ЗНАЧЕНИЕ(Перечисление.ТипыОперацийВводаОстатков.ОстаткиПоАвансамКлиентов)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	4 КАК Порядок,
	|	ТаблицаРасчетыСКлиентами.НомерСтроки КАК НомерСтроки,
	|	&Период КАК Период,
	|	&Период КАК ДатаРегистратора,
	|	ТаблицаРасчетыСКлиентами.ДатаПлатежа КАК ДатаПлатежа,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	&Организация КАК Организация,
	|	ТаблицаРасчетыСКлиентами.РасчетныйДокумент КАК ЗаказКлиента,
	|	ТаблицаРасчетыСКлиентами.ВалютаВзаиморасчетов КАК Валюта,
	|	&АналитикаВзаиморасчетовКлиент КАК АналитикаУчетаПоПартнерам,
	|	ТаблицаРасчетыСКлиентами.Сумма КАК Сумма,
	|	0 КАК КОплате,
	|	0 КАК СуммаРегл
	|ИЗ
	|	Документ.ВводОстатков.РасчетыМеждуОрганизациями КАК ТаблицаРасчетыСКлиентами
	|ГДЕ
	|	ТаблицаРасчетыСКлиентами.Ссылка = &Ссылка
	|	И &ТипОперации = ЗНАЧЕНИЕ(Перечисление.ТипыОперацийВводаОстатков.ОстаткиРасчетовМеждуОрганизациямиПоРеализациям)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	5 КАК Порядок,
	|	ТаблицаРасчетыСКлиентами.НомерСтроки КАК НомерСтроки,
	|	КОНЕЦПЕРИОДА(ТаблицаРасчетыСКлиентами.ДатаПлатежа, День) КАК Период,
	|	&Период КАК ДатаРегистратора,
	|	ТаблицаРасчетыСКлиентами.ДатаПлатежа КАК ДатаПлатежа,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	&Организация КАК Организация,
	|	ТаблицаРасчетыСКлиентами.РасчетныйДокумент КАК ЗаказКлиента,
	|	ТаблицаРасчетыСКлиентами.ВалютаВзаиморасчетов КАК Валюта,
	|	&АналитикаВзаиморасчетовКлиент КАК АналитикаУчетаПоПартнерам,
	|	0 КАК Сумма,
	|	ТаблицаРасчетыСКлиентами.Сумма КАК КОплате,
	|	0 КАК СуммаРегл
	|ИЗ
	|	Документ.ВводОстатков.РасчетыМеждуОрганизациями КАК ТаблицаРасчетыСКлиентами
	|ГДЕ
	|	ТаблицаРасчетыСКлиентами.Ссылка = &Ссылка
	|	И &ТипОперации = ЗНАЧЕНИЕ(Перечисление.ТипыОперацийВводаОстатков.ОстаткиРасчетовМеждуОрганизациямиПоРеализациям)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	6 КАК Порядок,
	|	ТаблицаРасчетыСКлиентами.НомерСтроки,
	|	&Период КАК Период,
	|	&Период КАК ДатаРегистратора,
	|	NULL  КАК ДатаПлатежа,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
	|	&Организация КАК Организация,
	|	ТаблицаРасчетыСКлиентами.РасчетныйДокумент КАК ЗаказКлиента,
	|	ТаблицаРасчетыСКлиентами.ВалютаВзаиморасчетов,
	|	&АналитикаВзаиморасчетовКлиент КАК АналитикаУчетаПоПартнерам,
	|	ТаблицаРасчетыСКлиентами.Сумма КАК Сумма,
	|	ТаблицаРасчетыСКлиентами.Сумма КАК КОплате,
	|	ТаблицаРасчетыСКлиентами.СуммаРегл КАК СуммаРегл
	|ИЗ
	|	Документ.ВводОстатков.РасчетыМеждуОрганизациями КАК ТаблицаРасчетыСКлиентами
	|ГДЕ
	|	ТаблицаРасчетыСКлиентами.Ссылка = &Ссылка
	|	И &ТипОперации = ЗНАЧЕНИЕ(Перечисление.ТипыОперацийВводаОстатков.ОстаткиРасчетовМеждуОрганизациямиПоАвансам)
	|
	|УПОРЯДОЧИТЬ ПО
	|	Порядок,
	|	НомерСтроки
	|;
	|/////////////////////////////////////////////////////////////////////////////
	|";
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаРасчетыСКлиентамиПоследовательность()
	
	ТекстЗапроса = "
	|ВЫБРАТЬ
	|	&Период КАК Период,
	|	&Ссылка КАК Ссылка,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	ТаблицаРасчетыСКлиентами.КлючАналитики КАК АналитикаУчетаПоПартнерам,
	|	МАКСИМУМ(ТаблицаРасчетыСКлиентами.НомерСтроки) КАК НомерСтроки
	|ИЗ
	|	ТаблицаРасчетыСПартнерами КАК ТаблицаРасчетыСКлиентами
	|ГДЕ
	|	&ТипОперации В (
	|		ЗНАЧЕНИЕ(Перечисление.ТипыОперацийВводаОстатков.ОстаткиЗадолженностиКлиентов),
	|		ЗНАЧЕНИЕ(Перечисление.ТипыОперацийВводаОстатков.ОстаткиПоАвансамКлиентов)
	|	)
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаРасчетыСКлиентами.КлючАналитики
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	&Период КАК Период,
	|	&Ссылка КАК Ссылка,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	&АналитикаВзаиморасчетовКлиент КАК АналитикаУчетаПоПартнерам,
	|	0 КАК НомерСтроки
	|ГДЕ
	|	&ТипОперации В (
	|		ЗНАЧЕНИЕ(Перечисление.ТипыОперацийВводаОстатков.ОстаткиРасчетовМеждуОрганизациямиПоАвансам),
	|		ЗНАЧЕНИЕ(Перечисление.ТипыОперацийВводаОстатков.ОстаткиРасчетовМеждуОрганизациямиПоРеализациям)
	|	)
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки
	|;
	|/////////////////////////////////////////////////////////////////////////////
	|";
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаРасчетыСПоставщиками()
	
	ТекстЗапроса = "
	|ВЫБРАТЬ
	|	1 КАК Порядок,
	|	ТаблицаРасчетыСПоставщиками.НомерСтроки КАК НомерСтроки,
	|	&Период КАК Период,
	|	&Период КАК ДатаРегистратора,
	|	ТаблицаРасчетыСПоставщиками.ДатаПлатежа КАК ДатаПлатежа,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
	|	ТаблицаРасчетыСПоставщиками.РасчетныйДокумент КАК ЗаказПоставщику,
	|	ТаблицаРасчетыСПоставщиками.КлючАналитики КАК АналитикаУчетаПоПартнерам,
	|	ТаблицаРасчетыСПоставщиками.ВалютаВзаиморасчетов КАК Валюта,
	|	ТаблицаРасчетыСПоставщиками.Сумма КАК Сумма,
	|	0 КАК КОплате,
	|	0 КАК СуммаРегл
	|ИЗ
	|	ТаблицаРасчетыСПартнерами КАК ТаблицаРасчетыСПоставщиками
	|ГДЕ
	|	&ТипОперации = ЗНАЧЕНИЕ(Перечисление.ТипыОперацийВводаОстатков.ОстаткиЗадолженностиПередПоставщиками)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	2 КАК Порядок,
	|	ТаблицаРасчетыСПоставщиками.НомерСтроки КАК НомерСтроки,
	|	КОНЕЦПЕРИОДА(ТаблицаРасчетыСПоставщиками.ДатаПлатежа, День) КАК Период,
	|	&Период КАК ДатаРегистратора,
	|	ТаблицаРасчетыСПоставщиками.ДатаПлатежа КАК ДатаПлатежа,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
	|	ТаблицаРасчетыСПоставщиками.РасчетныйДокумент КАК ЗаказПоставщику,
	|	ТаблицаРасчетыСПоставщиками.КлючАналитики КАК АналитикаУчетаПоПартнерам,
	|	ТаблицаРасчетыСПоставщиками.ВалютаВзаиморасчетов КАК Валюта,
	|	0 КАК Сумма,
	|	ТаблицаРасчетыСПоставщиками.Сумма КАК КОплате,
	|	0 КАК СуммаРегл
	|ИЗ
	|	ТаблицаРасчетыСПартнерами КАК ТаблицаРасчетыСПоставщиками
	|ГДЕ
	|	&ТипОперации = ЗНАЧЕНИЕ(Перечисление.ТипыОперацийВводаОстатков.ОстаткиЗадолженностиПередПоставщиками)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	3 КАК Порядок,
	|	ТаблицаРасчетыСПоставщиками.НомерСтроки,
	|	&Период КАК Период,
	|	&Период КАК ДатаРегистратора,
	|	NULL КАК ДатаПлатежа,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	ТаблицаРасчетыСПоставщиками.РасчетныйДокумент,
	|	ТаблицаРасчетыСПоставщиками.КлючАналитики КАК АналитикаУчетаПоПартнерам,
	|	ТаблицаРасчетыСПоставщиками.ВалютаВзаиморасчетов,
	|	ТаблицаРасчетыСПоставщиками.Сумма	  КАК Сумма,
	|	ТаблицаРасчетыСПоставщиками.Сумма	  КАК КОплате,
	|	ТаблицаРасчетыСПоставщиками.СуммаРегл КАК СуммаРегл
	|ИЗ
	|	ТаблицаРасчетыСПартнерами КАК ТаблицаРасчетыСПоставщиками
	|ГДЕ
	|	&ТипОперации = ЗНАЧЕНИЕ(Перечисление.ТипыОперацийВводаОстатков.ОстаткиПоАвансамПоставщикам)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	4 КАК Порядок,
	|	ТаблицаРасчетыСПоставщиками.НомерСтроки КАК НомерСтроки,
	|	&Период КАК Период,
	|	&Период КАК ДатаРегистратора,
	|	ТаблицаРасчетыСПоставщиками.ДатаПлатежа КАК ДатаПлатежа,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
	|	ТаблицаРасчетыСПоставщиками.РасчетныйДокумент КАК ЗаказПоставщику,
	|	&АналитикаВзаиморасчетовПоставщик КАК АналитикаУчетаПоПартнерам,
	|	ТаблицаРасчетыСПоставщиками.ВалютаВзаиморасчетов КАК Валюта,
	|	ТаблицаРасчетыСПоставщиками.Сумма КАК Сумма,
	|	0 КАК КОплате,
	|	0 КАК СуммаРегл
	|ИЗ
	|	Документ.ВводОстатков.РасчетыМеждуОрганизациями КАК ТаблицаРасчетыСПоставщиками
	|ГДЕ
	|	ТаблицаРасчетыСПоставщиками.Ссылка = &Ссылка
	|	И &ТипОперации = ЗНАЧЕНИЕ(Перечисление.ТипыОперацийВводаОстатков.ОстаткиРасчетовМеждуОрганизациямиПоРеализациям)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	5 КАК Порядок,
	|	ТаблицаРасчетыСПоставщиками.НомерСтроки КАК НомерСтроки,
	|	КОНЕЦПЕРИОДА(ТаблицаРасчетыСПоставщиками.ДатаПлатежа, День) КАК Период,
	|	&Период КАК ДатаРегистратора,
	|	ТаблицаРасчетыСПоставщиками.ДатаПлатежа КАК ДатаПлатежа,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
	|	ТаблицаРасчетыСПоставщиками.РасчетныйДокумент КАК ЗаказПоставщику,
	|	&АналитикаВзаиморасчетовПоставщик КАК АналитикаУчетаПоПартнерам,
	|	ТаблицаРасчетыСПоставщиками.ВалютаВзаиморасчетов КАК Валюта,
	|	0 КАК Сумма,
	|	ТаблицаРасчетыСПоставщиками.Сумма КАК КОплате,
	|	0 КАК СуммаРегл
	|ИЗ
	|	Документ.ВводОстатков.РасчетыМеждуОрганизациями КАК ТаблицаРасчетыСПоставщиками
	|ГДЕ
	|	ТаблицаРасчетыСПоставщиками.Ссылка = &Ссылка
	|	И &ТипОперации = ЗНАЧЕНИЕ(Перечисление.ТипыОперацийВводаОстатков.ОстаткиРасчетовМеждуОрганизациямиПоРеализациям)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	6 КАК Порядок,
	|	ТаблицаРасчетыСПоставщиками.НомерСтроки,
	|	&Период КАК Период,
	|	&Период КАК ДатаРегистратора,
	|	NULL КАК ДатаПлатежа,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	ТаблицаРасчетыСПоставщиками.РасчетныйДокумент КАК ЗаказПоставщику,
	|	&АналитикаВзаиморасчетовПоставщик КАК АналитикаУчетаПоПартнерам,
	|	ТаблицаРасчетыСПоставщиками.ВалютаВзаиморасчетов,
	|	ТаблицаРасчетыСПоставщиками.Сумма КАК Сумма,
	|	ТаблицаРасчетыСПоставщиками.Сумма КАК КОплате,
	|	ТаблицаРасчетыСПоставщиками.СуммаРегл КАК СуммаРегл
	|ИЗ
	|	Документ.ВводОстатков.РасчетыМеждуОрганизациями КАК ТаблицаРасчетыСПоставщиками
	|ГДЕ
	|	ТаблицаРасчетыСПоставщиками.Ссылка = &Ссылка
	|	И &ТипОперации = ЗНАЧЕНИЕ(Перечисление.ТипыОперацийВводаОстатков.ОстаткиРасчетовМеждуОрганизациямиПоАвансам)
	|
	|УПОРЯДОЧИТЬ ПО
	|	Порядок,
	|	НомерСтроки
	|;
	|/////////////////////////////////////////////////////////////////////////////
	|";
	
	Возврат ТекстЗапроса;
	
КонецФункции // ТекстЗапросаТаблицаРасчетыСПоставщиками()

Функция ТекстЗапросаТаблицаРасчетыСПоставщикамиПоследовательность()
	
	ТекстЗапроса ="
	|ВЫБРАТЬ
	|	&Период КАК Период,
	|	&Ссылка КАК Ссылка,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	ТаблицаРасчетыСПоставщиками.КлючАналитики КАК АналитикаУчетаПоПартнерам,
	|	МАКСИМУМ(ТаблицаРасчетыСПоставщиками.НомерСтроки) КАК НомерСтроки
	|ИЗ
	|	ТаблицаРасчетыСПартнерами КАК ТаблицаРасчетыСПоставщиками
	|ГДЕ
	|	&ТипОперации В (
	|		ЗНАЧЕНИЕ(Перечисление.ТипыОперацийВводаОстатков.ОстаткиЗадолженностиПередПоставщиками),
	|		ЗНАЧЕНИЕ(Перечисление.ТипыОперацийВводаОстатков.ОстаткиПоАвансамПоставщикам)
	|     )
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаРасчетыСПоставщиками.КлючАналитики
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	&Период КАК Период,
	|	&Ссылка КАК Ссылка,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	&АналитикаВзаиморасчетовПоставщик КАК АналитикаУчетаПоПартнерам,
	|	0 КАК НомерСтроки
	|ГДЕ
	|	&ТипОперации В (
	|		ЗНАЧЕНИЕ(Перечисление.ТипыОперацийВводаОстатков.ОстаткиРасчетовМеждуОрганизациямиПоАвансам),
	|		ЗНАЧЕНИЕ(Перечисление.ТипыОперацийВводаОстатков.ОстаткиРасчетовМеждуОрганизациямиПоРеализациям)
	|     )
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки
	|;
	|/////////////////////////////////////////////////////////////////////////////
	|";

	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаТоварыПереданныеНаКомиссию()
	
	ТекстЗапроса = "
	|ВЫБРАТЬ
	|	ТаблицаТоварыПереданныеНаКомиссию.НомерСтроки КАК НомерСтроки,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	&Период КАК Период,
	|	&Организация КАК Организация,
	|	&Партнер КАК Партнер,
	|	&СоглашениеСКомиссионером КАК Соглашение,
	|	ТаблицаТоварыПереданныеНаКомиссию.Номенклатура КАК Номенклатура,
	|	ТаблицаТоварыПереданныеНаКомиссию.Характеристика КАК Характеристика,
	|	ТаблицаТоварыПереданныеНаКомиссию.ВидЗапасов КАК ВидЗапасов,
	|	ТаблицаТоварыПереданныеНаКомиссию.НомерГТД КАК НомерГТД,
	|	ТаблицаТоварыПереданныеНаКомиссию.Количество КАК Количество,
	|	КлючиАналитики.КлючАналитики КАК АналитикаУчетаНоменклатуры
	|ИЗ
	|	Документ.ВводОстатков.Товары КАК ТаблицаТоварыПереданныеНаКомиссию
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаНоменклатуры КАК КлючиАналитики
	|		ПО ТаблицаТоварыПереданныеНаКомиссию.Номенклатура = КлючиАналитики.Номенклатура
	|			И ТаблицаТоварыПереданныеНаКомиссию.Характеристика = КлючиАналитики.Характеристика
	|			И (&Склад = КлючиАналитики.Склад)
	|ГДЕ
	|	ТаблицаТоварыПереданныеНаКомиссию.Ссылка = &Ссылка
	|	И &ТипОперации = ЗНАЧЕНИЕ(Перечисление.ТипыОперацийВводаОстатков.ОстаткиТоваровПереданныхНаКомиссию)
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки
	|;
	|/////////////////////////////////////////////////////////////////////////////
	|";
	
	Возврат ТекстЗапроса;
	
КонецФункции // ТекстЗапросаТаблицаТоварыПереданныеНаКомиссию()

Функция ТекстЗапросаТаблицаДенежныеСредстваУПодотчетныхЛиц()
	
	ТекстЗапроса = "
	|ВЫБРАТЬ
	|	РасчетыСПодотчетниками.НомерСтроки КАК НомерСтроки,
	|	&Период КАК Период,
	|	ВЫБОР
	|		КОГДА &ТипОперации = ЗНАЧЕНИЕ(Перечисление.ТипыОперацийВводаОстатков.ПерерасходыПодотчетныхСредств)
	|			ТОГДА ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|		ИНАЧЕ ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|	КОНЕЦ КАК ВидДвижения,
	|	&Организация КАК Организация,
	|	РасчетыСПодотчетниками.ПодотчетноеЛицо КАК ПодотчетноеЛицо,
	|	РасчетыСПодотчетниками.Валюта КАК Валюта,
	|	РасчетыСПодотчетниками.РасчетныйДокумент КАК РасчетныйДокумент,
	|	РасчетыСПодотчетниками.Сумма КАК Сумма
	|ИЗ
	|	Документ.ВводОстатков.РасчетыСПодотчетниками КАК РасчетыСПодотчетниками
	|ГДЕ
	|	РасчетыСПодотчетниками.Ссылка = &Ссылка
	|	И (&ТипОперации = ЗНАЧЕНИЕ(Перечисление.ТипыОперацийВводаОстатков.ОстаткиЗадолженностиПодотчетниковПоНаличнымРасчетам)
	|			ИЛИ &ТипОперации = ЗНАЧЕНИЕ(Перечисление.ТипыОперацийВводаОстатков.ОстаткиЗадолженностиПодотчетниковПоБезналичнымРасчетам)
	|			ИЛИ &ТипОперации = ЗНАЧЕНИЕ(Перечисление.ТипыОперацийВводаОстатков.ПерерасходыПодотчетныхСредств))
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки
	|;
	|/////////////////////////////////////////////////////////////////////////////
	|";
	
	Возврат ТекстЗапроса;
	
КонецФункции // ТекстЗапросаТаблицаДенежныеСредстваУПодотчетныхЛиц()

Функция ТекстЗапросаТаблицаРасчетыПоЭквайрингу()
	
	ТекстЗапроса = "
	|ВЫБРАТЬ
	|	РасчетыПоЭквайрингу.НомерСтроки           КАК НомерСтроки,
	|	&Период                                   КАК Период,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)    КАК ВидДвижения,
	|	&Организация                              КАК Организация,
	|	РасчетыПоЭквайрингу.ТипДенежныхСредств    КАК ТипДенежныхСредств,
	|	РасчетыПоЭквайрингу.Валюта                КАК Валюта,
	|	РасчетыПоЭквайрингу.ЭквайринговыйТерминал КАК ЭквайринговыйТерминал,
	|	РасчетыПоЭквайрингу.ВидПлатежнойКарты     КАК ВидПлатежнойКарты,
	|	РасчетыПоЭквайрингу.НомерПлатежнойКарты   КАК НомерПлатежнойКарты,
	|	РасчетыПоЭквайрингу.ДатаПлатежа           КАК ДатаПлатежа,
	|	РасчетыПоЭквайрингу.Сумма                 КАК Сумма
	|ИЗ
	|	Документ.ВводОстатков.РасчетыПоЭквайрингу КАК РасчетыПоЭквайрингу
	|ГДЕ
	|	РасчетыПоЭквайрингу.Ссылка = &Ссылка
	|	И &ТипОперации = ЗНАЧЕНИЕ(Перечисление.ТипыОперацийВводаОстатков.СторноОтчетовПоЭквайрингу)
	|	И РасчетыПоЭквайрингу.ТипДенежныхСредств = ЗНАЧЕНИЕ(Перечисление.ТипыДенежныхСредствПоЭквайрингу.ПоступлениеПоПлатежнойКарте)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	РасчетыПоЭквайрингу.НомерСтроки           КАК НомерСтроки,
	|	&Период                                   КАК Период,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)    КАК ВидДвижения,
	|	&Организация                              КАК Организация,
	|	РасчетыПоЭквайрингу.ТипДенежныхСредств    КАК ТипДенежныхСредств,
	|	РасчетыПоЭквайрингу.Валюта                КАК Валюта,
	|	РасчетыПоЭквайрингу.ЭквайринговыйТерминал КАК ЭквайринговыйТерминал,
	|	РасчетыПоЭквайрингу.ВидПлатежнойКарты     КАК ВидПлатежнойКарты,
	|	РасчетыПоЭквайрингу.НомерПлатежнойКарты   КАК НомерПлатежнойКарты,
	|	РасчетыПоЭквайрингу.ДатаПлатежа           КАК ДатаПлатежа,
	|	РасчетыПоЭквайрингу.Сумма                 КАК Сумма
	|ИЗ
	|	Документ.ВводОстатков.РасчетыПоЭквайрингу КАК РасчетыПоЭквайрингу
	|ГДЕ
	|	РасчетыПоЭквайрингу.Ссылка = &Ссылка
	|	И &ТипОперации = ЗНАЧЕНИЕ(Перечисление.ТипыОперацийВводаОстатков.СторноОтчетовПоЭквайрингу)
	|	И РасчетыПоЭквайрингу.ТипДенежныхСредств = ЗНАЧЕНИЕ(Перечисление.ТипыДенежныхСредствПоЭквайрингу.СписаниеПоПлатежнойКарте)
	|	
	|УПОРЯДОЧИТЬ ПО
	|	ТипДенежныхСредств,
	|	НомерСтроки
	|;
	|/////////////////////////////////////////////////////////////////////////////
	|";
	
	Возврат ТекстЗапроса;
	
КонецФункции // ТекстЗапросаТаблицаРасчетыПоЭквайрингу()

Функция ТекстЗапросаТаблицаТоварыНаСкладах()
	
	ТекстЗапроса = "
	// 0 ВтТаблицаТовары
	|ВЫБРАТЬ
	|	ТаблицаТовары.Номенклатура,
	|	ТаблицаТовары.Характеристика,
	|	ТаблицаТовары.Количество,
	|	ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка) КАК Серия,
	|	ТаблицаТовары.СтатусУказанияСерий КАК СтатусУказанияСерий
	|ПОМЕСТИТЬ ВтТаблицаТовары
	|ИЗ
	|	Документ.ВводОстатков.Товары КАК ТаблицаТовары
	|ГДЕ
	|	ТаблицаТовары.Ссылка = &Ссылка
	|	И (&ТипОперации = ЗНАЧЕНИЕ(Перечисление.ТипыОперацийВводаОстатков.ОстаткиСобственныхТоваровНаАдресномСкладе)
	|			ИЛИ &ТипОперации = ЗНАЧЕНИЕ(Перечисление.ТипыОперацийВводаОстатков.ОстаткиСобственныхТоваров)
	|			ИЛИ &ТипОперации = ЗНАЧЕНИЕ(Перечисление.ТипыОперацийВводаОстатков.ОстаткиТоваровПолученныхНаКомиссиюНаАдресномСкладе)
	|			ИЛИ &ТипОперации = ЗНАЧЕНИЕ(Перечисление.ТипыОперацийВводаОстатков.ОстаткиТоваровПолученныхНаКомиссию)
	|			ИЛИ &ТипОперации = ЗНАЧЕНИЕ(Перечисление.ТипыОперацийВводаОстатков.ОстаткиВозвратнойТарыПринятойОтПоставщиков)
	|			ИЛИ &ТипОперации = ЗНАЧЕНИЕ(Перечисление.ТипыОперацийВводаОстатков.ОстаткиВозвратнойТарыПринятойОтПоставщиковНаАдресномСкладе)
	|		)
	|	И ТаблицаТовары.Количество <> 0
	|	И ТаблицаТовары.СтатусУказанияСерий = 0
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ТаблицаСерии.Номенклатура,
	|	ТаблицаСерии.Характеристика,
	|	МАКСИМУМ(ТаблицаСерии.Количество),
	|	ТаблицаСерии.Серия,
	|	МАКСИМУМ(ТаблицаТовары.СтатусУказанияСерий)
	|ИЗ
	|	Документ.ВводОстатков.Серии КАК ТаблицаСерии
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ВводОстатков.Товары КАК ТаблицаТовары
	|		ПО ТаблицаСерии.Номенклатура = ТаблицаТовары.Номенклатура
	|			И ТаблицаСерии.Характеристика = ТаблицаТовары.Характеристика
	|ГДЕ
	|	ТаблицаСерии.Ссылка = &Ссылка
	|	И (&ТипОперации = ЗНАЧЕНИЕ(Перечисление.ТипыОперацийВводаОстатков.ОстаткиСобственныхТоваровНаАдресномСкладе)
	|			ИЛИ &ТипОперации = ЗНАЧЕНИЕ(Перечисление.ТипыОперацийВводаОстатков.ОстаткиСобственныхТоваров)
	|			ИЛИ &ТипОперации = ЗНАЧЕНИЕ(Перечисление.ТипыОперацийВводаОстатков.ОстаткиТоваровПолученныхНаКомиссиюНаАдресномСкладе)
	|			ИЛИ &ТипОперации = ЗНАЧЕНИЕ(Перечисление.ТипыОперацийВводаОстатков.ОстаткиТоваровПолученныхНаКомиссию)
	|			ИЛИ &ТипОперации = ЗНАЧЕНИЕ(Перечисление.ТипыОперацийВводаОстатков.ОстаткиВозвратнойТарыПринятойОтПоставщиков)
	|			ИЛИ &ТипОперации = ЗНАЧЕНИЕ(Перечисление.ТипыОперацийВводаОстатков.ОстаткиВозвратнойТарыПринятойОтПоставщиковНаАдресномСкладе)
	|		)
	|	И ТаблицаСерии.Ссылка = &Ссылка
	|	И ТаблицаСерии.Количество <> 0
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаСерии.Номенклатура,
	|	ТаблицаСерии.Характеристика,
	|	ТаблицаСерии.Серия
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	&Период КАК Период,
	|	&Склад КАК Склад,
	|	&Помещение КАК Помещение,
	|	ТаблицаТовары.Номенклатура КАК Номенклатура,
	|	ТаблицаТовары.Характеристика КАК Характеристика,
	|	ТаблицаТовары.Серия КАК Серия,
	|	ТаблицаТовары.Количество КАК ВНаличии
	|ИЗ
	|	ВтТаблицаТовары КАК ТаблицаТовары
	|;
	|////////////////////////////////////////////////////////////////////////////////
	|";
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаСвободныеОстатки()
	
	ТекстЗапроса = "
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	&Период                                КАК Период,
	|	&Склад                                 КАК Склад,
	|	ТаблицаТовары.Номенклатура             КАК Номенклатура,
	|	ТаблицаТовары.Характеристика           КАК Характеристика,
	|	ТаблицаТовары.Количество               КАК ВНаличии
	|ИЗ
	|	ВтТаблицаТовары КАК ТаблицаТовары
	|;
	|////////////////////////////////////////////////////////////////////////////////
	|";
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаСебестоимостьТоваров()
	                  
	ТекстЗапроса = "
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	ТаблицаТовары.НомерСтроки КАК НомерСтроки,
	|	&Период КАК Период,
	|	&Организация КАК Организация,
	|	Аналитика.КлючАналитики КАК АналитикаУчетаНоменклатуры,
	|	ВЫБОР КОГДА &ТипОперации = ЗНАЧЕНИЕ(Перечисление.ТипыОперацийВводаОстатков.ОстаткиТоваровПереданныхНаКомиссию) ТОГДА
	|		ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыПереданныеНаКомиссию)
	|	ИНАЧЕ
	|		ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыНаСкладах)
	|	КОНЕЦ КАК РазделУчета,
	|
	|	ВЫБОР КОГДА &УчитыватьСебестоимостьТоваровПоВидамЗапасов ТОГДА
	|   	ТаблицаТовары.ВидЗапасов
	|	ИНАЧЕ
	|		Неопределено
	|	КОНЕЦ КАК ВидЗапасов,
	|
	|   ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОприходованиеТоваров) КАК ХозяйственнаяОперация,
	|	ТаблицаТовары.Сумма               КАК Стоимость,
	|	ТаблицаТовары.СуммаБезНДС         КАК СтоимостьБезНДС,
	|	ТаблицаТовары.СуммаРегл           КАК СтоимостьРегл,
	|	ТаблицаТовары.Количество  КАК Количество
	|ИЗ
	|	Документ.ВводОстатков.Товары КАК ТаблицаТовары
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РегистрСведений.АналитикаУчетаНоменклатуры КАК Аналитика
	|	ПО
	|		ТаблицаТовары.Номенклатура = Аналитика.Номенклатура
	|		И ТаблицаТовары.Характеристика = Аналитика.Характеристика
	|		И (Аналитика.Склад = &Склад)
	|ГДЕ
	|	ТаблицаТовары.Ссылка = &Ссылка
	|	И &ТипОперации В (
	|		ЗНАЧЕНИЕ(Перечисление.ТипыОперацийВводаОстатков.ОстаткиСобственныхТоваровНаАдресномСкладе),
	|		ЗНАЧЕНИЕ(Перечисление.ТипыОперацийВводаОстатков.ОстаткиСобственныхТоваров),
	|		ЗНАЧЕНИЕ(Перечисление.ТипыОперацийВводаОстатков.ОстаткиТоваровПереданныхНаКомиссию),
	|		ЗНАЧЕНИЕ(Перечисление.ТипыОперацийВводаОстатков.ОстаткиВозвратнойТарыПринятойОтПоставщиков),
	|		ЗНАЧЕНИЕ(Перечисление.ТипыОперацийВводаОстатков.ОстаткиВозвратнойТарыПринятойОтПоставщиковНаАдресномСкладе),
	|		ЗНАЧЕНИЕ(Перечисление.ТипыОперацийВводаОстатков.ОстаткиВозвратнойТарыПереданнойКлиентам)
	|		)
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки
	|;
	|/////////////////////////////////////////////////////////////////////////////
	|";
	
	Возврат ТекстЗапроса;
КонецФункции

Функция ТекстЗапросаТаблицаТоварыКОформлениюИзлишковНедостач()
	
	ТекстЗапроса = "
	|ВЫБРАТЬ
	|	ТаблицаТовары.Номенклатура КАК Номенклатура,
	|	ТаблицаТовары.Характеристика КАК Характеристика,
	|	ТаблицаТовары.Серия КАК Серия,
	|	0 КАК КОформлениюАктов,
	|	ТаблицаТовары.Количество КАК КОформлениюОрдеров,
	|	&РаспоряжениеНаИнвентаризациюТоваров КАК ДокументОснование,
	|	&Склад КАК Склад,
	|	&Помещение КАК Помещение,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
	|	&Период КАК Период
	|ИЗ
	|	ВтТаблицаТовары КАК ТаблицаТовары
	|ГДЕ
	|	(&ТипОперации = ЗНАЧЕНИЕ(Перечисление.ТипыОперацийВводаОстатков.ОстаткиСобственныхТоваровНаАдресномСкладе)
	|			ИЛИ &ТипОперации = ЗНАЧЕНИЕ(Перечисление.ТипыОперацийВводаОстатков.ОстаткиТоваровПолученныхНаКомиссиюНаАдресномСкладе)
	|			ИЛИ &ТипОперации = ЗНАЧЕНИЕ(Перечисление.ТипыОперацийВводаОстатков.ОстаткиВозвратнойТарыПринятойОтПоставщиковНаАдресномСкладе)
	|)
	|
	|;
	|////////////////////////////////////////////////////////////////////////////////
	|";
	
	Возврат ТекстЗапроса;

КонецФункции

Функция ТекстЗапросаТаблицаДвиженияСерийТоваров()
	
	ТекстЗапроса = "
	|ВЫБРАТЬ
	|	ТаблицаСерии.Номенклатура КАК Номенклатура,
	|	ТаблицаСерии.Характеристика КАК Характеристика,
	|	ТаблицаСерии.Серия КАК Серия,
	|	ТаблицаСерии.Количество КАК Количество,
	|	&Склад КАК Склад,
	|	&Помещение КАК Помещение,
	|	ЗНАЧЕНИЕ(Перечисление.СкладскиеОперации.ВводОстатков) КАК СкладскаяОперация,
	|	&Ссылка КАК Документ,
	|	&Период КАК Период,
	|	&Ссылка КАК Регистратор,
	|	ТаблицаСерии.НомерСтроки КАК НомерСтроки
	|ИЗ
	|	Документ.ВводОстатков.Серии КАК ТаблицаСерии
	|
	|ГДЕ
	|	ТаблицаСерии.Ссылка = &Ссылка
	|	И ТаблицаСерии.Количество <> 0
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки	
	|;
	|////////////////////////////////////////////////////////////////////////////////
	|";
	
	Возврат ТекстЗапроса;

КонецФункции

Функция ТекстЗапросаТаблицаПартииТоваровОрганизаций()
	
	ТекстЗапроса = "
	|ВЫБРАТЬ
	|	ТаблицаТовары.НомерСтроки КАК НомерСтроки,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	&Период КАК Период,
	|	&Организация КАК Организация,
	|	КлючиАналитики.КлючАналитики КАК АналитикаУчетаНоменклатуры,
	|	&Ссылка КАК ДокументПоступления,
	|	ТаблицаТовары.ВидЗапасов КАК ВидЗапасов,
	|	ТаблицаТовары.Количество КАК Количество,
	|	ТаблицаТовары.АналитикаУчетаПартий КАК АналитикаУчетаПартий,
	|	ТаблицаТовары.Сумма КАК Стоимость,
	|	ТаблицаТовары.СуммаБезНДС КАК СтоимостьБезНДС,
	|	ТаблицаТовары.СуммаРегл КАК СтоимостьРегл,
	|	ТаблицаТовары.НДСРегл КАК НДСРегл,
	|	ТаблицаТовары.Номенклатура КАК Номенклатура,
	|	ТаблицаТовары.Характеристика КАК Характеристика,
	|	&НалогообложениеНДС КАК НалогообложениеНДС
	|
	|ИЗ
	|	Документ.ВводОстатков.Товары КАК ТаблицаТовары
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаНоменклатуры КАК КлючиАналитики
	|		ПО ТаблицаТовары.Номенклатура = КлючиАналитики.Номенклатура
	|			И ТаблицаТовары.Характеристика = КлючиАналитики.Характеристика
	|			И (&Склад = КлючиАналитики.Склад)
	|ГДЕ
	|	ТаблицаТовары.Ссылка = &Ссылка
	|	И (&ТипОперации = ЗНАЧЕНИЕ(Перечисление.ТипыОперацийВводаОстатков.ОстаткиСобственныхТоваров)
	|			ИЛИ &ТипОперации = ЗНАЧЕНИЕ(Перечисление.ТипыОперацийВводаОстатков.ОстаткиСобственныхТоваровНаАдресномСкладе)
	|			ИЛИ &ТипОперации = ЗНАЧЕНИЕ(Перечисление.ТипыОперацийВводаОстатков.ОстаткиТоваровПолученныхНаКомиссию)
	|			ИЛИ &ТипОперации = ЗНАЧЕНИЕ(Перечисление.ТипыОперацийВводаОстатков.ОстаткиТоваровПолученныхНаКомиссиюНаАдресномСкладе)
	|			ИЛИ &ТипОперации = ЗНАЧЕНИЕ(Перечисление.ТипыОперацийВводаОстатков.ОстаткиВозвратнойТарыПринятойОтПоставщиков)
	|			ИЛИ &ТипОперации = ЗНАЧЕНИЕ(Перечисление.ТипыОперацийВводаОстатков.ОстаткиВозвратнойТарыПринятойОтПоставщиковНаАдресномСкладе)
	|		)
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки
	|;
	|/////////////////////////////////////////////////////////////////////////////
	|";
	
	Возврат ТекстЗапроса;
	
КонецФункции // ТекстЗапросаТаблицаПартииТоваровОрганизаций()

Функция ТекстЗапросаТаблицаПартииТоваровОрганизацийПоследовательность()
	
	ТекстЗапроса = "
	|ВЫБРАТЬ
	|	&Период КАК Период,
	|	&Ссылка КАК Регистратор,
	|	ТаблицаТовары.Номенклатура КАК Номенклатура,
	|	ТаблицаТовары.Характеристика КАК Характеристика
	|ИЗ
	|	Документ.ВводОстатков.Товары КАК ТаблицаТовары
	|ГДЕ
	|	ТаблицаТовары.Ссылка = &Ссылка
	|	И (&ТипОперации = ЗНАЧЕНИЕ(Перечисление.ТипыОперацийВводаОстатков.ОстаткиСобственныхТоваров)
	|			ИЛИ &ТипОперации = ЗНАЧЕНИЕ(Перечисление.ТипыОперацийВводаОстатков.ОстаткиСобственныхТоваровНаАдресномСкладе)
	|			ИЛИ &ТипОперации = ЗНАЧЕНИЕ(Перечисление.ТипыОперацийВводаОстатков.ОстаткиТоваровПолученныхНаКомиссию)
	|			ИЛИ &ТипОперации = ЗНАЧЕНИЕ(Перечисление.ТипыОперацийВводаОстатков.ОстаткиТоваровПолученныхНаКомиссиюНаАдресномСкладе)
	|			ИЛИ &ТипОперации = ЗНАЧЕНИЕ(Перечисление.ТипыОперацийВводаОстатков.ОстаткиВозвратнойТарыПринятойОтПоставщиков)
	|			ИЛИ &ТипОперации = ЗНАЧЕНИЕ(Перечисление.ТипыОперацийВводаОстатков.ОстаткиВозвратнойТарыПринятойОтПоставщиковНаАдресномСкладе)
	|)
	|;
	|/////////////////////////////////////////////////////////////////////////////
	|";
	
	Возврат ТекстЗапроса;
	
КонецФункции // ТекстЗапросаТаблицаПартииТоваровОрганизацийПоследовательность()

Функция ТекстЗапросаТаблицаПартииТоваровПереданныеНаКомиссию()
	
	ТекстЗапроса = "
	|ВЫБРАТЬ
	|	ТаблицаТоварыПереданныеНаКомиссию.НомерСтроки КАК НомерСтроки,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	&Период КАК Период,
	|	&Организация КАК Организация,
	|	КлючиАналитики.КлючАналитики КАК АналитикаУчетаНоменклатуры,
	|	&Ссылка КАК ДокументПоступления,
	|	ТаблицаТоварыПереданныеНаКомиссию.ВидЗапасов КАК ВидЗапасов,
	|	ТаблицаТоварыПереданныеНаКомиссию.АналитикаУчетаПартий КАК АналитикаУчетаПартий,
	|	&Ссылка КАК ДокументПередачиНаКомиссию,
	|	ТаблицаТоварыПереданныеНаКомиссию.Количество КАК Количество,
	|	ТаблицаТоварыПереданныеНаКомиссию.Сумма КАК Стоимость,
	|	ТаблицаТоварыПереданныеНаКомиссию.СуммаБезНДС КАК СтоимостьБезНДС,
	|	ТаблицаТоварыПереданныеНаКомиссию.СуммаРегл КАК СуммаРегл,
	|	ТаблицаТоварыПереданныеНаКомиссию.Номенклатура КАК Номенклатура,
	|	ТаблицаТоварыПереданныеНаКомиссию.Характеристика КАК Характеристика,
	|	&НалогообложениеНДС КАК НалогообложениеНДС
	|ИЗ
	|	Документ.ВводОстатков.Товары КАК ТаблицаТоварыПереданныеНаКомиссию
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаНоменклатуры КАК КлючиАналитики
	|		ПО ТаблицаТоварыПереданныеНаКомиссию.Номенклатура = КлючиАналитики.Номенклатура
	|			И ТаблицаТоварыПереданныеНаКомиссию.Характеристика = КлючиАналитики.Характеристика
	|			И (&Склад = КлючиАналитики.Склад)
	|ГДЕ
	|	ТаблицаТоварыПереданныеНаКомиссию.Ссылка = &Ссылка
	|	И &ТипОперации = ЗНАЧЕНИЕ(Перечисление.ТипыОперацийВводаОстатков.ОстаткиТоваровПереданныхНаКомиссию)
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки
	|;
	|/////////////////////////////////////////////////////////////////////////////
	|";
	
	Возврат ТекстЗапроса;
	
КонецФункции // ТекстЗапросаТаблицаПартииТоваровПереданныеНаКомиссию()

Функция ТекстЗапросаТаблицаПринятаяВозвратнаяТара()
	
	ТекстЗапроса = "
	|ВЫБРАТЬ
	|	ТаблицаТовары.НомерСтроки              КАК НомерСтроки,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	&Период                                КАК Период,
	|	ТаблицаТовары.Номенклатура             КАК Номенклатура,
	|	ТаблицаТовары.Характеристика           КАК Характеристика,
	|	ТаблицаТовары.Количество               КАК Количество,
	|	ТаблицаТовары.Сумма                    КАК Сумма,
	|	&Партнер                               КАК Партнер,
	|	ЗНАЧЕНИЕ(Документ.ПоступлениеТоваровУслуг.ПустаяСсылка) КАК ДокументПоступления
	|ИЗ
	|	Документ.ВводОстатков.Товары КАК ТаблицаТовары
	|ГДЕ
	|	ТаблицаТовары.Ссылка = &Ссылка
	|	И ТаблицаТовары.Номенклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара)
	|	И &ТипОперации В
	|		(ЗНАЧЕНИЕ(Перечисление.ТипыОперацийВводаОстатков.ОстаткиВозвратнойТарыПринятойОтПоставщиков),
	|		ЗНАЧЕНИЕ(Перечисление.ТипыОперацийВводаОстатков.ОстаткиВозвратнойТарыПринятойОтПоставщиковНаАдресномСкладе)
	|	)
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки
	|;
	|////////////////////////////////////////////////////////////////////////////////
	|";
	
	Возврат ТекстЗапроса;
	
	
КонецФункции

Функция ТекстЗапросаТаблицаПереданнаяВозвратнаяТара()
	
	ТекстЗапроса = "
	|ВЫБРАТЬ
	|	ТаблицаТовары.НомерСтроки              КАК НомерСтроки,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	&Период                                КАК Период,
	|	ТаблицаТовары.Номенклатура             КАК Номенклатура,
	|	ТаблицаТовары.Характеристика           КАК Характеристика,
	|	ТаблицаТовары.Количество               КАК Количество,
	|	ТаблицаТовары.Сумма                    КАК Сумма,
	|	&Партнер                               КАК Партнер,
	|	ЗНАЧЕНИЕ(Документ.РеализацияТоваровУслуг.ПустаяСсылка) КАК ДокументПередачи
	|ИЗ
	|	Документ.ВводОстатков.Товары КАК ТаблицаТовары
	|ГДЕ
	|	ТаблицаТовары.Ссылка = &Ссылка
	|	И ТаблицаТовары.Номенклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара)
	|	И &ТипОперации = ЗНАЧЕНИЕ(Перечисление.ТипыОперацийВводаОстатков.ОстаткиВозвратнойТарыПереданнойКлиентам)
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки
	|;
	|////////////////////////////////////////////////////////////////////////////////
	|";
	
	Возврат ТекстЗапроса;
	
КонецФункции

////////////////////////////////////////////////////////////////////////////////
// Печать

Функция ПолучитьДанныеДляПечатнойФормыОтборРазмещениеТоваров(ПараметрыПечати, МассивДокументов) Экспорт
	           
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ВводОстатков.Ссылка КАК Ссылка,
	|	ПРЕДСТАВЛЕНИЕ(ВводОстатков.Ссылка) КАК СсылкаПредставление,
	|	ПРЕДСТАВЛЕНИЕ(ВводОстатков.Склад) КАК СкладПредставление,
	|	ПРЕДСТАВЛЕНИЕ(ВводОстатков.Помещение) КАК ПомещениеПредставление,
	|	ВводОстатков.Дата КАК Дата,
	|	ВводОстатков.Номер КАК Номер,
	|	ЛОЖЬ КАК НарушенаОрдернаяСхема,
	|	ЛОЖЬ КАК СкладыВТЧ,
	|	ВЫБОР
	|		КОГДА ВводОстатков.Склад.ИспользоватьСкладскиеПомещения
	|			ТОГДА ВводОстатков.Помещение.ИспользоватьАдресноеХранениеСправочно
	|		ИНАЧЕ ВводОстатков.Склад.ИспользоватьАдресноеХранениеСправочно
	|	КОНЕЦ КАК ИспользуетсяСправочноеХранение,
	|	NULL КАК ВидОперации,
	|	ВводОстатков.Склад.ИспользоватьСерииНоменклатуры КАК ИспользоватьСерииНоменклатуры
	|ИЗ
	|	Документ.ВводОстатков КАК ВводОстатков
	|ГДЕ
	|	ВводОстатков.Ссылка В(&МассивОбъектов)
	|	И (ВводОстатков.ТипОперации = ЗНАЧЕНИЕ(Перечисление.ТипыОперацийВводаОстатков.ОстаткиСобственныхТоваров)
	|			ИЛИ ВводОстатков.ТипОперации = ЗНАЧЕНИЕ(Перечисление.ТипыОперацийВводаОстатков.ОстаткиТоваровПолученныхНаКомиссию)
	|			ИЛИ ВводОстатков.ТипОперации = ЗНАЧЕНИЕ(Перечисление.ТипыОперацийВводаОстатков.ОстаткиВозвратнойТарыПринятойОтПоставщиков)
	|	)
	|
	|УПОРЯДОЧИТЬ ПО
	|	Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаТовары.Ссылка КАК Ссылка,
	|	ТаблицаТовары.Номенклатура КАК Номенклатура,
	|	ТаблицаТовары.Характеристика КАК Характеристика,
	|	NULL КАК Серия,
	|	ТаблицаТовары.Номенклатура.ЕдиницаИзмерения КАК Упаковка,
	|	ТаблицаТовары.Количество КАК Количество
	|ПОМЕСТИТЬ ТаблицаТовары
	|ИЗ
	|	Документ.ВводОстатков.Товары КАК ТаблицаТовары
	|ГДЕ
	|	ТаблицаТовары.Ссылка В(&МассивОбъектов)
	|	И (НЕ ТаблицаТовары.СтатусУказанияСерий В (2, 4, 6, 8, 10))
	|	И (ТаблицаТовары.Ссылка.ТипОперации = ЗНАЧЕНИЕ(Перечисление.ТипыОперацийВводаОстатков.ОстаткиСобственныхТоваров)
	|			ИЛИ ТаблицаТовары.Ссылка.ТипОперации = ЗНАЧЕНИЕ(Перечисление.ТипыОперацийВводаОстатков.ОстаткиТоваровПолученныхНаКомиссию)
	|			ИЛИ ТаблицаТовары.Ссылка.ТипОперации = ЗНАЧЕНИЕ(Перечисление.ТипыОперацийВводаОстатков.ОстаткиВозвратнойТарыПринятойОтПоставщиков)
	|		)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ТаблицаСерии.Ссылка,
	|	ТаблицаСерии.Номенклатура,
	|	ТаблицаСерии.Характеристика,
	|	ТаблицаСерии.Серия,
	|	ТаблицаСерии.Номенклатура.ЕдиницаИзмерения,
	|	ТаблицаСерии.Количество
	|ИЗ
	|	Документ.ВводОстатков.Серии КАК ТаблицаСерии
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ВводОстатков.Товары КАК ТаблицаТовары
	|		ПО ТаблицаСерии.Ссылка = ТаблицаТовары.Ссылка
	|			И ТаблицаСерии.Номенклатура = ТаблицаТовары.Номенклатура
	|			И ТаблицаСерии.Характеристика = ТаблицаТовары.Характеристика
	|ГДЕ
	|	ТаблицаСерии.Ссылка В(&МассивОбъектов)
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаСерии.Ссылка,
	|	ТаблицаСерии.Номенклатура,
	|	ТаблицаСерии.Характеристика,
	|	ТаблицаСерии.Серия,
	|	ТаблицаСерии.Упаковка,
	|	ТаблицаСерии.КоличествоУпаковок,
	|	ТаблицаСерии.Количество,
	|	ТаблицаСерии.НомерСтроки,
	|	ТаблицаСерии.Номенклатура.ЕдиницаИзмерения
	|
	|ИМЕЮЩИЕ
	|	МАКСИМУМ(ТаблицаТовары.СтатусУказанияСерий) В (2, 4, 6, 8, 10)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаТовары.Ссылка КАК Ссылка,
	|	ТаблицаТовары.Номенклатура.Код КАК Код,
	|	ТаблицаТовары.Номенклатура.Артикул КАК Артикул,
	|	ТаблицаТовары.Номенклатура.НаименованиеПолное КАК ПредставлениеНоменклатуры,
	|	ТаблицаТовары.Характеристика.НаименованиеПолное КАК ПредставлениеХарактеристики,
	|	ТаблицаТовары.Номенклатура.ЕдиницаИзмерения.Наименование КАК ПредставлениеБазовойЕдиницыИзмерения,
	|	ТаблицаТовары.Упаковка.Наименование КАК ПредставлениеЕдининицыИзмеренияУпаковки,
	|	ТаблицаТовары.Серия.Наименование КАК ПредставлениеСерии,
	|	ТаблицаТовары.Количество КАК КоличествоУпаковок,
	|	ТаблицаТовары.Количество КАК Количество,
	|	ЕСТЬNULL(РазмещениеОсновнаяЯчейка.Ячейка.РабочийУчасток, ЗНАЧЕНИЕ(Справочник.РабочиеУчастки.ПустаяСсылка)) КАК РабочийУчасток,
	|	ЕСТЬNULL(РазмещениеОсновнаяЯчейка.Ячейка.ПорядокОбхода, 0) КАК ПорядокОбхода,
	|	ЕСТЬNULL(РазмещениеОсновнаяЯчейка.Ячейка, ЗНАЧЕНИЕ(Справочник.СкладскиеЯчейки.ПустаяСсылка)) КАК ОсновнаяЯчейка,
	|	ЕСТЬNULL(РазмещениеОстальныеЯчейки.Ячейка.ПорядокОбхода, 0) КАК ПорядокОбходаДополнительнаяЯчейка,
	|	ПРЕДСТАВЛЕНИЕ(РазмещениеОсновнаяЯчейка.Ячейка.РабочийУчасток) КАК ПредставлениеРабочегоУчастка,
	|	РазмещениеОсновнаяЯчейка.Ячейка.Код КАК ОсновнаяЯчейкаПредставление,
	|	РазмещениеОстальныеЯчейки.Ячейка.Код КАК ЯчейкаПредставление
	|ИЗ
	|	ТаблицаТовары КАК ТаблицаТовары
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РазмещениеНоменклатурыПоСкладскимЯчейкам КАК РазмещениеОсновнаяЯчейка
	|		ПО ТаблицаТовары.Номенклатура = РазмещениеОсновнаяЯчейка.Номенклатура
	|			И (РазмещениеОсновнаяЯчейка.ОсновнаяЯчейка = ИСТИНА)
	|			И (РазмещениеОсновнаяЯчейка.Склад = ТаблицаТовары.Ссылка.Склад)
	|			И (РазмещениеОсновнаяЯчейка.Помещение = ТаблицаТовары.Ссылка.Помещение)
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РазмещениеНоменклатурыПоСкладскимЯчейкам КАК РазмещениеОстальныеЯчейки
	|		ПО ТаблицаТовары.Номенклатура = РазмещениеОстальныеЯчейки.Номенклатура
	|			И (РазмещениеОстальныеЯчейки.ОсновнаяЯчейка = ЛОЖЬ)
	|			И (РазмещениеОстальныеЯчейки.Склад = ТаблицаТовары.Ссылка.Склад)
	|			И (РазмещениеОсновнаяЯчейка.Помещение = ТаблицаТовары.Ссылка.Помещение)
	|ГДЕ
	|	ТаблицаТовары.Ссылка В(&МассивОбъектов)
	|	И ТаблицаТовары.Номенклатура.ТипНоменклатуры В
	|		(ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Товар),ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара))
	|	И ВЫБОР
	|			КОГДА ТаблицаТовары.Ссылка.Склад.ИспользоватьСкладскиеПомещения
	|				ТОГДА ТаблицаТовары.Ссылка.Помещение.ИспользоватьАдресноеХранениеСправочно
	|			ИНАЧЕ ТаблицаТовары.Ссылка.Склад.ИспользоватьАдресноеХранениеСправочно
	|		КОНЕЦ
	|
	|УПОРЯДОЧИТЬ ПО
	|	ТаблицаТовары.Ссылка,
	|	ПорядокОбхода,
	|	ОсновнаяЯчейкаПредставление,
	|	ПредставлениеНоменклатуры,
	|	ПредставлениеХарактеристики,
	|	ПредставлениеСерии,
	|	ПредставлениеЕдининицыИзмеренияУпаковки,
	|	ПорядокОбходаДополнительнаяЯчейка,
	|	ЯчейкаПредставление
	|ИТОГИ ПО
	|	Ссылка,
	|	РабочийУчасток,
	|	ОсновнаяЯчейка,
	|	ТаблицаТовары.Номенклатура,
	|	ТаблицаТовары.Характеристика,
	|	ТаблицаТовары.Серия,
	|	ТаблицаТовары.Упаковка";

	Запрос.УстановитьПараметр("МассивОбъектов", МассивДокументов); 
	МассивРезультатов 			= Запрос.ВыполнитьПакет();
	РезультатПоШапке			= МассивРезультатов[0];
	РезультатПоТабличнойЧасти 	= МассивРезультатов[2];
	СтруктураДанныхДляПечати 	= Новый Структура("РезультатПоШапке, РезультатПоТабличнойЧасти" ,РезультатПоШапке, РезультатПоТабличнойЧасти);
	
	Возврат СтруктураДанныхДляПечати;
КонецФункции

////////////////////////////////////////////////////////////////////////////////
// Прочее

Функция ТипДокументаРасчетовПоТипуОперации(ТипОперации) Экспорт
	
	Если ТипОперации = Перечисления.ТипыОперацийВводаОстатков.ОстаткиЗадолженностиПодотчетниковПоНаличнымРасчетам Тогда
		РасчетныйДокумент = Документы.РасходныйКассовыйОрдер.ПустаяСсылка();
		
	ИначеЕсли ТипОперации = Перечисления.ТипыОперацийВводаОстатков.ОстаткиЗадолженностиПодотчетниковПоБезналичнымРасчетам Тогда
		РасчетныйДокумент = Документы.СписаниеБезналичныхДенежныхСредств.ПустаяСсылка();
		
	ИначеЕсли ТипОперации = Перечисления.ТипыОперацийВводаОстатков.ПерерасходыПодотчетныхСредств Тогда
		РасчетныйДокумент = Документы.АвансовыйОтчет.ПустаяСсылка();
		
	Иначе
		РасчетныйДокумент = Неопределено;
		
	КонецЕсли;
	
	Возврат РасчетныйДокумент;
	
КонецФункции

Функция ХозяйственнаяОперацияДоговораПоТипуОперации(ТипОперации) Экспорт
	
	Если ТипОперации = Перечисления.ТипыОперацийВводаОстатков.ОстаткиЗадолженностиКлиентов
		Или ТипОперации = Перечисления.ТипыОперацийВводаОстатков.ОстаткиПоАвансамКлиентов Тогда

		ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.РеализацияКлиенту;
		
	ИначеЕсли ТипОперации = Перечисления.ТипыОперацийВводаОстатков.ОстаткиЗадолженностиПередПоставщиками
		Или ТипОперации = Перечисления.ТипыОперацийВводаОстатков.ОстаткиПоАвансамПоставщикам Тогда

		ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ЗакупкаУПоставщика;
		
	Иначе
		
		ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ПустаяСсылка();
		
	КонецЕсли;
	
	Возврат ХозяйственнаяОперация;
КонецФункции

Функция ПорядокОплатыДоговораПоВалюте(Валюта) Экспорт
	Если Не ЗначениеЗаполнено(Валюта)
		Или Валюта = Константы.ВалютаРегламентированногоУчета.Получить() Тогда
		ПорядокОплаты = Перечисления.ПорядокОплатыПоСоглашениям.РасчетыВРубляхОплатаВРублях;
	Иначе
		ПорядокОплаты = Перечисления.ПорядокОплатыПоСоглашениям.РасчетыВВалютеОплатаВРублях;
	КонецЕсли;
	Возврат ПорядокОплаты;
КонецФункции

Функция ИмяТабличнойЧастиРасчетовПоТипуОперации(ТипОперации) Экспорт
	
	Если (ТипОперации = Перечисления.ТипыОперацийВводаОстатков.ОстаткиЗадолженностиКлиентов)
		Или (ТипОперации = Перечисления.ТипыОперацийВводаОстатков.ОстаткиПоАвансамКлиентов)
		Или (ТипОперации = Перечисления.ТипыОперацийВводаОстатков.ОстаткиЗадолженностиПередПоставщиками)
		Или (ТипОперации = Перечисления.ТипыОперацийВводаОстатков.ОстаткиПоАвансамПоставщикам) Тогда
		
		Возврат "РасчетыСПартнерами";
		
	ИначеЕсли (ТипОперации = Перечисления.ТипыОперацийВводаОстатков.ОстаткиЗадолженностиПодотчетниковПоБезналичнымРасчетам)
		Или (ТипОперации = Перечисления.ТипыОперацийВводаОстатков.ОстаткиЗадолженностиПодотчетниковПоНаличнымРасчетам)
		Или (ТипОперации = Перечисления.ТипыОперацийВводаОстатков.ПерерасходыПодотчетныхСредств) Тогда
		Возврат "РасчетыСПодотчетниками";
																   
	ИначеЕсли (ТипОперации = Перечисления.ТипыОперацийВводаОстатков.ОстаткиРасчетовМеждуОрганизациямиПоРеализациям)
		Или (ТипОперации = Перечисления.ТипыОперацийВводаОстатков.ОстаткиРасчетовМеждуОрганизациямиПоАвансам) Тогда
		
		Возврат "РасчетыМеждуОрганизациями";
		
	Иначе
		
		Возврат "";
		
	КонецЕсли;

КонецФункции

Процедура ПодобратьДокументРасчетов(Объект, ТекущиеДанные, Отказ = Ложь) Экспорт
	
	ИмяТЧ = ИмяТабличнойЧастиРасчетовПоТипуОперации(Объект.ТипОперации);
	
	Если ТекущиеДанные.РасчетныйДокумент = Неопределено Тогда
		
		ТекущиеДанные.РасчетныйДокумент = ТипДокументаРасчетовПоТипуОперации(Объект.ТипОперации);
		
		Если ТекущиеДанные.РасчетныйДокумент = Неопределено Тогда
			Возврат;
		КонецЕсли;
		
	КонецЕсли;
	
	МетаданныеРасчетногоДокумента = Метаданные.НайтиПоТипу(ТипЗнч(ТекущиеДанные.РасчетныйДокумент));
	
	ПредставлениеОбъекта = ?(ЗначениеЗаполнено(МетаданныеРасчетногоДокумента.ПредставлениеОбъекта),МетаданныеРасчетногоДокумента.ПредставлениеОбъекта,МетаданныеРасчетногоДокумента.Синоним);
	
	Запрос = Новый Запрос;
	
	Если ИмяТЧ = "РасчетыСПартнерами" Тогда
		
		Если МетаданныеРасчетногоДокумента.Имя = "ДоговорыКонтрагентов" Тогда
			ТекстЗапроса =
			"ВЫБРАТЬ
			|	ДокументРасчетов.Ссылка,
			|	ДокументРасчетов.Контрагент,
			|	ДокументРасчетов.Партнер,
			|	ДокументРасчетов.Организация,
			|	ДокументРасчетов.ВалютаВзаиморасчетов КАК Валюта,
			|	ДокументРасчетов.Дата,
			|	ДокументРасчетов.Номер
			|ИЗ
			|	Справочник.ДоговорыКонтрагентов КАК ДокументРасчетов
			|ГДЕ
			|	ДокументРасчетов.Номер = &Номер
			|	И ДокументРасчетов.Дата = &Дата
			|	И ДокументРасчетов.Партнер = &Партнер
			|	И ДокументРасчетов.Контрагент = &Контрагент
			|	И ДокументРасчетов.Организация = &Организация
			|	И ДокументРасчетов.ХозяйственнаяОперация = &ХозяйственнаяОперация
			|	И ДокументРасчетов.ПорядокОплаты = &ПорядокОплаты";
			Запрос.Текст = ТекстЗапроса;
			Запрос.УстановитьПараметр("Номер",СокрЛП(ТекущиеДанные.НомерРасчетногоДокумента));
			Запрос.УстановитьПараметр("Дата",ТекущиеДанные.ДатаРасчетногоДокумента);
			Запрос.УстановитьПараметр("Партнер",ТекущиеДанные.Партнер);
			Запрос.УстановитьПараметр("Контрагент",ТекущиеДанные.Контрагент);
			Запрос.УстановитьПараметр("Организация",Объект.Организация);
			Запрос.УстановитьПараметр("ХозяйственнаяОперация",ХозяйственнаяОперацияДоговораПоТипуОперации(Объект.ТипОперации));
			Запрос.УстановитьПараметр("ПорядокОплаты",ПорядокОплатыДоговораПоВалюте(ТекущиеДанные.ВалютаВзаиморасчетов));
		Иначе
			ТекстЗапроса =
			"ВЫБРАТЬ
			|	ДокументРасчетов.Ссылка,
			|	ДокументРасчетов.Контрагент,
			|	ДокументРасчетов.Партнер,
			|	ДокументРасчетов.Организация,
			|	ДокументРасчетов.Валюта,
			|	ДокументРасчетов.Дата,
			|	ДокументРасчетов.Номер
			|ИЗ
			|	Документ."+МетаданныеРасчетногоДокумента.Имя+" КАК ДокументРасчетов
			|ГДЕ
			|	ДокументРасчетов.Номер = &Номер
			|	И ГОД(ДокументРасчетов.Дата) = &Год";
			Запрос.Текст = ТекстЗапроса;
			Запрос.УстановитьПараметр("Номер",ТекущиеДанные.НомерРасчетногоДокумента);
			Запрос.УстановитьПараметр("Год",Год(ТекущиеДанные.ДатаРасчетногоДокумента));
		КонецЕсли;
		
	ИначеЕсли ИмяТЧ = "РасчетыСПодотчетниками" Тогда
		
		ТекстЗапроса =
		"ВЫБРАТЬ
		|	ДокументРасчетов.Ссылка,
		|	ДокументРасчетов.ПодотчетноеЛицо,";
		Если  МетаданныеРасчетногоДокумента.Имя <> "АвансовыйОтчет" Тогда
			ТекстЗапроса = ТекстЗапроса + "
		|	ДокументРасчетов.ХозяйственнаяОперация,";
		КонецЕсли;	
		ТекстЗапроса = ТекстЗапроса + "
		|	ДокументРасчетов.Организация,
		|	ДокументРасчетов.Валюта,
		|	ДокументРасчетов.Дата,
		|	ДокументРасчетов.Номер
		|ИЗ
		|	Документ."+МетаданныеРасчетногоДокумента.Имя+" КАК ДокументРасчетов
		|ГДЕ
		|	ДокументРасчетов.Номер = &Номер
		|	И ГОД(ДокументРасчетов.Дата) = &Год";
		Запрос.Текст = ТекстЗапроса;
		Запрос.УстановитьПараметр("Номер",ТекущиеДанные.НомерРасчетногоДокумента);
		Запрос.УстановитьПараметр("Год",Год(ТекущиеДанные.ДатаРасчетногоДокумента));
		
	ИначеЕсли ИмяТЧ = "РасчетыМеждуОрганизациями" Тогда
		ТекстЗапроса =
		"ВЫБРАТЬ
		|	ДокументРасчетов.Ссылка,
		|	ДокументРасчетов.Контрагент,
		|	ДокументРасчетов.Партнер,
		|	ДокументРасчетов.Организация, ";
		Если МетаданныеРасчетногоДокумента.Имя = "ОтчетПоКомиссииМеждуОрганизациями" Тогда
		ТекстЗапроса = ТекстЗапроса + "
		|	ДокументРасчетов.Комиссионер КАК ОрганизацияПолучатель,";
		Иначе
			ТекстЗапроса = ТекстЗапроса + "
		|	ДокументРасчетов.ОрганизацияПолучатель КАК ОрганизацияПолучатель,";
		КонецЕсли;			
		ТекстЗапроса = ТекстЗапроса + "
		|	ДокументРасчетов.Валюта,
		|	ДокументРасчетов.Дата,
		|	ДокументРасчетов.Номер
		|ИЗ
		|	Документ."+МетаданныеРасчетногоДокумента.Имя+" КАК ДокументРасчетов
		|ГДЕ
		|	ДокументРасчетов.Номер = &Номер
		|	И ГОД(ДокументРасчетов.Дата) = &Год";
		Запрос.Текст = ТекстЗапроса;
		Запрос.УстановитьПараметр("Номер",ТекущиеДанные.НомерРасчетногоДокумента);
		Запрос.УстановитьПараметр("Год",Год(ТекущиеДанные.ДатаРасчетногоДокумента));
	КонецЕсли;	
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Если Выборка.Следующий() Тогда

		
		Если ИмяТЧ = "РасчетыСПартнерами" Тогда
			Если Выборка.Организация <> Объект.Организация Тогда
				
				ТекстСообщения = НСтр("ru='В найденном документе ""%ТипДокумента%"" № %Номер% организация отличается от указанной во вводе остатков'");
				ТекстСообщения = СтрЗаменить(ТекстСообщения,"%ТипДокумента%",ПредставлениеОбъекта);
				ТекстСообщения = СтрЗаменить(ТекстСообщения,"%Номер%",ТекущиеДанные.НомерРасчетногоДокумента);
				
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения,,"Объект."+ИмяТЧ+"["+Формат(ТекущиеДанные.НомерСтроки-1,"ЧГ=0")+"].НомерРасчетногоДокумента",,Отказ);
				ТекущиеДанные.РасчетныйДокумент = ТипДокументаРасчетовПоТипуОперации(Объект.ТипОперации);
				
				Возврат;
			КонецЕсли;
			
			Если ЗначениеЗаполнено(ТекущиеДанные.Партнер)
				И Выборка.Партнер <> ТекущиеДанные.Партнер Тогда
				
				ТекстСообщения = НСтр("ru='В найденном документе ""%ТипДокумента%"" № %Номер% партнер отличается от указанного во вводе остатков'");
				ТекстСообщения = СтрЗаменить(ТекстСообщения,"%ТипДокумента%",ПредставлениеОбъекта);
				ТекстСообщения = СтрЗаменить(ТекстСообщения,"%Номер%",ТекущиеДанные.НомерРасчетногоДокумента);
				
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения,,"Объект."+ИмяТЧ+"["+Формат(ТекущиеДанные.НомерСтроки-1,"ЧГ=0")+"].Партнер",,Отказ);
				ТекущиеДанные.РасчетныйДокумент = ТипДокументаРасчетовПоТипуОперации(Объект.ТипОперации);
				
				Возврат;
			КонецЕсли;
			
			Если ЗначениеЗаполнено(ТекущиеДанные.Контрагент)
				И Выборка.Контрагент <> ТекущиеДанные.Контрагент Тогда
				
				ТекстСообщения = НСтр("ru='В найденном документе ""%ТипДокумента%"" № %Номер% контрагент отличается от указанного во вводе остатков'");
				ТекстСообщения = СтрЗаменить(ТекстСообщения,"%ТипДокумента%",ПредставлениеОбъекта);
				ТекстСообщения = СтрЗаменить(ТекстСообщения,"%Номер%",ТекущиеДанные.НомерРасчетногоДокумента);
				
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения,,"Объект."+ИмяТЧ+"["+Формат(ТекущиеДанные.НомерСтроки-1,"ЧГ=0")+"].Контрагент",,Отказ);
				ТекущиеДанные.РасчетныйДокумент = ТипДокументаРасчетовПоТипуОперации(Объект.ТипОперации);
				
				Возврат;
			КонецЕсли;
			ТекущиеДанные.Контрагент  			   = Выборка.Контрагент;
			ТекущиеДанные.Партнер                  = Выборка.Партнер;
			
			Если Не ЗначениеЗаполнено(ТекущиеДанные.ВалютаВзаиморасчетов) Тогда
				ТекущиеДанные.ВалютаВзаиморасчетов = Выборка.Валюта;
			КонецЕсли;
			
		ИначеЕсли ИмяТЧ = "РасчетыСПодотчетниками" Тогда
			
			Если Выборка.Организация <> Объект.Организация Тогда
				
				ТекстСообщения = НСтр("ru='В найденном документе ""%ТипДокумента%"" № %Номер% организация отличается от указанной во вводе остатков'");
				ТекстСообщения = СтрЗаменить(ТекстСообщения,"%ТипДокумента%",ПредставлениеОбъекта);
				ТекстСообщения = СтрЗаменить(ТекстСообщения,"%Номер%",ТекущиеДанные.НомерРасчетногоДокумента);
				
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения,,"Объект."+ИмяТЧ+"["+Формат(ТекущиеДанные.НомерСтроки-1,"ЧГ=0")+"].НомерРасчетногоДокумента",,Отказ);
				ТекущиеДанные.РасчетныйДокумент = ТипДокументаРасчетовПоТипуОперации(Объект.ТипОперации);
				
				Возврат;
			КонецЕсли;
			
			Если ЗначениеЗаполнено(ТекущиеДанные.ПодотчетноеЛицо)
				И Выборка.ПодотчетноеЛицо <> ТекущиеДанные.ПодотчетноеЛицо Тогда
				
				ТекстСообщения = НСтр("ru='В найденном документе ""%ТипДокумента%"" № %Номер% подотчетное лицо отличается от указанного во вводе остатков'");
				ТекстСообщения = СтрЗаменить(ТекстСообщения,"%ТипДокумента%",ПредставлениеОбъекта);
				ТекстСообщения = СтрЗаменить(ТекстСообщения,"%Номер%",ТекущиеДанные.НомерРасчетногоДокумента);
				
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения,,"Объект."+ИмяТЧ+"["+Формат(ТекущиеДанные.НомерСтроки-1,"ЧГ=0")+"].ПодотчетноеЛицо",,Отказ);
				ТекущиеДанные.РасчетныйДокумент = ТипДокументаРасчетовПоТипуОперации(Объект.ТипОперации);
				
				Возврат;
			КонецЕсли;
			
			Если ЗначениеЗаполнено(ТекущиеДанные.Валюта)
				И Выборка.Валюта <> ТекущиеДанные.Валюта Тогда
				
				ТекстСообщения = НСтр("ru='В найденном документе ""%ТипДокумента%"" № %Номер% валюта отличается от указанной во вводе остатков'");
				ТекстСообщения = СтрЗаменить(ТекстСообщения,"%ТипДокумента%",ПредставлениеОбъекта);
				ТекстСообщения = СтрЗаменить(ТекстСообщения,"%Номер%",ТекущиеДанные.НомерРасчетногоДокумента);
				
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения,,"Объект."+ИмяТЧ+"["+Формат(ТекущиеДанные.НомерСтроки-1,"ЧГ=0")+"].ПодотчетноеЛицо",,Отказ);
				ТекущиеДанные.РасчетныйДокумент = ТипДокументаРасчетовПоТипуОперации(Объект.ТипОперации);
				
				Возврат;
			КонецЕсли;
			
			Если  МетаданныеРасчетногоДокумента.Имя <> "АвансовыйОтчет"
				И Выборка.ХозяйственнаяОперация <>  Перечисления.ХозяйственныеОперации.ВыдачаДенежныхСредствПодотчетнику Тогда
  				ТекстСообщения = НСтр("ru='В найденном документе ""%ТипДокумента%"" № %Номер% хозяйственная операция отличается от ""%ВыдачаДенежныхСредствПодотчетнику%""");
				ТекстСообщения = СтрЗаменить(ТекстСообщения,"%ТипДокумента%",ПредставлениеОбъекта);
				ТекстСообщения = СтрЗаменить(ТекстСообщения,"%ВыдачаДенежныхСредствПодотчетнику%",Перечисления.ХозяйственныеОперации.ВыдачаДенежныхСредствПодотчетнику);
				ТекстСообщения = СтрЗаменить(ТекстСообщения,"%Номер%",ТекущиеДанные.НомерРасчетногоДокумента);
				
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения,,"Объект."+ИмяТЧ+"["+Формат(ТекущиеДанные.НомерСтроки-1,"ЧГ=0")+"].НомерРасчетногоДокумента",,Отказ);
				ТекущиеДанные.РасчетныйДокумент = ТипДокументаРасчетовПоТипуОперации(Объект.ТипОперации);
 				Возврат;
           КонецЕсли;
			
			ТекущиеДанные.ПодотчетноеЛицо = Выборка.ПодотчетноеЛицо;
			ТекущиеДанные.Валюта = Выборка.Валюта;
			
		ИначеЕсли ИмяТЧ = "РасчетыМеждуОрганизациями" Тогда
			
			Если Выборка.Организация <> Объект.Организация Тогда
				
				
				ТекстСообщения = НСтр("ru='В найденном документе ""%ТипДокумента%"" № %Номер% %РольОрганизации% отличается от указанной во вводе остатков'");
				ТекстСообщения = СтрЗаменить(ТекстСообщения,"%ТипДокумента%",ПредставлениеОбъекта);
				ТекстСообщения = СтрЗаменить(ТекстСообщения,"%Номер%",ТекущиеДанные.НомерРасчетногоДокумента);
				
				Если МетаданныеРасчетногоДокумента.Имя = "ПередачаТоваровМеждуОрганизациями" Тогда
					ТекстСообщения = СтрЗаменить(ТекстСообщения,"%РольОрганизации%","организация-продавец");
				Иначе
					ТекстСообщения = СтрЗаменить(ТекстСообщения,"%РольОрганизации%","организация-комитент");
				КонецЕсли;		
				
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения,,"Объект."+ИмяТЧ+"["+Формат(ТекущиеДанные.НомерСтроки-1,"ЧГ=0")+"].НомерРасчетногоДокумента",,Отказ);
				ТекущиеДанные.РасчетныйДокумент = ТипДокументаРасчетовПоТипуОперации(Объект.ТипОперации);
				
				Возврат;
			КонецЕсли;
			
			Если Выборка.ОрганизацияПолучатель <> Объект.ОрганизацияПолучатель Тогда
				
				ТекстСообщения = НСтр("ru='В найденном документе ""%ТипДокумента%"" № %Номер% %РольОрганизации% отличается от указанной во вводе остатков'");
				ТекстСообщения = СтрЗаменить(ТекстСообщения,"%ТипДокумента%",ПредставлениеОбъекта);
				ТекстСообщения = СтрЗаменить(ТекстСообщения,"%Номер%",ТекущиеДанные.НомерРасчетногоДокумента);
				
				Если МетаданныеРасчетногоДокумента.Имя = "ПередачаТоваровМеждуОрганизациями" Тогда
					ТекстСообщения = СтрЗаменить(ТекстСообщения,"%РольОрганизации%","организация-покупатель");
				Иначе
					ТекстСообщения = СтрЗаменить(ТекстСообщения,"%РольОрганизации%","организация-комиссионер");
				КонецЕсли;		
				
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения,,"Объект."+ИмяТЧ+"["+Формат(ТекущиеДанные.НомерСтроки-1,"ЧГ=0")+"].НомерРасчетногоДокумента",,Отказ);
				ТекущиеДанные.РасчетныйДокумент = ТипДокументаРасчетовПоТипуОперации(Объект.ТипОперации);
				
				Возврат;
			КонецЕсли;
			
			Если Не ЗначениеЗаполнено(ТекущиеДанные.Валюта) Тогда
				ТекущиеДанные.ВалютаВзаиморасчетов = Выборка.Валюта;
			КонецЕсли;
			
		КонецЕсли;
		
		ТекущиеДанные.РасчетныйДокумент        = Выборка.Ссылка;
		ТекущиеДанные.ДатаРасчетногоДокумента  = Выборка.Дата;
		ТекущиеДанные.НомерРасчетногоДокумента = Выборка.Номер;
		
	Иначе
		
		Если ТипЗнч(ТекущиеДанные.РасчетныйДокумент) = Тип("СправочникСсылка.ДоговорыКонтрагентов") Тогда
			ТекущиеДанные.РасчетныйДокумент = Справочники.ДоговорыКонтрагентов.ПустаяСсылка();
		Иначе
			МетаданныеДокумента = Метаданные.НайтиПоТипу(ТипЗнч(ТекущиеДанные.РасчетныйДокумент));
			ТекущиеДанные.РасчетныйДокумент = Документы[МетаданныеДокумента.Имя].ПустаяСсылка();
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ

Функция ПолучитьСоответствиеТиповОперацийФормам()

	СоответствиеТипыОпераций = Новый Соответствие;
	СоответствиеТипыОпераций.Вставить(Перечисления.ТипыОперацийВводаОстатков.ОстаткиВАвтономныхКассахККМКОформлениюОтчетовОРозничныхПродажах, "ФормаКассы");
	СоответствиеТипыОпераций.Вставить(Перечисления.ТипыОперацийВводаОстатков.ОстаткиВАвтономныхКассахККМПоРозничнойВыручке, "ФормаКассы");
	СоответствиеТипыОпераций.Вставить(Перечисления.ТипыОперацийВводаОстатков.ОстаткиВКассах, "ФормаКассы");
	СоответствиеТипыОпераций.Вставить(Перечисления.ТипыОперацийВводаОстатков.ОстаткиЗадолженностиКлиентов, "ФормаРасчетыСПартнерами");
	СоответствиеТипыОпераций.Вставить(Перечисления.ТипыОперацийВводаОстатков.ОстаткиЗадолженностиПередПоставщиками, "ФормаРасчетыСПартнерами");
	СоответствиеТипыОпераций.Вставить(Перечисления.ТипыОперацийВводаОстатков.ОстаткиЗадолженностиПодотчетниковПоБезналичнымРасчетам, "ФормаРасчетыСПодотчетнымиЛицами");
	СоответствиеТипыОпераций.Вставить(Перечисления.ТипыОперацийВводаОстатков.ОстаткиЗадолженностиПодотчетниковПоНаличнымРасчетам, "ФормаРасчетыСПодотчетнымиЛицами");
	СоответствиеТипыОпераций.Вставить(Перечисления.ТипыОперацийВводаОстатков.ПерерасходыПодотчетныхСредств, "ФормаРасчетыСПодотчетнымиЛицами");
	СоответствиеТипыОпераций.Вставить(Перечисления.ТипыОперацийВводаОстатков.ОстаткиНаБанковскихСчетах, "ФормаБанковскиеСчета");
	СоответствиеТипыОпераций.Вставить(Перечисления.ТипыОперацийВводаОстатков.ОстаткиПоАвансамКлиентов, "ФормаРасчетыСПартнерами");
	СоответствиеТипыОпераций.Вставить(Перечисления.ТипыОперацийВводаОстатков.ОстаткиПоАвансамПоставщикам, "ФормаРасчетыСПартнерами");
	СоответствиеТипыОпераций.Вставить(Перечисления.ТипыОперацийВводаОстатков.ОстаткиРасчетовМеждуОрганизациямиПоАвансам, "ФормаРасчетыМеждуОрганизациями");
	СоответствиеТипыОпераций.Вставить(Перечисления.ТипыОперацийВводаОстатков.ОстаткиРасчетовМеждуОрганизациямиПоРеализациям, "ФормаРасчетыМеждуОрганизациями");
	СоответствиеТипыОпераций.Вставить(Перечисления.ТипыОперацийВводаОстатков.ОстаткиСобственныхТоваров, "ФормаТовары");
	СоответствиеТипыОпераций.Вставить(Перечисления.ТипыОперацийВводаОстатков.ОстаткиСобственныхТоваровНаАдресномСкладе, "ФормаТовары");
	СоответствиеТипыОпераций.Вставить(Перечисления.ТипыОперацийВводаОстатков.ОстаткиТоваровПереданныхНаКомиссию, "ФормаТовары");
	СоответствиеТипыОпераций.Вставить(Перечисления.ТипыОперацийВводаОстатков.ОстаткиТоваровПолученныхНаКомиссию, "ФормаТовары");
	СоответствиеТипыОпераций.Вставить(Перечисления.ТипыОперацийВводаОстатков.ОстаткиТоваровПолученныхНаКомиссиюНаАдресномСкладе, "ФормаТовары");
	СоответствиеТипыОпераций.Вставить(Перечисления.ТипыОперацийВводаОстатков.СторноОтчетовПоЭквайрингу, "ФормаРасчетыПоЭквайрингу");
	СоответствиеТипыОпераций.Вставить(Перечисления.ТипыОперацийВводаОстатков.ОстаткиВозвратнойТарыПереданнойКлиентам, "ФормаТовары");
	СоответствиеТипыОпераций.Вставить(Перечисления.ТипыОперацийВводаОстатков.ОстаткиВозвратнойТарыПринятойОтПоставщиков, "ФормаТовары");
	СоответствиеТипыОпераций.Вставить(Перечисления.ТипыОперацийВводаОстатков.ОстаткиВозвратнойТарыПринятойОтПоставщиковНаАдресномСкладе, "ФормаТовары");
	Возврат СоответствиеТипыОпераций;

КонецФункции

Процедура ОбработкаПолученияФормы(ВидФормы, Параметры, ВыбраннаяФорма, ДополнительнаяИнформация, СтандартнаяОбработка)

	ВыбраннаяОперация = Неопределено;
	
	Если Параметры.Свойство("Ключ") И ЗначениеЗаполнено(Параметры.Ключ) Тогда
		ВыбраннаяОперация = Параметры.Ключ.ТипОперации;
	ИначеЕсли Параметры.Свойство("ЗначенияЗаполнения") Тогда
		Параметры.ЗначенияЗаполнения.Свойство("ТипОперации", ВыбраннаяОперация);
	ИначеЕсли Параметры.Свойство("ЗначениеКопирования") Тогда
		ВыбраннаяОперация = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Параметры.ЗначениеКопирования,"ТипОперации");
	КонецЕсли;

	Если ЗначениеЗаполнено(ВыбраннаяОперация) Тогда
		СтандартнаяОбработка = Ложь;
		СоответствиеТиповОперацийФормам = ПолучитьСоответствиеТиповОперацийФормам();
		ВыбраннаяФорма = СоответствиеТиповОперацийФормам[ВыбраннаяОперация];
	КонецЕсли;
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// Обновление информационной базы

// Переход на обязательное заполнение СуммыРегл
// В случае, если СуммаРегл не заполнена, то она расчитывается.
Процедура ЗаполнитьСуммуРеглВТаблЧастях() Экспорт
	
	Выборка = Документы.ВводОстатков.Выбрать();
	Пока Выборка.Следующий() Цикл
		
		ДокОбъект = Выборка.Ссылка.ПолучитьОбъект();
		Если НЕ ДокОбъект.Проведен Тогда
			Продолжить;
		КонецЕсли;
		ВалютаРегламентированногоУчета = Константы.ВалютаРегламентированногоУчета.Получить();
		ВалютаУправленческогоУчета = Константы.ВалютаУправленческогоУчета.Получить();
		
		//табличная часть Кассы
		Если ДокОбъект.ТипОперации = Перечисления.ТипыОперацийВводаОстатков.ОстаткиВКассах Тогда
			Для Каждого ТекСтрока Из ДокОбъект.Кассы Цикл
				Если ТекСтрока.СуммаРегл = 0 Тогда
					Валюта = Справочники.Кассы.ПолучитьРеквизитыКассы(ТекСтрока.Касса).Валюта;
					Если Валюта = ВалютаРегламентированногоУчета Тогда
						ТекСтрока.СуммаРегл = ТекСтрока.Сумма;
					Иначе
						КоэффициентПересчета = РаботаСКурсамиВалютУТ.ПолучитьКоэффициентПересчетаИзВалютыВВалюту(Валюта, ВалютаРегламентированногоУчета, ДокОбъект.Дата);
						ТекСтрока.СуммаРегл = Окр(ТекСтрока.Сумма * КоэффициентПересчета, 2, 1);
					КонецЕсли;
				КонецЕсли;
			КонецЦикла;
		ИначеЕсли ДокОбъект.ТипОперации = Перечисления.ТипыОперацийВводаОстатков.ОстаткиВАвтономныхКассахККМКОформлениюОтчетовОРозничныхПродажах
			ИЛИ ДокОбъект.ТипОперации = Перечисления.ТипыОперацийВводаОстатков.ОстаткиВАвтономныхКассахККМПоРозничнойВыручке Тогда
			Для Каждого ТекСтрока Из ДокОбъект.КассыККМ Цикл
				Если ТекСтрока.СуммаРегл = 0 Тогда
					Валюта = Справочники.КассыККМ.РеквизитыКассыККМ(ТекСтрока.КассаККМ).Валюта;
					Если Валюта = ВалютаРегламентированногоУчета Тогда
						ТекСтрока.СуммаРегл = ТекСтрока.Сумма;
					Иначе
						КоэффициентПересчета = РаботаСКурсамиВалютУТ.ПолучитьКоэффициентПересчетаИзВалютыВВалюту(Валюта, ВалютаРегламентированногоУчета, ДокОбъект.Дата);
						ТекСтрока.СуммаРегл = Окр(ТекСтрока.Сумма * КоэффициентПересчета, 2, 1);
					КонецЕсли;
				КонецЕсли;
			КонецЦикла;
			//табличная часть Банковские счета
		ИначеЕсли ДокОбъект.ТипОперации = Перечисления.ТипыОперацийВводаОстатков.ОстаткиНаБанковскихСчетах Тогда
			Для Каждого ТекСтрока Из ДокОбъект.БанковскиеСчета Цикл
				Если ТекСтрока.СуммаРегл = 0 Тогда
					Валюта = Справочники.БанковскиеСчетаОрганизаций.ПолучитьРеквизитыБанковскогоСчетаОрганизации(ТекСтрока.БанковскийСчет).Валюта;
					Если Валюта = ВалютаРегламентированногоУчета Тогда
						ТекСтрока.СуммаРегл = ТекСтрока.Сумма;
					Иначе
						КоэффициентПересчета = РаботаСКурсамиВалютУТ.ПолучитьКоэффициентПересчетаИзВалютыВВалюту(Валюта, ВалютаРегламентированногоУчета, ДокОбъект.Дата);
						ТекСтрока.СуммаРегл = Окр(ТекСтрока.Сумма * КоэффициентПересчета, 2, 1);
					КонецЕсли;
				КонецЕсли;
			КонецЦикла;
			//табличная часть Расчеты с партнерами
		ИначеЕсли ДокОбъект.ТипОперации = Перечисления.ТипыОперацийВводаОстатков.ОстаткиЗадолженностиКлиентов
			ИЛИ ДокОбъект.ТипОперации = Перечисления.ТипыОперацийВводаОстатков.ОстаткиЗадолженностиПередПоставщиками
			ИЛИ ДокОбъект.ТипОперации = Перечисления.ТипыОперацийВводаОстатков.ОстаткиПоАвансамКлиентов
			ИЛИ ДокОбъект.ТипОперации = Перечисления.ТипыОперацийВводаОстатков.ОстаткиПоАвансамПоставщикам Тогда
			Для Каждого ТекСтрока Из ДокОбъект.РасчетыСПартнерами Цикл
				Если ТекСтрока.СуммаРегл = 0 Тогда
					Если ТекСтрока.ВалютаВзаиморасчетов = ВалютаРегламентированногоУчета Тогда
						ТекСтрока.СуммаРегл = ТекСтрока.Сумма;
					Иначе
						КоэффициентПересчета = РаботаСКурсамиВалютУТ.ПолучитьКоэффициентПересчетаИзВалютыВВалюту(ТекСтрока.ВалютаВзаиморасчетов, ВалютаРегламентированногоУчета, ДокОбъект.Дата);
						Текстрока.СуммаРегл = Окр(ТекСтрока.Сумма * КоэффициентПересчета, 2, 1);
					КонецЕсли;
				КонецЕсли;
			КонецЦикла;
			//табличная часть Расчеты между организациями
		ИначеЕсли ДокОбъект.ТипОперации = Перечисления.ТипыОперацийВводаОстатков.ОстаткиРасчетовМеждуОрганизациямиПоАвансам
			ИЛИ ДокОбъект.ТипОперации = Перечисления.ТипыОперацийВводаОстатков.ОстаткиРасчетовМеждуОрганизациямиПоРеализациям Тогда
			Для Каждого ТекСтрока Из ДокОбъект.РасчетыМеждуОрганизациями Цикл
				Если ТекСтрока.СуммаРегл = 0 Тогда
					Если ТекСтрока.ВалютаВзаиморасчетов = ВалютаРегламентированногоУчета Тогда
						ТекСтрока.СуммаРегл = ТекСтрока.Сумма;
					Иначе
						КоэффициентПересчета = РаботаСКурсамиВалютУТ.ПолучитьКоэффициентПересчетаИзВалютыВВалюту(ТекСтрока.ВалютаВзаиморасчетов, ВалютаРегламентированногоУчета, ДокОбъект.Дата);
						Текстрока.СуммаРегл = Окр(ТекСтрока.Сумма * КоэффициентПересчета, 2, 1);
					КонецЕсли;
				КонецЕсли;
			КонецЦикла;
			//табличная часть Расчеты с подотчетниками
		ИначеЕсли ДокОбъект.ТипОперации = Перечисления.ТипыОперацийВводаОстатков.ОстаткиЗадолженностиПодотчетниковПоБезналичнымРасчетам
			ИЛИ ДокОбъект.ТипОперации = Перечисления.ТипыОперацийВводаОстатков.ОстаткиЗадолженностиПодотчетниковПоНаличнымРасчетам Тогда
			Для Каждого ТекСтрока Из ДокОбъект.РасчетыСПодотчетниками Цикл
				Если ТекСтрока.СуммаРегл = 0 Тогда
					Если ТекСтрока.Валюта = ВалютаРегламентированногоУчета Тогда
						ТекСтрока.СуммаРегл = ТекСтрока.Сумма;
					Иначе
						КоэффициентПересчета = РаботаСКурсамиВалютУТ.ПолучитьКоэффициентПересчетаИзВалютыВВалюту(ТекСтрока.Валюта, ВалютаРегламентированногоУчета, ДокОбъект.Дата);
						Текстрока.СуммаРегл = Окр(ТекСтрока.Сумма * КоэффициентПересчета, 2, 1);
					КонецЕсли;
				КонецЕсли;
			КонецЦикла;
			//табличная часть Товары
		ИначеЕсли ДокОбъект.ТипОперации = Перечисления.ТипыОперацийВводаОстатков.ОстаткиСобственныхТоваров
			ИЛИ ДокОбъект.ТипОперации = Перечисления.ТипыОперацийВводаОстатков.ОстаткиСобственныхТоваровНаАдресномСкладе
			ИЛИ ДокОбъект.ТипОперации = Перечисления.ТипыОперацийВводаОстатков.ОстаткиТоваровПереданныхНаКомиссию
			ИЛИ ДокОбъект.ТипОперации = Перечисления.ТипыОперацийВводаОстатков.ОстаткиТоваровПолученныхНаКомиссию
			ИЛИ ДокОбъект.ТипОперации = Перечисления.ТипыОперацийВводаОстатков.ОстаткиТоваровПолученныхНаКомиссиюНаАдресномСкладе Тогда
			Для Каждого ТекСтрока Из ДокОбъект.Товары Цикл
				Если ТекСтрока.СуммаРегл = 0 Тогда
					Если ВалютаУправленческогоУчета = ВалютаРегламентированногоУчета Тогда
						ТекСтрока.СуммаРегл = ТекСтрока.СуммаБезНДС;
					Иначе
						КоэффициентПересчета = РаботаСКурсамиВалютУТ.ПолучитьКоэффициентПересчетаИзВалютыВВалюту(ВалютаУправленческогоУчета, ВалютаРегламентированногоУчета, ДокОбъект.Дата);
						ТекСтрока.СуммаРегл = Окр(ТекСтрока.СуммаБезНДС * КоэффициентПересчета, 2, 1);
					КонецЕсли;
				КонецЕсли;
			КонецЦикла;
		КонецЕсли;
		
		ДокОбъект.ОбменДанными.Загрузка = Истина;
		ДокОбъект.Записать(РежимЗаписиДокумента.Запись);
		
	КонецЦикла;
	
КонецПроцедуры

// Переход на использование ставки НДС в операциях ввода остатков
// Заполняются новые реквизиты: СтавкаНДС, СуммаНДС, НДСРегл
Процедура ЗаполнитьРеквизитыНДСВТаблЧастях() Экспорт
	
	Выборка = Документы.ВводОстатков.Выбрать();
	Пока Выборка.Следующий() Цикл
			
		ДокОбъект = Выборка.Ссылка.ПолучитьОбъект();
		Если НЕ ДокОбъект.Проведен Тогда
			Продолжить;;
		КонецЕсли;
		ВалютаРегламентированногоУчета = Константы.ВалютаРегламентированногоУчета.Получить();
		ВалютаУправленческогоУчета = Константы.ВалютаУправленческогоУчета.Получить();
		
		//табличная часть Товары
		Если ДокОбъект.ТипОперации = Перечисления.ТипыОперацийВводаОстатков.ОстаткиСобственныхТоваров
			ИЛИ ДокОбъект.ТипОперации = Перечисления.ТипыОперацийВводаОстатков.ОстаткиСобственныхТоваровНаАдресномСкладе
			ИЛИ ДокОбъект.ТипОперации = Перечисления.ТипыОперацийВводаОстатков.ОстаткиТоваровПереданныхНаКомиссию
			ИЛИ ДокОбъект.ТипОперации = Перечисления.ТипыОперацийВводаОстатков.ОстаткиТоваровПолученныхНаКомиссию
			ИЛИ ДокОбъект.ТипОперации = Перечисления.ТипыОперацийВводаОстатков.ОстаткиТоваровПолученныхНаКомиссиюНаАдресномСкладе Тогда
			Для Каждого ТекСтрока Из ДокОбъект.Товары Цикл
				ТекСтрока.СтавкаНДС = ТекСтрока.Номенклатура.СтавкаНДС;
				ТекСтрока.СуммаНДС = ТекСтрока.Сумма - ТекСтрока.СуммаБезНДС;
				Если ВалютаУправленческогоУчета = ВалютаРегламентированногоУчета Тогда
					ТекСтрока.НДСРегл = ТекСтрока.СуммаНДС;
				Иначе
					КоэффициентПересчета = РаботаСКурсамиВалютУТ.ПолучитьКоэффициентПересчетаИзВалютыВВалюту(ВалютаУправленческогоУчета, ВалютаРегламентированногоУчета, ДокОбъект.Дата);
					ТекСтрока.НДСРегл = Окр(ТекСтрока.СуммаНДС * КоэффициентПересчета, 2, 1);
				КонецЕсли;
			КонецЦикла;
		КонецЕсли;
		
		ДокОбъект.ОбменДанными.Загрузка = Истина;
		ДокОбъект.Записать(РежимЗаписиДокумента.Запись);
		
	КонецЦикла;

КонецПроцедуры

// Переход на использование упаковок в операциях ввода остатков
// Заполняется новый реквизит КоличествоУпаковок по данным реквизита Количество
Процедура ЗаполнитьКоличествоУпаковокПоКоличеству() Экспорт
	
	Выборка = Документы.ВводОстатков.Выбрать();
	Пока Выборка.Следующий() Цикл
			
		ДокОбъект = Выборка.Ссылка.ПолучитьОбъект();
		Если НЕ ДокОбъект.Проведен Тогда
			Продолжить;;
		КонецЕсли;
		
		//табличная часть Товары
		Если ДокОбъект.ТипОперации = Перечисления.ТипыОперацийВводаОстатков.ОстаткиСобственныхТоваров
			ИЛИ ДокОбъект.ТипОперации = Перечисления.ТипыОперацийВводаОстатков.ОстаткиСобственныхТоваровНаАдресномСкладе
			ИЛИ ДокОбъект.ТипОперации = Перечисления.ТипыОперацийВводаОстатков.ОстаткиТоваровПереданныхНаКомиссию
			ИЛИ ДокОбъект.ТипОперации = Перечисления.ТипыОперацийВводаОстатков.ОстаткиТоваровПолученныхНаКомиссию
			ИЛИ ДокОбъект.ТипОперации = Перечисления.ТипыОперацийВводаОстатков.ОстаткиТоваровПолученныхНаКомиссиюНаАдресномСкладе Тогда
			Для Каждого ТекСтрока Из ДокОбъект.Товары Цикл
				Если ТекСтрока.КоличествоУпаковок = 0 Тогда
					ТекСтрока.КоличествоУпаковок = ТекСтрока.Количество;
				КонецЕсли;
			КонецЦикла;
		КонецЕсли;
		
		ДокОбъект.ОбменДанными.Загрузка = Истина;
		ДокОбъект.Записать(РежимЗаписиДокумента.Запись);
		
	КонецЦикла;
	
КонецПроцедуры

#КонецЕсли