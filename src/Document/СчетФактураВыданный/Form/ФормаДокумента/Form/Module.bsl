
////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	// Подсистема "ЭлектронныеДокументы"
	Если ИмяСобытия = "ОбновитьСостояниеЭД" Тогда
		УстановитьТекстСостоянияЭДНаСервере();
	КонецЕсли;

КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// Обработчик подсистемы "Внешние обработки"
	ДополнительныеОтчетыИОбработки.ПриСозданииНаСервере(ЭтаФорма);
	
	Если Не ЗначениеЗаполнено(Объект.Ссылка) Тогда
		Объект.ДатаВыставления = ?(ЗначениеЗаполнено(Объект.Дата), Объект.Дата, ТекущаяДатаСеанса());
		ПриЧтенииСозданииНаСервере();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗаписью(Отказ, ПараметрыЗаписи)
	
	ТекстСообщения = НСтр("ru = 'Поле ""Дата выставления"" не заполнено'");
	
	Если Выставлен И НЕ ЗначениеЗаполнено(Объект.ДатаВыставления) Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения,,"ДатаВыставления","Объект",Отказ);
	ИначеЕсли НЕ Выставлен Тогда
		Объект.ДатаВыставления = '00010101';
		Объект.ВыставленВЭлектронномВиде = Ложь;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	
	Если ВозвращатьПараметрыПредставления Тогда
		ПараметрыПредставления = ПродажиСервер.ПараметрыПредставленияСчетаФактуры(ДокументОснование, Объект.Организация);
		ТекстСчетФактура       = ПараметрыПредставления.ТекстСчетФактура;
		ТекстСписок            = ПараметрыПредставления.ТекстСписок;
		ГиперссылкаСчетФактура = ПараметрыПредставления.ГиперссылкаСчетФактура;
		РазрешеныИсправления   = ПараметрыПредставления.РазрешеныИсправления;
	КонецЕсли;
	
	// Подсистема "ЭлектронныеДокументы"
	УстановитьТекстСостоянияЭДНаСервере();
	
КонецПроцедуры

&НаКлиенте
Процедура ПриЗакрытии()
	
	Если ВозвращатьПараметрыПредставления Тогда
		ПараметрыПредставления = Новый Структура("ТекстСчетФактура, ТекстСписок, ГиперссылкаСчетФактура, РазрешеныИсправления, Организация",
			ТекстСчетФактура, ТекстСписок, ГиперссылкаСчетФактура, РазрешеныИсправления, Объект.Организация
		);
		ОповеститьОВыборе(ПараметрыПредставления);
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
	// Обработчик механизма "ДатыЗапретаИзменения"
	ДатыЗапретаИзменения.ОбъектПриЧтенииНаСервере(ЭтаФорма, ТекущийОбъект);
	
	ПриЧтенииСозданииНаСервере();
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ ШАПКИ ФОРМЫ

&НаКлиенте
Процедура ДатаПриИзменении(Элемент)
	
	НастроитьВидимостьВалютыКодаОперации(ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура ДатаПриИсправленииПриИзменении(Элемент)
	
	НастроитьВидимостьВалютыКодаОперации(ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура КорректировочныйПриИзменении(Элемент)
	
	Если Объект.Корректировочный Тогда
		Объект.СчетФактураОснование = Неопределено;
		Если Объект.Исправление Тогда
			Объект.Исправление = Ложь;
		КонецЕсли;
	ИначеЕсли Объект.Исправление И НЕ ЗначениеЗаполнено(Объект.СчетФактураОснование) Тогда
		ЗаполнитьСчетФактураОснованиеСервер();
	КонецЕсли;
	
	Объект.Номер = "";
	Объект.НомерИсправления = "";
	
	ЗаполнитьДанныеИсходногоДокумента();
	
	УправлениеЭлементамиФормы(ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура ИсправлениеПриИзменении(Элемент)
	
	Если Объект.Корректировочный Тогда
		Объект.СчетФактураОснование = Неопределено;
	ИначеЕсли Объект.Исправление И НЕ ЗначениеЗаполнено(Объект.СчетФактураОснование) Тогда
		ЗаполнитьСчетФактураОснованиеСервер();
	КонецЕсли;
	
	Объект.Номер = "";
	Объект.НомерИсправления = "";
	
	ЗаполнитьДанныеИсходногоДокумента();
	
	УправлениеЭлементамиФормы(ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура ВыставленПриИзменении(Элемент)
	
	УправлениеЭлементамиФормы(ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура ВыставленВЭлектронномВидеПриИзменении(Элемент)
	
	УправлениеЭлементамиФормы(ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура ПлатежноРасчетныеДокументыСтрокойНажатие(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("Организация", 		 Объект.Организация);
	ПараметрыФормы.Вставить("ДокументОснование", Объект.ДокументОснование);
	ПараметрыФормы.Вставить("АдресВХранилище",	 ПоместитьПлатежноРасчетныеДокументыВХранилище());
	
	НовыйАдресВХранилище = ОткрытьФормуМодально(
		"Документ.СчетФактураВыданный.Форма.ФормаПлатежноРасчетныеДокументы",
		ПараметрыФормы
	);
	
	ПолучитьПлатежноРасчетныеДокументыИзХранилища(НовыйАдресВХранилище);
	
КонецПроцедуры

&НаКлиенте
Процедура СчетФактураОснованиеПриИзменении(Элемент)
	
	Если ЗначениеЗаполнено(Объект.СчетФактураОснование) Тогда
		Объект.Корректировочный = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Объект.СчетФактураОснование, "Корректировочный");
	КонецЕсли;
	
	ЗаполнитьДанныеИсходногоДокумента();
	
	УправлениеЭлементамиФормы(ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура КодВидаОперацииНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ВыбранныйЭлемент = СписокКодовВидовОпераций.ВыбратьЭлемент();
	Если ВыбранныйЭлемент <> Неопределено Тогда
		Объект.КодВидаОперации = ВыбранныйЭлемент.Значение
	КонецЕсли;
	
	Модифицированность = Истина;
	
КонецПроцедуры

&НаКлиенте
Процедура ТекстСчетФактураИсходныйНажатие(Элемент, СтандартнаяОбработка)
	
	ОткрытьИсходныйДокумент(СтандартнаяОбработка);
	
КонецПроцедуры

&НаКлиенте
Процедура СостояниеЭДНажатие(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	ПараметрыОткрытия = Новый Структура;
	ПараметрыОткрытия.Вставить("Уникальность", Объект.Ссылка.УникальныйИдентификатор());
	ПараметрыОткрытия.Вставить("Источник", ЭтаФорма);
	ПараметрыОткрытия.Вставить("Окно", ЭтаФорма.Окно);
	ЭлектронныеДокументыКлиент.ОткрытьДеревоЭД(Объект.Ссылка, ПараметрыОткрытия);
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

////////////////////////////////////////////////////////////////////////////////
// Подсистема "ЭлектронныеДокументы"

&НаСервере
Процедура УстановитьТекстСостоянияЭДНаСервере()
	
	ТекстСостоянияЭД = ЭлектронныеДокументыКлиентСервер.ПолучитьТекстСостоянияЭД(Объект.Ссылка, ЭтаФорма);
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// Прочее

&НаСервере
Процедура ПриЧтенииСозданииНаСервере()
	
	Параметры.Свойство("ДокументОснование", ДокументОснование);
	
	Если Параметры.Свойство("ВозвращатьПараметрыПредставления") Тогда
		ВозвращатьПараметрыПредставления = Параметры.ВозвращатьПараметрыПредставления;
	КонецЕсли;
	
	Если ВозвращатьПараметрыПредставления Тогда
		ПараметрыПредставления = ПродажиСервер.ПараметрыПредставленияСчетаФактуры(ДокументОснование, Объект.Организация);
		ТекстСчетФактура 	   = ПараметрыПредставления.ТекстСчетФактура;
		ТекстСписок 		   = ПараметрыПредставления.ТекстСписок;
		ГиперссылкаСчетФактура = ПараметрыПредставления.ГиперссылкаСчетФактура;
		РазрешеныИсправления   = ПараметрыПредставления.РазрешеныИсправления;
	КонецЕсли;
	
	ДатаНачалаПримененияПостановления1137 = Константы.ДатаНачалаПримененияПостановления1137.Получить();
	
	РеквизитыСчетаФактуры = Документы.СчетФактураВыданный.ИсправляемыйСчетФактураПоОснованию(Объект.Ссылка, Объект.ДокументОснование, Объект.Организация);
	ЕстьСчетаФактурыПоОснованию = РеквизитыСчетаФактуры.Ссылка <> Неопределено;
	
	Выставлен = ЗначениеЗаполнено(Объект.ДатаВыставления);
	
	УправлениеЭлементамиФормы(ЭтаФорма);
	НастроитьВидимостьВалютыКодаОперации(ЭтаФорма);
	
	ВалютаОснованияСчетаФактуры = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Объект.ДокументОснование, "Валюта");
	
	Если ЗначениеЗаполнено(Объект.СтрокаПлатежноРасчетныеДокументы) Тогда
		СтрокаПлатежноРасчетныеДокументы = Объект.СтрокаПлатежноРасчетныеДокументы;
	Иначе
		СтрокаПлатежноРасчетныеДокументы = НСтр("ru='<отсутствуют>'"); 
	КонецЕсли;
	
	Если Объект.Корректировочный И Объект.Исправление Тогда
		ТекстСчетФактураИсходный = ПродажиСервер.ПредставлениеСчетаФактуры(Объект.НомерИсходногоДокумента, Объект.ДатаИсходногоДокумента);
	ИначеЕсли Объект.Корректировочный Тогда
		ТекстСчетФактураИсходный = ПродажиСервер.ПредставлениеСчетаФактуры(Объект.НомерИсходногоДокумента, Объект.ДатаИсходногоДокумента);
	Иначе
		ТекстСчетФактураИсходный = "";
	КонецЕсли;
	
	Элементы.СтрокаПлатежноРасчетныеДокументы.Гиперссылка = ПравоДоступа("Изменение", Метаданные.Документы.СчетФактураВыданный);
	
	Документы.СчетФактураВыданный.СчетаФактурыПоОснованию(Объект.ДокументОснование, Объект.Организация, РеквизитыСчетаФактуры);
	Элементы.Корректировочный.Доступность = РеквизитыСчетаФактуры.Ссылка = Неопределено ИЛИ РеквизитыСчетаФактуры.Ссылка = Объект.Ссылка;
	
	СписокКодовВидовОпераций = Документы.СчетФактураВыданный.СписокКодовВидовОпераций();
	
	// Подсистема "ЭлектронныеДокументы"
	УстановитьТекстСостоянияЭДНаСервере();
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура УправлениеЭлементамиФормы(Форма)
	
	МассивИменЭлементов = Новый Массив;
	МассивИменЭлементов.Добавить("ГруппаКорректировочный");
	МассивИменЭлементов.Добавить("Исправление");
	МассивИменЭлементов.Добавить("СчетФактураОснование");
	ОбщегоНазначенияУТКлиентСервер.УстановитьСвойствоЭлементовФормы(Форма.Элементы, МассивИменЭлементов, "Доступность",
		Форма.
		ЕстьСчетаФактурыПоОснованию
	);
	
	МассивИменЭлементов = Новый Массив;
	МассивИменЭлементов.Добавить("ГруппаКорректировочный");
	ОбщегоНазначенияУТКлиентСервер.УстановитьСвойствоЭлементовФормы(Форма.Элементы, МассивИменЭлементов, "Видимость",
		ТипЗнч(Форма.Объект.ДокументОснование) = Тип("ДокументСсылка.КорректировкаРеализации")
	);
	
	МассивИменЭлементов = Новый Массив;
	МассивИменЭлементов.Добавить("ТекстСчетФактураИсходный");
	ОбщегоНазначенияУТКлиентСервер.УстановитьСвойствоЭлементовФормы(Форма.Элементы, МассивИменЭлементов, "Доступность",
		Форма.Объект.Корректировочный
	);
	
	МассивИменЭлементов = Новый Массив;
	МассивИменЭлементов.Добавить("Исправление");
	МассивИменЭлементов.Добавить("СчетФактураОснование");
	ОбщегоНазначенияУТКлиентСервер.УстановитьСвойствоЭлементовФормы(Форма.Элементы, МассивИменЭлементов, "Видимость",
		ТипЗнч(Форма.Объект.ДокументОснование) = Тип("ДокументСсылка.КорректировкаРеализации")
		ИЛИ Форма.Объект.Исправление
	);
	
	МассивИменЭлементов = Новый Массив;
	МассивИменЭлементов.Добавить("СчетФактураОснование");
	ОбщегоНазначенияУТКлиентСервер.УстановитьСвойствоЭлементовФормы(Форма.Элементы, МассивИменЭлементов, "Доступность", Форма.Объект.Исправление);
	
	Если Форма.Объект.Исправление Тогда
		Форма.Элементы.ГруппаСтраницыНомерДата.ТекущаяСтраница = Форма.Элементы.ГруппаНомерДатаПриИсправлении;
	Иначе
		Форма.Элементы.ГруппаСтраницыНомерДата.ТекущаяСтраница = Форма.Элементы.ГруппаНомерДата;
	КонецЕсли;
	
	МассивИменЭлементов = Новый Массив;
	МассивИменЭлементов.Добавить("Покупатель");
	ОбщегоНазначенияУТКлиентСервер.УстановитьСвойствоЭлементовФормы(Форма.Элементы, МассивИменЭлементов, "Видимость",
		Форма.Объект.ТипСчетаФактуры = ПредопределенноеЗначение("Перечисление.ТипыВыданныхСчетовФактур.ВыставляемыйКомиссионеру")
	);
	
	ЭтоНовый = НЕ ЗначениеЗаполнено(Форма.Объект.Ссылка);
	
	МассивИменЭлементов = Новый Массив;
	МассивИменЭлементов.Добавить("Номер");
	МассивИменЭлементов.Добавить("Дата");
	МассивИменЭлементов.Добавить("НомерПриИсправлении");
	МассивИменЭлементов.Добавить("ДатаИсходногоПриИсправлении");
	МассивИменЭлементов.Добавить("НомерИсправленияПриИсправлении");
	МассивИменЭлементов.Добавить("ДатаПриИсправлении");
	МассивИменЭлементов.Добавить("СчетФактураОснование");
	МассивИменЭлементов.Добавить("Организация");
	МассивИменЭлементов.Добавить("Валюта");
	МассивИменЭлементов.Добавить("КодВидаОперации");
	МассивИменЭлементов.Добавить("СтрокаПлатежноРасчетныеДокументы");
	ОбщегоНазначенияУТКлиентСервер.УстановитьСвойствоЭлементовФормы(Форма.Элементы, МассивИменЭлементов, "ТолькоПросмотр", Форма.Выставлен И НЕ ЭтоНовый);
	
	ОбщегоНазначенияУТКлиентСервер.УстановитьСвойствоЭлементаФормы(Форма.Элементы, "ВыставленВЭлектронномВиде", "Доступность", Форма.Выставлен);
	ОбщегоНазначенияУТКлиентСервер.УстановитьСвойствоЭлементаФормы(Форма.Элементы, "ДатаВыставления", "Доступность", Форма.Выставлен);
	ОбщегоНазначенияУТКлиентСервер.УстановитьСвойствоЭлементаФормы(Форма.Элементы, "ДатаВыставления", "ТолькоПросмотр", Форма.Объект.ВыставленВЭлектронномВиде);
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура НастроитьВидимостьВалютыКодаОперации(Форма)
	
	Если ЗначениеЗаполнено(Форма.Объект.Дата) И Форма.Объект.Дата < Форма.ДатаНачалаПримененияПостановления1137 Тогда
		Форма.Элементы.Валюта.АвтоОтметкаНезаполненного = Ложь;
		Форма.Элементы.Валюта.ОтметкаНезаполненного = Ложь;
		Форма.Элементы.КодВидаОперации.АвтоОтметкаНезаполненного = Ложь;
		Форма.Элементы.КодВидаОперации.ОтметкаНезаполненного = Ложь;
	Иначе
		Форма.Элементы.Валюта.АвтоОтметкаНезаполненного = Истина;
		Форма.Элементы.КодВидаОперации.АвтоОтметкаНезаполненного = Истина;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьСчетФактураОснованиеСервер()
	
	РеквизитыСчетаФактуры = Документы.СчетФактураВыданный.ИсправляемыйСчетФактураПоОснованию(Объект.Ссылка, Объект.ДокументОснование, Объект.Организация);
	Если ЗначениеЗаполнено(РеквизитыСчетаФактуры.Ссылка) Тогда
		Объект.СчетФактураОснование = РеквизитыСчетаФактуры.Ссылка;
	КонецЕсли;
	Если ЗначениеЗаполнено(РеквизитыСчетаФактуры.Валюта) Тогда
		Объект.Валюта = РеквизитыСчетаФактуры.Валюта;
	КонецЕсли;
	Если ЗначениеЗаполнено(РеквизитыСчетаФактуры.Корректировочный) Тогда
		Объект.Корректировочный = РеквизитыСчетаФактуры.Корректировочный;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьДанныеИсходногоДокумента()
	
	Если НЕ Объект.Корректировочный Тогда
		Объект.ИсходныйДокумент = Документы.СчетФактураВыданный.ПустаяСсылка();
		Объект.НомерИсходногоДокумента = "";
		Объект.ДатаИсходногоДокумента = '00010101';
		Объект.НомерИсправленияИсходногоДокумента = "";
		Объект.ДатаИсправленияИсходногоДокумента = '00010101';
	Иначе
		ДанныеИсходноДокумента = Документы.СчетФактураВыданный.ДанныеИсходногоДокумента(Объект.ДокументОснование);
		ЗаполнитьЗначенияСвойств(Объект, ДанныеИсходноДокумента);
	КонецЕсли;
	
	Если Объект.Корректировочный И Объект.Исправление Тогда
		ТекстСчетФактураИсходный = ПродажиСервер.ПредставлениеСчетаФактуры(Объект.НомерИсходногоДокумента, Объект.ДатаИсходногоДокумента);
	ИначеЕсли Объект.Корректировочный Тогда
		ТекстСчетФактураИсходный = ПродажиСервер.ПредставлениеСчетаФактуры(Объект.НомерИсходногоДокумента, Объект.ДатаИсходногоДокумента);
	Иначе
		ТекстСчетФактураИсходный = "";
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Функция ПоместитьПлатежноРасчетныеДокументыВХранилище()
	
	Возврат ПоместитьВоВременноеХранилище(Объект.ПлатежноРасчетныеДокументы.Выгрузить());
	
КонецФункции

&НаСервере
Процедура ПолучитьПлатежноРасчетныеДокументыИзХранилища(НовыйАдресВХранилище)
	
	Если ЗначениеЗаполнено(НовыйАдресВХранилище) Тогда
		Объект.ПлатежноРасчетныеДокументы.Загрузить(ПолучитьИзВременногоХранилища(НовыйАдресВХранилище));
		СформироватьСтрокуРасчетноПлатежныхДокументов();
		Модифицированность = Истина;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура СформироватьСтрокуРасчетноПлатежныхДокументов()
	
	СтрокаНомеровИДата = "";
	Для Каждого СтрокаТаблицы Из Объект.ПлатежноРасчетныеДокументы Цикл
		СтрокаНомеровИДата = СтрокаНомеровИДата + ?(ПустаяСтрока(СтрокаНомеровИДата), "", ", ")
			+ СтрокаТаблицы.НомерПлатежноРасчетногоДокумента 
			+ " от " + Формат(СтрокаТаблицы.ДатаПлатежноРасчетногоДокумента, "ДФ=dd.MM.yyyy");
	КонецЦикла; 
		
	Если Объект.СтрокаПлатежноРасчетныеДокументы <> СтрокаНомеровИДата Тогда
		Объект.СтрокаПлатежноРасчетныеДокументы = СтрокаНомеровИДата;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Объект.СтрокаПлатежноРасчетныеДокументы) Тогда
		СтрокаПлатежноРасчетныеДокументы = Объект.СтрокаПлатежноРасчетныеДокументы;
	Иначе
		СтрокаПлатежноРасчетныеДокументы = НСтр("ru='<отсутствуют>'"); 
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьИсходныйДокумент(СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ОткрытьЗначение(Объект.ИсходныйДокумент);
	
КонецПроцедуры
