
////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	// ПодключаемоеОборудование
	Если Источник = "ПодключаемоеОборудование" И ВводДоступен() Тогда
		Если ИмяСобытия = "ScanData" Тогда
			ОбработатьШтрихкоды(МенеджерОборудованияКлиент.ПреобразоватьДанныеСоСканераВСтруктуру(Параметр));
		КонецЕсли;
	КонецЕсли;
	// Конец ПодключаемоеОборудование
	
	// Подсистема "ЭлектронныеДокументы"
	Если ИмяСобытия = "ОбновитьСостояниеЭД" Тогда
		Элементы.Список.Обновить();
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	МенеджерОборудованияКлиент.ПодключитьОборудованиеПриОткрытииФормы(ЭтаФорма, "СканерШтрихкода");
	
КонецПроцедуры

&НаКлиенте
Процедура ПриЗакрытии()
	
	МенеджерОборудованияКлиент.ОтключитьОборудованиеПриЗакрытииФормы(ЭтаФорма);
	
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ЗаполнитьЗначенияСвойств(ЭтаФорма, Параметры, "
		|НомерИсходногоДокумента,
		|ДатаИсходногоДокумента,
		|НомерИсправленияИсходногоДокумента,
		|ДатаИсправленияИсходногоДокумента"
	);
	
	ОбщегоНазначенияУТ.НастроитьПодключаемоеОборудование(ЭтаФорма);
	
	// Обработчик подсистемы "Дополнительные отчеты и обработки"
	ДополнительныеОтчетыИОбработки.ПриСозданииНаСервере(ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытием(Отказ, СтандартнаяОбработка)
	
	Если Модифицированность Тогда
		
		Элементы.ГруппаСтраницы.ТекущаяСтраница = Элементы.ГруппаВводВручную;
		
		Ответ = Вопрос("Данные были изменены. Сохранить изменения?", РежимДиалогаВопрос.ДаНетОтмена, , КодВозвратаДиалога.Да);
		Если Ответ = КодВозвратаДиалога.Да Тогда
			ОповеститьДаннымиСчетаФактуры();
		ИначеЕсли Ответ = КодВозвратаДиалога.Отмена Тогда
			Отказ = Истина;
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

///////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ ШАПКИ ФОРМЫ

&НаКлиенте
Процедура СписокВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	ОповеститьДаннымиСчетаФактуры(СтандартнаяОбработка);
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

////////////////////////////////////////////////////////////////////////////////
// Штрихкоды и торговое оборудование

&НаКлиенте
Функция ПолучитьСсылкуНаЭлементСпискаПоШтрихкоду(Штрихкод)
	
	Менеджеры = Новый Массив();
	Менеджеры.Добавить(ПредопределенноеЗначение("Документ.СчетФактураВыданный.ПустаяСсылка"));
	Возврат ШтрихкодированиеПечатныхФормКлиент.ПолучитьСсылкуПоШтрихкодуТабличногоДокумента(Штрихкод, Менеджеры);
	
КонецФункции

&НаКлиенте
Процедура ОбработатьШтрихкоды(Данные)
	
	МассивСсылок = ПолучитьСсылкуНаЭлементСпискаПоШтрихкоду(Данные.Штрихкод);
	Если МассивСсылок.Количество() > 0 Тогда
		Элементы.Список.ТекущаяСтрока = МассивСсылок[0];
		ОткрытьЗначение(МассивСсылок[0]);
	Иначе
		ШтрихкодированиеПечатныхФормКлиент.ОбъектНеНайден(Данные.Штрихкод);
	КонецЕсли;
	
КонецПроцедуры

///////////////////////////////////////////////////////////////////////////////
// Прочее

&НаКлиенте
Процедура ВыбратьДокумент(Команда)
	
	ОповеститьДаннымиСчетаФактуры();
	
КонецПроцедуры

&НаКлиенте
Процедура ОповеститьДаннымиСчетаФактуры(СтандартнаяОбработка = Ложь)
	
	СтандартнаяОбработка = Ложь;
	
	РезультатВыбора = Новый Структура("
		|НомерИсходногоДокумента,
		|ДатаИсходногоДокумента,
		|НомерИсправленияИсходногоДокумента,
		|ДатаИсправленияИсходногоДокумента"
	);
	
	Если Элементы.ГруппаСтраницы.ТекущаяСтраница = Элементы.ГруппаВводВручную Тогда
		Если НЕ ОбязательныеПоляЗаполнены() Тогда
			Возврат;
		КонецЕсли;
		ЗаполнитьЗначенияСвойств(РезультатВыбора, ЭтаФорма);
	Иначе
		ЗаполнитьЗначенияСвойств(РезультатВыбора, ПолучитьДанныеСчетаФактуры(Элементы.Список.ТекущаяСтрока));
	КонецЕсли;
	
	Модифицированность = Ложь;
	
	ОповеститьОВыборе(РезультатВыбора);
	
КонецПроцедуры

&НаКлиенте
Функция ОбязательныеПоляЗаполнены()
	
	Отказ = Ложь;
	
	Если НЕ ЗначениеЗаполнено(НомерИсходногоДокумента) Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
			НСтр("ru='Поле ""Номер исходного документа"" не заполнено'"),
			,
			"НомерИсходногоДокумента",
			,
			Отказ
		);
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(ДатаИсходногоДокумента) Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
			НСтр("ru='Поле ""Дата исходного документа"" не заполнено'"),
			,
			"ДатаИсходногоДокумента",
			,
			Отказ
		);
	КонецЕсли;
	
	Возврат НЕ Отказ;
	
КонецФункции

&НаСервере
Функция ПолучитьДанныеСчетаФактуры(СчетФактура)
	
	ИменаРеквизитов = Новый Структура;
	ИменаРеквизитов.Вставить("НомерИсходногоДокумента", "Номер");
	ИменаРеквизитов.Вставить("ДатаИсходногоДокумента", "Дата");
	ИменаРеквизитов.Вставить("НомерИсправленияИсходногоДокумента", "НомерИсправления");
	ИменаРеквизитов.Вставить("ДатаИсправленияИсходногоДокумента", "ДатаИсправления");
	
	Возврат ОбщегоНазначения.ЗначенияРеквизитовОбъекта(СчетФактура, ИменаРеквизитов);
	
КонецФункции
