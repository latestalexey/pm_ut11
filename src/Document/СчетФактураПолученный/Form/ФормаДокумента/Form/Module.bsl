
&НаКлиенте
Перем ПараметрыПредставления;

///////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// Обработчик подсистемы "Внешние обработки"
	ДополнительныеОтчетыИОбработки.ПриСозданииНаСервере(ЭтаФорма);
	
	Если Не ЗначениеЗаполнено(Объект.Ссылка) Тогда
		ПриЧтенииСозданииНаСервере();
	КонецЕсли;
	
	// Подсистема "ЭлектронныеДокументы"
	УстановитьТекстСостоянияЭДНаСервере();
	
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
	// Обработчик механизма "ДатыЗапретаИзменения"
	ДатыЗапретаИзменения.ОбъектПриЧтенииНаСервере(ЭтаФорма, ТекущийОбъект);
	
	ПриЧтенииСозданииНаСервере();
	
КонецПроцедуры

&НаСервере
Процедура ОбработкаПроверкиЗаполненияНаСервере(Отказ, ПроверяемыеРеквизиты)
	
	ТекстСообщенияДатаПолучения = НСтр("ru = 'Поле ""Дата получения"" не заполнено'");
	
	Если Получен И НЕ ЗначениеЗаполнено(Объект.ДатаПолучения) Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщенияДатаПолучения,,"ДатаПолучения","Объект",Отказ);
	КонецЕсли;
	
	МассивНепроверяемыхРеквизитов = Новый Массив;
	
	Если Объект.ТипСчетаФактуры <> Перечисления.ТипыПолученныхСчетовФактур.ВыставленныйКомитентом
	 ИЛИ Булево(НесколькоСтавокНДС) Тогда
		
		МассивНепроверяемыхРеквизитов.Добавить("СуммаСНДС");
		МассивНепроверяемыхРеквизитов.Добавить("СтавкаНДС");
		
	КонецЕсли;
	
	ОбщегоНазначения.УдалитьНепроверяемыеРеквизитыИзМассива(ПроверяемыеРеквизиты, МассивНепроверяемыхРеквизитов);
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗаписью(Отказ, ПараметрыЗаписи)
	
	Если НЕ Получен Тогда
		Объект.ДатаПолучения = '00010101';
		Объект.ПолученВЭлектронномВиде = Ложь;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПриЗаписиНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	// Подсистема "ЭлектронныеДокументы"
	УстановитьТекстСостоянияЭДНаСервере();
	
КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	
	ПараметрыПредставления = ЗакупкиСервер.ПараметрыПредставленияСчетаФактуры(ТекущийДокументОснование, Объект.Организация);
	ТекстСчетФактура       = ПараметрыПредставления.ТекстСчетФактура;
	ТекстСписок            = ПараметрыПредставления.ТекстСписок;
	ГиперссылкаСчетФактура = ПараметрыПредставления.ГиперссылкаСчетФактура;
	РазрешенВводНового	   = ПараметрыПредставления.РазрешенВводНового;
	РазрешеныИсправления   = ПараметрыПредставления.РазрешеныИсправления;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриЗакрытии()
	
	ПараметрыПредставления = Новый Структура("ТекстСчетФактура, ТекстСписок, ГиперссылкаСчетФактура, РазрешенВводНового, РазрешеныИсправления",
		ТекстСчетФактура, ТекстСписок, ГиперссылкаСчетФактура, РазрешенВводНового, РазрешеныИсправления
	);
	ОповеститьОВыборе(ПараметрыПредставления);
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаВыбора(ВыбранноеЗначение, ИсточникВыбора)
	
	Если ИсточникВыбора.ИмяФормы = "Документ.СчетФактураПолученный.Форма.ФормаДокументыОснования"
	 И ТипЗнч(ВыбранноеЗначение) = Тип("СписокЗначений") Тогда
		
		Объект.ДокументыОснования.Очистить();
		Для Каждого СтрокаСписка Из ВыбранноеЗначение Цикл
			Если СтрокаСписка.Значение.Пустая() Тогда
				Продолжить;
			КонецЕсли; 
			СтрокаТаблицы = Объект.ДокументыОснования.Добавить();
			СтрокаТаблицы.ДокументОснование = СтрокаСписка.Значение;
		КонецЦикла;
		
		УправлениеЭлементамиФормы(ЭтаФорма);
		
	ИначеЕсли ИсточникВыбора.ИмяФормы = "Документ.СчетФактураПолученный.Форма.ФормаВсегоПоДокументу" Тогда
		
		ПолучитьВсегоПоДокументуИзХранилища(ВыбранноеЗначение);
		
	ИначеЕсли ТипЗнч(ВыбранноеЗначение) = Тип("Структура") Тогда
		
		ЗаполнитьЗначенияСвойств(Объект, ВыбранноеЗначение);
		
		УправлениеЭлементамиФормы(ЭтаФорма);
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	// Подсистема "ЭлектронныеДокументы"
	Если ИмяСобытия = "ОбновитьСостояниеЭД" Тогда
		УстановитьТекстСостоянияЭДНаСервере();
	КонецЕсли;

КонецПроцедуры

///////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ ШАПКИ ФОРМЫ

&НаКлиенте
Процедура НадписьДобавитьДокументОснованиеНажатие(Элемент)
	
	ОткрытьСписокДокументовОснований();
	
КонецПроцедуры

&НаКлиенте
Процедура ТекстДокументыОснованияНажатие(Элемент, СтандартнаяОбработка)
	
	ОткрытьСписокДокументовОснований(СтандартнаяОбработка);
	
КонецПроцедуры

&НаКлиенте
Процедура НадписьДокументОснованиеНеУказанГиперссылкаНажатие(Элемент)
	
	ОткрытьСписокДокументовОснований();
	
КонецПроцедуры

&НаКлиенте
Процедура КорректировочныйПриИзменении(Элемент)
	
	Объект.Номер = "";
	Объект.Дата = '00010101';
	
	Если Объект.Корректировочный Тогда
		
		ЗаполнитьИсходныйСчетФактуруПоУмолчанию();
		
		Если Объект.Исправление Тогда
			Объект.Исправление = Ложь;
		КонецЕсли;
		
	КонецЕсли;
	
	УправлениеЭлементамиФормы(ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура ТекстСчетФактураИсходныйНажатие(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	Отбор = Новый Структура;
	Отбор.Вставить("Корректировочный", Ложь);
	Отбор.Вставить("Организация", Объект.Организация);
	Отбор.Вставить("Проведен", Истина);
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("Отбор",                              Отбор);
	ПараметрыФормы.Вставить("НомерИсходногоДокумента",            Объект.НомерИсходногоДокумента);
	ПараметрыФормы.Вставить("ДатаИсходногоДокумента",             Объект.ДатаИсходногоДокумента);
	ПараметрыФормы.Вставить("НомерИсправленияИсходногоДокумента", Объект.НомерИсправленияИсходногоДокумента);
	ПараметрыФормы.Вставить("ДатаИсправленияИсходногоДокумента",  Объект.ДатаИсправленияИсходногоДокумента);
	
	ОткрытьФормуМодально("Документ.СчетФактураПолученный.Форма.ФормаВыбораВводВручную",
		ПараметрыФормы,
		ЭтаФорма
	);
	
КонецПроцедуры

&НаКлиенте
Процедура ДатаПриИзменении(Элемент)
	
	НастроитьВидимостьВалютыКодаОперации(ЭтаФорма);
	ЗаполнитьДатуПолучения();
	
КонецПроцедуры

&НаКлиенте
Процедура ИсправлениеПриИзменении(Элемент)
	
	УправлениеЭлементамиФормы(ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура ДатаИсправленияПриИзменении(Элемент)
	
	ЗаполнитьДатуПолучения();
	
КонецПроцедуры

&НаКлиенте
Процедура ТипСчетаФактурыПриИзменении(Элемент)
	
	УправлениеЭлементамиФормы(ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура ПолученПриИзменении(Элемент)
	
	Модифицированность = Истина;
	
	НастроитьОтображениеРеквизитовПолучен(ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура КодВидаОперацииНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ВыбранныйЭлемент = СписокКодовВидовОпераций.ВыбратьЭлемент();
	Если ВыбранныйЭлемент <> Неопределено Тогда
		Объект.КодВидаОперации = ВыбранныйЭлемент.Значение
	КонецЕсли;
	
	Модифицированность = Истина;
	
КонецПроцедуры

&НаКлиенте
Процедура НесколькоСтавокНДСПоОднойСтавкеПриИзменении(Элемент)
	
	Если Объект.ВсегоПоДокументу.Количество() > 1 Тогда
		Ответ = Вопрос(НСтр("ru='Суммы документа будут очищены. Продолжить?'"), РежимДиалогаВопрос.ДаНет);
		Если Ответ = КодВозвратаДиалога.Да Тогда
			Объект.ВсегоПоДокументу.Очистить();
		КонецЕсли;
	КонецЕсли;
	
	УправлениеЭлементамиФормы(ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура НесколькоСтавокНДСПоНесколькимСтавкамПриИзменении(Элемент)
	
	УправлениеЭлементамиФормы(ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура СуммаСНДСПриИзменении(Элемент)
	
	ТекПроцентНДС = ЦенообразованиеКлиентСервер.ПолучитьСтавкуНДСЧислом(СтавкаНДС);
	СуммаНДС = ЦенообразованиеКлиентСервер.РассчитатьСуммуНДС(СуммаСНДС, ТекПроцентНДС, Истина);
	
	Если Объект.ВсегоПоДокументу.Количество() = 0 Тогда
		Объект.ВсегоПоДокументу.Добавить();
	КонецЕсли;
	
	Объект.ВсегоПоДокументу[0].СуммаСНДС = СуммаСНДС;
	Объект.ВсегоПоДокументу[0].СтавкаНДС = СтавкаНДС;
	Объект.ВсегоПоДокументу[0].СуммаНДС  = СуммаНДС;
	
КонецПроцедуры

&НаКлиенте
Процедура СтавкаНДСПриИзменении(Элемент)
	
	ТекПроцентНДС = ЦенообразованиеКлиентСервер.ПолучитьСтавкуНДСЧислом(СтавкаНДС);
	СуммаНДС = ЦенообразованиеКлиентСервер.РассчитатьСуммуНДС(СуммаСНДС, ТекПроцентНДС, Истина);
	
	Если Объект.ВсегоПоДокументу.Количество() = 0 Тогда
		Объект.ВсегоПоДокументу.Добавить();
	КонецЕсли;
	
	Объект.ВсегоПоДокументу[0].СуммаСНДС = СуммаСНДС;
	Объект.ВсегоПоДокументу[0].СтавкаНДС = СтавкаНДС;
	Объект.ВсегоПоДокументу[0].СуммаНДС  = СуммаНДС;
	
КонецПроцедуры

&НаКлиенте
Процедура СуммаНДСПриИзменении(Элемент)
	
	Если Объект.ВсегоПоДокументу.Количество() = 0 Тогда
		Объект.ВсегоПоДокументу.Добавить();
	КонецЕсли;
	
	Объект.ВсегоПоДокументу[0].СуммаСНДС = СуммаСНДС;
	Объект.ВсегоПоДокументу[0].СтавкаНДС = СтавкаНДС;
	Объект.ВсегоПоДокументу[0].СуммаНДС  = СуммаНДС;
	
КонецПроцедуры

&НаКлиенте
Процедура ТекстПоНесколькимСтавкамНажатие(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("АдресТаблицыВХранилище", ПоместитьВсегоПоДокументуВХранилище());
	
	ОткрытьФормуМодально("Документ.СчетФактураПолученный.Форма.ФормаВсегоПоДокументу",
		ПараметрыФормы,
		ЭтаФорма
	);
	
КонецПроцедуры

&НаКлиенте
Процедура СостояниеЭДНажатие(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	ПараметрыОткрытия = Новый Структура;
	ПараметрыОткрытия.Вставить("Уникальность", Объект.Ссылка.УникальныйИдентификатор());
	ПараметрыОткрытия.Вставить("Источник", ЭтаФорма);
	ПараметрыОткрытия.Вставить("Окно", ЭтаФорма.Окно);
	ЭлектронныеДокументыКлиент.ОткрытьДеревоЭД(Объект.Ссылка, ПараметрыОткрытия);
	
КонецПроцедуры

///////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

////////////////////////////////////////////////////////////////////////////////
// Подсистема "ЭлектронныеДокументы"

&НаСервере
Процедура УстановитьТекстСостоянияЭДНаСервере()
	
	ТекстСостоянияЭД = ЭлектронныеДокументыКлиентСервер.ПолучитьТекстСостоянияЭД(Объект.Ссылка, ЭтаФорма);
	
КонецПроцедуры

///////////////////////////////////////////////////////////////////////////////
// Прочее

&НаСервере
Процедура ПриЧтенииСозданииНаСервере()
	
	Перем РеквизитыСчетаФактуры;
	
	Если Параметры.Свойство("ДокументОснование") Тогда
		ТекущийДокументОснование = Параметры.ДокументОснование;
		ДокументОснование        = Параметры.ДокументОснование;
	КонецЕсли;
	
	ПараметрыПредставления = ЗакупкиСервер.ПараметрыПредставленияСчетаФактуры(ТекущийДокументОснование, Объект.Организация);
	ТекстСчетФактура       = ПараметрыПредставления.ТекстСчетФактура;
	ТекстСписок            = ПараметрыПредставления.ТекстСписок;
	ГиперссылкаСчетФактура = ПараметрыПредставления.ГиперссылкаСчетФактура;
	РазрешенВводНового	   = ПараметрыПредставления.РазрешенВводНового;
	РазрешеныИсправления   = ПараметрыПредставления.РазрешеныИсправления;
	
	ДатаНачалаПримененияПостановления1137 = Константы.ДатаНачалаПримененияПостановления1137.Получить();
	
	ЕстьКорректировкиПоступлений = ЕстьКорректировкиПоступлений(Объект.ДокументыОснования);
	
	НесколькоСтавокНДС = Объект.ВсегоПоДокументу.Количество() > 1;
	
	УправлениеЭлементамиФормы(ЭтаФорма);
	НастроитьВидимостьВалютыКодаОперации(ЭтаФорма);
	
	Получен = ЗначениеЗаполнено(Объект.ДатаПолучения);
	НастроитьОтображениеРеквизитовПолучен(ЭтаФорма);
	
	Если Объект.ДокументыОснования.Количество() > 0 И ЗначениеЗаполнено(Объект.ДокументыОснования[0].ДокументОснование) Тогда
		ВалютаОснованияСчетаФактуры = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Объект.ДокументыОснования[0].ДокументОснование, "Валюта");
	КонецЕсли;
	
	Документы.СчетФактураПолученный.СчетаФактурыПоОснованию(ДокументОснование, Объект.Организация, РеквизитыСчетаФактуры);
	Элементы.Корректировочный.Доступность = РеквизитыСчетаФактуры.Ссылка = Неопределено ИЛИ РеквизитыСчетаФактуры.Ссылка = Объект.Ссылка;
	
	СписокКодовВидовОпераций = Документы.СчетФактураПолученный.СписокКодовВидовОпераций();
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Функция ЕстьКорректировкиПоступлений(ТаблицаОснований)
	
	ЕстьКорректировкиПоступлений = Ложь;
	Для Каждого Строка Из ТаблицаОснований Цикл
		Если ТипЗнч(Строка.ДокументОснование) = Тип("ДокументСсылка.КорректировкаПоступления") Тогда
			ЕстьКорректировкиПоступлений = Истина;
			Прервать;
		КонецЕсли;
	КонецЦикла;
	
	Возврат ЕстьКорректировкиПоступлений;
	
КонецФункции

&НаКлиентеНаСервереБезКонтекста
Процедура УправлениеЭлементамиФормы(Форма)
	
	МассивИменЭлементов = Новый Массив;
	МассивИменЭлементов.Добавить("ГруппаКорректировочный");
	ОбщегоНазначенияУТКлиентСервер.УстановитьСвойствоЭлементовФормы(Форма.Элементы, МассивИменЭлементов, "Видимость",
		Форма.ЕстьКорректировкиПоступлений
	);
	
	МассивИменЭлементов = Новый Массив;
	МассивИменЭлементов.Добавить("ТекстСчетФактураИсходный");
	ОбщегоНазначенияУТКлиентСервер.УстановитьСвойствоЭлементовФормы(Форма.Элементы, МассивИменЭлементов, "Доступность",
		Форма.Объект.Корректировочный
	);
	
	МассивИменЭлементов = Новый Массив;
	МассивИменЭлементов.Добавить("ГруппаНомерДатаИсправления");
	ОбщегоНазначенияУТКлиентСервер.УстановитьСвойствоЭлементовФормы(Форма.Элементы, МассивИменЭлементов, "Доступность",
		Форма.Объект.Исправление
	);
	
	МассивИменЭлементов = Новый Массив;
	МассивИменЭлементов.Добавить("Покупатель");
	МассивИменЭлементов.Добавить("ГруппаВсегоПоДокументу");
	ОбщегоНазначенияУТКлиентСервер.УстановитьСвойствоЭлементовФормы(Форма.Элементы, МассивИменЭлементов, "Видимость",
		Форма.Объект.ТипСчетаФактуры = ПредопределенноеЗначение("Перечисление.ТипыПолученныхСчетовФактур.ВыставленныйКомитентом")
	);
	
	// ГруппаДокументыОснования
	Если Форма.Объект.ДокументыОснования.Количество() = 0 Тогда
		Форма.Элементы.СтраницыДокументыОснования.ТекущаяСтраница = Форма.Элементы.СтраницаДокументОснованиеНеУказан;
		Форма.ДокументОснование = Неопределено;
	ИначеЕсли Форма.Объект.ДокументыОснования.Количество() > 1 Тогда
		Форма.Элементы.СтраницыДокументыОснования.ТекущаяСтраница = Форма.Элементы.СтраницаДокументыОснования;
		Форма.ТекстДокументыОснования = "";
		Для Каждого СтрокаТаблицы Из Форма.Объект.ДокументыОснования Цикл
			Форма.ТекстДокументыОснования = Форма.ТекстДокументыОснования + ?(Форма.ТекстДокументыОснования="","",", ") + СтрокаТаблицы.ДокументОснование;
		КонецЦикла;
	Иначе
		Форма.Элементы.СтраницыДокументыОснования.ТекущаяСтраница = Форма.Элементы.СтраницаДокументОснование;
		Если Форма.Объект.ДокументыОснования.Количество() > 0 Тогда
			Форма.ДокументОснование = Форма.Объект.ДокументыОснования[0].ДокументОснование;
		Иначе
			Форма.ДокументОснование = Неопределено;
		КонецЕсли;
	КонецЕсли;
	
	// ТекстСчетФактураИсходный
	Если ЗначениеЗаполнено(Форма.Объект.НомерИсходногоДокумента) ИЛИ ЗначениеЗаполнено(Форма.Объект.ДатаИсходногоДокумента) Тогда
		Форма.ТекстСчетФактураИсходный = "N " + СокрЛП(Форма.Объект.НомерИсходногоДокумента) + НСтр("ru=' от '")  + Формат(Форма.Объект.ДатаИсходногоДокумента, "ДФ=dd.MM.yyyy") + " г.";
		Если ЗначениеЗаполнено(Форма.Объект.НомерИсправленияИсходногоДокумента) ИЛИ ЗначениеЗаполнено(Форма.Объект.ДатаИсправленияИсходногоДокумента) Тогда
			Форма.ТекстСчетФактураИсходный = Форма.ТекстСчетФактураИсходный
				+ НСтр("ru=' с учетом исправления N '") + СокрЛП(Форма.Объект.НомерИсправленияИсходногоДокумента)
				+ НСтр("ru=' от '") + Формат(Форма.Объект.ДатаИсправленияИсходногоДокумента, "ДФ=dd.MM.yyyy") + " г.";
		КонецЕсли;
	Иначе
		Форма.ТекстСчетФактураИсходный = НСтр("ru='не выбран'"); 
	КонецЕсли;
	
	// ГруппаВсегоПоДокументу
	МассивИменЭлементов = Новый Массив;
	МассивИменЭлементов.Добавить("СуммаСНДС");
	МассивИменЭлементов.Добавить("СтавкаНДС");
	МассивИменЭлементов.Добавить("СуммаНДС");
	ОбщегоНазначенияУТКлиентСервер.УстановитьСвойствоЭлементовФормы(Форма.Элементы, МассивИменЭлементов, "Доступность", НЕ Булево(Форма.НесколькоСтавокНДС));
	
	ОбновитьОтображениеВсегоПоДокументу(Форма);
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура НастроитьОтображениеРеквизитовПолучен(Форма)
	
	Форма.Элементы.ДатаПолучения.Доступность           = Форма.Получен;
	Форма.Элементы.ПолученВЭлектронномВиде.Доступность = Форма.Получен;
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьДатуПолучения()
	
	Если ЗначениеЗаполнено(Объект.ДатаПолучения) Тогда
		Возврат;
	КонецЕсли;
	
	Если Объект.Исправление И ЗначениеЗаполнено(Объект.ДатаИсправления) Тогда
		Объект.ДатаПолучения = Объект.ДатаИсправления;
	ИначеЕсли ЗначениеЗаполнено(Объект.Дата) Тогда
		Объект.ДатаПолучения = Объект.Дата;
	КонецЕсли;
	
	Получен = ЗначениеЗаполнено(Объект.ДатаПолучения);
	НастроитьОтображениеРеквизитовПолучен(ЭтаФорма);
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура НастроитьВидимостьВалютыКодаОперации(Форма)
	
	Если ЗначениеЗаполнено(Форма.Объект.Дата) И Форма.Объект.Дата < Форма.ДатаНачалаПримененияПостановления1137 Тогда
		Форма.Элементы.Валюта.АвтоОтметкаНезаполненного = Ложь;
		Форма.Элементы.Валюта.ОтметкаНезаполненного = Ложь;
		Форма.Элементы.КодВидаОперации.АвтоОтметкаНезаполненного = Ложь;
		Форма.Элементы.КодВидаОперации.ОтметкаНезаполненного = Ложь;
	Иначе
		Форма.Элементы.Валюта.АвтоОтметкаНезаполненного = Истина;
		Форма.Элементы.КодВидаОперации.АвтоОтметкаНезаполненного = Истина;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьСписокДокументовОснований(СтандартнаяОбработка = Ложь)
	
	СтандартнаяОбработка = Ложь;
	
	Отказ = Ложь;
	
	Если НЕ ЗначениеЗаполнено(Объект.Организация) Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
			НСтр("ru='Поле ""Организация"" не заполнено'"),
			,
			"Организация",
			"Объект",
			Отказ
		);
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(Объект.Контрагент) Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
			НСтр("ru='Поле ""Контрагент"" не заполнено'"),
			,
			"Контрагент",
			"Объект",
			Отказ
		);
	КонецЕсли;
	
	Если НЕ Отказ Тогда
		
		ПараметрыФормы = Новый Структура;
		ПараметрыФормы.Вставить("Организация", Объект.Организация);
		ПараметрыФормы.Вставить("Контрагент", Объект.Контрагент);
		ПараметрыФормы.Вставить("СписокДокументовОснований", Новый СписокЗначений);
		Для Каждого СтрокаТаблицы Из Объект.ДокументыОснования Цикл
			ПараметрыФормы.СписокДокументовОснований.Добавить(СтрокаТаблицы.ДокументОснование)
		КонецЦикла;
		
		Модифицированность = Истина;
		
		ОткрытьФормуМодально("Документ.СчетФактураПолученный.Форма.ФормаДокументыОснования",
			ПараметрыФормы,
			ЭтаФорма
		);
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьИсходныйСчетФактуруПоУмолчанию()
	
	ТаблицаСчетовФактур = Документы.СчетФактураПолученный.СчетаФактурыПоОснованию(
		?(ТипЗнч(ДокументОснование) = Тип("ДокументСсылка.КорректировкаПоступления"),
			ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ДокументОснование, "ДокументОснование"),
			ДокументОснование
		),
		Объект.Организация
	);
	Если ТаблицаСчетовФактур.Количество() > 0 Тогда
		ТаблицаСчетовФактур.Сортировать("НомерИсправления УБЫВ");
		Для Индекс = 0 По ТаблицаСчетовФактур.Количество() - 1 Цикл
			Если НЕ ТаблицаСчетовФактур[Индекс].Корректировочный Тогда
				Объект.НомерИсходногоДокумента            = ТаблицаСчетовФактур[Индекс].Номер;
				Объект.ДатаИсходногоДокумента             = ТаблицаСчетовФактур[Индекс].Дата;
				Объект.НомерИсправленияИсходногоДокумента = ТаблицаСчетовФактур[Индекс].НомерИсправления;
				Объект.ДатаИсправленияИсходногоДокумента  = ТаблицаСчетовФактур[Индекс].ДатаИсправления;
				Прервать;
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура ОбновитьОтображениеВсегоПоДокументу(Форма)
	
	Если Форма.НесколькоСтавокНДС Тогда
		
		Форма.ТекстПоНесколькимСтавкам =
			НСтр("ru='Сумма с НДС: '") + Формат(Форма.Объект.ВсегоПоДокументу.Итог("СуммаСНДС"), "ЧДЦ=2; ЧН=0,00") +
			НСтр("ru=', сумма НДС: '") + Формат(Форма.Объект.ВсегоПоДокументу.Итог("СуммаНДС"), "ЧДЦ=2; ЧН=0,00");
		
		Форма.СуммаСНДС = 0;
		Форма.СтавкаНДС = 0;
		Форма.СуммаНДС  = 0;
		
	ИначеЕсли Форма.Объект.ВсегоПоДокументу.Количество() = 1 Тогда
		
		Форма.ТекстПоНесколькимСтавкам = "";
		
		Форма.СуммаСНДС = Форма.Объект.ВсегоПоДокументу[0].СуммаСНДС;
		Форма.СтавкаНДС = Форма.Объект.ВсегоПоДокументу[0].СтавкаНДС;
		Форма.СуммаНДС  = Форма.Объект.ВсегоПоДокументу[0].СуммаНДС;
		
	Иначе
		
		Форма.ТекстПоНесколькимСтавкам = "";
		
		Форма.СуммаСНДС = 0;
		Форма.СтавкаНДС = 0;
		Форма.СуммаНДС  = 0;
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Функция ПоместитьВсегоПоДокументуВХранилище()
	
	Возврат ПоместитьВоВременноеХранилище(Объект.ВсегоПоДокументу.Выгрузить());
	
КонецФункции

&НаСервере
Функция ПолучитьВсегоПоДокументуИзХранилища(АдресТаблицыВХранилище)
	
	Объект.ВсегоПоДокументу.Загрузить(ПолучитьИзВременногоХранилища(АдресТаблицыВХранилище));
	
	НесколькоСтавокНДС = Объект.ВсегоПоДокументу.Количество() > 1;
	
	УправлениеЭлементамиФормы(ЭтаФорма);
	
КонецФункции
