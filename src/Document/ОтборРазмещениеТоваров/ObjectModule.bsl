#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

////////////////////////////////////////////////////////////////////////////////
// ПРОГРАММНЫЙ ИНТЕРФЕЙС

// Подбирает ячейки для размещения товаров на адресном складе.
//
// Параметры:
// 		ИмяИсточника - Строка - Имя табличной части
//
Процедура РазместитьТовары(ИмяИсточника) Экспорт
	
	ЗаполнитьПараметрыПроверки(ИмяИсточника);
	
	Если ПроверитьЗаполнение() Тогда
		
		Менеджер = Новый МенеджерВременныхТаблиц;
		Запрос = Новый Запрос;
		Запрос.МенеджерВременныхТаблиц = Менеджер;
		Запрос.Текст =
		"ВЫБРАТЬ
		|	ТаблицаНоменклатурыДляЗапроса.Номенклатура КАК Номенклатура,
		|	ТаблицаНоменклатурыДляЗапроса.Упаковка КАК Упаковка,
		|	ТаблицаНоменклатурыДляЗапроса.Характеристика КАК Характеристика,
		|	ВЫРАЗИТЬ(ТаблицаНоменклатурыДляЗапроса.Серия КАК Справочник.СерииНоменклатуры) КАК Серия,
		|	ТаблицаНоменклатурыДляЗапроса.КоличествоУпаковок КАК КоличествоУпаковок
		|ПОМЕСТИТЬ ТаблицаНоменклатурыДляЗапроса
		|ИЗ
		|	&Товары КАК ТаблицаНоменклатурыДляЗапроса
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ТаблицаНоменклатурыДляЗапроса.Номенклатура КАК Номенклатура,
		|	ТаблицаНоменклатурыДляЗапроса.Упаковка КАК Упаковка,
		|	ТаблицаНоменклатурыДляЗапроса.Серия,
		|	ЕСТЬNULL(ТаблицаНоменклатурыДляЗапроса.Серия.ГоденДо, ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)) КАК ГоденДо,
		|	ЕСТЬNULL(ПолитикиУчетаСерий.ПолитикаУчетаСерий.УчетСерийПоFEFO, ЛОЖЬ) КАК УчетСерийПоFEFO,
		|	ТаблицаНоменклатурыДляЗапроса.Характеристика КАК Характеристика,
		|	СпрНоменклатура.СкладскаяГруппа КАК СкладскаяГруппаНоменклатуры,
		|	СУММА(ТаблицаНоменклатурыДляЗапроса.КоличествоУпаковок) КАК КоличествоУпаковок,
		|	УпаковкиНоменклатуры.Высота КАК Высота,
		|	УпаковкиНоменклатуры.Ширина КАК Ширина,
		|	УпаковкиНоменклатуры.Глубина КАК Глубина,
		|	УпаковкиНоменклатуры.Объем КАК Объем,
		|	УпаковкиНоменклатуры.Безразмерная КАК Безразмерная,
		|	УпаковкиНоменклатуры.Вес КАК Вес,
		|	УпаковкиНоменклатуры.Коэффициент КАК КоличествоВУпаковке,
		|	УпаковкиНоменклатуры.СкладскаяГруппа КАК СкладскаяГруппаУпаковок
		|ПОМЕСТИТЬ ТаблицаНоменклатуры
		|ИЗ
		|	ТаблицаНоменклатурыДляЗапроса КАК ТаблицаНоменклатурыДляЗапроса
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.УпаковкиНоменклатуры КАК УпаковкиНоменклатуры
		|		ПО ТаблицаНоменклатурыДляЗапроса.Упаковка = УпаковкиНоменклатуры.Ссылка
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СпрНоменклатура
		|			ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ВидыНоменклатуры.ПолитикиУчетаСерий КАК ПолитикиУчетаСерий
		|			ПО СпрНоменклатура.ВидНоменклатуры = ПолитикиУчетаСерий.Ссылка
		|				И (ПолитикиУчетаСерий.Склад = &Склад)
		|		ПО ТаблицаНоменклатурыДляЗапроса.Номенклатура = СпрНоменклатура.Ссылка
		|
		|СГРУППИРОВАТЬ ПО
		|	ТаблицаНоменклатурыДляЗапроса.Номенклатура,
		|	ТаблицаНоменклатурыДляЗапроса.Упаковка,
		|	ТаблицаНоменклатурыДляЗапроса.Характеристика,
		|	ТаблицаНоменклатурыДляЗапроса.Серия,
		|	ЕСТЬNULL(ТаблицаНоменклатурыДляЗапроса.Серия.ГоденДо, ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)),
		|	ЕСТЬNULL(ПолитикиУчетаСерий.ПолитикаУчетаСерий.УчетСерийПоFEFO, ЛОЖЬ),
		|	УпаковкиНоменклатуры.Безразмерная,
		|	УпаковкиНоменклатуры.Высота,
		|	УпаковкиНоменклатуры.Ширина,
		|	УпаковкиНоменклатуры.Глубина,
		|	УпаковкиНоменклатуры.Объем,
		|	УпаковкиНоменклатуры.Вес,
		|	УпаковкиНоменклатуры.Коэффициент,
		|	СпрНоменклатура.СкладскаяГруппа,
		|	УпаковкиНоменклатуры.СкладскаяГруппа
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ ТаблицаНоменклатурыДляЗапроса";
		
	
		ТаблицаКРазмещению = ЭтотОбъект[ИмяИсточника].Выгрузить(,"Номенклатура,Упаковка,Характеристика,Серия,КоличествоУпаковок");
		Запрос.УстановитьПараметр("Товары",ТаблицаКРазмещению);
		Запрос.УстановитьПараметр("Склад",Склад);
		
		Запрос.Выполнить();
		
		ОшибкаПроверки = Ложь;
		
		СтруктураВозврата = СкладыСервер.РазместитьТоварВЯчейках(Менеджер,Склад,Помещение,ОшибкаПроверки);
		
		Менеджер.Закрыть();
		
		Если Не ОшибкаПроверки Тогда
			
			ТоварыРазмещение.Очистить();
			
			Для Каждого СтрТабл из СтруктураВозврата.ТаблицаОшибок Цикл
				
				Если СтрТабл.КоличествоУпаковок > 0 Тогда
					
					НоваяСтрока = ТоварыРазмещение.Добавить();
					
					ЗаполнитьЗначенияСвойств(НоваяСтрока,СтрТабл);
					
				КонецЕсли;
				
			КонецЦикла;
			
			
			Для Каждого СтрТабл из СтруктураВозврата.ТаблицаРезультатов Цикл
				
				Если СтрТабл.КоличествоУпаковок > 0 Тогда
					
					НоваяСтрока = ТоварыРазмещение.Добавить();
					
					ЗаполнитьЗначенияСвойств(НоваяСтрока,СтрТабл);
					
				КонецЕсли;
				
			КонецЦикла;
			
		КонецЕсли;
	КонецЕсли;
	
	ДополнительныеСвойства.Удалить("ПараметрыПроверки");
КонецПроцедуры

// Подбирает ячейки для отбора товаров с адресного склада.
//
// Параметры:
// 		ИмяИсточника - Строка - Имя табличной части
//
Процедура ОтобратьТовары(ИмяИсточника) Экспорт
	
	ЗаполнитьПараметрыПроверки(ИмяИсточника);
	
	Если ПроверитьЗаполнение() Тогда
		
		Менеджер = Новый МенеджерВременныхТаблиц;
		Запрос = Новый Запрос;
		Запрос.МенеджерВременныхТаблиц = Менеджер;
		Запрос.Текст =
		"ВЫБРАТЬ
		|	Таблица.Номенклатура КАК Номенклатура,
		|	Таблица.Характеристика КАК Характеристика,
		|	Таблица.Серия КАК Серия,
		|	Таблица.Количество КАК Количество
		|ПОМЕСТИТЬ ТаблицаНоменклатурыДляЗапроса
		|ИЗ
		|	&Товары КАК Таблица
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ТаблицаНоменклатурыДляЗапроса.Номенклатура,
		|	ТаблицаНоменклатурыДляЗапроса.Характеристика,
		|	ТаблицаНоменклатурыДляЗапроса.Серия,
		|	СУММА(ТаблицаНоменклатурыДляЗапроса.Количество) КАК Количество,
		|	ДАТАВРЕМЯ(1, 1, 1) КАК ДатаОтгрузки,
		|	0 КАК Приоритет,
		|	&Распоряжение КАК Распоряжение,
		|	ВЫРАЗИТЬ(ТаблицаНоменклатурыДляЗапроса.Номенклатура КАК Справочник.Номенклатура).СкладскаяГруппа КАК СкладскаяГруппаНоменклатуры
		|ПОМЕСТИТЬ ТаблицаНоменклатуры
		|ИЗ
		|	ТаблицаНоменклатурыДляЗапроса КАК ТаблицаНоменклатурыДляЗапроса
		|
		|СГРУППИРОВАТЬ ПО
		|	ТаблицаНоменклатурыДляЗапроса.Номенклатура,
		|	ТаблицаНоменклатурыДляЗапроса.Характеристика,
		|	ТаблицаНоменклатурыДляЗапроса.Серия
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ ТаблицаНоменклатурыДляЗапроса";
		
		ТаблицаКРазмещению = ЭтотОбъект[ИмяИсточника].Выгрузить(,"Номенклатура,Характеристика,Серия,Количество");
		
		Запрос.УстановитьПараметр("Товары",ТаблицаКРазмещению);
		Запрос.УстановитьПараметр("Распоряжение",?(ЗначениеЗаполнено(Распоряжение),Распоряжение,""));
		
		Запрос.Выполнить();
		
		ОшибкаПроверки = Ложь;
		
		СтруктураВозврата = СкладыСервер.ОтобратьТоварИзЯчеек(Менеджер,Склад,Помещение);
		
		Менеджер.Закрыть();
		
			
		ТоварыОтбор.Очистить();
		
		Для Каждого СтрТабл из СтруктураВозврата.ТаблицаРезультатов Цикл
			
			Если СтрТабл.Количество > 0 Тогда
				
				НоваяСтрока = ТоварыОтбор.Добавить();
				
				ЗаполнитьЗначенияСвойств(НоваяСтрока,СтрТабл);
				
			КонецЕсли;
			
		КонецЦикла;
			
	КонецЕсли;
	
	ДополнительныеСвойства.Удалить("ПараметрыПроверки");
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ 

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, СтандартнаяОбработка)
	
	ИнициализироватьДокумент(ДанныеЗаполнения);
	
	Если Не (ДанныеЗаполнения <> Неопределено
		И Документы.ТипВсеСсылки().СодержитТип(ТипЗнч(ДанныеЗаполнения))) Тогда
		Возврат;
	КонецЕсли;
	
	Если Не ДанныеЗаполнения.Проведен Тогда
		ТекстСообщения = НСтр("ru='Ввод на основании возможен только по проведенным документам!'");
		ВызватьИсключение ТекстСообщения;
	КонецЕсли;
	
	Если ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.ПриходныйОрдерНаТовары") Тогда
		
		РеквизитыОснования = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(ДанныеЗаполнения,Новый Структура("Статус,Склад,Помещение,ЗонаПриемки"));
		
		Если РеквизитыОснования.Статус <> Перечисления.СтатусыПриходныхОрдеров.Принят  Тогда
			ТекстСообщения = НСтр("ru='Ввод заданий на размещение допускается на основании приходных ордеров в статусе ""%СтатусОрдера%"".'");
			ТекстСообщения = СтрЗаменить(ТекстСообщения,"%СтатусОрдера%", Перечисления.СтатусыПриходныхОрдеров.Принят);
			ВызватьИсключение ТекстСообщения;
		КонецЕсли;

		Если Не СкладыСервер.ИспользоватьАдресноеХранение(РеквизитыОснования.Склад, РеквизитыОснования.Помещение) Тогда
			ТекстСообщения = НСтр("ru='На складе ""%Склад%"" не используется адресное хранение остатков'");
			ТекстСообщения = СтрЗаменить(ТекстСообщения,"%Склад%", СкладыСервер.ПолучитьПредставлениеСклада(РеквизитыОснования.Склад, РеквизитыОснования.Помещение));
			ВызватьИсключение ТекстСообщения;
		КонецЕсли;
		
		ВидОперации = Перечисления.ВидыОперацийОтбораРазмещенияТоваров.Размещение;
		
		ЗаполнитьЗначенияСвойств(ЭтотОбъект,РеквизитыОснования, "ЗонаПриемки, Склад, Помещение");
		
		Запрос = Новый Запрос;
		Запрос.Текст =
		"ВЫБРАТЬ
		|	ТаблицаТовары.Номенклатура,
		|	ТаблицаТовары.Характеристика,
		|	ТаблицаТовары.Упаковка,
		|	ЕСТЬNULL(ТаблицаСерии.Серия, ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)) КАК Серия,
		|	СУММА(ВЫБОР
		|			КОГДА ТаблицаСерии.Серия ЕСТЬ NULL 
		|				ТОГДА ТаблицаТовары.Количество
		|			ИНАЧЕ ТаблицаСерии.Количество
		|		КОНЕЦ) КАК Количество,
		|	СУММА(ВЫБОР
		|			КОГДА ТаблицаСерии.Серия ЕСТЬ NULL 
		|				ТОГДА ТаблицаТовары.КоличествоУпаковок
		|			ИНАЧЕ ТаблицаСерии.КоличествоУпаковок
		|		КОНЕЦ) КАК КоличествоУпаковок
		|ИЗ
		|	Документ.ПриходныйОрдерНаТовары.Товары КАК ТаблицаТовары
		|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ПриходныйОрдерНаТовары.Серии КАК ТаблицаСерии
		|		ПО ТаблицаТовары.Ссылка = ТаблицаСерии.Ссылка
		|			И ТаблицаТовары.Номенклатура = ТаблицаСерии.Номенклатура
		|			И ТаблицаТовары.Характеристика = ТаблицаСерии.Характеристика
		|			И ТаблицаТовары.Упаковка = ТаблицаСерии.Упаковка
		|			И (ТаблицаТовары.СтатусУказанияСерий В (4, 6, 8, 10))
		|ГДЕ
		|	ТаблицаТовары.Ссылка = &Ссылка
		|
		|СГРУППИРОВАТЬ ПО
		|	ТаблицаТовары.Упаковка,
		|	ТаблицаТовары.Номенклатура,
		|	ЕСТЬNULL(ТаблицаСерии.Серия, ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)),
		|	ТаблицаТовары.Характеристика
		|
		|УПОРЯДОЧИТЬ ПО
		|	ТаблицаТовары.Номенклатура.Наименование,
		|	ТаблицаТовары.Характеристика.Наименование";
		
		Запрос.УстановитьПараметр("Ссылка",ДанныеЗаполнения);
		
		ТоварыРазмещение.Загрузить(Запрос.Выполнить().Выгрузить());
		
		РазместитьТовары("ТоварыРазмещение");
		
		ПараметрыУказанияСерий = НоменклатураСервер.ПараметрыУказанияСерий(ЭтотОбъект, Документы.ОтборРазмещениеТоваров);
		ПараметрыУказанияСерий.ИмяТЧТовары = "ТоварыРазмещение";
		ПараметрыУказанияСерий.ИмяТЧСерии  = "ТоварыРазмещение";
		
		НоменклатураСервер.ЗаполнитьСтатусыУказанияСерий(ЭтотОбъект,ПараметрыУказанияСерий);
		
	ИначеЕсли ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.РасходныйОрдерНаТовары") Тогда
		
		РеквизитыОснования = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(ДанныеЗаполнения,Новый Структура("Статус,Склад,Помещение,ЗонаОтгрузки"));
		
		Если  СкладыСервер.ИспользоватьАдресноеХранение(РеквизитыОснования.Склад, РеквизитыОснования.Помещение) Тогда
			Если  СкладыСервер.ИспользоватьАдресноеХранение(РеквизитыОснования.Склад, РеквизитыОснования.Помещение) Тогда
				
				ВидОперации = Перечисления.ВидыОперацийОтбораРазмещенияТоваров.Отбор;
				Распоряжение = ДанныеЗаполнения; 
				
				ЗаполнитьЗначенияСвойств(ЭтотОбъект,РеквизитыОснования, "ЗонаОтгрузки, Склад, Помещение");
				
				ЗаполнитьТоварыОтборПоРаспоряжению();
				ОтобратьТовары("ТоварыОтбор");
				
				ПараметрыУказанияСерий = НоменклатураСервер.ПараметрыУказанияСерий(ЭтотОбъект, Документы.ОтборРазмещениеТоваров);
				ПараметрыУказанияСерий.ИмяТЧТовары = "ТоварыОтбор";
				ПараметрыУказанияСерий.ИмяТЧСерии  = "ТоварыОтбор";
				
				НоменклатураСервер.ЗаполнитьСтатусыУказанияСерий(ЭтотОбъект,ПараметрыУказанияСерий);
			Иначе
				ТекстСообщения = НСтр("ru='На складе ""%Склад%"" не используется адресное хранение остатков'");
				ТекстСообщения = СтрЗаменить(ТекстСообщения,"%Склад%", СкладыСервер.ПолучитьПредставлениеСклада(РеквизитыОснования.Склад, РеквизитыОснования.Помещение));
				ВызватьИсключение ТекстСообщения;
				
			КонецЕсли;
		Иначе
			ТекстСообщения = НСтр("ru='На складе ""%Склад%"" не используется адресное хранение остатков'");
			ТекстСообщения = СтрЗаменить(ТекстСообщения,"%Склад%", СкладыСервер.ПолучитьПредставлениеСклада(РеквизитыОснования.Склад, РеквизитыОснования.Помещение));
			ВызватьИсключение ТекстСообщения;
		КонецЕсли;
	ИначеЕсли ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.ОрдерНаПеремещениеТоваров") Тогда 
		
		РеквизитыОснования = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(ДанныеЗаполнения,Новый Структура("Статус,Склад,ПомещениеОтправитель,ПомещениеПолучатель,ЗонаОтгрузки,ЗонаПриемки"));
		
		Если РеквизитыОснования.Статус = Перечисления.СтатусыОрдеровНаПеремещение.КОтбору Тогда
			Если  СкладыСервер.ИспользоватьАдресноеХранение(РеквизитыОснования.Склад, РеквизитыОснования.ПомещениеОтправитель) Тогда
				
				ВидОперации = Перечисления.ВидыОперацийОтбораРазмещенияТоваров.Отбор;
				Распоряжение = ДанныеЗаполнения; 
				Помещение = РеквизитыОснования.ПомещениеОтправитель;
				
				ЗаполнитьЗначенияСвойств(ЭтотОбъект,РеквизитыОснования, "ЗонаОтгрузки, Склад");
				
				ЗаполнитьТоварыОтборПоРаспоряжению();
				ОтобратьТовары("ТоварыОтбор");
				
				ПараметрыУказанияСерий = НоменклатураСервер.ПараметрыУказанияСерий(ЭтотОбъект, Документы.ОтборРазмещениеТоваров);
				ПараметрыУказанияСерий.ИмяТЧТовары = "ТоварыОтбор";
				ПараметрыУказанияСерий.ИмяТЧСерии  = "ТоварыОтбор";
				
				НоменклатураСервер.ЗаполнитьСтатусыУказанияСерий(ЭтотОбъект,ПараметрыУказанияСерий);
			Иначе
				ТекстСообщения = НСтр("ru='На складе ""%Склад%"" не используется адресное хранение остатков'");
				ТекстСообщения = СтрЗаменить(ТекстСообщения,"%Склад%", СкладыСервер.ПолучитьПредставлениеСклада(РеквизитыОснования.Склад, РеквизитыОснования.ПомещениеОтправитель));
				ВызватьИсключение ТекстСообщения;
			КонецЕсли;
		ИначеЕсли РеквизитыОснования.Статус = Перечисления.СтатусыОрдеровНаПеремещение.Принят Тогда
			Если  СкладыСервер.ИспользоватьАдресноеХранение(РеквизитыОснования.Склад, РеквизитыОснования.ПомещениеПолучатель) Тогда
				ВидОперации = Перечисления.ВидыОперацийОтбораРазмещенияТоваров.Размещение;
				Помещение = РеквизитыОснования.ПомещениеПолучатель;
				
				ЗаполнитьЗначенияСвойств(ЭтотОбъект,РеквизитыОснования, "ЗонаПриемки, Склад");
				
				Запрос = Новый Запрос;
				Запрос.Текст =
				"ВЫБРАТЬ
				|	ТаблицаТовары.Номенклатура,
				|	ТаблицаТовары.Характеристика,
				|	ТаблицаТовары.Упаковка,
				|	ЕСТЬNULL(ТаблицаСерии.Серия, ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)) КАК Серия,
				|	СУММА(ВЫБОР
				|			КОГДА ТаблицаСерии.Серия ЕСТЬ NULL 
				|				ТОГДА ТаблицаТовары.Количество
				|			ИНАЧЕ ТаблицаСерии.Количество
				|		КОНЕЦ) КАК Количество,
				|	СУММА(ВЫБОР
				|			КОГДА ТаблицаСерии.Серия ЕСТЬ NULL 
				|				ТОГДА ТаблицаТовары.КоличествоУпаковок
				|			ИНАЧЕ ТаблицаСерии.КоличествоУпаковок
				|		КОНЕЦ) КАК КоличествоУпаковок
				|ИЗ
				|	Документ.ОрдерНаПеремещениеТоваров.Товары КАК ТаблицаТовары
				|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ОрдерНаПеремещениеТоваров.Серии КАК ТаблицаСерии
				|		ПО ТаблицаТовары.Ссылка = ТаблицаСерии.Ссылка
				|			И ТаблицаТовары.Номенклатура = ТаблицаСерии.Номенклатура
				|			И ТаблицаТовары.Характеристика = ТаблицаСерии.Характеристика
				|			И ТаблицаТовары.Упаковка = ТаблицаСерии.Упаковка
				|			И (ТаблицаТовары.СтатусУказанияСерий В (4, 6, 8, 10))
				|ГДЕ
				|	ТаблицаТовары.Ссылка = &Ссылка
				|
				|СГРУППИРОВАТЬ ПО
				|	ТаблицаТовары.Упаковка,
				|	ТаблицаТовары.Номенклатура,
				|	ЕСТЬNULL(ТаблицаСерии.Серия, ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)),
				|	ТаблицаТовары.Характеристика
				|
				|УПОРЯДОЧИТЬ ПО
				|	ТаблицаТовары.Номенклатура.Наименование,
				|	ТаблицаТовары.Характеристика.Наименование";
				
				Запрос.УстановитьПараметр("Ссылка",ДанныеЗаполнения);
				
				ТоварыРазмещение.Загрузить(Запрос.Выполнить().Выгрузить());
				
				РазместитьТовары("ТоварыРазмещение");
				
				ПараметрыУказанияСерий = НоменклатураСервер.ПараметрыУказанияСерий(ЭтотОбъект, Документы.ОтборРазмещениеТоваров);
				ПараметрыУказанияСерий.ИмяТЧТовары = "ТоварыРазмещение";
				ПараметрыУказанияСерий.ИмяТЧСерии  = "ТоварыРазмещение";
				
				НоменклатураСервер.ЗаполнитьСтатусыУказанияСерий(ЭтотОбъект,ПараметрыУказанияСерий);
			Иначе
				ТекстСообщения = НСтр("ru='На складе ""%Склад%"" не используется адресное хранение остатков'");
				ТекстСообщения = СтрЗаменить(ТекстСообщения,"%Склад%", СкладыСервер.ПолучитьПредставлениеСклада(РеквизитыОснования.Склад, РеквизитыОснования.ПомещениеПолучатель));
				ВызватьИсключение ТекстСообщения;
			КонецЕсли;
		Иначе
			ТекстСообщения = НСтр("ru='Ввод заданий на отбор (размещение) товаров возможен, когда документ находится
			|статусах ""К отбору"" или ""Принят""'");
			ВызватьИсключение ТекстСообщения;
		КонецЕсли;
	ИначеЕсли ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.ОтборРазмещениеТоваров") Тогда 
		
		//Если внутрискладское перемещение, то копируем из ТЧ размещение источника в ТЧ Отбор приемника
		//для вида операции "Отбор" источника вызываем исключение
		//источник должен быть в статусе "Выполнено"
		РеквизитыОснования = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(ДанныеЗаполнения,Новый Структура("Статус,ВидОперации,Склад,Помещение,ЗонаОтгрузки,ЗонаПриемки"));
		
		Если РеквизитыОснования.ВидОперации = Перечисления.ВидыОперацийОтбораРазмещенияТоваров.Отбор Тогда
			ТекстСообщения = НСтр("ru='Для вида операции %ВидОперации% ввод на основании внутрискладского перемещения не предусмотрен.'");
			ТекстСообщения = СтрЗаменить(ТекстСообщения,"%ВидОперации%", РеквизитыОснования.ВидОперации);
			ВызватьИсключение ТекстСообщения;
		ИначеЕсли РеквизитыОснования.Статус <> Перечисления.СтатусыОтборовРазмещенийТоваров.ВыполненоБезОшибок
			И РеквизитыОснования.Статус <> Перечисления.СтатусыОтборовРазмещенийТоваров.ВыполненоСОшибками Тогда
			ТекстСообщения = НСтр("ru='Для статуса документа %СтатусДокумента% ввод на основании внутрискладского перемещения не предусмотрен.'");
			ТекстСообщения = СтрЗаменить(ТекстСообщения,"%СтатусДокумента%", РеквизитыОснования.Статус);
			ВызватьИсключение ТекстСообщения;
		Иначе
			
			ВидОперации = Перечисления.ВидыОперацийОтбораРазмещенияТоваров.Перемещение;
			
			ЗаполнитьЗначенияСвойств(ЭтотОбъект,РеквизитыОснования, "Склад, Помещение");
			
			Для Каждого СтрТабл из ДанныеЗаполнения.ТоварыРазмещение Цикл
				
				НоваяСтрока = ТоварыОтбор.Добавить();
				
				ЗаполнитьЗначенияСвойств(НоваяСтрока,СтрТабл,"Номенклатура,Характеристика, Ячейка, Упаковка, Серия");
				
				НоваяСтрока.Количество = СтрТабл.КоличествоРазмещено;
				НоваяСтрока.КоличествоУпаковок = СтрТабл.КоличествоУпаковокРазмещено;
				
			КонецЦикла;
			РазместитьТовары("ТоварыОтбор");
			
			ПараметрыУказанияСерий = НоменклатураСервер.ПараметрыУказанияСерий(ЭтотОбъект, Документы.ОтборРазмещениеТоваров);
			
			ПараметрыУказанияСерий.ИмяТЧТовары = "ТоварыОтбор";
			ПараметрыУказанияСерий.ИмяТЧСерии  = "ТоварыОтбор";
			
			НоменклатураСервер.ЗаполнитьСтатусыУказанияСерий(ЭтотОбъект,ПараметрыУказанияСерий);
			
			ПараметрыУказанияСерий.ИмяТЧТовары = "ТоварыРазмещение";
			ПараметрыУказанияСерий.ИмяТЧСерии  = "ТоварыРазмещение";
			
			НоменклатураСервер.ЗаполнитьСтатусыУказанияСерий(ЭтотОбъект,ПараметрыУказанияСерий);
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)

	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	ПроведениеСервер.УстановитьРежимПроведения(ЭтотОбъект, РежимЗаписи, РежимПроведения);

	ДополнительныеСвойства.Вставить("ЭтоНовый",    ЭтоНовый());
	ДополнительныеСвойства.Вставить("РежимЗаписи", РежимЗаписи);
	
	Если ВидОперации = Перечисления.ВидыОперацийОтбораРазмещенияТоваров.Отбор Тогда
		
		ТоварыРазмещение.Очистить();
		ЗонаПриемки = Справочники.СкладскиеЯчейки.ПустаяСсылка();
		
	ИначеЕсли ВидОперации = Перечисления.ВидыОперацийОтбораРазмещенияТоваров.Размещение Тогда
		
		ТоварыОтбор.Очистить();
		ЗонаОтгрузки = Справочники.СкладскиеЯчейки.ПустаяСсылка();
		Распоряжение = Неопределено;
		
	ИначеЕсли ВидОперации = Перечисления.ВидыОперацийОтбораРазмещенияТоваров.Перемещение Тогда
		ЗонаПриемки = Справочники.СкладскиеЯчейки.ПустаяСсылка();
		ЗонаОтгрузки = Справочники.СкладскиеЯчейки.ПустаяСсылка();
		Распоряжение = Неопределено;
		
	КонецЕсли;

	ОбъемОтбор = 0;
	ВесОтбор = 0;
	
	ОбъемРазмещение = 0;
	ВесРазмещение = 0;
	
	Выполнено = (Статус = Перечисления.СтатусыОтборовРазмещенийТоваров.ВыполненоБезОшибок
				Или Статус = Перечисления.СтатусыОтборовРазмещенийТоваров.ВыполненоСОшибками);
	
	Для каждого СтрТабл из ТоварыРазмещение Цикл
		Если Статус = Перечисления.СтатусыОтборовРазмещенийТоваров.ВыполненоБезОшибок Тогда
			СтрТабл.КоличествоРазмещено         = СтрТабл.Количество;
			СтрТабл.КоличествоУпаковокРазмещено = СтрТабл.КоличествоУпаковок;
		КонецЕсли;
			
		ОбъемРазмещение = ОбъемРазмещение + СтрТабл.ОбъемУпаковки * ?(Выполнено, СтрТабл.КоличествоУпаковокРазмещено, СтрТабл.КоличествоУпаковок);
		ВесРазмещение = ВесРазмещение + СтрТабл.ВесУпаковки * ?(Выполнено, СтрТабл.КоличествоУпаковокРазмещено, СтрТабл.КоличествоУпаковок);
		
		Если СтрТабл.СтатусУказанияСерий = 0 Тогда
			СтрТабл.Серия = Справочники.СерииНоменклатуры.ПустаяСсылка();
		КонецЕсли;
	КонецЦикла;
	
	Для каждого СтрТабл из ТоварыОтбор Цикл
		Если Статус = Перечисления.СтатусыОтборовРазмещенийТоваров.ВыполненоБезОшибок Тогда
			СтрТабл.КоличествоОтобрано         = СтрТабл.Количество;
			СтрТабл.КоличествоУпаковокОтобрано = СтрТабл.КоличествоУпаковок;
		КонецЕсли;
		
		ОбъемОтбор = ОбъемОтбор + СтрТабл.ОбъемУпаковки * ?(Выполнено, СтрТабл.КоличествоУпаковокОтобрано, СтрТабл.КоличествоУпаковок);
		ВесОтбор = ВесОтбор + СтрТабл.ВесУпаковки * ?(Выполнено, СтрТабл.КоличествоУпаковокОтобрано, СтрТабл.КоличествоУпаковок);
		
		Если СтрТабл.СтатусУказанияСерий = 0 Тогда
			СтрТабл.Серия = Справочники.СерииНоменклатуры.ПустаяСсылка();
		КонецЕсли;
	КонецЦикла;
КонецПроцедуры

Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	
	ПроверитьБлокировкуЯчеек(Отказ);
	
	Если Отказ Тогда
		Возврат;
	КонецЕсли;

	ПроведениеСервер.ИнициализироватьДополнительныеСвойстваДляПроведения(Ссылка, ДополнительныеСвойства, РежимПроведения);
	
	Документы.ОтборРазмещениеТоваров.ИнициализироватьДанныеДокумента(Ссылка, ДополнительныеСвойства);
	
	ПроведениеСервер.ПодготовитьНаборыЗаписейКРегистрацииДвижений(ЭтотОбъект);
	
	СкладыСервер.ОтразитьТоварыВСкладскихЯчейках(ДополнительныеСвойства, Движения, Отказ);
	СкладыСервер.ОтразитьТоварыКОтбору(ДополнительныеСвойства, Движения, Отказ);
	СкладыСервер.ОтразитьДвиженияСерийТоваров(ДополнительныеСвойства, Движения, Отказ);
	
	СформироватьСписокРегистровДляКонтроля();
	
	ПроведениеСервер.ЗаписатьНаборыЗаписей(ЭтотОбъект);
	
	ПроведениеСервер.ВыполнитьКонтрольРезультатовПроведения(ЭтотОбъект, Отказ);
	
	ПроведениеСервер.ОчиститьДополнительныеСвойстваДляПроведения(ДополнительныеСвойства);

КонецПроцедуры

Процедура ОбработкаУдаленияПроведения(Отказ)
	
	ПроверитьБлокировкуЯчеек(Отказ);

	Если Отказ Тогда
		Возврат;
	КонецЕсли;

	ПроведениеСервер.ИнициализироватьДополнительныеСвойстваДляПроведения(Ссылка, ДополнительныеСвойства);

	ПроведениеСервер.ПодготовитьНаборыЗаписейКРегистрацииДвижений(ЭтотОбъект);

	СформироватьСписокРегистровДляКонтроля();

	ПроведениеСервер.ЗаписатьНаборыЗаписей(ЭтотОбъект);

	ПроведениеСервер.ВыполнитьКонтрольРезультатовПроведения(ЭтотОбъект, Отказ);

	ПроведениеСервер.ОчиститьДополнительныеСвойстваДляПроведения(ДополнительныеСвойства);

КонецПроцедуры

Процедура ПриКопировании(ОбъектКопирования)

	СостояниеЗаполненияМногооборотнойТары = Перечисления.СостоянияЗаполненияМногооборотнойТары.ПустаяСсылка();
	ИнициализироватьДокумент();

КонецПроцедуры

Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	МассивНепроверяемыхРеквизитов = Новый Массив;
	
	Если ДополнительныеСвойства.Свойство("ПараметрыПроверки") Тогда	
		ПараметрыПроверки = ДополнительныеСвойства.ПараметрыПроверки;
		НепроверяемыеРеквизитыМассив = ПараметрыПроверки.НепроверяемыеРеквизиты;
		Для Каждого СтрМас из НепроверяемыеРеквизитыМассив Цикл
			МассивНепроверяемыхРеквизитов.Добавить(СтрМас);
		КонецЦикла;
	Иначе
		Если Не Проведен
			И Статус <> Перечисления.СтатусыОтборовРазмещенийТоваров.ВРаботе
			И Статус <> Перечисления.СтатусыОтборовРазмещенийТоваров.Подготовлено Тогда
			
			ТекстСообщения = НСтр("ru = 'Документ должен быть проведен сначала в статусе ""В работе"" или ""Подготовлено""'");
			
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения,ЭтотОбъект,"Статус","Объект",Отказ);
		КонецЕсли;

		Если ВидОперации = Перечисления.ВидыОперацийОтбораРазмещенияТоваров.Перемещение Тогда
			СверитьКоличествоВБазовыхЕдиницах(Отказ);	
		КонецЕсли;
	КонецЕсли;
	
	Если Не СкладыСервер.ИспользоватьСкладскиеПомещения(Склад) Тогда
		МассивНепроверяемыхРеквизитов.Добавить("Помещение");
	КонецЕсли;
	
	Если ВидОперации = Перечисления.ВидыОперацийОтбораРазмещенияТоваров.Отбор Тогда
		
		ПараметрыПроверки = Новый Структура;
		ПараметрыПроверки.Вставить("ИмяТЧ","ТоварыОтбор");
		НоменклатураСервер.ПроверитьЗаполнениеХарактеристик(ЭтотОбъект,МассивНепроверяемыхРеквизитов,Отказ,ПараметрыПроверки);
		
		МассивНепроверяемыхРеквизитов.Добавить("ЗонаПриемки");
		МассивНепроверяемыхРеквизитов.Добавить("ТоварыРазмещение");
	ИначеЕсли ВидОперации = Перечисления.ВидыОперацийОтбораРазмещенияТоваров.Размещение Тогда
		
		ПараметрыПроверки = Новый Структура;
		ПараметрыПроверки.Вставить("ИмяТЧ","ТоварыРазмещение");
		НоменклатураСервер.ПроверитьЗаполнениеХарактеристик(ЭтотОбъект,МассивНепроверяемыхРеквизитов,Отказ,ПараметрыПроверки);
		
		МассивНепроверяемыхРеквизитов.Добавить("ЗонаОтгрузки");
		МассивНепроверяемыхРеквизитов.Добавить("ТоварыОтбор");
		МассивНепроверяемыхРеквизитов.Добавить("Распоряжение");
	ИначеЕсли ВидОперации = Перечисления.ВидыОперацийОтбораРазмещенияТоваров.Перемещение  Тогда
		
		ПараметрыПроверки = Новый Структура;
		ПараметрыПроверки.Вставить("ИмяТЧ","ТоварыОтбор");
		НоменклатураСервер.ПроверитьЗаполнениеХарактеристик(ЭтотОбъект,МассивНепроверяемыхРеквизитов,Отказ,ПараметрыПроверки);
		
		ПараметрыПроверки = Новый Структура;
		ПараметрыПроверки.Вставить("ИмяТЧ","ТоварыРазмещение");
		НоменклатураСервер.ПроверитьЗаполнениеХарактеристик(ЭтотОбъект,МассивНепроверяемыхРеквизитов,Отказ,ПараметрыПроверки);
		
		МассивНепроверяемыхРеквизитов.Добавить("ЗонаПриемки");
		МассивНепроверяемыхРеквизитов.Добавить("ЗонаОтгрузки");
		МассивНепроверяемыхРеквизитов.Добавить("Распоряжение");
	КонецЕсли;	
	
	Если Не ПолучитьФункциональнуюОпцию("ИспользоватьУпаковкиНоменклатуры") Тогда
		МассивНепроверяемыхРеквизитов.Добавить("ТоварыРазмещение.Упаковка");
		МассивНепроверяемыхРеквизитов.Добавить("ТоварыОтбор.Упаковка");
		ТекстСообщения = НСтр("ru='В настройках программы не включено использование упаковок номенклатуры, 
		|поэтому нельзя оформить документ по складу с адресным хранением остатков. Обратитесь к администратору'");
		
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения,,,,Отказ);
	КонецЕсли;
	
	ПараметрыУказанияСерий = НоменклатураСервер.ПараметрыУказанияСерий(ЭтотОбъект, Документы.ОтборРазмещениеТоваров);
	
	ПараметрыУказанияСерий.ИмяТЧТовары = "ТоварыОтбор";
	ПараметрыУказанияСерий.ИмяТЧСерии  = "ТоварыОтбор";
	НоменклатураСервер.ПроверитьЗаполнениеСерий(ЭтотОбъект,ПараметрыУказанияСерий,Отказ, МассивНепроверяемыхРеквизитов);
	
	ПараметрыУказанияСерий.ИмяТЧТовары = "ТоварыРазмещение";
	ПараметрыУказанияСерий.ИмяТЧСерии  = "ТоварыРазмещение";
	НоменклатураСервер.ПроверитьЗаполнениеСерий(ЭтотОбъект,ПараметрыУказанияСерий,Отказ, МассивНепроверяемыхРеквизитов);
	
	ОбщегоНазначения.УдалитьНепроверяемыеРеквизитыИзМассива(ПроверяемыеРеквизиты, МассивНепроверяемыхРеквизитов);
	
	ПараметрыПроверки = Новый Структура;
	ПараметрыПроверки.Вставить("ИмяТЧ","ТоварыОтбор");
	ПараметрыПроверки.Вставить("СуффиксДопРеквизита","Отобрано");
	ОбщегоНазначенияУТ.ПроверитьЗаполнениеКоличества(ЭтотОбъект, ПроверяемыеРеквизиты, Отказ,ПараметрыПроверки);

	ПараметрыПроверки = Новый Структура;
	ПараметрыПроверки.Вставить("ИмяТЧ","ТоварыРазмещение");
	ПараметрыПроверки.Вставить("СуффиксДопРеквизита","Размещено");
	ОбщегоНазначенияУТ.ПроверитьЗаполнениеКоличества(ЭтотОбъект, ПроверяемыеРеквизиты, Отказ,ПараметрыПроверки);
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

////////////////////////////////////////////////////////////////////////////////
// Инициализация и заполнение

Процедура ЗаполнитьТоварыОтборПоРаспоряжению() Экспорт 
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ТоварыКОтборуОстатки.Номенклатура,
	|	ТоварыКОтборуОстатки.Характеристика,
	|	ТоварыКОтборуОстатки.Серия,
	|	ТоварыКОтборуОстатки.КОтборуОстаток - ТоварыКОтборуОстатки.ОтбираетсяОстаток - ТоварыКОтборуОстатки.ОтобраноОстаток КАК Количество,
	|	ТоварыКОтборуОстатки.КОтборуОстаток - ТоварыКОтборуОстатки.ОтбираетсяОстаток - ТоварыКОтборуОстатки.ОтобраноОстаток КАК КоличествоУпаковок
	|ИЗ
	|	РегистрНакопления.ТоварыКОтбору.Остатки(, Распоряжение = &Распоряжение) КАК ТоварыКОтборуОстатки
	|ГДЕ
	|	ТоварыКОтборуОстатки.КОтборуОстаток - ТоварыКОтборуОстатки.ОтбираетсяОстаток - ТоварыКОтборуОстатки.ОтобраноОстаток > 0";
	
	Запрос.УстановитьПараметр("Распоряжение", Распоряжение);
	
	ТоварыОтбор.Загрузить(Запрос.Выполнить().Выгрузить());
	
КонецПроцедуры

Процедура ЗаполнитьКоличествоВыполнено(ИмяТЧ) Экспорт
	
	Если Найти(ИмяТЧ,"Отбор") <> 0 Тогда
		ИмяКоличество 			= "КоличествоОтобрано";
		ИмяКоличествоУпаковок 	= "КоличествоУпаковокОтобрано";
	Иначе
		ИмяКоличество 			= "КоличествоРазмещено";
		ИмяКоличествоУпаковок 	= "КоличествоУпаковокРазмещено";
	КонецЕсли;
	
	Для каждого СтрТабл из ЭтотОбъект[ИмяТЧ] Цикл
		
		СтрТабл[ИмяКоличество] 			= СтрТабл.Количество;
		СтрТабл[ИмяКоличествоУпаковок] 	= СтрТабл.КоличествоУпаковок;
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ИнициализироватьДокумент(ДанныеЗаполнения = Неопределено)

	Дата          = ТекущаяДата();
	Ответственный = Пользователи.ТекущийПользователь();
	Статус        = Метаданные().Реквизиты.Статус.ЗначениеЗаполнения;
	Склад         = ЗначениеНастроекПовтИсп.ПолучитьСкладПоУмолчанию(Склад);
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// Прочее

Процедура ЗаполнитьПараметрыПроверки(Источник)
	
	ПараметрыПроверки = Новый Структура;	
	НепроверяемыеРеквизиты = Новый Массив;
	ПараметрыПроверки.Вставить("НепроверяемыеРеквизиты",НепроверяемыеРеквизиты);
	
	ПараметрыПроверки.НепроверяемыеРеквизиты.Добавить("Распоряжение");
	ПараметрыПроверки.НепроверяемыеРеквизиты.Добавить("ЗонаОтгрузки");
	ПараметрыПроверки.НепроверяемыеРеквизиты.Добавить("ЗонаПриемки");
	
	Если Источник = "ТоварыРазмещение" Тогда
		
		ПараметрыПроверки.НепроверяемыеРеквизиты.Добавить("ТоварыОтбор");
		ПараметрыПроверки.НепроверяемыеРеквизиты.Добавить("ТоварыОтбор.Ячейка");
		ПараметрыПроверки.НепроверяемыеРеквизиты.Добавить("ТоварыОтбор.Номенклатура");
		ПараметрыПроверки.НепроверяемыеРеквизиты.Добавить("ТоварыОтбор.Характеристика");
		ПараметрыПроверки.НепроверяемыеРеквизиты.Добавить("ТоварыОтбор.Упаковка");
		ПараметрыПроверки.НепроверяемыеРеквизиты.Добавить("ТоварыОтбор.Количество");
		ПараметрыПроверки.НепроверяемыеРеквизиты.Добавить("ТоварыОтбор.КоличествоУпаковок");
		
		ПараметрыПроверки.НепроверяемыеРеквизиты.Добавить("ТоварыРазмещение.Ячейка");
		
	ИначеЕсли Источник = "ТоварыОтбор" Тогда
		
		ПараметрыПроверки.НепроверяемыеРеквизиты.Добавить("ТоварыРазмещение");
		ПараметрыПроверки.НепроверяемыеРеквизиты.Добавить("ТоварыРазмещение.Ячейка");
		ПараметрыПроверки.НепроверяемыеРеквизиты.Добавить("ТоварыРазмещение.Номенклатура");
		ПараметрыПроверки.НепроверяемыеРеквизиты.Добавить("ТоварыРазмещение.Характеристика");
		ПараметрыПроверки.НепроверяемыеРеквизиты.Добавить("ТоварыРазмещение.Упаковка");
		ПараметрыПроверки.НепроверяемыеРеквизиты.Добавить("ТоварыРазмещение.Количество");
		ПараметрыПроверки.НепроверяемыеРеквизиты.Добавить("ТоварыРазмещение.КоличествоУпаковок");
		
		ПараметрыПроверки.НепроверяемыеРеквизиты.Добавить("ТоварыОтбор.Ячейка");
		ПараметрыПроверки.НепроверяемыеРеквизиты.Добавить("ТоварыОтбор.Упаковка");
	КонецЕсли;
	
	ДополнительныеСвойства.Вставить("ПараметрыПроверки",ПараметрыПроверки);

КонецПроцедуры

Процедура СверитьКоличествоВБазовыхЕдиницах(Отказ)
	Если ТоварыОтбор.Количество() = 0
		Или ТоварыРазмещение.Количество() = 0 Тогда
		Отказ = Истина;
		Возврат;
	КонецЕсли;
	
	ТаблицаПроверки = Новый ТаблицаЗначений;
	ТаблицаПроверки.Колонки.Добавить("Номенклатура");
	ТаблицаПроверки.Колонки.Добавить("Характеристика");
	ТаблицаПроверки.Колонки.Добавить("КоличествоВыполнено");
	ТаблицаПроверки.Колонки.Добавить("Количество");
	
	Для Каждого СтрТабл из ТоварыРазмещение Цикл
		НоваяСтрока = ТаблицаПроверки.Добавить();
		
		ЗаполнитьЗначенияСвойств(НоваяСтрока,СтрТабл);
		НоваяСтрока.КоличествоВыполнено = СтрТабл.КоличествоРазмещено;
		НоваяСтрока.Количество = СтрТабл.Количество;
	КонецЦикла;
	
	Для Каждого СтрТабл из ТоварыОтбор Цикл
		НоваяСтрока = ТаблицаПроверки.Добавить();
		
		ЗаполнитьЗначенияСвойств(НоваяСтрока,СтрТабл);
		НоваяСтрока.КоличествоВыполнено = -СтрТабл.КоличествоОтобрано;
		НоваяСтрока.Количество = -СтрТабл.Количество;
	КонецЦикла;
	
	ТаблицаПроверки.Свернуть("Номенклатура, Характеристика", "Количество,КоличествоВыполнено");
	
	Для Каждого СтрТабл из ТаблицаПроверки Цикл
		
		//Если номенклатура не заполнена, все равно будет ошибка проверки
		Если ЗначениеЗаполнено(СтрТабл.Номенклатура) Тогда		
			Количество = 0;
			
			Если СтрТабл.Количество > 0 Тогда
				ТекстСообщения = НСтр("ru='Запланированное к отбору количество номенклатуры ""%ПредставлениеНоменклатуры%"" меньше, чем размещенное на %Количество% единиц хранения'");
				Количество = СтрТабл.Количество;	
			ИначеЕсли СтрТабл.Количество < 0 Тогда
				ТекстСообщения = НСтр("ru='Запланированное к отбору количество номенклатуры ""%ПредставлениеНоменклатуры%"" больше, чем размещенное на %Количество% единиц хранения'");
				Количество = - СтрТабл.Количество;	
			КонецЕсли;
			
			Если СтрТабл.КоличествоВыполнено > 0 Тогда
				ТекстСообщения = НСтр("ru='Отобранное количество номенклатуры ""%ПредставлениеНоменклатуры%"" меньше, чем размещенное на %Количество% единиц хранения'");
				Количество = СтрТабл.КоличествоВыполнено;	
			ИначеЕсли СтрТабл.КоличествоВыполнено < 0 Тогда
				ТекстСообщения = НСтр("ru='Отобранное количество номенклатуры ""%ПредставлениеНоменклатуры%"" больше, чем размещенное на %Количество% единиц хранения'");
				Количество = - СтрТабл.КоличествоВыполнено;	
			КонецЕсли;
			
			Если Количество <> 0 Тогда
				ПредставлениеНоменклатуры = НоменклатураКлиентСервер.ПредставлениеНоменклатуры(СтрТабл.Номенклатура,СтрТабл.Характеристика);
				
				ТекстСообщения = СтрЗаменить(ТекстСообщения,"%ПредставлениеНоменклатуры%",ПредставлениеНоменклатуры);
				ТекстСообщения = СтрЗаменить(ТекстСообщения,"%Количество%",Количество);
				
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения,,,,Отказ);
				
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
КонецПроцедуры

Процедура ПроверитьБлокировкуЯчеек(Отказ)
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ТаблицаЯчеек.Ячейка КАК Ячейка
	|ИЗ
	|	(ВЫБРАТЬ
	|		ОтборРазмещениеТоваровТоварыОтбор.Ячейка КАК Ячейка
	|	ИЗ
	|		Документ.ОтборРазмещениеТоваров.ТоварыОтбор КАК ОтборРазмещениеТоваровТоварыОтбор
	|	ГДЕ
	|		ОтборРазмещениеТоваровТоварыОтбор.Ссылка = &Ссылка
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ОтборРазмещениеТоваровТоварыРазмещение.Ячейка
	|	ИЗ
	|		Документ.ОтборРазмещениеТоваров.ТоварыРазмещение КАК ОтборРазмещениеТоваровТоварыРазмещение
	|	ГДЕ
	|		ОтборРазмещениеТоваровТоварыРазмещение.Ссылка = &Ссылка
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ВЫБОР
	|			КОГДА ОтборРазмещениеТоваров.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийОтбораРазмещенияТоваров.Размещение)
	|				ТОГДА ОтборРазмещениеТоваров.ЗонаПриемки
	|			КОГДА ОтборРазмещениеТоваров.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийОтбораРазмещенияТоваров.Отбор)
	|				ТОГДА ОтборРазмещениеТоваров.ЗонаОтгрузки
	|		КОНЕЦ
	|	ИЗ
	|		Документ.ОтборРазмещениеТоваров КАК ОтборРазмещениеТоваров
	|	ГДЕ
	|		ОтборРазмещениеТоваров.Ссылка = &Ссылка
	|		И (ОтборРазмещениеТоваров.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийОтбораРазмещенияТоваров.Размещение)
	|				ИЛИ ОтборРазмещениеТоваров.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийОтбораРазмещенияТоваров.Отбор))) КАК ТаблицаЯчеек
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаЯчеек.Ячейка";
	
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	
	ТаблицаЯчеек = Запрос.Выполнить();
	
	Блокировка = Новый БлокировкаДанных;
	ЭлементБлокировки = Блокировка.Добавить("РегистрСведений.БлокировкиСкладскихЯчеек");
	ЭлементБлокировки.Режим          = РежимБлокировкиДанных.Разделяемый;
	ЭлементБлокировки.ИсточникДанных = ТаблицаЯчеек;
	ЭлементБлокировки.ИспользоватьИзИсточникаДанных("Ячейка", "Ячейка");
	
	Блокировка.Заблокировать();
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ЗаблокированныеЯчейки.Ячейка КАК Ячейка,
	|	ЗаблокированныеЯчейки.ТипБлокировки
	|ИЗ
	|	(ВЫБРАТЬ
	|		БлокировкиСкладскихЯчеек.Ячейка КАК Ячейка,
	|		БлокировкиСкладскихЯчеек.ТипБлокировки КАК ТипБлокировки
	|	ИЗ
	|		РегистрСведений.БлокировкиСкладскихЯчеек КАК БлокировкиСкладскихЯчеек
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ОтборРазмещениеТоваров.ТоварыОтбор КАК ОтборРазмещениеТоваровТоварыОтбор
	|			ПО БлокировкиСкладскихЯчеек.Ячейка = ОтборРазмещениеТоваровТоварыОтбор.Ячейка
	|	ГДЕ
	|		ОтборРазмещениеТоваровТоварыОтбор.Ссылка = &Ссылка
	|		И (БлокировкиСкладскихЯчеек.ТипБлокировки = ЗНАЧЕНИЕ(Перечисление.ТипыБлокировокСкладскихЯчеек.Полная)
	|				ИЛИ БлокировкиСкладскихЯчеек.ТипБлокировки = ЗНАЧЕНИЕ(Перечисление.ТипыБлокировокСкладскихЯчеек.Отбор))
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		БлокировкиСкладскихЯчеек.Ячейка,
	|		БлокировкиСкладскихЯчеек.ТипБлокировки
	|	ИЗ
	|		РегистрСведений.БлокировкиСкладскихЯчеек КАК БлокировкиСкладскихЯчеек
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ОтборРазмещениеТоваров.ТоварыРазмещение КАК ОтборРазмещениеТоваровТоварыРазмещение
	|			ПО БлокировкиСкладскихЯчеек.Ячейка = ОтборРазмещениеТоваровТоварыРазмещение.Ячейка
	|	ГДЕ
	|		ОтборРазмещениеТоваровТоварыРазмещение.Ссылка = &Ссылка
	|		И (БлокировкиСкладскихЯчеек.ТипБлокировки = ЗНАЧЕНИЕ(Перечисление.ТипыБлокировокСкладскихЯчеек.Полная)
	|				ИЛИ БлокировкиСкладскихЯчеек.ТипБлокировки = ЗНАЧЕНИЕ(Перечисление.ТипыБлокировокСкладскихЯчеек.Размещение))
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ВЫБОР
	|			КОГДА ОтборРазмещениеТоваров.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийОтбораРазмещенияТоваров.Отбор)
	|				ТОГДА ОтборРазмещениеТоваров.ЗонаОтгрузки
	|			ИНАЧЕ ОтборРазмещениеТоваров.ЗонаПриемки
	|		КОНЕЦ,
	|		БлокировкиСкладскихЯчеек.ТипБлокировки
	|	ИЗ
	|		Документ.ОтборРазмещениеТоваров КАК ОтборРазмещениеТоваров
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.БлокировкиСкладскихЯчеек КАК БлокировкиСкладскихЯчеек
	|			ПО (ВЫБОР
	|					КОГДА ОтборРазмещениеТоваров.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийОтбораРазмещенияТоваров.Отбор)
	|						ТОГДА ОтборРазмещениеТоваров.ЗонаОтгрузки = БлокировкиСкладскихЯчеек.Ячейка
	|					КОГДА ОтборРазмещениеТоваров.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийОтбораРазмещенияТоваров.Размещение)
	|						ТОГДА ОтборРазмещениеТоваров.ЗонаПриемки = БлокировкиСкладскихЯчеек.Ячейка
	|				КОНЕЦ)
	|	ГДЕ
	|		ОтборРазмещениеТоваров.Ссылка = &Ссылка
	|		И (ОтборРазмещениеТоваров.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийОтбораРазмещенияТоваров.Размещение)
	|				ИЛИ ОтборРазмещениеТоваров.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийОтбораРазмещенияТоваров.Отбор))) КАК ЗаблокированныеЯчейки
	|
	|СГРУППИРОВАТЬ ПО
	|	ЗаблокированныеЯчейки.Ячейка,
	|	ЗаблокированныеЯчейки.ТипБлокировки
	|
	|УПОРЯДОЧИТЬ ПО
	|	Ячейка";
	
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		ТекстСообщения = НСтр("ru='Ячейка %Ячейка% заблокирована: тип блокировки ""%ТипБлокировки%""'");
		ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Ячейка%", Выборка.Ячейка);
		ТекстСообщения = СтрЗаменить(ТекстСообщения, "%ТипБлокировки%", Выборка.ТипБлокировки);
		
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения,,,,Отказ);
	КонецЦикла;
	
КонецПроцедуры

Процедура СформироватьСписокРегистровДляКонтроля()
	
	Массив = Новый Массив;
	
	Если НЕ ДополнительныеСвойства.Свойство("ПроведениеИзМРМРаботникаСклада") Тогда
		
		Если Статус = Перечисления.СтатусыОтборовРазмещенийТоваров.ВРаботе
			ИЛИ Статус = Перечисления.СтатусыОтборовРазмещенийТоваров.Подготовлено Тогда
			
			Массив.Добавить(Движения.ТоварыВЯчейках);
			
		КонецЕсли;
		
	КонецЕсли;
	
	Массив.Добавить(Движения.ТоварыКОтбору);
	
	ДополнительныеСвойства.ДляПроведения.Вставить("РегистрыДляКонтроля", Массив);
	
КонецПроцедуры

#КонецЕсли