#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

////////////////////////////////////////////////////////////////////////////////
// ПРОГРАММНЫЙ ИНТЕРФЕЙС

//Имена реквизитов, от значений которых зависят параметры указания серий
//
//	Возвращаемое значение:
//		Строка - имена реквизитов, перечисленные через запятую
//
Функция ИменаРеквизитовДляЗаполненияПараметровУказанияСерий() Экспорт
	ИменаРеквизитов = "Склад,ВидОперации,Статус";
	
	Возврат ИменаРеквизитов;
КонецФункции

//Возвращает параметры указания серий для товаров, указанных в документе
//
//	Параметры
//			Объект - Структура - структура значений реквизитов объекта, необходимых для заполнения параметров указания серий
//	Возвращаемое значение
//			Тип Структура
//				Состав полей задается в функции ОбработкаТабличнойЧастиКлиентСервер.ПараметрыУказанияСерий
//
Функция ПараметрыУказанияСерий(Объект) Экспорт
	
	ПараметрыУказанияСерий = НоменклатураКлиентСервер.ПараметрыУказанияСерий();
	
	ПараметрыУказанияСерий.ИспользоватьСерииНоменклатуры = 
		ПолучитьФункциональнуюОпцию("ИспользоватьСерииНоменклатурыСклад",Новый Структура("Склад",Объект.Склад));
		
	ПараметрыУказанияСерий.СкладскиеОперации.Добавить(Перечисления.СкладскиеОперации.ОтборИзЯчеек);
	ПараметрыУказанияСерий.СкладскиеОперации.Добавить(Перечисления.СкладскиеОперации.РазмещениеВЯчейки);
		
	ПараметрыУказанияСерий.ПоляСвязи.Добавить("Упаковка");
	ПараметрыУказанияСерий.ПоляСвязи.Добавить("Ячейка");
	
	ПараметрыУказанияСерий.ЭтоОрдер = Истина;
	ПараметрыУказанияСерий.ИмяПоляПомещение = "Помещение";
	
	Если Объект.ВидОперации = Перечисления.ВидыОперацийОтбораРазмещенияТоваров.Размещение Тогда
		ПараметрыУказанияСерий.ПланированиеОтгрузки = Истина;
		ПараметрыУказанияСерий.ФактОтбора = Истина;
	Иначе
		ПараметрыУказанияСерий.ПланированиеОтгрузки = Объект.Статус = Перечисления.СтатусыОтборовРазмещенийТоваров.ВРаботе
												  Или Объект.Статус = Перечисления.СтатусыОтборовРазмещенийТоваров.Подготовлено;
			
		ПараметрыУказанияСерий.ФактОтбора = Объект.Статус = Перечисления.СтатусыОтборовРазмещенийТоваров.ВыполненоБезОшибок
											Или Объект.Статус = Перечисления.СтатусыОтборовРазмещенийТоваров.ВыполненоСОшибками;
	КонецЕсли;
	
	Возврат ПараметрыУказанияСерий;
КонецФункции

////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

////////////////////////////////////////////////////////////////////////////////
// Проведение

Процедура ИнициализироватьДанныеДокумента(ДокументСсылка, ДополнительныеСвойства) Экспорт

	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Ссылка", ДокументСсылка);
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ОтборРазмещениеТоваров.Дата КАК Период,
	|	ОтборРазмещениеТоваров.ВидОперации КАК ВидОперации,
	|	ОтборРазмещениеТоваров.Статус КАК Статус,
	|	ОтборРазмещениеТоваров.Распоряжение КАК Распоряжение,
	|	ОтборРазмещениеТоваров.ЗонаПриемки КАК ЗонаПриемки,
	|	ОтборРазмещениеТоваров.Склад КАК Склад,
	|	ОтборРазмещениеТоваров.Помещение КАК Помещение
	|ИЗ
	|	Документ.ОтборРазмещениеТоваров КАК ОтборРазмещениеТоваров
	|ГДЕ
	|	ОтборРазмещениеТоваров.Ссылка = &Ссылка";
	Реквизиты = Запрос.Выполнить().Выбрать();
	Реквизиты.Следующий();

	Запрос.УстановитьПараметр("Статус",      Реквизиты.Статус);
	Запрос.УстановитьПараметр("Склад",       Реквизиты.Склад);
	Запрос.УстановитьПараметр("Помещение",   Реквизиты.Помещение);
	Запрос.УстановитьПараметр("Период",      Реквизиты.Период);
	Запрос.УстановитьПараметр("ВидОперации", Реквизиты.ВидОперации);
	Запрос.УстановитьПараметр("ЗонаПриемки", Реквизиты.ЗонаПриемки);
	Запрос.УстановитьПараметр("Распоряжение",Реквизиты.Распоряжение);
 	Запрос.УстановитьПараметр("РаспоряжениеДляСерий",
								?(ЗначениеЗаполнено(Реквизиты.Распоряжение),Реквизиты.Распоряжение,ДокументСсылка));

	Запрос.Текст ="
	// 0 ТаблицаТоварыВСкладскихЯчейках
	//Выполнено - Приходуем всю таблицу размещения
	|ВЫБРАТЬ
	|	&Период,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	ТаблицаРазмещения.НомерСтроки КАК НомерСтроки,
	|	ТаблицаРазмещения.Номенклатура КАК Номенклатура,
	|	ТаблицаРазмещения.Характеристика КАК Характеристика,
	|	ВЫБОР
	|		КОГДА ТаблицаРазмещения.СтатусУказанияСерий В (4, 6, 8, 10)
	|			ТОГДА ТаблицаРазмещения.Серия
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)
	|	КОНЕЦ КАК Серия,
	|	ТаблицаРазмещения.Упаковка КАК Упаковка,
	|	ТаблицаРазмещения.Ячейка КАК Ячейка,
	|	ТаблицаРазмещения.КоличествоУпаковокРазмещено КАК ВНаличии,
	|	0 КАК КОтбору,
	|	0 КАК КРазмещению
	|ИЗ
	|	Документ.ОтборРазмещениеТоваров.ТоварыРазмещение КАК ТаблицаРазмещения
	|ГДЕ
	|	&Статус В (ЗНАЧЕНИЕ(Перечисление.СтатусыОтборовРазмещенийТоваров.ВыполненоБезОшибок), ЗНАЧЕНИЕ(Перечисление.СтатусыОтборовРазмещенийТоваров.ВыполненоСОшибками))
	|	И ТаблицаРазмещения.Ссылка = &Ссылка
	|	И ТаблицаРазмещения.КоличествоУпаковокРазмещено > 0
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	//Выполнено - Расходуем всю таблицу отбора
	|ВЫБРАТЬ
	|	&Период,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход),
	|	ТаблицаОтбора.НомерСтроки,
	|	ТаблицаОтбора.Номенклатура,
	|	ТаблицаОтбора.Характеристика,
	|	ВЫБОР
	|		КОГДА ТаблицаОтбора.СтатусУказанияСерий В (4, 6, 8, 10)
	|			ТОГДА ТаблицаОтбора.Серия
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)
	|	КОНЕЦ,
	|	ТаблицаОтбора.Упаковка,
	|	ТаблицаОтбора.Ячейка,
	|	ТаблицаОтбора.КоличествоУпаковокОтобрано,
	|	0,
	|   0
	|ИЗ
	|	Документ.ОтборРазмещениеТоваров.ТоварыОтбор КАК ТаблицаОтбора
	|ГДЕ
	|	&Статус В (ЗНАЧЕНИЕ(Перечисление.СтатусыОтборовРазмещенийТоваров.ВыполненоБезОшибок), ЗНАЧЕНИЕ(Перечисление.СтатусыОтборовРазмещенийТоваров.ВыполненоСОшибками))
	|	И ТаблицаОтбора.Ссылка = &Ссылка
	|	И ТаблицаОтбора.КоличествоУпаковокОтобрано > 0
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	//Выполнено - если вид операции "Размещение" - расходуем таблицу размещения из зоны приемки
	|ВЫБРАТЬ
	|	&Период,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход),
	|	ТоварыРазмещение.НомерСтроки,
	|	ТоварыРазмещение.Номенклатура,
	|	ТоварыРазмещение.Характеристика,
	|	ВЫБОР
	|		КОГДА ТоварыРазмещение.СтатусУказанияСерий В (4, 6, 8, 10)
	|			ТОГДА ТоварыРазмещение.Серия
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)
	|	КОНЕЦ,
	|	ТоварыРазмещение.Упаковка,
	|	&ЗонаПриемки,
	|	ТоварыРазмещение.КоличествоУпаковокРазмещено,
	|   0,
	|   0
	|ИЗ
	|	Документ.ОтборРазмещениеТоваров.ТоварыРазмещение КАК ТоварыРазмещение
	|ГДЕ
	|	&Статус В (ЗНАЧЕНИЕ(Перечисление.СтатусыОтборовРазмещенийТоваров.ВыполненоБезОшибок), ЗНАЧЕНИЕ(Перечисление.СтатусыОтборовРазмещенийТоваров.ВыполненоСОшибками))
	|	И &ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийОтбораРазмещенияТоваров.Размещение)
	|	И ТоварыРазмещение.Ссылка = &Ссылка
	|	И ТоварыРазмещение.КоличествоУпаковокРазмещено > 0
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	//В работе - резервизуем по таблице отбора
	|
	|ВЫБРАТЬ
	|	&Период,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход),
	|	ТаблицаОтбора.НомерСтроки,
	|	ТаблицаОтбора.Номенклатура,
	|	ТаблицаОтбора.Характеристика,
	|	ВЫБОР
	|		КОГДА ТаблицаОтбора.СтатусУказанияСерий В (4, 6, 8, 10)
	|			ТОГДА ТаблицаОтбора.Серия
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)
	|	КОНЕЦ,
	|	ТаблицаОтбора.Упаковка,
	|	ТаблицаОтбора.Ячейка,
	|	0,
	|	ТаблицаОтбора.КоличествоУпаковок,
	|   0
	|ИЗ
	|	Документ.ОтборРазмещениеТоваров.ТоварыОтбор КАК ТаблицаОтбора
	|ГДЕ
	|	&Статус В (ЗНАЧЕНИЕ(Перечисление.СтатусыОтборовРазмещенийТоваров.ВРаботе),ЗНАЧЕНИЕ(Перечисление.СтатусыОтборовРазмещенийТоваров.Подготовлено))
	|	И ТаблицаОтбора.Ссылка = &Ссылка
	|	И ТаблицаОтбора.КоличествоУпаковок > 0
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	//В работе - ставим к размещению по таблице размещения
	|
	|ВЫБРАТЬ
	|	&Период,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход),
	|	ТоварыРазмещение.НомерСтроки,
	|	ТоварыРазмещение.Номенклатура,
	|	ТоварыРазмещение.Характеристика,
	|	ВЫБОР
	|		КОГДА ТоварыРазмещение.СтатусУказанияСерий В (4, 6, 8, 10)
	|			ТОГДА ТоварыРазмещение.Серия
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)
	|	КОНЕЦ,
	|	ТоварыРазмещение.Упаковка,
	|	ТоварыРазмещение.Ячейка,
	|	0,
	|	0,
	|   ТоварыРазмещение.КоличествоУпаковок
	|ИЗ
	|	Документ.ОтборРазмещениеТоваров.ТоварыРазмещение КАК ТоварыРазмещение
	|ГДЕ
	|	&Статус В (ЗНАЧЕНИЕ(Перечисление.СтатусыОтборовРазмещенийТоваров.ВРаботе),ЗНАЧЕНИЕ(Перечисление.СтатусыОтборовРазмещенийТоваров.Подготовлено))
	|	И ТоварыРазмещение.Ссылка = &Ссылка
	|	И ТоварыРазмещение.КоличествоУпаковок > 0
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	//В Работе - если вид операции "Размещение" - резервируем таблицу размещения в зоне приемки
	|ВЫБРАТЬ
	|	&Период,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход),
	|	ТоварыРазмещение.НомерСтроки,
	|	ТоварыРазмещение.Номенклатура,
	|	ТоварыРазмещение.Характеристика,
	|	ВЫБОР
	|		КОГДА ТоварыРазмещение.СтатусУказанияСерий В (4, 6, 8, 10)
	|			ТОГДА ТоварыРазмещение.Серия
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)
	|	КОНЕЦ,
	|	ТоварыРазмещение.Упаковка,
	|	&ЗонаПриемки,
	|	0,
	|   ТоварыРазмещение.КоличествоУпаковок,
	|   0
	|ИЗ
	|	Документ.ОтборРазмещениеТоваров.ТоварыРазмещение КАК ТоварыРазмещение
	|ГДЕ
	|	&Статус В (ЗНАЧЕНИЕ(Перечисление.СтатусыОтборовРазмещенийТоваров.ВРаботе),ЗНАЧЕНИЕ(Перечисление.СтатусыОтборовРазмещенийТоваров.Подготовлено))
	|	И &ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийОтбораРазмещенияТоваров.Размещение)
	|	И ТоварыРазмещение.Ссылка = &Ссылка
	|   И ТоварыРазмещение.КоличествоУпаковок > 0
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки;
	|//////////////////////////////////////////////////////////////////////////////////////
	// 1 ТаблицаТоварыКОтбору
	|ВЫБРАТЬ
	|	&Период КАК Период,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	ТоварыОтбор.НомерСтроки КАК НомерСтроки,
	|	ТоварыОтбор.Номенклатура КАК Номенклатура,
	|	ТоварыОтбор.Характеристика КАК Характеристика,
	|	ВЫБОР
	|		КОГДА ТоварыОтбор.СтатусУказанияСерий В (6, 8, 10)
	|			ТОГДА ТоварыОтбор.Серия
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)
	|	КОНЕЦ КАК Серия,
	|	&Распоряжение КАК Распоряжение,
	|   0	КАК КОтбору,
	|   ТоварыОтбор.Количество КАК Отбирается,
	|   0 КАК Отобрано,
	|   0 КАК ОтобраноУпаковок,
	|   ЗНАЧЕНИЕ(Справочник.УпаковкиНоменклатуры.ПустаяСсылка) КАК Упаковка,
	|   ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка) КАК СерияОтобрана
	|ИЗ
	|	Документ.ОтборРазмещениеТоваров.ТоварыОтбор КАК ТоварыОтбор
	|ГДЕ
	|	&Статус В (ЗНАЧЕНИЕ(Перечисление.СтатусыОтборовРазмещенийТоваров.ВРаботе),ЗНАЧЕНИЕ(Перечисление.СтатусыОтборовРазмещенийТоваров.Подготовлено))
	|	И &ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийОтбораРазмещенияТоваров.Отбор)
	|	И ТоварыОтбор.Ссылка = &Ссылка
	|   И ТоварыОтбор.Количество > 0
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	&Период,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход),
	|	ТоварыОтбор.НомерСтроки,
	|	ТоварыОтбор.Номенклатура,
	|	ТоварыОтбор.Характеристика,
	|	ВЫБОР
	|		КОГДА ТоварыОтбор.СтатусУказанияСерий В (6, 8, 10)
	|			ТОГДА ТоварыОтбор.Серия
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)
	|	КОНЕЦ,
	|	&Распоряжение,
	|   0,
	|   0,
	|   ТоварыОтбор.КоличествоОтобрано,
	|   ТоварыОтбор.КоличествоУпаковокОтобрано,
	|   ТоварыОтбор.Упаковка,
	|	ТоварыОтбор.Серия 
	|ИЗ
	|	Документ.ОтборРазмещениеТоваров.ТоварыОтбор КАК ТоварыОтбор
	|ГДЕ
	|	&Статус В (ЗНАЧЕНИЕ(Перечисление.СтатусыОтборовРазмещенийТоваров.ВыполненоБезОшибок), ЗНАЧЕНИЕ(Перечисление.СтатусыОтборовРазмещенийТоваров.ВыполненоСОшибками))
	|	И &ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийОтбораРазмещенияТоваров.Отбор)
	|	И ТоварыОтбор.Ссылка = &Ссылка
	|   И ТоварыОтбор.КоличествоОтобрано > 0
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки
	|;
	|//////////////////////////////////////////////////////////////////////////////////////
	// 2 ТаблицаДвиженияСерийТоваров
	|ВЫБРАТЬ
	|	ТаблицаСерии.Номенклатура КАК Номенклатура,
	|	ТаблицаСерии.Характеристика КАК Характеристика,
	|	ТаблицаСерии.Серия КАК Серия,
	|	СУММА(ТаблицаСерии.КоличествоОтобрано) КАК Количество,
	|	&Склад КАК Склад,
	|	&Помещение КАК Помещение,
	|	ЗНАЧЕНИЕ(Перечисление.СкладскиеОперации.ОтборИзЯчеек) КАК СкладскаяОперация,
	|	&РаспоряжениеДляСерий КАК Документ,
	|	&Период КАК Период,
	|	&Ссылка КАК Регистратор
	|ИЗ
	|	Документ.ОтборРазмещениеТоваров.ТоварыОтбор КАК ТаблицаСерии
	|ГДЕ
	|	ТаблицаСерии.Ссылка = &Ссылка
	|	И ТаблицаСерии.Серия <> ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)
	|	И &Статус В (ЗНАЧЕНИЕ(Перечисление.СтатусыОтборовРазмещенийТоваров.ВыполненоБезОшибок), ЗНАЧЕНИЕ(Перечисление.СтатусыОтборовРазмещенийТоваров.ВыполненоСОшибками))
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаСерии.Характеристика,
	|	ТаблицаСерии.Серия,
	|	ТаблицаСерии.Номенклатура
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ТаблицаСерии.Номенклатура,
	|	ТаблицаСерии.Характеристика,
	|	ТаблицаСерии.Серия,
	|	СУММА(ТаблицаСерии.КоличествоРазмещено),
	|	&Склад,
	|	&Помещение,
	|	ЗНАЧЕНИЕ(Перечисление.СкладскиеОперации.РазмещениеВЯчейки),
	|	&РаспоряжениеДляСерий,
	|	&Период,
	|	&Ссылка
	|ИЗ
	|	Документ.ОтборРазмещениеТоваров.ТоварыРазмещение КАК ТаблицаСерии
	|ГДЕ
	|	ТаблицаСерии.Ссылка = &Ссылка
	|	И ТаблицаСерии.Серия <> ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)
	|	И &Статус В (ЗНАЧЕНИЕ(Перечисление.СтатусыОтборовРазмещенийТоваров.ВыполненоБезОшибок), ЗНАЧЕНИЕ(Перечисление.СтатусыОтборовРазмещенийТоваров.ВыполненоСОшибками))
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаСерии.Номенклатура,
	|	ТаблицаСерии.Серия,
	|	ТаблицаСерии.Характеристика";
	
	Результат = Запрос.ВыполнитьПакет();

	ДополнительныеСвойства.ТаблицыДляДвижений.Вставить("ТаблицаТоварыВСкладскихЯчейках", Результат[0].Выгрузить());
 	ДополнительныеСвойства.ТаблицыДляДвижений.Вставить("ТаблицаТоварыКОтбору",           Результат[1].Выгрузить());
   	ДополнительныеСвойства.ТаблицыДляДвижений.Вставить("ТаблицаДвиженияСерийТоваров",    Результат[2].Выгрузить());

КонецПроцедуры // ИнициализироватьДанныеДокумента()

////////////////////////////////////////////////////////////////////////////////
// Печать

Процедура Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "СкладскоеЗадание") Тогда
		
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(
			КоллекцияПечатныхФорм,
			"СкладскоеЗадание",
			"Складское задание",
			ПечатьЗадания(МассивОбъектов, ОбъектыПечати)
		);
	КонецЕсли;
КонецПроцедуры

Функция ПечатьЗадания(МассивОбъектов, ОбъектыПечати)
	
	КолонкаКодов = ФормированиеПечатныхФорм.ИмяДополнительнойКолонки();
	ВыводитьКоды = ЗначениеЗаполнено(КолонкаКодов);
	
	ТабличныйДокумент = Новый ТабличныйДокумент;
	ТабличныйДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_ОтборРазмещениеТоваров_ЗаданиеНаОтборРазмещениеТоваров";
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ОтборРазмещениеТоваров.Ссылка КАК Ссылка,
	|	ОтборРазмещениеТоваров.Дата КАК Дата,
	|	ОтборРазмещениеТоваров.Номер КАК Номер,
	|	ОтборРазмещениеТоваров.ВидОперации КАК ВидОперации,
	|	ПРЕДСТАВЛЕНИЕ(ОтборРазмещениеТоваров.ЗонаОтгрузки) КАК ЗонаОтгрузкиПредставление,
	|	ПРЕДСТАВЛЕНИЕ(ОтборРазмещениеТоваров.ЗонаПриемки) КАК ЗонаПриемкиПредставление,
	|	ПРЕДСТАВЛЕНИЕ(ОтборРазмещениеТоваров.РабочийУчасток) КАК РабочийУчастокПредставление,
	|	ПРЕДСТАВЛЕНИЕ(ОтборРазмещениеТоваров.Склад) КАК СкладПредставление,
	|	ПРЕДСТАВЛЕНИЕ(ОтборРазмещениеТоваров.Помещение) КАК ПомещениеПредставление,
	|	ОтборРазмещениеТоваров.Исполнитель.ФизическоеЛицо КАК Исполнитель,
	|	ОтборРазмещениеТоваров.Распоряжение КАК Распоряжение,
	|	ПРЕДСТАВЛЕНИЕ(ОтборРазмещениеТоваров.Распоряжение) КАК РаспоряжениеПредставление,
	|	ОтборРазмещениеТоваров.Распоряжение.Дата КАК РаспоряжениеДата,
	|	ОтборРазмещениеТоваров.Распоряжение.Номер КАК РаспоряжениеНомер,
	|	ЕСТЬNULL(ОтборРазмещениеТоваров.Распоряжение.ОтгрузкаПоЗаданиюНаПеревозку, ЛОЖЬ) КАК ОтгрузкаПоЗаданиюНаПеревозку,
	|	ОтборРазмещениеТоваров.Распоряжение.ПорядокДоставки КАК ПорядокДоставки,
	|	ПРЕДСТАВЛЕНИЕ(ОтборРазмещениеТоваров.Распоряжение.ЗаданиеНаПеревозку) КАК ЗаданиеНаПеревозкуПредставление,
	|	ОтборРазмещениеТоваров.Распоряжение.ЗаданиеНаПеревозку.Номер КАК ЗаданиеНаПеревозкуНомер,
	|	ОтборРазмещениеТоваров.Распоряжение.ЗаданиеНаПеревозку.Дата КАК ЗаданиеНаПеревозкуДата,
	|	ПРЕДСТАВЛЕНИЕ(ОтборРазмещениеТоваров.Распоряжение.Распоряжение) КАК ОснованиеПредставление,
	|	ОтборРазмещениеТоваров.Распоряжение.Распоряжение.Номер КАК ОснованиеНомер,
	|	ОтборРазмещениеТоваров.Распоряжение.Распоряжение.Дата КАК ОснованиеДата
	|ИЗ
	|	Документ.ОтборРазмещениеТоваров КАК ОтборРазмещениеТоваров
	|ГДЕ
	|	ОтборРазмещениеТоваров.Ссылка В(&МассивОбъектов)
	|
	|УПОРЯДОЧИТЬ ПО
	|	Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ОтборРазмещениеТоваровТоварыОтбор.НомерСтроки КАК НомерСтроки,
	|	0 КАК Метка,
	|	ОтборРазмещениеТоваровТоварыОтбор.КоличествоУпаковок КАК КоличествоПлан,
	|	ОтборРазмещениеТоваровТоварыОтбор.КоличествоУпаковокОтобрано КАК КоличествоФакт,
	|	ОтборРазмещениеТоваровТоварыОтбор.Номенклатура.НаименованиеПолное КАК НоменклатураПредставление,
	|	ОтборРазмещениеТоваровТоварыОтбор.Характеристика.НаименованиеПолное КАК ХарактеристикаПредставление,
	|	ОтборРазмещениеТоваровТоварыОтбор.Серия.Наименование КАК СерияПредставление,
	|	ПРЕДСТАВЛЕНИЕ(ОтборРазмещениеТоваровТоварыОтбор.Ячейка) КАК ЯчейкаПредставление,
	|	ПРЕДСТАВЛЕНИЕ(ОтборРазмещениеТоваровТоварыОтбор.Упаковка) КАК УпаковкаПредставление,
	|	ОтборРазмещениеТоваровТоварыОтбор.Номенклатура.Код КАК Код,
	|	ОтборРазмещениеТоваровТоварыОтбор.Номенклатура.Артикул КАК Артикул,
	|	ОтборРазмещениеТоваровТоварыОтбор.Ссылка КАК Ссылка
	|ИЗ
	|	Документ.ОтборРазмещениеТоваров.ТоварыОтбор КАК ОтборРазмещениеТоваровТоварыОтбор
	|ГДЕ
	|	ОтборРазмещениеТоваровТоварыОтбор.Ссылка В(&МассивОбъектов)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ОтборРазмещениеТоваровТоварыРазмещение.НомерСтроки,
	|	1,
	|	ОтборРазмещениеТоваровТоварыРазмещение.КоличествоУпаковок,
	|	ОтборРазмещениеТоваровТоварыРазмещение.КоличествоУпаковокРазмещено,
	|	ОтборРазмещениеТоваровТоварыРазмещение.Номенклатура.НаименованиеПолное,
	|	ПРЕДСТАВЛЕНИЕ(ОтборРазмещениеТоваровТоварыРазмещение.Характеристика),
	|	ПРЕДСТАВЛЕНИЕ(ОтборРазмещениеТоваровТоварыРазмещение.Серия),
	|	ПРЕДСТАВЛЕНИЕ(ОтборРазмещениеТоваровТоварыРазмещение.Ячейка),
	|	ПРЕДСТАВЛЕНИЕ(ОтборРазмещениеТоваровТоварыРазмещение.Упаковка),
	|	ОтборРазмещениеТоваровТоварыРазмещение.Номенклатура.Код,
	|	ОтборРазмещениеТоваровТоварыРазмещение.Номенклатура.Артикул,
	|	ОтборРазмещениеТоваровТоварыРазмещение.Ссылка
	|ИЗ
	|	Документ.ОтборРазмещениеТоваров.ТоварыРазмещение КАК ОтборРазмещениеТоваровТоварыРазмещение
	|ГДЕ
	|	ОтборРазмещениеТоваровТоварыРазмещение.Ссылка В(&МассивОбъектов)
	|
	|УПОРЯДОЧИТЬ ПО
	|	Ссылка,
	|	Метка,
	|	НомерСтроки
	|ИТОГИ ПО
	|	Ссылка";
	Запрос.УстановитьПараметр("МассивОбъектов", МассивОбъектов);
	
	//Нужно напечатать номер и дату накладной, но к накладным может не быть доступа
	УстановитьПривилегированныйРежим(Истина);
	
	Результаты = Запрос.ВыполнитьПакет();
	
	УстановитьПривилегированныйРежим(Ложь);
	
	ВыборкаПоДокументам = Результаты[0].Выбрать();
	ВыборкаПоТабличнымЧастям = Результаты[1].Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	РеквизитыДокумента = Новый Структура("Номер, Дата, Префикс, Представление");
	
	Макет = УправлениеПечатью.ПолучитьМакет("Документ.ОтборРазмещениеТоваров.ПФ_MXL_ЗаданиеНаОтборРазмещениеТоваров");
	
	ОбластьЗаголовок 		  = Макет.ПолучитьОбласть("Заголовок");
	ОбластьСкладИсполнитель   = Макет.ПолучитьОбласть("СкладИсполнитель");
	ОбластьОснование	 	  = Макет.ПолучитьОбласть("Основание");
	ОбластьРаспоряжение 	  = Макет.ПолучитьОбласть("Распоряжение");
	ОбластьЗаданиеНаПеревозку = Макет.ПолучитьОбласть("ЗаданиеНаПеревозку");
	ОбластьПодзаголовок 	  = Макет.ПолучитьОбласть("Подзаголовок");
	
	ОбластьШапкаТаблицыНачало 	= Макет.ПолучитьОбласть("ШапкаТаблицы|НачалоСтроки");
	ОбластьСтрокаТаблицыНачало 	= Макет.ПолучитьОбласть("СтрокаТаблицы|НачалоСтроки");
	ОбластьПодвалТаблицыНачало 	= Макет.ПолучитьОбласть("ПодвалТаблицы|НачалоСтроки");
	
	ОбластьШапкаТаблицыКолонкаКодов 	= Макет.ПолучитьОбласть("ШапкаТаблицы|КолонкаКодов");
	ОбластьСтрокаТаблицыКолонкаКодов 	= Макет.ПолучитьОбласть("СтрокаТаблицы|КолонкаКодов");
	ОбластьПодвалТаблицыКолонкаКодов 	= Макет.ПолучитьОбласть("ПодвалТаблицы|КолонкаКодов");
	
	ОбластьШапкаТаблицыКолонкаКодов.Параметры.ИмяКолонкиКодов = КолонкаКодов; 
	
	Если НЕ ВыводитьКоды Тогда
		ОбластьКолонкаТоваров = Макет.Область("КолонкаТоваров");
		
		ОбластьКолонкаТоваров.ШиринаКолонки = ОбластьКолонкаТоваров.ШиринаКолонки  + Макет.Область("КолонкаКодов").ШиринаКолонки;
	КонецЕсли;	
	
	ОбластьШапкаТаблицыКолонкаТоваров 	= Макет.ПолучитьОбласть("ШапкаТаблицы|КолонкаТоваров");
	ОбластьСтрокаТаблицыКолонкаТоваров 	= Макет.ПолучитьОбласть("СтрокаТаблицы|КолонкаТоваров");
	ОбластьПодвалТаблицыКолонкаТоваров 	= Макет.ПолучитьОбласть("ПодвалТаблицы|КолонкаТоваров");
	
	ОбластьШапкаТаблицыКонец 	= Макет.ПолучитьОбласть("ШапкаТаблицы|КонецСтроки");
	ОбластьСтрокаТаблицыКонец 	= Макет.ПолучитьОбласть("СтрокаТаблицы|КонецСтроки");
	ОбластьПодвалТаблицыКонец 	= Макет.ПолучитьОбласть("ПодвалТаблицы|КонецСтроки");
	
	
	ПервыйДокумент = Истина;
	
	Пока ВыборкаПоДокументам.Следующий() Цикл
		
		Если НЕ ВыборкаПоТабличнымЧастям.НайтиСледующий(Новый Структура("Ссылка",ВыборкаПоДокументам.Ссылка)) Тогда
			Продолжить;
		КонецЕсли;
			
		ВыборкаПоСтрокамТЧ = ВыборкаПоТабличнымЧастям.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		
		Если Не ПервыйДокумент Тогда
			ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		
		ПервыйДокумент = Ложь;
		НомерСтрокиНачало = ТабличныйДокумент.ВысотаТаблицы + 1;
		ВыводитьОснование = Ложь;
		
		Если ВыборкаПоДокументам.ВидОперации = Перечисления.ВидыОперацийОтбораРазмещенияТоваров.Отбор Тогда
			
			ТекстЗаголовка		 = НСтр("ru='Задание на отбор товара'");
			ТекстЗоны			 = НСтр("ru='Зона отгрузки:'");
			ЗонаПредставление	 = ВыборкаПоДокументам.ЗонаОтгрузкиПредставление;
			РабочийУчасток		 = ВыборкаПоДокументам.РабочийУчастокПредставление;
			ВыводитьРаспоряжение = Истина;
			ВыводитьОснование    = ТипЗнч(ВыборкаПоДокументам.Распоряжение) = Тип("ДокументСсылка.РасходныйОрдерНаТовары");
			ВыводитьПодзаголовок = Ложь;
			
		ИначеЕсли ВыборкаПоДокументам.ВидОперации = Перечисления.ВидыОперацийОтбораРазмещенияТоваров.Размещение Тогда
			
			ТекстЗаголовка = НСтр("ru='Задание на размещение товара'");
			ТекстЗоны = НСтр("ru='Зона приемки:'");
			ЗонаПредставление = ВыборкаПоДокументам.ЗонаПриемкиПредставление;
			РабочийУчасток		= ВыборкаПоДокументам.РабочийУчастокПредставление;
			ВыводитьРаспоряжение = Ложь;
			ВыводитьПодзаголовок = Ложь;
			
			
		ИначеЕсли ВыборкаПоДокументам.ВидОперации = Перечисления.ВидыОперацийОтбораРазмещенияТоваров.Перемещение Тогда
			
			ТекстЗаголовка = НСтр("ru='Задание на перемещение товара'");
			ТекстЗоны = "";
			ЗонаПредставление = "";
			РабочийУчасток	= "";
			ВыводитьРаспоряжение = Ложь;
			ВыводитьПодзаголовок = Истина;
						
		КонецЕсли;
		
		ЗаполнитьЗначенияСвойств(РеквизитыДокумента, ВыборкаПоДокументам);
		
		ОбластьЗаголовок.Параметры.ТекстЗаголовка = ОбщегоНазначенияУТКлиентСервер.СформироватьЗаголовокДокумента(РеквизитыДокумента, ТекстЗаголовка);
		
		ШтрихкодированиеПечатныхФорм.ВывестиШтрихкодВТабличныйДокумент(ТабличныйДокумент, Макет, ОбластьЗаголовок, ВыборкаПоДокументам.Ссылка);
		ТабличныйДокумент.Вывести(ОбластьЗаголовок);
		
		ОбластьСкладИсполнитель.Параметры.ИсполнительПредставление	= ФизическиеЛица.ФамилияИнициалыФизЛица(ВыборкаПоДокументам.Исполнитель);
		ОбластьСкладИсполнитель.Параметры.СкладПредставление		= СкладыСервер.ПолучитьПредставлениеСклада(ВыборкаПоДокументам.СкладПредставление,ВыборкаПоДокументам.ПомещениеПредставление);
		ОбластьСкладИсполнитель.Параметры.ТекстЗоны 				= ТекстЗоны;
		ОбластьСкладИсполнитель.Параметры.ЗонаПредставление 		= ЗонаПредставление;
		
		Если ЗначениеЗаполнено(РабочийУчасток) Тогда
			ОбластьСкладИсполнитель.Параметры.ТекстРабочегоУчастка = НСтр("ru = 'Рабочий участок:'");
			ОбластьСкладИсполнитель.Параметры.РабочийУчастокПредставление = РабочийУчасток;			
		Иначе
			ОбластьСкладИсполнитель.Параметры.ТекстРабочегоУчастка = "";
			ОбластьСкладИсполнитель.Параметры.РабочийУчастокПредставление = "";			
		КонецЕсли;
		
		ТабличныйДокумент.Вывести(ОбластьСкладИсполнитель);
		
		
		Если ВыводитьОснование Тогда
			РеквизитыДокумента.Дата          = ВыборкаПоДокументам.ОснованиеДата;
			РеквизитыДокумента.Номер         = ВыборкаПоДокументам.ОснованиеНомер;
			РеквизитыДокумента.Префикс       = "";
			РеквизитыДокумента.Представление = ВыборкаПоДокументам.ОснованиеПредставление;
			
			ОбластьОснование.Параметры.ОснованиеПредставление	= ОбщегоНазначенияУТКлиентСервер.СформироватьЗаголовокДокумента(РеквизитыДокумента);
			ТабличныйДокумент.Вывести(ОбластьОснование);
		КонецЕсли;
		
		Если ВыводитьРаспоряжение Тогда
			РеквизитыДокумента.Дата          = ВыборкаПоДокументам.РаспоряжениеДата;
			РеквизитыДокумента.Номер         = ВыборкаПоДокументам.РаспоряжениеНомер;
			РеквизитыДокумента.Префикс       = "";
			РеквизитыДокумента.Представление = ВыборкаПоДокументам.РаспоряжениеПредставление;
			
			ОбластьРаспоряжение.Параметры.РаспоряжениеПредставление	= ОбщегоНазначенияУТКлиентСервер.СформироватьЗаголовокДокумента(РеквизитыДокумента);
			ТабличныйДокумент.Вывести(ОбластьРаспоряжение);
		КонецЕсли;
		
		Если ВыборкаПоДокументам.ОтгрузкаПоЗаданиюНаПеревозку Тогда
			РеквизитыДокумента.Дата          = ВыборкаПоДокументам.ЗаданиеНаПеревозкуДата;
			РеквизитыДокумента.Номер         = ВыборкаПоДокументам.ЗаданиеНаПеревозкуНомер;
			РеквизитыДокумента.Префикс       = "";
			РеквизитыДокумента.Представление = ВыборкаПоДокументам.ЗаданиеНаПеревозкуПредставление;
			                                    
			ОбластьЗаданиеНаПеревозку.Параметры.ЗаданиеНаПеревозкуПредставление	= ОбщегоНазначенияУТКлиентСервер.СформироватьЗаголовокДокумента(РеквизитыДокумента);
			ОбластьЗаданиеНаПеревозку.Параметры.ПорядокДоставки = ВыборкаПоДокументам.ПорядокДоставки;
			ТабличныйДокумент.Вывести(ОбластьЗаданиеНаПеревозку);
		КонецЕсли;
		
		Метка = Неопределено;
		
		Пока ВыборкаПоСтрокамТЧ.Следующий() Цикл
			
			Если Метка <> ВыборкаПоСтрокамТЧ.Метка Тогда
				Если ВыводитьПодзаголовок Тогда
					
					Если ВыборкаПоСтрокамТЧ.Метка = 0 Тогда
						ТекстПозаголовка = НСтр("ru='Товары к отбору'");
					Иначе
						ТекстПозаголовка = НСтр("ru='Товары к размещению'");
					КонецЕсли;
					
					Если Метка <> Неопределено Тогда
						ТабличныйДокумент.Вывести(ОбластьПодвалТаблицыНачало);
						Если ВыводитьКоды Тогда
							ТабличныйДокумент.Присоединить(ОбластьПодвалТаблицыКолонкаКодов);
						КонецЕсли;
						ТабличныйДокумент.Присоединить(ОбластьПодвалТаблицыКолонкаТоваров);
						ТабличныйДокумент.Присоединить(ОбластьПодвалТаблицыКонец);
					КонецЕсли;
				
					ОбластьПодзаголовок.Параметры.ТекстПозаголовка = ТекстПозаголовка;
					ТабличныйДокумент.Вывести(ОбластьПодзаголовок);
				КонецЕсли;
				
				ТабличныйДокумент.Вывести(ОбластьШапкаТаблицыНачало);
				Если ВыводитьКоды Тогда
					ТабличныйДокумент.Присоединить(ОбластьШапкаТаблицыКолонкаКодов);
				КонецЕсли;
				ТабличныйДокумент.Присоединить(ОбластьШапкаТаблицыКолонкаТоваров);
				ТабличныйДокумент.Присоединить(ОбластьШапкаТаблицыКонец);
			КонецЕсли;
			
			ОбластьСтрокаТаблицыНачало.Параметры.Заполнить(ВыборкаПоСтрокамТЧ);
			ТабличныйДокумент.Вывести(ОбластьСтрокаТаблицыНачало);
			
			Если ВыводитьКоды Тогда
				ОбластьСтрокаТаблицыКолонкаКодов.Параметры.Артикул = ВыборкаПоСтрокамТЧ[КолонкаКодов];
				ТабличныйДокумент.Присоединить(ОбластьСтрокаТаблицыКолонкаКодов);
			КонецЕсли;
				
			ОбластьСтрокаТаблицыКолонкаТоваров.Параметры.Товар = НоменклатураКлиентСервер.ПредставлениеНоменклатурыДляПечати(
				ВыборкаПоСтрокамТЧ.НоменклатураПредставление,
				ВыборкаПоСтрокамТЧ.ХарактеристикаПредставление,
				, // Упаковка
				ВыборкаПоСтрокамТЧ.СерияПредставление
			);
			
			ТабличныйДокумент.Присоединить(ОбластьСтрокаТаблицыКолонкаТоваров);
			
			ОбластьСтрокаТаблицыКонец.Параметры.Заполнить(ВыборкаПоСтрокамТЧ);
			ТабличныйДокумент.Присоединить(ОбластьСтрокаТаблицыКонец);	
			
			Метка = ВыборкаПоСтрокамТЧ.Метка;
			
		КонецЦикла;
		
		ТабличныйДокумент.Вывести(ОбластьПодвалТаблицыНачало);
		Если ВыводитьКоды Тогда
			ТабличныйДокумент.Присоединить(ОбластьПодвалТаблицыКолонкаКодов);
		КонецЕсли;
		ТабличныйДокумент.Присоединить(ОбластьПодвалТаблицыКолонкаТоваров);
		ТабличныйДокумент.Присоединить(ОбластьПодвалТаблицыКонец);
		
		УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабличныйДокумент, НомерСтрокиНачало, ОбъектыПечати, ВыборкаПоДокументам.Ссылка);
	КонецЦикла;
	
	ТабличныйДокумент.АвтоМасштаб = Истина;
	
	Возврат ТабличныйДокумент;	
КонецФункции

#КонецЕсли