////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	ОбщегоНазначенияУТ.НастроитьПодключаемоеОборудование(ЭтаФорма);
	Склад     = Параметры.Склад;
	Помещение = Параметры.Помещение;
	
	
	СхемаКомпоновкиДанных = Документы.ОтборРазмещениеТоваров.ПолучитьМакет("ОтборЯчеекДляЗаполнения");
		
	URLСхемы = ПоместитьВоВременноеХранилище(СхемаКомпоновкиДанных, Новый УникальныйИдентификатор());

	ИсточникНастроек = Новый ИсточникДоступныхНастроекКомпоновкиДанных(URLСхемы);

	ОтборЯчеек.Инициализировать(ИсточникНастроек);
	ОтборЯчеек.ЗагрузитьНастройки(СхемаКомпоновкиДанных.НастройкиПоУмолчанию);
	
	УстановитьЗначениеПараметраНастроек(ОтборЯчеек.Настройки, "Склад" , Склад);
	УстановитьЗначениеПараметраНастроек(ОтборЯчеек.Настройки, "Помещение", Помещение);

КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	МенеджерОборудованияКлиент.ПодключитьОборудованиеПриОткрытииФормы(ЭтаФорма, "СканерШтрихкода");
	
КонецПроцедуры

&НаКлиенте
Процедура ПриЗакрытии()
	
	МенеджерОборудованияКлиент.ОтключитьОборудованиеПриЗакрытииФормы(ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	// ПодключаемоеОборудование
	Если Источник = "ПодключаемоеОборудование" И ВводДоступен() Тогда
		Если ИмяСобытия = "ScanData" Тогда
			ОбработатьШтрихкоды(МенеджерОборудованияКлиент.ПреобразоватьДанныеСоСканераВСтруктуру(Параметр));
		КонецЕсли;
	КонецЕсли;
	// Конец ПодключаемоеОборудование
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ КОМАНД ФОРМЫ

&НаКлиенте
Процедура ОК(Команда)
	ОчиститьСообщения();
	Адрес = АдресЯчеекВХранилище(ВладелецФормы.УникальныйИдентификатор);
	Если ЗначениеЗаполнено(Адрес) Тогда
		Закрыть(Адрес);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура Отмена(Команда)
	Закрыть(Неопределено);
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьСписокЯчеекПоОтбору(Команда)
	Если Ячейки.Количество() > 0 Тогда
		Ответ = Вопрос(НСтр("ru = 'Перед заполнением список ячееек будет очищен. Продолжить?'"), РежимДиалогаВопрос.ДаНет);
		Если Ответ <> КодВозвратаДиалога.Да Тогда
			Возврат;
		КонецЕсли;
	КонецЕсли;
	
	ЗаполнитьСписокЯчеекПоОтборуСервер();
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

////////////////////////////////////////////////////////////////////////////////
// Штрихкоды и торговое оборудование

&НаСервере
Процедура ОбработатьШтрихкоды(Данные)
	
	Менеджеры = Новый Массив();
	Менеджеры.Добавить(Справочники.СкладскиеЯчейки);
	МассивСсылок = ШтрихкодированиеПечатныхФорм.ПолучитьСсылкуПоШтрихкодуТабличногоДокумента(Данные.Штрихкод, Менеджеры);
	
	Если МассивСсылок.Количество() > 0 Тогда
    	Ячейка = МассивСсылок[0];
	Иначе
		ТекстСообщения = НСтр("ru = 'Складская ячейка со штрихкодом %Штрихкод% не найдена'");
	    ТекстСообщения = СтрЗаменить(ТекстСообщения,"%Штрихкод%",Данные.Штрихкод);
		
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения);
		Возврат;
	КонецЕсли;
	
	НоваяСтрока = Ячейки.Добавить();
	НоваяСтрока.Ячейка        = Ячейка;
				
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// Прочее

&НаСервере
Функция АдресЯчеекВХранилище(УникальныйИдентификаторФормы)
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	Ячейки.Ячейка
	|ПОМЕСТИТЬ Ячейки
	|ИЗ
	|	&Ячейки КАК Ячейки
	|ГДЕ
	|	Ячейки.Ячейка <> ЗНАЧЕНИЕ(Справочник.СкладскиеЯчейки.ПустаяСсылка)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Ячейки.Ячейка
	|ИЗ
	|	Ячейки КАК Ячейки
	|
	|УПОРЯДОЧИТЬ ПО
	|	Ячейки.Ячейка.ПорядокОбхода,
	|	Ячейки.Ячейка.Код";
	Запрос.УстановитьПараметр("Ячейки", Ячейки.Выгрузить());
	
	ТаблицаЯчеек = Запрос.Выполнить().Выгрузить();
	
	Если ТаблицаЯчеек.Количество() = 0 Тогда
		ТекстСообщения = НСтр("ru = 'Не указано ни одной ячейки'");
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения,,"Ячейки");
		Возврат "";
	Иначе
		Возврат ПоместитьВоВременноеХранилище(ТаблицаЯчеек,УникальныйИдентификаторФормы);
	КонецЕсли;
	
КонецФункции

&НаСервере
Процедура УстановитьЗначениеПараметраНастроек(Настройки, ИмяПараметра, Значение)

	Параметр = Настройки.ПараметрыДанных.Элементы.Найти(ИмяПараметра);
	
	Если Параметр <> Неопределено Тогда
		Параметр.Значение = Значение;
		Параметр.Использование = Истина;
	КонецЕсли;

КонецПроцедуры

&НаСервере
Процедура ЗаполнитьСписокЯчеекПоОтборуСервер()
	СхемаКомпоновкиДанных = Документы.ОтборРазмещениеТоваров.ПолучитьМакет("ОтборЯчеекДляЗаполнения");
	
	КомпоновщикМакета = Новый КомпоновщикМакетаКомпоновкиДанных;
	МакетКомпоновки   = КомпоновщикМакета.Выполнить(СхемаКомпоновкиДанных, ОтборЯчеек.ПолучитьНастройки(),,,Тип("ГенераторМакетаКомпоновкиДанныхДляКоллекцииЗначений"));
	
	ПроцессорКомпоновкиДанных = Новый ПроцессорКомпоновкиДанных;
	ПроцессорКомпоновкиДанных.Инициализировать(МакетКомпоновки);
	
	ПроцессорВывода = Новый ПроцессорВыводаРезультатаКомпоновкиДанныхВКоллекциюЗначений;
	Ячейки.Загрузить(ПроцессорВывода.Вывести(ПроцессорКомпоновкиДанных));
КонецПроцедуры



