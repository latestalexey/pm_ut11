&НаКлиенте
Перем КэшированныеЗначения; //используется механизмом обработки изменения реквизитов ТЧ

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// Обработчик подсистемы "Внешние обработки"
	ДополнительныеОтчетыИОбработки.ПриСозданииНаСервере(ЭтаФорма);
	
	ОбщегоНазначенияУТ.НастроитьПодключаемоеОборудование(ЭтаФорма);
	
	
	Если Не ЗначениеЗаполнено(Объект.Ссылка) Тогда
		ПриЧтенииСозданииНаСервере();
		
		ПараметрыУказанияСерий.ИмяТЧТовары = "ТоварыОтбор";
		ПараметрыУказанияСерий.ИмяТЧСерии  = "ТоварыОтбор";
		НоменклатураСервер.ЗаполнитьСтатусыУказанияСерий(Объект,ПараметрыУказанияСерий);
		
		ПараметрыУказанияСерий.ИмяТЧТовары = "ТоварыРазмещение";
		ПараметрыУказанияСерий.ИмяТЧСерии  = "ТоварыРазмещение";
		НоменклатураСервер.ЗаполнитьСтатусыУказанияСерий(Объект,ПараметрыУказанияСерий);
		
		Элементы.ГруппаКомментарий.Картинка = ОбщегоНазначенияУТ.ПолучитьКартинкуКомментария(Объект.Комментарий);
		
	КонецЕсли;
	
	Элементы.ВидОперации.ТолькоПросмотр = ЗначениеЗаполнено(Объект.Ссылка)
										  Или ЗначениеЗаполнено(Объект.Распоряжение);
	РеквизитыСклада = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Объект.Склад,"ИспользоватьСерииНоменклатуры");
	
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	// Обработчик механизма "ДатыЗапретаИзменения"
	ДатыЗапретаИзменения.ОбъектПриЧтенииНаСервере(ЭтаФорма, ТекущийОбъект);
	
	ПриЧтенииСозданииНаСервере();

КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	МенеджерОборудованияКлиент.ПодключитьОборудованиеПриОткрытииФормы(ЭтаФорма, "СканерШтрихкода");
	
КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	
	НоменклатураСервер.ЗаполнитьСлужебныеРеквизитыПоНоменклатуреВКоллекции(
		Объект.ТоварыОтбор,
		Новый Структура("ЗаполнитьПризнакХарактеристикиИспользуются",
			Новый Структура("Номенклатура", "ХарактеристикиИспользуются")
		)
	);
	
	НоменклатураСервер.ЗаполнитьСлужебныеРеквизитыПоНоменклатуреВКоллекции(
		Объект.ТоварыРазмещение,
		Новый Структура("ЗаполнитьПризнакХарактеристикиИспользуются",
			Новый Структура("Номенклатура", "ХарактеристикиИспользуются")
		)
	);
	
	Элементы.ГруппаКомментарий.Картинка = ОбщегоНазначенияУТ.ПолучитьКартинкуКомментария(Объект.Комментарий);
КонецПроцедуры

&НаКлиенте
Процедура ПередЗаписью(Отказ, ПараметрыЗаписи)
	Если Объект.Статус = ПредопределенноеЗначение("Перечисление.СтатусыОтборовРазмещенийТоваров.ВыполненоСОшибками") Тогда
		
		СтруктураПроверки = ПроверитьЗаполненностьКолонокФакт();
		
		Если Не Отказ 
			И Объект.ТоварыОтбор.Количество() <> 0
			И Не СтруктураПроверки.ЗаполненФактВОтборе Тогда
			
			ТекстВопроса = НСтр("ru='Во всех строках табличной части ""Товары (отбор)"" не заполнено отобранное количество. Записать документ?'");
			
			Ответ = Вопрос(ТекстВопроса,РежимДиалогаВопрос.ДаНет,,КодВозвратаДиалога.Да);
			Если Ответ <> КодВозвратаДиалога.Да Тогда				
				Отказ = Истина;
			КонецЕсли;
			
		КонецЕсли;
		
		Если Не Отказ 
			И Объект.ТоварыРазмещение.Количество() <> 0
			И Не СтруктураПроверки.ЗаполненФактВРазмещении Тогда
			
			ТекстВопроса = НСтр("ru='Во всех строках табличной части ""Товары (размещение) не заполнено размещенное количество. Записать документ?'");
			
			Ответ = Вопрос(ТекстВопроса,РежимДиалогаВопрос.ДаНет,,КодВозвратаДиалога.Да);
			Если Ответ <> КодВозвратаДиалога.Да Тогда				
				Отказ = Истина;
			КонецЕсли;
			
		КонецЕсли;	
		
	КонецЕсли;	
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	Оповестить("Запись_ОтборРазмещениеТоваров", ПараметрыЗаписи, Объект.Ссылка);
	Элементы.ВидОперации.ТолькоПросмотр = Истина;
КонецПроцедуры

&НаКлиенте
Процедура ПриЗакрытии()
	
	МенеджерОборудованияКлиент.ОтключитьОборудованиеПриЗакрытииФормы(ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	// ПодключаемоеОборудование
	Если Источник = "ПодключаемоеОборудование" И ВводДоступен() Тогда
		Если ИмяСобытия = "ScanData" Тогда
			ОбработатьШтрихкоды(МенеджерОборудованияКлиент.ПреобразоватьДанныеСоСканераВМассив(Параметр));
		КонецЕсли;
	КонецЕсли;
	// Конец ПодключаемоеОборудование
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ ШАПКИ ФОРМЫ

&НаКлиенте
Процедура ВидОперацииПриИзменении(Элемент)
	
	УстановитьВидимостьПоВидуОперации();
	
КонецПроцедуры

&НаКлиенте
Процедура СкладПриИзменении(Элемент)
	СкладПриИзмененииСервер();
КонецПроцедуры

&НаКлиенте
Процедура ПомещениеПриИзменении(Элемент)
	ПомещениеПриИзмененииСервер();
КонецПроцедуры

&НаКлиенте
Процедура СтатусПриИзменении(Элемент)
	СтатусПриИзмененииСервер();
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ ТАБЛИЦЫ ФОРМЫ ТОВАРЫ(ОТБОР)

&НаКлиенте
Процедура УпаковкаПриИзменении(Элемент)
	
	ТекущаяСтрока = Элементы.ТоварыОтбор.ТекущиеДанные;

	СтруктураДействий = Новый Структура;
	СтруктураДействий.Вставить("ПересчитатьКоличествоУпаковок");
	СтруктураДействий.Вставить("ПересчитатьКоличествоУпаковокСуффикс","Отобрано");
 	СтруктураДействий.Вставить("ЗаполнитьОбъемВесУпаковки");

	ОбработкаТабличнойЧастиКлиент.ОбработатьСтрокуТЧ(ТекущаяСтрока, СтруктураДействий, КэшированныеЗначения);
	
КонецПроцедуры

&НаКлиенте
Процедура КоличествоУпаковокПриИзменении(Элемент)

	ТекущаяСтрока = Элементы.ТоварыОтбор.ТекущиеДанные;
	
	СтруктураДействий = Новый Структура;
	ДобавитьВСтруктуруДействияПриИзмененииКоличестваУпаковок(СтруктураДействий);
	
	ОбработкаТабличнойЧастиКлиент.ОбработатьСтрокуТЧ(ТекущаяСтрока, СтруктураДействий, КэшированныеЗначения);

КонецПроцедуры

&НаКлиенте
Процедура КоличествоУпаковокВыполненоПриИзменении(Элемент)

	ТекущаяСтрока = Элементы.ТоварыОтбор.ТекущиеДанные;
	
	СтруктураДействий = Новый Структура;
	СтруктураДействий.Вставить("ПересчитатьКоличествоЕдиницСуффикс", "Отобрано");
	
	ОбработкаТабличнойЧастиКлиент.ОбработатьСтрокуТЧ(ТекущаяСтрока, СтруктураДействий, КэшированныеЗначения);

КонецПроцедуры

&НаКлиенте
Процедура ТоварыНоменклатураПриИзменении(Элемент)
	Перем ТекущаяСтрока;
	Перем СтруктураДействий;

	ТекущаяСтрока = Элементы.ТоварыОтбор.ТекущиеДанные;

	СтруктураДействий = Новый Структура;
	СтруктураДействий.Вставить("ПроверитьХарактеристикуПоВладельцу", ТекущаяСтрока.Характеристика);
	СтруктураДействий.Вставить("ПроверитьЗаполнитьУпаковкуПоВладельцу"      , ТекущаяСтрока.Упаковка);
	СтруктураДействий.Вставить("ПересчитатьКоличествоЕдиниц");
 	СтруктураДействий.Вставить("ПересчитатьКоличествоЕдиницСуффикс","Отобрано");

	ОбработкаТабличнойЧастиКлиент.ОбработатьСтрокуТЧ(ТекущаяСтрока, СтруктураДействий, КэшированныеЗначения);
КонецПроцедуры

&НаКлиенте
Процедура ТоварыОтборПриНачалеРедактирования(Элемент, НоваяСтрока, Копирование)
	ПараметрыУказанияСерий.ИмяТЧТовары = "ТоварыОтбор";
	ПараметрыУказанияСерий.ИмяТЧСерии  = "ТоварыОтбор";
	НоменклатураКлиент.ОбновитьКешированныеЗначенияДляУчетаСерий(
				Элемент,КэшированныеЗначения,ПараметрыУказанияСерий,Копирование);
КонецПроцедуры

&НаКлиенте
Процедура ТоварыОтборПриОкончанииРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования)
	ТекущиеДанные = Элементы.ТоварыОтбор.ТекущиеДанные;
	
	Если НоменклатураКлиент.НеобходимоОбновитьСтатусыСерий(
		Элемент,КэшированныеЗначения,ПараметрыУказанияСерий) Тогда
		
		ТекущаяСтрокаИдентификатор = ТекущиеДанные.ПолучитьИдентификатор();
		
		ЗаполнитьСтатусыУказанияСерийПриОкончанииРедактированияСтрокиТЧ(ТекущаяСтрокаИдентификатор, КэшированныеЗначения);
		НоменклатураКлиент.ОбновитьКешированныеЗначенияДляУчетаСерий(
					Элемент,КэшированныеЗначения,ПараметрыУказанияСерий);
		
	КонецЕсли;
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ ТАБЛИЦЫ ФОРМЫ ТОВАРЫ(РАЗМЕЩЕНИЕ)

&НаКлиенте
Процедура ТоварыРазмещениеНоменклатураПриИзменении(Элемент)
	Перем ТекущаяСтрока;
	Перем СтруктураДействий;

	ТекущаяСтрока = Элементы.ТоварыРазмещение.ТекущиеДанные;

	СтруктураДействий = Новый Структура;
	СтруктураДействий.Вставить("ПроверитьХарактеристикуПоВладельцу", ТекущаяСтрока.Характеристика);
	СтруктураДействий.Вставить("ПроверитьЗаполнитьУпаковкуПоВладельцу"      , ТекущаяСтрока.Упаковка);
	СтруктураДействий.Вставить("ПересчитатьКоличествоЕдиниц");
 	СтруктураДействий.Вставить("ПересчитатьКоличествоЕдиницСуффикс","Размещено");

	ОбработкаТабличнойЧастиКлиент.ОбработатьСтрокуТЧ(ТекущаяСтрока, СтруктураДействий, КэшированныеЗначения);
КонецПроцедуры

&НаКлиенте
Процедура ТоварыРазмещениеУпаковкаПриИзменении(Элемент)
	
	ТекущаяСтрока = Элементы.ТоварыРазмещение.ТекущиеДанные;

	СтруктураДействий = Новый Структура;                           
	СтруктураДействий.Вставить("ПересчитатьКоличествоУпаковок");
	СтруктураДействий.Вставить("ПересчитатьКоличествоУпаковокСуффикс","Размещено");
	СтруктураДействий.Вставить("ЗаполнитьОбъемВесУпаковки");

	ОбработкаТабличнойЧастиКлиент.ОбработатьСтрокуТЧ(ТекущаяСтрока, СтруктураДействий, КэшированныеЗначения);
	
КонецПроцедуры

&НаКлиенте
Процедура ТоварыРазмещениеКоличествоУпаковокПриИзменении(Элемент)
	ТекущаяСтрока = Элементы.ТоварыРазмещение.ТекущиеДанные;
	
	СтруктураДействий = Новый Структура;
	ДобавитьВСтруктуруДействияПриИзмененииКоличестваУпаковок(СтруктураДействий);
	
	ОбработкаТабличнойЧастиКлиент.ОбработатьСтрокуТЧ(ТекущаяСтрока, СтруктураДействий, КэшированныеЗначения);
КонецПроцедуры

&НаКлиенте
Процедура ТоварыРазмещениеКоличествоУпаковокРазмещеноПриИзменении(Элемент)
	ТекущаяСтрока = Элементы.ТоварыРазмещение.ТекущиеДанные;
	
	СтруктураДействий = Новый Структура;
	СтруктураДействий.Вставить("ПересчитатьКоличествоЕдиницСуффикс", "Размещено");
	
	ОбработкаТабличнойЧастиКлиент.ОбработатьСтрокуТЧ(ТекущаяСтрока, СтруктураДействий, КэшированныеЗначения);
КонецПроцедуры

&НаКлиенте
Процедура ТоварыРазмещениеПриНачалеРедактирования(Элемент, НоваяСтрока, Копирование)
	ПараметрыУказанияСерий.ИмяТЧТовары = "ТоварыРазмещение";
	ПараметрыУказанияСерий.ИмяТЧСерии  = "ТоварыРазмещение";
	НоменклатураКлиент.ОбновитьКешированныеЗначенияДляУчетаСерий(
		Элемент,КэшированныеЗначения,ПараметрыУказанияСерий,Копирование);
КонецПроцедуры

&НаКлиенте
Процедура ТоварыРазмещениеПриОкончанииРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования)
	ТекущиеДанные = Элементы.ТоварыРазмещение.ТекущиеДанные;
	
	Если НоменклатураКлиент.НеобходимоОбновитьСтатусыСерий(
		Элемент,КэшированныеЗначения,ПараметрыУказанияСерий) Тогда
		
		ТекущаяСтрокаИдентификатор = ТекущиеДанные.ПолучитьИдентификатор();
		
		ЗаполнитьСтатусыУказанияСерийПриОкончанииРедактированияСтрокиТЧ(ТекущаяСтрокаИдентификатор, КэшированныеЗначения);
		НоменклатураКлиент.ОбновитьКешированныеЗначенияДляУчетаСерий(
					Элемент,КэшированныеЗначения,ПараметрыУказанияСерий);
		
	КонецЕсли;
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ КОМАНД ФОРМЫ

&НаКлиенте
Процедура ТоварыСкопироватьТоварыКОтбору(Команда)
	ОчиститьСообщения();
	
	Если Объект.ТоварыОтбор.Количество() = 0 Тогда
		ТекстСообщения = НСтр("ru='Укажите товары к отбору.'");
		
		Предупреждение(ТекстСообщения);
		Возврат;
		
	КонецЕсли;
	
	Если Не ДокументПроведен() Тогда
		Возврат;
	КонецЕсли;
	
	Если Объект.ТоварыРазмещение.Количество() > 0 Тогда
		Если Не ПодтвержденаОчисткаТЧПередЗаполнением("Копирование", "ТоварыОтбор") Тогда
			Возврат;
		КонецЕсли;
	КонецЕсли;
	
	СкопироватьТовары("ТоварыОтбор");
	
КонецПроцедуры

&НаКлиенте
Процедура ТоварыПодобратьЯчейкиРазмещения(Команда)
	
	ОчиститьСообщения();
	
	Если Объект.ТоварыРазмещение.Количество() > 0 Тогда
		
		Если Не ДокументПроведен() Тогда
			Возврат;
		КонецЕсли;
		
		Если Не ПодтвержденаОчисткаТЧПередЗаполнением("ПодборЯчеек", "ТоварыРазмещение") Тогда
			Возврат;
		КонецЕсли;
		
		РазместитьТоварыСервер("ТоварыРазмещение");
	Иначе
		ТекстСообщения = НСтр("ru='Укажите товары к размещению.'");
		Предупреждение(ТекстСообщения);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ТоварыПодобратьЯчейкиОтбора(Команда)
	ОчиститьСообщения();
	
	Если Объект.ТоварыОтбор.Количество() > 0 Тогда
		
		Если Не ДокументПроведен() Тогда
			Возврат;
		КонецЕсли;
		
		Если Не ПодтвержденаОчисткаТЧПередЗаполнением("ПодборЯчеек", "ТоварыОтбор") Тогда
			Возврат;
		КонецЕсли;
		
		ОтобратьТоварыСервер("ТоварыОтбор");
		
	Иначе
		ТекстСообщения = НСтр("ru='Укажите товары к отбору.'");
		Предупреждение(ТекстСообщения);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьКоличествоРазмещено(Команда)
	ОчиститьСообщения();
	
	ТекстВопроса = НСтр("ru='Заполнить размещенное количество по количеству к размещению во всей табличной части ""Товары (размещение)""?'");
	
	Ответ = Вопрос(ТекстВопроса,РежимДиалогаВопрос.ДаНет,,КодВозвратаДиалога.Да);
	Если Ответ <> КодВозвратаДиалога.Да Тогда
		Возврат;	
	КонецЕсли;
	
	ЗаполнитьКоличествоВыполненоКлиент("ТоварыРазмещение");
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьКоличествоОтобрано(Команда)
	ОчиститьСообщения();
	
	ТекстВопроса = НСтр("ru='Заполнить отобранное количество по количеству к отбору во всей табличной части ""Товары (отбор)""?'");
	
	Ответ = Вопрос(ТекстВопроса,РежимДиалогаВопрос.ДаНет,,КодВозвратаДиалога.Да);
	Если Ответ <> КодВозвратаДиалога.Да Тогда
		Возврат;	
	КонецЕсли;
	
	ЗаполнитьКоличествоВыполненоКлиент("ТоварыОтбор");
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьЯчейкуВоВсехСтрокахОтбор(Команда)
	ПараметрыФормы = Новый Структура("Склад,Помещение", Объект.Склад, Объект.Помещение);
	Ячейка = ОткрытьФормуМодально("Документ.ОтборРазмещениеТоваров.Форма.ФормаУказанияЯчейки",ПараметрыФормы,ЭтаФорма);
	
	Если ЗначениеЗаполнено(Ячейка) Тогда
		ЗаполнитьЯчейкуВТЧ("ТоварыОтбор", Ячейка);	
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьЯчейкуВоВсехСтрокахРазмещение(Команда)
	ПараметрыФормы = Новый Структура("Склад,Помещение", Объект.Склад, Объект.Помещение);
	Ячейка = ОткрытьФормуМодально("Документ.ОтборРазмещениеТоваров.Форма.ФормаУказанияЯчейки",ПараметрыФормы,ЭтаФорма);
	
	Если ЗначениеЗаполнено(Ячейка) Тогда
		ЗаполнитьЯчейкуВТЧ("ТоварыРазмещение", Ячейка);	
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьОстаткамиТоваровВЯчейках(Команда)
	
	Если Не ДокументПроведен() Тогда
		Возврат;
	КонецЕсли;
	
	Если Объект.ТоварыРазмещение.Количество() > 0 Тогда
		Если Не ПодтвержденаОчисткаТЧПередЗаполнением("Копирование", "ТоварыОтбор") Тогда
			Возврат;
		КонецЕсли;
	КонецЕсли;
	
	ПараметрыФормы = Новый Структура("Склад,Помещение", Объект.Склад, Объект.Помещение);
	АдресЯчеек  = ОткрытьФормуМодально("Документ.ОтборРазмещениеТоваров.Форма.ФормаПодбораЯчеек",ПараметрыФормы, ЭтаФорма);
	
	Если ЗначениеЗаполнено(АдресЯчеек) Тогда
		ЗаполнитьТЧТоварыОтборПоОстаткамТоваров(АдресЯчеек);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ЗагрузитьТоварыИзТСД(Команда)
	Перем ТаблицаЗагрузкиИзТСД;
	
	МенеджерОборудованияКлиент.ЗагрузитьДанныеИзТСД(УникальныйИдентификатор, ТаблицаЗагрузкиИзТСД);
	
	ОбработатьШтрихкоды(ТаблицаЗагрузкиИзТСД);
	
КонецПроцедуры

&НаКлиенте
Процедура ПоискПоШтрихкодуВыполнить(Команда)
	
	ОчиститьСообщения();
	ТекШтрихкод = "";
	Если ШтрихкодированиеНоменклатурыКлиент.ВвестиШтрихкод(ТекШтрихкод) Тогда
		ОбработатьШтрихкоды(ШтрихкодированиеНоменклатурыКлиент.ПолучитьСтруктуруДанныхШтрихкода(ТекШтрихкод, 1));
	КонецЕсли;
	
КонецПроцедуры


////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

////////////////////////////////////////////////////////////////////////////////
// При изменении реквизитов

&НаСервере
Процедура ПомещениеПриИзмененииСервер()
	УстановитьПараметрыФункциональныхОпцийФормы(Новый Структура("Склад, Помещение", Объект.Склад, Объект.Помещение));
	
	Если Объект.ВидОперации = Перечисления.ВидыОперацийОтбораРазмещенияТоваров.Отбор Тогда
		Объект.ЗонаОтгрузки = Справочники.СкладскиеЯчейки.ЗонаОтгрузкиПоУмолчанию(Объект.Склад, Объект.Помещение);
	ИначеЕсли Объект.ВидОперации = Перечисления.ВидыОперацийОтбораРазмещенияТоваров.Размещение Тогда
		Объект.ЗонаПриемки = Справочники.СкладскиеЯчейки.ЗонаПриемкиПоУмолчанию(Объект.Склад, Объект.Помещение);
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура СтатусПриИзмененииСервер()
	ПараметрыУказанияСерий = НоменклатураСервер.ПараметрыУказанияСерий(Объект, Документы.ОтборРазмещениеТоваров);
	
	ПараметрыУказанияСерий.ИмяТЧТовары = "ТоварыОтбор";
	ПараметрыУказанияСерий.ИмяТЧСерии  = "ТоварыОтбор";
	НоменклатураСервер.ЗаполнитьСтатусыУказанияСерий(Объект,ПараметрыУказанияСерий);
	
	ПараметрыУказанияСерий.ИмяТЧТовары = "ТоварыРазмещение";
	ПараметрыУказанияСерий.ИмяТЧСерии  = "ТоварыРазмещение";
	НоменклатураСервер.ЗаполнитьСтатусыУказанияСерий(Объект,ПараметрыУказанияСерий);
	
	НастроитьПоСтатусу();
КонецПроцедуры

&НаСервере
Процедура СкладПриИзмененииСервер()
	УстановитьПараметрыФункциональныхОпцийФормы(Новый Структура("Склад, Помещение", Объект.Склад, Объект.Помещение));
	
	
	Если Не СкладыСервер.ИспользоватьСкладскиеПомещения(Объект.Склад) Тогда
		
		Если Объект.ВидОперации = Перечисления.ВидыОперацийОтбораРазмещенияТоваров.Отбор Тогда
			Объект.ЗонаОтгрузки = Справочники.СкладскиеЯчейки.ЗонаОтгрузкиПоУмолчанию(Объект.Склад, Объект.Помещение);
		ИначеЕсли Объект.ВидОперации = Перечисления.ВидыОперацийОтбораРазмещенияТоваров.Размещение Тогда
			Объект.ЗонаПриемки = Справочники.СкладскиеЯчейки.ЗонаПриемкиПоУмолчанию(Объект.Склад, Объект.Помещение);
		КонецЕсли;
		
	КонецЕсли;
	
	ПараметрыУказанияСерий = НоменклатураСервер.ПараметрыУказанияСерий(Объект, Документы.ОтборРазмещениеТоваров);
	
	ПараметрыУказанияСерий.ИмяТЧТовары = "ТоварыОтбор";
	ПараметрыУказанияСерий.ИмяТЧСерии  = "ТоварыОтбор";
	НоменклатураСервер.ЗаполнитьСтатусыУказанияСерий(Объект,ПараметрыУказанияСерий);
	
	ПараметрыУказанияСерий.ИмяТЧТовары = "ТоварыРазмещение";
	ПараметрыУказанияСерий.ИмяТЧСерии  = "ТоварыРазмещение";
	НоменклатураСервер.ЗаполнитьСтатусыУказанияСерий(Объект,ПараметрыУказанияСерий);
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// Штрихкоды и торговое оборудование

&НаКлиенте
Процедура ОбработатьШтрихкоды(ДанныеШтрихкодов)
	
	Если Элементы.Страницы.ТекущаяСтраница = Элементы.ГруппаТоварыОтбор Тогда
		ИмяТЧ = "ТоварыОтбор";
		ПараметрыУказанияСерий.ИмяТЧТовары = "ТоварыОтбор";
		ПараметрыУказанияСерий.ИмяТЧСерии  = "ТоварыОтбор";
	ИначеЕсли Элементы.Страницы.ТекущаяСтраница = Элементы.ГруппаТоварыРазмещение Тогда
		ИмяТЧ = "ТоварыРазмещение";
		ПараметрыУказанияСерий.ИмяТЧТовары = "ТоварыРазмещение";
		ПараметрыУказанияСерий.ИмяТЧСерии  = "ТоварыРазмещение";
	Иначе
		ТекстСообщения = НСтр("ru = 'Активируйте табличную часть, в которую необходимо добавить товары по штрихкоду.'");
		Предупреждение(ТекстСообщения);
		Возврат;
	КонецЕсли;

	СтруктураДействийСДобавленнымиСтроками = Новый Структура;
	ДобавитьВСтруктуруДействияПриИзмененииКоличестваУпаковок(СтруктураДействийСДобавленнымиСтроками);
	
	СтруктураДействийСИзмененнымиСтроками = Новый Структура;
	ДобавитьВСтруктуруДействияПриИзмененииКоличестваУпаковок(СтруктураДействийСИзмененнымиСтроками);

	СтруктураДействий = ШтрихкодированиеНоменклатурыКлиент.ПараметрыОбработкиШтрихкодов();

	СтруктураДействий.Штрихкоды                              = ДанныеШтрихкодов;
	СтруктураДействий.СтруктураДействийСДобавленнымиСтроками = СтруктураДействийСДобавленнымиСтроками;
	СтруктураДействий.СтруктураДействийСИзмененнымиСтроками  = СтруктураДействийСИзмененнымиСтроками;
	СтруктураДействий.ПараметрыУказанияСерий                 = ПараметрыУказанияСерий;
	СтруктураДействий.РегистрироватьНовыеШтрихКоды           = Ложь;
	СтруктураДействий.ИмяТЧ                                  = ИмяТЧ;
	СтруктураДействий.ТолькоТовары                           = Истина;
		
	ОбработатьШтрихкодыСервер(СтруктураДействий,КэшированныеЗначения);
	
	ШтрихкодированиеНоменклатурыКлиент.ОбработатьНеизвестныеШтрихкоды(СтруктураДействий,КэшированныеЗначения,ЭтаФорма);
	
	Если СтруктураДействий.ТекущаяСтрока <> Неопределено Тогда
		Элементы[ИмяТЧ].ТекущаяСтрока = СтруктураДействий.ТекущаяСтрока;		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ОбработатьШтрихкодыСервер(СтруктураДействий,КэшированныеЗначения)
	
	ШтрихкодированиеНоменклатурыСервер.ОбработатьШтрихкоды(ЭтаФорма,Объект,СтруктураДействий,КэшированныеЗначения);
	
КонецПроцедуры


////////////////////////////////////////////////////////////////////////////////
// Серии

&НаСервере
Процедура ЗаполнитьСтатусыУказанияСерийПриОкончанииРедактированияСтрокиТЧ(ТекущаяСтрокаИдентификатор, КэшированныеЗначения)
	НоменклатураСервер.ЗаполнитьСтатусыУказанияСерийПриОкончанииРедактированияСтрокиТЧ(Объект, 
				ПараметрыУказанияСерий, ТекущаяСтрокаИдентификатор, КэшированныеЗначения);
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// Прочее

&НаСервере
Процедура ПриЧтенииСозданииНаСервере()
	ПараметрыУказанияСерий = НоменклатураСервер.ПараметрыУказанияСерий(Объект, Документы.ОтборРазмещениеТоваров);
	
	УстановитьВидимостьПоВидуОперации();
	НастроитьПоСтатусу();

	СтруктураУстанавливаемыхПараметров = Новый Структура;
	СтруктураУстанавливаемыхПараметров.Вставить("Склад",Объект.Склад);
	
	УстановитьПараметрыФункциональныхОпцийФормы(СтруктураУстанавливаемыхПараметров);
	
	ПараметрыЗаполненияРеквизитов = Новый Структура;
	ПараметрыЗаполненияРеквизитов.Вставить("ЗаполнитьПризнакХарактеристикиИспользуются", Новый Структура("Номенклатура", "ХарактеристикиИспользуются"));
		
	НоменклатураСервер.ЗаполнитьСлужебныеРеквизитыПоНоменклатуреВКоллекции(Объект.ТоварыОтбор, ПараметрыЗаполненияРеквизитов);
	НоменклатураСервер.ЗаполнитьСлужебныеРеквизитыПоНоменклатуреВКоллекции(Объект.ТоварыРазмещение, ПараметрыЗаполненияРеквизитов);
	
	Элементы.ГруппаКомментарий.Картинка = ОбщегоНазначенияУТ.ПолучитьКартинкуКомментария(Объект.Комментарий);
КонецПроцедуры

&НаСервере
Процедура РазместитьТоварыСервер(ИмяИсточника)
	
	ТекОбъект = РеквизитФормыВЗначение("Объект");
	ТекОбъект.РазместитьТовары(ИмяИсточника);
	
	ЗначениеВРеквизитФормы(ТекОбъект, "Объект");
	
	НоменклатураСервер.ЗаполнитьСлужебныеРеквизитыПоНоменклатуреВКоллекции(
		Объект.ТоварыОтбор,
		Новый Структура("ЗаполнитьПризнакХарактеристикиИспользуются",
			Новый Структура("Номенклатура", "ХарактеристикиИспользуются")
		)
	);
	
	НоменклатураСервер.ЗаполнитьСлужебныеРеквизитыПоНоменклатуреВКоллекции(
		Объект.ТоварыРазмещение,
		Новый Структура("ЗаполнитьПризнакХарактеристикиИспользуются",
			Новый Структура("Номенклатура", "ХарактеристикиИспользуются")
		)
	);
	
	ПараметрыУказанияСерий.ИмяТЧТовары = "ТоварыОтбор";
	ПараметрыУказанияСерий.ИмяТЧСерии  = "ТоварыОтбор";
	НоменклатураСервер.ЗаполнитьСтатусыУказанияСерий(Объект,ПараметрыУказанияСерий);
	
	ПараметрыУказанияСерий.ИмяТЧТовары = "ТоварыРазмещение";
	ПараметрыУказанияСерий.ИмяТЧСерии  = "ТоварыРазмещение";
	НоменклатураСервер.ЗаполнитьСтатусыУказанияСерий(Объект,ПараметрыУказанияСерий);
	
КонецПроцедуры

&НаСервере
Процедура ОтобратьТоварыСервер(ИмяИсточника)
	
	ТекОбъект = РеквизитФормыВЗначение("Объект");
	ТекОбъект.ОтобратьТовары(ИмяИсточника);
	
	ЗначениеВРеквизитФормы(ТекОбъект, "Объект");
	
	НоменклатураСервер.ЗаполнитьСлужебныеРеквизитыПоНоменклатуреВКоллекции(
		Объект.ТоварыОтбор,
		Новый Структура("ЗаполнитьПризнакХарактеристикиИспользуются",
			Новый Структура("Номенклатура", "ХарактеристикиИспользуются")
		)
	);
	
	НоменклатураСервер.ЗаполнитьСлужебныеРеквизитыПоНоменклатуреВКоллекции(
		Объект.ТоварыРазмещение,
		Новый Структура("ЗаполнитьПризнакХарактеристикиИспользуются",
			Новый Структура("Номенклатура", "ХарактеристикиИспользуются")
		)
	);
	
	ПараметрыУказанияСерий.ИмяТЧТовары = "ТоварыОтбор";
	ПараметрыУказанияСерий.ИмяТЧСерии  = "ТоварыОтбор";
	НоменклатураСервер.ЗаполнитьСтатусыУказанияСерий(Объект,ПараметрыУказанияСерий);
	
	ПараметрыУказанияСерий.ИмяТЧТовары = "ТоварыРазмещение";
	ПараметрыУказанияСерий.ИмяТЧСерии  = "ТоварыРазмещение";
	НоменклатураСервер.ЗаполнитьСтатусыУказанияСерий(Объект,ПараметрыУказанияСерий);
	
КонецПроцедуры

&НаКлиенте
Функция ДокументПроведен()
	
	Если Не Объект.Проведен Тогда
		Возврат Истина;
	КонецЕсли;
	
	ТекстВопроса = НСтр("ru = 'Заполнение возможно только в непроведенном документе, отменить проведение?'"); 
	Ответ = Вопрос(ТекстВопроса, РежимДиалогаВопрос.ДаНет);
	
	Если Ответ = КодВозвратаДиалога.Да Тогда
		Если Не ЭтаФорма.Записать(Новый Структура("РежимЗаписи", РежимЗаписиДокумента.ОтменаПроведения)) Тогда
			Предупреждение(НСтр("ru = 'Не удалось отменить проведение документа'"));
			Возврат Ложь;
		КонецЕсли;
	Иначе
		Возврат Ложь;
	КонецЕсли;

	Возврат Истина;
	
КонецФункции

&НаСервере
Функция ПроверитьЗаполненностьКолонокФакт()
	
	НайденныеСтроки = Объект.ТоварыОтбор.НайтиСтроки(Новый Структура("КоличествоУпаковокОтобрано",0));
	ЗаполненФактВОтборе =  (НайденныеСтроки.Количество() <> Объект.ТоварыОтбор.Количество());
	
	НайденныеСтроки = Объект.ТоварыРазмещение.НайтиСтроки(Новый Структура("КоличествоУпаковокРазмещено",0));
	ЗаполненФактВРазмещении = (НайденныеСтроки.Количество() <> Объект.ТоварыРазмещение.Количество());
	
	СтруктураВозврата = Новый Структура("ЗаполненФактВОтборе,ЗаполненФактВРазмещении",ЗаполненФактВОтборе,ЗаполненФактВРазмещении);
	
	Возврат СтруктураВозврата;
КонецФункции

&НаКлиенте
Функция ПодтвержденаОчисткаТЧПередЗаполнением(Операция, ИсточникДанных)
	
	ТекстВопроса = "";
	
	Если Операция = "ПодборЯчеек" Тогда
		
		Если ИсточникДанных = "ТоварыОтбор" Тогда
			ТекстВопроса = НСтр("ru='В ходе подбора данные о ячейках в табличной части ""Товары (отбор)"" будут перезаполнены. Продолжить?'"); 
		Иначе
			ТекстВопроса = НСтр("ru='В ходе подбора данные о ячейках в табличной части ""Товары (размещение)"" будут перезаполнены. Продолжить?'"); 
		КонецЕсли;
		
	ИначеЕсли Операция = "Копирование" Тогда
		
		Если ИсточникДанных = "ТоварыОтбор" Тогда
			ТекстВопроса = НСтр("ru='Перед заполнением табличная часть ""Товары (размещение)"" будет очищена. Продолжить?'");		
		Иначе
			ТекстВопроса = НСтр("ru='Перед заполнением табличная часть ""Товары (отбор)"" будет очищена. Продолжить?'");
		КонецЕсли;
		
	КонецЕсли;
	
	Ответ = Вопрос(ТекстВопроса,РежимДиалогаВопрос.ДаНет,,КодВозвратаДиалога.Да);
	Если Ответ <> КодВозвратаДиалога.Да Тогда
		Возврат Ложь;
	КонецЕсли;
	
	Возврат Истина;

КонецФункции

&НаСервере
Процедура УстановитьВидимостьПоВидуОперации()
	Если Объект.ВидОперации = Перечисления.ВидыОперацийОтбораРазмещенияТоваров.Отбор Тогда
		Элементы.ЗонаПриемки.Видимость 	= Ложь;
		Элементы.ЗонаОтгрузки.Видимость = Истина;
		Элементы.Распоряжение.Видимость = Истина;
		
		Элементы.Страницы.ТекущаяСтраница         = Элементы.Страницы.ПодчиненныеЭлементы.ГруппаТоварыОтбор;
		Элементы.ГруппаТоварыОтбор.Видимость      = Истина;
		Элементы.ГруппаТоварыРазмещение.Видимость = Ложь;
		
		Элементы.ТоварыОтборГруппаТовары.Видимость = Ложь;
		
		СтатусРаспоряжения = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Объект.Распоряжение, "Статус");
		
		Если СтатусРаспоряжения <> Перечисления.СтатусыРасходныхОрдеров.КОтбору
			И СтатусРаспоряжения <> Перечисления.СтатусыОрдеровНаПеремещение.КОтбору Тогда
			Элементы.ТоварыОтборПодобратьЯчейки.Доступность = Ложь;
		Иначе
			Элементы.ТоварыОтборПодобратьЯчейки.Доступность = Истина;
		КонецЕсли;
		
		
	ИначеЕсли Объект.ВидОперации = Перечисления.ВидыОперацийОтбораРазмещенияТоваров.Размещение Тогда
		Элементы.ЗонаОтгрузки.Видимость = Ложь;
		Элементы.ЗонаПриемки.Видимость 	= Истина;
		Элементы.Распоряжение.Видимость = Ложь;
		
		Элементы.Страницы.ТекущаяСтраница         = Элементы.Страницы.ПодчиненныеЭлементы.ГруппаТоварыРазмещение;
		Элементы.ГруппаТоварыОтбор.Видимость      = Ложь;
		Элементы.ГруппаТоварыРазмещение.Видимость = Истина;
		
		Элементы.ТоварыРазмещениеГруппаТовары.Видимость = Ложь;

	ИначеЕсли Объект.ВидОперации = Перечисления.ВидыОперацийОтбораРазмещенияТоваров.Перемещение Тогда
		Элементы.ЗонаОтгрузки.Видимость = Ложь;
		Элементы.ЗонаПриемки.Видимость 	= Ложь;
		Элементы.Распоряжение.Видимость = Ложь;
		
		Элементы.ГруппаТоварыОтбор.Видимость      = Истина;
		Элементы.ГруппаТоварыРазмещение.Видимость = Истина;
		
		Элементы.ТоварыОтборГруппаТовары.Видимость      = Истина;
		Элементы.ТоварыРазмещениеГруппаТовары.Видимость = Истина;
		
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьКоличествоВыполненоКлиент(ИмяТЧ)
	
	Если Найти(ИмяТЧ,"Отбор") <> 0 Тогда
		ИмяКоличество 			= "КоличествоОтобрано";
		ИмяКоличествоУпаковок 	= "КоличествоУпаковокОтобрано";
	Иначе
		ИмяКоличество 			= "КоличествоРазмещено";
		ИмяКоличествоУпаковок 	= "КоличествоУпаковокРазмещено";
	КонецЕсли;
	
	Для каждого СтрТабл из Объект[ИмяТЧ] Цикл
		
		СтрТабл[ИмяКоличество] 			= СтрТабл.Количество;
		СтрТабл[ИмяКоличествоУпаковок] 	= СтрТабл.КоличествоУпаковок;
		
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура СкопироватьТовары(ИмяИсточника)
	
	ТаблицаТоваров = Объект[ИмяИсточника].Выгрузить();
		
	ТаблицаТоваров.Свернуть("Номенклатура,Характеристика,Упаковка,Серия,ОбъемУпаковки,ВесУпаковки,СтатусУказанияСерий,ХарактеристикиИспользуются",
							"Количество,КоличествоУпаковок");
	
	Если ИмяИсточника = "ТоварыРазмещение" Тогда
		Объект.ТоварыОтбор.Загрузить(ТаблицаТоваров);
		
		ПараметрыУказанияСерий.ИмяТЧТовары = "ТоварыОтбор";
		ПараметрыУказанияСерий.ИмяТЧСерии  = "ТоварыОтбор";
		НоменклатураСервер.ЗаполнитьСтатусыУказанияСерий(Объект,ПараметрыУказанияСерий);

	Иначе
		Объект.ТоварыРазмещение.Загрузить(ТаблицаТоваров);	
		
		ПараметрыУказанияСерий.ИмяТЧТовары = "ТоварыРазмещение";
		ПараметрыУказанияСерий.ИмяТЧСерии  = "ТоварыРазмещение";
		НоменклатураСервер.ЗаполнитьСтатусыУказанияСерий(Объект,ПараметрыУказанияСерий);

	КонецЕсли;	
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьЯчейкуВТЧ(ИмяТЧ, Ячейка)
	Для Каждого СтрТабл из Объект[ИмяТЧ] Цикл
		СтрТабл.Ячейка = Ячейка;		
	КонецЦикла;
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьТЧТоварыОтборПоОстаткамТоваров(АдресЯчеек)
	ТаблицаЯчеек = ПолучитьИзВременногоХранилища(АдресЯчеек);
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ТаблицаЯчеек.Ячейка
	|ПОМЕСТИТЬ ТаблицаЯчеек
	|ИЗ
	|	&ТаблицаЯчеек КАК ТаблицаЯчеек
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТоварыВЯчейкахОстатки.Номенклатура,
	|	ТоварыВЯчейкахОстатки.Характеристика,
	|	ТоварыВЯчейкахОстатки.Серия,
	|	ТоварыВЯчейкахОстатки.Ячейка,
	|	ТоварыВЯчейкахОстатки.Упаковка,
	|	ТоварыВЯчейкахОстатки.ВНаличииОстаток - ТоварыВЯчейкахОстатки.КОтборуОстаток КАК КоличествоУпаковок,
	|	(ТоварыВЯчейкахОстатки.ВНаличииОстаток - ТоварыВЯчейкахОстатки.КОтборуОстаток) * ТоварыВЯчейкахОстатки.Упаковка.Коэффициент КАК Количество
	|ИЗ
	|	РегистрНакопления.ТоварыВЯчейках.Остатки(
	|			,
	|			Ячейка В
	|				(ВЫБРАТЬ
	|					ТаблицаЯчеек.Ячейка
	|				ИЗ
	|					ТаблицаЯчеек)) КАК ТоварыВЯчейкахОстатки
	|ГДЕ
	|	ТоварыВЯчейкахОстатки.ВНаличииОстаток - ТоварыВЯчейкахОстатки.КОтборуОстаток > 0
	|
	|УПОРЯДОЧИТЬ ПО
	|	ТоварыВЯчейкахОстатки.Ячейка.ПорядокОбхода,
	|	ТоварыВЯчейкахОстатки.Ячейка.Код,
	|	ТоварыВЯчейкахОстатки.Номенклатура.Наименование,
	|	ТоварыВЯчейкахОстатки.Характеристика.Наименование,
	|	ТоварыВЯчейкахОстатки.Серия.Наименование,
	|	ТоварыВЯчейкахОстатки.Упаковка.Коэффициент УБЫВ";
	Запрос.УстановитьПараметр("ТаблицаЯчеек", ТаблицаЯчеек);
	
	Объект.ТоварыОтбор.Загрузить(Запрос.Выполнить().Выгрузить());
	
	ПараметрыУказанияСерий.ИмяТЧТовары = "ТоварыОтбор";
	ПараметрыУказанияСерий.ИмяТЧСерии  = "ТоварыОтбор";
	НоменклатураСервер.ЗаполнитьСтатусыУказанияСерий(Объект,ПараметрыУказанияСерий);
	
	ПараметрыЗаполненияРеквизитов = Новый Структура;
	ПараметрыЗаполненияРеквизитов.Вставить("ЗаполнитьПризнакХарактеристикиИспользуются", Новый Структура("Номенклатура", "ХарактеристикиИспользуются"));
	НоменклатураСервер.ЗаполнитьСлужебныеРеквизитыПоНоменклатуреВКоллекции(Объект.ТоварыОтбор, ПараметрыЗаполненияРеквизитов);

КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Функция ДобавитьВСтруктуруДействияПриИзмененииКоличестваУпаковок(СтруктураДействий)
	
	СтруктураДействий.Вставить("ПересчитатьКоличествоЕдиниц");
	
КонецФункции

&НаСервере                                                                         
Процедура НастроитьПоСтатусу()
	Если Объект.Статус <> Перечисления.СтатусыОтборовРазмещенийТоваров.ВыполненоСОшибками Тогда
		Элементы.ТоварыОтборКоличествоУпаковокОтобрано.Видимость       = Ложь;
		Элементы.ТоварыОтборКоличествоУпаковок.Заголовок               = НСтр("ru = 'Количество'");
		Элементы.ТоварыРазмещениеЗаполнитьКоличествоОтобрано.Видимость = Ложь;
		
		Элементы.ТоварыРазмещениеКоличествоУпаковокРазмещено.Видимость = Ложь;
		Элементы.ТоварыРазмещениеКоличествоУпаковок.Заголовок = НСтр("ru = 'Количество'");
		Элементы.ТоварыРазмещениеЗаполнитьКоличествоРазмещено.Видимость = Ложь;
	Иначе
		Элементы.ТоварыОтборКоличествоУпаковокОтобрано.Видимость       = Истина;
		Элементы.ТоварыОтборКоличествоУпаковок.Заголовок               = НСтр("ru = 'К отбору'");
		Элементы.ТоварыРазмещениеЗаполнитьКоличествоОтобрано.Видимость = Истина;
		
		Элементы.ТоварыРазмещениеКоличествоУпаковокРазмещено.Видимость = Истина;
		Элементы.ТоварыРазмещениеКоличествоУпаковок.Заголовок = НСтр("ru = 'К размещению'");
		Элементы.ТоварыРазмещениеЗаполнитьКоличествоРазмещено.Видимость = Истина;
	КонецЕсли;
КонецПроцедуры
