#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда


///////////////////////////////////////////////////////////////////////////////
// ПРОГРАММНЫЙ ИНТЕРФЕЙС

// Функция возвращает таблицу реквизитов, зависимых от хозяйственной операции документа.
//
// Параметры:
//	ХозяйственнаяОперация - ПеречислениеСсылка.ХозяйственныеОперации - Хозяйственная операция документа
//	МассивВсехРеквизитов - Массив - Массив всех реквизитов, зависимых от хозяйственной операции
//	МассивРеквизитовОперации - Массив - Массив имен реквизитов, используемыз в выбранной хозяйственной операции
//
Функция ПолучитьМассивыРеквизитов(ХозяйственнаяОперация, МассивВсехРеквизитов, МассивРеквизитовОперации) Экспорт
	
	МассивВсехРеквизитов = Новый Массив;
	МассивВсехРеквизитов.Добавить("Контрагент");
	МассивВсехРеквизитов.Добавить("БанковскийСчетКонтрагента");
	МассивВсехРеквизитов.Добавить("РасшифровкаПлатежа");
	МассивВсехРеквизитов.Добавить("РасшифровкаПлатежа.Партнер");
	МассивВсехРеквизитов.Добавить("РасшифровкаПлатежа.Заказ");
	МассивВсехРеквизитов.Добавить("РасшифровкаПлатежа.СуммаВзаиморасчетов");
	МассивВсехРеквизитов.Добавить("РасшифровкаПлатежа.ВалютаВзаиморасчетов");
	МассивВсехРеквизитов.Добавить("ПодотчетноеЛицо");
	МассивВсехРеквизитов.Добавить("АвансовыйОтчет");
	МассивВсехРеквизитов.Добавить("РасшифровкаПлатежа.СтатьяРасходов");
	МассивВсехРеквизитов.Добавить("РасшифровкаПлатежа.АналитикаРасходов");
	МассивВсехРеквизитов.Добавить("ОрганизацияПолучатель");
	МассивВсехРеквизитов.Добавить("БанковскийСчетПолучатель");
	МассивВсехРеквизитов.Добавить("КассаПолучатель");
	МассивВсехРеквизитов.Добавить("ВалютаКонвертации");
	МассивВсехРеквизитов.Добавить("КурсКонвертации");
	МассивВсехРеквизитов.Добавить("СуммаПослеКонвертации");
	МассивВсехРеквизитов.Добавить("ВедомостиНаВыплатуЗарплаты");
	МассивВсехРеквизитов.Добавить("СтатьяДвиженияДенежныхСредств");
	МассивВсехРеквизитов.Добавить("ПланированиеСуммы");
	МассивВсехРеквизитов.Добавить("РасшифровкаПлатежа.СтатьяДвиженияДенежныхСредств");
	МассивВсехРеквизитов.Добавить("РасшифровкаПлатежа.ДоговорКредитаДепозита");
	МассивВсехРеквизитов.Добавить("НомерВедомостиНаВыплатуЗарплаты");
	МассивВсехРеквизитов.Добавить("ДатаВедомостиНаВыплатуЗарплаты");
	МассивВсехРеквизитов.Добавить("СтатьяРасходов");
	МассивВсехРеквизитов.Добавить("АналитикаРасходов");
	МассивВсехРеквизитов.Добавить("ПериодВозникновенияРасхода");
	
	МассивРеквизитовОперации = Новый Массив;
	Если ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ОплатаПоставщику Тогда
		МассивРеквизитовОперации.Добавить("Контрагент");
		МассивРеквизитовОперации.Добавить("БанковскийСчетКонтрагента");
		МассивРеквизитовОперации.Добавить("РасшифровкаПлатежа");
		МассивРеквизитовОперации.Добавить("РасшифровкаПлатежа.Партнер");
		МассивРеквизитовОперации.Добавить("РасшифровкаПлатежа.Заказ");
		МассивРеквизитовОперации.Добавить("РасшифровкаПлатежа.СуммаВзаиморасчетов");
		МассивРеквизитовОперации.Добавить("РасшифровкаПлатежа.ВалютаВзаиморасчетов");
		МассивРеквизитовОперации.Добавить("СтатьяДвиженияДенежныхСредств");
		МассивРеквизитовОперации.Добавить("ПланированиеСуммы");
	
	ИначеЕсли ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВозвратОплатыКлиенту Тогда
		МассивРеквизитовОперации.Добавить("Контрагент");
		МассивРеквизитовОперации.Добавить("БанковскийСчетКонтрагента");
		МассивРеквизитовОперации.Добавить("РасшифровкаПлатежа");
		МассивРеквизитовОперации.Добавить("РасшифровкаПлатежа.Партнер");
		МассивРеквизитовОперации.Добавить("РасшифровкаПлатежа.Заказ");
		МассивРеквизитовОперации.Добавить("РасшифровкаПлатежа.СуммаВзаиморасчетов");
		МассивРеквизитовОперации.Добавить("РасшифровкаПлатежа.ВалютаВзаиморасчетов");
		МассивРеквизитовОперации.Добавить("СтатьяДвиженияДенежныхСредств");
		МассивРеквизитовОперации.Добавить("ПланированиеСуммы");
		
	ИначеЕсли ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВыдачаДенежныхСредствПодотчетнику Тогда
		МассивРеквизитовОперации.Добавить("ПодотчетноеЛицо");
		МассивРеквизитовОперации.Добавить("БанковскийСчетКонтрагента");
		МассивРеквизитовОперации.Добавить("АвансовыйОтчет");
		МассивРеквизитовОперации.Добавить("СтатьяДвиженияДенежныхСредств");
		
	ИначеЕсли ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ПрочиеРасходы Тогда
		МассивРеквизитовОперации.Добавить("Контрагент");
		МассивРеквизитовОперации.Добавить("БанковскийСчетКонтрагента");
		МассивРеквизитовОперации.Добавить("РасшифровкаПлатежа");
		МассивРеквизитовОперации.Добавить("РасшифровкаПлатежа.СтатьяРасходов");
		МассивРеквизитовОперации.Добавить("РасшифровкаПлатежа.АналитикаРасходов");
		МассивРеквизитовОперации.Добавить("СтатьяДвиженияДенежныхСредств");
		
	ИначеЕсли ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ПеречислениеТаможне Тогда
		МассивРеквизитовОперации.Добавить("Контрагент");
		МассивРеквизитовОперации.Добавить("БанковскийСчетКонтрагента");
		МассивРеквизитовОперации.Добавить("РасшифровкаПлатежа");
		МассивРеквизитовОперации.Добавить("РасшифровкаПлатежа.Партнер");
		МассивРеквизитовОперации.Добавить("РасшифровкаПлатежа.Заказ");
		МассивРеквизитовОперации.Добавить("РасшифровкаПлатежа.СуммаВзаиморасчетов");
		МассивРеквизитовОперации.Добавить("РасшифровкаПлатежа.ВалютаВзаиморасчетов");
		МассивРеквизитовОперации.Добавить("СтатьяДвиженияДенежныхСредств");
		МассивРеквизитовОперации.Добавить("ПланированиеСуммы");
		
	ИначеЕсли ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ПеречислениеВБюджет Тогда
		МассивРеквизитовОперации.Добавить("Контрагент");
		МассивРеквизитовОперации.Добавить("БанковскийСчетКонтрагента");
		МассивРеквизитовОперации.Добавить("РасшифровкаПлатежа");
		МассивРеквизитовОперации.Добавить("РасшифровкаПлатежа.СтатьяРасходов");
		МассивРеквизитовОперации.Добавить("РасшифровкаПлатежа.АналитикаРасходов");
		МассивРеквизитовОперации.Добавить("СтатьяДвиженияДенежныхСредств");
		
	ИначеЕсли ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ПрочаяВыдачаДенежныхСредств Тогда
		МассивРеквизитовОперации.Добавить("Контрагент");
		МассивРеквизитовОперации.Добавить("БанковскийСчетКонтрагента");
		МассивРеквизитовОперации.Добавить("СтатьяДвиженияДенежныхСредств");
		
	ИначеЕсли ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ОплатаДенежныхСредствВДругуюОрганизацию Тогда
		МассивРеквизитовОперации.Добавить("ОрганизацияПолучатель");
		МассивРеквизитовОперации.Добавить("БанковскийСчетПолучатель");
		МассивРеквизитовОперации.Добавить("КассаПолучатель");
		МассивРеквизитовОперации.Добавить("РасшифровкаПлатежа");
		МассивРеквизитовОперации.Добавить("РасшифровкаПлатежа.Заказ");
		МассивРеквизитовОперации.Добавить("РасшифровкаПлатежа.СуммаВзаиморасчетов");
		МассивРеквизитовОперации.Добавить("РасшифровкаПлатежа.ВалютаВзаиморасчетов");
		МассивРеквизитовОперации.Добавить("СтатьяДвиженияДенежныхСредств");
		МассивРеквизитовОперации.Добавить("ПланированиеСуммы");
		
	ИначеЕсли ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВозвратДенежныхСредствВДругуюОрганизацию Тогда
		МассивРеквизитовОперации.Добавить("ОрганизацияПолучатель");
		МассивРеквизитовОперации.Добавить("БанковскийСчетПолучатель");
		МассивРеквизитовОперации.Добавить("КассаПолучатель");
		МассивРеквизитовОперации.Добавить("РасшифровкаПлатежа");
		МассивРеквизитовОперации.Добавить("РасшифровкаПлатежа.Заказ");
		МассивРеквизитовОперации.Добавить("РасшифровкаПлатежа.СуммаВзаиморасчетов");
		МассивРеквизитовОперации.Добавить("РасшифровкаПлатежа.ВалютаВзаиморасчетов");
		МассивРеквизитовОперации.Добавить("СтатьяДвиженияДенежныхСредств");
		
	ИначеЕсли ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВнутренняяПередачаДенежныхСредств Тогда
		МассивРеквизитовОперации.Добавить("ОрганизацияПолучатель");
		МассивРеквизитовОперации.Добавить("БанковскийСчетПолучатель");
		МассивРеквизитовОперации.Добавить("КассаПолучатель");
		МассивРеквизитовОперации.Добавить("СтатьяДвиженияДенежныхСредств");
		
	ИначеЕсли ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.КонвертацияВалюты Тогда
		МассивРеквизитовОперации.Добавить("Контрагент");
		МассивРеквизитовОперации.Добавить("БанковскийСчетКонтрагента");
		МассивРеквизитовОперации.Добавить("ВалютаКонвертации");
		МассивРеквизитовОперации.Добавить("КурсКонвертации");
		МассивРеквизитовОперации.Добавить("СуммаПослеКонвертации");
		МассивРеквизитовОперации.Добавить("СтатьяДвиженияДенежныхСредств");
		
	ИначеЕсли ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВыплатаЗаработнойПлатыПоВедомостям Тогда
		МассивРеквизитовОперации.Добавить("ВедомостиНаВыплатуЗарплаты");
		МассивРеквизитовОперации.Добавить("НомерВедомостиНаВыплатуЗарплаты");
		МассивРеквизитовОперации.Добавить("ДатаВедомостиНаВыплатуЗарплаты");
		МассивРеквизитовОперации.Добавить("СтатьяРасходов");
		МассивРеквизитовОперации.Добавить("АналитикаРасходов");
		МассивРеквизитовОперации.Добавить("ПериодВозникновенияРасхода");
		МассивРеквизитовОперации.Добавить("Контрагент");
		МассивРеквизитовОперации.Добавить("БанковскийСчетКонтрагента");
		//акСедых 03.03.2014 начало >>
		МассивРеквизитовОперации.Добавить("СтатьяДвиженияДенежныхСредств");
        //акСедых 03.03.2014 конец <<
		
	ИначеЕсли ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ОплатаПоКредитам
		ИЛИ ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВыплатаПоДепозитам 
		ИЛИ ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВыплатаПоЗаймамВыданным Тогда
		
		МассивРеквизитовОперации.Добавить("Контрагент");
		МассивРеквизитовОперации.Добавить("БанковскийСчетКонтрагента");
		МассивРеквизитовОперации.Добавить("ПланированиеСуммы");
		МассивРеквизитовОперации.Добавить("РасшифровкаПлатежа");
		МассивРеквизитовОперации.Добавить("РасшифровкаПлатежа.Партнер");
		МассивРеквизитовОперации.Добавить("РасшифровкаПлатежа.ДоговорКредитаДепозита");
		МассивРеквизитовОперации.Добавить("РасшифровкаПлатежа.СтатьяДвиженияДенежныхСредств");
		МассивРеквизитовОперации.Добавить("РасшифровкаПлатежа.СуммаВзаиморасчетов");
		МассивРеквизитовОперации.Добавить("РасшифровкаПлатежа.ВалютаВзаиморасчетов");
		
	КонецЕсли;
	
КонецФункции

// Функция получает реквизиты выбранной заявки на расходование денежных средств.
//
// Параметры:
//  Заявка - ДокументСсылка.ЗаявкаНаРасходованиеДенежныхСредств - Ссылка на заявку
//
// Возвращаемое значение:
//	Структура - Реквизиты выбранной заявки
//
Функция ПолучитьРеквизитыЗаявки(Заявка) Экспорт
	
	Запрос = Новый Запрос("
	|ВЫБРАТЬ
	|	ДанныеДокумента.Организация КАК Организация,
	|	ВЫБОР
	|		КОГДА ДанныеДокумента.ФормаОплатыЗаявки = ЗНАЧЕНИЕ(Перечисление.ФормыОплаты.Наличная)
	|				И ДанныеДокумента.Касса <> ЗНАЧЕНИЕ(Справочник.Кассы.ПустаяСсылка)
	|			ТОГДА ДанныеДокумента.Касса.ВалютаДенежныхСредств
	|		КОГДА ДанныеДокумента.ФормаОплатыЗаявки = ЗНАЧЕНИЕ(Перечисление.ФормыОплаты.Безналичная)
	|				И ДанныеДокумента.БанковскийСчет <> ЗНАЧЕНИЕ(Справочник.БанковскиеСчетаОрганизаций.ПустаяСсылка)
	|			ТОГДА ДанныеДокумента.БанковскийСчет.ВалютаДенежныхСредств
	|		ИНАЧЕ ДанныеДокумента.Валюта
	|	КОНЕЦ КАК Валюта,
	|	ДанныеДокумента.Статус КАК Статус
	|ИЗ
	|	Документ.ЗаявкаНаРасходованиеДенежныхСредств КАК ДанныеДокумента
	|ГДЕ
	|	ДанныеДокумента.Ссылка = &Заявка
	|");
	
	Запрос.УстановитьПараметр("Заявка", Заявка);
	
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда
		Организация = Выборка.Организация;
		Валюта = Выборка.Валюта;
		Статус = Выборка.Статус;
	Иначе
		Организация = Неопределено;
		Валюта = Неопределено;
		Статус = Неопределено;
	КонецЕсли;
	
	СтруктураРеквизитов = Новый Структура("Организация, Валюта, Статус",
		Организация,
		Валюта,
		Статус
	);
	
	Возврат СтруктураРеквизитов;

КонецФункции

///////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

///////////////////////////////////////////////////////////////////////////////
// Проведение

Процедура ИнициализироватьДанныеДокумента(ДокументСсылка, СтруктураДополнительныеСвойства) Экспорт
	
	Запрос = Новый Запрос("
	|ВЫБРАТЬ
	|	ДанныеДокумента.Дата КАК Период,
	|	ДанныеДокумента.ДатаПлатежа КАК ДатаПлатежа,
	|	ДанныеДокумента.ЖелательнаяДатаПлатежа КАК ЖелательнаяДатаПлатежа,
	|	ДанныеДокумента.Организация КАК Организация,
	|	ДанныеДокумента.ОрганизацияПолучатель КАК ОрганизацияПолучатель,
	|	ДанныеДокумента.Контрагент КАК Контрагент,
	|	ДанныеДокумента.ПодотчетноеЛицо КАК ПодотчетноеЛицо,
	|	ДанныеДокумента.Валюта КАК Валюта,
	|	ДанныеДокумента.Статус КАК Статус,
	|	ДанныеДокумента.ХозяйственнаяОперация КАК ХозяйственнаяОперация,
	|	ДанныеДокумента.СтатьяДвиженияДенежныхСредств КАК СтатьяДвиженияДенежныхСредств,
	|	ДанныеДокумента.СтатьяРасходов КАК СтатьяРасходов,
	|	ДанныеДокумента.АналитикаРасходов КАК АналитикаРасходов
	|ИЗ
	|	Документ.ЗаявкаНаРасходованиеДенежныхСредств КАК ДанныеДокумента
	|	
	|ГДЕ
	|	ДанныеДокумента.Ссылка = &Ссылка
	|");
	Запрос.УстановитьПараметр("Ссылка", ДокументСсылка);
	Реквизиты = Запрос.Выполнить().Выбрать();
	Реквизиты.Следующий();
	
	МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	ИнициализироватьКлючиАналитикиУчетаПоПартнерам(Реквизиты, ДокументСсылка, МенеджерВременныхТаблиц);
	
	МассивПараметровРезультатовЗапроса = Новый Массив;
	
	ТекстЗапроса = ТекстЗапросаВременнаяТаблицаРасшифровкаПлатежа(МассивПараметровРезультатовЗапроса)
		+ ТекстЗапросаТаблицаДенежныеСредстваКВыплате(МассивПараметровРезультатовЗапроса)
		;
	
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("Ссылка", ДокументСсылка);
	Запрос.УстановитьПараметр("Период", Реквизиты.Период);
	Запрос.УстановитьПараметр("ДатаПлатежа", Реквизиты.ДатаПлатежа);
	Запрос.УстановитьПараметр("ЖелательнаяДатаПлатежа", Реквизиты.ЖелательнаяДатаПлатежа);
	Запрос.УстановитьПараметр("Статус", Реквизиты.Статус);
	Запрос.УстановитьПараметр("Организация", Реквизиты.Организация);
	Запрос.УстановитьПараметр("Контрагент", Реквизиты.Контрагент);
	Запрос.УстановитьПараметр("ОрганизацияПолучатель", Реквизиты.ОрганизацияПолучатель);
	Запрос.УстановитьПараметр("ПодотчетноеЛицо", Реквизиты.ПодотчетноеЛицо);
	Запрос.УстановитьПараметр("ХозяйственнаяОперация", Реквизиты.ХозяйственнаяОперация);
	
	Запрос.УстановитьПараметр("СтатьяДвиженияДенежныхСредств", СтатьяДвиженияДенежныхСредствДокумента(Реквизиты));
	Запрос.УстановитьПараметр("ИспользоватьПланированиеДенежныхСредств", ПолучитьФункциональнуюОпцию("ИспользоватьПланированиеДенежныхСредств"));
	Запрос.УстановитьПараметр("ИспользоватьНачислениеЗарплаты", Константы.ИспользоватьНачислениеЗарплаты.Получить());
	Запрос.УстановитьПараметр("СтатьяРасходов", Реквизиты.СтатьяРасходов);
	Запрос.УстановитьПараметр("АналитикаРасходов", Реквизиты.АналитикаРасходов);
	
	
	Если Реквизиты.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ОплатаДенежныхСредствВДругуюОрганизацию
		Или Реквизиты.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВозвратДенежныхСредствВДругуюОрганизацию
	Тогда
		СтруктураАналитики = Новый Структура("Организация, Контрагент, Партнер",
			Реквизиты.Организация,
			Реквизиты.ОрганизацияПолучатель,
			Справочники.Партнеры.НашеПредприятие
		);
	ИначеЕсли Реквизиты.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВыплатаЗаработнойПлатыПоВедомостям Тогда
		СтруктураАналитики = Новый Структура("Организация, Контрагент, Партнер",
			Реквизиты.Организация,
			Справочники.Контрагенты.ПустаяСсылка(),
			Справочники.Партнеры.ПустаяСсылка()
		);
	Иначе
		СтруктураАналитики = Новый Структура("Организация, Контрагент, Партнер",
			Реквизиты.Организация,
			Реквизиты.Контрагент,
			Справочники.Партнеры.ПустаяСсылка()
		);
	КонецЕсли;
	АналитикаУчетаПоПартнерам = РегистрыСведений.АналитикаУчетаПоПартнерам.ЗначениеКлючаАналитики(СтруктураАналитики);

	Запрос.УстановитьПараметр("АналитикаУчетаПоПартнерам", АналитикаУчетаПоПартнерам);
	
	МассивРезультатов = Запрос.ВыполнитьПакет();
	
	ЗаполнитьДополнительныеСвойстваДляДвижений(СтруктураДополнительныеСвойства, МассивРезультатов, МассивПараметровРезультатовЗапроса);
	
КонецПроцедуры

Процедура ИнициализироватьКлючиАналитикиУчетаПоПартнерам(Реквизиты, ДокументСсылка, МенеджерВременныхТаблиц)

	Запрос = Новый Запрос("
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	&Организация КАК Организация,
	|	&Контрагент КАК Контрагент,
	|	ТаблицаРасшифровкаПлатежа.Партнер КАК Партнер
	|ИЗ
	|	Документ.ЗаявкаНаРасходованиеДенежныхСредств.РасшифровкаПлатежа КАК ТаблицаРасшифровкаПлатежа
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РегистрСведений.АналитикаУчетаПоПартнерам КАК Аналитика
	|	ПО
	|		&Организация = Аналитика.Организация
	|		И &Контрагент = Аналитика.Контрагент
	|		И ТаблицаРасшифровкаПлатежа.Партнер = Аналитика.Партнер
	|ГДЕ
	|	ТаблицаРасшифровкаПлатежа.Ссылка = &Ссылка
	|	И Аналитика.КлючАналитики ЕСТЬ NULL
	|	И &ХозяйственнаяОперация В (
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратОплатыКлиенту),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОплатаПоставщику),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПеречислениеТаможне),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОплатаПоКредитам), 
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыплатаПоДепозитам), 
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыплатаПоЗаймамВыданным)
	|		)
	|");
	Запрос.УстановитьПараметр("Ссылка", ДокументСсылка);
	Запрос.УстановитьПараметр("Организация", Реквизиты.Организация);
	Запрос.УстановитьПараметр("Контрагент", Реквизиты.Контрагент);
	Запрос.УстановитьПараметр("ХозяйственнаяОперация", Реквизиты.ХозяйственнаяОперация);
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;

	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		РегистрыСведений.АналитикаУчетаПоПартнерам.СоздатьКлючАналитики(Выборка);
	КонецЦикла;

КонецПроцедуры

Функция ТекстЗапросаВременнаяТаблицаРасшифровкаПлатежа(МассивПараметровРезультатовЗапроса)
	
	МассивПараметровРезультатовЗапроса.Добавить(ПараметрыРезультатаЗапроса("ВременнаяТаблицаРасшифровкиПлатежа", Истина));
	
	ТекстЗапроса = "
	|ВЫБРАТЬ
	|	ТаблицаРасшифровкаПлатежа.НомерСтроки КАК НомерСтроки,
	|	ТаблицаРасшифровкаПлатежа.Заказ КАК Заказ,
	|
	|	ТаблицаРасшифровкаПлатежа.Сумма КАК Сумма,
	|	ТаблицаРасшифровкаПлатежа.СуммаВзаиморасчетов,
	|	ТаблицаРасшифровкаПлатежа.ВалютаВзаиморасчетов,
	|
	|	ЕСТЬNULL(Аналитика.КлючАналитики, Неопределено) КАК АналитикаУчетаПоПартнерам,
	|	ТаблицаРасшифровкаПлатежа.ДоговорКредитаДепозита КАК ДоговорКредитаДепозита,
	|	ТаблицаРасшифровкаПлатежа.СтатьяДвиженияДенежныхСредств КАК СтатьяДвиженияДенежныхСредств
	|
	|ПОМЕСТИТЬ ТаблицаРасшифровкаПлатежа
	|ИЗ
	|	Документ.ЗаявкаНаРасходованиеДенежныхСредств.РасшифровкаПлатежа КАК ТаблицаРасшифровкаПлатежа
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РегистрСведений.АналитикаУчетаПоПартнерам КАК Аналитика
	|	ПО
	|		&Организация = Аналитика.Организация
	|		И &Контрагент = Аналитика.Контрагент
	|		И ТаблицаРасшифровкаПлатежа.Партнер = Аналитика.Партнер
	|ГДЕ
	|	ТаблицаРасшифровкаПлатежа.Ссылка = &Ссылка
	|	И &ХозяйственнаяОперация В (
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратОплатыКлиенту),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОплатаПоставщику),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПеречислениеТаможне)
	|		)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ТаблицаРасшифровкаПлатежа.НомерСтроки КАК НомерСтроки,
	|	ТаблицаРасшифровкаПлатежа.Заказ КАК Заказ,
	|
	|	ТаблицаРасшифровкаПлатежа.Сумма КАК Сумма,
	|	ТаблицаРасшифровкаПлатежа.СуммаВзаиморасчетов,
	|	ТаблицаРасшифровкаПлатежа.ВалютаВзаиморасчетов,
	|
	|	ЕСТЬNULL(Аналитика.КлючАналитики, Неопределено) КАК АналитикаУчетаПоПартнерам,
	|	ТаблицаРасшифровкаПлатежа.ДоговорКредитаДепозита КАК ДоговорКредитаДепозита,
	|	ТаблицаРасшифровкаПлатежа.СтатьяДвиженияДенежныхСредств КАК СтатьяДвиженияДенежныхСредств
	|ИЗ
	|	Документ.ЗаявкаНаРасходованиеДенежныхСредств.РасшифровкаПлатежа КАК ТаблицаРасшифровкаПлатежа
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РегистрСведений.АналитикаУчетаПоПартнерам КАК Аналитика
	|	ПО
	|		&Организация = Аналитика.Организация
	|		И &ОрганизацияПолучатель = Аналитика.Контрагент
	|		И ЗНАЧЕНИЕ(Справочник.Партнеры.НашеПредприятие) = Аналитика.Партнер
	|ГДЕ
	|	ТаблицаРасшифровкаПлатежа.Ссылка = &Ссылка
	|	И &ХозяйственнаяОперация В (
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОплатаДенежныхСредствВДругуюОрганизацию),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратДенежныхСредствВДругуюОрганизацию)
	|	)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ТаблицаРасшифровкаПлатежа.НомерСтроки,
	|	ТаблицаРасшифровкаПлатежа.Заказ,
	|
	|	ТаблицаРасшифровкаПлатежа.Сумма,
	|	ТаблицаРасшифровкаПлатежа.СуммаВзаиморасчетов,
	|	ТаблицаРасшифровкаПлатежа.ВалютаВзаиморасчетов,
	|
	|	ЕСТЬNULL(Аналитика.КлючАналитики, НЕОПРЕДЕЛЕНО),
	|	ТаблицаРасшифровкаПлатежа.ДоговорКредитаДепозита,
	|	ТаблицаРасшифровкаПлатежа.СтатьяДвиженияДенежныхСредств
	|ИЗ
	|	Документ.ЗаявкаНаРасходованиеДенежныхСредств.РасшифровкаПлатежа КАК ТаблицаРасшифровкаПлатежа
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаПоПартнерам КАК Аналитика
	|		ПО (&Организация = Аналитика.Организация)
	|			И (&Контрагент = Аналитика.Контрагент)
	|			И ТаблицаРасшифровкаПлатежа.Партнер = Аналитика.Партнер
	|ГДЕ
	|	ТаблицаРасшифровкаПлатежа.Ссылка = &Ссылка
	|	И &ХозяйственнаяОперация В (
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОплатаПоКредитам), 
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыплатаПоДепозитам), 
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыплатаПоЗаймамВыданным))
	|;
	|/////////////////////////////////////////////////////////////////////////////
	|";
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаДенежныеСредстваКВыплате(МассивПараметровРезультатовЗапроса)
	
	МассивПараметровРезультатовЗапроса.Добавить(ПараметрыРезультатаЗапроса("ТаблицаДенежныеСредстваКВыплате"));
	
	ТекстЗапроса = "
	|ВЫБРАТЬ
	|	ТаблицаРасшифровкаПлатежа.НомерСтроки КАК НомерСтрокиЗаявки,
	|	0 КАК НомерСтрокиВедомости,
	|	
	|	ВЫБОР КОГДА &ДатаПлатежа <> ДАТАВРЕМЯ(1,1,1) ТОГДА
	|		&ДатаПлатежа
	|	КОГДА &ЖелательнаяДатаПлатежа <> ДАТАВРЕМЯ(1,1,1) ТОГДА
	|		&ЖелательнаяДатаПлатежа
	|	ИНАЧЕ
	|		&Период
	|	КОНЕЦ КАК Период,
	|	
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
	|	&Организация КАК Организация,
	|	&Ссылка КАК ЗаявкаНаРасходованиеДенежныхСредств,
	|	&ХозяйственнаяОперация КАК ХозяйственнаяОперация,
	|	&ПодотчетноеЛицо КАК ПодотчетноеЛицо,
	|	ТаблицаРасшифровкаПлатежа.АналитикаУчетаПоПартнерам КАК АналитикаУчетаПоПартнерам,
	|	
	|	ВЫБОР
	|		КОГДА &ХозяйственнаяОперация В (
	|				ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОплатаПоКредитам), 
	|				ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыплатаПоДепозитам), 
	|				ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыплатаПоЗаймамВыданным))
	|			ТОГДА ТаблицаРасшифровкаПлатежа.СтатьяДвиженияДенежныхСредств
	|		ИНАЧЕ &СтатьяДвиженияДенежныхСредств
	|	КОНЕЦ КАК СтатьяДвиженияДенежныхСредств,
	|	
	|	ТаблицаРасшифровкаПлатежа.Заказ КАК Заказ,
	|	Неопределено КАК СтатьяРасходов,
	|	Неопределено КАК АналитикаРасходов,
	|	ТаблицаРасшифровкаПлатежа.ДоговорКредитаДепозита КАК ДоговорКредитаДепозита,
	|	ТаблицаРасшифровкаПлатежа.Сумма КАК Сумма
	|
	|ИЗ
	|	Документ.ЗаявкаНаРасходованиеДенежныхСредств КАК ДанныеДокумента
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		ТаблицаРасшифровкаПлатежа КАК ТаблицаРасшифровкаПлатежа
	|	ПО
	|		Истина
	|
	|ГДЕ
	|	ДанныеДокумента.Ссылка = &Ссылка
	|	И &ИспользоватьПланированиеДенежныхСредств
	|	И &Статус <> ЗНАЧЕНИЕ(Перечисление.СтатусыЗаявокНаРасходованиеДенежныхСредств.Отклонена)
	|	И &ХозяйственнаяОперация В (
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратОплатыКлиенту),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОплатаПоставщику),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПеречислениеТаможне),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОплатаДенежныхСредствВДругуюОрганизацию),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратДенежныхСредствВДругуюОрганизацию),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОплатаПоКредитам), 
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыплатаПоДепозитам), 
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыплатаПоЗаймамВыданным)
	|		)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ТаблицаРасшифровкаПлатежа.НомерСтроки КАК НомерСтрокиЗаявки,
	|	0 КАК НомерСтрокиВедомости,
	|	
	|	ВЫБОР КОГДА &ДатаПлатежа <> ДАТАВРЕМЯ(1,1,1) ТОГДА
	|		&ДатаПлатежа
	|	КОГДА &ЖелательнаяДатаПлатежа <> ДАТАВРЕМЯ(1,1,1) ТОГДА
	|		&ЖелательнаяДатаПлатежа
	|	ИНАЧЕ
	|		&Период
	|	КОНЕЦ КАК Период,
	|	
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
	|	&Организация КАК Организация,
	|	&Ссылка КАК ЗаявкаНаРасходованиеДенежныхСредств,
	|	&ХозяйственнаяОперация КАК ХозяйственнаяОперация,
	|	&ПодотчетноеЛицо КАК ПодотчетноеЛицо,
	|	&АналитикаУчетаПоПартнерам КАК АналитикаУчетаПоПартнерам,
	|	&СтатьяДвиженияДенежныхСредств КАК СтатьяДвиженияДенежныхСредств,
	|	Неопределено КАК Заказ,
	|	ТаблицаРасшифровкаПлатежа.СтатьяРасходов КАК СтатьяРасходов,
	|	ТаблицаРасшифровкаПлатежа.АналитикаРасходов КАК АналитикаРасходов,
	|	ТаблицаРасшифровкаПлатежа.ДоговорКредитаДепозита КАК ДоговорКредитаДепозита,
	|	ЕСТЬNULL(ТаблицаРасшифровкаПлатежа.Сумма, ДанныеДокумента.СуммаДокумента) КАК Сумма
	|
	|ИЗ
	|	Документ.ЗаявкаНаРасходованиеДенежныхСредств КАК ДанныеДокумента
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		Документ.ЗаявкаНаРасходованиеДенежныхСредств.РасшифровкаПлатежа КАК ТаблицаРасшифровкаПлатежа
	|	ПО
	|		ДанныеДокумента.Ссылка = ТаблицаРасшифровкаПлатежа.Ссылка
	|
	|ГДЕ
	|	ДанныеДокумента.Ссылка = &Ссылка
	|	И &ИспользоватьПланированиеДенежныхСредств
	|	И &Статус <> ЗНАЧЕНИЕ(Перечисление.СтатусыЗаявокНаРасходованиеДенежныхСредств.Отклонена)
	|	И &ХозяйственнаяОперация Не В (
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратОплатыКлиенту),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОплатаПоставщику),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПеречислениеТаможне),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОплатаДенежныхСредствВДругуюОрганизацию),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратДенежныхСредствВДругуюОрганизацию),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыплатаЗаработнойПлатыПоВедомостям),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОплатаПоКредитам), 
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыплатаПоДепозитам), 
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыплатаПоЗаймамВыданным)
	|		)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	0 КАК НомерСтрокиЗаявки,
	|	0 КАК НомерСтрокиВедомости,
	|	
	|	ВЫБОР КОГДА &ДатаПлатежа <> ДАТАВРЕМЯ(1,1,1) ТОГДА
	|		&ДатаПлатежа
	|	КОГДА &ЖелательнаяДатаПлатежа <> ДАТАВРЕМЯ(1,1,1) ТОГДА
	|		&ЖелательнаяДатаПлатежа
	|	ИНАЧЕ
	|		&Период
	|	КОНЕЦ КАК Период,
	|	
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
	|	&Организация КАК Организация,
	|	&Ссылка КАК ЗаявкаНаРасходованиеДенежныхСредств,
	|	&ХозяйственнаяОперация КАК ХозяйственнаяОперация,
	|	НЕОПРЕДЕЛЕНО КАК ПодотчетноеЛицо,
	|	&АналитикаУчетаПоПартнерам КАК АналитикаУчетаПоПартнерам,
	|	&СтатьяДвиженияДенежныхСредств КАК СтатьяДвиженияДенежныхСредств,
	|	Неопределено КАК Заказ,
	|	&СтатьяРасходов КАК СтатьяРасходов,
	|	&АналитикаРасходов КАК АналитикаРасходов,
	|	Неопределено КАК ДоговорКредитаДепозита,
	|	ДанныеДокумента.СуммаДокумента КАК Сумма
	|ИЗ
	|	Документ.ЗаявкаНаРасходованиеДенежныхСредств КАК ДанныеДокумента
	|
	|ГДЕ
	|	ДанныеДокумента.Ссылка = &Ссылка
	|	И &ИспользоватьПланированиеДенежныхСредств
	|	И &Статус <> ЗНАЧЕНИЕ(Перечисление.СтатусыЗаявокНаРасходованиеДенежныхСредств.Отклонена)
	|	И &ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыплатаЗаработнойПлатыПоВедомостям)
	|	И НЕ &ИспользоватьНачислениеЗарплаты
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтрокиЗаявки,
	|	НомерСтрокиВедомости
	|;
	|/////////////////////////////////////////////////////////////////////////////
	|";
	
	Возврат ТекстЗапроса;
	
КонецФункции

///////////////////////////////////////////////////////////////////////////////
// Прочее

Функция СформироватьЗапросПроверкиПриСменеСтатуса(МассивДокументов, НовыйСтатус, ДополнительныеПараметры) Экспорт
	
	ЗначениеНовогоСтатуса = Перечисления.СтатусыЗаявокНаРасходованиеДенежныхСредств[НовыйСтатус];
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ТаблицаДокументов.Ссылка КАК Ссылка,
	|	ПРЕДСТАВЛЕНИЕ(ТаблицаДокументов.Ссылка) КАК Представление,
	|	ПРЕДСТАВЛЕНИЕ(ТаблицаДокументов.Статус) КАК ПредставлениеТекущегоСтатуса,
	|	ПРЕДСТАВЛЕНИЕ(&Статус) КАК ПредставлениеНовогоСтатуса,
	|	ВЫБОР
	|		КОГДА ТаблицаДокументов.Статус = &Статус
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК СтатусСовпадает,
	|	ТаблицаДокументов.Проведен КАК Проведен,
	|	ТаблицаДокументов.ПометкаУдаления КАК ПометкаУдаления,
	|	ИСТИНА КАК ЗаписьПроведением
	|ИЗ
	|	Документ.ЗаявкаНаРасходованиеДенежныхСредств КАК ТаблицаДокументов
	|ГДЕ
	|	ТаблицаДокументов.Ссылка В(&МассивДокументов)";
	
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.УстановитьПараметр("Статус", ЗначениеНовогоСтатуса);
	Запрос.УстановитьПараметр("МассивДокументов", МассивДокументов);
	
	Возврат Запрос;
	
КонецФункции

Функция ПроверкаПередСменойСтатуса(ВыборкаПроверки, НовыйСтатус, ДополнительныеПараметры) Экспорт
	
	Возврат Истина; // Для документа "ЗаявкаНаРасходованиеДенежныхСредств" дополнительные проверки отсутствуют
	
КонецФункции

Функция ИменаРолейСПравомДобавления() Экспорт
	
	МассивРолей = Новый Массив;
	МассивРолей.Добавить("ПолныеПрава");
	МассивРолей.Добавить("ДобавлениеИзменениеЗаявокНаРасходДС");
	Возврат МассивРолей;
	
КонецФункции

Функция СтатьяДвиженияДенежныхСредствДокумента(ДанныеДокумента)

	Если ЗначениеЗаполнено(ДанныеДокумента.СтатьяДвиженияДенежныхСредств) Тогда
		СтатьяДвиженияДенежныхСредств = ДанныеДокумента.СтатьяДвиженияДенежныхСредств;
	Иначе
		СтатьяДвиженияДенежныхСредств = Справочники.СтатьиДвиженияДенежныхСредств.ПредопределеннаяСтатьяДДС(
			ДанныеДокумента.ХозяйственнаяОперация,
			ДанныеДокумента.Валюта
		);
	КонецЕсли;
	
	Возврат СтатьяДвиженияДенежныхСредств;

КонецФункции

Процедура ЗаполнениеПланированияСуммы() Экспорт
	
	Запрос = Новый Запрос("
	|ВЫБРАТЬ
	|	ДанныеДокумента.Ссылка КАК Ссылка
	|ИЗ
	|	Документ.ЗаявкаНаРасходованиеДенежныхСредств КАК ДанныеДокумента
	|ГДЕ
	|	ДанныеДокумента.ПланированиеСуммы = ЗНАЧЕНИЕ(Перечисление.СпособыПланированияОплатыЗаявок.ПустаяСсылка)
	|");
	
	ВВалютеПлатежа = Перечисления.СпособыПланированияОплатыЗаявок.ВВалютеПлатежа;
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		
		ДокументОбъект = Выборка.Ссылка.ПолучитьОбъект();
		ДокументОбъект.ПланированиеСуммы = ВВалютеПлатежа;
		
		ДокументОбъект.ОбменДанными.Загрузка = Истина;		
		ДокументОбъект.Записать();
		
	КонецЦикла; 
	
КонецПроцедуры

Функция ПараметрыРезультатаЗапроса(Имя, ЭтоВременнаяТаблица = Ложь)
	
	Возврат Новый Структура("Имя, ЭтоВременнаяТаблица", Имя, ЭтоВременнаяТаблица);
	
КонецФункции

Процедура ЗаполнитьДополнительныеСвойстваДляДвижений(СтруктураДополнительныеСвойства, МассивРезультатов, МассивПараметров)
	
	Индекс = 0;
	Для Каждого ПараметрРезультатовЗапроса Из МассивПараметров Цикл
		Если Не ПараметрРезультатовЗапроса.ЭтоВременнаяТаблица Тогда
			СтруктураДополнительныеСвойства.ТаблицыДляДвижений.Вставить(
				ПараметрРезультатовЗапроса.Имя,
				МассивРезультатов[Индекс].Выгрузить()
			);
		КонецЕсли;
		Индекс = Индекс + 1;
	КонецЦикла;
	
КонецПроцедуры

#КонецЕсли
