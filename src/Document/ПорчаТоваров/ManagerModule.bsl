#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

////////////////////////////////////////////////////////////////////////////////
// ПРОГРАММНЫЙ ИНТЕРФЕЙС

// Функция возвращает текст запроса для отражения документа в регламентированном учете.
//
// Возвращаемое значение:
//	Строка - Текст запроса
//                                                                               
Функция ТекстОтраженияВРеглУчете() Экспорт
	
	ТекстСписаниеКомиссионныхТоваров = "
	|ВЫБРАТЬ //// Списание комиссионных товаров (Дт  :: Кт 004.01)
	|
	|	Операция.Дата КАК Период,
	|	Операция.Организация КАК Организация,
	|   НЕОПРЕДЕЛЕНО КАК ИдентификаторСтроки,
	|
	|	0 КАК Сумма,
	|
	|	НЕОПРЕДЕЛЕНО КАК ВидСчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаУчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаДт,
	|
	|	НЕОПРЕДЕЛЕНО КАК ВалютаДт,
	|	НЕОПРЕДЕЛЕНО КАК ПодразделениеДт,
	|	НЕОПРЕДЕЛЕНО КАК СчетДт,
	|
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт3,
	|
	|	0 КАК ВалютнаяСуммаДт,
	|	0 КАК КоличествоДт,
	|	0 КАК СуммаНУДт,
	|	0 КАК СуммаПРДт,
	|	0 КАК СуммаВРДт,
	|
	|	НЕОПРЕДЕЛЕНО КАК ВидСчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаУчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаКт,
	|
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаКт,
	|	Операция.Подразделение КАК ПодразделениеКт,
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ТоварыНаСкладе) КАК СчетКт,
	|
	|	Строки.Номенклатура КАК СубконтоКт1,
	|	Операция.Склад КАК СубконтоКт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
	|			
	|	0 КАК ВалютнаяСуммаКт,
	|	Строки.Количество КАК КоличествоКт,
	|	0 КАК СуммаНУКт,
	|	0 КАК СуммаПРКт,
	|	0 КАК СуммаВРКт
	|
	|ИЗ
	|	Документ.ПорчаТоваров КАК Операция
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ 
	|		Документ.ПорчаТоваров.ВидыЗапасов КАК Строки
	|	ПО 
	|		(Строки.Ссылка = Операция.Ссылка)
	|
	|ГДЕ
	|	Операция.Ссылка = &Ссылка
	|	И Строки.ВидЗапасов.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.КомиссионныйТовар)
	|";
	
	ТекстЗадолженностьПоКомиссионнымТоварамПоСебестоимости = "
	|ВЫБРАТЬ //// Задолженность по комиссионным товарам по себестоимости (Дт 41.01 :: Кт 76.ОК)
	|
	|	Операция.Дата КАК Период,
	|	Операция.Организация КАК Организация,
	|   НЕОПРЕДЕЛЕНО КАК ИдентификаторСтроки,
	|
	|	ЕСТЬNULL(СтоимостьТоваров.СтоимостьРегл * Строки.Количество,0) КАК Сумма,
	|
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.НаСкладе) КАК ВидСчетаДт,
	|	ВЫБОР
	|		КОГДА &ФормироватьВидыЗапасовПоГруппамФинансовогоУчета
	|			ТОГДА Строки.ВидЗапасов.ГруппаФинансовогоУчета
	|		ИНАЧЕ Строки.Номенклатура.ГруппаФинансовогоУчета
	|	КОНЕЦ КАК АналитикаУчетаДт,
	|	Операция.Склад КАК МестоУчетаДт,
	|
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаДт,
	|	Операция.Склад.Подразделение КАК ПодразделениеДт,
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетДт,
	|
	|	Строки.НоменклатураОприходование КАК СубконтоДт1,
	|	Операция.Склад КАК СубконтоДт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт3,
	|
	|	0 КАК ВалютнаяСуммаДт,
	|	Строки.Количество КАК КоличествоДт,
	|	0 КАК СуммаНУДт,
	|	0 КАК СуммаПРДт,
	|	0 КАК СуммаВРДт,
	|
	|	НЕОПРЕДЕЛЕНО КАК ВидСчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК ГруппаФинансовогоУчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаКт,
	|
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаКт,
	|	Операция.Подразделение КАК ПодразделениеКт,
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ТоварыКОформлениюОтчетовКомитенту) КАК СчетКт,
	|
	|	Строки.ВидЗапасов.Контрагент КАК СубконтоКт1,
	|	Строки.Номенклатура КАК СубконтоКт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
	|
	|	0 КАК ВалютнаяСуммаКт,
	|	Строки.Количество КАК КоличествоКт,
	|	0 КАК СуммаНУКт,
	|	0 КАК СуммаПРКт,
	|	0 КАК СуммаВРКт
	|
	|
	|ИЗ
	|	Документ.ПорчаТоваров КАК Операция
	|
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ 
	|			Документ.ПорчаТоваров.ВидыЗапасов КАК Строки
	|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СтоимостьТоваров КАК СтоимостьТоваров
	|			ПО Строки.Номенклатура = СтоимостьТоваров.АналитикаУчетаНоменклатуры.Номенклатура
	|				И Строки.Ссылка.Склад = СтоимостьТоваров.АналитикаУчетаНоменклатуры.Склад
	|				И Строки.Характеристика = СтоимостьТоваров.АналитикаУчетаНоменклатуры.Характеристика
	|				И НАЧАЛОПЕРИОДА(Строки.Ссылка.Дата, Месяц) = СтоимостьТоваров.Период
	|				И (Строки.ВидЗапасов = СтоимостьТоваров.ВидЗапасов И &УчитыватьСебестоимостьТоваровПоВидамЗапасов 
	|				ИЛИ Не &УчитыватьСебестоимостьТоваровПоВидамЗапасов)
	|				И Строки.Ссылка.Организация = СтоимостьТоваров.Организация
	|		ПО 
	|			(Строки.Ссылка = Операция.Ссылка)
	|
	|ГДЕ
	|	Операция.Ссылка = &Ссылка
	|	И Строки.ВидЗапасов.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.КомиссионныйТовар)
	|	И Операция.ПриходоватьТоварыПоСебестоимостиСписания
	|";
	
	ТекстОприходованиеСобственныхТоваровПоСебестоимости = "
	|ВЫБРАТЬ //// Оприходование собственных товаров по себестоимости (Дт 41.01 :: Кт 41.01)
	|
	|	Операция.Дата КАК Период,
	|	Операция.Организация КАК Организация,
	|   НЕОПРЕДЕЛЕНО КАК ИдентификаторСтроки,
	|
	|	ЕСТЬNULL(СтоимостьТоваров.СтоимостьРегл * Строки.Количество,0) КАК Сумма,
	|
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.НаСкладе) КАК ВидСчетаДт,
	|	ВЫБОР
	|		КОГДА &ФормироватьВидыЗапасовПоГруппамФинансовогоУчета
	|			ТОГДА Строки.ВидЗапасов.ГруппаФинансовогоУчета
	|		ИНАЧЕ Строки.Номенклатура.ГруппаФинансовогоУчета
	|	КОНЕЦ КАК АналитикаУчетаДт,
	|	Операция.Склад КАК МестоУчетаДт,
	|
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаДт,
	|	Операция.Склад.Подразделение КАК ПодразделениеДт,
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетДт,
	|
	|	Строки.НоменклатураОприходование КАК СубконтоДт1,
	|	Операция.Склад КАК СубконтоДт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт3,
	|
	|	0 КАК ВалютнаяСуммаДт,
	|	Строки.Количество КАК КоличествоДт,
	|	0 КАК СуммаНУДт,
	|	0 КАК СуммаПРДт,
	|	0 КАК СуммаВРДт,
	|
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.НаСкладе) КАК ВидСчетаКт,
	|	ВЫБОР
	|		КОГДА &ФормироватьВидыЗапасовПоГруппамФинансовогоУчета
	|			ТОГДА Строки.ВидЗапасов.ГруппаФинансовогоУчета
	|		ИНАЧЕ Строки.Номенклатура.ГруппаФинансовогоУчета
	|	КОНЕЦ КАК АналитикаУчетаКт,
	|	Операция.Склад КАК МестоУчетаКт,
	|
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаКт,
	|	Операция.Склад.Подразделение КАК ПодразделениеКт,
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетКт,
	|
	|	Строки.Номенклатура КАК СубконтоКт1,
	|	Операция.Склад КАК СубконтоКт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
	|
	|	0 КАК ВалютнаяСуммаКт,
	|	Строки.Количество КАК КоличествоКт,
	|	0 КАК СуммаНУКт,
	|	0 КАК СуммаПРКт,
	|	0 КАК СуммаВРКт
	|
	|ИЗ
	|	Документ.ПорчаТоваров КАК Операция
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ 
	|		Документ.ПорчаТоваров.ВидыЗапасов КАК Строки
	|	ПО 
	|		(Строки.Ссылка = Операция.Ссылка)
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РегистрСведений.СтоимостьТоваров КАК СтоимостьТоваров
	|	ПО
	|		Операция.Организация = СтоимостьТоваров.Организация
	|		И Операция.Склад = СтоимостьТоваров.АналитикаУчетаНоменклатуры.Склад
	|		И Строки.Номенклатура = СтоимостьТоваров.АналитикаУчетаНоменклатуры.Номенклатура
	|		И Строки.Характеристика = СтоимостьТоваров.АналитикаУчетаНоменклатуры.Характеристика
	|		И НАЧАЛОПЕРИОДА(Операция.Дата, Месяц) = СтоимостьТоваров.Период
	|		И (Строки.ВидЗапасов = СтоимостьТоваров.ВидЗапасов И &УчитыватьСебестоимостьТоваровПоВидамЗапасов 
	|			ИЛИ Не &УчитыватьСебестоимостьТоваровПоВидамЗапасов)
	|ГДЕ
	|	Операция.Ссылка = &Ссылка
	|	И Строки.ВидЗапасов.ТипЗапасов <> ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.КомиссионныйТовар)
	|	И Операция.ПриходоватьТоварыПоСебестоимостиСписания
	|";
	
	ТекстЗадолженностьПоКомиссионнымТоварамПоУказаннойСтоимости = "
	|ВЫБРАТЬ //// Задолженность по комиссионным товарам по указанной стоимости (Дт 41.01 :: Кт 76.ОК)
	|
	|	Операция.Дата КАК Период,
	|	Операция.Организация КАК Организация,
	|   НЕОПРЕДЕЛЕНО КАК ИдентификаторСтроки,
	|
	|	Строки.Сумма КАК Сумма,
	|
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.НаСкладе) КАК ВидСчетаДт,
	|	ВЫБОР
	|		КОГДА &ФормироватьВидыЗапасовПоГруппамФинансовогоУчета
	|			ТОГДА Строки.ВидЗапасов.ГруппаФинансовогоУчета
	|		ИНАЧЕ Строки.Номенклатура.ГруппаФинансовогоУчета
	|	КОНЕЦ КАК АналитикаУчетаДт,
	|	Операция.Склад КАК МестоУчетаДт,
	|
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаДт,
	|	Операция.Склад.Подразделение КАК ПодразделениеДт,
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетДт,
	|
	|	Строки.НоменклатураОприходование КАК СубконтоДт1,
	|	Операция.Склад КАК СубконтоДт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт3,
	|
	|	0 КАК ВалютнаяСуммаДт,
	|	Строки.Количество КАК КоличествоДт,
	|	0 КАК СуммаНУДт,
	|	0 КАК СуммаПРДт,
	|	0 КАК СуммаВРДт,
	|
	|	НЕОПРЕДЕЛЕНО КАК ВидСчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК ГруппаФинансовогоУчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаКт,
	|
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаКт,
	|	Операция.Подразделение КАК ПодразделениеКт,
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ТоварыКОформлениюОтчетовКомитенту) КАК СчетКт,
	|
	|	Строки.ВидЗапасов.Контрагент КАК СубконтоКт1,
	|	Строки.Номенклатура КАК СубконтоКт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
	|
	|	0 КАК ВалютнаяСуммаКт,
	|	Строки.Количество КАК КоличествоКт,
	|	0 КАК СуммаНУКт,
	|	0 КАК СуммаПРКт,
	|	0 КАК СуммаВРКт
	|
	|
	|ИЗ
	|	Документ.ПорчаТоваров КАК Операция
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ 
	|		Документ.ПорчаТоваров.ВидыЗапасов КАК Строки
	|	ПО 
	|		(Строки.Ссылка = Операция.Ссылка)
	|
	|ГДЕ
	|	Операция.Ссылка = &Ссылка
	|	И Строки.ВидЗапасов.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.КомиссионныйТовар)
	|	И Не Операция.ПриходоватьТоварыПоСебестоимостиСписания
	|";
	
	ТекстОприходованиеСобственныхТоваровПоУказаннойСтоимости = "
	|ВЫБРАТЬ //// Оприходование собственных товаров по указанной стоимости (Дт 41.01 :: Кт 41.01)
	|
	|	Операция.Дата КАК Период,
	|	Операция.Организация КАК Организация,
	|   НЕОПРЕДЕЛЕНО КАК ИдентификаторСтроки,
	|
	|	Строки.Сумма КАК Сумма,
	|
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.НаСкладе) КАК ВидСчетаДт,
	|	ВЫБОР
	|		КОГДА &ФормироватьВидыЗапасовПоГруппамФинансовогоУчета
	|			ТОГДА Строки.ВидЗапасов.ГруппаФинансовогоУчета
	|		ИНАЧЕ Строки.Номенклатура.ГруппаФинансовогоУчета
	|	КОНЕЦ КАК АналитикаУчетаДт,
	|	Операция.Склад КАК МестоУчетаДт,
	|
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаДт,
	|	Операция.Склад.Подразделение КАК ПодразделениеДт,
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетДт,
	|
	|	Строки.НоменклатураОприходование КАК СубконтоДт1,
	|	Операция.Склад КАК СубконтоДт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт3,
	|
	|	0 КАК ВалютнаяСуммаДт,
	|	Строки.Количество КАК КоличествоДт,
	|	0 КАК СуммаНУДт,
	|	0 КАК СуммаПРДт,
	|	0 КАК СуммаВРДт,
	|
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.НаСкладе) КАК ВидСчетаКт,
	|	ВЫБОР
	|		КОГДА &ФормироватьВидыЗапасовПоГруппамФинансовогоУчета
	|			ТОГДА Строки.ВидЗапасов.ГруппаФинансовогоУчета
	|		ИНАЧЕ Строки.Номенклатура.ГруппаФинансовогоУчета
	|	КОНЕЦ КАК АналитикаУчетаКт,
	|	Операция.Склад КАК МестоУчетаКт,
	|
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаКт,
	|	Операция.Склад.Подразделение КАК ПодразделениеКт,
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетКт,
	|
	|	Строки.Номенклатура КАК СубконтоКт1,
	|	Операция.Склад КАК СубконтоКт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
	|
	|	0 КАК ВалютнаяСуммаКт,
	|	Строки.Количество КАК КоличествоКт,
	|	0 КАК СуммаНУКт,
	|	0 КАК СуммаПРКт,
	|	0 КАК СуммаВРКт
	|
	|ИЗ
	|	Документ.ПорчаТоваров КАК Операция
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ 
	|		Документ.ПорчаТоваров.ВидыЗапасов КАК Строки
	|	ПО 
	|		(Строки.Ссылка = Операция.Ссылка)
	|
	|ГДЕ
	|	Операция.Ссылка = &Ссылка
	|	И Строки.ВидЗапасов.ТипЗапасов <> ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.КомиссионныйТовар)
	|	И Не Операция.ПриходоватьТоварыПоСебестоимостиСписания
	|";
	
	ТекстОприходованиеСобственныхТоваровОтклонениеВСтоимости = "
	|ВЫБРАТЬ //// Отклонение в стоимости собственных товаров (Дт 44.01 :: Кт 41.01)
	|
	|	Операция.Дата КАК Период,
	|	Операция.Организация КАК Организация,
	|   НЕОПРЕДЕЛЕНО КАК ИдентификаторСтроки,
	|
	|	ЕСТЬNULL(СтоимостьТоваров.СтоимостьРегл * Строки.Количество,0) - Строки.Сумма КАК Сумма,
	|
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.Расходы) КАК ВидСчетаДт,
	|	Операция.СтатьяРасходов КАК АналитикаУчетаДт,
	|	Операция.Подразделение КАК МестоУчетаДт,
	|
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаДт,
	|	Операция.Подразделение КАК ПодразделениеДт,
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетДт,
	|
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт3,
	|
	|	0 КАК ВалютнаяСуммаДт,
	|	0 КАК КоличествоДт,
	|	0 КАК СуммаНУДт,
	|	0 КАК СуммаПРДт,
	|	0 КАК СуммаВРДт,
	|
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.НаСкладе) КАК ВидСчетаКт,
	|	ВЫБОР КОГДА &ФормироватьВидыЗапасовПоГруппамФинансовогоУчета ТОГДА
	|		Строки.ВидЗапасов.ГруппаФинансовогоУчета
	|	ИНАЧЕ
	|		Строки.Номенклатура.ГруппаФинансовогоУчета
	|	КОНЕЦ КАК АналитикаУчетаКт,
	|	Операция.Склад КАК МестоУчетаКт,
	|
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаКт,
	|	Операция.Склад.Подразделение КАК ПодразделениеКт,
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетКт,
	|
	|	Строки.Номенклатура КАК СубконтоКт1,
	|	Операция.Склад КАК СубконтоКт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
	|
	|	0 КАК ВалютнаяСуммаКт,
	|	0 КАК КоличествоКт,
	|	0 КАК СуммаНУКт,
	|	0 КАК СуммаПРКт,
	|	0 КАК СуммаВРКт
	|
	|ИЗ
	|	Документ.ПорчаТоваров КАК Операция
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ 
	|		Документ.ПорчаТоваров.ВидыЗапасов КАК Строки
	|	ПО 
	|		(Строки.Ссылка = Операция.Ссылка)
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РегистрСведений.СтоимостьТоваров КАК СтоимостьТоваров
	|	ПО
	|		Операция.Организация = СтоимостьТоваров.Организация
	|		И Операция.Склад = СтоимостьТоваров.АналитикаУчетаНоменклатуры.Склад
	|		И Строки.Номенклатура = СтоимостьТоваров.АналитикаУчетаНоменклатуры.Номенклатура
	|		И Строки.Характеристика = СтоимостьТоваров.АналитикаУчетаНоменклатуры.Характеристика
	|		И НАЧАЛОПЕРИОДА(Операция.Дата, Месяц) = СтоимостьТоваров.Период
	|		И (Строки.ВидЗапасов = СтоимостьТоваров.ВидЗапасов И &УчитыватьСебестоимостьТоваровПоВидамЗапасов 
	|			ИЛИ Не &УчитыватьСебестоимостьТоваровПоВидамЗапасов)
	|ГДЕ
	|	Операция.Ссылка = &Ссылка
	|	И Строки.ВидЗапасов.ТипЗапасов <> ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.КомиссионныйТовар)
	|	И Не Операция.ПриходоватьТоварыПоСебестоимостиСписания
	|	И (ЕСТЬNULL(СтоимостьТоваров.СтоимостьРегл * Строки.Количество,0) - Строки.Сумма) > 0
	|";
	
	Возврат
	ТекстСписаниеКомиссионныхТоваров
	+ " ОБЪЕДИНИТЬ ВСЕ " + ТекстЗадолженностьПоКомиссионнымТоварамПоСебестоимости 
	+ " ОБЪЕДИНИТЬ ВСЕ " + ТекстОприходованиеСобственныхТоваровПоСебестоимости
	+ " ОБЪЕДИНИТЬ ВСЕ " + ТекстЗадолженностьПоКомиссионнымТоварамПоУказаннойСтоимости
	+ " ОБЪЕДИНИТЬ ВСЕ " + ТекстОприходованиеСобственныхТоваровПоУказаннойСтоимости
	+ " ОБЪЕДИНИТЬ ВСЕ " + ТекстОприходованиеСобственныхТоваровОтклонениеВСтоимости
	;
	
КонецФункции

////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

////////////////////////////////////////////////////////////////////////////////
// Проведение

Процедура ИнициализироватьДанныеДокумента(ДокументСсылка, ДополнительныеСвойства) Экспорт

	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	ДанныеДокумента.Ссылка            КАК Ссылка,
	|	ДанныеДокумента.Дата              КАК Период,
	|	ДанныеДокумента.Склад             КАК Склад,
	|	ДанныеДокумента.Организация       КАК Организация,
	|	ДанныеДокумента.ДокументОснование КАК ДокументОснование,
	|	ДанныеДокумента.Подразделение     КАК Подразделение,
	|	ДанныеДокумента.СтатьяРасходов    КАК СтатьяРасходов,
	|	ДанныеДокумента.АналитикаРасходов КАК АналитикаРасходов,
	|	ДанныеДокумента.ПриходоватьТоварыПоСебестоимостиСписания КАК ПриходПоСебестоимости
	|ИЗ
	|	Документ.ПорчаТоваров КАК ДанныеДокумента
	|ГДЕ
	|	ДанныеДокумента.Ссылка = &Ссылка");
	Запрос.УстановитьПараметр("Ссылка", ДокументСсылка);
	Реквизиты = Запрос.Выполнить().Выбрать();
	Реквизиты.Следующий();
	
	ИнициализироватьКлючиАналитикиНоменклатуры(Реквизиты);
	СоответствиеВидовЗапасов = ИнициализироватьВидыЗапасов(Реквизиты);

	Коэффициенты = РаботаСКурсамивалютУТ.ПолучитьКоэффициентыПересчетаВалюты(Константы.ВалютаУправленческогоУчета.Получить(), Неопределено, Реквизиты.Период);

	Запрос.УстановитьПараметр("Период", Реквизиты.Период);
	Запрос.УстановитьПараметр("Склад", Реквизиты.Склад);
	Запрос.УстановитьПараметр("Организация", Реквизиты.Организация);
	Запрос.УстановитьПараметр("Подразделение", Реквизиты.Подразделение);
	Запрос.УстановитьПараметр("СтатьяРасходов", Реквизиты.СтатьяРасходов);
	Запрос.УстановитьПараметр("АналитикаРасходов", Реквизиты.АналитикаРасходов);
	Запрос.УстановитьПараметр("ДокументОснование", Реквизиты.ДокументОснование);
	Запрос.УстановитьПараметр("ПриходПоСебестоимости", Реквизиты.ПриходПоСебестоимости);
	Запрос.УстановитьПараметр("ИспользоватьОрдернуюСхемуПриОтраженииИзлишковНедостач",
	                          ПолучитьФункциональнуюОпцию("ИспользоватьОрдернуюСхемуПриОтраженииИзлишковНедостач",
							                              Новый Структура("Склад",Реквизиты.Склад)));
  	Запрос.УстановитьПараметр("ПоОснованию", ЗначениеЗаполнено(Реквизиты.ДокументОснование));
	Если Реквизиты.ПриходПоСебестоимости Тогда
		Запрос.УстановитьПараметр("ХозяйственнаяОперация", Перечисления.ХозяйственныеОперации.ПорчаТоваров);
	Иначе
		Запрос.УстановитьПараметр("ХозяйственнаяОперация", Перечисления.ХозяйственныеОперации.ПорчаТоваровСПереоценкой);
	КонецЕсли;
	Запрос.УстановитьПараметр("УчитыватьСебестоимостьТоваровПоВидамЗапасов", ПолучитьФункциональнуюОпцию("УчитыватьСебестоимостьТоваровПоВидамЗапасов"));
	Запрос.УстановитьПараметр("СоответствиеВидовЗапасов", СоответствиеВидовЗапасов);
	Запрос.УстановитьПараметр("КоэффициентПересчетаВВалютуРегл", Коэффициенты.КоэффициентПересчетаВВалютуРегл);
	Запрос.УстановитьПараметр("НалогообложениеНДС", Перечисления.ТипыНалогообложенияНДС.ПродажаНеОблагаетсяНДС);
	
	Запрос.Текст =
	"
	// 0 ТаблицаТоварыКОформлениюИзлишковНедостач
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаТовары.НомерСтроки              КАК НомерСтроки,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	&Период                                КАК Период,
	|	ТаблицаТовары.Номенклатура             КАК Номенклатура,
	|	ТаблицаТовары.Характеристика           КАК Характеристика,
	|	&ДокументОснование                     КАК ДокументОснование,
	|	&Склад                                 КАК Склад,
	|	ТаблицаТовары.Количество               КАК КОформлениюАктов
	|ИЗ
	|	Документ.ПорчаТоваров.Товары КАК ТаблицаТовары
	|ГДЕ
	|	ТаблицаТовары.Ссылка = &Ссылка
	|   И ТаблицаТовары.Количество <> 0
	|	И &ПоОснованию
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ТаблицаТовары.НомерСтроки,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход),
	|	&Период,
	|	ТаблицаТовары.НоменклатураОприходование,
	|	ТаблицаТовары.ХарактеристикаОприходование,
	|	&ДокументОснование,
	|	&Склад,
	|	ТаблицаТовары.Количество
	|ИЗ
	|	Документ.ПорчаТоваров.Товары КАК ТаблицаТовары
	|ГДЕ
	|	ТаблицаТовары.Ссылка = &Ссылка
	|   И ТаблицаТовары.Количество <> 0
	|	И &ПоОснованию
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки
	|;
	|
	// 1 ТаблицаТоварыНаСкладах
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаТовары.Номенклатура             КАК Номенклатура,
	|	ТаблицаТовары.Характеристика           КАК Характеристика,
	|	ТаблицаТовары.Количество               КАК ВНаличии,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
	|	&Период                                КАК Период,
	|	&Склад                                 КАК Склад
	|ИЗ
	|	Документ.ПорчаТоваров.Товары КАК ТаблицаТовары
	|ГДЕ
	|	ТаблицаТовары.Ссылка = &Ссылка
	|	И НЕ &ИспользоватьОрдернуюСхемуПриОтраженииИзлишковНедостач
	|	И ТаблицаТовары.Количество <> 0
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ТаблицаТовары.НоменклатураОприходование,
	|	ТаблицаТовары.ХарактеристикаОприходование,
	|	ТаблицаТовары.Количество,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	&Период КАК Период,
	|	&Склад КАК Склад
	|ИЗ
	|	Документ.ПорчаТоваров.Товары КАК ТаблицаТовары
	|ГДЕ
	|	ТаблицаТовары.Ссылка = &Ссылка
	|	И НЕ &ИспользоватьОрдернуюСхемуПриОтраженииИзлишковНедостач
	|	И ТаблицаТовары.Количество <> 0
	|;
	|
	// 3 ТаблицаСвободныеОстатки
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаТовары.НомерСтроки              КАК НомерСтроки,
	|	ТаблицаТовары.Номенклатура             КАК Номенклатура,
	|	ТаблицаТовары.Характеристика           КАК Характеристика,
	|	ТаблицаТовары.Количество               КАК ВНаличии,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
	|	&Период                                КАК Период,
	|	&Склад                                 КАК Склад
	|ИЗ
	|	Документ.ПорчаТоваров.Товары КАК ТаблицаТовары
	|ГДЕ
	|	ТаблицаТовары.Ссылка = &Ссылка
	|	И НЕ &ИспользоватьОрдернуюСхемуПриОтраженииИзлишковНедостач
	|   И ТаблицаТовары.Количество <> 0
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ТаблицаТовары.НомерСтроки,
	|	ТаблицаТовары.НоменклатураОприходование,
	|	ТаблицаТовары.ХарактеристикаОприходование,
	|	ТаблицаТовары.Количество,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	&Период КАК Период,
	|	&Склад КАК Склад
	|ИЗ
	|	Документ.ПорчаТоваров.Товары КАК ТаблицаТовары
	|ГДЕ
	|	ТаблицаТовары.Ссылка = &Ссылка
	|	И НЕ &ИспользоватьОрдернуюСхемуПриОтраженииИзлишковНедостач
	|	И ТаблицаТовары.Количество <> 0
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки
	|;
	|/////////////////////////////////////////////////////////////////////////////";
	Запрос.Текст = Запрос.Текст
		+ ТекстЗапросаВтВидыЗапасов()
		+ ТекстЗапросаТаблицаТоварыОрганизаций()
		+ ТекстЗапросаТаблицаТоварыКОформлениюОтчетовКомитенту()
		+ ТекстЗапросаВтАналитика()
		+ ТекстЗапросаТаблицаСебестоимостьТоваров()
		+ ТекстЗапросаТаблицаПартииТоваровОрганизацийПоследовательность()
		+ ТекстЗапросаТаблицаПартииТоваровОрганизаций()
		;
	Результат = Запрос.ВыполнитьПакет();

	ТаблицыДляДвижений = ДополнительныеСвойства.ТаблицыДляДвижений;
	ТаблицыДляДвижений.Вставить("ТаблицаТоварыКОформлениюИзлишковНедостач", 			Результат[0].Выгрузить());
 	ТаблицыДляДвижений.Вставить("ТаблицаТоварыНаСкладах",                   			Результат[1].Выгрузить());
	ТаблицыДляДвижений.Вставить("ТаблицаСвободныеОстатки",                  			Результат[2].Выгрузить());
	// МассивРезультатов[3] - ВтСоответствиеВидовЗапасов
	// МассивРезультатов[4] - ВтВидыЗапасов
	ТаблицыДляДвижений.Вставить("ТаблицаТоварыОрганизаций",                 			Результат[5].Выгрузить());
	ТаблицыДляДвижений.Вставить("ТаблицаТоварыКОформлениюОтчетовКомитенту", 			Результат[6].Выгрузить());
	// Результат[7] - ВтАналитикаСписания
	// Результат[8] - ВтАналитикаОприходования
	ТаблицыДляДвижений.Вставить("ТаблицаСебестоимостьТоваров",              			Результат[9].Выгрузить());
	ТаблицыДляДвижений.Вставить("ТаблицаПартииТоваровОрганизацийПоследовательность",	Результат[10].Выгрузить());
	ТаблицыДляДвижений.Вставить("ТаблицаПартииТоваровОрганизаций",						Результат[11].Выгрузить());
	
КонецПроцедуры

Процедура ИнициализироватьКлючиАналитикиНоменклатуры(Реквизиты)

	Запрос = Новый Запрос("
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ТаблицаТовары.Склад          КАК Склад,
	|	ТаблицаТовары.Номенклатура   КАК Номенклатура,
	|	ТаблицаТовары.Характеристика КАК Характеристика
	|ИЗ (
	|	ВЫБРАТЬ
	|		ВЫБОР КОГДА ТаблицаВидыЗапасов.ВидЗапасов.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.КомиссионныйТовар) ТОГДА
	|			ТаблицаВидыЗапасов.ВидЗапасов.Комитент
	|		ИНАЧЕ
	|			&Склад
	|		КОНЕЦ                             КАК Склад,
	|		ТаблицаВидыЗапасов.Номенклатура   КАК Номенклатура,
	|		ТаблицаВидыЗапасов.Характеристика КАК Характеристика
	|	ИЗ
	|		Документ.ПорчаТоваров.ВидыЗапасов КАК ТаблицаВидыЗапасов
	|	ГДЕ
	|		ТаблицаВидыЗапасов.Ссылка = &Ссылка
	|
	|	ОБЪЕДИНИТЬ ВСЕ
	|
	|	ВЫБРАТЬ
	|		&Склад                                  КАК Склад,
	|		ТаблицаТовары.НоменклатураОприходование КАК Номенклатура,
	|		ТаблицаТовары.ХарактеристикаОприходование КАК Характеристика
	|	ИЗ
	|		Документ.ПорчаТоваров.Товары КАК ТаблицаТовары
	|	ГДЕ
	|		ТаблицаТовары.Ссылка = &Ссылка
	|
	|	) КАК ТаблицаТовары
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РегистрСведений.АналитикаУчетаНоменклатуры КАК Аналитика
	|	ПО
	|		ТаблицаТовары.Номенклатура = Аналитика.Номенклатура
	|		И ТаблицаТовары.Характеристика = Аналитика.Характеристика
	|		И ТаблицаТовары.Склад = Аналитика.Склад
	|ГДЕ
	|	Аналитика.Номенклатура ЕСТЬ NULL
	|");
	Запрос.УстановитьПараметр("Ссылка", Реквизиты.Ссылка);
	Запрос.УстановитьПараметр("Склад", Реквизиты.Склад);
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		РегистрыСведений.АналитикаУчетаНоменклатуры.СоздатьКлючАналитики(Выборка)
	КонецЦикла;

КонецПроцедуры // ИнициализироватьКлючиАналитикиНоменклатуры()

Функция ИнициализироватьВидыЗапасов(Реквизиты)

	Запрос = Новый Запрос("
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	&Организация КАК Организация,
	|	ТаблицаВидыЗапасов.ВидЗапасов КАК ВидЗапасов,
	|	ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.Товар) КАК ТипЗапасов,
	|	Неопределено КАК Комитент,
	|	Неопределено КАК Соглашение,
	|	Неопределено КАК Валюта,
	|	Неопределено КАК НалогообложениеНДС,
	|	Неопределено КАК НалогообложениеОрганизации,
	|	ТаблицаВидыЗапасов.ВидЗапасов.Поставщик КАК Поставщик,
	|
	|	ТаблицаВидыЗапасов.ВидЗапасов.ГруппаФинансовогоУчета КАК ГруппаФинансовогоУчета,
	|	ТаблицаВидыЗапасов.ВидЗапасов.Подразделение КАК Подразделение,
	|	ТаблицаВидыЗапасов.ВидЗапасов.Менеджер КАК Менеджер,
	|	ТаблицаВидыЗапасов.ВидЗапасов.Сделка КАК Сделка,
	|	ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка) КАК Назначение,
	|	ТаблицаВидыЗапасов.ВидЗапасов.Подразделение.ВариантОбособленногоУчетаТоваров КАК ВариантОбособленногоУчетаТоваров,
	|	ЕСТЬNULL(ТаблицаВидыЗапасов.ВидЗапасов.Сделка.ОбособленныйУчетТоваровПоСделке, ЛОЖЬ) КАК ОбособленныйУчетТоваровПоСделке,
	|
	|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ЗакупкаУПоставщика) КАК ХозяйственнаяОперация
	|ИЗ
	|	Документ.ПорчаТоваров.ВидыЗапасов КАК ТаблицаВидыЗапасов
	|ГДЕ
	|	ТаблицаВидыЗапасов.Ссылка = &Ссылка
	|	И ТаблицаВидыЗапасов.ВидЗапасов.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.КомиссионныйТовар)
	|");
	Запрос.УстановитьПараметр("Ссылка", Реквизиты.Ссылка);
	Запрос.УстановитьПараметр("Организация", Реквизиты.Организация);
	
	СоответствиеВидовЗапасов = Новый ТаблицаЗначений;
	СоответствиеВидовЗапасов.Колонки.Добавить("ВидЗапасов", Новый ОписаниеТипов("СправочникСсылка.ВидыЗапасов")); 
	СоответствиеВидовЗапасов.Колонки.Добавить("НовыйВидЗапасов", Новый ОписаниеТипов("СправочникСсылка.ВидыЗапасов")); 
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		
		НовыйВидЗапасов = Справочники.ВидыЗапасов.ВидЗапасовДокумента(
			Выборка.Организация,
			Выборка.ХозяйственнаяОперация,
			Выборка
		);
		НоваяСтрока = СоответствиеВидовЗапасов.Добавить();
		НоваяСтрока.ВидЗапасов = Выборка.ВидЗапасов;
		НоваяСтрока.НовыйВидЗапасов = НовыйВидЗапасов;
		
	КонецЦикла;
	
	Возврат СоответствиеВидовЗапасов;

КонецФункции // ИнициализироватьВидыЗапасов()

Функция ТекстЗапросаВтВидыЗапасов()
	
	ТекстЗапроса = "
	|ВЫБРАТЬ
	|	СоответствиеВидовЗапасов.ВидЗапасов КАК ВидЗапасов,
	|	СоответствиеВидовЗапасов.НовыйВидЗапасов КАК НовыйВидЗапасов
	|
	|ПОМЕСТИТЬ ВтСоответствиеВидовЗапасов
	|ИЗ
	|	&СоответствиеВидовЗапасов КАК СоответствиеВидовЗапасов
	|;
	|/////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаВидыЗапасов.НомерСтроки КАК НомерСтроки,
	|	ТаблицаВидыЗапасов.Номенклатура КАК Номенклатура,
	|	ТаблицаВидыЗапасов.Характеристика КАК Характеристика,
	|	ТаблицаВидыЗапасов.НоменклатураОприходование КАК НоменклатураОприходование,
	|	ТаблицаВидыЗапасов.ХарактеристикаОприходование КАК ХарактеристикаОприходование,
	|
	|	ТаблицаВидыЗапасов.ВидЗапасов КАК ВидЗапасов,
	|	ЕСТЬNULL(ВтСоответствиеВидовЗапасов.НовыйВидЗапасов, ТаблицаВидыЗапасов.ВидЗапасов) КАК ВидЗапасовОприходование,
	|	ТаблицаВидыЗапасов.НомерГТД КАК НомерГТД,
	|	ТаблицаВидыЗапасов.Количество КАК Количество,
	|	ТаблицаВидыЗапасов.АналитикаУчетаПартий КАК АналитикаУчетаПартий,
	|	ТаблицаВидыЗапасов.Сумма КАК Сумма
	|
	|ПОМЕСТИТЬ ВтВидыЗапасов
	|ИЗ
	|	Документ.ПорчаТоваров.ВидыЗапасов КАК ТаблицаВидыЗапасов
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		ВтСоответствиеВидовЗапасов КАК ВтСоответствиеВидовЗапасов
	|	ПО
	|		ТаблицаВидыЗапасов.ВидЗапасов = ВтСоответствиеВидовЗапасов.ВидЗапасов
	|ГДЕ
	|	ТаблицаВидыЗапасов.Ссылка = &Ссылка
	|;
	|/////////////////////////////////////////////////////////////////////////////
	|";
	
	Возврат ТекстЗапроса;
	
КонецФункции // ТекстЗапросаТаблицаТоварыОрганизаций()

Функция ТекстЗапросаТаблицаТоварыОрганизаций()
	
	ТекстЗапроса = "
	|ВЫБРАТЬ
	|	ТаблицаВидыЗапасов.НомерСтроки КАК НомерСтроки,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
	|	&Период КАК Период,
	|	&Склад КАК Склад,
	|	&Организация КАК ОрганизацияОтгрузки,
	|	&Организация КАК Организация,
	|	ТаблицаВидыЗапасов.Номенклатура КАК Номенклатура,
	|	ТаблицаВидыЗапасов.Характеристика КАК Характеристика,
	|	ТаблицаВидыЗапасов.ВидЗапасов КАК ВидЗапасов,
	|	ТаблицаВидыЗапасов.НомерГТД КАК НомерГТД,
	|	ТаблицаВидыЗапасов.Количество КАК Количество,
	|	КлючиАналитики.КлючАналитики КАК АналитикаУчетаНоменклатуры,
	|	&НалогообложениеНДС
	|ИЗ
	|	ВтВидыЗапасов КАК ТаблицаВидыЗапасов
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаНоменклатуры КАК КлючиАналитики
	|		ПО ТаблицаВидыЗапасов.Номенклатура = КлючиАналитики.Номенклатура
	|			И ТаблицаВидыЗапасов.Характеристика = КлючиАналитики.Характеристика
	|			И (&Склад = КлючиАналитики.Склад)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ТаблицаВидыЗапасов.НомерСтроки,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход),
	|	&Период,
	|	&Склад,
	|	&Организация,
	|	&Организация,
	|	ТаблицаВидыЗапасов.НоменклатураОприходование,
	|	ТаблицаВидыЗапасов.ХарактеристикаОприходование,
	|	ТаблицаВидыЗапасов.ВидЗапасовОприходование,
	|	ТаблицаВидыЗапасов.НомерГТД,
	|	ТаблицаВидыЗапасов.Количество,
	|	АналитикаУчетаНоменклатуры.КлючАналитики,
	|	НЕОПРЕДЕЛЕНО
	|ИЗ
	|	ВтВидыЗапасов КАК ТаблицаВидыЗапасов
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры
	|		ПО ТаблицаВидыЗапасов.НоменклатураОприходование = АналитикаУчетаНоменклатуры.Номенклатура
	|			И ТаблицаВидыЗапасов.ХарактеристикаОприходование = АналитикаУчетаНоменклатуры.Характеристика
	|			И (&Склад = АналитикаУчетаНоменклатуры.Склад)
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки
	|;
	|/////////////////////////////////////////////////////////////////////////////
	|";
	
	Возврат ТекстЗапроса;
	
КонецФункции // ТекстЗапросаТаблицаТоварыОрганизаций()

Функция ТекстЗапросаТаблицаТоварыКОформлениюОтчетовКомитенту()
	
	ТекстЗапроса = "
	|ВЫБРАТЬ
	|	ТаблицаВидыЗапасов.НомерСтроки КАК НомерСтроки,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	&Период КАК Период,
	|	ТаблицаВидыЗапасов.ВидЗапасов.Валюта КАК Валюта,
	|	ТаблицаВидыЗапасов.ВидЗапасов КАК ВидЗапасов,
	|	ТаблицаВидыЗапасов.Номенклатура КАК Номенклатура,
	|	ТаблицаВидыЗапасов.Характеристика КАК Характеристика,
	|	ТаблицаВидыЗапасов.НомерГТД КАК НомерГТД,
	|	&ХозяйственнаяОперация КАК ХозяйственнаяОперация,
	|	0 КАК Количество,
	|	ТаблицаВидыЗапасов.Количество КАК КоличествоСписано,
	|	0 КАК СуммаВыручки
	|
	|ИЗ
	|	Документ.ПорчаТоваров.ВидыЗапасов КАК ТаблицаВидыЗапасов
	|
	|ГДЕ
	|	ТаблицаВидыЗапасов.Ссылка = &Ссылка
	|	И ТаблицаВидыЗапасов.ВидЗапасов.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.КомиссионныйТовар)
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки
	|;
	|/////////////////////////////////////////////////////////////////////////////
	|";
	
	Возврат ТекстЗапроса;
	
КонецФункции // ТекстЗапросаТаблицаТоварыКОформлениюОтчетовКомитенту()

Функция ТекстЗапросаВтАналитика()
	
	ТекстЗапроса = "
	// 2 Таблица аналитики списания
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	АналитикаНоменклатуры.КлючАналитики КАК АналитикаНоменклатуры,
	|	ТаблицаВидыЗапасов.ВидЗапасов       КАК ВидЗапасов,
	|	ТаблицаВидыЗапасов.Номенклатура     КАК Номенклатура,
	|	ТаблицаВидыЗапасов.Характеристика   КАК Характеристика
	|
	|ПОМЕСТИТЬ ВтАналитикаСписания
	|ИЗ
	|	ВтВидыЗапасов КАК ТаблицаВидыЗапасов
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РегистрСведений.АналитикаУчетаНоменклатуры КАК АналитикаНоменклатуры
	|	ПО
	|		ТаблицаВидыЗапасов.Номенклатура = АналитикаНоменклатуры.Номенклатура
	|		И ТаблицаВидыЗапасов.Характеристика = АналитикаНоменклатуры.Характеристика
	|		И (ВЫБОР КОГДА ТаблицаВидыЗапасов.ВидЗапасов.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.КомиссионныйТовар) ТОГДА
	|				ТаблицаВидыЗапасов.ВидЗапасов.Комитент
	|			ИНАЧЕ
	|				&Склад
	|			КОНЕЦ = АналитикаНоменклатуры.Склад)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Номенклатура,
	|	Характеристика,
	|	ВидЗапасов
	|;
	|//////////////////////////////////////////////////////////////////////////////
	// 3 Таблица аналитики оприходования
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	АналитикаНоменклатуры.КлючАналитики КАК АналитикаНоменклатуры,
	|	ТаблицаТовары.Номенклатура          КАК Номенклатура,
	|	ТаблицаТовары.Характеристика        КАК Характеристика
	|
	|ПОМЕСТИТЬ ВтАналитикаОприходования
	|ИЗ (
	|	ВЫБРАТЬ
	|		&Склад КАК Склад,
	|		ТаблицаВидыЗапасов.НоменклатураОприходование КАК Номенклатура,
	|		ТаблицаВидыЗапасов.ХарактеристикаОприходование КАК Характеристика
	|	ИЗ
	|		ВтВидыЗапасов КАК ТаблицаВидыЗапасов
	|
	|	) КАК ТаблицаТовары
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РегистрСведений.АналитикаУчетаНоменклатуры КАК АналитикаНоменклатуры
	|	ПО
	|		ТаблицаТовары.Номенклатура = АналитикаНоменклатуры.Номенклатура
	|		И ТаблицаТовары.Характеристика = АналитикаНоменклатуры.Характеристика
	|		И ТаблицаТовары.Склад = АналитикаНоменклатуры.Склад
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Номенклатура, Характеристика
	|;
	|//////////////////////////////////////////////////////////////////////////////
	|";

	Возврат ТекстЗапроса;
	
КонецФункции // ТекстЗапросаВтАналитика()

Функция ТекстЗапросаТаблицаСебестоимостьТоваров()

	ТекстЗапроса = "
	|// Таблица товаров (списание)
	|ВЫБРАТЬ
	|	1                                                                       КАК Порядок,
	|	ТаблицаВидыЗапасов.НомерСтроки                                          КАК НомерСтроки,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)                                  КАК ВидДвижения,
	|	&Период                                                                 КАК Период,
	|	АналитикаСписание.АналитикаНоменклатуры                                 КАК АналитикаУчетаНоменклатуры,
	|	&Организация                                                            КАК Организация,
	|	ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыНаСкладах) КАК РазделУчета,
	|
	|	ВЫБОР КОГДА &УчитыватьСебестоимостьТоваровПоВидамЗапасов ТОГДА
	|   	ТаблицаВидыЗапасов.ВидЗапасов
	|	ИНАЧЕ
	|		Неопределено
	|	КОНЕЦ                                                                   КАК ВидЗапасов,
	|	ТаблицаВидыЗапасов.Количество                                           КАК Количество,
	|	0                                                                       КАК Стоимость,
	|	0                                                                       КАК СтоимостьБезНДС,
	|	0                                                                       КАК СтоимостьРегл,
	|	0                                                                       КАК КорСтоимость,
	|	АналитикаОприходование.АналитикаНоменклатуры                            КАК КорАналитикаУчетаНоменклатуры,
	|	ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыНаСкладах) КАК КорРазделУчета,
	|
	|	ВЫБОР КОГДА &УчитыватьСебестоимостьТоваровПоВидамЗапасов ТОГДА
	|   	ТаблицаВидыЗапасов.ВидЗапасовОприходование
	|	ИНАЧЕ
	|		Неопределено
	|	КОНЕЦ                                                                   КАК КорВидЗапасов,
	|	Неопределено                                                            КАК Подразделение,
	|	Неопределено                                                            КАК АналитикаРасходов,
	|	Неопределено                                                            КАК СтатьяРасходовСписания,
	|	&ХозяйственнаяОперация                                                  КАК ХозяйственнаяОперация
	|ИЗ
	|	ВтВидыЗапасов КАК ТаблицаВидыЗапасов
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		ВтАналитикаСписания КАК АналитикаСписание
	|	ПО
	|		ТаблицаВидыЗапасов.Номенклатура = АналитикаСписание.Номенклатура
	|		И ТаблицаВидыЗапасов.Характеристика = АналитикаСписание.Характеристика
	|		И ТаблицаВидыЗапасов.ВидЗапасов = АналитикаСписание.ВидЗапасов
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		ВтАналитикаОприходования КАК АналитикаОприходование
	|	ПО
	|		ТаблицаВидыЗапасов.НоменклатураОприходование = АналитикаОприходование.Номенклатура
	|		И ТаблицаВидыЗапасов.ХарактеристикаОприходование = АналитикаОприходование.Характеристика
	|ГДЕ
	|	&ПриходПоСебестоимости
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|// Таблица товаров (списание по фиксированной стоимости)
	|ВЫБРАТЬ
	|	2                                                                       КАК Порядок,
	|	ТаблицаВидыЗапасов.НомерСтроки                                          КАК НомерСтроки,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)                                  КАК ВидДвижения,
	|	&Период                                                                 КАК Период,
	|	АналитикаСписание.АналитикаНоменклатуры                                 КАК АналитикаУчетаНоменклатуры,
	|	&Организация                                                            КАК Организация,
	|	ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыНаСкладах) КАК РазделУчета,
	|	ВЫБОР КОГДА &УчитыватьСебестоимостьТоваровПоВидамЗапасов ТОГДА
	|   	ТаблицаВидыЗапасов.ВидЗапасов
	|	ИНАЧЕ
	|		Неопределено
	|	КОНЕЦ                                                                   КАК ВидЗапасов,
	|	ТаблицаВидыЗапасов.Количество                                           КАК Количество,
	|	0                                                                       КАК Стоимость,
	|	0                                                                       КАК СтоимостьБезНДС,
	|	0                                                                       КАК СтоимостьРегл,
	|	ТаблицаВидыЗапасов.Сумма                                                КАК КорСтоимость,
	|	Неопределено                                                            КАК КорАналитикаУчетаНоменклатуры,
	|	Неопределено                                                            КАК КорРазделУчета,
	|	Неопределено                                                            КАК КорВидЗапасов,
	|	&Подразделение                                                          КАК Подразделение,
	|	&АналитикаРасходов                                                      КАК АналитикаРасходов,
	|	&СтатьяРасходов                                                         КАК СтатьяРасходовСписания,
	|	&ХозяйственнаяОперация                                                  КАК ХозяйственнаяОперация
	|ИЗ
	|	ВтВидыЗапасов КАК ТаблицаВидыЗапасов
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		ВтАналитикаСписания КАК АналитикаСписание
	|	ПО
	|		ТаблицаВидыЗапасов.Номенклатура = АналитикаСписание.Номенклатура
	|		И ТаблицаВидыЗапасов.Характеристика = АналитикаСписание.Характеристика
	|		И ТаблицаВидыЗапасов.ВидЗапасов = АналитикаСписание.ВидЗапасов
	|ГДЕ
	|	Не &ПриходПоСебестоимости
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|// Таблица товаров (оприходование)
	|ВЫБРАТЬ
	|	3                                                                       КАК Порядок,
	|	ТаблицаВидыЗапасов.НомерСтроки                                          КАК НомерСтроки,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)                                  КАК ВидДвижения,
	|	&Период                                                                 КАК Период,
	|	АналитикаОприходование.АналитикаНоменклатуры                            КАК АналитикаУчетаНоменклатуры,
	|	&Организация                                                            КАК Организация,
	|	ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыНаСкладах) КАК РазделУчета,
	|	ВЫБОР КОГДА &УчитыватьСебестоимостьТоваровПоВидамЗапасов ТОГДА
	|   	ТаблицаВидыЗапасов.ВидЗапасовОприходование
	|	ИНАЧЕ
	|		Неопределено
	|	КОНЕЦ                                                                   КАК ВидЗапасов,
	|	ТаблицаВидыЗапасов.Количество                                           КАК Количество,
	|	ТаблицаВидыЗапасов.Сумма                                                КАК Стоимость,
	|	ТаблицаВидыЗапасов.Сумма                                                КАК СтоимостьБезНДС,
	|	ВЫРАЗИТЬ(ТаблицаВидыЗапасов.Сумма*&КоэффициентПересчетаВВалютуРегл
	|		КАК ЧИСЛО(15,2))                                                    КАК СтоимостьРегл,
	|	0                                                                       КАК КорСтоимость,
	|	Неопределено                                                            КАК КорАналитикаУчетаНоменклатуры,
	|	Неопределено                                                            КАК КорРазделУчета,
	|	Неопределено                                                            КАК КорВидЗапасов,
	|	Неопределено                                                            КАК Подразделение,
	|	Неопределено                                                            КАК АналитикаРасходов,
	|	Неопределено                                                            КАК СтатьяРасходовСписания,
	|	&ХозяйственнаяОперация                                                  КАК ХозяйственнаяОперация
	|ИЗ
	|	ВтВидыЗапасов КАК ТаблицаВидыЗапасов
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		ВтАналитикаОприходования КАК АналитикаОприходование
	|	ПО
	|		ТаблицаВидыЗапасов.НоменклатураОприходование = АналитикаОприходование.Номенклатура
	|		И ТаблицаВидыЗапасов.ХарактеристикаОприходование = АналитикаОприходование.Характеристика
	|
	|УПОРЯДОЧИТЬ ПО
	|	Порядок,
	|	НомерСтроки
	|;
	|////////////////////////////////////////////////////////////////////////////////////////////////////
	|";

	Возврат ТекстЗапроса;
	
КонецФункции // ТекстЗапросаТаблицаСебестоимостьТоваров()

Функция ТекстЗапросаТаблицаПартииТоваровОрганизацийПоследовательность()
	
	ТекстЗапроса = "
	|ВЫБРАТЬ
	|	&Период КАК Период,
	|	&Ссылка КАК Регистратор,
	|	ТаблицаВидыЗапасов.Номенклатура КАК Номенклатура,
	|	ТаблицаВидыЗапасов.Характеристика КАК Характеристика
	|ИЗ
	|	ВтВидыЗапасов КАК ТаблицаВидыЗапасов
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	&Период,
	|	&Ссылка,
	|	ТаблицаВидыЗапасов.НоменклатураОприходование,
	|	ТаблицаВидыЗапасов.ХарактеристикаОприходование
	|ИЗ
	|	ВтВидыЗапасов КАК ТаблицаВидыЗапасов
	|;
	|/////////////////////////////////////////////////////////////////////////////
	|";
	
	Возврат ТекстЗапроса;
	
КонецФункции // ТекстЗапросаТаблицаПартииТоваровОрганизацийПоследовательность()

Функция ТекстЗапросаТаблицаПартииТоваровОрганизаций()
	
	ТекстЗапроса = "
	|ВЫБРАТЬ
	|	ТаблицаВидыЗапасов.НомерСтроки КАК НомерСтроки,
	|	&Ссылка КАК ДокументПоступления,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	&Период КАК Период,
	|	&Организация КАК Организация,
	|	АналитикаУчетаНоменклатуры.КлючАналитики КАК АналитикаУчетаНоменклатуры,
	|	ТаблицаВидыЗапасов.ВидЗапасовОприходование КАК ВидЗапасов,
	|	ТаблицаВидыЗапасов.АналитикаУчетаПартий КАК АналитикаУчетаПартий,
	|	ТаблицаВидыЗапасов.Количество КАК Количество,
	|	ТаблицаВидыЗапасов.Сумма КАК Стоимость,
	|	ТаблицаВидыЗапасов.Сумма КАК СтоимостьБезНДС,
	|	ВЫРАЗИТЬ(ТаблицаВидыЗапасов.Сумма*&КоэффициентПересчетаВВалютуРегл КАК ЧИСЛО(15,2)) КАК СтоимостьРегл,
	|	ТаблицаВидыЗапасов.НоменклатураОприходование КАК Номенклатура,
	|	ТаблицаВидыЗапасов.ХарактеристикаОприходование КАК Характеристика
	|ИЗ
	|	ВтВидыЗапасов КАК ТаблицаВидыЗапасов
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры
	|		ПО ТаблицаВидыЗапасов.НоменклатураОприходование = АналитикаУчетаНоменклатуры.Номенклатура
	|			И ТаблицаВидыЗапасов.ХарактеристикаОприходование = АналитикаУчетаНоменклатуры.Характеристика
	|			И (&Склад = АналитикаУчетаНоменклатуры.Склад)
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки
	|;
	|/////////////////////////////////////////////////////////////////////////////
	|";
	
	Возврат ТекстЗапроса;
	
КонецФункции // ТекстЗапросаТаблицаТоварыОрганизаций()

////////////////////////////////////////////////////////////////////////////////
// Печать

Процедура Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт
	
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "ТОРГ15") Тогда

		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(
			КоллекцияПечатныхФорм, 
			"ТОРГ15",
			"ТОРГ - 15 (Акт о порче, бое, ломе товарно-материальных ценностей)",
			СформироватьПечатнуюФормуТОРГ15(МассивОбъектов, ОбъектыПечати, ПараметрыПечати)
		);
		
	КонецЕсли;
	
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "АктПорчиТоваров") Тогда

		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(
			КоллекцияПечатныхФорм, 
			"АктПорчиТоваров",
			"Акт о порче товаров",
			ПечатьАктаПорчиТоваров(МассивОбъектов, ОбъектыПечати)
		);
		
	КонецЕсли;
КонецПроцедуры

// Функция формирует таблицу курсов валют по дням.
//	Параметры:
//			МассивДокументов - Массив - массив ссылок на документы, на даты которых нужно получить курсы валют
Функция ТаблицаКурсовВалют(МассивДокументов)
	
	ВалютаРегламентированногоУчета = Константы.ВалютаРегламентированногоУчета.Получить();
	ВалютаУправленческогоУчета = Константы.ВалютаУправленческогоУчета.Получить();
	
	Запрос = Новый Запрос("ВЫБРАТЬ РАЗЛИЧНЫЕ
	                      |	ПорчаТоваров.Ссылка КАК Ссылка,
	                      |	НАЧАЛОПЕРИОДА(ПорчаТоваров.Дата, ДЕНЬ) КАК Дата,
	                      |	ПорчаТоваров.ВидЦены.ВалютаЦены КАК Валюта
	                      |ИЗ
	                      |	Документ.ПорчаТоваров КАК ПорчаТоваров
	                      |ГДЕ
	                      |	ПорчаТоваров.Ссылка В(&МассивДокументов)
	                      |
	                      |УПОРЯДОЧИТЬ ПО
	                      |	Валюта,
	                      |	Дата");
	
	Запрос.УстановитьПараметр("МассивДокументов", МассивДокументов);
	
	ТаблицаКурсовВалют = Новый ТаблицаЗначений;
	ТаблицаКурсовВалют.Колонки.Добавить("Ссылка",       Новый ОписаниеТипов("ДокументСсылка.ПорчаТоваров"));
	ТаблицаКурсовВалют.Колонки.Добавить("Валюта",       Новый ОписаниеТипов("СправочникСсылка.Валюты"));
	ТаблицаКурсовВалют.Колонки.Добавить("Дата",         Новый ОписаниеТипов("Дата"));
	ТаблицаКурсовВалют.Колонки.Добавить("Курс",         Новый ОписаниеТипов("Число"));
	ТаблицаКурсовВалют.Колонки.Добавить("Кратность",    Новый ОписаниеТипов("Число"));
	ТаблицаКурсовВалют.Колонки.Добавить("КурсУпр",      Новый ОписаниеТипов("Число"));
	ТаблицаКурсовВалют.Колонки.Добавить("КратностьУпр", Новый ОписаниеТипов("Число"));
	
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		
		НоваяСтрока = ТаблицаКурсовВалют.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, Выборка);
		
		КурсыВалюты = РаботаСКурсамиВалют.ПолучитьКурсВалюты(Выборка.Валюта, Выборка.Дата);
		НоваяСтрока.Курс = КурсыВалюты.Курс;
		НоваяСтрока.Кратность = КурсыВалюты.Кратность;
		Если ВалютаУправленческогоУчета <> ВалютаРегламентированногоУчета Тогда
			КурсыВалютыУпр = РаботаСКурсамиВалют.ПолучитьКурсВалюты(ВалютаУправленческогоУчета, Выборка.Дата);
			НоваяСтрока.КурсУпр = КурсыВалютыУпр.Курс;
			НоваяСтрока.КратностьУпр = КурсыВалютыУпр.Кратность;
		Иначе
			НоваяСтрока.КурсУпр = 1;
			НоваяСтрока.КратностьУпр = 1;
		КонецЕсли;
	КонецЦикла;
	
	Возврат ТаблицаКурсовВалют;
	
КонецФункции // ТаблицаКурсовВалют()

Функция СформироватьПечатнуюФормуТОРГ15(МассивОбъектов, ОбъектыПечати, ПараметрыПечати)

	УстановитьПривилегированныйРежим(Истина);
	
	МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	ОтветственныеЛицаСервер.СформироватьВременнуюТаблицуОтветственныхЛицДокументов(МассивОбъектов, МенеджерВременныхТаблиц);	
	
	ЗапросПоДокументам = Новый Запрос;
	ЗапросПоДокументам.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	ЗапросПоДокументам.УстановитьПараметр("МассивОбъектов", МассивОбъектов);
	ЗапросПоДокументам.Текст =
	"ВЫБРАТЬ
	|	РасчетСебестоимостиТоваровОрганизации.Ссылка.ПредварительныйРасчет КАК ПредварительныйРасчет,
	|	ТаблицаОтветственныеЛица.РуководительНаименование КАК Руководитель,
	|	ТаблицаОтветственныеЛица.РуководительДолжность КАК ДолжностьРуководителя,
	|	ТаблицаОтветственныеЛица.ГлавныйБухгалтерНаименование КАК ГлавныйБухгалтер,
	|	ПРЕДСТАВЛЕНИЕ(Документ.Организация.КодПоОКПО) КАК ОрганизацияПоОКПО,
	|	ПРЕДСТАВЛЕНИЕ(Документ.Организация.Префикс) КАК Префикс,
	|	ПРЕДСТАВЛЕНИЕ(Документ.Склад) КАК СкладПредставление,
	|	ПРЕДСТАВЛЕНИЕ(Документ.Подразделение) КАК ПодразделениеПредставление,
	|	Документ.ПриходоватьТоварыПоСебестоимостиСписания КАК ПриходоватьТоварыПоСебестоимостиСписания,
	|	Документ.ПричинаПорчи КАК НаименованиеПричины,
	|	Документ.Ссылка КАК Ссылка,
	|	Документ.Номер КАК Номер,
	|	Документ.Дата КАК ДатаДокумента,
	|	Документ.Организация КАК Организация,
	|	Документ.Склад.ТекущийОтветственный КАК Кладовщик,
	|	Документ.Склад.ТекущаяДолжностьОтветственного КАК ДолжностьКладовщика,
	|	Документ.Ответственный.ФизическоеЛицо КАК Ответственный,
	|	Документ.ВидЦены КАК ВидЦен,
	|	Документ.ДокументОснование КАК ДокументОснование,
	|	Документ.Склад КАК Склад,
	|	ПРЕДСТАВЛЕНИЕ(Документ.Ответственный.ФизическоеЛицо) КАК Расчетчик,
	|	Документ.ИсточникИнформацииОЦенахДляПечати КАК ИсточникИнформацииОЦенахДляПечати
	|ИЗ
	|	Документ.ПорчаТоваров КАК Документ
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.РасчетСебестоимостиТоваров.Организации КАК РасчетСебестоимостиТоваровОрганизации
	|		ПО Документ.Организация = РасчетСебестоимостиТоваровОрганизации.Организация
	|			И (РасчетСебестоимостиТоваровОрганизации.Ссылка.Дата МЕЖДУ НАЧАЛОПЕРИОДА(Документ.Дата, МЕСЯЦ) И КОНЕЦПЕРИОДА(Документ.Дата, МЕСЯЦ))
	|			И (РасчетСебестоимостиТоваровОрганизации.Ссылка.Проведен)
	|		ЛЕВОЕ СОЕДИНЕНИЕ ТаблицаОтветственныеЛица КАК ТаблицаОтветственныеЛица
	|		ПО Документ.Ссылка = ТаблицаОтветственныеЛица.Ссылка
	|ГДЕ
	|	Документ.Ссылка В(&МассивОбъектов)
	|
	|УПОРЯДОЧИТЬ ПО
	|	Ссылка";
	
	ВыборкаПоДокументам		= ЗапросПоДокументам.Выполнить().Выбрать();
			
	ТаблицаКурсовВалют 		= ТаблицаКурсовВалют(МассивОбъектов);
	
	ВалютаРегл 	= Константы.ВалютаРегламентированногоУчета.Получить();	
	Макет 		= УправлениеПечатью.ПолучитьМакет("Документ.ПорчаТоваров.ПФ_MXL_ТОРГ15");
	
	ТабДокумент = Новый ТабличныйДокумент;
	// Зададим параметры макета по-умолчанию
	ТабДокумент.ПолеСверху = 10;
	ТабДокумент.ПолеСлева = 10;
	ТабДокумент.ПолеСнизу = 10;
	ТабДокумент.ПолеСправа = 10;
	ТабДокумент.ОриентацияСтраницы = ОриентацияСтраницы.Ландшафт;
	
	ТабДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_ПорчаТоваров_ТОРГ15";
	
	ОбластьШапки 						= Макет.ПолучитьОбласть("Шапка");     
	ОбластьЗаголовокТаблицы				= Макет.ПолучитьОбласть("ЗаголовокТаблицыТоварыУценка");
	ОбластьСтрока 						= Макет.ПолучитьОбласть("СтрокаТоварыУценка");
	ОбластьИтого 						= Макет.ПолучитьОбласть("ИтогоТоварыУценка");
	ОбластьПодвал 						= Макет.ПолучитьОбласть("ПодвалТоварыУценка");
	ОбластьЗаголовокТаблицыУтиль		= Макет.ПолучитьОбласть("ЗаголовокТаблицыУтиль");
	ОбластьСтрокаУтиль					= Макет.ПолучитьОбласть("СтрокаУтиль");
	ОбластьИтогоУтиль 					= Макет.ПолучитьОбласть("ИтогоУтиль");
	ОбластьПодписи						= Макет.ПолучитьОбласть("ПодвалПодписи");
	// Создаем массив для проверки вывода
	МассивВыводимыхОбластей = Новый Массив;
	
	
	НомерДокумента = 0;
	КоличествоДокументов = ВыборкаПоДокументам.Количество();
	КолонкаКодов = ФормированиеПечатныхФорм.ИмяДополнительнойКолонки();
	Если Не ЗначениеЗаполнено(КолонкаКодов) Тогда
		КолонкаКодов = "Код";
	КонецЕсли;

	Пока ВыборкаПоДокументам.Следующий() Цикл
		
		ЗапросПоТоварам = Новый Запрос;
		
		Если ВыборкаПоДокументам.ИсточникИнформацииОЦенахДляПечати = Перечисления.ИсточникиИнформацииОЦенахДляПечати.ПоВидуЦен Тогда
		
			ЗапросПоТоварам.Текст = 
			"ВЫБРАТЬ
			|	ПорчаТоваровТовары.Характеристика.НаименованиеПолное КАК ХарактеристикаПредставление,
			|	ПРЕДСТАВЛЕНИЕ(ПорчаТоваровТовары.Номенклатура.ЕдиницаИзмерения) КАК ЕдиницаИзмеренияНаименование,
			|	ПорчаТоваровТовары.НомерСтроки КАК НомерСтроки,
			|	ПорчаТоваровТовары.Количество КАК Количество,
			|	ВЫБОР
			|		КОГДА ПорчаТоваровТовары.НоменклатураОприходование.Качество = ЗНАЧЕНИЕ(Перечисление.ГрадацииКачества.НеГоден)
			|			ТОГДА 0
			|		ИНАЧЕ ПорчаТоваровТовары.Количество
			|	КОНЕЦ КАК УценкаКоличество,
			|	ВЫБОР
			|		КОГДА ПорчаТоваровТовары.НоменклатураОприходование.Качество = ЗНАЧЕНИЕ(Перечисление.ГрадацииКачества.НеГоден)
			|			ТОГДА 0
			|		КОГДА ПорчаТоваровТовары.Ссылка.ПриходоватьТоварыПоСебестоимостиСписания
			|			ТОГДА ВЫБОР
			|					КОГДА НЕ ЦеныНоменклатуры.Упаковка.Коэффициент ЕСТЬ NULL 
			|							И ЦеныНоменклатуры.Упаковка.Коэффициент <> 0
			|						ТОГДА ЕСТЬNULL(ЦеныНоменклатуры.Цена, 0) / ЦеныНоменклатуры.Упаковка.Коэффициент
			|					ИНАЧЕ ЕСТЬNULL(ЦеныНоменклатуры.Цена, 0)
			|				КОНЕЦ
			|		ИНАЧЕ ПорчаТоваровТовары.Цена
			|	КОНЕЦ КАК УценкаЦена,
			|	ВЫБОР
			|		КОГДА ПорчаТоваровТовары.НоменклатураОприходование.Качество = ЗНАЧЕНИЕ(Перечисление.ГрадацииКачества.НеГоден)
			|			ТОГДА 0
			|		КОГДА ПорчаТоваровТовары.Ссылка.ПриходоватьТоварыПоСебестоимостиСписания
			|			ТОГДА ВЫБОР
			|					КОГДА НЕ ЦеныНоменклатуры.Упаковка.Коэффициент ЕСТЬ NULL 
			|							И ЦеныНоменклатуры.Упаковка.Коэффициент <> 0
			|						ТОГДА (ЕСТЬNULL(ЦеныНоменклатуры.Цена, 0) / ЦеныНоменклатуры.Упаковка.Коэффициент) * ПорчаТоваровТовары.Количество
			|					ИНАЧЕ ЕСТЬNULL(ЦеныНоменклатуры.Цена, 0) * ПорчаТоваровТовары.Количество
			|				КОНЕЦ
			|		ИНАЧЕ ПорчаТоваровТовары.Количество * ПорчаТоваровТовары.Цена
			|	КОНЕЦ КАК УценкаСтоимость,
			|	ПорчаТоваровТовары.Номенклатура.Код КАК ТоварКод,
			|	ПорчаТоваровТовары.Номенклатура.Артикул КАК ТоварАртикул,
			|	ВЫБОР
			|		КОГДА НЕ ЦеныНоменклатуры.Упаковка.Коэффициент ЕСТЬ NULL 
			|				И ЦеныНоменклатуры.Упаковка.Коэффициент <> 0
			|			ТОГДА ЕСТЬNULL(ЦеныНоменклатуры.Цена, 0) / ЦеныНоменклатуры.Упаковка.Коэффициент
			|		ИНАЧЕ ЕСТЬNULL(ЦеныНоменклатуры.Цена, 0)
			|	КОНЕЦ КАК Цена,
			|	ПорчаТоваровТовары.НоменклатураОприходование.Качество КАК ГрадацияКачества,
			|	ПорчаТоваровТовары.Номенклатура.НаименованиеПолное КАК НоменклатураПредставление,
			|	ПорчаТоваровТовары.Номенклатура.ЕдиницаИзмерения.Код КАК ЕдиницаИзмеренияКодПоОКЕИ
			|ИЗ
			|	Документ.ПорчаТоваров.Товары КАК ПорчаТоваровТовары
			|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЦеныНоменклатуры.СрезПоследних(
			|				КОНЕЦПЕРИОДА(&ДатаЦен, ДЕНЬ),
			|				(ВидЦены, Номенклатура, Характеристика) В
			|					(ВЫБРАТЬ
			|						&ВидЦен,
			|						ПорчаТоваровТовары.Номенклатура,
			|						ПорчаТоваровТовары.Характеристика
			|					ИЗ
			|						Документ.ПорчаТоваров.Товары КАК ПорчаТоваровТовары
			|					ГДЕ
			|						ПорчаТоваровТовары.Ссылка = &ТекущийДокумент)) КАК ЦеныНоменклатуры
			|		ПО ПорчаТоваровТовары.Номенклатура = ЦеныНоменклатуры.Номенклатура
			|			И ПорчаТоваровТовары.Характеристика = ЦеныНоменклатуры.Характеристика
			|ГДЕ
			|	ПорчаТоваровТовары.Ссылка = &ТекущийДокумент
			|
			|УПОРЯДОЧИТЬ ПО
			|	ПорчаТоваровТовары.Ссылка,
			|	ПорчаТоваровТовары.НомерСтроки
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	ПорчаТоваровТовары.НоменклатураОприходование.НаименованиеПолное КАК УтильНоменклатура,
			|	ПорчаТоваровТовары.ХарактеристикаОприходование.НаименованиеПолное КАК УтильХарактеристика,
			|	ПорчаТоваровТовары.НоменклатураОприходование." + КолонкаКодов + " КАК УтильКод,
			|	СУММА(ПорчаТоваровТовары.Количество) КАК Количество,
			|	ПорчаТоваровТовары.НоменклатураОприходование.Качество КАК ГрадацияКачества,
			|	ПорчаТоваровТовары.НоменклатураОприходование.ЕдиницаИзмерения.Код КАК ЕдиницаИзмеренияКодПоОКЕИ,
			|	ПРЕДСТАВЛЕНИЕ(ПорчаТоваровТовары.НоменклатураОприходование.ЕдиницаИзмерения) КАК ЕдиницаИзмеренияНаименование,
			|	ВЫБОР
			|		КОГДА ПорчаТоваровТовары.Ссылка.ПриходоватьТоварыПоСебестоимостиСписания
			|			ТОГДА ВЫБОР
			|					КОГДА НЕ ЦеныУтиль.Упаковка.Коэффициент ЕСТЬ NULL 
			|							И ЦеныУтиль.Упаковка.Коэффициент <> 0
			|						ТОГДА ЕСТЬNULL(ЦеныУтиль.Цена, 0) / ЦеныУтиль.Упаковка.Коэффициент
			|					ИНАЧЕ ЕСТЬNULL(ЦеныУтиль.Цена, 0)
			|				КОНЕЦ
			|		ИНАЧЕ ПорчаТоваровТовары.Цена
			|	КОНЕЦ КАК Цена
			|ИЗ
			|	Документ.ПорчаТоваров.Товары КАК ПорчаТоваровТовары
			|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЦеныНоменклатуры.СрезПоследних(
			|				КОНЕЦПЕРИОДА(&ДатаЦен, ДЕНЬ),
			|				(ВидЦены, Номенклатура, Характеристика) В
			|					(ВЫБРАТЬ
			|						&ВидЦен,
			|						ПорчаТоваровТовары.Номенклатура,
			|						ПорчаТоваровТовары.Характеристика
			|					ИЗ
			|						Документ.ПорчаТоваров.Товары КАК ПорчаТоваровТовары
			|					ГДЕ
			|						ПорчаТоваровТовары.Ссылка = &ТекущийДокумент)) КАК ЦеныУтиль
			|		ПО ПорчаТоваровТовары.Номенклатура = ЦеныУтиль.Номенклатура
			|			И ПорчаТоваровТовары.Характеристика = ЦеныУтиль.Характеристика
			|ГДЕ
			|	ПорчаТоваровТовары.Ссылка = &ТекущийДокумент
			|	И ПорчаТоваровТовары.НоменклатураОприходование.Качество = ЗНАЧЕНИЕ(Перечисление.ГрадацииКачества.НеГоден)
			|
			|СГРУППИРОВАТЬ ПО
			|	ПорчаТоваровТовары.НоменклатураОприходование.НаименованиеПолное,
			|	ПорчаТоваровТовары.ХарактеристикаОприходование.НаименованиеПолное,
			|	ПорчаТоваровТовары.НоменклатураОприходование." + КолонкаКодов + ",
			|	ВЫБОР
			|		КОГДА ПорчаТоваровТовары.Ссылка.ПриходоватьТоварыПоСебестоимостиСписания
			|			ТОГДА ВЫБОР
			|					КОГДА НЕ ЦеныУтиль.Упаковка.Коэффициент ЕСТЬ NULL 
			|							И ЦеныУтиль.Упаковка.Коэффициент <> 0
			|						ТОГДА ЕСТЬNULL(ЦеныУтиль.Цена, 0) / ЦеныУтиль.Упаковка.Коэффициент
			|					ИНАЧЕ ЕСТЬNULL(ЦеныУтиль.Цена, 0)
			|				КОНЕЦ
			|		ИНАЧЕ ПорчаТоваровТовары.Цена
			|	КОНЕЦ,
			|	ПорчаТоваровТовары.НоменклатураОприходование.Качество,
			|	ПорчаТоваровТовары.НоменклатураОприходование.ЕдиницаИзмерения.Код,
			|	ПРЕДСТАВЛЕНИЕ(ПорчаТоваровТовары.НоменклатураОприходование.ЕдиницаИзмерения)";
			
			
			
			ЗапросПоТоварам.УстановитьПараметр("ТекущийДокумент", ВыборкаПоДокументам.Ссылка);
			ЗапросПоТоварам.УстановитьПараметр("ДатаЦен", ВыборкаПоДокументам.ДатаДокумента);
			ЗапросПоТоварам.УстановитьПараметр("ВидЦен", ВыборкаПоДокументам.ВидЦен);
			РезультатыПоТоварам = ЗапросПоТоварам.ВыполнитьПакет();
			ВыборкаСтрокТовары	= РезультатыПоТоварам[0].Выбрать();
			ВыборкаСтрокУтиль	= РезультатыПоТоварам[1].Выбрать();

						
		ИначеЕсли ВыборкаПоДокументам.ИсточникИнформацииОЦенахДляПечати = Перечисления.ИсточникиИнформацииОЦенахДляПечати.ПоСебестоимости Тогда
			
			Если ВыборкаПоДокументам.ПредварительныйРасчет = Null Тогда
				ТекстСообщения = НСтр("ru = 'Не удалось получить цены по себестоимости для документа %Документ%: на %Период% не произведен расчет себестоимости.'");
				
				ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Документ%", ВыборкаПоДокументам.Ссылка);
				ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Период%", Формат(НачалоМесяца(ВыборкаПоДокументам.ДатаДокумента),"ДЛФ=DD"));
				
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения);
				
				Продолжить;
			КонецЕсли;
				
			Если ВыборкаПоДокументам.ПредварительныйРасчет Тогда
				
				ТекстСообщения = НСтр("ru = 'При печати документа %Документ% использовались данные предварительного расчета себестоимости.'");
				ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Документ%", ВыборкаПоДокументам.Ссылка);
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения);
				
				ЗапросПоТоварам.Текст =
				"ВЫБРАТЬ
				|	ПорчаТоваровОбщая.Номенклатура КАК Номенклатура,
				|	ПорчаТоваровОбщая.Характеристика КАК Характеристика,
				|	ПорчаТоваровОбщая.ВидЗапасов КАК ВидЗапасов,
				|	СправочникКлючейАналитики.Ссылка КАК КлючАналитикиУчетаНоменклатуры,
				|	ПорчаТоваровОбщая.Количество КАК Количество,
				|	ПорчаТоваровОбщая.НомерСтроки КАК НомерСтроки,
				|	ПорчаТоваровОбщая.НоменклатураОприходование,
				|	ПорчаТоваровОбщая.ХарактеристикаОприходование,
				|	ПорчаТоваровОбщая.Цена,
				|	ПорчаТоваровОбщая.Ссылка
				|ПОМЕСТИТЬ ПорчаТоваровСКлючамиАналитики
				|ИЗ
				|	(ВЫБРАТЬ
				|		ПорчаТоваровВидыЗапасов.Номенклатура КАК Номенклатура,
				|		ПорчаТоваровВидыЗапасов.Характеристика КАК Характеристика,
				|		ПорчаТоваровВидыЗапасов.ВидЗапасов КАК ВидЗапасов,
				|		ПорчаТоваровВидыЗапасов.Количество КАК Количество,
				|		ПорчаТоваровВидыЗапасов.НомерСтроки КАК НомерСтроки,
				|		ПорчаТоваровВидыЗапасов.НоменклатураОприходование КАК НоменклатураОприходование,
				|		ПорчаТоваровВидыЗапасов.ХарактеристикаОприходование КАК ХарактеристикаОприходование,
				|		ПорчаТоваровТовары.Цена КАК Цена,
				|		ПорчаТоваровВидыЗапасов.Ссылка КАК Ссылка
				|	ИЗ
				|		Документ.ПорчаТоваров.ВидыЗапасов КАК ПорчаТоваровВидыЗапасов
				|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ПорчаТоваров.Товары КАК ПорчаТоваровТовары
				|			ПО ПорчаТоваровВидыЗапасов.Номенклатура = ПорчаТоваровТовары.Номенклатура
				|				И ПорчаТоваровВидыЗапасов.Характеристика = ПорчаТоваровТовары.Характеристика) КАК ПорчаТоваровОбщая
				|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.КлючиАналитикиУчетаНоменклатуры КАК СправочникКлючейАналитики
				|		ПО (СправочникКлючейАналитики.Номенклатура = ПорчаТоваровОбщая.Номенклатура)
				|			И (СправочникКлючейАналитики.Характеристика = ПорчаТоваровОбщая.Характеристика)
				|			И (СправочникКлючейАналитики.Склад = &Склад)
				|ГДЕ
				|	ПорчаТоваровОбщая.Ссылка = &ТекущийДокумент
				|	И ПорчаТоваровОбщая.Ссылка.Организация = &Организация
				|	И ПорчаТоваровОбщая.Ссылка.Проведен
				|;
				|
				|////////////////////////////////////////////////////////////////////////////////
				|ВЫБРАТЬ
				|	ПорчаТоваровСКлючамиАналитики.НоменклатураОприходование.НаименованиеПолное КАК УтильНоменклатура,
				|	ПорчаТоваровСКлючамиАналитики.ХарактеристикаОприходование.НаименованиеПолное КАК УтильХарактеристика,
				|	ПорчаТоваровСКлючамиАналитики.НоменклатураОприходование." + КолонкаКодов + " КАК УтильКод,
				|	СУММА(ПорчаТоваровСКлючамиАналитики.Количество) КАК Количество,
				|	ПорчаТоваровСКлючамиАналитики.НоменклатураОприходование.Качество КАК ГрадацияКачества,
				|	ПорчаТоваровСКлючамиАналитики.НоменклатураОприходование.ЕдиницаИзмерения.Код КАК ЕдиницаИзмеренияКодПоОКЕИ,
				|	ПРЕДСТАВЛЕНИЕ(ПорчаТоваровСКлючамиАналитики.НоменклатураОприходование.ЕдиницаИзмерения) КАК ЕдиницаИзмеренияНаименование,
				|	ВЫБОР
				|		КОГДА ПорчаТоваровСКлючамиАналитики.Ссылка.ПриходоватьТоварыПоСебестоимостиСписания
				|			ТОГДА ЕСТЬNULL(ЦеныУтиль.СтоимостьРегл, 0)
				|		ИНАЧЕ ПорчаТоваровСКлючамиАналитики.Цена
				|	КОНЕЦ КАК Цена
				|ИЗ
				|	ПорчаТоваровСКлючамиАналитики КАК ПорчаТоваровСКлючамиАналитики
				|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СтоимостьТоваров.СрезПоследних(
				|				КОНЕЦПЕРИОДА(&ДатаЦен, ДЕНЬ),
				|				(АналитикаУчетаНоменклатуры, Организация, ВидЗапасов) В
				|					(ВЫБРАТЬ
				|						Таблица.КлючАналитикиУчетаНоменклатуры,
				|						&Организация,
				|						Таблица.ВидЗапасов
				|					ИЗ
				|						ПорчаТоваровСКлючамиАналитики КАК Таблица)) КАК ЦеныУтиль
				|		ПО ПорчаТоваровСКлючамиАналитики.КлючАналитикиУчетаНоменклатуры = ЦеныУтиль.АналитикаУчетаНоменклатуры
				|			И ПорчаТоваровСКлючамиАналитики.ВидЗапасов = ЦеныУтиль.ВидЗапасов
				|			И (ЦеныУтиль.Организация = &Организация)
				|ГДЕ
				|	ПорчаТоваровСКлючамиАналитики.НоменклатураОприходование.Качество = ЗНАЧЕНИЕ(Перечисление.ГрадацииКачества.НеГоден)
				|
				|СГРУППИРОВАТЬ ПО
				|	ПорчаТоваровСКлючамиАналитики.НоменклатураОприходование.НаименованиеПолное,
				|	ПорчаТоваровСКлючамиАналитики.ХарактеристикаОприходование.НаименованиеПолное,
				|	ПорчаТоваровСКлючамиАналитики.НоменклатураОприходование." + КолонкаКодов + ",
				|	ВЫБОР
				|		КОГДА ПорчаТоваровСКлючамиАналитики.Ссылка.ПриходоватьТоварыПоСебестоимостиСписания
				|			ТОГДА ЕСТЬNULL(ЦеныУтиль.СтоимостьРегл, 0)
				|		ИНАЧЕ ПорчаТоваровСКлючамиАналитики.Цена
				|	КОНЕЦ,
				|	ПорчаТоваровСКлючамиАналитики.НоменклатураОприходование.Качество,
				|	ПорчаТоваровСКлючамиАналитики.НоменклатураОприходование.ЕдиницаИзмерения.Код,
				|	ПРЕДСТАВЛЕНИЕ(ПорчаТоваровСКлючамиАналитики.НоменклатураОприходование.ЕдиницаИзмерения)
				|;
				|
				|////////////////////////////////////////////////////////////////////////////////
				|ВЫБРАТЬ
				|	ПорчаТоваровСКлючамиАналитики.Характеристика.НаименованиеПолное КАК ХарактеристикаПредставление,
				|	ПРЕДСТАВЛЕНИЕ(ПорчаТоваровСКлючамиАналитики.Номенклатура.ЕдиницаИзмерения) КАК ЕдиницаИзмеренияНаименование,
				|	ПорчаТоваровСКлючамиАналитики.НомерСтроки КАК НомерСтроки,
				|	ПорчаТоваровСКлючамиАналитики.Количество КАК Количество,
				|	ВЫБОР
				|		КОГДА ПорчаТоваровСКлючамиАналитики.НоменклатураОприходование.Качество = ЗНАЧЕНИЕ(Перечисление.ГрадацииКачества.НеГоден)
				|			ТОГДА 0
				|		ИНАЧЕ ПорчаТоваровСКлючамиАналитики.Количество
				|	КОНЕЦ КАК УценкаКоличество,
				|	ВЫБОР
				|		КОГДА ПорчаТоваровСКлючамиАналитики.НоменклатураОприходование.Качество = ЗНАЧЕНИЕ(Перечисление.ГрадацииКачества.НеГоден)
				|			ТОГДА 0
				|		КОГДА ПорчаТоваровСКлючамиАналитики.Ссылка.ПриходоватьТоварыПоСебестоимостиСписания
				|			ТОГДА ЕСТЬNULL(ЦеныНоменклатуры.СтоимостьРегл, 0)
				|		ИНАЧЕ ПорчаТоваровСКлючамиАналитики.Цена
				|	КОНЕЦ КАК УценкаЦена,
				|	ВЫБОР
				|		КОГДА ПорчаТоваровСКлючамиАналитики.НоменклатураОприходование.Качество = ЗНАЧЕНИЕ(Перечисление.ГрадацииКачества.НеГоден)
				|			ТОГДА 0
				|       КОГДА ПорчаТоваровСКлючамиАналитики.Ссылка.ПриходоватьТоварыПоСебестоимостиСписания
				|			ТОГДА ЕСТЬNULL(ЦеныНоменклатуры.СтоимостьРегл, 0) * ПорчаТоваровСКлючамиАналитики.Количество
				|		ИНАЧЕ ПорчаТоваровСКлючамиАналитики.Цена * ПорчаТоваровСКлючамиАналитики.Количество
				|	КОНЕЦ КАК УценкаСтоимость,
				|	ПорчаТоваровСКлючамиАналитики.Номенклатура.Код КАК ТоварКод,
				|	ПорчаТоваровСКлючамиАналитики.Номенклатура.Артикул КАК ТоварАртикул,
				|	ЕСТЬNULL(ЦеныНоменклатуры.СтоимостьРегл, 0) КАК Цена,
				|	ПорчаТоваровСКлючамиАналитики.НоменклатураОприходование.Качество КАК ГрадацияКачества,
				|	ПорчаТоваровСКлючамиАналитики.Номенклатура.НаименованиеПолное КАК НоменклатураПредставление,
				|	ПорчаТоваровСКлючамиАналитики.Номенклатура.ЕдиницаИзмерения.Код КАК ЕдиницаИзмеренияКодПоОКЕИ
				|ИЗ
				|	ПорчаТоваровСКлючамиАналитики КАК ПорчаТоваровСКлючамиАналитики
				|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СтоимостьТоваров.СрезПоследних(
				|				КОНЕЦПЕРИОДА(&ДатаЦен, ДЕНЬ),
				|				(АналитикаУчетаНоменклатуры, Организация, ВидЗапасов) В
				|					(ВЫБРАТЬ
				|						Таблица.КлючАналитикиУчетаНоменклатуры,
				|						&Организация,
				|						Таблица.ВидЗапасов
				|					ИЗ
				|						ПорчаТоваровСКлючамиАналитики КАК Таблица)) КАК ЦеныНоменклатуры
				|		ПО ПорчаТоваровСКлючамиАналитики.КлючАналитикиУчетаНоменклатуры = ЦеныНоменклатуры.АналитикаУчетаНоменклатуры
				|			И (ПорчаТоваровСКлючамиАналитики.ВидЗапасов = ЦеныНоменклатуры.ВидЗапасов И &УчитыватьСебестоимостьТоваровПоВидамЗапасов
				|				ИЛИ НЕ &УчитыватьСебестоимостьТоваровПоВидамЗапасов)
				|			И (ЦеныНоменклатуры.Организация = &Организация)
				|
				|УПОРЯДОЧИТЬ ПО
				|	ПорчаТоваровСКлючамиАналитики.Ссылка,
				|	ПорчаТоваровСКлючамиАналитики.НомерСтроки";
								
			Иначе
				//Фактический расчет
				ЗапросПоТоварам.Текст =
				"ВЫБРАТЬ
				|	ПорчаТоваровОбщая.Номенклатура КАК Номенклатура,
				|	ПорчаТоваровОбщая.Характеристика КАК Характеристика,
				|	ПорчаТоваровОбщая.ВидЗапасов КАК ВидЗапасов,
				|	СправочникКлючейАналитики.Ссылка КАК КлючАналитикиУчетаНоменклатуры,
				|	ПорчаТоваровОбщая.Количество КАК Количество,
				|	ПорчаТоваровОбщая.НомерСтроки КАК НомерСтроки,
				|	ПорчаТоваровОбщая.НоменклатураОприходование,
				|	ПорчаТоваровОбщая.ХарактеристикаОприходование,
				|	ПорчаТоваровОбщая.Цена,
				|	ПорчаТоваровОбщая.Ссылка
				|ПОМЕСТИТЬ ПорчаТоваровСКлючамиАналитики
				|ИЗ
				|	(ВЫБРАТЬ
				|		ПорчаТоваровВидыЗапасов.Номенклатура КАК Номенклатура,
				|		ПорчаТоваровВидыЗапасов.Характеристика КАК Характеристика,
				|		ПорчаТоваровВидыЗапасов.ВидЗапасов КАК ВидЗапасов,
				|		ПорчаТоваровВидыЗапасов.Количество КАК Количество,
				|		ПорчаТоваровВидыЗапасов.НомерСтроки КАК НомерСтроки,
				|		ПорчаТоваровВидыЗапасов.НоменклатураОприходование КАК НоменклатураОприходование,
				|		ПорчаТоваровВидыЗапасов.ХарактеристикаОприходование КАК ХарактеристикаОприходование,
				|		ПорчаТоваровТовары.Цена КАК Цена,
				|		ПорчаТоваровВидыЗапасов.Ссылка КАК Ссылка
				|	ИЗ
				|		Документ.ПорчаТоваров.ВидыЗапасов КАК ПорчаТоваровВидыЗапасов
				|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ПорчаТоваров.Товары КАК ПорчаТоваровТовары
				|			ПО ПорчаТоваровВидыЗапасов.Номенклатура = ПорчаТоваровТовары.Номенклатура
				|				И ПорчаТоваровВидыЗапасов.Характеристика = ПорчаТоваровТовары.Характеристика) КАК ПорчаТоваровОбщая
				|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.КлючиАналитикиУчетаНоменклатуры КАК СправочникКлючейАналитики
				|		ПО (СправочникКлючейАналитики.Номенклатура = ПорчаТоваровОбщая.Номенклатура)
				|			И (СправочникКлючейАналитики.Характеристика = ПорчаТоваровОбщая.Характеристика)
				|			И (СправочникКлючейАналитики.Склад = &Склад)
				|ГДЕ
				|	ПорчаТоваровОбщая.Ссылка = &ТекущийДокумент
				|	И ПорчаТоваровОбщая.Ссылка.Организация = &Организация
				|	И ПорчаТоваровОбщая.Ссылка.Проведен
				|;
				|
				|////////////////////////////////////////////////////////////////////////////////
				|ВЫБРАТЬ
				|	ПорчаТоваровСКлючамиАналитики.НоменклатураОприходование.НаименованиеПолное КАК УтильНоменклатура,
				|	ПорчаТоваровСКлючамиАналитики.ХарактеристикаОприходование.НаименованиеПолное КАК УтильХарактеристика,
				|	ПорчаТоваровСКлючамиАналитики.НоменклатураОприходование." + КолонкаКодов + " КАК УтильКод,
				|	СУММА(ПорчаТоваровСКлючамиАналитики.Количество) КАК Количество,
				|	ПорчаТоваровСКлючамиАналитики.НоменклатураОприходование.Качество КАК ГрадацияКачества,
				|	ПорчаТоваровСКлючамиАналитики.НоменклатураОприходование.ЕдиницаИзмерения.Код КАК ЕдиницаИзмеренияКодПоОКЕИ,
				|	ПРЕДСТАВЛЕНИЕ(ПорчаТоваровСКлючамиАналитики.НоменклатураОприходование.ЕдиницаИзмерения) КАК ЕдиницаИзмеренияНаименование,
				|	ВЫБОР
				|		КОГДА ПорчаТоваровСКлючамиАналитики.Ссылка.ПриходоватьТоварыПоСебестоимостиСписания
				|			ТОГДА ВЫБОР
				|					КОГДА ЕСТЬNULL(СебестоимостьТоваров.КоличествоОстаток, 0) = 0
				|						ТОГДА 0
				|					ИНАЧЕ ЕСТЬNULL(СебестоимостьТоваров.СтоимостьРеглОстаток, 0) / СебестоимостьТоваров.КоличествоОстаток
				|				КОНЕЦ
				|		ИНАЧЕ ПорчаТоваровСКлючамиАналитики.Цена
				|	КОНЕЦ КАК Цена
				|ИЗ
				|	ПорчаТоваровСКлючамиАналитики КАК ПорчаТоваровСКлючамиАналитики
				|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.СебестоимостьТоваров.Остатки(КОНЕЦПЕРИОДА(&ДатаЦен, МЕСЯЦ), Организация = &Организация) КАК СебестоимостьТоваров
				|		ПО ПорчаТоваровСКлючамиАналитики.КлючАналитикиУчетаНоменклатуры = СебестоимостьТоваров.АналитикаУчетаНоменклатуры
				|			И ПорчаТоваровСКлючамиАналитики.ВидЗапасов = СебестоимостьТоваров.ВидЗапасов
				|			И (СебестоимостьТоваров.Организация = &Организация)
				|ГДЕ
				|	ПорчаТоваровСКлючамиАналитики.НоменклатураОприходование.Качество = ЗНАЧЕНИЕ(Перечисление.ГрадацииКачества.НеГоден)
				|
				|СГРУППИРОВАТЬ ПО
				|	ПорчаТоваровСКлючамиАналитики.НоменклатураОприходование.НаименованиеПолное,
				|	ПорчаТоваровСКлючамиАналитики.ХарактеристикаОприходование.НаименованиеПолное,
				|	ПорчаТоваровСКлючамиАналитики.НоменклатураОприходование." + КолонкаКодов + ",
				|	ВЫБОР
				|		КОГДА ПорчаТоваровСКлючамиАналитики.Ссылка.ПриходоватьТоварыПоСебестоимостиСписания
				|			ТОГДА ВЫБОР
				|					КОГДА ЕСТЬNULL(СебестоимостьТоваров.КоличествоОстаток, 0) = 0
				|						ТОГДА 0
				|					ИНАЧЕ ЕСТЬNULL(СебестоимостьТоваров.СтоимостьРеглОстаток, 0) / СебестоимостьТоваров.КоличествоОстаток
				|				КОНЕЦ
				|		ИНАЧЕ ПорчаТоваровСКлючамиАналитики.Цена
				|	КОНЕЦ,
				|	ПорчаТоваровСКлючамиАналитики.НоменклатураОприходование.Качество,
				|	ПорчаТоваровСКлючамиАналитики.НоменклатураОприходование.ЕдиницаИзмерения.Код,
				|	ПРЕДСТАВЛЕНИЕ(ПорчаТоваровСКлючамиАналитики.НоменклатураОприходование.ЕдиницаИзмерения)
				|;
				|
				|////////////////////////////////////////////////////////////////////////////////
				|ВЫБРАТЬ
				|	ПорчаТоваровСКлючамиАналитики.Характеристика.НаименованиеПолное КАК ХарактеристикаПредставление,
				|	ПРЕДСТАВЛЕНИЕ(ПорчаТоваровСКлючамиАналитики.Номенклатура.ЕдиницаИзмерения) КАК ЕдиницаИзмеренияНаименование,
				|	ПорчаТоваровСКлючамиАналитики.НомерСтроки КАК НомерСтроки,
				|	ПорчаТоваровСКлючамиАналитики.Количество КАК Количество,
				|	ВЫБОР
				|		КОГДА ПорчаТоваровСКлючамиАналитики.НоменклатураОприходование.Качество = ЗНАЧЕНИЕ(Перечисление.ГрадацииКачества.НеГоден)
				|			ТОГДА 0
				|		ИНАЧЕ ПорчаТоваровСКлючамиАналитики.Количество
				|	КОНЕЦ КАК УценкаКоличество,
				|	ВЫБОР
				|		КОГДА ПорчаТоваровСКлючамиАналитики.НоменклатураОприходование.Качество = ЗНАЧЕНИЕ(Перечисление.ГрадацииКачества.НеГоден)
				|			ТОГДА 0
				|		КОГДА ПорчаТоваровСКлючамиАналитики.Ссылка.ПриходоватьТоварыПоСебестоимостиСписания
				|			ТОГДА ВЫБОР
				|					КОГДА ЕСТЬNULL(СебестоимостьТоваров.КоличествоОстаток, 0) = 0
				|						ТОГДА 0
				|					ИНАЧЕ ЕСТЬNULL(СебестоимостьТоваров.СтоимостьРеглОстаток, 0) / СебестоимостьТоваров.КоличествоОстаток
				|				КОНЕЦ
				|		ИНАЧЕ ПорчаТоваровСКлючамиАналитики.Цена
				|	КОНЕЦ КАК УценкаЦена,
				|	ВЫБОР
				|		КОГДА ПорчаТоваровСКлючамиАналитики.НоменклатураОприходование.Качество = ЗНАЧЕНИЕ(Перечисление.ГрадацииКачества.НеГоден)
				|			ТОГДА 0
				|		КОГДА ПорчаТоваровСКлючамиАналитики.Ссылка.ПриходоватьТоварыПоСебестоимостиСписания
				|			ТОГДА ВЫБОР
				|					КОГДА ЕСТЬNULL(СебестоимостьТоваров.КоличествоОстаток, 0) = 0
				|						ТОГДА 0
				|					ИНАЧЕ ЕСТЬNULL(СебестоимостьТоваров.СтоимостьРеглОстаток, 0) / СебестоимостьТоваров.КоличествоОстаток * ПорчаТоваровСКлючамиАналитики.Количество
				|				КОНЕЦ
				|		ИНАЧЕ ПорчаТоваровСКлючамиАналитики.Количество * ПорчаТоваровСКлючамиАналитики.Цена
				|	КОНЕЦ КАК УценкаСтоимость,
				|	ПорчаТоваровСКлючамиАналитики.Номенклатура.Код КАК ТоварКод,
				|	ПорчаТоваровСКлючамиАналитики.Номенклатура.Артикул КАК ТоварАртикул,
				|	ВЫБОР
				|		КОГДА ЕСТЬNULL(СебестоимостьТоваров.КоличествоОстаток, 0) = 0
				|			ТОГДА 0
				|		ИНАЧЕ ЕСТЬNULL(СебестоимостьТоваров.СтоимостьРеглОстаток, 0) / СебестоимостьТоваров.КоличествоОстаток
				|	КОНЕЦ КАК Цена,
				|	ПорчаТоваровСКлючамиАналитики.НоменклатураОприходование.Качество КАК ГрадацияКачества,
				|	ПорчаТоваровСКлючамиАналитики.Номенклатура.НаименованиеПолное КАК НоменклатураПредставление,
				|	ПорчаТоваровСКлючамиАналитики.Номенклатура.ЕдиницаИзмерения.Код КАК ЕдиницаИзмеренияКодПоОКЕИ
				|ИЗ
				|	ПорчаТоваровСКлючамиАналитики КАК ПорчаТоваровСКлючамиАналитики
				|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.СебестоимостьТоваров.Остатки(КОНЕЦПЕРИОДА(&ДатаЦен, МЕСЯЦ), Организация = &Организация) КАК СебестоимостьТоваров
				|		ПО ПорчаТоваровСКлючамиАналитики.КлючАналитикиУчетаНоменклатуры = СебестоимостьТоваров.АналитикаУчетаНоменклатуры
				|			И (ПорчаТоваровСКлючамиАналитики.ВидЗапасов = СебестоимостьТоваров.ВидЗапасов И &УчитыватьСебестоимостьТоваровПоВидамЗапасов
			|				ИЛИ НЕ &УчитыватьСебестоимостьТоваровПоВидамЗапасов)
				|			И (СебестоимостьТоваров.Организация = &Организация)
				|
				|УПОРЯДОЧИТЬ ПО
				|	ПорчаТоваровСКлючамиАналитики.Ссылка,
				|	ПорчаТоваровСКлючамиАналитики.НомерСтроки";
				
			КонецЕсли;
			
			ЗапросПоТоварам.УстановитьПараметр("ТекущийДокумент", ВыборкаПоДокументам.Ссылка);
			ЗапросПоТоварам.УстановитьПараметр("ДатаЦен", ВыборкаПоДокументам.ДатаДокумента);
			ЗапросПоТоварам.УстановитьПараметр("Организация", ВыборкаПоДокументам.Организация);
			ЗапросПоТоварам.УстановитьПараметр("Склад", ВыборкаПоДокументам.Склад);
			
			УчитыватьСебестоимостьТоваровПоВидамЗапасов = ПолучитьФункциональнуюОпцию("УчитыватьСебестоимостьТоваровПоВидамЗапасов");
			ЗапросПоТоварам.УстановитьПараметр("УчитыватьСебестоимостьТоваровПоВидамЗапасов", УчитыватьСебестоимостьТоваровПоВидамЗапасов);

			РезультатыПоТоварам = ЗапросПоТоварам.ВыполнитьПакет();
			ВыборкаСтрокТовары	= РезультатыПоТоварам[2].Выбрать();
			ВыборкаСтрокУтиль	= РезультатыПоТоварам[1].Выбрать();
			
		КонецЕсли;
					
		КоэффициентПересчета 	= ТаблицаКурсовВалют.Найти(ВыборкаПоДокументам.Ссылка, "Ссылка");
		КурсВалюты				= ?(ЗначениеЗаполнено(КоэффициентПересчета) 
									И ВыборкаПоДокументам.ИсточникИнформацииОЦенахДляПечати = Перечисления.ИсточникиИнформацииОЦенахДляПечати.ПоВидуЦен, 
										КоэффициентПересчета.Курс, 1);
		КурсВалютыУпр			= ?(ЗначениеЗаполнено(КоэффициентПересчета)
									И ВыборкаПоДокументам.ИсточникИнформацииОЦенахДляПечати = Перечисления.ИсточникиИнформацииОЦенахДляПечати.ПоВидуЦен,
										КоэффициентПересчета.КурсУпр, 1);
		НомерСтраницы			= 1;
		ОбластьШапки.Параметры.Заполнить(ВыборкаПоДокументам);
		СведенияОбОрганизации = ФормированиеПечатныхФорм.СведенияОЮрФизЛице(ВыборкаПоДокументам.Организация, ВыборкаПоДокументам.ДатаДокумента);
		ОбластьШапки.Параметры.ОрганизацияПредставление 	= ФормированиеПечатныхФорм.ОписаниеОрганизации(СведенияОбОрганизации, "ПолноеНаименование,ЮридическийАдрес");
		ОбластьШапки.Параметры.НомерДокумента 				= ПрефиксацияОбъектовКлиентСервер.ПолучитьНомерНаПечать(ВыборкаПоДокументам.Номер, Ложь, Истина);
		ОбластьШапки.Параметры.ФИОРуководителя 				= ВыборкаПоДокументам.Руководитель;
		ОбластьШапки.Параметры.ПодразделениеПредставление 	= СкладыСервер.ПолучитьПредставлениеСклада(ВыборкаПоДокументам.СкладПредставление);
		
		ШтрихкодированиеПечатныхФорм.ВывестиШтрихкодВТабличныйДокумент(ТабДокумент, Макет, ОбластьШапки, ВыборкаПоДокументам.Ссылка);
		ТабДокумент.Вывести(ОбластьШапки);
		
		НомерСтраницы    = НомерСтраницы + 1;
		ОбластьЗаголовокТаблицы.Параметры.НомерСтраницы = "Страница " + НомерСтраницы; 
		
		ИтогоСтоимость 		  = 0;
		ИтогоКоличество 	  = 0;
		ИтогоУценкаКоличество = 0;
		ИтогоУценкаСтоимость  = 0;
		ИтогоУценкаСумма      = 0;
		// Выводим многострочную часть документа
		
		КоличествоСтрок 	= ВыборкаСтрокТовары.Количество();
		ПерваяСтрока		= Истина;
		Пока ВыборкаСтрокТовары.Следующий() Цикл
			ОбластьСтрока.Параметры.Заполнить(ВыборкаСтрокТовары);
			
			ОбластьСтрока.Параметры.ТоварНаименование = НоменклатураКлиентСервер.ПредставлениеНоменклатурыДляПечати(ВыборкаСтрокТовары.НоменклатураПредставление,
			ВыборкаСтрокТовары.ХарактеристикаПредставление);
			
			ЦенаНеЗадана = НЕ ЗначениеЗаполнено(ВыборкаСтрокТовары.Цена);
			ОбластьСтрока.Параметры.Цена 		= ?(ЦенаНеЗадана, 0, ВыборкаСтрокТовары.Цена * КурсВалюты);
			ОбластьСтрока.Параметры.Сумма 	= ?(ЦенаНеЗадана, 0, ВыборкаСтрокТовары.Цена * ВыборкаСтрокТовары.Количество * КурсВалюты);
			
			ЦенаУценкиНеЗадана = Не ЗначениеЗаполнено(ВыборкаСтрокТовары.УценкаЦена);
			
			ОбластьСтрока.Параметры.УценкаЦена 		= ?(ЦенаУценкиНеЗадана, 0, ВыборкаСтрокТовары.УценкаЦена * КурсВалютыУпр);
			ОбластьСтрока.Параметры.УценкаСтоимость 	= ?(ЦенаУценкиНеЗадана, 0, ВыборкаСтрокТовары.УценкаЦена * ВыборкаСтрокТовары.Количество * КурсВалютыУпр);
			
			
			Если Не (ЦенаНеЗадана)
				И ВыборкаСтрокТовары.ГрадацияКачества <> Перечисления.ГрадацииКачества.НеГоден
				И Не ВыборкаПоДокументам.ПриходоватьТоварыПоСебестоимостиСписания Тогда
				ОбластьСтрока.Параметры.УценкаСумма = ОбластьСтрока.Параметры.Сумма - ОбластьСтрока.Параметры.УценкаСтоимость;
				ОбластьСтрока.Параметры.ПроцентСкидки = ОбластьСтрока.Параметры.УценкаСумма/ОбластьСтрока.Параметры.Сумма*100;
			Иначе
				ОбластьСтрока.Параметры.УценкаСумма = 0;
				ОбластьСтрока.Параметры.ПроцентСкидки = 0;
			КонецЕсли;
			
			Если ПерваяСтрока Тогда
				ОбластьЗаголовокТаблицы.Параметры.НомерСтраницы = "Страница " + НомерСтраницы;
				ТабДокумент.Вывести(ОбластьЗаголовокТаблицы);
				ПерваяСтрока = Ложь;
			Иначе
				МассивВыводимыхОбластей.Очистить();
				МассивВыводимыхОбластей.Добавить(ОбластьСтрока);
				МассивВыводимыхОбластей.Добавить(ОбластьИтого);
				Если ВыборкаСтрокТовары.НомерСтроки = КоличествоСтрок Тогда
					МассивВыводимыхОбластей.Добавить(ОбластьПодвал);
				КонецЕсли;
				
				Если Не ТабДокумент.ПроверитьВывод(МассивВыводимыхОбластей) Тогда
					
					НомерСтраницы = НомерСтраницы + 1;
					ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
					ОбластьЗаголовокТаблицы.Параметры.НомерСтраницы = "Страница " + НомерСтраницы;
					ТабДокумент.Вывести(ОбластьЗаголовокТаблицы);
					
				КонецЕсли;
				
			КонецЕсли;
			
			ТабДокумент.Вывести(ОбластьСтрока);
			
			// Обновим итоги по документу
			ИтогоСтоимость = ИтогоСтоимость + ОбластьСтрока.Параметры.Сумма;
			ИтогоКоличество = ИтогоКоличество + ВыборкаСтрокТовары.Количество;
			ИтогоУценкаКоличество = ИтогоУценкаКоличество + ВыборкаСтрокТовары.УценкаКоличество;
			Если Не ВыборкаПоДокументам.ПриходоватьТоварыПоСебестоимостиСписания Тогда
				ИтогоУценкаСтоимость = ИтогоУценкаСтоимость + ОбластьСтрока.Параметры.УценкаСтоимость;
				ИтогоУценкаСумма = ИтогоУценкаСумма + ОбластьСтрока.Параметры.УценкаСумма;
			КонецЕсли;
		КонецЦикла;
		
		// Выводим итоги по документу в общем
		ОбластьИтого.Параметры.ИтогоСумма = ИтогоСтоимость;
		ОбластьИтого.Параметры.ИтогоКоличество = ИтогоКоличество;
		ОбластьИтого.Параметры.ИтогоУценкаКоличество = ИтогоУценкаКоличество;
		ОбластьИтого.Параметры.ИтогоУценкаСумма = ИтогоУценкаСумма;
		ОбластьИтого.Параметры.ИтогоУценкаСтоимость = ИтогоУценкаСтоимость;
		СуммаРасходовПорчи = ?(ИтогоУценкаСумма = 0, ИтогоСтоимость, ИтогоУценкаСтоимость);
		ТабДокумент.Вывести(ОбластьИтого);
		
		ЗаполнитьЗначенияСвойств(ОбластьПодвал.Параметры, ВыборкаПоДокументам);
		ТабДокумент.Вывести(ОбластьПодвал);
		
		
		ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		
		ПерваяСтрока = Истина;
		НомерСтраницы    = НомерСтраницы + 1;
		ОбластьЗаголовокТаблицыУтиль.Параметры.НомерСтраницы = "Страница " + НомерСтраницы; 
		
		ИтогоУтильКоличество 	= 0;
		ИтогоУтильСумма 		= 0;
		
		Пока ВыборкаСтрокУтиль.Следующий() Цикл
		
			ОбластьСтрокаУтиль.Параметры.Заполнить(ВыборкаСтрокУтиль);
			ОбластьСтрокаУтиль.Параметры.УтильНаименование = НоменклатураКлиентСервер.ПредставлениеНоменклатурыДляПечати(ВыборкаСтрокУтиль.УтильНоменклатура,
																																ВыборкаСтрокУтиль.УтильХарактеристика);
			
			ЦенаНеЗадана = НЕ ЗначениеЗаполнено(ВыборкаСтрокУтиль.Цена);
			ОбластьСтрокаУтиль.Параметры.Цена 		= ?(ЦенаНеЗадана, 0, ВыборкаСтрокУтиль.Цена * КурсВалютыУпр);
			ОбластьСтрокаУтиль.Параметры.Сумма 	= ?(ЦенаНеЗадана, 0, ОбластьСтрокаУтиль.Параметры.Цена * ОбластьСтрокаУтиль.Параметры.Количество);
			
			Если ПерваяСтрока Тогда
				ОбластьЗаголовокТаблицы.Параметры.НомерСтраницы = "Страница " + НомерСтраницы;
				ТабДокумент.Вывести(ОбластьЗаголовокТаблицыУтиль);
				ПерваяСтрока = Ложь;
			Иначе
				МассивВыводимыхОбластей.Очистить();
				МассивВыводимыхОбластей.Добавить(ОбластьСтрокаУтиль);
				МассивВыводимыхОбластей.Добавить(ОбластьИтогоУтиль);
				МассивВыводимыхОбластей.Добавить(ОбластьПодвал);
				Если Не ТабДокумент.ПроверитьВывод(МассивВыводимыхОбластей) Тогда
					
					НомерСтраницы = НомерСтраницы + 1;
					ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
					ОбластьЗаголовокТаблицыУтиль.Параметры.НомерСтраницы = "Страница " + НомерСтраницы;
					ТабДокумент.Вывести(ОбластьЗаголовокТаблицыУтиль);
					
				КонецЕсли;
				
			КонецЕсли;
			
			ТабДокумент.Вывести(ОбластьСтрокаУтиль);
			// Обновим итоги по документу
			ИтогоУтильКоличество = ИтогоУтильКоличество + ОбластьСтрокаУтиль.Параметры.Количество;
			ИтогоУтильСумма = ИтогоУтильСумма + ОбластьСтрокаУтиль.Параметры.Сумма;
			
		КонецЦикла;
		
		Если ВыборкаСтрокУтиль.Количество() > 0 Тогда
			ОбластьИтогоУтиль.Параметры.ИтогоСумма = ИтогоУтильСумма;
			ОбластьИтогоУтиль.Параметры.ИтогоКоличество = ИтогоУтильКоличество;
			ТабДокумент.Вывести(ОбластьИтогоУтиль);
		КонецЕсли;
		
		// Выводим подписи документа
		ОбластьПодписи.Параметры.Заполнить(ВыборкаПоДокументам);
		ОбластьПодписи.Параметры.СуммаСписанияПрописью 	  = РаботаСКурсамиВалют.СформироватьСуммуПрописью(Цел(ИтогоУценкаСумма), Справочники.Валюты.ПустаяСсылка(), Истина);
		СписанияКопеек = (ИтогоУценкаСумма - Цел(ИтогоУценкаСумма)) * 100;
		ОбластьПодписи.Параметры.СписанияКопеек = Формат(СписанияКопеек, "ЧЦ=2; ЧДЦ=0; ЧН='00'");
		
		ОбластьПодписи.Параметры.СуммаСписанияУтиляЛомаПрописью = РаботаСКурсамиВалют.СформироватьСуммуПрописью(Цел(ИтогоУтильСумма), Справочники.Валюты.ПустаяСсылка(), Истина);
		УтильКопеек = (ИтогоУтильСумма - Цел(ИтогоУтильСумма)) * 100;
		ОбластьПодписи.Параметры.УтильКопеек = Формат(УтильКопеек, "ЧЦ=2; ЧДЦ=0; ЧН='00'");
		
		
		ОбластьПодписи.Параметры.ДолжностьПредседателя	  = ВыборкаПоДокументам.ДолжностьРуководителя;
		ОбластьПодписи.Параметры.ФИОпредседателя     	  = ВыборкаПоДокументам.Руководитель;
		ОбластьПодписи.Параметры.ДолжностьЧленаКомиссии2  = НСтр("ru='Главный бухгалтер'");
		ОбластьПодписи.Параметры.ФИОЧленаКомиссии2        = ВыборкаПоДокументам.ГлавныйБухгалтер;
		ОбластьПодписи.Параметры.ДолжностьЧленаКомиссии3  = ВыборкаПоДокументам.ДолжностьКладовщика;
		ОбластьПодписи.Параметры.ФИОЧленаКомиссии3        = ФизическиеЛица.ФамилияИнициалыФизЛица(ВыборкаПоДокументам.Кладовщик);
		ОбластьПодписи.Параметры.ФИОЧленаРасчетчика       = ФизическиеЛица.ФамилияИнициалыФизЛица(ВыборкаПоДокументам.Расчетчик);
		
		
		ТабДокумент.Вывести(ОбластьПодписи);
		
		НомерДокумента = НомерДокумента + 1;
		Если НомерДокумента < КоличествоДокументов Тогда
			ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
	КонецЦикла;
	
	Если ПривилегированныйРежим() Тогда
		УстановитьПривилегированныйРежим(Ложь);
	КонецЕсли;
	
	Возврат ТабДокумент;
КонецФункции

Функция ПечатьАктаПорчиТоваров(МассивОбъектов, ОбъектыПечати)
	
	УстановитьПривилегированныйРежим(Истина);
	
	ДопКолонка = ФормированиеПечатныхФорм.ИмяДополнительнойКолонки();
	ВыводитьДопКолонку = ЗначениеЗаполнено(ДопКолонка);

	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	Документ.Ссылка КАК Ссылка,
	|	Документ.Номер КАК Номер,
	|	Документ.Дата КАК Дата,
	|	Документ.Склад КАК Склад,
	|	Документ.Подразделение КАК Подразделение,
	|	Документ.Организация КАК Организация,
	|	ПРЕДСТАВЛЕНИЕ(Документ.Склад) КАК СкладПредставление,
	|	ПРЕДСТАВЛЕНИЕ(Документ.Подразделение) КАК ПодразделениеПредставление,
	|	Документ.Организация.НаименованиеСокращенное КАК ОрганизацияПредставление,
	|	Документ.Организация.Префикс КАК Префикс,
	|	Документ.Склад.ТекущийОтветственный КАК Кладовщик,
	|	Документ.Ответственный.ФизическоеЛицо КАК Ответственный,
	|	Документ.ДокументОснование КАК ДокументОснование,
	|	ПРЕДСТАВЛЕНИЕ(Документ.ДокументОснование) КАК ОснованиеПредставление,
	|	Документ.ДокументОснование.Номер КАК ОснованиеНомер,
	|	Документ.ДокументОснование.Дата КАК ОснованиеДата,
	|	Документ.ПричинаПорчи КАК ПричинаПорчи 
	|ИЗ
	|	Документ.ПорчаТоваров КАК Документ
	|ГДЕ
	|	Документ.Ссылка В(&МассивОбъектов)
	|
	|УПОРЯДОЧИТЬ ПО
	|	Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаТовары.НомерСтроки КАК НомерСтроки,
	|	ТаблицаТовары.Номенклатура КАК НоменклатураИсходная,
	|	ТаблицаТовары.Номенклатура.НаименованиеПолное КАК НоменклатураИсходнаяПредставление,
	|	ТаблицаТовары.Характеристика.НаименованиеПолное КАК ХарактеристикаИсходнаяПредставление,
	|	" + ?(ВыводитьДопКолонку, "ТаблицаТовары.Номенклатура." + ДопКолонка +" КАК ДопКолонкаСписание,", "") + "
	|	ТаблицаТовары.НоменклатураОприходование КАК НоменклатураИспорченная,
	|	" + ?(ВыводитьДопКолонку, "НоменклатураОприходование." + ДопКолонка +" КАК ДопКолонкаОприходование,", "") + "
	|	ТаблицаТовары.НоменклатураОприходование.НаименованиеПолное КАК НоменклатураИспорченнаяПредставление,
	|	ТаблицаТовары.ХарактеристикаОприходование.НаименованиеПолное КАК ХарактеристикаИспорченнаяПредставление,
	|	ПРЕДСТАВЛЕНИЕ(ТаблицаТовары.Номенклатура.ЕдиницаИзмерения) КАК ЕдиницаИзмеренияИсходнаяПредставление,
	|	ПРЕДСТАВЛЕНИЕ(ТаблицаТовары.НоменклатураОприходование.ЕдиницаИзмерения) КАК ЕдиницаИзмеренияИспорченнаяПредставление,
	|	ТаблицаТовары.Количество КАК Количество,
	|	ТаблицаТовары.Ссылка КАК Ссылка
	|ИЗ
	|	Документ.ПорчаТоваров.Товары КАК ТаблицаТовары
	|ГДЕ
	|	ТаблицаТовары.Ссылка В(&МассивОбъектов)
	|
	|УПОРЯДОЧИТЬ ПО
	|	Ссылка,
	|	НомерСтроки
	|ИТОГИ ПО
	|	Ссылка";	
	
	ВалютаУпр = Константы.ВалютаУправленческогоУчета.Получить();	
	РеквизитыДокумента = Новый Структура("Номер, Дата, Префикс, Представление");
	СинонимДокумента = НСтр("ru='Акт о порче товаров'");
	
	ТабДокумент = Новый ТабличныйДокумент;
	ТабДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_ПорчаТоваров_АктОПорчеТоваров";         
	
	Макет = УправлениеПечатью.ПолучитьМакет("Документ.ПорчаТоваров.ПФ_MXL_АктОПорчеТоваров");
	ОбластьЗаголовок = Макет.ПолучитьОбласть("Заголовок");
	ОбластьОснование  = Макет.ПолучитьОбласть("Основание");

	ОбластьНомераШапка              = Макет.ПолучитьОбласть("ШапкаТаблицы|НомерСтроки");
	ОбластьКодовИсходнаяШапка       = Макет.ПолучитьОбласть("ШапкаТаблицы|КолонкаКодовИсходная");
	ОбластьКодовИспорченнаяШапка  = Макет.ПолучитьОбласть("ШапкаТаблицы|КолонкаКодовИспорченная");
	ОбластьТоварИсходныйШапка       = Макет.ПолучитьОбласть("ШапкаТаблицы|ТоварИсходный");              
	ОбластьТоварИспорченныйШапка    = Макет.ПолучитьОбласть("ШапкаТаблицы|ТоварИспорченный");
	ОбластьЕдИзмИсходнаяШапка       = Макет.ПолучитьОбласть("ШапкаТаблицы|ЕдиницаИзмеренияИсходная");
	ОбластьЕдИзмИспорченнаяШапка  = Макет.ПолучитьОбласть("ШапкаТаблицы|ЕдиницаИзмеренияИспорченная");
	ОбластьДанныеШапка              = Макет.ПолучитьОбласть("ШапкаТаблицы|Данные");

	Если Не ВыводитьДопКолонку Тогда

		Макет.Область("ТоварИсходный").ШиринаКолонки = Макет.Область("ТоварИсходный").ШиринаКолонки
				+ Макет.Область("КолонкаКодовИсходная").ШиринаКолонки;
		Макет.Область("ТоварИспорченный").ШиринаКолонки = Макет.Область("ТоварИспорченный").ШиринаКолонки
				+ Макет.Область("КолонкаКодовИспорченная").ШиринаКолонки;

	КонецЕсли;

	ОбластьНомераСтрока              = Макет.ПолучитьОбласть("Строка|НомерСтроки");
	ОбластьКодовИсходнаяСтрока       = Макет.ПолучитьОбласть("Строка|КолонкаКодовИсходная");
	ОбластьКодовИспорченнаяСтрока  = Макет.ПолучитьОбласть("Строка|КолонкаКодовИспорченная");
	ОбластьТоварИсходныйСтрока       = Макет.ПолучитьОбласть("Строка|ТоварИсходный");
	ОбластьТоварИспорченныйСтрока    = Макет.ПолучитьОбласть("Строка|ТоварИспорченный");
	ОбластьЕдИзмИсходнаяСтрока       = Макет.ПолучитьОбласть("Строка|ЕдиницаИзмеренияИсходная");
	ОбластьЕдИзмИспорченнаяСтрока  = Макет.ПолучитьОбласть("Строка|ЕдиницаИзмеренияИспорченная");
	ОбластьДанныхСтрока              = Макет.ПолучитьОбласть("Строка|Данные");

	ОбластьПодвалТаблицы  = Макет.ПолучитьОбласть("ПодвалТаблицы");
	ОбластьПодписи        = Макет.ПолучитьОбласть("Подписи");
	ОбластьСуммаПрописью  = Макет.ПолучитьОбласть("СуммаПрописью");
	
	Запрос.УстановитьПараметр("МассивОбъектов", МассивОбъектов);
	РезультатыЗапроса = Запрос.ВыполнитьПакет();
	
	ВыборкаДокументы = РезультатыЗапроса[0].Выбрать();
	ВыборкаПоТабличнымЧастям = РезультатыЗапроса[1].Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	ПервыйДокумент = Истина;
	Пока ВыборкаДокументы.Следующий() Цикл
		
		Если Не ПервыйДокумент Тогда
			ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		
		ПервыйДокумент = Ложь;
		
		НомерСтрокиНачало = ТабДокумент.ВысотаТаблицы + 1;

		// Выводим шапку накладной.
		ЗаполнитьЗначенияСвойств(РеквизитыДокумента, ВыборкаДокументы);
		ОбластьЗаголовок.Параметры.Заполнить(ВыборкаДокументы);
		ОбластьЗаголовок.Параметры.ТекстЗаголовка = ОбщегоНазначенияУТКлиентСервер.СформироватьЗаголовокДокумента(РеквизитыДокумента, СинонимДокумента);
		ОбластьЗаголовок.Параметры.СкладПредставление = СкладыСервер.ПолучитьПредставлениеСклада(ВыборкаДокументы.СкладПредставление);
		ШтрихкодированиеПечатныхФорм.ВывестиШтрихкодВТабличныйДокумент(ТабДокумент, Макет, ОбластьЗаголовок, ВыборкаДокументы.Ссылка);
		ТабДокумент.Вывести(ОбластьЗаголовок);

		Если ЗначениеЗаполнено(ВыборкаДокументы.ДокументОснование) Тогда
			РеквизитыДокумента.Номер         = ВыборкаДокументы.ОснованиеНомер;
			РеквизитыДокумента.Дата          = ВыборкаДокументы.ОснованиеДата;
			РеквизитыДокумента.Представление = ВыборкаДокументы.ОснованиеПредставление;
			РеквизитыДокумента.Префикс       = "";
		
			ОбластьОснование.Параметры.ОснованиеПредставление = ОбщегоНазначенияУТКлиентСервер.СформироватьЗаголовокДокумента(РеквизитыДокумента);
			ТабДокумент.Вывести(ОбластьОснование);
		КонецЕсли;

		// Вывод шапки.
		ТабДокумент.Вывести(ОбластьНомераШапка);

		Если ВыводитьДопКолонку Тогда

			ТабДокумент.Присоединить(ОбластьКодовИсходнаяШапка);

		КонецЕсли;
		ТабДокумент.Присоединить(ОбластьТоварИсходныйШапка);
		ТабДокумент.Присоединить(ОбластьЕдИзмИсходнаяШапка);
		
		Если ВыводитьДопКолонку Тогда

			ТабДокумент.Присоединить(ОбластьКодовИспорченнаяШапка);

		КонецЕсли;
		ТабДокумент.Присоединить(ОбластьТоварИспорченныйШапка);
  		ТабДокумент.Присоединить(ОбластьЕдИзмИспорченнаяШапка);

		ТабДокумент.Присоединить(ОбластьДанныеШапка);

		СуммаВсего = 0;
		ВсегоНаименований = 0;

		// Вывод строк.
		ВыборкаПоТабличнымЧастям.НайтиСледующий(Новый Структура("Ссылка",ВыборкаДокументы.Ссылка));
		
		ВыборкаПоСтрокам = ВыборкаПоТабличнымЧастям.Выбрать();
		
		Пока ВыборкаПоСтрокам.Следующий() Цикл

			ОбластьНомераСтрока.Параметры.Заполнить(ВыборкаПоСтрокам);
			ТабДокумент.Вывести(ОбластьНомераСтрока);

			Если ВыводитьДопКолонку Тогда

				ОбластьКодовИсходнаяСтрока.Параметры.Заполнить(ВыборкаПоСтрокам);
				ТабДокумент.Присоединить(ОбластьКодовИсходнаяСтрока);

			КонецЕсли;

			// Номенклатура.
			ОбластьТоварИсходныйСтрока.Параметры.НоменклатураИсходная = ВыборкаПоСтрокам.НоменклатураИсходная;
			ОбластьТоварИсходныйСтрока.Параметры.НоменклатураИсходнаяПредставление = НоменклатураКлиентСервер.ПредставлениеНоменклатурыДляПечати(
					ВыборкаПоСтрокам.НоменклатураИсходнаяПредставление,
					ВыборкаПоСтрокам.ХарактеристикаИсходнаяПредставление);
					
					
			ТабДокумент.Присоединить(ОбластьТоварИсходныйСтрока);
			
			ОбластьЕдИзмИсходнаяСтрока.Параметры.Заполнить(ВыборкаПоСтрокам);
			ТабДокумент.Присоединить(ОбластьЕдИзмИсходнаяСтрока);
			
			
			Если ВыводитьДопКолонку Тогда

				ОбластьКодовИспорченнаяСтрока.Параметры.Заполнить(ВыборкаПоСтрокам);
				ТабДокумент.Присоединить(ОбластьКодовИспорченнаяСтрока);

			КонецЕсли;

			// Номенклатура.
			ОбластьТоварИспорченныйСтрока.Параметры.НоменклатураИспорченная = ВыборкаПоСтрокам.НоменклатураИспорченная;
			ОбластьТоварИспорченныйСтрока.Параметры.НоменклатураИспорченнаяПредставление = НоменклатураКлиентСервер.ПредставлениеНоменклатурыДляПечати(
					ВыборкаПоСтрокам.НоменклатураИспорченнаяПредставление,
					ВыборкаПоСтрокам.ХарактеристикаИспорченнаяПредставление);
					
					
			ТабДокумент.Присоединить(ОбластьТоварИспорченныйСтрока);
			
			ОбластьЕдИзмИспорченнаяСтрока.Параметры.Заполнить(ВыборкаПоСтрокам);
			ТабДокумент.Присоединить(ОбластьЕдИзмИспорченнаяСтрока);

			// Данные количестве.
			ОбластьДанныхСтрока.Параметры.Заполнить(ВыборкаПоСтрокам);
			
			ТабДокумент.Присоединить(ОбластьДанныхСтрока);

			ВсегоНаименований = ВсегоНаименований + 1;

		КонецЦикла;

		// Вывод подвала.
		ТабДокумент.Вывести(ОбластьПодвалТаблицы);
		// Вывод Суммы прописью.
		
		ТекстИтоговойСтроки = НСтр("ru = 'Всего наименований %ВсегоНаименований%'");
		
		ТекстИтоговойСтроки = СтрЗаменить(ТекстИтоговойСтроки,"%ВсегоНаименований%", ВсегоНаименований);
		
		ОбластьСуммаПрописью.Параметры.ИтоговаяСтрока = ТекстИтоговойСтроки;

		ТабДокумент.Вывести(ОбластьСуммаПрописью);

		// Вывод подписей.
		ОбластьПодписи.Параметры.Ответственный = ФизическиеЛица.ФамилияИнициалыФизЛица(ВыборкаДокументы.Ответственный);
		ОбластьПодписи.Параметры.Кладовщик = ФизическиеЛица.ФамилияИнициалыФизЛица(ВыборкаДокументы.Кладовщик);		
		ТабДокумент.Вывести(ОбластьПодписи);

		УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабДокумент, НомерСтрокиНачало, ОбъектыПечати, ВыборкаДокументы.Ссылка);

	КонецЦикла;
	
	Если ПривилегированныйРежим() Тогда
		УстановитьПривилегированныйРежим(Ложь);
	КонецЕсли;
	
	Возврат ТабДокумент;
	
КонецФункции

///////////////////////////////////////////////////////////////////////////////
// Обновление информационной базы

Процедура ЗаполнитьНоменклатуруОприходованиеВТабличнойЧастиВидыЗапасов() Экспорт
	
	Запрос = Новый Запрос("
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ТаблицаДокументов.Ссылка КАК Ссылка
	|ИЗ (
	|	ВЫБРАТЬ
	|		ТаблицаТоваров.Ссылка КАК Ссылка,
	|		ТаблицаТоваров.Номенклатура,
	|		ТаблицаТоваров.Характеристика,
	|		ТаблицаТоваров.НоменклатураОприходование,
	|		ТаблицаТоваров.ХарактеристикаОприходование
	|	ИЗ (
	|		ВЫБРАТЬ
	|			ТаблицаТоваров.Ссылка КАК Ссылка,
	|			ТаблицаТоваров.Номенклатура КАК Номенклатура,
	|			ТаблицаТоваров.Характеристика КАК Характеристика,
	|			ТаблицаТоваров.НоменклатураОприходование КАК НоменклатураОприходование,
	|			ТаблицаТоваров.ХарактеристикаОприходование КАК ХарактеристикаОприходование,
	|			ТаблицаТоваров.Количество КАК Количество
	|		ИЗ
	|			Документ.ПорчаТоваров.Товары КАК ТаблицаТоваров
	|		
	|		ОБЪЕДИНИТЬ ВСЕ
	|		
	|		ВЫБРАТЬ
	|			ТаблицаВидыЗапасов.Ссылка КАК Ссылка,
	|			ТаблицаВидыЗапасов.Номенклатура,
	|			ТаблицаВидыЗапасов.Характеристика,
	|			ТаблицаВидыЗапасов.НоменклатураОприходование,
	|			ТаблицаВидыЗапасов.ХарактеристикаОприходование,
	|			-ТаблицаВидыЗапасов.Количество
	|		ИЗ
	|			Документ.ПорчаТоваров.ВидыЗапасов КАК ТаблицаВидыЗапасов
	|			
	|		) КАК ТаблицаТоваров
	|
	|	СГРУППИРОВАТЬ ПО
	|		ТаблицаТоваров.Ссылка,
	|		ТаблицаТоваров.Номенклатура,
	|		ТаблицаТоваров.Характеристика,
	|		ТаблицаТоваров.НоменклатураОприходование,
	|		ТаблицаТоваров.ХарактеристикаОприходование
	|
	|	ИМЕЮЩИЕ
	|		СУММА(ТаблицаТоваров.Количество) <> 0
	|		
	|	) КАК ТаблицаДокументов
	|");
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		
		ДокументОбъект = Выборка.Ссылка.ПолучитьОбъект();
		ДокументОбъект.ЗаполнитьНоменклатуруОприходованиеВидовЗапасов();
		
		Если ДокументОбъект.Модифицированность() Тогда
			ДокументОбъект.ОбменДанными.Загрузка = Истина;
			ДокументОбъект.Записать(РежимЗаписиДокумента.Запись);
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ЗаполнитьИсточникИнформацииОЦенахДляПечати() Экспорт 
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ПорчаТоваров.Ссылка КАК Ссылка
	|ИЗ
	|	Документ.ПорчаТоваров КАК ПорчаТоваров
	|ГДЕ
	|	ПорчаТоваров.ИсточникИнформацииОЦенахДляПечати = ЗНАЧЕНИЕ(Перечисление.ИсточникиИнформацииОЦенахДляПечати.ПустаяСсылка)";
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		
		ДокументОбъект = Выборка.Ссылка.ПолучитьОбъект();
		
		ДокументОбъект.ИсточникИнформацииОЦенахДляПечати = Перечисления.ИсточникиИнформацииОЦенахДляПечати.ПоВидуЦен;
		ДокументОбъект.ОбменДанными.Загрузка = Истина;
		ДокументОбъект.Записать();
		
	КонецЦикла;
	
КонецПроцедуры
#КонецЕсли