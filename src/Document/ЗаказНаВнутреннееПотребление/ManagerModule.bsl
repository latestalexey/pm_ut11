#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

////////////////////////////////////////////////////////////////////////////////
// ПРОГРАММНЫЙ ИНТЕРФЕЙС

// Формирует структуру для создания внутреннего потребления по одному или нескольким заказам на внутреннее потребление
// 	Если в переданных заказах отличаются реквизиты шапки, выдается сообщение об ошибке
//
// Параметры:
//	МассивСсылок - Массив - заказы на внутреннее потребление, по которым необходимо ввести внутреннее потребление товаров
// 	РеквизитыШапки - Структура - структура, в которую будут помещены реквизиты шапки из массива заказов
//
// Возвращаемое значение:
//	Булево - Ложь, если в переданных заказах отличаются реквизиты шапки
//
Функция ДанныеЗаполненияВнутреннегоПотребления(МассивСсылок, РеквизитыШапки) Экспорт
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	МИНИМУМ(Заказ.Организация)           КАК Организация,
	|	МИНИМУМ(Заказ.Склад)                 КАК Склад,
	|	МИНИМУМ(Заказ.Подразделение)         КАК Подразделение,
	|	МИНИМУМ(Заказ.Сделка)                КАК Сделка,
	|	МИНИМУМ(Заказ.ХозяйственнаяОперация) КАК ХозяйственнаяОперация,
	|	ВЫБОР
	|		КОГДА
	|			КОЛИЧЕСТВО(РАЗЛИЧНЫЕ Заказ.Организация) > 1
	|		ТОГДА
	|			ИСТИНА
	|		ИНАЧЕ
	|			ЛОЖЬ
	|	КОНЕЦ КАК ЕстьОтличияОрганизация,
	|	ВЫБОР
	|		КОГДА
	|			КОЛИЧЕСТВО(РАЗЛИЧНЫЕ Заказ.Склад) > 1
	|		ТОГДА
	|			ИСТИНА
	|		ИНАЧЕ
	|			ЛОЖЬ
	|	КОНЕЦ КАК ЕстьОтличияСклад,
	|	ВЫБОР
	|		КОГДА
	|			КОЛИЧЕСТВО(РАЗЛИЧНЫЕ Заказ.Подразделение) > 1
	|		ТОГДА
	|			ИСТИНА
	|		ИНАЧЕ
	|			ЛОЖЬ
	|	КОНЕЦ КАК ЕстьОтличияПодразделение,
	|	ВЫБОР
	|		КОГДА
	|			КОЛИЧЕСТВО(РАЗЛИЧНЫЕ Заказ.Сделка) > 1
	|		ТОГДА
	|			ИСТИНА
	|		ИНАЧЕ
	|			ЛОЖЬ
	|	КОНЕЦ КАК ЕстьОтличияСделка,
	|	ВЫБОР
	|		КОГДА
	|			КОЛИЧЕСТВО(РАЗЛИЧНЫЕ Заказ.ХозяйственнаяОперация) > 1
	|		ТОГДА
	|			ИСТИНА
	|		ИНАЧЕ
	|			ЛОЖЬ
	|	КОНЕЦ КАК ЕстьОтличияХозяйственнаяОперация
	|ИЗ
	|	Документ.ЗаказНаВнутреннееПотребление КАК Заказ
	|ГДЕ
	|	Заказ.Ссылка В(&МассивСсылок)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Заказ.Ссылка КАК Заказ,
	|	Заказ.Статус КАК Статус,
	|	(НЕ Заказ.Проведен) КАК ЕстьОшибкиПроведен,
	|	ВЫБОР
	|		КОГДА Заказ.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыВнутреннихЗаказов.Закрыт)
	|				ИЛИ Заказ.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыВнутреннихЗаказов.КВыполнению)
	|			ТОГДА ЛОЖЬ
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ КАК ЕстьОшибкиСтатус
	|ИЗ
	|	Документ.ЗаказНаВнутреннееПотребление КАК Заказ
	|ГДЕ
	|	Заказ.Ссылка В(&МассивСсылок)
	|	И ((НЕ Заказ.Проведен)
	|			ИЛИ Заказ.Статус <> ЗНАЧЕНИЕ(Перечисление.СтатусыВнутреннихЗаказов.КВыполнению)
	|				И Заказ.Статус <> ЗНАЧЕНИЕ(Перечисление.СтатусыВнутреннихЗаказов.Закрыт))");
	
	Запрос.УстановитьПараметр("МассивСсылок", МассивСсылок);
	РезультатЗапроса = Запрос.ВыполнитьПакет();
	ВыборкаРеквизитыШапки = РезультатЗапроса[0].Выбрать();
	ВыборкаРеквизитыШапки.Следующий();
	
	Отказ = Ложь;
	
	ТекстСообщения = НСтр("ru='У выделенных распоряжений отличается поле ""%ПредставлениеПоля%""'");
	
	Если ВыборкаРеквизитыШапки.ЕстьОтличияОрганизация Тогда
		
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
			СтрЗаменить(ТекстСообщения, "%ПредставлениеПоля%", НСтр("ru='Организация'")),
			,
			,
			,
			Отказ
		);
		
	КонецЕсли;
	
	Если ВыборкаРеквизитыШапки.ЕстьОтличияСклад Тогда
		
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
			СтрЗаменить(ТекстСообщения, "%ПредставлениеПоля%", НСтр("ru='Склад'")),
			,
			,
			,
			Отказ
		);
		
	КонецЕсли;
	
	Если ВыборкаРеквизитыШапки.ЕстьОтличияПодразделение Тогда
		
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
			СтрЗаменить(ТекстСообщения, "%ПредставлениеПоля%", НСтр("ru='Подразделение'")),
			,
			,
			,
			Отказ
		);
		
	КонецЕсли;
	
	Если ВыборкаРеквизитыШапки.ЕстьОтличияСделка Тогда
		
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
			СтрЗаменить(ТекстСообщения, "%ПредставлениеПоля%", НСтр("ru='Сделка'")),
			,
			,
			,
			Отказ
		);
		
	КонецЕсли;
	
	Если ВыборкаРеквизитыШапки.ЕстьОтличияХозяйственнаяОперация Тогда
		
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
			СтрЗаменить(ТекстСообщения, "%ПредставлениеПоля%", НСтр("ru='Операция'")),
			,
			,
			,
			Отказ
		);
		
	КонецЕсли;
	
	Если Отказ Тогда
		
		ТекстОшибки = НСтр("ru='Ввод одного внутреннего потребления на основании выделенных распоряжений невозможен'");
		
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
			ТекстОшибки,
			,
			,
			,
			Отказ
		);
		
	Иначе
		
		Если Не РезультатЗапроса[1].Пустой() Тогда
			
			ВыборкаЗаказы = РезультатЗапроса[1].Выбрать();
			
			Пока ВыборкаЗаказы.Следующий() Цикл
				
				Если ВыборкаЗаказы.ЕстьОшибкиПроведен Тогда
					
					ТекстОшибки = НСтр("ru='Документ %Документ% не проведен. Ввод на основании непроведенного документа запрещен.'");
					ТекстОшибки = СтрЗаменить(ТекстОшибки, "%Документ%", ВыборкаЗаказы.Заказ);
					
					ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
						ТекстОшибки,
						,
						,
						,
						Отказ
					);
					
				ИначеЕсли ВыборкаЗаказы.ЕстьОшибкиСтатус Тогда
					
					ТекстОшибки = НСтр("ru='Документ %Документ% находится в статусе ""%Статус%"". Ввод на основании разрешен только в статусах ""К выполнению"", ""Закрыт"".'");
					ТекстОшибки = СтрЗаменить(ТекстОшибки, "%Документ%", ВыборкаЗаказы.Заказ);
					ТекстОшибки = СтрЗаменить(ТекстОшибки, "%Статус%",   ВыборкаЗаказы.Статус);
					
					ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
						ТекстОшибки,
						,
						,
						,
						Отказ
					);
					
				КонецЕсли;
				
			КонецЦикла;
			
		КонецЕсли;
		
		РеквизитыШапки.Вставить("Организация",           ВыборкаРеквизитыШапки.Организация);
		РеквизитыШапки.Вставить("Склад",                 ВыборкаРеквизитыШапки.Склад);
		РеквизитыШапки.Вставить("ХозяйственнаяОперация", ВыборкаРеквизитыШапки.ХозяйственнаяОперация);
		РеквизитыШапки.Вставить("Подразделение",         ВыборкаРеквизитыШапки.Подразделение);
		РеквизитыШапки.Вставить("Сделка",                ВыборкаРеквизитыШапки.Сделка);
		
	КонецЕсли;
	
	Возврат Не Отказ;
	
КонецФункции

// Формирует массивы имен реквизитов, зависимых от хозяйственной операции документа.
//
// Параметры:
//	ВсеРеквизиты - Массив - возвращает все реквизиты
//  РеквизитыОперации - Массив - возвращает реквизиты операции
//
Процедура ЗаполнитьИменаРеквизитовПоХозяйственнойОперации(ХозяйственнаяОперация, ВсеРеквизиты, РеквизитыОперации) Экспорт
	
	ВсеРеквизиты = Новый Массив;
	ВсеРеквизиты.Добавить("Товары.СтатьяРасходов");
	ВсеРеквизиты.Добавить("Товары.АналитикаРасходов");
	ВсеРеквизиты.Добавить("Товары.ФизическоеЛицо");
	ВсеРеквизиты.Добавить("Товары.СрокЭксплуатации");
	ВсеРеквизиты.Добавить("Подразделение");
	
	РеквизитыОперации = Новый Массив;
	
	Если ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.СписаниеТоваровПоТребованию Тогда
		
		РеквизитыОперации.Добавить("Товары.СтатьяРасходов");
		РеквизитыОперации.Добавить("Товары.АналитикаРасходов");
		РеквизитыОперации.Добавить("Подразделение");
		
	ИначеЕсли ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ПередачаВЭксплуатацию Тогда
		
		РеквизитыОперации.Добавить("Товары.СтатьяРасходов");
		РеквизитыОперации.Добавить("Товары.АналитикаРасходов");
		РеквизитыОперации.Добавить("Товары.ФизическоеЛицо");
		РеквизитыОперации.Добавить("Товары.СрокЭксплуатации");
		РеквизитыОперации.Добавить("Подразделение");
		
	ИначеЕсли ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ПередачаВПроизводство Тогда
		
		РеквизитыОперации.Добавить("Подразделение");
		
	Иначе 
		
		РеквизитыОперации.Добавить("Подразделение");
		
	КонецЕсли;
	
КонецПроцедуры

// Возвращает массив имен ролей с правом "Добавление" для данного документа
//
// Возвращаемое значение:
//	Массив - Массив с именами ролей
//
Функция ИменаРолейСПравомДобавления() Экспорт
	
	МассивРолей = Новый Массив;
	МассивРолей.Добавить("ПолныеПрава");
	МассивРолей.Добавить("ДобавлениеИзменениеЗаказовНаВнутреннееПотребление");
	
	Возврат МассивРолей;
	
КонецФункции

// Формирует запрос проверки при смене статуса списка документов
//
// Параметры:
//	МассивДокументов - Массив - Массив ссылок на документы, которые надо проверять
//	НовыйСтатус - Строка - Имя нового статуса
//	ДополнительныеПараметры - Структура - Структура дополнительных параметров
//
// Возвращаемое значение:
//	Запрос - Запрос проверки перед сменой статуса
//
Функция СформироватьЗапросПроверкиПриСменеСтатуса(МассивДокументов, НовыйСтатус, ДополнительныеПараметры) Экспорт
	
	ЗначениеНовогоСтатуса = Перечисления.СтатусыВнутреннихЗаказов[НовыйСтатус];
	
	Если ДополнительныеПараметры <> Неопределено И ДополнительныеПараметры.Свойство("КонтрольВыполненияЗаказа")  Тогда
		
		ТекстЗапроса =
		"ВЫБРАТЬ
		|	Остатки.ЗаказНаВнутреннееПотребление КАК ЗаказНаВнутреннееПотребление
		|ПОМЕСТИТЬ
		|	втОстаткиПоЗаказам
		|ИЗ
		|	РегистрНакопления.ЗаказыНаВнутреннееПотребление.Остатки(, ЗаказНаВнутреннееПотребление В (&МассивДокументов)) КАК Остатки
		|СГРУППИРОВАТЬ ПО
		|	Остатки.ЗаказНаВнутреннееПотребление
		|;
		|ВЫБРАТЬ
		|	ТаблицаДокументов.Ссылка КАК Ссылка,
		|	ПРЕДСТАВЛЕНИЕ(ТаблицаДокументов.Ссылка) КАК Представление,
		|	ПРЕДСТАВЛЕНИЕ(ТаблицаДокументов.Статус) КАК ПредставлениеТекущегоСтатуса,
		|	ПРЕДСТАВЛЕНИЕ(&Статус) КАК ПредставлениеНовогоСтатуса,
		|	ВЫБОР
		|		КОГДА ТаблицаДокументов.Статус = &Статус
		|			ТОГДА ИСТИНА
		|		ИНАЧЕ ЛОЖЬ
		|	КОНЕЦ КАК СтатусСовпадает,
		|	ТаблицаДокументов.Проведен КАК Проведен,
		|	ТаблицаДокументов.ПометкаУдаления КАК ПометкаУдаления,
		|	ИСТИНА КАК ЗаписьПроведением,
		|	ВЫБОР
		|		КОГДА втОстаткиПоЗаказам.ЗаказНаВнутреннееПотребление ЕСТЬ NULL 
		|			ТОГДА ЛОЖЬ
		|		ИНАЧЕ ИСТИНА
		|	КОНЕЦ КАК ЕстьОстаткиПоЗаказу
		|ИЗ
		|	Документ.ЗаказНаВнутреннееПотребление КАК ТаблицаДокументов
		|ЛЕВОЕ СОЕДИНЕНИЕ
		|	втОстаткиПоЗаказам
		|ПО
		|	ТаблицаДокументов.Ссылка = втОстаткиПоЗаказам.ЗаказНаВнутреннееПотребление
		|ГДЕ
		|	ТаблицаДокументов.Ссылка В(&МассивДокументов)
		|";
	
	Иначе
	
		ТекстЗапроса =
		"ВЫБРАТЬ
		|	ТаблицаДокументов.Ссылка КАК Ссылка,
		|	ПРЕДСТАВЛЕНИЕ(ТаблицаДокументов.Ссылка) КАК Представление,
		|	ПРЕДСТАВЛЕНИЕ(ТаблицаДокументов.Статус) КАК ПредставлениеТекущегоСтатуса,
		|	ПРЕДСТАВЛЕНИЕ(&Статус) КАК ПредставлениеНовогоСтатуса,
		|	ВЫБОР
		|		КОГДА ТаблицаДокументов.Статус = &Статус
		|			ТОГДА ИСТИНА
		|		ИНАЧЕ ЛОЖЬ
		|	КОНЕЦ КАК СтатусСовпадает,
		|	ТаблицаДокументов.Проведен КАК Проведен,
		|	ТаблицаДокументов.ПометкаУдаления КАК ПометкаУдаления,
		|	ИСТИНА КАК ЗаписьПроведением
		|ИЗ
		|	Документ.ЗаказНаВнутреннееПотребление КАК ТаблицаДокументов
		|ГДЕ
		|	ТаблицаДокументов.Ссылка В (&МассивДокументов)
		|";
		
	КонецЕсли;
	
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.УстановитьПараметр("Статус", ЗначениеНовогоСтатуса);
	Запрос.УстановитьПараметр("МассивДокументов", МассивДокументов);
	
	Возврат Запрос;
	
КонецФункции

// Возвращает результат проверки при смене статуса документа
//
// Параметры:
//	ВыборкаПроверки - ВыборкаИзРезультатаЗапроса - Текущая строка выборки
//	НовыйСтатус - Перечисление - Новый статус
//	ДополнительныеПараметры - Структура - Структура дополнительных параметров
//
// Возвращаемое значение:
//	Булево - Истина, в случае успешного завершения проверки
//
Функция ПроверкаПередСменойСтатуса(ВыборкаПроверки, НовыйСтатус, ДополнительныеПараметры) Экспорт
	
	Отказ = Ложь;
	
	Если ДополнительныеПараметры = Неопределено Тогда
		
		Возврат Не Отказ;
		
	КонецЕсли;
	
	Если ДополнительныеПараметры.Свойство("КонтрольВыполненияЗаказа") И ВыборкаПроверки.ЕстьОстаткиПоЗаказу Тогда
		
		ТекстОшибки = НСтр("ru='У документа %Документ% статус ""%Статус%"" не установлен, т.к. заказ выполнен не полностью'");
		ТекстОшибки = СтрЗаменить(ТекстОшибки, "%Документ%", ВыборкаПроверки.Ссылка);
		ТекстОшибки = СтрЗаменить(ТекстОшибки, "%Статус%", ВыборкаПроверки.ПредставлениеНовогоСтатуса);
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстОшибки, ВыборкаПроверки.Ссылка);
		Отказ = Истина;
		
	КонецЕсли;
	
	Возврат Не Отказ;
	
КонецФункции

//Имена реквизитов, от значений которых зависят параметры указания серий
//
//	Возвращаемое значение:
//		Строка - имена реквизитов, перечисленные через запятую
//
Функция ИменаРеквизитовДляЗаполненияПараметровУказанияСерий() Экспорт
	ИменаРеквизитов = "Склад";
	
	Возврат ИменаРеквизитов;
КонецФункции

//Возвращает параметры указания серий для товаров, указанных в документе
//
//	Параметры
//			Объект - Структура - структура значений реквизитов объекта, необходимых для заполнения параметров указания серий
//	Возвращаемое значение
//			Тип Структура
//				Состав полей задается в функции ОбработкаТабличнойЧастиКлиентСервер.ПараметрыУказанияСерий
//
Функция ПараметрыУказанияСерий(Объект) Экспорт
	
	ПараметрыУказанияСерий = НоменклатураКлиентСервер.ПараметрыУказанияСерий();
	
	ПараметрыУказанияСерий.ИспользоватьСерииНоменклатуры =
					ПолучитьФункциональнуюОпцию("ИспользоватьСерииНоменклатурыСклад", Новый Структура("Склад", Объект.Склад));
	
	ПараметрыУказанияСерий.СкладскиеОперации.Добавить(Перечисления.СкладскиеОперации.ОтгрузкаНаВнутренниеНужды);
	ПараметрыУказанияСерий.ПоляСвязи.Добавить("УказыватьСерии");
	
	ПараметрыУказанияСерий.ЭтоЗаказ = Истина;
	ПараметрыУказанияСерий.ПланированиеОтгрузки = Истина;
	
	Возврат ПараметрыУказанияСерий;
	
КонецФункции

////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

////////////////////////////////////////////////////////////////////////////////
// Проведение

Процедура ИнициализироватьДанныеДокумента(ДокументСсылка, ДополнительныеСвойства) Экспорт

	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Ссылка", ДокументСсылка);
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	Заказ.Дата                                        КАК Период,
	|	Заказ.Склад                                       КАК Склад,
	|	Заказ.Статус                                      КАК Статус,
	|	Заказ.Склад.ИспользоватьОрдернуюСхемуПриОтгрузке  КАК ИспользоватьОрдернуюСхему
	|ИЗ
	|	Документ.ЗаказНаВнутреннееПотребление КАК Заказ
	|ГДЕ
	|	Заказ.Ссылка = &Ссылка
	|";
	
	Реквизиты = Запрос.Выполнить().Выбрать();
	Реквизиты.Следующий();

	Запрос.УстановитьПараметр("Период", Реквизиты.Период);
	Запрос.УстановитьПараметр("Склад",  Реквизиты.Склад);
	Запрос.УстановитьПараметр("Статус", Реквизиты.Статус);
	Запрос.УстановитьПараметр("ИспользоватьОрдернуюСхему", Реквизиты.ИспользоватьОрдернуюСхему);

	Запрос.Текст = 
	// 0 ТаблицаЗаказыНаВнутреннееПотребление
	"ВЫБРАТЬ
	|	МАКСИМУМ(ВложенныйЗапрос.Порядок)            КАК Порядок,
	|	МАКСИМУМ(ВложенныйЗапрос.НомерСтроки)        КАК НомерСтроки,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)       КАК ВидДвижения,
	|	ВложенныйЗапрос.Период                       КАК Период,
	|	ВложенныйЗапрос.ЗаказНаВнутреннееПотребление КАК ЗаказНаВнутреннееПотребление,
	|	ВложенныйЗапрос.Номенклатура                 КАК Номенклатура,
	|	ВложенныйЗапрос.Характеристика               КАК Характеристика,
	|	ВложенныйЗапрос.КодСтроки                    КАК КодСтроки,
	|	&Склад                                       КАК Склад,
	|	СУММА(ВложенныйЗапрос.КОформлению)           КАК КОформлению,
	|	СУММА(ВложенныйЗапрос.Заказано)              КАК Заказано
	|ИЗ
	|	(ВЫБРАТЬ
	|		1                            КАК Порядок,
	|		ТаблицаТовары.НомерСтроки    КАК НомерСтроки,
	|		НАЧАЛОПЕРИОДА(&Период, ДЕНЬ) КАК Период,
	|		ТаблицаТовары.Ссылка         КАК ЗаказНаВнутреннееПотребление,
	|		ТаблицаТовары.Номенклатура   КАК Номенклатура,
	|		ТаблицаТовары.Характеристика КАК Характеристика,
	|		ТаблицаТовары.КодСтроки      КАК КодСтроки,
	|		0                            КАК КОформлению,
	|		ТаблицаТовары.Количество     КАК Заказано
	|	ИЗ
	|		Документ.ЗаказНаВнутреннееПотребление.Товары КАК ТаблицаТовары
	|	ГДЕ
	|		ТаблицаТовары.Ссылка = &Ссылка
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		1                            КАК Порядок,
	|		ТаблицаТовары.НомерСтроки    КАК НомерСтроки,
	|		ТаблицаТовары.ДатаОтгрузки   КАК Период,
	|		ТаблицаТовары.Ссылка         КАК ЗаказНаВнутреннееПотребление,
	|		ТаблицаТовары.Номенклатура   КАК Номенклатура,
	|		ТаблицаТовары.Характеристика КАК Характеристика,
	|		ТаблицаТовары.КодСтроки      КАК КодСтроки,
	|		ТаблицаТовары.Количество     КАК КОформлению,
	|		0                            КАК Заказано
	|
	|	ИЗ
	|		Документ.ЗаказНаВнутреннееПотребление.Товары КАК ТаблицаТовары
	|	ГДЕ
	|		ТаблицаТовары.Ссылка = &Ссылка
	|		И (НЕ ТаблицаТовары.Отменено)
	|		И &Статус В (ЗНАЧЕНИЕ(Перечисление.СтатусыВнутреннихЗаказов.КВыполнению),
	|			ЗНАЧЕНИЕ(Перечисление.СтатусыВнутреннихЗаказов.Закрыт))) КАК ВложенныйЗапрос
	|
	|СГРУППИРОВАТЬ ПО
	|	ВложенныйЗапрос.Характеристика,
	|	ВложенныйЗапрос.Номенклатура,
	|	ВложенныйЗапрос.ЗаказНаВнутреннееПотребление,
	|	ВложенныйЗапрос.Период,
	|	ВложенныйЗапрос.КодСтроки
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	2,
	|	ТаблицаТовары.НомерСтроки              КАК НомерСтроки,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	&Период                                КАК Период,
	|	ТаблицаТовары.Ссылка                   КАК ЗаказНаВнутреннееПотребление,
	|	ТаблицаТовары.Номенклатура             КАК Номенклатура,
	|	ТаблицаТовары.Характеристика           КАК Характеристика,
	|	ТаблицаТовары.КодСтроки                КАК КодСтроки,
	|	&Склад                                 КАК Склад,
	|	0                                      КАК КОформлению,
	|	- ТаблицаТовары.Количество             КАК Заказано
	|ИЗ
	|	Документ.ЗаказНаВнутреннееПотребление.Товары КАК ТаблицаТовары
	|ГДЕ
	|	ТаблицаТовары.Ссылка = &Ссылка
	|	И ТаблицаТовары.Отменено
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки,
	|	Порядок
	|;
	|////////////////////////////////////////////////////////////////////////////////
	// 1 ТаблицаДвижениеТоваров
	|ВЫБРАТЬ
	|	ТаблицаТовары.НомерСтроки    КАК НомерСтроки,
	|	ТаблицаТовары.ДатаОтгрузки   КАК Период,
	|	ТаблицаТовары.Ссылка         КАК Распоряжение,
	|	&Склад                       КАК Склад,
	|	ТаблицаТовары.Номенклатура   КАК Номенклатура,
	|	ТаблицаТовары.Характеристика КАК Характеристика,
	|	ТаблицаТовары.ВариантОбеспечения КАК ВариантОбеспечения,
	|	ВЫБОР КОГДА ТаблицаТовары.ВариантОбеспечения <> ЗНАЧЕНИЕ(Перечисление.ВариантыОбеспечения.ПустаяСсылка) ТОГДА
	|			ТаблицаТовары.Ссылка.Назначение
	|		ИНАЧЕ
	|			НЕОПРЕДЕЛЕНО
	|	КОНЕЦ                        КАК Назначение,
	|	ТаблицаТовары.Количество     КАК ПланируемаяОтгрузка
	|ИЗ
	|	Документ.ЗаказНаВнутреннееПотребление.Товары КАК ТаблицаТовары
	|ГДЕ
	|	ТаблицаТовары.Ссылка = &Ссылка
	|	И НЕ (ТаблицаТовары.УказыватьСерии И ТаблицаТовары.СтатусУказанияСерий = 10)
	|	И ТаблицаТовары.Номенклатура.ТипНоменклатуры В (ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Товар),ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара))
	|	И (НЕ ТаблицаТовары.Отменено)
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки
	|;
	|/////////////////////////////////////////////////////////////////////////////////
	// 2 ТаблицаСвободныеОстатки
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	&Период                                КАК Период,
	|	&Склад                                 КАК Склад,
	|	ТаблицаТовары.Номенклатура             КАК Номенклатура,
	|	ТаблицаТовары.Характеристика           КАК Характеристика,
	|	0                                      КАК ВНаличии,
	|	ТаблицаТовары.Количество               КАК ВРезерве,
	|	0                                      КАК СрокПоставки
	|ИЗ
	|	Документ.ЗаказНаВнутреннееПотребление.Товары КАК ТаблицаТовары
	|ГДЕ
	|	ТаблицаТовары.Ссылка = &Ссылка
	|	И (НЕ ТаблицаТовары.УказыватьСерии И ТаблицаТовары.СтатусУказанияСерий <> 10)
	|	И ТаблицаТовары.ВариантОбеспечения = ЗНАЧЕНИЕ(Перечисление.ВариантыОбеспечения.ПустаяСсылка)
	|	И (НЕ ТаблицаТовары.Отменено)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход),
	|	&Период                                КАК Период,
	|	&Склад                                 КАК Склад,
	|	ТаблицаТовары.Номенклатура             КАК Номенклатура,
	|	ТаблицаТовары.Характеристика           КАК Характеристика,
	|	ТаблицаТовары.Количество               КАК ВНаличии,
	|	0                                      КАК ВРезерве,
	|	0                                      КАК СрокПоставки
	|ИЗ
	|	Документ.ЗаказНаВнутреннееПотребление.Товары КАК ТаблицаТовары
	|ГДЕ
	|	ТаблицаТовары.Ссылка = &Ссылка
	|	И ((ТаблицаТовары.УказыватьСерии И ТаблицаТовары.СтатусУказанияСерий = 10)
	|				ИЛИ ТаблицаТовары.ВариантОбеспечения = ЗНАЧЕНИЕ(Перечисление.ВариантыОбеспечения.СоСклада))
	|
	|;
	|////////////////////////////////////////////////////////////////////////////////
	// 3 ТаблицаРезервыСерийТоваров
	|ВЫБРАТЬ
	|	ТаблицаСерии.НомерСтроки КАК НомерСтроки,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	&Период КАК Период,
	|	&Ссылка КАК ДокументРезерва,
	|	&Склад КАК Склад,
	|	ТаблицаСерии.Номенклатура КАК Номенклатура,
	|	ТаблицаСерии.Характеристика КАК Характеристика,
	|	ТаблицаСерии.Серия КАК Серия,
	|	ТаблицаСерии.Количество КАК Количество
	|ИЗ
	|	Документ.ЗаказНаВнутреннееПотребление.Серии КАК ТаблицаСерии
	|ГДЕ
	|	ТаблицаСерии.Ссылка = &Ссылка
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ТаблицаТовары.НомерСтроки,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход),
	|	&Период,
	|	&Ссылка,
	|	&Склад КАК Склад,
	|	ТаблицаТовары.Номенклатура,
	|	ТаблицаТовары.Характеристика,
	|	ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка),
	|	ТаблицаТовары.Количество
	|ИЗ
	|	Документ.ЗаказНаВнутреннееПотребление.Товары КАК ТаблицаТовары
	|ГДЕ
	|	ТаблицаТовары.Ссылка = &Ссылка
	|	И ТаблицаТовары.СтатусУказанияСерий В (11,12)
	|;
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	&Период                                КАК Период,
	|	ТаблицаТовары.Ссылка.Склад             КАК Склад,
	|	ТаблицаТовары.Номенклатура             КАК Номенклатура,
	|	ТаблицаТовары.Характеристика           КАК Характеристика,
	|	ТаблицаТовары.Ссылка.Назначение        КАК Назначение,
	|	ВЫБОР КОГДА ТаблицаТовары.ВариантОбеспечения = ЗНАЧЕНИЕ(Перечисление.ВариантыОбеспечения.СоСклада) ТОГДА
	|		0
	|	ИНАЧЕ
	|		ТаблицаТовары.Количество
	|	КОНЕЦ                                  КАК Потребность,
	|	ВЫБОР КОГДА ТаблицаТовары.ВариантОбеспечения = ЗНАЧЕНИЕ(Перечисление.ВариантыОбеспечения.СоСклада) ТОГДА
	|		0
	|	ИНАЧЕ
	|		ТаблицаТовары.Количество
	|	КОНЕЦ                                  КАК КЗаказу,

	|	ВЫБОР КОГДА ТаблицаТовары.ВариантОбеспечения = ЗНАЧЕНИЕ(Перечисление.ВариантыОбеспечения.СоСклада) ТОГДА
	|		ТаблицаТовары.Количество
	|	ИНАЧЕ
	|		0
	|	КОНЕЦ КАК НаличиеСоСклада
	|
	|ИЗ
	|	Документ.ЗаказНаВнутреннееПотребление.Товары КАК ТаблицаТовары
	|ГДЕ
	|	ТаблицаТовары.Ссылка = &Ссылка
	|	И ТаблицаТовары.Номенклатура.ТипНоменклатуры В (ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Товар),ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара))
	|	И ТаблицаТовары.ВариантОбеспечения <> ЗНАЧЕНИЕ(Перечисление.ВариантыОбеспечения.ПустаяСсылка)
	|	И (НЕ ТаблицаТовары.Отменено)
	|";
	
	Результат = Запрос.ВыполнитьПакет();
	
	ТаблицыДляДвижений = ДополнительныеСвойства.ТаблицыДляДвижений;
	
	ТаблицыДляДвижений.Вставить("ТаблицаЗаказыНаВнутреннееПотребление",Результат[0].Выгрузить());
	ТаблицыДляДвижений.Вставить("ТаблицаДвижениеТоваров",              Результат[1].Выгрузить());
	ТаблицыДляДвижений.Вставить("ТаблицаСвободныеОстатки",             Результат[2].Выгрузить());
 	ТаблицыДляДвижений.Вставить("ТаблицаРезервыСерийТоваров",          Результат[3].Выгрузить());
	ТаблицыДляДвижений.Вставить("ТаблицаОбеспечениеЗаказов",           Результат[4].Выгрузить());

КонецПроцедуры

#КонецЕсли