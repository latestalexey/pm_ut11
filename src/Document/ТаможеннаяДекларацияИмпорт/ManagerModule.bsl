#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

////////////////////////////////////////////////////////////////////////////////
// ПРОГРАММНЫЙ ИНТЕРФЕЙС

Процедура ЗаполнитьИменаРеквизитовПоХозяйственнойОперации(ХозяйственнаяОперация, ВсеРеквизиты, РеквизитыОперации) Экспорт
	ВсеРеквизиты = Новый Массив;
	РеквизитыОперации = Новый Массив;
	
	ВсеРеквизиты.Добавить("Соглашение");
	ВсеРеквизиты.Добавить("Договор");
	Если ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ОформлениеГТДБрокером Тогда
		РеквизитыОперации.Добавить("Соглашение");
		РеквизитыОперации.Добавить("Договор");
	КонецЕсли;
КонецПроцедуры

Функция ПолучитьРеквизитыДокумента(ДокументСсылка) Экспорт
	Реквизиты = Новый Структура("
		|Дата,
		|ХозяйственнаяОперация,
		|Организация,
		|Партнер,
		|Контрагент,
		|Договор,
		|РасчетыПоДоговору,
		|ПоЗаказу,
		|ВалютаВзаиморасчетов,
		|СуммаДокумента,
		|СуммаВзаиморасчетов",
		'00010101',
		Перечисления.ХозяйственныеОперации.ОформлениеГТДБрокером,
		Справочники.Организации.ПустаяСсылка(),
		Справочники.Партнеры.ПустаяСсылка(),
		Справочники.Контрагенты.ПустаяСсылка(),
		Справочники.ДоговорыКонтрагентов.ПустаяСсылка(),
		Ложь,
		Ложь,
		Справочники.Валюты.ПустаяСсылка(),
		0,
		0
	);
	Запрос = Новый Запрос("
	|ВЫБРАТЬ
	|	Данные.Дата КАК Дата,
	|	Данные.ХозяйственнаяОперация КАК ХозяйственнаяОперация,
	|	Данные.Организация КАК Организация,
	|	Данные.Партнер КАК Партнер,
	|	Данные.Контрагент КАК Контрагент,
	|	Данные.Договор КАК Договор,
	|	ВЫБОР КОГДА Данные.Договор.ПорядокРасчетов = ЗНАЧЕНИЕ(Перечисление.ПорядокРасчетов.ПоДоговорамКонтрагентов) ТОГДА
	|		ИСТИНА
	|	ИНАЧЕ
	|		ЛОЖЬ
	|	КОНЕЦ КАК РасчетыПоДоговору,
	|	ЛОЖЬ КАК ПоЗаказу,
	|	Данные.ВалютаВзаиморасчетов КАК ВалютаВзаиморасчетов,
	|	Данные.СуммаДокумента КАК СуммаДокумента,
	|	ВЫБОР КОГДА Данные.Проведен ТОГДА
	|		Данные.СуммаВзаиморасчетов
	|	ИНАЧЕ
	|		0
	|	КОНЕЦ КАК СуммаВзаиморасчетов
	|ИЗ
	|	Документ.ТаможеннаяДекларацияИмпорт КАК Данные
	|ГДЕ
	|	Данные.Ссылка = &ДокументСсылка
	|");
	Запрос.УстановитьПараметр("ДокументСсылка", ДокументСсылка);
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда
		ЗаполнитьЗначенияСвойств(Реквизиты, Выборка);
	КонецЕсли;
	Возврат Реквизиты;
КонецФункции

// Функция возвращает текст запроса для отражения документа в регламентированном учете.
//
// Возвращаемое значение:
//	Строка - Текст запроса
//
Функция ТекстОтраженияВРеглУчете() Экспорт
	
	ТекстТаможенныйСбор = "
	|ВЫБРАТЬ // Таможенный сбор (Дт 44 :: Кт 60.01)
	|	Операция.Дата КАК Период,
	|	Операция.Организация КАК Организация,
	|	НЕОПРЕДЕЛЕНО КАК ИдентификаторСтроки,
	|
	|	Операция.ТаможенныйСбор КАК Сумма,
	|
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.Расходы) КАК ВидСчетаДт,
	|	Операция.СтатьяРасходовСбор КАК АналитикаУчетаДт,
	|	Операция.Подразделение КАК МестоУчетаДт,
	|
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаДт,
	|	Операция.Подразделение КАК ПодразделениеДт,
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетДт,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт3,
	|	
	|	0 КАК ВалютнаяСуммаДт,
	|	0 КАК КоличествоДт,
	|	0 КАК СуммаНУДт,
	|	0 КАК СуммаПРДт,
	|	0 КАК СуммаВРДт,
	|	
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.РасчетыСПоставщиками) КАК ВидСчетаКт,
	|	Операция.ГруппаФинансовогоУчета КАК АналитикаУчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаКт,
	|
	|	Операция.ВалютаВзаиморасчетов КАК ВалютаКт,
	|	Операция.Подразделение КАК ПодразделениеКт,
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетКт,
	|	Операция.Контрагент КАК СубконтоКт1,
	|	Операция.Договор КАК СубконтоКт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
	|
	|	Операция.ТаможенныйСбор КАК ВалютнаяСуммаКт,
	|	0 КАК КоличествоКт,
	|	0 КАК СуммаНУКт,
	|	0 КАК СуммаПРКт,
	|	0 КАК СуммаВРКт
	|
	|ИЗ
	|	Документ.ТаможеннаяДекларацияИмпорт КАК Операция
	|
	|ГДЕ
	|	Операция.Ссылка = &Ссылка
	|	И Операция.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыТаможенныхДеклараций.ВыпущеноСТаможни)
	|";
	
	ТекстТаможенныйШтраф = "
	|ВЫБРАТЬ // Таможенный штраф (Дт 44 :: Кт 60.01)
	|	Операция.Дата КАК Период,
	|	Операция.Организация КАК Организация,
	|	НЕОПРЕДЕЛЕНО КАК ИдентификаторСтроки,
	|
	|	Операция.ТаможенныйШтраф КАК Сумма,
	|
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.Расходы) КАК ВидСчетаДт,
	|	Операция.СтатьяРасходовШтраф КАК АналитикаУчетаДт,
	|	Операция.Подразделение КАК МестоУчетаДт,
	|
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаДт,
	|	Операция.Подразделение КАК ПодразделениеДт,
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетДт,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт3,
	|	
	|	0 КАК ВалютнаяСуммаДт,
	|	0 КАК КоличествоДт,
	|	0 КАК СуммаНУДт,
	|	0 КАК СуммаПРДт,
	|	0 КАК СуммаВРДт,
	|	
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.РасчетыСПоставщиками) КАК ВидСчетаКт,
	|	Операция.ГруппаФинансовогоУчета КАК АналитикаУчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаКт,
	|
	|	Операция.ВалютаВзаиморасчетов КАК ВалютаКт,
	|	Операция.Подразделение КАК ПодразделениеКт,
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетКт,
	|	Операция.Контрагент КАК СубконтоКт1,
	|	Операция.Договор КАК СубконтоКт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
	|
	|	Операция.ТаможенныйШтраф КАК ВалютнаяСуммаКт,
	|	0 КАК КоличествоКт,
	|	0 КАК СуммаНУКт,
	|	0 КАК СуммаПРКт,
	|	0 КАК СуммаВРКт
	|
	|ИЗ
	|	Документ.ТаможеннаяДекларацияИмпорт КАК Операция
	|
	|ГДЕ
	|	Операция.Ссылка = &Ссылка
	|	И Операция.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыТаможенныхДеклараций.ВыпущеноСТаможни)
	|";
	
	ТекстПошлина = "
	|ВЫБРАТЬ // Таможенная пошлина (Дт 41 :: Кт 60, 76)
	|	Операция.Дата КАК Период,
	|	Операция.Организация КАК Организация,
	|	НЕОПРЕДЕЛЕНО КАК ИдентификаторСтроки,
	|
	|	Строки.СуммаПошлины КАК Сумма,
	|
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.НаСкладе) КАК ВидСчетаДт,
	|	ВЫБОР КОГДА &ФормироватьВидыЗапасовПоГруппамФинансовогоУчета ТОГДА
	|		Строки.ВидЗапасов.ГруппаФинансовогоУчета
	|	ИНАЧЕ
	|		Строки.Номенклатура.ГруппаФинансовогоУчета
	|	КОНЕЦ КАК АналитикаУчетаДт,
	|	Строки.Склад КАК МестоУчетаДт,
	|
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаДт,
	|	Строки.Склад.Подразделение КАК ПодразделениеДт,
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетДт,
	|	Строки.Номенклатура КАК СубконтоДт1,
	|	Строки.Склад КАК СубконтоДт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт3,
	|	
	|	0 КАК ВалютнаяСуммаДт,
	|	0 КАК КоличествоДт,
	|	0 КАК СуммаНУДт,
	|	0 КАК СуммаПРДт,
	|	0 КАК СуммаВРДт,
	|	
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.РасчетыСПоставщиками) КАК ВидСчетаКт,
	|	Операция.ГруппаФинансовогоУчета КАК АналитикаУчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаКт,
	|
	|	Операция.ВалютаВзаиморасчетов КАК ВалютаКт,
	|	Операция.Подразделение КАК ПодразделениеКт,
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетКт,
	|	Операция.Контрагент КАК СубконтоКт1,
	|	Операция.Договор КАК СубконтоКт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
	|
	|	Строки.СуммаПошлины КАК ВалютнаяСуммаКт,
	|	0 КАК КоличествоКт,
	|	0 КАК СуммаНУКт,
	|	0 КАК СуммаПРКт,
	|	0 КАК СуммаВРКт
	|
	|ИЗ
	|	Документ.ТаможеннаяДекларацияИмпорт КАК Операция
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Документ.ТаможеннаяДекларацияИмпорт.Товары КАК Строки
	|	ПО
	|		Строки.Ссылка = Операция.Ссылка
	|
	|ГДЕ
	|	Операция.Ссылка = &Ссылка
	|	И Операция.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыТаможенныхДеклараций.ВыпущеноСТаможни)
	|";
	
	ТекстНДСВСтоимость = "
	|ВЫБРАТЬ // Таможенная пошлина (Дт 41 :: Кт 60, 76)
	|	Операция.Дата КАК Период,
	|	Операция.Организация КАК Организация,
	|	НЕОПРЕДЕЛЕНО КАК ИдентификаторСтроки,
	|
	|	Строки.СуммаНДС КАК Сумма,
	|
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.НаСкладе) КАК ВидСчетаДт,
	|	ВЫБОР КОГДА &ФормироватьВидыЗапасовПоГруппамФинансовогоУчета ТОГДА
	|		Строки.ВидЗапасов.ГруппаФинансовогоУчета
	|	ИНАЧЕ
	|		Строки.Номенклатура.ГруппаФинансовогоУчета
	|	КОНЕЦ КАК АналитикаУчетаДт,
	|	Строки.Склад КАК МестоУчетаДт,
	|
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаДт,
	|	Строки.Склад.Подразделение КАК ПодразделениеДт,
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетДт,
	|	Строки.Номенклатура КАК СубконтоДт1,
	|	Строки.Склад КАК СубконтоДт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт3,
	|	
	|	0 КАК ВалютнаяСуммаДт,
	|	0 КАК КоличествоДт,
	|	0 КАК СуммаНУДт,
	|	0 КАК СуммаПРДт,
	|	0 КАК СуммаВРДт,
	|	
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.РасчетыСПоставщиками) КАК ВидСчетаКт,
	|	Операция.ГруппаФинансовогоУчета КАК АналитикаУчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаКт,
	|
	|	Операция.ВалютаВзаиморасчетов КАК ВалютаКт,
	|	Операция.Подразделение КАК ПодразделениеКт,
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетКт,
	|	Операция.Контрагент КАК СубконтоКт1,
	|	Операция.Договор КАК СубконтоКт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
	|
	|	Строки.СуммаПошлины КАК ВалютнаяСуммаКт,
	|	0 КАК КоличествоКт,
	|	0 КАК СуммаНУКт,
	|	0 КАК СуммаПРКт,
	|	0 КАК СуммаВРКт
	|
	|ИЗ
	|	Документ.ТаможеннаяДекларацияИмпорт КАК Операция
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Документ.ТаможеннаяДекларацияИмпорт.Товары КАК Строки
	|	ПО
	|		Строки.Ссылка = Операция.Ссылка
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		Документ.ПоступлениеТоваровУслуг КАК ДокументПоступления
	|	ПО
	|		Операция.ПоступлениеТоваров = ДокументПоступления.Ссылка
	|
	|ГДЕ
	|	Операция.Ссылка = &Ссылка
	|	И Операция.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыТаможенныхДеклараций.ВыпущеноСТаможни)
	|	И ДокументПоступления.ЗакупкаПодДеятельность В
	|		(ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаНеОблагаетсяНДС),
	|		ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаОблагаетсяЕНВД))
	|";
	
	ТекстНДСКВычету = "
	|ВЫБРАТЬ // НДС (Дт 19.05 :: Кт 60, 76)
	|	Операция.Дата КАК Период,
	|	Операция.Организация КАК Организация,
	|	НЕОПРЕДЕЛЕНО КАК ИдентификаторСтроки,
	|
	|	Строки.СуммаНДС КАК Сумма,
	|
	|	НЕОПРЕДЕЛЕНО КАК ВидСчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаУчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаДт,
	|
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаДт,
	|	НЕОПРЕДЕЛЕНО КАК ПодразделениеДт,
	|	ВЫБОР КОГДА ДокументПоступления.ЗакупкаПодДеятельность
	|		= ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаНаЭкспорт)
	|	ТОГДА
	|		ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.НДСПоТоварамРеализованнымПоСтавке0)
	|	ИНАЧЕ
	|		ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.НДСуплачиваемыйТаможеннымОрганам)
	|	КОНЕЦ КАК СчетДт,
	|	Операция.Контрагент КАК СубконтоДт1,
	|	&Ссылка КАК СубконтоДт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт3,
	|	
	|	0 КАК ВалютнаяСуммаДт,
	|	0 КАК КоличествоДт,
	|	0 КАК СуммаНУДт,
	|	0 КАК СуммаПРДт,
	|	0 КАК СуммаВРДт,
	|	
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.РасчетыСПоставщиками) КАК ВидСчетаКт,
	|	Операция.ГруппаФинансовогоУчета КАК АналитикаУчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаКт,
	|
	|	Операция.ВалютаВзаиморасчетов КАК ВалютаКт,
	|	Операция.Подразделение КАК ПодразделениеКт,
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетКт,
	|	Операция.Контрагент КАК СубконтоКт1,
	|	Операция.Договор КАК СубконтоКт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
	|
	|	Строки.СуммаНДС КАК ВалютнаяСуммаКт,
	|	0 КАК КоличествоКт,
	|	0 КАК СуммаНУКт,
	|	0 КАК СуммаПРКт,
	|	0 КАК СуммаВРКт
	|
	|ИЗ
	|	Документ.ТаможеннаяДекларацияИмпорт КАК Операция
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Документ.ТаможеннаяДекларацияИмпорт.Товары КАК Строки
	|	ПО
	|		Строки.Ссылка = Операция.Ссылка
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		Документ.ПоступлениеТоваровУслуг КАК ДокументПоступления
	|	ПО
	|		Операция.ПоступлениеТоваров = ДокументПоступления.Ссылка
	|
	|ГДЕ
	|	Операция.Ссылка = &Ссылка
	|	И Операция.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыТаможенныхДеклараций.ВыпущеноСТаможни)
	|	И ДокументПоступления.ЗакупкаПодДеятельность В
	|		(ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаОблагаетсяНДС),
	|		ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаНаЭкспорт))
	|";
	
	ТекстВычетНДС = "
	|ВЫБРАТЬ // НДС (Дт 68.02 :: Кт 19.05)
	|	Операция.Дата КАК Период,
	|	Операция.Организация КАК Организация,
	|	НЕОПРЕДЕЛЕНО КАК ИдентификаторСтроки,
	|
	|	Строки.СуммаНДС КАК Сумма,
	|
	|	НЕОПРЕДЕЛЕНО КАК ВидСчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаУчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаДт,
	|
	|	НЕОПРЕДЕЛЕНО КАК ВалютаДт,
	|	НЕОПРЕДЕЛЕНО КАК ПодразделениеКт,
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.НДС) КАК СчетДт,
	|
	|	ЗНАЧЕНИЕ(Перечисление.ВидыПлатежейВГосБюджет.Налог) КАК СубконтоДт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт3,
	|	
	|	0 КАК ВалютнаяСуммаДт,
	|	0 КАК КоличествоДт,
	|	0 КАК СуммаНУДт,
	|	0 КАК СуммаПРДт,
	|	0 КАК СуммаВРДт,
	|	
	|	НЕОПРЕДЕЛЕНО КАК ВидСчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаУчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаКт,
	|	
	|	НЕОПРЕДЕЛЕНО КАК ВалютаКт,
	|	НЕОПРЕДЕЛЕНО КАК ПодразделениеДт,
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.НДСуплачиваемыйТаможеннымОрганам) КАК СчетКт,
	|	Операция.Контрагент КАК СубконтоКт1,
	|	&Ссылка КАК СубконтоКт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
	|
	|	0 КАК ВалютнаяСуммаКт,
	|	0 КАК КоличествоКт,
	|	0 КАК СуммаНУКт,
	|	0 КАК СуммаПРКт,
	|	0 КАК СуммаВРКт
	|
	|ИЗ
	|	Документ.ТаможеннаяДекларацияИмпорт КАК Операция
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Документ.ТаможеннаяДекларацияИмпорт.Товары КАК Строки
	|	ПО
	|		Строки.Ссылка = Операция.Ссылка
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		Документ.ПоступлениеТоваровУслуг КАК ДокументПоступления
	|	ПО
	|		Операция.ПоступлениеТоваров = ДокументПоступления.Ссылка
	|
	|ГДЕ
	|	Операция.Ссылка = &Ссылка
	|	И Операция.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыТаможенныхДеклараций.ВыпущеноСТаможни)
	|	И ДокументПоступления.ЗакупкаПодДеятельность 
	|		= ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаОблагаетсяНДС)
	|";
	
	Возврат
	ТекстТаможенныйСбор
	+ " ОБЪЕДИНИТЬ ВСЕ " + ТекстТаможенныйШтраф
	+ " ОБЪЕДИНИТЬ ВСЕ " + ТекстПошлина
	+ " ОБЪЕДИНИТЬ ВСЕ " + ТекстНДСВСтоимость
	+ " ОБЪЕДИНИТЬ ВСЕ " + ТекстНДСКВычету
	+ " ОБЪЕДИНИТЬ ВСЕ " + ТекстВычетНДС;
	
КонецФункции

////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

Функция СуммаДокумента(Объект) Экспорт
	Возврат Объект.ТаможенныйСбор + Объект.ТаможенныйШтраф + Объект.Разделы.Итог("СуммаПошлины") + Объект.Разделы.Итог("СуммаНДС");
КонецФункции

////////////////////////////////////////////////////////////////////////////////
// Проведение

Процедура ИнициализироватьДанныеДокумента(ДокументСсылка, ДополнительныеСвойства) Экспорт
	Запрос = Новый Запрос("
	|ВЫБРАТЬ // данные, которые нужны для расчетов в инициализации
	|	ДанныеДокумента.Ссылка КАК Ссылка,
	|	ДанныеДокумента.Дата КАК Период,
	|	ДанныеДокумента.Валюта КАК Валюта,
	|	ДанныеДокумента.ВалютаВзаиморасчетов КАК ВалютаВзаиморасчетов,
	|	ДанныеДокумента.Организация КАК Организация,
	|	ДанныеДокумента.Партнер КАК Партнер,
	|	ДанныеДокумента.Контрагент КАК Контрагент,
	|	ВЫБОР КОГДА ДанныеДокумента.Договор.ПорядокРасчетов = ЗНАЧЕНИЕ(Перечисление.ПорядокРасчетов.ПоДоговорамКонтрагентов) ТОГДА
	|		ДанныеДокумента.Договор
	|	ИНАЧЕ
	|		ДанныеДокумента.Ссылка
	|	КОНЕЦ КАК ОбъектРасчетов,
	|	ВЫБОР КОГДА ДанныеДокумента.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыТаможенныхДеклараций.ВыпущеноСТаможни) ТОГДА
	|		ИСТИНА
	|	ИНАЧЕ
	|		ЛОЖЬ
	|	КОНЕЦ КАК ВыпущеноСТаможни,
	|	ЕСТЬNULL(ДанныеДокумента.ПоступлениеТоваров.ЗакупкаПодДеятельность, НЕОПРЕДЕЛЕНО) КАК ЗакупкаПодДеятельность
	|ИЗ
	|	Документ.ТаможеннаяДекларацияИмпорт КАК ДанныеДокумента
	|ГДЕ
	|	ДанныеДокумента.Ссылка = &Ссылка
	|");
	Запрос.УстановитьПараметр("Ссылка", ДокументСсылка);
	Реквизиты = Запрос.Выполнить().Выбрать();
	Реквизиты.Следующий();

	Коэффициенты =
		РаботаСКурсамивалютУТ.ПолучитьКоэффициентыПересчетаВалюты(Реквизиты.Валюта, Реквизиты.ВалютаВзаиморасчетов, Реквизиты.Период);
	ИнициализироватьКлючиАналитикиНоменклатуры(Реквизиты);

	Запрос.УстановитьПараметр("Период", Реквизиты.Период);
	Запрос.УстановитьПараметр("АналитикаУчетаПоПартнерам", РегистрыСведений.АналитикаУчетаПоПартнерам.ЗначениеКлючаАналитики(Реквизиты));
	Запрос.УстановитьПараметр("КоэффициентПересчетаВВалютуУпр", Коэффициенты.КоэффициентПересчетаВВалютуУпр);
	Запрос.УстановитьПараметр("КоэффициентПересчетаВВалютуРегл", Коэффициенты.КоэффициентПересчетаВВалютуРегл);
	Запрос.УстановитьПараметр("ОбъектРасчетов", Реквизиты.ОбъектРасчетов);
	Запрос.УстановитьПараметр("ВыпущеноСТаможни", Реквизиты.ВыпущеноСТаможни);
	Запрос.УстановитьПараметр("СебестоимостьПоВидамЗапасов", ПолучитьФункциональнуюОпцию("УчитыватьСебестоимостьТоваровПоВидамЗапасов"));
	Запрос.УстановитьПараметр("ЗакупкаПодДеятельность", Реквизиты.ЗакупкаПодДеятельность);
	Запрос.УстановитьПараметр("Организация", Реквизиты.Организация);
	Запрос.УстановитьПараметр("Контрагент", Реквизиты.Контрагент);
	
	Запрос.Текст = ТекстЗапросаТаблицаРасчетыСПоставщиками()
		+ ТекстЗапросаТаблицаРасчетыСПоставщикамиПоследовательность()
		+ ТекстЗапросаТаблицаПрочиеРасходы()
		+ ТекстЗапросаТаблицаСебестоимостьТоваров()
		+ ТекстЗапросаТаблицаТоварыОрганизацийКОформлению()
		+ ТекстЗапросаТаблицаТоварыОрганизаций()
		+ ТекстЗапросаТаблицаДатыПоступленияТоваровОрганизаций()
		+ ТекстЗапросаТаблицаПартииТоваровОрганизацийПоследовательность()
		+ ТекстЗапросаТаблицаНДСЗаписиКнигиПокупок()
		+ ТекстЗапросаТаблицаПартииТоваровОрганизаций()
		+ ТекстЗапросаТаблицаПартииРасходовНаСебестоимостьТоваров()
		+ ТекстЗапросаТаблицаПартииПрочихРасходов()
	;
		
	Результат = Запрос.ВыполнитьПакет();
	ТаблицыДляДвижений = ДополнительныеСвойства.ТаблицыДляДвижений;
	ТаблицыДляДвижений.Вставить("ТаблицаРасчетыСПоставщиками",                       Результат[0].Выгрузить());
	ТаблицыДляДвижений.Вставить("ТаблицаРасчетыСПоставщикамиПоследовательность",     Результат[1].Выгрузить());
	ТаблицыДляДвижений.Вставить("ТаблицаПрочиеРасходы",                              Результат[2].Выгрузить());
	ТаблицыДляДвижений.Вставить("ТаблицаСебестоимостьТоваров",                       Результат[3].Выгрузить());
	ТаблицыДляДвижений.Вставить("ТаблицаТоварыОрганизацийКОформлению",               Результат[4].Выгрузить());
	ТаблицыДляДвижений.Вставить("ТаблицаТоварыОрганизаций",                          Результат[5].Выгрузить());
	ТаблицыДляДвижений.Вставить("ТаблицаДатыПоступленияТоваровОрганизаций",          Результат[6].Выгрузить());
	ТаблицыДляДвижений.Вставить("ТаблицаПартииТоваровОрганизацийПоследовательность", Результат[7].Выгрузить());
	ТаблицыДляДвижений.Вставить("ТаблицаНДСЗаписиКнигиПокупок",                      Результат[8].Выгрузить());
	ТаблицыДляДвижений.Вставить("ТаблицаПартииТоваровОрганизаций", 					 Результат[9].Выгрузить());
	ТаблицыДляДвижений.Вставить("ТаблицаПартииРасходовНаСебестоимостьТоваров", 		 Результат[10].Выгрузить());
	ТаблицыДляДвижений.Вставить("ТаблицаПартииПрочихРасходов", 						 Результат[11].Выгрузить());

КонецПроцедуры

Процедура ИнициализироватьКлючиАналитикиНоменклатуры(Реквизиты)
	
	Запрос = Новый Запрос("
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ТоварыДокумента.Склад КАК Склад,
	|	ТоварыДокумента.Номенклатура КАК Номенклатура,
	|	ТоварыДокумента.Характеристика КАК Характеристика
	|ИЗ 
	|	Документ.ТаможеннаяДекларацияИмпорт.Товары КАК ТоварыДокумента
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Документ.ТаможеннаяДекларацияИмпорт КАК ДанныеДокумента
	|	ПО
	|		ТоварыДокумента.Ссылка = ДанныеДокумента.Ссылка
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РегистрСведений.АналитикаУчетаНоменклатуры КАК Аналитика
	|	ПО
	|		ТоварыДокумента.Номенклатура = Аналитика.Номенклатура
	|		И ТоварыДокумента.Характеристика = Аналитика.Характеристика
	|		И ТоварыДокумента.Склад = Аналитика.Склад
	|ГДЕ
	|	ДанныеДокумента.Ссылка = &Ссылка И &ВыпущеноСТаможни
	|	И Аналитика.КлючАналитики ЕСТЬ NULL
	|");
	Запрос.УстановитьПараметр("Ссылка", Реквизиты.Ссылка);
	Запрос.УстановитьПараметр("ВыпущеноСТаможни",Реквизиты.ВыпущеноСТаможни);
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		РегистрыСведений.АналитикаУчетаНоменклатуры.СоздатьКлючАналитики(Выборка)
	КонецЦикла;
	
КонецПроцедуры 

Функция ТекстЗапросаТаблицаРасчетыСПоставщиками()
	
	ТекстЗапроса = "
	|ВЫБРАТЬ // задолженность перед таможней/брокером
	|	&Период КАК Период,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
	|	&АналитикаУчетаПоПартнерам КАК АналитикаУчетаПоПартнерам,
	|	&ОбъектРасчетов КАК ЗаказПоставщику,
	|	ДанныеДокумента.ВалютаВзаиморасчетов КАК Валюта,
	|
	|	ДанныеДокумента.СуммаВзаиморасчетов КАК Сумма,
	|	0 КАК КОплате,
	|	0 КАК КПоступлению,
	|
	|	ДанныеДокумента.ХозяйственнаяОперация КАК ХозяйственнаяОперация,
	|	ДанныеДокумента.ФормаОплаты КАК ФормаОплаты,
	|	ДанныеДокумента.Дата КАК ДатаРегистратора,
	|	ДанныеДокумента.ДатаПлатежа КАК ДатаПлатежа
	|ИЗ
	|	Документ.ТаможеннаяДекларацияИмпорт КАК ДанныеДокумента
	|ГДЕ
	|	ДанныеДокумента.Ссылка = &Ссылка
	|	И &ВыпущеноСТаможни
	|	И ДанныеДокумента.СуммаВзаиморасчетов <> 0
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ // к оплате таможне/брокеру
	|	КОНЕЦПЕРИОДА(ДанныеДокумента.ДатаПлатежа, День) КАК Период,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
	|	&АналитикаУчетаПоПартнерам КАК АналитикаУчетаПоПартнерам,
	|	&ОбъектРасчетов КАК ЗаказПоставщику,
	|	ДанныеДокумента.ВалютаВзаиморасчетов КАК Валюта,
	|
	|	0 КАК Сумма,
	|	ДанныеДокумента.СуммаВзаиморасчетов КАК КОплате,
	|	0 КАК КПоступлению,
	|
	|	ДанныеДокумента.ХозяйственнаяОперация КАК ХозяйственнаяОперация,
	|	ДанныеДокумента.ФормаОплаты КАК ФормаОплаты,
	|	ДанныеДокумента.Дата КАК ДатаРегистратора,
	|	ДанныеДокумента.ДатаПлатежа КАК ДатаПлатежа
	|ИЗ
	|	Документ.ТаможеннаяДекларацияИмпорт КАК ДанныеДокумента
	|ГДЕ
	|	ДанныеДокумента.Ссылка = &Ссылка И ДанныеДокумента.СуммаВзаиморасчетов <> 0
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ // Пустое движение для установки границы последовательности ПроведениеПоРасчетамСПоставщиками.
	|	&Период КАК Период,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
	|	&АналитикаУчетаПоПартнерам КАК АналитикаУчетаПоПартнерам,
	|	&ОбъектРасчетов КАК ЗаказПоставщику,
	|	ДанныеДокумента.ВалютаВзаиморасчетов КАК Валюта,
	|
	|	0 КАК Сумма,
	|	0 КАК КОплате,
	|	0 КАК КПоступлению,
	|
	|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПланированиеПоЗаказуПоставщику) КАК ХозяйственнаяОперация,
	|	НЕОПРЕДЕЛЕНО КАК ФормаОплаты,
	|	НЕОПРЕДЕЛЕНО КАК ДатаРегистратора,
	|	НЕОПРЕДЕЛЕНО КАК ДатаПлатежа
	|ИЗ
	|	Документ.ТаможеннаяДекларацияИмпорт КАК ДанныеДокумента
	|ГДЕ
	|	ДанныеДокумента.Ссылка = &Ссылка И НЕ &ВыпущеноСТаможни
	|;";
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаРасчетыСПоставщикамиПоследовательность()
	
	ТекстЗапроса = "
	|ВЫБРАТЬ
	|	&Период КАК Период,
	|	&Ссылка КАК Регистратор,
	|	&АналитикаУчетаПоПартнерам КАК АналитикаУчетаПоПартнерам
	|;";
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаПрочиеРасходы()
	
	ТекстЗапроса = "
	|ВЫБРАТЬ
	|	&Период КАК Период,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	ДанныеДокумента.Организация КАК Организация,
	|	ДанныеДокумента.Подразделение КАК Подразделение,
	|	ДанныеДокумента.СтатьяРасходовСбор КАК СтатьяРасходов,
	|	ДанныеДокумента.АналитикаРасходовСбор КАК АналитикаРасходов,
	|
	|	ДанныеДокумента.ТаможенныйСбор * &КоэффициентПересчетаВВалютуУпр КАК Сумма,
	|	0 КАК СуммаБезНДС,
	|	0 КАК СуммаРегл,
	|
	|	ДанныеДокумента.ХозяйственнаяОперация КАК ХозяйственнаяОперация,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаУчетаНоменклатуры
	|ИЗ
	|	Документ.ТаможеннаяДекларацияИмпорт КАК ДанныеДокумента
	|ГДЕ
	|	ДанныеДокумента.Ссылка = &Ссылка
	|	И &ВыпущеноСТаможни
	|	И ДанныеДокумента.ТаможенныйСбор <> 0
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	&Период КАК Период,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	ДанныеДокумента.Организация КАК Организация,
	|	ДанныеДокумента.Подразделение КАК Подразделение,
	|	ДанныеДокумента.СтатьяРасходовШтраф КАК СтатьяРасходов,
	|	ДанныеДокумента.АналитикаРасходовШтраф КАК АналитикаРасходов,
	|
	|	ДанныеДокумента.ТаможенныйШтраф * &КоэффициентПересчетаВВалютуУпр КАК Сумма,
	|	0 КАК СуммаБезНДС,
	|	0 КАК СуммаРегл,
	|
	|	ДанныеДокумента.ХозяйственнаяОперация КАК ХозяйственнаяОперация,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаУчетаНоменклатуры
	|ИЗ
	|	Документ.ТаможеннаяДекларацияИмпорт КАК ДанныеДокумента
	|ГДЕ
	|	ДанныеДокумента.Ссылка = &Ссылка
	|	И &ВыпущеноСТаможни
	|	И ДанныеДокумента.ТаможенныйШтраф <> 0
	|	И ДанныеДокумента.СтатьяРасходовШтраф.ВариантРаспределенияРасходов 
	|				= ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаСебестоимостьТоваров)
	|;";
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаСебестоимостьТоваров()
	
	ТекстЗапроса = "
	|ВЫБРАТЬ
	|	&Период КАК Период,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	Аналитика.КлючАналитики КАК АналитикаУчетаНоменклатуры,
	|	ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыНаСкладах) КАК РазделУчета,
	|	ВЫБОР КОГДА &СебестоимостьПоВидамЗапасов ТОГДА
	|		ТоварыДокумента.ВидЗапасов
	|	ИНАЧЕ
	|		НЕОПРЕДЕЛЕНО
	|	КОНЕЦ КАК ВидЗапасов,
	|	ДанныеДокумента.Организация КАК Организация,
	|
	|	0 КАК Количество,
	|	0 КАК Стоимость,
	|	&КоэффициентПересчетаВВалютуУпр * (ТоварыДокумента.СуммаПошлины + ТоварыДокумента.СуммаНДС) КАК СуммаДопРасходов,
	|	0 КАК СтоимостьБезНДС,
	|	&КоэффициентПересчетаВВалютуУпр * ТоварыДокумента.СуммаПошлины КАК СуммаДопРасходовБезНДС,
	|
	|	ВЫБОР КОГДА &ЗакупкаПодДеятельность В (
	|		ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаНеОблагаетсяНДС),
	|		ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаОблагаетсяЕНВД))
	|	ТОГДА
	|   	&КоэффициентПересчетаВВалютуРегл * (ТоварыДокумента.СуммаПошлины + ТоварыДокумента.СуммаНДС)
	|	ИНАЧЕ
	|   	&КоэффициентПересчетаВВалютуРегл * ТоварыДокумента.СуммаПошлины
	|	КОНЕЦ КАК СтоимостьРегл,
	|
	|	ДанныеДокумента.ХозяйственнаяОперация КАК ХозяйственнаяОперация,
	|	ДанныеДокумента.Подразделение КАК Подразделение
	|ИЗ
	|	Документ.ТаможеннаяДекларацияИмпорт.Товары КАК ТоварыДокумента
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Документ.ТаможеннаяДекларацияИмпорт КАК ДанныеДокумента
	|	ПО
	|		ТоварыДокумента.Ссылка = ДанныеДокумента.Ссылка
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РегистрСведений.АналитикаУчетаНоменклатуры КАК Аналитика
	|	ПО
	|		ТоварыДокумента.Номенклатура = Аналитика.Номенклатура
	|		И ТоварыДокумента.Характеристика = Аналитика.Характеристика
	|		И ТоварыДокумента.Склад = Аналитика.Склад
	|ГДЕ
	|	ДанныеДокумента.Ссылка = &Ссылка
	|	И &ВыпущеноСТаможни
	|	И (ТоварыДокумента.СуммаПошлины <> 0
	|		ИЛИ ТоварыДокумента.СуммаНДС<>0)
	|;";
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаТоварыОрганизаций()
	
	ТекстЗапроса = "
	|ВЫБРАТЬ
	|	&Период КАК Период,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	ТоварыДокумента.Номенклатура КАК Номенклатура,
	|	ТоварыДокумента.Характеристика КАК Характеристика,
	|	ТоварыДокумента.Склад КАК Склад,
	|	ДанныеДокумента.Организация КАК Организация,
	|	ТоварыДокумента.ВидЗапасов КАК ВидЗапасов,
	|	ТоварыДокумента.НомерГТД КАК НомерГТД,
	|	ТоварыДокумента.Количество КАК Количество,
	|	КлючиАналитики.КлючАналитики КАК АналитикаУчетаНоменклатуры
	|ИЗ
	|	Документ.ТаможеннаяДекларацияИмпорт.Товары КАК ТоварыДокумента
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Документ.ТаможеннаяДекларацияИмпорт КАК ДанныеДокумента
	|	ПО
	|		ТоварыДокумента.Ссылка = ДанныеДокумента.Ссылка
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РегистрСведений.АналитикаУчетаНоменклатуры КАК КлючиАналитики
	|	ПО
	|		ТоварыДокумента.Номенклатура = КлючиАналитики.Номенклатура
	|		И ТоварыДокумента.Характеристика = КлючиАналитики.Характеристика
	|		И ТоварыДокумента.Склад = КлючиАналитики.Склад
	|ГДЕ
	|	ДанныеДокумента.Ссылка = &Ссылка
	|	И &ВыпущеноСТаможни
	|;";
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаДатыПоступленияТоваровОрганизаций()
	
	ТекстЗапроса = "
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	&Период КАК ДатаПоступления,
	|	ТаблицаТовары.Номенклатура   КАК Номенклатура,
	|	ТаблицаТовары.Характеристика КАК Характеристика,
	|	ТаблицаТовары.ВидЗапасов     КАК ВидЗапасов,
	|	ТаблицаТовары.НомерГТД       КАК НомерГТД
	|ИЗ
	|	Документ.ТаможеннаяДекларацияИмпорт.Товары КАК ТаблицаТовары
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РегистрСведений.ДатыПоступленияТоваровОрганизаций КАК ПоступленияТоваров
	|	ПО
	|		ТаблицаТовары.ВидЗапасов = ПоступленияТоваров.ВидЗапасов 
	|		И ТаблицаТовары.Номенклатура = ПоступленияТоваров.Номенклатура
	|		И ТаблицаТовары.Характеристика = ПоступленияТоваров.Характеристика 
	|		И ТаблицаТовары.НомерГТД = ПоступленияТоваров.НомерГТД 
	|
	|ГДЕ
	|	&ВыпущеноСТаможни
	|	И (ПоступленияТоваров.ДатаПоступления ЕСТЬ NULL
	|		ИЛИ ПоступленияТоваров.ДатаПоступления < &Период)
	|
	|УПОРЯДОЧИТЬ ПО
	|	ТаблицаТовары.ВидЗапасов,
	|	ТаблицаТовары.Номенклатура,
	|	ТаблицаТовары.Характеристика,
	|	ТаблицаТовары.НомерГТД
	|;
	|/////////////////////////////////////////////////////////////////////////////
	|";
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаТоварыОрганизацийКОформлению()
	
	ТекстЗапроса = "
	|ВЫБРАТЬ
	|	&Период КАК Период,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
	|	ТоварыДокумента.Номенклатура КАК Номенклатура,
	|	ТоварыДокумента.Характеристика КАК Характеристика,
	|	ДанныеДокумента.Поставщик КАК Поставщик,
	|	ТоварыДокумента.Склад КАК Склад,
	|	ДанныеДокумента.Организация КАК Организация,
	|	ТоварыДокумента.ВидЗапасов КАК ВидЗапасов,
	|
	|	ТоварыДокумента.Количество КАК Количество,
	|
	|	ТоварыДокумента.НомерГТД КАК НомерГТД
	|ИЗ
	|	Документ.ТаможеннаяДекларацияИмпорт.Товары КАК ТоварыДокумента
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Документ.ТаможеннаяДекларацияИмпорт КАК ДанныеДокумента
	|	ПО
	|		ТоварыДокумента.Ссылка = ДанныеДокумента.Ссылка
	|ГДЕ
	|	ДанныеДокумента.Ссылка = &Ссылка
	|	И &ВыпущеноСТаможни
	|;";
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаПартииТоваровОрганизацийПоследовательность()
	
	ТекстЗапроса = "
	|ВЫБРАТЬ
	|	&Период КАК Период,
	|	ТоварыДокумента.Номенклатура КАК Номенклатура,
	|	ТоварыДокумента.Характеристика КАК Характеристика,
	|	&Ссылка КАК Регистратор
	|ИЗ
	|	Документ.ТаможеннаяДекларацияИмпорт.Товары КАК ТоварыДокумента
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Документ.ТаможеннаяДекларацияИмпорт КАК ДанныеДокумента
	|	ПО
	|		ТоварыДокумента.Ссылка = ДанныеДокумента.Ссылка
	|ГДЕ
	|	ДанныеДокумента.Ссылка = &Ссылка
	|	И &ВыпущеноСТаможни
	|;";
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаНДСЗаписиКнигиПокупок()
	
	ТекстЗапроса = "
	|ВЫБРАТЬ
	|	&Период КАК Период,
	|	&Организация КАК Организация,
	|	&Контрагент КАК Поставщик,
	|	&Ссылка КАК СчетФактура,
	|	ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.ТаможенныеПлатежи) КАК ВидЦенности,
	|	Разделы.СтавкаНДС КАК СтавкаНДС,
	|	ЗНАЧЕНИЕ(Перечисление.СобытияПоНДСПокупки.ПредъявленНДСКВычету) КАК Событие,
	|	&Период КАК ДатаСобытия,
	|	0 КАК СуммаБезНДС,
	|	СУММА(ВЫРАЗИТЬ(Разделы.СуммаНДС * &КоэффициентПересчетаВВалютуРегл КАК ЧИСЛО(15, 2)))КАК НДС
	|ИЗ
	|	Документ.ТаможеннаяДекларацияИмпорт.Разделы КАК Разделы
	|ГДЕ
	|	Разделы.Ссылка = &Ссылка
	|	И &ВыпущеноСТаможни
	|	И &Организация <> ЗНАЧЕНИЕ(Справочник.Организации.УправленческаяОрганизация)
	|	И &ЗакупкаПодДеятельность = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаОблагаетсяНДС)
	|
	|СГРУППИРОВАТЬ ПО
	|	Разделы.СтавкаНДС
	|;";
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаПартииТоваровОрганизаций()
	Возврат "
		|ВЫБРАТЬ
		|	&Период КАК Период,
		|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
		|	ДанныеДокумента.Организация КАК Организация,
		|	ТоварыДокумента.ВидЗапасов КАК ВидЗапасов,
		|	ТоварыДокумента.АналитикаУчетаПартий КАК АналитикаУчетаПартий,
		|	&Ссылка КАК ДокументПоступления,
		|	ТоварыДокумента.Количество КАК Количество,
		|	&КоэффициентПересчетаВВалютуУпр * (ТоварыДокумента.ТаможеннаяСтоимость + ТоварыДокумента.СуммаНДС) КАК Стоимость,
		|	&КоэффициентПересчетаВВалютуУпр * ТоварыДокумента.ТаможеннаяСтоимость КАК СтоимостьБезНДС,
		|	(ТоварыДокумента.ТаможеннаяСтоимость + ТоварыДокумента.СуммаНДС) КАК СтоимостьРегл,
		|	ТоварыДокумента.СуммаНДС КАК НДСРегл,
		|	КлючиАналитики.КлючАналитики КАК АналитикаУчетаНоменклатуры
		|ИЗ
		|	Документ.ТаможеннаяДекларацияИмпорт.Товары КАК ТоварыДокумента
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ТаможеннаяДекларацияИмпорт КАК ДанныеДокумента
		|		ПО ТоварыДокумента.Ссылка = ДанныеДокумента.Ссылка
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаНоменклатуры КАК КлючиАналитики
		|		ПО ТоварыДокумента.Номенклатура = КлючиАналитики.Номенклатура
		|			И ТоварыДокумента.Характеристика = КлючиАналитики.Характеристика
		|			И ТоварыДокумента.Склад = КлючиАналитики.Склад
		|ГДЕ
		|	ДанныеДокумента.Ссылка = &Ссылка
		|	И &ВыпущеноСТаможни
		|;";

	КонецФункции

Функция ТекстЗапросаТаблицаПартииРасходовНаСебестоимостьТоваров()
	Возврат "
		|ВЫБРАТЬ
		|	&Период КАК Период,
		|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) 			КАК ВидДвижения,
		|	ДанныеДокумента.Организация 					КАК Организация,
		|	КлючиАналитики.КлючАналитики 					КАК АналитикаУчетаНоменклатуры,
		|	&Ссылка КАК 									ДокументПоступления,
		|	ТоварыДокумента.ВидЗапасов 						КАК ВидЗапасов,
		|	ТоварыДокумента.АналитикаУчетаПартий 			КАК АналитикаУчетаПартий,
		|	&Ссылка 										КАК ДокументПоступленияРасходов,
		|
		|	ТоварыДокумента.Количество 										КАК Количество,
		|	&КоэффициентПересчетаВВалютуУпр * ТоварыДокумента.СуммаПошлины 	КАК Стоимость,
		|	&КоэффициентПересчетаВВалютуУпр * ТоварыДокумента.СуммаПошлины 	КАК СтоимостьБезНДС,
		|	ТоварыДокумента.СуммаПошлины 									КАК СтоимостьРегл,
		|	0 																КАК НДСРегл
		|
		|ИЗ
		|	Документ.ТаможеннаяДекларацияИмпорт.Товары КАК ТоварыДокумента
		|
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ 
		|			Документ.ТаможеннаяДекларацияИмпорт КАК ДанныеДокумента
		|		ПО 
		|			ТоварыДокумента.Ссылка = ДанныеДокумента.Ссылка
		|
		|		ЛЕВОЕ СОЕДИНЕНИЕ 
		|			РегистрСведений.АналитикаУчетаНоменклатуры КАК КлючиАналитики
		|		ПО 
		|			ТоварыДокумента.Номенклатура = КлючиАналитики.Номенклатура
		|			И ТоварыДокумента.Характеристика = КлючиАналитики.Характеристика
		|			И ТоварыДокумента.Склад = КлючиАналитики.Склад
		|
		|ГДЕ
		|	ДанныеДокумента.Ссылка = &Ссылка
		|	И &ВыпущеноСТаможни
		|;";

КонецФункции

Функция ТекстЗапросаТаблицаПартииПрочихРасходов()
	Возврат "
		|ВЫБРАТЬ
		|	&Период КАК Период,
		|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
		|	ДанныеДокумента.Организация КАК Организация,
		|	ДанныеДокумента.СтатьяРасходовСбор КАК СтатьяРасходов,
		|	ДанныеДокумента.АналитикаРасходовСбор КАК АналитикаРасходов,
		|
		|	ДанныеДокумента.ТаможенныйСбор * &КоэффициентПересчетаВВалютуУпр 	КАК Сумма,
		|	ДанныеДокумента.ТаможенныйСбор * &КоэффициентПересчетаВВалютуУпр 	КАК СуммаБезНДС,
		|	ДанныеДокумента.ТаможенныйСбор * &КоэффициентПересчетаВВалютуРегл 	КАК СуммаРегл,
		|	0																 	КАК НДСРегл,
		|
		|	&Ссылка КАК ДокументПоступления,
		|	НЕОПРЕДЕЛЕНО КАК АналитикаУчетаПартий
		|
		|ИЗ
		|	Документ.ТаможеннаяДекларацияИмпорт КАК ДанныеДокумента
		|ГДЕ
		|	ДанныеДокумента.Ссылка = &Ссылка 
		|	И &ВыпущеноСТаможни 
		|	И ДанныеДокумента.ТаможенныйСбор <> 0
		|	И ДанныеДокумента.СтатьяРасходовСбор.ВариантРаспределенияРасходов = ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаСебестоимостьТоваров)
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|ВЫБРАТЬ
		|	&Период КАК Период,
		|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
		|	ДанныеДокумента.Организация КАК Организация,
		|	ДанныеДокумента.СтатьяРасходовШтраф КАК СтатьяРасходов,
		|	ДанныеДокумента.АналитикаРасходовШтраф КАК АналитикаРасходов,
		|
		|	ДанныеДокумента.ТаможенныйШтраф * &КоэффициентПересчетаВВалютуУпр			 КАК Сумма,
		|	ДанныеДокумента.ТаможенныйШтраф * &КоэффициентПересчетаВВалютуУпр 			 КАК СуммаБезНДС,
		|	ДанныеДокумента.ТаможенныйШтраф * &КоэффициентПересчетаВВалютуРегл 			 КАК СуммаРегл,
		|	0																			 КАК НДСРегл,
		|
		|	&Ссылка КАК ДокументПоступления,
		|	НЕОПРЕДЕЛЕНО КАК АналитикаУчетаПартий
		|
		|ИЗ
		|	Документ.ТаможеннаяДекларацияИмпорт КАК ДанныеДокумента
		|ГДЕ
		|	ДанныеДокумента.Ссылка = &Ссылка 
		|	И &ВыпущеноСТаможни 
		|	И ДанныеДокумента.ТаможенныйШтраф <> 0
		|	И ДанныеДокумента.СтатьяРасходовШтраф.ВариантРаспределенияРасходов 
		|				= ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаСебестоимостьТоваров)
		|;";
КонецФункции

////////////////////////////////////////////////////////////////////////////////
// Инициализация и заполнение

Процедура ЗаполнитьПоУмолчанию(Объект) Экспорт
	Объект.Менеджер = Пользователи.ТекущийПользователь();
	Объект.Подразделение = ЗначениеНастроекПовтИсп.ПодразделениеПользователя(Объект.Менеджер, Объект.Подразделение);
	
	Объект.Валюта = ДоходыИРасходыСервер.ПолучитьВалютуРегламентированногоУчета(Объект.Валюта);
	Объект.ВалютаВзаиморасчетов = Объект.Валюта;
	
	Объект.Организация = ЗначениеНастроекПовтИсп.ПолучитьОрганизациюПоУмолчанию(Объект.Организация);
	Объект.БанковскийСчетОрганизации = ЗначениеНастроекПовтИсп.ПолучитьБанковскийСчетОрганизацииПоУмолчанию(Объект.Организация, , Объект.БанковскийСчетОрганизации);
КонецПроцедуры

Процедура ЗаполнитьПоУсловиямЗакупок(Объект, УсловияЗакупок) Экспорт
	ЗаполнитьЗначенияСвойств(Объект, УсловияЗакупок, "ФормаОплаты, ГруппаФинансовогоУчета");
	Если ЗначениеЗаполнено(УсловияЗакупок.Валюта) Тогда
		Объект.Валюта = УсловияЗакупок.Валюта;
	КонецЕсли;
	Если ЗначениеЗаполнено(УсловияЗакупок.Валюта) Тогда
		Объект.ВалютаВзаиморасчетов = УсловияЗакупок.Валюта;
	КонецЕсли;
	Если Не ЗначениеЗаполнено(Объект.ХозяйственнаяОперация) Тогда
		Объект.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ОформлениеГТДБрокером;
	КонецЕсли;
	Если Не ЗначениеЗаполнено(Объект.Партнер) Тогда
		Объект.Партнер = УсловияЗакупок.Партнер;
	КонецЕсли;
	Если ЗначениеЗаполнено(УсловияЗакупок.Организация) И УсловияЗакупок.Организация<>Объект.Организация Тогда
		Объект.Организация = УсловияЗакупок.Организация;
	КонецЕсли;
	Если ЗначениеЗаполнено(УсловияЗакупок.Контрагент) И УсловияЗакупок.Контрагент<>Объект.Контрагент Тогда
		Объект.Контрагент = УсловияЗакупок.Контрагент;
	КонецЕсли;
	ПартнерыИКонтрагенты.ЗаполнитьКонтрагентаПартнераПоУмолчанию(Объект.Партнер, Объект.Контрагент);
	Объект.Договор = ЗакупкиСервер.ПолучитьДоговорПоУмолчанию(
		Объект.Договор, Объект.Партнер, Объект.Контрагент, Объект.Организация,
		ОперацииОтбораСоглашенийДоговоров(), Объект.ВалютаВзаиморасчетов, Объект.Соглашение
	);
	ЗакупкиВызовСервера.ЗаполнитьБанковскиеСчетаПоДоговору(Объект.Договор, Объект.БанковскийСчетОрганизации, Объект.БанковскийСчетКонтрагента);
	ЗначениеДатыПлатежа = ЗакупкиСервер.ПолучитьПоследнююДатуПоГрафику(Объект.Дата, УсловияЗакупок.Соглашение);
	Если ЗначениеЗаполнено(ЗначениеДатыПлатежа) Тогда
		Объект.ДатаПлатежа = ЗначениеДатыПлатежа;
	КонецЕсли;
	Объект.БанковскийСчетОрганизации = ЗначениеНастроекПовтИсп.ПолучитьБанковскийСчетОрганизацииПоУмолчанию(Объект.Организация, , Объект.БанковскийСчетОрганизации);
	Объект.БанковскийСчетКонтрагента = ЗначениеНастроекПовтИсп.ПолучитьБанковскийСчетКонтрагентаПоУмолчанию(Объект.Контрагент, , Объект.БанковскийСчетКонтрагента);
КонецПроцедуры

Процедура ЗаполнитьПоПартнеру(Объект, Партнер) Экспорт
	УсловияЗакупок = Неопределено;
	
	Если Не ЗначениеЗаполнено(Объект.Партнер) Или (Объект.Партнер <> Партнер) Тогда
		Объект.Партнер = Партнер;
	КонецЕсли;
	Если (Объект.ХозяйственнаяОперация <> Перечисления.ХозяйственныеОперации.ОформлениеГТДСамостоятельно) Тогда
		УсловияЗакупок =
			ЗакупкиСервер.ПолучитьУсловияЗакупокПоУмолчанию(
				Объект.Партнер,
				Новый Структура("ТолькоДляЗакупки, ХозяйственныеОперации, ВыбранноеСоглашение", Ложь, ОперацииОтбораСоглашенийДоговоров(), Объект.Соглашение));
	КонецЕсли;
	Если ЗначениеЗаполнено(УсловияЗакупок) Тогда
		Если Объект.Соглашение <> УсловияЗакупок.Соглашение
			И ЗначениеЗаполнено(УсловияЗакупок.Соглашение) Тогда
			
			Объект.Соглашение = УсловияЗакупок.Соглашение;
			ЗаполнитьПоУсловиямЗакупок(Объект, УсловияЗакупок);
		Иначе
			Объект.Соглашение = УсловияЗакупок.Соглашение;
		КонецЕсли;
	Иначе
		Контрагент = Объект.Контрагент;
		ПартнерыИКонтрагенты.ЗаполнитьКонтрагентаПартнераПоУмолчанию(Объект.Партнер, Объект.Контрагент);
		БанковскийСчет = ?(Контрагент = Объект.Контрагент, Объект.БанковскийСчетКонтрагента, Неопределено);
		Объект.БанковскийСчетКонтрагента = ЗначениеНастроекПовтИсп.ПолучитьБанковскийСчетКонтрагентаПоУмолчанию(Объект.Контрагент, , БанковскийСчет);
		Объект.Соглашение = Неопределено;
	КонецЕсли;
КонецПроцедуры

Функция СтруктураЗаполнения() Экспорт
	Возврат Новый Структура(
		"Организация, Поставщик,
		|ПоступлениеТоваров, ВалютаПоступления, ЦенаВключаетНДС, Товары",
		Справочники.Организации.ПустаяСсылка(), Справочники.Партнеры.ПустаяСсылка(),
		Документы.ПоступлениеТоваровУслуг.ПустаяСсылка(), Справочники.Валюты.ПустаяСсылка(), Ложь, Неопределено);
КонецФункции

Процедура ЗаполнитьПоДанным(Объект, Данные) Экспорт
	ЗаполнитьЗначенияСвойств(Объект, Данные);
	ЗаполнитьПоУмолчанию(Объект);
	Если Данные.Товары<>Неопределено Тогда
		Если Ложь <> Данные.ЦенаВключаетНДС Тогда
			Для Каждого Товар Из Данные.Товары Цикл // в поле Сумма получим сумму без НДС
				Ценообразование.ПересчитатьСуммыВСтрокеПоСуммеСНДС(Товар, Ложь, Ложь, Ложь);
			КонецЦикла;
		КонецЕсли;
		Если Объект.Валюта <> Данные.ВалютаПоступления И ЗначениеЗаполнено(Данные.ВалютаПоступления) Тогда
			ДатаДокумента = ТекущаяДата();
			КурсыСтарые = РаботаСКурсамиВалют.ПолучитьКурсВалюты(Данные.ВалютаПоступления, ДатаДокумента);
			КурсыНовые  = РаботаСКурсамиВалют.ПолучитьКурсВалюты(Объект.Валюта, ДатаДокумента);
			Ценообразование.ПересчитатьСуммыТабличнойЧастиВВалюту(
				Данные.Товары, Ложь, Данные.ВалютаПоступления, Объект.Валюта, КурсыСтарые, КурсыНовые);
		КонецЕсли;
		Раздел = Объект.Разделы.Добавить();
		Раздел.НомерРаздела = 1;
		Для каждого ЭлементБуфера Из Данные.Товары Цикл
			Товар = Объект.Товары.Добавить();
			Товар.НомерРаздела = Раздел.НомерРаздела;
			ЗаполнитьЗначенияСвойств(Товар, ЭлементБуфера,
				"Номенклатура, Характеристика, Склад, ВидЗапасов, Сделка, Упаковка, Количество, КоличествоУпаковок");
			Товар.ТаможеннаяСтоимость = ЭлементБуфера.Сумма;
			// сумму НДС не заполняем!!!
			Раздел.ТаможеннаяСтоимость = Раздел.ТаможеннаяСтоимость + Товар.ТаможеннаяСтоимость;
		КонецЦикла;
	КонецЕсли;
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// Прочее

// возвращает массив операций, соглашения и договоры по которым доступны к использованию
Функция ОперацииОтбораСоглашенийДоговоров() Экспорт
	Операции = Новый Массив;
	Операции.Добавить(Перечисления.ХозяйственныеОперации.ЗакупкаУПоставщика);
	Возврат Операции;
КонецФункции


////////////////////////////////////////////////////////////////////////////////
// Обновление информационной базы

// Переход на указание номеров ГТД с 4-мя блоками чисел
// УдалитьНомерГТД -> Товары.НомерГТД + Товары.СтранаПроисхождения + Разделы.НомерДляСФ
Процедура ПеренестиНомерГТДВТовары() Экспорт
	Запрос = Новый Запрос("
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Операция.Ссылка КАК Ссылка,
	|	Операция.УдалитьНомерГТД КАК НомерГТД,
	|	НомераГТД.Код КАК НомерДекларации,
	|	НомераГТД.СтранаПроисхождения КАК СтранаПроисхождения
	|ИЗ
	|	Документ.ТаможеннаяДекларацияИмпорт КАК Операция
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Документ.ТаможеннаяДекларацияИмпорт.Товары КАК Строки
	|	ПО
	|		Строки.Ссылка = Операция.Ссылка
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Справочник.НомераГТД КАК НомераГТД
	|	ПО
	|		НомераГТД.Ссылка = Операция.УдалитьНомерГТД
	|ГДЕ
	|	Операция.Проведен
	|	И Операция.НомерДекларации = """"
	|	И Операция.УдалитьНомерГТД <> ЗНАЧЕНИЕ(Справочник.НомераГТД.ПустаяСсылка)
	|	И Строки.СтранаПроисхождения = ЗНАЧЕНИЕ(Справочник.СтраныМира.ПустаяСсылка)
	|	И Строки.НомерГТД = ЗНАЧЕНИЕ(Справочник.НомераГТД.ПустаяСсылка)
	|");
	Операции = Запрос.Выполнить().Выбрать();
	ПустойГТД = Справочники.НомераГТД.ПустаяСсылка();
	Пока Операции.Следующий() Цикл
		Декларация = Операции.Ссылка.ПолучитьОбъект();
		Декларация.НомерДекларации = Операции.НомерДекларации;
		Для Каждого Товар Из Декларация.Товары Цикл
			Товар.СтранаПроисхождения = Операции.СтранаПроисхождения;
			Товар.НомерГТД = Операции.НомерГТД;
		КонецЦикла;
		Для Каждого Раздел Из Декларация.Разделы Цикл
			Раздел.НомерДляСФ = Декларация.НомерДекларации;
		КонецЦикла;
		Декларация.УдалитьНомерГТД = ПустойГТД;
		Декларация.ОбменДанными.Загрузка = Истина;
		Декларация.Записать(РежимЗаписиДокумента.Запись);
	КонецЦикла;
КонецПроцедуры

#КонецЕсли