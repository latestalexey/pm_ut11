#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда


////////////////////////////////////////////////////////////////////////////////
// ПРОГРАММНЫЙ ИНТЕРФЕЙС

// Возвращает массив имен ролей с правом "Добавление" для данного документа
//
// Возвращаемое значение:
//	Массив - Массив с именами ролей
//
Функция ИменаРолейСПравомДобавления() Экспорт
	
	МассивРолей = Новый Массив;
	МассивРолей.Добавить("ПолныеПрава");
	МассивРолей.Добавить("ДобавлениеИзменениеЦенНоменклатуры");
	Возврат МассивРолей;
	
КонецФункции

////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

////////////////////////////////////////////////////////////////////////////////
// Проведение

// Инициализирует таблицы значений, содержащие данные табличных частей документа.
// Таблицы значений сохраняет в свойствах структуры "ДополнительныеСвойства".
//
Процедура ИнициализироватьДанныеДокумента(ДокументСсылка, ДополнительныеСвойства) Экспорт

	Запрос = Новый Запрос(
	// 0 ТаблицаЦеныНоменклатуры
	"ВЫБРАТЬ
	|	ТаблицаТовары.Номенклатура          КАК Номенклатура,
	|	ТаблицаТовары.Характеристика        КАК Характеристика,
	|	ТаблицаТовары.Упаковка              КАК Упаковка,
	|	ТаблицаТовары.ВидЦены               КАК ВидЦены,
	|	ТаблицаТовары.Цена                  КАК Цена,
	|	ТаблицаТовары.ВидЦены.ВалютаЦены    КАК Валюта,
	|	ТаблицаТовары.Ссылка.Дата           КАК ПЕРИОД
	|ИЗ
	|	Документ.УстановкаЦенНоменклатуры.Товары КАК ТаблицаТовары
	|ГДЕ
	|	//АСТЕК условия в нашей бизнес логике не участвуют
	|	//ТаблицаТовары.Ссылка.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыУстановокЦенНоменклатуры.Согласован)И 
	|	ТаблицаТовары.Ссылка = &Ссылка
	|	//И (ТаблицаТовары.Номенклатура.ИспользованиеХарактеристик = ЗНАЧЕНИЕ(Перечисление.ВариантыИспользованияХарактеристикНоменклатуры.НеИспользовать)
	|	//	ИЛИ (ТаблицаТовары.Номенклатура.ИспользованиеХарактеристик <> ЗНАЧЕНИЕ(Перечисление.ВариантыИспользованияХарактеристикНоменклатуры.НеИспользовать)
	|	//	И ТаблицаТовары.Характеристика <> ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка)))
	|");

	Запрос.УстановитьПараметр("Ссылка", ДокументСсылка);
	Результат = Запрос.ВыполнитьПакет();

	ДополнительныеСвойства.ТаблицыДляДвижений.Вставить("ТаблицаЦеныНоменклатуры", Результат[0].Выгрузить());

КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// Печать

// Процедура печати документа.
//
Процедура Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт
	
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "ПереоценкаТоваровВРознице") Тогда
		
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(
			КоллекцияПечатныхФорм,
			"ПереоценкаТоваровВРознице",
			"Переоценка товаров в рознице",
			СформироватьПечатнуюФормуПереоценкиТоваровВРознице(МассивОбъектов, ОбъектыПечати, ПараметрыПечати)
		);
		
	КонецЕсли;
	
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "УстановкаЦенНоменклатуры") Тогда
			УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(
			КоллекцияПечатныхФорм,
			"УстановкаЦенНоменклатуры",
			"Установка цен номенклатуры",
			СформироватьПечатнуюФормуУстановкиЦенНоменклатуры(МассивОбъектов, ОбъектыПечати, ПараметрыПечати)
		);
	КонецЕсли;

	
КонецПроцедуры

// Функция формирует табличный документ с печатной формой переоценки в рознице.
//
// Возвращаемое значение:
//  Табличный документ.
//
Функция СформироватьПечатнуюФормуПереоценкиТоваровВРознице(МассивОбъектов, ОбъектыПечати, ПараметрыПечати)
	
	ТабДокумент = Новый ТабличныйДокумент;
	ТабДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_ПереоценкаТоваровВРознице_ПереоценкаТоваровВРознице";
	
	Макет = УправлениеПечатью.ПолучитьМакет("Документ.УстановкаЦенНоменклатуры.ПФ_MXL_ПереоценкаТоваровВРознице");
	
	ИспользоватьАссортимент = ПолучитьФункциональнуюОпцию("КонтролироватьАссортимент", Новый Структура("Склад", ПараметрыПечати.РозничныйМагазин));
	Если ИспользоватьАссортимент <> Истина Тогда
		ИспользоватьАссортимент = Ложь;
	КонецЕсли;
	
	
	ПервыйДокумент = Истина;
	Для Каждого УстановкаЦенНоменклатуры Из МассивОбъектов Цикл
		
		Если Не ПервыйДокумент Тогда
			ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		
		ПервыйДокумент = Ложь;
		НомерСтрокиНачало = ТабДокумент.ВысотаТаблицы + 1;
		
		Запрос = Новый Запрос;
		Запрос.УстановитьПараметр("УстановкаЦенНоменклатуры", УстановкаЦенНоменклатуры);
		Запрос.УстановитьПараметр("РозничныйМагазин",         ПараметрыПечати.РозничныйМагазин);
		Запрос.УстановитьПараметр("Организация",              ПараметрыПечати.Организация);
		Запрос.УстановитьПараметр("КонецПредыдущегоДня",      КонецДня(НачалоДня(УстановкаЦенНоменклатуры.Дата) - 1));
		Если ИспользоватьАссортимент Тогда
			Запрос.УстановитьПараметр("ФорматМагазина", 	  ПараметрыПечати.РозничныйМагазин.ФорматМагазина);
			Запрос.УстановитьПараметр("ДатаДокумента",        УстановкаЦенНоменклатуры.Дата);
			
			ТекстЗапроса = 
			"ВЫБРАТЬ
			|	УстановкаЦенНоменклатуры.Номер КАК Номер,
			|	УстановкаЦенНоменклатуры.Дата КАК Дата,
			|	УстановкаЦенНоменклатуры.Ссылка КАК Ссылка,
			|	УстановкаЦенНоменклатуры.Ответственный КАК ОтветственныйПредставление,
			|	&Организация КАК Организация,
			|	&Организация КАК Поставщик,
			|	&РозничныйМагазин КАК Получатель,
			|	&РозничныйМагазин КАК ПредставлениеПолучателя
			|ИЗ
			|	Документ.УстановкаЦенНоменклатуры КАК УстановкаЦенНоменклатуры
			|ГДЕ
			|	УстановкаЦенНоменклатуры.Ссылка = &УстановкаЦенНоменклатуры
			|;
			|ВЫБРАТЬ
			|	УстановкаЦенНоменклатурыТовары.Номенклатура КАК Номенклатура,
			|	Ассортимент.ВидЦены КАК ВидЦены
			|ПОМЕСТИТЬ НоменклатураВидыЦен
			|ИЗ
			|	Документ.УстановкаЦенНоменклатуры.Товары КАК УстановкаЦенНоменклатурыТовары
			|								ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.Ассортимент КАК Ассортимент
			|									ПО УстановкаЦенНоменклатурыТовары.Номенклатура = Ассортимент.Номенклатура
			|									И Ассортимент.ОбъектПланирования = &ФорматМагазина
			|									И (Ассортимент.Регистратор В
			|										(ВЫБРАТЬ ПЕРВЫЕ 1
			|											Ассорти.Регистратор
			|										ИЗ
			|											РегистрСведений.Ассортимент КАК Ассорти
			|										ГДЕ
			|											Ассорти.Номенклатура = Ассортимент.Номенклатура
			|											И Ассорти.ОбъектПланирования = Ассортимент.ОбъектПланирования
			|											И Ассорти.Период <= &ДатаДокумента
			|										УПОРЯДОЧИТЬ ПО
			|											Ассорти.Период УБЫВ,
			|											Ассорти.ДатаРегистратора УБЫВ,
			|											Ассорти.Регистратор УБЫВ))
			|ГДЕ
			|	УстановкаЦенНоменклатурыТовары.Ссылка = &УстановкаЦенНоменклатуры
			|	
			|СГРУППИРОВАТЬ ПО
			|	УстановкаЦенНоменклатурыТовары.Номенклатура,
			|	Ассортимент.ВидЦены
			|;
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	ВложенныйЗапрос.НомерСтроки КАК НомерСтроки,
			|	ВложенныйЗапрос.Номенклатура КАК Номенклатура,
			|	ВложенныйЗапрос.Номенклатура.Код КАК Код,
			|	ВложенныйЗапрос.Номенклатура.Артикул КАК Артикул,
			|	ВложенныйЗапрос.Номенклатура.НаименованиеПолное КАК ПолноеНаименованиеНоменклатуры,
			|	ВложенныйЗапрос.Номенклатура.ЕдиницаИзмерения.Представление КАК ЕдиницаИзмерения,
			|	ВложенныйЗапрос.Характеристика КАК Характеристика,
			|	ВложенныйЗапрос.Характеристика.НаименованиеПолное КАК ПолноеНаименованиеХарактеристики,
			|	1 КАК Коэффициент,
			|	ВложенныйЗапрос.НоваяЦенаВРознице КАК ЦенаВРознице,
			|	ЕСТЬNULL(ТоварыОрганизацийОстатки.КоличествоОстаток, 0) * (ВложенныйЗапрос.НоваяЦенаВРознице - ЕСТЬNULL(ЦеныНоменклатурыСрезПоследних.Цена, 0) / ЕСТЬNULL(ЦеныНоменклатурыСрезПоследних.Упаковка.Коэффициент, 1)) КАК ОтклонениеСтоимости,
			|	ЕСТЬNULL(ЦеныНоменклатурыСрезПоследних.Цена, 0) / ЕСТЬNULL(ЦеныНоменклатурыСрезПоследних.Упаковка.Коэффициент, 1) КАК ЦенаВРозницеСтарая,
			|	ЕСТЬNULL(ТоварыОрганизацийОстатки.КоличествоОстаток, 0) КАК Количество
			|ИЗ
			|	Документ.УстановкаЦенНоменклатуры КАК УстановкаЦенНоменклатуры
			|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
			|			УстановкаЦенНоменклатурыТовары.Ссылка КАК Ссылка,
			|			УстановкаЦенНоменклатурыТовары.НомерСтроки КАК НомерСтроки,
			|			УстановкаЦенНоменклатурыТовары.Номенклатура КАК Номенклатура,
			|			УстановкаЦенНоменклатурыТовары.Характеристика КАК Характеристика,
			|			УстановкаЦенНоменклатурыТовары.Цена / ЕСТЬNULL(УстановкаЦенНоменклатурыТовары.Упаковка.Коэффициент, 1) КАК НоваяЦенаВРознице,
			|			УстановкаЦенНоменклатурыТовары.ВидЦены КАК ВидЦены
			|		ИЗ
			|			Документ.УстановкаЦенНоменклатуры.Товары КАК УстановкаЦенНоменклатурыТовары
			|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ НоменклатураВидыЦен КАК НоменклатураВидыЦен
			|			ПО НоменклатураВидыЦен.Номенклатура = УстановкаЦенНоменклатурыТовары.Номенклатура
			|			И НоменклатураВидыЦен.ВидЦены = УстановкаЦенНоменклатурыТовары.ВидЦены
			|		ГДЕ
			|			УстановкаЦенНоменклатурыТовары.Ссылка = &УстановкаЦенНоменклатуры
			|			) КАК ВложенныйЗапрос
			|		ПО (ВложенныйЗапрос.Ссылка = УстановкаЦенНоменклатуры.Ссылка)
			|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЦеныНоменклатуры.СрезПоследних(
			|				КОНЕЦПЕРИОДА(&КонецПредыдущегоДня, ДЕНЬ),
			|				(Номенклатура, ВидЦены) В
			|					(ВЫБРАТЬ
			|						Т.Номенклатура,
			|						Т.ВидЦены
			|					ИЗ
			|						НоменклатураВидыЦен КАК Т
			|					)) КАК ЦеныНоменклатурыСрезПоследних
			|		ПО (ВложенныйЗапрос.Номенклатура = ЦеныНоменклатурыСрезПоследних.Номенклатура)
			|			И (ВложенныйЗапрос.Характеристика = ЦеныНоменклатурыСрезПоследних.Характеристика)
			|			И (ВложенныйЗапрос.ВидЦены = ЦеныНоменклатурыСрезПоследних.ВидЦены)
			|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ТоварыОрганизаций.Остатки(
			|				&КонецПредыдущегоДня,
			|				Организация = &Организация
			|					И Склад = &РозничныйМагазин) КАК ТоварыОрганизацийОстатки
			|		ПО (ВложенныйЗапрос.Номенклатура = ТоварыОрганизацийОстатки.Номенклатура)
			|			И (ВложенныйЗапрос.Характеристика = ТоварыОрганизацийОстатки.Характеристика)
			|ГДЕ
			|	УстановкаЦенНоменклатуры.Ссылка = &УстановкаЦенНоменклатуры
			|	И ЕСТЬNULL(ТоварыОрганизацийОстатки.КоличествоОстаток, 0) <> 0
			|	И ЕСТЬNULL(ТоварыОрганизацийОстатки.КоличествоОстаток, 0) * (ВложенныйЗапрос.НоваяЦенаВРознице - ЕСТЬNULL(ЦеныНоменклатурыСрезПоследних.Цена, 0) / ЕСТЬNULL(ЦеныНоменклатурыСрезПоследних.Упаковка.Коэффициент, 1)) <> 0

			|УПОРЯДОЧИТЬ ПО
			|	ВложенныйЗапрос.НомерСтроки
			|";
			ИндексПоследнегоРезультата = 2;
		Иначе
			Запрос.УстановитьПараметр("ВидЦены",                  ПараметрыПечати.РозничныйМагазин.РозничныйВидЦены);
			ТекстЗапроса = 
			"ВЫБРАТЬ
			|	УстановкаЦенНоменклатуры.Номер         КАК Номер,
			|	УстановкаЦенНоменклатуры.Дата          КАК Дата,
			|	УстановкаЦенНоменклатуры.Ссылка        КАК Ссылка,
			|	УстановкаЦенНоменклатуры.Ответственный КАК ОтветственныйПредставление,
			|	&Организация                           КАК Организация,
			|	&Организация                           КАК Поставщик,
			|	&РозничныйМагазин                      КАК Получатель,
			|	&РозничныйМагазин                      КАК ПредставлениеПолучателя
			|ИЗ
			|	Документ.УстановкаЦенНоменклатуры КАК УстановкаЦенНоменклатуры
			|ГДЕ
			|	УстановкаЦенНоменклатуры.Ссылка = &УстановкаЦенНоменклатуры
			|
			|;
			|ВЫБРАТЬ
			|	ВложенныйЗапрос.НомерСтроки                                 КАК НомерСтроки,
			|	ВложенныйЗапрос.Номенклатура                                КАК Номенклатура,
			|	ВложенныйЗапрос.Номенклатура.Код                            КАК Код,
			|	ВложенныйЗапрос.Номенклатура.Артикул                        КАК Артикул,
			|	ВложенныйЗапрос.Номенклатура.НаименованиеПолное             КАК ПолноеНаименованиеНоменклатуры,
			|	ВложенныйЗапрос.Номенклатура.ЕдиницаИзмерения.Представление КАК ЕдиницаИзмерения,
			|	ВложенныйЗапрос.Характеристика                              КАК Характеристика,
			|	ВложенныйЗапрос.Характеристика.НаименованиеПолное           КАК ПолноеНаименованиеХарактеристики,
			|	1                                                           КАК Коэффициент,
			|	ВложенныйЗапрос.НоваяЦенаВРознице                           КАК ЦенаВРознице,
			|	ЕСТЬNULL(ТоварыОрганизацийОстатки.КоличествоОстаток, 0) * (ВложенныйЗапрос.НоваяЦенаВРознице - (ЕСТЬNULL(ЦеныНоменклатурыСрезПоследних.Цена, 0) / ЕСТЬNULL(ЦеныНоменклатурыСрезПоследних.Упаковка.Коэффициент, 1))) КАК ОтклонениеСтоимости,
			|	ЕСТЬNULL(ЦеныНоменклатурыСрезПоследних.Цена, 0) / ЕСТЬNULL(ЦеныНоменклатурыСрезПоследних.Упаковка.Коэффициент, 1) КАК ЦенаВРозницеСтарая,
			|	ЕСТЬNULL(ТоварыОрганизацийОстатки.КоличествоОстаток, 0) КАК Количество
			|ИЗ
			|	Документ.УстановкаЦенНоменклатуры КАК УстановкаЦенНоменклатуры
			|	
			|	ЛЕВОЕ СОЕДИНЕНИЕ
			|		(ВЫБРАТЬ
			|				УстановкаЦенНоменклатурыТовары.Ссылка КАК Ссылка,
			|				УстановкаЦенНоменклатурыТовары.НомерСтроки КАК НомерСтроки,
			|				УстановкаЦенНоменклатурыТовары.Номенклатура КАК Номенклатура,
			|				УстановкаЦенНоменклатурыТовары.Характеристика КАК Характеристика,
			|				УстановкаЦенНоменклатурыТовары.Цена / ЕСТЬNULL(УстановкаЦенНоменклатурыТовары.Упаковка.Коэффициент, 1) КАК НоваяЦенаВРознице
			|			ИЗ
			|				Документ.УстановкаЦенНоменклатуры.Товары КАК УстановкаЦенНоменклатурыТовары
			|			ГДЕ
			|				УстановкаЦенНоменклатурыТовары.Ссылка = &УстановкаЦенНоменклатуры
			|				И УстановкаЦенНоменклатурыТовары.ВидЦены = &ВидЦены
			|		) КАК ВложенныйЗапрос
			|		ПО ВложенныйЗапрос.Ссылка = УстановкаЦенНоменклатуры.Ссылка
			|		
			|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЦеныНоменклатуры.СрезПоследних(КОНЕЦПЕРИОДА(&КонецПредыдущегоДня, ДЕНЬ), (Номенклатура, Характеристика, ВидЦены) В (ВЫБРАТЬ Т.Номенклатура, Т.Характеристика, Т.ВидЦены ИЗ Документ.УстановкаЦенНоменклатуры.Товары КАК Т ГДЕ Т.Ссылка = &УстановкаЦенНоменклатуры И Т.ВидЦены = &ВидЦены)) КАК ЦеныНоменклатурыСрезПоследних
			|		ПО ВложенныйЗапрос.Номенклатура = ЦеныНоменклатурыСрезПоследних.Номенклатура
			|			И ВложенныйЗапрос.Характеристика = ЦеныНоменклатурыСрезПоследних.Характеристика
			|		
			|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ТоварыОрганизаций.Остатки(&КонецПредыдущегоДня, Организация = &Организация И Склад = &РозничныйМагазин) КАК ТоварыОрганизацийОстатки
			|		ПО ВложенныйЗапрос.Номенклатура = ТоварыОрганизацийОстатки.Номенклатура
			|			И ВложенныйЗапрос.Характеристика = ТоварыОрганизацийОстатки.Характеристика
			|		
			|ГДЕ
			|	УстановкаЦенНоменклатуры.Ссылка = &УстановкаЦенНоменклатуры
			|	И ЕСТЬNULL(ТоварыОрганизацийОстатки.КоличествоОстаток, 0) <> 0
			|	И ЕСТЬNULL(ТоварыОрганизацийОстатки.КоличествоОстаток, 0) * (ВложенныйЗапрос.НоваяЦенаВРознице - (ЕСТЬNULL(ЦеныНоменклатурыСрезПоследних.Цена, 0) / ЕСТЬNULL(ЦеныНоменклатурыСрезПоследних.Упаковка.Коэффициент, 1))) <> 0
			|	
			|УПОРЯДОЧИТЬ ПО
			|	ВложенныйЗапрос.НомерСтроки
			|
			|";
			ИндексПоследнегоРезультата = 1;
		КонецЕсли;
		
		Запрос.Текст = ТекстЗапроса;
		
		УстановитьПривилегированныйРежим(Истина);
		РезультатПакетаЗапросов = Запрос.ВыполнитьПакет();
		УстановитьПривилегированныйРежим(Ложь);
		
		Шапка = РезультатПакетаЗапросов[0].Выбрать();
		Шапка.Следующий();
		
		ОбластьМакета = Макет.ПолучитьОбласть("Заголовок");
		ШтрихкодированиеПечатныхФорм.ВывестиШтрихкодВТабличныйДокумент(ТабДокумент, Макет, ОбластьМакета, Шапка.Ссылка);
		ОбластьМакета.Параметры.ТекстЗаголовка = ОбщегоНазначенияУТКлиентСервер.СформироватьЗаголовокДокумента(Шапка, НСтр("ru = 'Переоценка товаров в рознице'"));
		ТабДокумент.Вывести(ОбластьМакета);
		
		ОбластьМакета = Макет.ПолучитьОбласть("Поставщик");
		ОбластьМакета.Параметры.Заполнить(Шапка);
		ОбластьМакета.Параметры.ПредставлениеПоставщика = ФормированиеПечатныхФорм.ОписаниеОрганизации(ФормированиеПечатныхФорм.СведенияОЮрФизЛице(ПараметрыПечати.Организация, Шапка.Дата), "ПолноеНаименование,");
		ТабДокумент.Вывести(ОбластьМакета);
		
		ОбластьМакета = Макет.ПолучитьОбласть("Покупатель");
		ОбластьМакета.Параметры.ПредставлениеПолучателя = ПараметрыПечати.РозничныйМагазин;
		ТабДокумент.Вывести(ОбластьМакета);
		
		// Шапка таблицы
		ИмяДополнительнойКолонки = ФормированиеПечатныхФорм.ИмяДополнительнойКолонки();
		ВыводитьКоды = ?(ЗначениеЗаполнено(ИмяДополнительнойКолонки),Истина, Ложь);
		
		ОбластьНомера = Макет.ПолучитьОбласть("ШапкаТаблицы|ОбластьНомера");
		ОбластьКодов  = Макет.ПолучитьОбласть("ШапкаТаблицы|ОбластьКодов");
		ОбластьДанных = Макет.ПолучитьОбласть("ШапкаТаблицы|ОбластьДанных");
		
		ТабДокумент.Вывести(ОбластьНомера);
		Если ВыводитьКоды Тогда
			ОбластьКодов.Параметры.ИмяКолонкиКодов = ИмяДополнительнойКолонки;
			ТабДокумент.Присоединить(ОбластьКодов);
		КонецЕсли;
		ТабДокумент.Присоединить(ОбластьДанных);
		
		// Строки таблицы
		ОбластьНомера = Макет.ПолучитьОбласть("Строка|ОбластьНомера");
		ОбластьКодов  = Макет.ПолучитьОбласть("Строка|ОбластьКодов");
		ОбластьДанных = Макет.ПолучитьОбласть("Строка|ОбластьДанных");
		
		ИтогОтклонениеСтоимости = 0;
		НомерСтроки = 0;
		ВыборкаСтрокТовары = РезультатПакетаЗапросов[ИндексПоследнегоРезультата].Выбрать();
		Пока ВыборкаСтрокТовары.Следующий() Цикл
			
			НомерСтроки = НомерСтроки + 1;
			
			ОбластьНомера.Параметры.НомерСтроки = НомерСтроки;
			ТабДокумент.Вывести(ОбластьНомера);
			Если ВыводитьКоды Тогда
				Если ИмяДополнительнойКолонки = "Артикул" Тогда
					ОбластьКодов.Параметры.Артикул = ВыборкаСтрокТовары.Артикул;
				Иначе
					ОбластьКодов.Параметры.Артикул = ВыборкаСтрокТовары.Код;
				КонецЕсли;
				ТабДокумент.Присоединить(ОбластьКодов);
			КонецЕсли;
			ОбластьДанных.Параметры.Заполнить(ВыборкаСтрокТовары);
			ОбластьДанных.Параметры.Товар = НоменклатураКлиентСервер.ПредставлениеНоменклатурыДляПечати(
				ВыборкаСтрокТовары.ПолноеНаименованиеНоменклатуры,
				ВыборкаСтрокТовары.ПолноеНаименованиеХарактеристики
			);
			ТабДокумент.Присоединить(ОбластьДанных);
			
			ИтогОтклонениеСтоимости = ИтогОтклонениеСтоимости + ВыборкаСтрокТовары.ОтклонениеСтоимости;
			
		КонецЦикла;
		
		// Итог
		ОбластьНомера = Макет.ПолучитьОбласть("Итог|ОбластьНомера");
		ОбластьКодов  = Макет.ПолучитьОбласть("Итог|ОбластьКодов");
		ОбластьДанных = Макет.ПолучитьОбласть("Итог|ОбластьДанных");
		
		ТабДокумент.Вывести(ОбластьНомера);
		Если ВыводитьКоды Тогда
			ТабДокумент.Присоединить(ОбластьКодов);
		КонецЕсли;
		ОбластьДанных.Параметры.ИтогОтклонениеСтоимости = ФормированиеПечатныхФорм.ФорматСумм(ИтогОтклонениеСтоимости, ПараметрыПечати.РозничныйМагазин.РозничныйВидЦены.ВалютаЦены);
		ТабДокумент.Присоединить(ОбластьДанных);
		
		
		ОбластьМакета = Макет.ПолучитьОбласть("Подписи");
		ОбластьМакета.Параметры.Заполнить(Шапка);
		ТабДокумент.Вывести(ОбластьМакета);
		
		УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабДокумент, НомерСтрокиНачало, ОбъектыПечати, УстановкаЦенНоменклатуры);
		
	КонецЦикла;
	
	Возврат ТабДокумент;
	
КонецФункции

// Функция формирует табличный документ с печатной формой установки цен номенклатуры.
//
// Возвращаемое значение:
//  Табличный документ.
//
Функция СформироватьПечатнуюФормуУстановкиЦенНоменклатуры(МассивОбъектов, ОбъектыПечати, ПараметрыПечати) Экспорт
	
	ТабДокумент = Новый ТабличныйДокумент;
	ТабДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_УстановкаЦенНоменклатуры";
	
	Макет = УправлениеПечатью.ПолучитьМакет("Документ.УстановкаЦенНоменклатуры.ПФ_MXL_УстановкаЦенНоменклатуры");
	
	ВидыЦен = Новый Массив;
	ДеревоНастроек = ПолучитьИзВременногоХранилища(ПараметрыПечати.ДеревоНастроек);
	Для Каждого СтрокаДерева Из ДеревоНастроек.Строки Цикл
		Если СтрокаДерева.ВыводитьНаПечать Тогда
			ВидыЦен.Добавить(СтрокаДерева.Параметр);
		КонецЕсли;
	КонецЦикла;
	
	ПервыйДокумент = Истина;
	Для Каждого УстановкаЦенНоменклатуры Из МассивОбъектов Цикл
		
		Если Не ПервыйДокумент Тогда
			ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		
		ПервыйДокумент = Ложь;
		
		НомерСтрокиНачало = ТабДокумент.ВысотаТаблицы + 1;
		
		Запрос = Новый Запрос(
		"ВЫБРАТЬ
		|	УстановкаЦенНоменклатуры.Ссылка       КАК Ссылка,
		|	УстановкаЦенНоменклатуры.Ссылка.Номер КАК Номер,
		|	УстановкаЦенНоменклатуры.Ссылка.Дата  КАК Дата,
		|	УстановкаЦенНоменклатуры.Ссылка.Ответственный.ФизическоеЛицо.Наименование КАК ОтветственныйПредставление
		|ИЗ
		|	Документ.УстановкаЦенНоменклатуры КАК УстановкаЦенНоменклатуры
		|ГДЕ
		|	УстановкаЦенНоменклатуры.Ссылка = &УстановкаЦенНоменклатуры
		|;
		|
		|ВЫБРАТЬ
		|	Товары.НомерСтроки                       КАК НомерСтроки,
		|	Товары.Номенклатура                      КАК Номенклатура,
		|	Товары.Характеристика                    КАК Характеристика,
		|	Товары.Упаковка                          КАК Упаковка,
		|	Товары.Цена                              КАК Цена,
		|	Товары.ВидЦены                           КАК ВидЦены,
		|	
		|	ВЫБОР КОГДА ЦеныНоменклатурыСрезПоследних.Упаковка = Товары.Упаковка ТОГДА
		|		ЦеныНоменклатурыСрезПоследних.Цена
		|	ИНАЧЕ
		|		ЦеныНоменклатурыСрезПоследних.Цена/ЕСТЬNULL(ЦеныНоменклатурыСрезПоследних.Упаковка.Коэффициент,1)*ЕСТЬNULL(Товары.Упаковка.Коэффициент,1)
		|	КОНЕЦ КАК ДействующаяЦена,
		|	
		|	ВЫРАЗИТЬ(ВЫБОР КОГДА ЦеныНоменклатурыСрезПоследних.Цена <> 0 Тогда 100*(Товары.Цена - ВЫБОР КОГДА ЦеныНоменклатурыСрезПоследних.Упаковка = Товары.Упаковка ТОГДА
		|		ЦеныНоменклатурыСрезПоследних.Цена
		|	ИНАЧЕ
		|		ЦеныНоменклатурыСрезПоследних.Цена/ЕСТЬNULL(ЦеныНоменклатурыСрезПоследних.Упаковка.Коэффициент,1)*ЕСТЬNULL(Товары.Упаковка.Коэффициент,1)
		|	КОНЕЦ)/ 
		|	
		|	ВЫБОР КОГДА ЦеныНоменклатурыСрезПоследних.Упаковка = Товары.Упаковка ТОГДА
		|		ЦеныНоменклатурыСрезПоследних.Цена
		|	ИНАЧЕ
		|		ЦеныНоменклатурыСрезПоследних.Цена/ЕСТЬNULL(ЦеныНоменклатурыСрезПоследних.Упаковка.Коэффициент,1)*ЕСТЬNULL(Товары.Упаковка.Коэффициент,1)
		|	КОНЕЦ ИНАЧЕ 0.00 КОНЕЦ КАК Число(10,2)) КАК ПроцентИзменения
		|	
		|ПОМЕСТИТЬ Товары
		|ИЗ
		|	Документ.УстановкаЦенНоменклатуры.Товары КАК Товары
		|	
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЦеныНоменклатуры.СрезПоследних(&ДатаСреза, (Номенклатура, Характеристика, ВидЦены) В (ВЫБРАТЬ Т.Номенклатура, Т.Характеристика, Т.ВидЦены ИЗ Документ.УстановкаЦенНоменклатуры.Товары КАК Т ГДЕ Т.Ссылка = &УстановкаЦенНоменклатуры И Т.ВидЦены В (&ВидыЦен))) КАК ЦеныНоменклатурыСрезПоследних
		|
		|		ПО Товары.Номенклатура      = ЦеныНоменклатурыСрезПоследних.Номенклатура
		|			И Товары.Характеристика = ЦеныНоменклатурыСрезПоследних.Характеристика
		|			И Товары.ВидЦены        = ЦеныНоменклатурыСрезПоследних.ВидЦены
		|
		|ГДЕ
		|	Товары.Ссылка = &УстановкаЦенНоменклатуры
		|	И Товары.ВидЦены В (&ВидыЦен)
		|	И (
		|		ВЫБОР
		|			КОГДА Товары.Номенклатура.ИспользованиеХарактеристик <> ЗНАЧЕНИЕ(Перечисление.ВариантыИспользованияХарактеристикНоменклатуры.НеИспользовать)
		|				И Товары.Характеристика = ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка) ТОГДА Ложь
		|			ИНАЧЕ Истина
		|		КОНЕЦ
		|	)
		|;
		|
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	Товары.ВидЦены КАК ВидЦены
		|ИЗ
		|	Товары КАК Товары
		|ГДЕ
		|	Товары.ВидЦены В (&ВидыЦен)
		|	И Товары.ПроцентИзменения <> 0 ИЛИ &Все
		|УПОРЯДОЧИТЬ ПО
		|	Товары.ВидЦены.РеквизитДопУпорядочивания
		|;
		|
		|ВЫБРАТЬ
		|	Товары.Номенклатура                      КАК Номенклатура,
		|	Товары.Характеристика                    КАК Характеристика,
		|	Товары.Номенклатура.НаименованиеПолное   КАК ПолноеНаименованиеНоменклатуры,
		|	Товары.Характеристика.НаименованиеПолное КАК ПолноеНаименованиеХарактеристики,
		|	Товары.Номенклатура.Код                  КАК Код,
		|	Товары.Номенклатура.Артикул              КАК Артикул,
		|	Товары.Упаковка                          КАК Упаковка,
		|	Товары.Номенклатура.ЕдиницаИзмерения     КАК ЕдиницаИзмерения,
		|	Товары.Цена                              КАК Цена,
		|	Товары.ВидЦены                           КАК ВидЦены,
		|	Товары.ДействующаяЦена                   КАК СтараяЦена,
		|	Товары.ПроцентИзменения                  КАК ПроцентИзменения
		|	
		|ИЗ
		|	Товары КАК Товары
		|ГДЕ
		|	Товары.ПроцентИзменения <> 0 ИЛИ &Все
		|УПОРЯДОЧИТЬ ПО
		|	Товары.НомерСтроки
		|
		|ИТОГИ ПО
		|	Номенклатура, Характеристика");
		
		Запрос.УстановитьПараметр("УстановкаЦенНоменклатуры", УстановкаЦенНоменклатуры);
		Запрос.УстановитьПараметр("ДатаСреза",                УстановкаЦенНоменклатуры.Дата - 1);
		Запрос.УстановитьПараметр("ВидыЦен",                  ВидыЦен);
		Запрос.УстановитьПараметр("Все",                      Не ПараметрыПечати.ПечататьТолькоИзмененныеЦены);
		РезультатЗапроса = Запрос.ВыполнитьПакет();
		
		
		Шапка = РезультатЗапроса[0].Выбрать();
		Шапка.Следующий();
		
		Если ПараметрыПечати.ВыводитьШапку Тогда
			ОбластьМакета = Макет.ПолучитьОбласть("Заголовок");
			ШтрихкодированиеПечатныхФорм.ВывестиШтрихкодВТабличныйДокумент(ТабДокумент, Макет, ОбластьМакета, Шапка.Ссылка);
			ОбластьМакета.Параметры.ТекстЗаголовка = ОбщегоНазначенияУТКлиентСервер.СформироватьЗаголовокДокумента(Шапка, НСтр("ru = 'Установка цен номенклатуры'"));
			ТабДокумент.Вывести(ОбластьМакета);
		КонецЕсли;
		
		// Шапка таблицы
		ИмяДополнительнойКолонки = ФормированиеПечатныхФорм.ИмяДополнительнойКолонки();
		ВыводитьКоды = ?(ЗначениеЗаполнено(ИмяДополнительнойКолонки), Истина, Ложь);
		
		ШапкаНомера  = Макет.ПолучитьОбласть("ШапкаТаблицы|ОбластьНомера");
		ШапкаКодов   = Макет.ПолучитьОбласть("ШапкаТаблицы|ОбластьКодов");
		ШапкаТовар   = Макет.ПолучитьОбласть("ШапкаТаблицы|ОбластьТовар");
		ШапкаВидЦены = Макет.ПолучитьОбласть("ШапкаТаблицы|ОбластьВидЦены" + ?(Не ПараметрыПечати.ВыводитьШапку,"УникальныйИдентификатор",""));
		ШапкаУникальныеИдентификаторы = Макет.ПолучитьОбласть("ШапкаТаблицы|УникальныеИдентификаторы");
		
		ТабДокумент.Вывести(ШапкаНомера);
		Если ВыводитьКоды Тогда
			ШапкаКодов.Параметры.ИмяКолонкиКодов = ИмяДополнительнойКолонки;
			ТабДокумент.Присоединить(ШапкаКодов);
		КонецЕсли;
		Если Не ПараметрыПечати.ВыводитьШапку Тогда
			ТабДокумент.Присоединить(ШапкаУникальныеИдентификаторы);
		КонецЕсли;
		ТабДокумент.Присоединить(ШапкаТовар);
		
		
		Табл = Новый ТаблицаЗначений;
		Табл.Колонки.Добавить("ВидЦены");
		Табл.Колонки.Добавить("МакетОбласти");
		Табл.Колонки.Добавить("ВыводитьПроцентИзменения");
		Табл.Колонки.Добавить("ВыводитьСтаруюЦену");
		
		ВыборкаПоВидамЦен = РезультатЗапроса[2].Выбрать();
		Пока ВыборкаПоВидамЦен.Следующий() Цикл
			
			Новая                          = Табл.Добавить();
			Новая.ВидЦены                  = ВыборкаПоВидамЦен.ВидЦены;
			Новая.ВыводитьПроцентИзменения = Ложь;
			Новая.ВыводитьСтаруюЦену       = Ложь;
			
			НайденныеСтроки = ДеревоНастроек.Строки.НайтиСтроки(Новый Структура("Параметр", ВыборкаПоВидамЦен.ВидЦены), Ложь);
			Для Каждого ВидЦены Из НайденныеСтроки Цикл
				
				Для Каждого Колонка Из ВидЦены.Строки Цикл
					
					Если Колонка.Параметр = "СтараяЦена" И Колонка.ВыводитьНаПечать Тогда
						Новая.ВыводитьСтаруюЦену = Истина;
					КонецЕсли;
					
					Если Колонка.Параметр = "ПроцентИзменения" И Колонка.ВыводитьНаПечать Тогда
						Новая.ВыводитьПроцентИзменения = Истина;
					КонецЕсли;
					
				КонецЦикла;
				
			КонецЦикла;
			
			Если Новая.ВыводитьПроцентИзменения И Новая.ВыводитьСтаруюЦену Тогда
				ШапкаВидЦены       = Макет.ПолучитьОбласть("ШапкаТаблицы|ОбластьВидЦеныСтараяЦенаПроцентИзменения" + ?(Не ПараметрыПечати.ВыводитьШапку,"УникальныйИдентификатор",""));
				Новая.МакетОбласти = Макет.ПолучитьОбласть("Строка|ОбластьВидЦеныСтараяЦенаПроцентИзменения" + ?(Не ПараметрыПечати.ВыводитьШапку,"УникальныйИдентификатор",""));
			ИначеЕсли Новая.ВыводитьПроцентИзменения И Не Новая.ВыводитьСтаруюЦену Тогда
				ШапкаВидЦены       = Макет.ПолучитьОбласть("ШапкаТаблицы|ОбластьВидЦеныПроцентИзменения" + ?(Не ПараметрыПечати.ВыводитьШапку,"УникальныйИдентификатор",""));
				Новая.МакетОбласти = Макет.ПолучитьОбласть("Строка|ОбластьВидЦеныСтараяЦена");
			ИначеЕсли Не Новая.ВыводитьПроцентИзменения И Новая.ВыводитьСтаруюЦену Тогда
				ШапкаВидЦены       = Макет.ПолучитьОбласть("ШапкаТаблицы|ОбластьВидЦеныСтараяЦена" + ?(Не ПараметрыПечати.ВыводитьШапку,"УникальныйИдентификатор",""));
				Новая.МакетОбласти = Макет.ПолучитьОбласть("Строка|ОбластьВидЦеныСтараяЦена" + ?(Не ПараметрыПечати.ВыводитьШапку,"УникальныйИдентификатор",""));
			ИначеЕсли Не Новая.ВыводитьПроцентИзменения И Не Новая.ВыводитьСтаруюЦену Тогда
				ШапкаВидЦены       = Макет.ПолучитьОбласть("ШапкаТаблицы|ОбластьВидЦены" + ?(Не ПараметрыПечати.ВыводитьШапку,"УникальныйИдентификатор",""));
				Новая.МакетОбласти = Макет.ПолучитьОбласть("Строка|ОбластьВидЦены" + ?(Не ПараметрыПечати.ВыводитьШапку,"УникальныйИдентификатор",""));
			КонецЕсли;
			
			ШапкаВидЦены.Параметры.ВидЦены = ВыборкаПоВидамЦен.ВидЦены;
			ТабДокумент.Присоединить(ШапкаВидЦены);
			
		КонецЦикла;
		
		
		ОбластьНомера = Макет.ПолучитьОбласть("Строка|ОбластьНомера");
		ОбластьКодов  = Макет.ПолучитьОбласть("Строка|ОбластьКодов");
		ОбластьТовар  = Макет.ПолучитьОбласть("Строка|ОбластьТовар");
		ОбластьУникальныеИдентификаторы = Макет.ПолучитьОбласть("Строка|УникальныеИдентификаторы");
		
		НомерСтроки = 0;
		ВыборкаПоНоменклатуре = РезультатЗапроса[3].Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		Пока ВыборкаПоНоменклатуре.Следующий() Цикл
			
			Если Не ЗначениеЗаполнено(ВыборкаПоНоменклатуре.Номенклатура) Тогда
				Продолжить;
			КонецЕсли;
			
			ВыборкаПоХарактеристикам = ВыборкаПоНоменклатуре.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
			Пока ВыборкаПоХарактеристикам.Следующий() Цикл
			
				НомерСтроки = НомерСтроки + 1;
				
				ОбластьНомера.Параметры.НомерСтроки = НомерСтроки;
				ТабДокумент.Вывести(ОбластьНомера);
				Если ВыводитьКоды Тогда
					
					Если ИмяДополнительнойКолонки = "Артикул" Тогда
						ОбластьКодов.Параметры.Артикул = ВыборкаПоХарактеристикам.Артикул;
					Иначе
						ОбластьКодов.Параметры.Артикул = ВыборкаПоХарактеристикам.Код;
					КонецЕсли;
					
					ТабДокумент.Присоединить(ОбластьКодов);
					
				КонецЕсли;
				
				Если Не ПараметрыПечати.ВыводитьШапку Тогда
					ОбластьУникальныеИдентификаторы.Параметры.УникальныйИдентификаторНоменклатура   = Строка(ВыборкаПоХарактеристикам.Номенклатура.УникальныйИдентификатор());
					ОбластьУникальныеИдентификаторы.Параметры.УникальныйИдентификаторХарактеристика = Строка(ВыборкаПоХарактеристикам.Характеристика.УникальныйИдентификатор());
					ТабДокумент.Присоединить(ОбластьУникальныеИдентификаторы);
				КонецЕсли;
				
				ОбластьТовар.Параметры.Заполнить(ВыборкаПоХарактеристикам);
				ОбластьТовар.Параметры.Товар = НоменклатураКлиентСервер.ПредставлениеНоменклатурыДляПечати(
					ВыборкаПоХарактеристикам.ПолноеНаименованиеНоменклатуры,
					ВыборкаПоХарактеристикам.ПолноеНаименованиеХарактеристики
				);
				ТабДокумент.Присоединить(ОбластьТовар);
				
				ВыборкаПоВидамЦен = ВыборкаПоХарактеристикам.Выбрать();
				Для Каждого СтрокаТЗ Из Табл Цикл
					
					ВыборкаПоВидамЦен.Сбросить();
					Если ВыборкаПоВидамЦен.НайтиСледующий(Новый Структура("ВидЦены", СтрокаТЗ.ВидЦены)) Тогда
						
						ОбластьВидЦены = СтрокаТЗ.МакетОбласти;
						
						ОбластьВидЦены.Параметры.Цена = ВыборкаПоВидамЦен.Цена;
						
						Если СтрокаТЗ.ВыводитьСтаруюЦену Тогда
							ОбластьВидЦены.Параметры.СтараяЦена = ВыборкаПоВидамЦен.СтараяЦена;
						КонецЕсли;
						
						Если СтрокаТЗ.ВыводитьПроцентИзменения Тогда
							ОбластьВидЦены.Параметры.ПроцентИзменения = ВыборкаПоВидамЦен.ПроцентИзменения;
						КонецЕсли;
						
						Если ЗначениеЗаполнено(ВыборкаПоВидамЦен.Упаковка) Тогда
							ОбластьВидЦены.Параметры.ЕдиницаИзмерения = ВыборкаПоВидамЦен.Упаковка;
						Иначе
							ОбластьВидЦены.Параметры.ЕдиницаИзмерения = ВыборкаПоВидамЦен.ЕдиницаИзмерения;
						КонецЕсли;
						
						Если Не ПараметрыПечати.ВыводитьШапку Тогда
							ОбластьВидЦены.Параметры.УникальныйИдентификаторЕдиницаИзмерения = Строка(ВыборкаПоВидамЦен.Упаковка.УникальныйИдентификатор());
						КонецЕсли;
						
					Иначе
						
						ОбластьВидЦены = СтрокаТЗ.МакетОбласти;
						
						ОбластьВидЦены.Параметры.Цена = 0;
						
						Если СтрокаТЗ.ВыводитьСтаруюЦену Тогда
							ОбластьВидЦены.Параметры.СтараяЦена = 0;
						КонецЕсли;
						
						Если СтрокаТЗ.ВыводитьПроцентИзменения Тогда
							ОбластьВидЦены.Параметры.ПроцентИзменения = 0;
						КонецЕсли;
						
						ОбластьВидЦены.Параметры.ЕдиницаИзмерения = Неопределено;
						
						Если Не ПараметрыПечати.ВыводитьШапку Тогда
							ОбластьВидЦены.Параметры.УникальныйИдентификаторЕдиницаИзмерения = Строка(Справочники.УпаковкиНоменклатуры.ПустаяСсылка().УникальныйИдентификатор());
						КонецЕсли;
						
					КонецЕсли;
					
					ТабДокумент.Присоединить(ОбластьВидЦены);
					
				КонецЦикла;
				
			КонецЦикла;
			
		КонецЦикла;
		
		Если ПараметрыПечати.ВыводитьШапку Тогда
			ОбластьМакета = Макет.ПолучитьОбласть("Подписи");
			ОбластьМакета.Параметры.Заполнить(Шапка);
			ТабДокумент.Вывести(ОбластьМакета);
		КонецЕсли;
		
		УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабДокумент, НомерСтрокиНачало, ОбъектыПечати, УстановкаЦенНоменклатуры);
		
	КонецЦикла;
	
	Возврат ТабДокумент;
	
КонецФункции

// Функция помещает необходимые данные в структуру. Структура помещается во временное хранилище.
//
// Возвращаемое значение:
//   Адрес   - адрес структуры данных во временном хранилище
//
Функция ПолучитьДанныеДляПечатиЭтикеток(МассивДокументов) Экспорт

	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	УстановкаЦенНоменклатурыТовары.Номенклатура   КАК Номенклатура,
	|	УстановкаЦенНоменклатурыТовары.Характеристика КАК Характеристика,
	|	УстановкаЦенНоменклатурыТовары.Упаковка       КАК Упаковка,
	|	МИНИМУМ(УстановкаЦенНоменклатурыТовары.НомерСтроки) КАК Порядок,
	|	СУММА(1)                                            КАК Количество
	|ИЗ
	|	Документ.УстановкаЦенНоменклатуры.Товары КАК УстановкаЦенНоменклатурыТовары
	|ГДЕ
	|	УстановкаЦенНоменклатурыТовары.Ссылка В(&МассивДокументов)
	|	И ВЫБОР
	|		КОГДА (УстановкаЦенНоменклатурыТовары.Номенклатура.ИспользованиеХарактеристик = ЗНАЧЕНИЕ(Перечисление.ВариантыИспользованияХарактеристикНоменклатуры.ОбщиеДляВидаНоменклатуры)
	|			ИЛИ УстановкаЦенНоменклатурыТовары.Номенклатура.ИспользованиеХарактеристик = ЗНАЧЕНИЕ(Перечисление.ВариантыИспользованияХарактеристикНоменклатуры.ИндивидуальныеДляНоменклатуры))
	|			И УстановкаЦенНоменклатурыТовары.Характеристика = ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка)
	|			ТОГДА ЛОЖЬ
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ
	|
	|СГРУППИРОВАТЬ ПО
	|	УстановкаЦенНоменклатурыТовары.Номенклатура,
	|	УстановкаЦенНоменклатурыТовары.Характеристика,
	|	УстановкаЦенНоменклатурыТовары.Упаковка
	|
	|УПОРЯДОЧИТЬ ПО
	|	Порядок
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	УстановкаЦенНоменклатуры.ВидЦены КАК ВидЦены
	|ИЗ
	|	Документ.УстановкаЦенНоменклатуры.ВидыЦен КАК УстановкаЦенНоменклатуры
	|ГДЕ
	|	УстановкаЦенНоменклатуры.Ссылка В(&МассивДокументов)";
	
	Запрос.УстановитьПараметр("МассивДокументов", МассивДокументов);
	
	МассивРезультатов = Запрос.ВыполнитьПакет();
	
	
	ТаблицаРеквизитыДокументов = МассивРезультатов[1].Выгрузить();
	МассивВидовЦен = ТаблицаРеквизитыДокументов.ВыгрузитьКолонку(0);
	
	
	// Подготовка структуры действий для обработки печати ценников и этикеток
	СтруктураДействий = Новый Структура;
	СтруктураДействий.Вставить("ЗаполнитьОрганизацию", Неопределено);
	СтруктураДействий.Вставить("ЗаполнитьСклад",       Неопределено);
	СтруктураДействий.Вставить("ЗаполнитьВидЦены",     ?(МассивВидовЦен.Количество() = 1, МассивВидовЦен[0], Неопределено));
	СтруктураДействий.Вставить("ПоказыватьКолонкуКоличествоВДокументе", Ложь);
	СтруктураДействий.Вставить("УстановитьРежимПечатиИзДокумента");
	СтруктураДействий.Вставить("УстановитьРежим", "ПечатьЭтикеток");
	СтруктураДействий.Вставить("ЗаполнитьКоличествоЭтикетокПоОстаткамНаСкладе");
	СтруктураДействий.Вставить("ЗаполнитьТаблицуТоваров");
	
	
	// Подготовка данных для заполенения табличной части обработки печати ценников и этикеток
	СтруктураРезультат = Новый Структура;
	СтруктураРезультат.Вставить("Товары", МассивРезультатов[0].Выгрузить());
	СтруктураРезультат.Вставить("СтруктураДействий", СтруктураДействий);
	
	Возврат ПоместитьВоВременноеХранилище(СтруктураРезультат);
	
КонецФункции

// Функция помещает необходимые данные в структуру. Структура помещается во временное хранилище.
//
// Возвращаемое значение:
//   Адрес   - адрес структуры данных во временном хранилище
//
Функция ПолучитьДанныеДляПечатиЦенников(МассивДокументов) Экспорт

	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	УстановкаЦенНоменклатурыТовары.Номенклатура   КАК Номенклатура,
	|	УстановкаЦенНоменклатурыТовары.Характеристика КАК Характеристика,
	|	УстановкаЦенНоменклатурыТовары.Упаковка       КАК Упаковка,
	|	МИНИМУМ(УстановкаЦенНоменклатурыТовары.НомерСтроки) КАК Порядок,
	|	СУММА(1)                                            КАК Количество
	|ИЗ
	|	Документ.УстановкаЦенНоменклатуры.Товары КАК УстановкаЦенНоменклатурыТовары
	|ГДЕ
	|	УстановкаЦенНоменклатурыТовары.Ссылка В(&МассивДокументов)
	|	И ВЫБОР
	|		КОГДА (УстановкаЦенНоменклатурыТовары.Номенклатура.ИспользованиеХарактеристик = ЗНАЧЕНИЕ(Перечисление.ВариантыИспользованияХарактеристикНоменклатуры.ОбщиеДляВидаНоменклатуры)
	|			ИЛИ УстановкаЦенНоменклатурыТовары.Номенклатура.ИспользованиеХарактеристик = ЗНАЧЕНИЕ(Перечисление.ВариантыИспользованияХарактеристикНоменклатуры.ИндивидуальныеДляНоменклатуры))
	|			И УстановкаЦенНоменклатурыТовары.Характеристика = ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка)
	|			ТОГДА ЛОЖЬ
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ
	|
	|СГРУППИРОВАТЬ ПО
	|	УстановкаЦенНоменклатурыТовары.Номенклатура,
	|	УстановкаЦенНоменклатурыТовары.Характеристика,
	|	УстановкаЦенНоменклатурыТовары.Упаковка
	|
	|УПОРЯДОЧИТЬ ПО
	|	Порядок
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	УстановкаЦенНоменклатуры.ВидЦены КАК ВидЦены
	|ИЗ
	|	Документ.УстановкаЦенНоменклатуры.ВидыЦен КАК УстановкаЦенНоменклатуры
	|ГДЕ
	|	УстановкаЦенНоменклатуры.Ссылка В(&МассивДокументов)";
	
	Запрос.УстановитьПараметр("МассивДокументов", МассивДокументов);
	
	МассивРезультатов = Запрос.ВыполнитьПакет();
	
	
	ТаблицаРеквизитыДокументов = МассивРезультатов[1].Выгрузить();
	МассивВидовЦен = ТаблицаРеквизитыДокументов.ВыгрузитьКолонку(0);
	
	
	// Подготовка структуры действий для обработки печати ценников и этикеток
	СтруктураДействий = Новый Структура;
	СтруктураДействий.Вставить("ЗаполнитьОрганизацию", Неопределено);
	СтруктураДействий.Вставить("ЗаполнитьСклад",       Неопределено);
	СтруктураДействий.Вставить("ЗаполнитьВидЦены",     ?(МассивВидовЦен.Количество() = 1, МассивВидовЦен[0], Неопределено));
	СтруктураДействий.Вставить("ПоказыватьКолонкуКоличествоВДокументе", Ложь);
	СтруктураДействий.Вставить("УстановитьРежимПечатиИзДокумента");
	СтруктураДействий.Вставить("УстановитьРежим", "ПечатьЦенников");
	СтруктураДействий.Вставить("ЗаполнитьКоличествоЦенниковПоДокументу");
	СтруктураДействий.Вставить("ЗаполнитьТаблицуТоваров");
	
	
	// Подготовка данных для заполенения табличной части обработки печати ценников и этикеток
	СтруктураРезультат = Новый Структура;
	СтруктураРезультат.Вставить("Товары", МассивРезультатов[0].Выгрузить());
	СтруктураРезультат.Вставить("СтруктураДействий", СтруктураДействий);
	
	Возврат ПоместитьВоВременноеХранилище(СтруктураРезультат);
	
КонецФункции

#КонецЕсли