&НаКлиенте
Перем КэшированныеЗначения; //используется механизмом обработки изменения реквизитов ТЧ

///////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)

	// Пропускаем инициализацию, чтобы гарантировать получение формы при передаче параметра "АвтоТест".
	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;
	КонецЕсли;

	ДокументОснование  = Параметры.ДокументОснование;
	РеквизитыОснования = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(ДокументОснование,
																	"Представление, ЖелаемаяДатаОтгрузки");

	Заголовок = РеквизитыОснования.Представление;
	ЗаполнитьЗначенияСвойств(ЭтаФорма, РеквизитыОснования, "ЖелаемаяДатаОтгрузки");
	
	ОбособленныйЗаказ = Документы.ЗаказКлиента.ОбособленноеОбеспечение(ДокументОснование);

	ЗаполнитьТовары();

	РассчитатьКоличествоЗаказов();

КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если ИмяСобытия = "Запись_ЗаказПоставщику" Тогда

		Ссылка = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Источник,"Ссылка");
		ОбновитьСостоянияЗаказов(Ссылка);

	КонецЕсли;

КонецПроцедуры

///////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ ТАБЛИЦ ФОРМЫ

&НаКлиенте
Процедура ТоварыВыбранПриИзменении(Элемент)
	РассчитатьКоличествоЗаказов();
КонецПроцедуры

&НаКлиенте
Процедура ТоварыПоставщикПриИзменении(Элемент)
	РассчитатьКоличествоЗаказов();
КонецПроцедуры

&НаКлиенте
Процедура ТоварыКоличествоУпаковокПриИзменении(Элемент)
	
	ТекущаяСтрока = Элементы.Товары.ТекущиеДанные;
	
	СтруктураДействий = Новый Структура;
	СтруктураДействий.Вставить("ПересчитатьКоличествоЕдиниц");
	
	ОбработкаТабличнойЧастиКлиент.ОбработатьСтрокуТЧ(ТекущаяСтрока, СтруктураДействий, КэшированныеЗначения);

КонецПроцедуры

///////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ КОМАНД ФОРМЫ

&НаКлиенте
Процедура ВыбратьСтрокиВыполнить()

	Для Каждого Товар Из Товары Цикл
		Товар.Выбран = Истина;
	КонецЦикла;

	РассчитатьКоличествоЗаказов();

КонецПроцедуры

&НаКлиенте
Процедура ИсключитьСтрокиВыполнить()

	Для Каждого Товар Из Товары Цикл
		Товар.Выбран = Ложь;
	КонецЦикла;

	РассчитатьКоличествоЗаказов();

КонецПроцедуры

&НаКлиенте
Процедура СоздатьЗаказы(Команда)

	ОчиститьСообщения();

	Если Товары.Количество() = 0 Тогда

		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(НСтр("ru = 'Отсутствуют строки для формирования заказов!'"));

	ИначеЕсли КоличествоЗаказов = 0 и Товары.Количество() > 0 Тогда

		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
				НСтр("ru = 'Для формирования заказов необходимо указать поставщиков и отметить хотя бы одну строку!'"),
				,
				ОбщегоНазначенияКлиентСервер.ПутьКТабличнойЧасти("Товары", 1, "Выбран"),
				,
			);
	Иначе

		ПередСозданиемЗаказовСервер();

	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ЗаказыВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	ОткрытьФорму("Документ.ЗаказПоставщику.ФормаОбъекта", Новый Структура("Ключ", Элемент.ТекущиеДанные.Ссылка), ЭтаФорма);
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьПоставщика(Команда)
	
	СтруктураОтбора = Новый Структура("Поставщик", Истина);
	СтруктураПараметров = Новый Структура("Отбор,Поставщик", СтруктураОтбора, Истина);	
	
	КолвоВыбранных = КоличествоВыбранныхСтрокТовары();
	
	ОчиститьСообщения();
	
	Если КолвоВыбранных = 0 и Товары.Количество()>0 Тогда 
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(НСтр("ru = 'Для заполнения поставщиков необходимо выбрать хотя бы одну строку!'"),
				,
				ОбщегоНазначенияКлиентСервер.ПутьКТабличнойЧасти("Товары", 1, "Выбран"),
				,
			);
	ИначеЕсли Товары.Количество()=0 и КолвоВыбранных=0 Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(НСтр("ru = 'Отсутствуют строки для заполнения поставщиков!'"));
	Иначе
		ВыбранныйПоставщик = ОткрытьФормуМодально("Справочник.Партнеры.ФормаВыбора", СтруктураПараметров, ЭтаФорма);
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ВыбранныйПоставщик) Тогда
		Для Каждого СтрокаТовар Из Товары Цикл
			Если СтрокаТовар.Выбран Тогда
				СтрокаТовар.Поставщик = ВыбранныйПоставщик;
			КонецЕсли; 
		КонецЦикла;
	КонецЕсли;
	РассчитатьКоличествоЗаказов();
КонецПроцедуры


///////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

&НаСервере
Процедура ЗаполнитьТовары()

	Если ОбособленныйЗаказ Тогда

		ЗаполнитьТоварыПоОбособленномуЗаказуКлиента();

	Иначе

		ЗаполнитьТоварыПоЗаказуКлиента();

	КонецЕсли;

	Если Товары.Количество() = 0 Тогда
		Элементы.Товары.КоманднаяПанель.Доступность = Ложь;
	КонецЕсли;

КонецПроцедуры

&НаСервере
Процедура ЗаполнитьТоварыПоОбособленномуЗаказуКлиента()

	ТаблицаТовары = Документы.ЗаказКлиента.ТаблицаНеобеспеченнойПотребности(ДокументОснование);

	Запрос = Новый Запрос(
	"
	|ВЫБРАТЬ 
	|	Таб.НомерСтроки            КАК НомерСтроки,
	|	Таб.Номенклатура           КАК Номенклатура,
	|	Таб.СтавкаНДС              КАК СтавкаНДС,
	|	Таб.Характеристика         КАК Характеристика,
	|	Таб.Склад                  КАК Склад,
	|	Таб.Назначение             КАК Назначение,
	|	Таб.ВариантОбеспечения     КАК ВариантОбеспечения,
	|	Таб.Упаковка               КАК Упаковка,
	|	Таб.Количество             КАК Количество,
	|	Таб.КоличествоУпаковок     КАК КоличествоУпаковок
	|
	|ПОМЕСТИТЬ ТаблицаТовары
	|
	|ИЗ
	|	&ТаблицаТовары КАК Таб
	|
	|ИНДЕКСИРОВАТЬ ПО Номенклатура, Характеристика
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Т.Номенклатура   КАК Номенклатура,
	|	Т.Характеристика КАК Характеристика
	|
	|ПОМЕСТИТЬ ТоварыСвернуто
	|
	|ИЗ
	|	ТаблицаТовары КАК Т
	|
	|ИНДЕКСИРОВАТЬ ПО Номенклатура, Характеристика
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Поступления.Номенклатура                         КАК Номенклатура,
	|	Поступления.Характеристика                       КАК Характеристика,
	|	МАКСИМУМ(Поступления.Ссылка.Партнер)             КАК Партнер,
	|	КОЛИЧЕСТВО(Различные Поступления.Ссылка)         КАК КоличествоДокументов,
	|	КОЛИЧЕСТВО(Различные Поступления.Ссылка.Партнер) КАК КоличествоПартнеров
	|
	|ПОМЕСТИТЬ ВТПоставщики
	|
	|ИЗ
	|	Документ.ПоступлениеТоваровУслуг.Товары КАК Поступления
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ ТоварыСвернуто КАК ТоварыСвернуто
	|		ПО Поступления.Номенклатура  = ТоварыСвернуто.Номенклатура
	|		И Поступления.Характеристика = ТоварыСвернуто.Характеристика
	|
	|ГДЕ
	|	Поступления.Ссылка В
	|			(ВЫБРАТЬ ПЕРВЫЕ 3  // Первые 3 документа поступления
	|				Т.Ссылка
	|			ИЗ
	|				Документ.ПоступлениеТоваровУслуг КАК Т
	|			ГДЕ
	|				Т.Проведен
	|				И ИСТИНА В
	|					(ВЫБРАТЬ ПЕРВЫЕ 1
	|						ИСТИНА
	|					ИЗ
	|						Документ.ПоступлениеТоваровУслуг.Товары КАК Таб
	|					ГДЕ
	|						Таб.Ссылка = Т.Ссылка
	|						И Таб.Номенклатура   = Поступления.Номенклатура
	|						И Таб.Характеристика = Поступления.Характеристика)
	|			УПОРЯДОЧИТЬ ПО
	|				Т.Дата УБЫВ)
	|
	|СГРУППИРОВАТЬ ПО
	|	Поступления.Номенклатура,
	|	Поступления.Характеристика,
	|	Поступления.Ссылка.Партнер
	|
	|ИМЕЮЩИЕ
	|	КОЛИЧЕСТВО(Различные Поступления.Ссылка) = 3  // Номенклатура должна встречаться в 3-х докуменнтах поступления
	|	И
	|	КОЛИЧЕСТВО(Различные Поступления.Ссылка.Партнер) = 1  // В этих документах партнер должен быть 1.
	|
	|ИНДЕКСИРОВАТЬ ПО Номенклатура, Характеристика
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ 
	|	Товары.НомерСтроки            КАК НомерСтроки,
	|	Товары.Номенклатура           КАК Номенклатура,
	|	Товары.СтавкаНДС              КАК СтавкаНДС,
	|	Товары.Характеристика         КАК Характеристика,
	|	Товары.Склад                  КАК Склад,
	|	Товары.Назначение             КАК Назначение,
	|	Товары.ВариантОбеспечения     КАК ВариантОбеспечения,
	|	Товары.Упаковка               КАК Упаковка,
	|	Товары.Количество             КАК Количество,
	|	Товары.КоличествоУпаковок     КАК КоличествоУпаковок,
	|	Поставщики.Партнер            КАК Поставщик
	|
	|ИЗ
	|	ТаблицаТовары КАК Товары
	|	ЛЕВОЕ СОЕДИНЕНИЕ ВТПоставщики КАК Поставщики
	|	ПО Товары.Номенклатура      = Поставщики.Номенклатура
	|		И Товары.Характеристика = Поставщики.Характеристика
	|
	|УПОРЯДОЧИТЬ ПО
	|	Товары.НомерСтроки
	|");
	Запрос.УстановитьПараметр("ТаблицаТовары", ТаблицаТовары);
	Товары.Загрузить(Запрос.Выполнить().Выгрузить());

КонецПроцедуры

&НаСервере
Процедура ЗаполнитьТоварыПоЗаказуКлиента()

	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	СУММА(ЗаказПоставщикуТовары.КоличествоУпаковок) КАК КоличествоУпаковок,
	|	СУММА(ЗаказПоставщикуТовары.Количество) КАК Количество,
	|	ЗаказПоставщикуТовары.Номенклатура КАК Номенклатура,
	|	ЗаказПоставщикуТовары.Характеристика КАК Характеристика
	|ПОМЕСТИТЬ ЗаказанныеТовары
	|ИЗ
	|	Документ.ЗаказПоставщику.Товары КАК ЗаказПоставщикуТовары
	|ГДЕ
	|	ЗаказПоставщикуТовары.Ссылка.ДокументОснование = &ДокументОснование
	|	И ЗаказПоставщикуТовары.Ссылка.Проведен
	|	И НЕ ЗаказПоставщикуТовары.Отменено
	|
	|СГРУППИРОВАТЬ ПО
	|	ЗаказПоставщикуТовары.Номенклатура,
	|	ЗаказПоставщикуТовары.Характеристика
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Товары.Номенклатура КАК Номенклатура,
	|	Товары.Характеристика КАК Характеристика,
	|	Товары.Упаковка КАК Упаковка,
	|	ВЫБОР
	|		КОГДА ЗаказанныеТовары.КоличествоУпаковок ЕСТЬ NULL 
	|			ТОГДА Товары.КоличествоУпаковок
	|		ИНАЧЕ Товары.КоличествоУпаковок - ЗаказанныеТовары.КоличествоУпаковок
	|	КОНЕЦ КАК КоличествоУпаковок,
	|	ВЫБОР
	|		КОГДА ЗаказанныеТовары.Количество ЕСТЬ NULL 
	|			ТОГДА Товары.Количество
	|		ИНАЧЕ Товары.Количество - Товары.Количество
	|	КОНЕЦ КАК Количество,
	|	Товары.Склад КАК Склад,
	|	Товары.АК_ТекстовоеОписание,
	|	Товары.АК_ДопКомплектация,
	|	Товары.АК_ПризнакНестандарт,
	|	Товары.АК_НестандартОписание,
	|	Товары.АК_ПризнакЭскиз,
	|	Товары.АК_ЭскизФайл,
	|	Товары.АК_ИнформацияДляОтделаЗакупки
	|ПОМЕСТИТЬ ТоварыОснования
	|ИЗ
	|	Документ.ЗаказКлиента.Товары КАК Товары
	|		ЛЕВОЕ СОЕДИНЕНИЕ ЗаказанныеТовары КАК ЗаказанныеТовары
	|		ПО Товары.Номенклатура = ЗаказанныеТовары.Номенклатура
	|			И Товары.Характеристика = ЗаказанныеТовары.Характеристика
	|ГДЕ
	|	Товары.Ссылка = &ДокументОснование
	|	И НЕ Товары.Отменено
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Поступления.Номенклатура КАК Номенклатура,
	|	Поступления.Характеристика КАК Характеристика,
	|	МАКСИМУМ(Поступления.Ссылка.Дата) КАК Дата
	|ПОМЕСТИТЬ ПослПоступления
	|ИЗ
	|	ТоварыОснования КАК ТоварыОснования
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ПоступлениеТоваровУслуг.Товары КАК Поступления
	|		ПО ТоварыОснования.Номенклатура = Поступления.Номенклатура
	|			И ТоварыОснования.Характеристика = Поступления.Характеристика
	|ГДЕ
	|	ТоварыОснования.КоличествоУпаковок > 0
	|
	|СГРУППИРОВАТЬ ПО
	|	Поступления.Номенклатура,
	|	Поступления.Характеристика
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Поступления.Номенклатура КАК Номенклатура,
	|	Поступления.Характеристика КАК Характеристика,
	|	МАКСИМУМ(Поступления.Ссылка.Дата) КАК Дата,
	|	МАКСИМУМ(Поступления.Ссылка) КАК Ссылка
	|ПОМЕСТИТЬ ПослПоступленияССылкой
	|ИЗ
	|	Документ.ПоступлениеТоваровУслуг.Товары КАК Поступления
	|ГДЕ
	|	(Поступления.Номенклатура, Поступления.Характеристика, Поступления.Ссылка.Дата) В
	|			(ВЫБРАТЬ
	|				ПослПоступления.Номенклатура КАК Номенклатура,
	|				ПослПоступления.Характеристика КАК Характеристика,
	|				ПослПоступления.Дата КАК Дата
	|			ИЗ
	|				ПослПоступления)
	|
	|СГРУППИРОВАТЬ ПО
	|	Поступления.Номенклатура,
	|	Поступления.Характеристика
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Поступления.Номенклатура КАК Номенклатура,
	|	Поступления.Характеристика КАК Характеристика,
	|	МАКСИМУМ(Поступления.Ссылка.Дата) КАК Дата
	|ПОМЕСТИТЬ ПредПослПоступления
	|ИЗ
	|	ПослПоступленияССылкой КАК ПослПоступленияССылкой
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ПоступлениеТоваровУслуг.Товары КАК Поступления
	|		ПО ПослПоступленияССылкой.Номенклатура = Поступления.Номенклатура
	|			И ПослПоступленияССылкой.Характеристика = Поступления.Характеристика
	|			И ПослПоступленияССылкой.Ссылка <> Поступления.Ссылка
	|
	|СГРУППИРОВАТЬ ПО
	|	Поступления.Номенклатура,
	|	Поступления.Характеристика
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Поступления.Номенклатура КАК Номенклатура,
	|	Поступления.Характеристика КАК Характеристика,
	|	МАКСИМУМ(Поступления.Ссылка.Дата) КАК Дата,
	|	МАКСИМУМ(Поступления.Ссылка) КАК Ссылка
	|ПОМЕСТИТЬ ПредПослПоступленияССылкой
	|ИЗ
	|	Документ.ПоступлениеТоваровУслуг.Товары КАК Поступления
	|ГДЕ
	|	(Поступления.Номенклатура, Поступления.Характеристика, Поступления.Ссылка.Дата) В
	|			(ВЫБРАТЬ
	|				ПредПослПоступления.Номенклатура КАК Номенклатура,
	|				ПредПослПоступления.Характеристика КАК Характеристика,
	|				ПредПослПоступления.Дата КАК Дата
	|			ИЗ
	|				ПредПослПоступления)
	|
	|СГРУППИРОВАТЬ ПО
	|	Поступления.Номенклатура,
	|	Поступления.Характеристика
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Поступления.Номенклатура КАК Номенклатура,
	|	Поступления.Характеристика КАК Характеристика,
	|	МАКСИМУМ(Поступления.Ссылка.Дата) КАК Дата
	|ПОМЕСТИТЬ ПервыеПоступления
	|ИЗ
	|	ПредПослПоступленияССылкой КАК ПредПослПоступленияССылкой
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ПоступлениеТоваровУслуг.Товары КАК Поступления
	|		ПО ПредПослПоступленияССылкой.Номенклатура = Поступления.Номенклатура
	|			И ПредПослПоступленияССылкой.Характеристика = Поступления.Характеристика
	|			И ПредПослПоступленияССылкой.Дата > Поступления.Ссылка.Дата
	|
	|СГРУППИРОВАТЬ ПО
	|	Поступления.Номенклатура,
	|	Поступления.Характеристика
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Поступления.Номенклатура КАК Номенклатура,
	|	Поступления.Характеристика КАК Характеристика,
	|	МАКСИМУМ(Поступления.Ссылка.Дата) КАК Дата,
	|	МАКСИМУМ(Поступления.Ссылка) КАК Ссылка
	|ПОМЕСТИТЬ ПервыеПоступленияССылкой
	|ИЗ
	|	Документ.ПоступлениеТоваровУслуг.Товары КАК Поступления
	|ГДЕ
	|	(Поступления.Номенклатура, Поступления.Характеристика, Поступления.Ссылка.Дата) В
	|			(ВЫБРАТЬ
	|				ПервыеПоступления.Номенклатура КАК Номенклатура,
	|				ПервыеПоступления.Характеристика КАК Характеристика,
	|				ПервыеПоступления.Дата КАК Дата
	|			ИЗ
	|				ПервыеПоступления)
	|
	|СГРУППИРОВАТЬ ПО
	|	Поступления.Номенклатура,
	|	Поступления.Характеристика
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПервыеПоступленияССылкой.Номенклатура КАК Номенклатура,
	|	ПервыеПоступленияССылкой.Характеристика КАК Характеристика,
	|	ПервыеПоступленияССылкой.Ссылка.Партнер КАК Партнер,
	|	ПослПоступленияССылкой.Ссылка.Партнер КАК Партнер1,
	|	ПредПослПоступленияССылкой.Ссылка.Партнер КАК Партнер2
	|ПОМЕСТИТЬ Партнеры
	|ИЗ
	|	ПервыеПоступленияССылкой КАК ПервыеПоступленияССылкой
	|		ПОЛНОЕ СОЕДИНЕНИЕ ПослПоступленияССылкой КАК ПослПоступленияССылкой
	|			ПОЛНОЕ СОЕДИНЕНИЕ ПредПослПоступленияССылкой КАК ПредПослПоступленияССылкой
	|			ПО ПослПоступленияССылкой.Номенклатура = ПредПослПоступленияССылкой.Номенклатура
	|				И ПослПоступленияССылкой.Характеристика = ПредПослПоступленияССылкой.Характеристика
	|		ПО (ПослПоступленияССылкой.Характеристика = ПредПослПоступленияССылкой.Характеристика)
	|			И ПервыеПоступленияССылкой.Номенклатура = ПослПоступленияССылкой.Номенклатура
	|
	|СГРУППИРОВАТЬ ПО
	|	ПервыеПоступленияССылкой.Номенклатура,
	|	ПервыеПоступленияССылкой.Характеристика,
	|	ПервыеПоступленияССылкой.Ссылка.Партнер,
	|	ПослПоступленияССылкой.Ссылка.Партнер,
	|	ПредПослПоступленияССылкой.Ссылка.Партнер
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТоварыОснования.Номенклатура КАК Номенклатура,
	|	ТоварыОснования.Характеристика КАК Характеристика,
	|	ТоварыОснования.Упаковка КАК Упаковка,
	|	ТоварыОснования.КоличествоУпаковок КАК КоличествоУпаковок,
	|	ТоварыОснования.Количество КАК Количество,
	|	ТоварыОснования.Номенклатура.СтавкаНДС КАК СтавкаНДС,
	|	ТоварыОснования.Склад КАК Склад,
	|	ТоварыОснования.АК_ТекстовоеОписание,
	|	ТоварыОснования.АК_ДопКомплектация,
	|	ТоварыОснования.АК_ПризнакНестандарт,
	|	ТоварыОснования.АК_НестандартОписание,
	|	ТоварыОснования.АК_ПризнакЭскиз,
	|	ТоварыОснования.АК_ЭскизФайл,
	|	ТоварыОснования.АК_ИнформацияДляОтделаЗакупки,
	|	ВЫБОР
	|		КОГДА Партнеры.Партнер = Партнеры.Партнер1
	|				ИЛИ Партнеры.Партнер = Партнеры.Партнер2
	|			ТОГДА Партнеры.Партнер
	|		ИНАЧЕ ВЫБОР
	|				КОГДА Партнеры.Партнер1 = Партнеры.Партнер2
	|					ТОГДА Партнеры.Партнер1
	|			КОНЕЦ
	|	КОНЕЦ КАК Поставщик
	|ИЗ
	|	ТоварыОснования КАК ТоварыОснования
	|		ЛЕВОЕ СОЕДИНЕНИЕ Партнеры КАК Партнеры
	|		ПО ТоварыОснования.Номенклатура = Партнеры.Номенклатура
	|			И ТоварыОснования.Характеристика = Партнеры.Характеристика
	|ГДЕ
	|	ТоварыОснования.КоличествоУпаковок > 0");
	Запрос.УстановитьПараметр("ДокументОснование",ДокументОснование );
	
	//Товары.Загрузить(Запрос.Выполнить().Выгрузить());	
	
	РезультатЗапроса =Запрос.Выполнить().Выгрузить(); 
	

	
	
	СвойствоПоставщик = ПланыВидовХарактеристик.ДополнительныеРеквизитыИСведения.АК_Производитель;
	
	
	
	Для каждого СтрокаТаблицы Из РезультатЗапроса Цикл
		
		Для Каждого свойство ИЗ СтрокаТаблицы.номенклатура.ДополнительныеРеквизиты цикл
			
		
			Если  Свойство.свойство = СвойствоПоставщик   Тогда
			      СтрокаТаблицы.поставщик =  Свойство.значение;
			  КонецЕсли;
			  
		КонецЦикла;
	
	КонецЦикла; 
	
	
	
	Товары.Загрузить(РезультатЗапроса);
	

//	----------------------     ДОПИСЫВАНИЕ Поставщиков в таблицу
	//РезультатТБ=Запрос.Выполнить().Выгрузить();
//   	
//ЗапросПоставщики = Новый Запрос;
//ЗапросПоставщики.Текст="
//	|ВЫБРАТЬ
//	|	
//	|	ЗаказПоставщикуТовары.Номенклатура              КАК Номенклатура,
//	|	ЗаказПоставщикуТовары.Характеристика            КАК Характеристика
//	|
//	|ПОМЕСТИТЬ ЗаказанныеТовары
//	|
//	|ИЗ
//	|	Документ.ЗаказПоставщику.Товары КАК ЗаказПоставщикуТовары 
//	|ГДЕ
//	|	ЗаказПоставщикуТовары.Ссылка.ДокументОснование = &ДокументОснование
//	|	И ЗаказПоставщикуТовары.Ссылка.Проведен
//	|	И НЕ ЗаказПоставщикуТовары.Отменено     ";
//	
//	//|СГРУППИРОВАТЬ ПО
//	//|	ЗаказПоставщикуТовары.Номенклатура,
//	//|	ЗаказПоставщикуТовары.Характеристика
//	
//РезультатТБ2 = ЗапросПоставщики.Выполнить().Выгрузить();
	                                     
	
	
КонецПроцедуры

&НаСервере
Процедура РассчитатьКоличествоЗаказов()
	Если ПолучитьФункциональнуюОпцию("ИспользоватьСкладыВТабличнойЧастиДокументовЗакупки") Тогда
		Выбрано = Товары.Выгрузить(Новый Структура("Выбран", Истина), "Поставщик");
		Выбрано.Свернуть("Поставщик");
	Иначе
		Выбрано = Товары.Выгрузить(Новый Структура("Выбран", Истина), "Поставщик,Склад");
		Выбрано.Свернуть("Поставщик,Склад");
	КонецЕсли;
	
	Количество = Выбрано.Количество();
	
	Для каждого текСтрока Из Выбрано Цикл
		Если НЕ ЗначениеЗаполнено(текСтрока.Поставщик) И Количество>0 Тогда
			Количество = Количество-1;
		КонецЕсли;
	КонецЦикла;
	КоличествоЗаказов = Количество;
КонецПроцедуры

&НаСервере
Процедура ПередСозданиемЗаказовСервер()
	
	РеквизитыЗаполнения = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(ДокументОснование,
																		"Организация, Склад");
	ЭтоГруппа = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(РеквизитыЗаполнения.Склад,
																	"ЭтоГруппа");
	ИспользованиеСкладов = ИспользоватьСкладыВТабличнойЧасти();
	
	Если ИспользованиеСкладов.ИспользуютсяСкладыЗакупки и ИспользованиеСкладов.ИспользуютсяСкладыПродажи Тогда

		Поставщики = Товары.Выгрузить(Новый Структура("Выбран", Истина), "Поставщик");
		Поставщики.Свернуть("Поставщик");

	ИначеЕсли Не ИспользованиеСкладов.ИспользуютсяСкладыЗакупки и ИспользованиеСкладов.ИспользуютсяСкладыПродажи Тогда

		Если ЭтоГруппа Тогда

			Поставщики = Товары.Выгрузить(Новый Структура("Выбран", Истина), "Поставщик,Склад");
			Поставщики.Свернуть("Поставщик,Склад");

		Иначе

			Поставщики = Товары.Выгрузить(Новый Структура("Выбран", Истина), "Поставщик");
			Поставщики.Свернуть("Поставщик");

		КонецЕсли;
	ИначеЕсли ИспользованиеСкладов.ИспользуютсяСкладыЗакупки и НЕ ИспользованиеСкладов.ИспользуютсяСкладыПродажи Тогда

		Поставщики = Товары.Выгрузить(Новый Структура("Выбран", Истина), "Поставщик");
		Поставщики.Свернуть("Поставщик");

	ИначеЕсли Не ИспользованиеСкладов.ИспользуютсяСкладыЗакупки и Не ИспользованиеСкладов.ИспользуютсяСкладыПродажи Тогда

		Поставщики = Товары.Выгрузить(Новый Структура("Выбран", Истина), "Поставщик");
		Поставщики.Свернуть("Поставщик");

	КонецЕсли;
	
	КоличествоОшибок =0;
	
	Для ТекИндекс = 0 По Товары.Количество()-1 Цикл
		
		АдресОшибки = НСтр("ru=' в строке %НомерСтроки% списка ""Товары""'");
		АдресОшибки = СтрЗаменить(АдресОшибки, "%НомерСтроки%", ТекИндекс+1);
		
		Если Товары[ТекИндекс].Поставщик = Справочники.Партнеры.ПустаяСсылка() И Товары[ТекИндекс].Выбран = Истина Тогда

			ТекстОшибки = НСтр("ru='Не заполнена колонка ""Поставщик""'");
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
				ТекстОшибки + АдресОшибки,
				,
				ОбщегоНазначенияКлиентСервер.ПутьКТабличнойЧасти("Товары", ТекИндекс+1, "Поставщик"),
				,
			);
			КоличествоОшибок = КоличествоОшибок + 1;

		КонецЕсли;
	КонецЦикла;
	
	Если КоличествоОшибок =0 Тогда

		СоздатьЗаказыСервер(Поставщики);

	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура СоздатьЗаказыСервер(Поставщики)
	
	Элементы.Страницы.ТекущаяСтраница = Элементы.СтраницаЗаказы;
	
	ИспользованиеСкладов = ИспользоватьСкладыВТабличнойЧасти();
	
	ДанныеДокументаОснования = СтруктураДокументаОснованияНаСервере(ИспользованиеСкладов);

	ДатаЗаказов = ТекущаяДата();
	Для Каждого ТекСтрока Из Поставщики Цикл

		Заказ = Документы.ЗаказПоставщику.СоздатьДокумент();
		Заказ.Дата = ДатаЗаказов;
		
		Отбор = Новый Структура;
		Отбор.Вставить("Поставщик", ТекСтрока.Поставщик);
		Отбор.Вставить("Выбран",    Истина);
		Если Поставщики.Колонки.Количество()=2 Тогда
			Отбор.Вставить("Склад", ТекСтрока.Склад);
		КонецЕсли;
		
		СтрокиТовары = Товары.НайтиСтроки(Отбор);
		Для Каждого СтрокаТовар Из СтрокиТовары Цикл

			ЗаполнитьЗначенияСвойств(Заказ.Товары.Добавить(), СтрокаТовар);

		КонецЦикла;
		
		Заказ.Партнер = ТекСтрока.Поставщик;
		ПартнерыИКонтрагенты.ЗаполнитьКонтрагентаПартнераПоУмолчанию(ТекСтрока.Поставщик, Заказ.Контрагент);

		Заказ.Заполнить(ДанныеДокументаОснования);
		Если Поставщики.Колонки.Количество() = 2 Тогда
			Заказ.Склад = ТекСтрока.Склад;
		КонецЕсли;
		
		ЗакупкиСервер.ЗаполнитьНоменклатуруПоставщикаВТаблице(Заказ.Товары,ТекСтрока.Поставщик);
		Заказ.Записать(РежимЗаписиДокумента.Запись);

		СтрокаЗаказов = Заказы.Добавить();
		СтрокаЗаказов.Ссылка   = Заказ.Ссылка;
		СтрокаЗаказов.Картинка = 2;
	
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Функция СтруктураДокументаОснованияНаСервере(ИспользованиеСкладов)

	СтруктураПолей = Новый Структура("Организация, Подразделение, Склад, ДокументОснование, Сделка, СкладЭтоГруппа",
										"Организация",
										"Подразделение",
										"Склад",
										"Ссылка",
										"Сделка",
										"Склад.ЭтоГруппа");
	РеквизитыЗаполнения = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(ДокументОснование, СтруктураПолей);
	СкладЭтоГруппа = РеквизитыЗаполнения.СкладЭтоГруппа;

	Если Не ИспользованиеСкладов.ИспользуютсяСкладыЗакупки Тогда

		Если СкладЭтоГруппа Тогда

			СтрокаПолей = "Организация, ДокументОснование, Подразделение, Сделка";

		Иначе

			СтрокаПолей = "Организация, ДокументОснование, Подразделение, Склад, Сделка";
		
		КонецЕсли;

	Иначе

		СтрокаПолей = "Организация, ДокументОснование, Подразделение, Склад, Сделка";

	КонецЕсли;

	РеквизитыОснования = Новый Структура(СтрокаПолей);
	ЗаполнитьЗначенияСвойств(РеквизитыОснования, РеквизитыЗаполнения, СтрокаПолей);

	Возврат РеквизитыОснования

КонецФункции 

&НаСервере
Процедура ОбновитьСостоянияЗаказов(СсылкаНаЗаказ)
	
	НайденнаяСтрока = Заказы.НайтиСтроки (Новый Структура("Ссылка",СсылкаНаЗаказ));
	РеквизитыЗаказа = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(СсылкаНаЗаказ,"ПометкаУдаления,Проведен");
	
	Если РеквизитыЗаказа.ПометкаУдаления Тогда
		НайденнаяСтрока[0].Картинка = 1;
	ИначеЕсли РеквизитыЗаказа.Проведен Тогда
		НайденнаяСтрока[0].Картинка = 0;
	Иначе
		НайденнаяСтрока[0].Картинка = 2;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Функция ИспользоватьСкладыВТабличнойЧасти()
	
	ИспользованиеСкладов = Новый Структура("ИспользуютсяСкладыЗакупки, ИспользуютсяСкладыПродажи",
							ПолучитьФункциональнуюОпцию("ИспользоватьСкладыВТабличнойЧастиДокументовЗакупки"),
							ПолучитьФункциональнуюОпцию("ИспользоватьСкладыВТабличнойЧастиДокументовПродажи"));
	
	Возврат ИспользованиеСкладов;
	
КонецФункции

&НаСервере
Функция КоличествоВыбранныхСтрокТовары()

	Возврат Товары.Выгрузить(Новый Структура("Выбран", Истина)).Количество();

КонецФункции 
