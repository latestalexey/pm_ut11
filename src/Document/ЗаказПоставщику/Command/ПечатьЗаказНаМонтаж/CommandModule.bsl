
&НаКлиенте
Процедура ОбработкаКоманды(ПараметрКоманды, ПараметрыВыполненияКоманды)
ТекОбъект = ПараметрКоманды;	
ТабДок = ПечатьЗаказаНаМонтаж(ТекОбъект);
ИспользуемоеИмяФайла = "Заказ на монтаж для "+Строка(ТекОбъект);
Табдок.показать(ИспользуемоеИмяФайла,,);
КонецПроцедуры



Функция ПечатьЗаказаНаМонтаж(СсылкаНаОбъект)
	
	ТабличныйДокумент = Новый ТабличныйДокумент;
	ТабличныйДокумент.ИмяПараметровПечати = "ПараметрыПечати_ЗаказНаМонтаж"; 	
	
	ТабличныйДокумент.АвтоМасштаб = Истина;
	ТабличныйДокумент.ОриентацияСтраницы = ОриентацияСтраницы.Ландшафт;
	ТабличныйДокумент.ОтображатьСетку = Ложь;
	
	ТЗ = СсылкаНаОбъект.ДополнительныеУслуги.Выгрузить();
	ТЗ.свернуть("ЗаказКлиента","");
	НомераЗаказов = "";
	Для каждого ТС из ТЗ цикл
		НомераЗаказов = НомераЗаказов + ТС.ЗаказКлиента.Номер + ", "; 	
	КонецЦИкла;
	НомераЗаказов = Сред(НомераЗаказов,1,СтрДлина(НомераЗаказов)-2);
	ТЗ = СсылкаНаОбъект.ДополнительныеУслуги.Выгрузить();
	ТЗ.свернуть("ПунктДоставки","");
	Пункт = ТЗ[0].ПунктДоставки;

	
	Макет = Документы.ЗаказПоставщику.ПолучитьМакет("ЗаказНаМонтаж");	
	Заголовок = Макет.ПолучитьОбласть("Заголовок");
	Заголовок.Параметры.Заказчик = СсылкаНаОбъект.АК_ЗаказчикУслуги;
	Заголовок.Параметры.НомерЗаказа = НомераЗаказов;
	Заголовок.Параметры.ЗаказчикАдрес = Пункт.Адрес;
	Заголовок.Параметры.ЗаказчикКонтактноеЛицо = СсылкаНаОбъект.АК_КонтактноеЛицоПоУслуге;
	Заголовок.Параметры.Объект = Пункт;
	Заголовок.Параметры.МонтажДата = СсылкаНаОбъект.АК_ДатаВремяИсполненияУслуги;
	Заголовок.Параметры.Номер = СсылкаНаОбъект.Номер;
	Заголовок.Параметры.Дата = Формат(СсылкаНаОбъект.Дата, "ДЛФ=DD");
	Заголовок.Параметры.ЗаказчикКонтактнаяИнформация = ПолучитьИнформациюОКонтактномЛице(СсылкаНаОбъект.АК_КонтактноеЛицоПоУслуге, ложь, Ложь, Справочники.ВидыКонтактнойИнформации.МобильныйТелефонКонтактногоЛица, Справочники.ВидыКонтактнойИнформации.EmailКонтактногоЛица,);
	
	ТабличныйДокумент.Вывести(Заголовок);
	
	ТоварыШапка = Макет.ПолучитьОбласть("ТоварыШапка"); 
	ТоварыСтрока = Макет.ПолучитьОбласть("ТоварыСтрока");
	ТабличныйДокумент.Вывести(ТоварыШапка);
	
	СтоимостьЧаса = 600;
	Для Каждого СтрокаТЗ из СсылкаНаОбъект.ДополнительныеУслуги Цикл
		ТоварыСтрока.Параметры.НомерСтроки = СтрокаТЗ.НомерСтроки;
		ТоварыСтрока.Параметры.Номенклатура = СтрокаТЗ.Номенклатура;
		ТоварыСтрока.Параметры.Габариты = СтрокаТЗ.Характеристика;
		ТоварыСтрока.Параметры.Описание = СтрокаТЗ.Номенклатура.Описание;
		ТоварыСтрока.Параметры.Артикул = СтрокаТЗ.Номенклатура.Артикул;
		ТоварыСтрока.Параметры.Цвет = ""; // ХЗ
		ТоварыСтрока.Параметры.Количество = СтрокаТЗ.Количество;
		//ТоварыСтрока.Параметры.Производитель = СтрокаТЗ.Номенклатура.Производитель;
		
		ТоварыСтрока.Параметры.ОбщееВремя = СтрокаТЗ.ОбщееВремя;
		ТоварыСтрока.Параметры.Стоимость = СтрокаТЗ.ОбщееВремя*СтоимостьЧаса;
				
		ТоварыСтрока.Параметры.Примечание = СтрокаТЗ.Примечание;
		//ТоварыСтрока.Параметры.Примечание = "";//СтрокаТЗ.Количество;
		ТабличныйДокумент.Вывести(ТоварыСтрока);

	КонецЦикла;	
	
	ТоварыПодвал = Макет.ПолучитьОбласть("ТоварыПодвал");
	
	ТоварыПодвал.Параметры.КоличествоВсего = СсылкаНаОбъект.ДополнительныеУслуги.Итог("Количество");
	ТоварыПодвал.Параметры.СуммаОбщееВремя = СсылкаНаОбъект.ДополнительныеУслуги.Итог("ОбщееВремя");
	
	
	ТабличныйДокумент.Вывести(ТоварыПодвал);
	
	ДопРаботы = Макет.ПолучитьОбласть("ДопРаботы");
	ТабличныйДокумент.Вывести(ДопРаботы);
	
	
	Сумма = Макет.ПолучитьОбласть("Сумма");
	Сумма.Параметры.СуммаСтоимость = СсылкаНаОбъект.ДополнительныеУслуги.Итог("ОбщееВремя")*СтоимостьЧаса;
	ТабличныйДокумент.Вывести(Сумма);
	
	Возврат ТабличныйДокумент;
	
КонецФункции


Функция ПолучитьИнформациюОКонтактномЛице(Объект, ФИО = Истина, ФИОСокращенно = Ложь, ТелефонВид = Неопределено, АдресЭПВид = Неопределено, АдресВид = Неопределено, Разделитель = ",")
	
	//
	РезультатИнформация = "";
	
	//
	ТекстЗапроса = "ВЫБРАТЬ
	               |	КонтактныеЛицаПартнеров.Ссылка КАК КонтактноеЛицо,
	               |	КонтактныеЛицаПартнеров.Наименование КАК Наименование,
	               |	КонтактныеЛицаПартнеровКонтактнаяИнформация.Тип,
	               |	КонтактныеЛицаПартнеровКонтактнаяИнформация.Вид,
	               |	КонтактныеЛицаПартнеровКонтактнаяИнформация.Представление,
	               |	КонтактныеЛицаПартнеровКонтактнаяИнформация.ЗначенияПолей,
	               |	КонтактныеЛицаПартнеровКонтактнаяИнформация.Страна,
	               |	КонтактныеЛицаПартнеровКонтактнаяИнформация.Регион,
	               |	КонтактныеЛицаПартнеровКонтактнаяИнформация.Город,
	               |	КонтактныеЛицаПартнеровКонтактнаяИнформация.АдресЭП,
	               |	КонтактныеЛицаПартнеровКонтактнаяИнформация.ДоменноеИмяСервера,
	               |	КонтактныеЛицаПартнеровКонтактнаяИнформация.НомерТелефона,
	               |	КонтактныеЛицаПартнеровКонтактнаяИнформация.НомерТелефонаБезКодов,
	               |	ВЫБОР
	               |		КОГДА КонтактныеЛицаПартнеровКонтактнаяИнформация.Тип = ЗНАЧЕНИЕ(Перечисление.ТипыКонтактнойИнформации.Адрес)
	               |			ТОГДА 1
	               |		КОГДА КонтактныеЛицаПартнеровКонтактнаяИнформация.Тип = ЗНАЧЕНИЕ(Перечисление.ТипыКонтактнойИнформации.Телефон)
	               |			ТОГДА 2
	               |		КОГДА КонтактныеЛицаПартнеровКонтактнаяИнформация.Тип = ЗНАЧЕНИЕ(Перечисление.ТипыКонтактнойИнформации.АдресЭлектроннойПочты)
	               |			ТОГДА 3
	               |	КОНЕЦ КАК Порядок
	               |ИЗ
	               |	Справочник.КонтактныеЛицаПартнеров КАК КонтактныеЛицаПартнеров
	               |		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.КонтактныеЛицаПартнеров.КонтактнаяИнформация КАК КонтактныеЛицаПартнеровКонтактнаяИнформация
	               |		ПО (КонтактныеЛицаПартнеровКонтактнаяИнформация.Ссылка = КонтактныеЛицаПартнеров.Ссылка)
	               |ГДЕ
	               |	КонтактныеЛицаПартнеров.Ссылка = &Ссылка
	               |
	               |УПОРЯДОЧИТЬ ПО
	               |	КонтактноеЛицо,
	               |	Порядок
	               |ИТОГИ
	               |	МАКСИМУМ(Наименование)
	               |ПО
	               |	КонтактноеЛицо";
				   
	//			   
	ПостроительЗапроса = Новый ПостроительЗапроса;
	ПостроительЗапроса.Текст = ТекстЗапроса;
	
	//
	ПостроительЗапроса.Параметры.Вставить("Ссылка", Объект);
	
	//
	ПостроительЗапроса.Выполнить();
	
	//
	ВыборкаКЛ = ПостроительЗапроса.Результат.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	Если ВыборкаКЛ.Следующий() Тогда
		
		//
		КонтактноеЛицо = ВыборкаКЛ.КонтактноеЛицо;
		
		//
		Если ФИО = Истина Тогда
			РезультатИнформация = РезультатИнформация + ВыборкаКЛ.Наименование + Разделитель + " ";
		ИначеЕсли ФИОСокращенно = Истина Тогда	
			РезультатИнформация = РезультатИнформация + СократитьФИО(ВыборкаКЛ.Наименование) + Разделитель + " ";
		КонецЕсли;	
		
		//
		ВыборкаКИ = ВыборкаКЛ.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		Пока ВыборкаКИ.Следующий() Цикл
			
			Если ВыборкаКИ.Вид = ТелефонВид Тогда
				РезультатИнформация = РезультатИнформация + СокрЛП(ВыборкаКИ.Представление) + Разделитель + " ";
			ИначеЕсли ВыборкаКИ.Вид = АдресЭПВид Тогда
				РезультатИнформация = РезультатИнформация + СокрЛП(ВыборкаКИ.Представление) + Разделитель + " ";
			ИначеЕсли ВыборкаКИ.Вид = АдресВид Тогда
				РезультатИнформация = РезультатИнформация + СокрЛП(ВыборкаКИ.Представление) + Разделитель + " ";
			КонецЕсли;	
			
		КонецЦикла;	
		
		//
		РезультатИнформация = Лев(РезультатИнформация, СтрДлина(РезультатИнформация) - 2);
		
	КонецЕсли;	
	
	//
	Возврат РезультатИнформация;
	
КонецФункции	

Функция СократитьФИО(Знач z1)
	
	//
	РезультатФИО = "";
	
	//
	z1 = СтрЗаменить(z1, "  ", " ");
	z1 = СтрЗаменить(z1, "  ", " ");
	
	//
	z1 = СокрЛП(СтрЗаменить(z1, " ", Символы.ПС));
	
	//
	ТекстовыйДокумент = Новый ТекстовыйДокумент;
	ТекстовыйДокумент.УстановитьТекст(z1);
	
	//
	Для Сч = 1 По ТекстовыйДокумент.КоличествоСтрок() Цикл
		
		//
		ТекущаяСтрока = СокрЛП(ТекстовыйДокумент.ПолучитьСтроку(Сч));
		
		//
		Если Сч = 1 Тогда
			РезультатФИО = РезультатФИО + СокрЛП(ТекущаяСтрока) + " ";
			Продолжить;
		КонецЕсли;	
		
		//
		РезультатФИО = РезультатФИО + ВРЕГ(Лев(СокрЛП(ТекущаяСтрока), 1)) + ".";
		
	КонецЦикла;	
	
	//
	Возврат РезультатФИО;

 КонецФункции
