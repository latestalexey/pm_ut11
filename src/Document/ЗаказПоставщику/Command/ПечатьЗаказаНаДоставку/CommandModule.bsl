
&НаКлиенте
Процедура ОбработкаКоманды(ПараметрКоманды, ПараметрыВыполненияКоманды)
	ТекОбъект = ПараметрКоманды;	
	ТабДок = ПечатьЗаказаНаДоставку2(ТекОбъект);
	//{ ООО "АСТЭК" по заказу ООО "ПаксМед". Разработчик: Бурыкин Александр Дата: 24.01.2014
	//
	//ТабДок = ПечатьЗаказаНаДоставку3(ТекОбъект);
	         
	//} 
	ИспользуемоеИмяФайла = "Заказ на доставку для "+ Строка(ТекОбъект);
	ТабДок.ИмяПараметровПечати = "Заявка На Доставку";
	ТабДок.ОриентацияСтраницы = ОриентацияСтраницы.Ландшафт;
	Табдок.показать(ИспользуемоеИмяФайла,,);
КонецПроцедуры

Функция ПечатьЗаказаНаДоставку(СсылкаНаОбъект)
	
	ТабличныйДокумент = Новый ТабличныйДокумент;
	
	ТабличныйДокумент.ИмяПараметровПечати = "ПараметрыПечати_ЗаказНаМонтаж"; 	
	
	ТабличныйДокумент.АвтоМасштаб = Истина;
	ТабличныйДокумент.ОриентацияСтраницы = ОриентацияСтраницы.Портрет;
	ТабличныйДокумент.ОтображатьСетку = Ложь;
	
	
	Макет = Документы.ЗаказПоставщику.ПолучитьМакет("ЗаказНаДоставку");	
	Заголовок = Макет.ПолучитьОбласть("Заголовок");
	
	
	
	ТЗ = СсылкаНаОбъект.ДополнительныеУслуги.Выгрузить();
	ТЗ.Свернуть("ЗаказКлиента","");
	НЗ = "";
	Для каждого ТекСтр из ТЗ цикл
		НЗ = НЗ + ТекСтр.ЗаказКлиента.Номер + ", "; 		
	КонецЦИкла;
	Заголовок.Параметры.НомерЗаказа = НЗ;
	
	
	ТЗ = СсылкаНаОбъект.ДополнительныеУслуги.Выгрузить();
	ТЗ.Свернуть("ПунктПогрузки","");
	Для Сч = 0 ПО ТЗ.Количество()-1 цикл
		_сч = сч+1;
		Заголовок.Параметры["Грузоотправитель" +_сч] = ТЗ[Сч].ПунктПогрузки.Владелец;
		Заголовок.Параметры["МестоЗагрузки" +_сч] = ТЗ[Сч].ПунктПогрузки.Адрес;
		Заголовок.Параметры["КонтактноеЛицо" +_сч] = ПолучитьИнформациюОКонтактномЛице(ТЗ[Сч].ПунктПогрузки.КонтактноеЛицоПартнера, Истина, Ложь, Справочники.ВидыКонтактнойИнформации.МобильныйТелефонКонтактногоЛица, Справочники.ВидыКонтактнойИнформации.EmailКонтактногоЛица,);
	КонецЦИкла;
	
	Заголовок.Параметры.номер = СсылкаНаОбъект.Номер;
	Заголовок.Параметры.Дата = ФОрмат(СсылкаНаОбъект.Дата,"ДФ=dd.MM.yyyy");
	
	
	Заголовок.Параметры.ДатаОтгрузки = СсылкаНаОбъект.АК_ДатаВремяИсполненияУслуги;
	Заголовок.Параметры.Транспорт = СсылкаНаОбъект.АК_Транспорт;
	Заголовок.Параметры.ПогрузкаДаНет = СсылкаНаОбъект.АК_ПогрузкаРазгрузка;
	Заголовок.Параметры.РазгрузкаДаНет = СсылкаНаОбъект.АК_ПогрузкаРазгрузка1;
	Заголовок.Параметры.ЭкпедированиеДатНет =  СсылкаНаОбъект.АК_Экпедирование;
	Заголовок.Параметры.ОписаниеГруза = СсылкаНаОбъект.АК_ОписаниеГруза;
	Заголовок.Параметры.ВидУпаковки = СсылкаНаОбъект.АК_ВидУпаковки;
	Заголовок.Параметры.СпособПогрузки = СсылкаНаОбъект.АК_СпособПогрузки;
	Заголовок.Параметры.Клиент = СсылкаНаОбъект.АК_ЗаказчикУслуги;
	//Вычислим вес и объем
	Вес = 0;
	Объем = 0;
	
	Для каждого текСтр из  СсылкаНаОбъект.ДополнительныеУслуги цикл
		Вес = Вес + текСтр.Номенклатура.Вес	* текСтр.Количество;
		Объем = Объем + текСтр.Номенклатура.Объем	* текСтр.Количество;
	КонецЦикла;	
	Заголовок.Параметры.Вес =Вес;
	Заголовок.Параметры.Объем = Объем;
	
	Заголовок.Параметры.Места = СсылкаНаОбъект.ДополнительныеУслуги.Итог("Количество");
	Заголовок.Параметры.СрокДоставки =СсылкаНаОбъект.АК_СрокДоставки;
	
	Заголовок.Параметры.ВодительТС = СсылкаНаОбъект.АК_ВодительТС;
	Заголовок.Параметры.ФиоВодителя = СсылкаНаОбъект.АК_ФиоВодителя;
	Заголовок.Параметры.Паспорт = СсылкаНаОбъект.АК_Паспорт ;
	Заголовок.Параметры.ГосНомер = СсылкаНаОбъект.АК_ГосНомер;
	Заголовок.Параметры.ТелефонВодителя =СсылкаНаОбъект.АК_ТелефонВодителя;
	Заголовок.Параметры.Комментарий =СсылкаНаОбъект.Комментарий;
	Заголовок.Параметры.Менеджер = СсылкаНаОбъект.Менеджер;
	
	ТЗ = СсылкаНаОбъект.ДополнительныеУслуги.Выгрузить();
	ТЗ.Свернуть("ПунктДоставки","");
	Для Сч = 0 ПО ТЗ.Количество()-1 цикл
		_сч = сч+1;
		Заголовок.Параметры["АдресВыгрузки" +_сч] = ТЗ[Сч].ПунктДоставки.Адрес;
		Заголовок.Параметры["КонтактноеЛицоВыгрузки" +_сч] = ПолучитьИнформациюОКонтактномЛице(ТЗ[Сч].ПунктДоставки.КонтактноеЛицоПартнера, Истина, Ложь, Справочники.ВидыКонтактнойИнформации.МобильныйТелефонКонтактногоЛица, Справочники.ВидыКонтактнойИнформации.EmailКонтактногоЛица,);
	КонецЦИкла;
	
	
	ТабличныйДокумент.Вывести(Заголовок);
	
	Возврат ТабличныйДокумент;
	
КонецФункции

Функция ПолучитьИнформациюОКонтактномЛице(Объект, ФИО = Истина, ФИОСокращенно = Ложь, ТелефонВид = Неопределено, АдресЭПВид = Неопределено, АдресВид = Неопределено, Разделитель = ",")
	
	//
	РезультатИнформация = "";
	
	//
	ТекстЗапроса = "ВЫБРАТЬ
	|	КонтактныеЛицаПартнеров.Ссылка КАК КонтактноеЛицо,
	|	КонтактныеЛицаПартнеров.Наименование КАК Наименование,
	|	КонтактныеЛицаПартнеровКонтактнаяИнформация.Тип,
	|	КонтактныеЛицаПартнеровКонтактнаяИнформация.Вид,
	|	КонтактныеЛицаПартнеровКонтактнаяИнформация.Представление,
	|	КонтактныеЛицаПартнеровКонтактнаяИнформация.ЗначенияПолей,
	|	КонтактныеЛицаПартнеровКонтактнаяИнформация.Страна,
	|	КонтактныеЛицаПартнеровКонтактнаяИнформация.Регион,
	|	КонтактныеЛицаПартнеровКонтактнаяИнформация.Город,
	|	КонтактныеЛицаПартнеровКонтактнаяИнформация.АдресЭП,
	|	КонтактныеЛицаПартнеровКонтактнаяИнформация.ДоменноеИмяСервера,
	|	КонтактныеЛицаПартнеровКонтактнаяИнформация.НомерТелефона,
	|	КонтактныеЛицаПартнеровКонтактнаяИнформация.НомерТелефонаБезКодов,
	|	ВЫБОР
	|		КОГДА КонтактныеЛицаПартнеровКонтактнаяИнформация.Тип = ЗНАЧЕНИЕ(Перечисление.ТипыКонтактнойИнформации.Адрес)
	|			ТОГДА 1
	|		КОГДА КонтактныеЛицаПартнеровКонтактнаяИнформация.Тип = ЗНАЧЕНИЕ(Перечисление.ТипыКонтактнойИнформации.Телефон)
	|			ТОГДА 2
	|		КОГДА КонтактныеЛицаПартнеровКонтактнаяИнформация.Тип = ЗНАЧЕНИЕ(Перечисление.ТипыКонтактнойИнформации.АдресЭлектроннойПочты)
	|			ТОГДА 3
	|	КОНЕЦ КАК Порядок
	|ИЗ
	|	Справочник.КонтактныеЛицаПартнеров КАК КонтактныеЛицаПартнеров
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.КонтактныеЛицаПартнеров.КонтактнаяИнформация КАК КонтактныеЛицаПартнеровКонтактнаяИнформация
	|		ПО (КонтактныеЛицаПартнеровКонтактнаяИнформация.Ссылка = КонтактныеЛицаПартнеров.Ссылка)
	|ГДЕ
	|	КонтактныеЛицаПартнеров.Ссылка = &Ссылка
	|
	|УПОРЯДОЧИТЬ ПО
	|	КонтактноеЛицо,
	|	Порядок
	|ИТОГИ
	|	МАКСИМУМ(Наименование)
	|ПО
	|	КонтактноеЛицо";
	
	//			   
	ПостроительЗапроса = Новый ПостроительЗапроса;
	ПостроительЗапроса.Текст = ТекстЗапроса;
	
	//
	ПостроительЗапроса.Параметры.Вставить("Ссылка", Объект);
	
	//
	ПостроительЗапроса.Выполнить();
	
	//
	ВыборкаКЛ = ПостроительЗапроса.Результат.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	Если ВыборкаКЛ.Следующий() Тогда
		
		//
		КонтактноеЛицо = ВыборкаКЛ.КонтактноеЛицо;
		
		//
		Если ФИО = Истина Тогда
			РезультатИнформация = РезультатИнформация + ВыборкаКЛ.Наименование + Разделитель + " ";
		ИначеЕсли ФИОСокращенно = Истина Тогда	
			РезультатИнформация = РезультатИнформация + СократитьФИО(ВыборкаКЛ.Наименование) + Разделитель + " ";
		КонецЕсли;	
		
		//
		ВыборкаКИ = ВыборкаКЛ.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		Пока ВыборкаКИ.Следующий() Цикл
			
			Если ВыборкаКИ.Вид = ТелефонВид Тогда
				РезультатИнформация = РезультатИнформация + СокрЛП(ВыборкаКИ.Представление) + Разделитель + " ";
			ИначеЕсли ВыборкаКИ.Вид = АдресЭПВид Тогда
				РезультатИнформация = РезультатИнформация + СокрЛП(ВыборкаКИ.Представление) + Разделитель + " ";
			ИначеЕсли ВыборкаКИ.Вид = АдресВид Тогда
				РезультатИнформация = РезультатИнформация + СокрЛП(ВыборкаКИ.Представление) + Разделитель + " ";
			КонецЕсли;	
			
		КонецЦикла;	
		
		//
		РезультатИнформация = Лев(РезультатИнформация, СтрДлина(РезультатИнформация) - 2);
		
	КонецЕсли;	
	
	//
	Возврат РезультатИнформация;
	
КонецФункции	

Функция СократитьФИО(Знач z1)
	
	//
	РезультатФИО = "";
	
	//
	z1 = СтрЗаменить(z1, "  ", " ");
	z1 = СтрЗаменить(z1, "  ", " ");
	
	//
	z1 = СокрЛП(СтрЗаменить(z1, " ", Символы.ПС));
	
	//
	ТекстовыйДокумент = Новый ТекстовыйДокумент;
	ТекстовыйДокумент.УстановитьТекст(z1);
	
	//
	Для Сч = 1 По ТекстовыйДокумент.КоличествоСтрок() Цикл
		
		//
		ТекущаяСтрока = СокрЛП(ТекстовыйДокумент.ПолучитьСтроку(Сч));
		
		//
		Если Сч = 1 Тогда
			РезультатФИО = РезультатФИО + СокрЛП(ТекущаяСтрока) + " ";
			Продолжить;
		КонецЕсли;	
		
		//
		РезультатФИО = РезультатФИО + ВРЕГ(Лев(СокрЛП(ТекущаяСтрока), 1)) + ".";
		
	КонецЦикла;	
	
	//
	Возврат РезультатФИО;
	
КонецФункции



Функция ПечатьЗаказаНаДоставку2(СсылкаНаОбъект)
	
	ТабличныйДокумент = Новый ТабличныйДокумент;
	
	ТабличныйДокумент.ИмяПараметровПечати = "ПараметрыПечати_ЗаказНаМонтаж"; 	
	
	ТабличныйДокумент.АвтоМасштаб = Истина;
	ТабличныйДокумент.ОриентацияСтраницы = ОриентацияСтраницы.Портрет;
	ТабличныйДокумент.ОтображатьСетку = Ложь;
	
	//ЗаполнимЗаголовок
	Макет = Документы.ЗаказПоставщику.ПолучитьМакет("ЗаказНаДоставку2");
	НомерЗаявки = Макет.ПолучитьОбласть("НомерЗаявкиНаДоставку");
	НомерЗаявки.Параметры.Заявка = СсылкаНаОбъект.Номер;
	ШапкаТабЧастиПодача = Макет.ПолучитьОбласть("ШапкаТабЧастиПодача");
	ДанныеТабЧастиПодача = Макет.ПолучитьОбласть("ДанныеТабЧастиПодача");   
	//
	
	//получим пустую строку
	ОблостьСтрока = Макет.ПолучитьОбласть("строка");
	//
	
	//Разабьем дату на число и время
	а = СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивСлов(СсылкаНаОбъект.АК_ДатаВремяИсполненияУслуги);
	ДатаП = а[0] + "." + а[1] + "." + а[2];
	ВремяП  = а[3] + ":" + а[4];
	//
	
	//соеденим области нашей первой части
	ДанныеТабЧастиПодача.Параметры.датаподачи = ДатаП; 
	ДанныеТабЧастиПодача.Параметры.времяподачи = ВремяП;
	ДанныеТабЧастиПодача.Параметры.Тонаж = СсылкаНаОбъект.АК_Транспорт;
	ТабличныйДокумент.Присоединить(НомерЗаявки);
	ТабличныйДокумент.Присоединить(ШапкаТабЧастиПодача);
	ТабличныйДокумент.Присоединить(ДанныеТабЧастиПодача);
	ТабличныйДокумент.Присоединить(ОблостьСтрока);
	//
	
	//Получим список нашей доставки
	Запрос = Новый Запрос("ВЫБРАТЬ 
	|	ЗаказПоставщикуДополнительныеУслуги.ПунктПогрузки.Адрес КАК АдресЗагрузки,
	|	ЗаказПоставщикуДополнительныеУслуги.ПунктПогрузки.ВремяРаботы КАК РежимРаботы,
	|	ЗаказПоставщикуДополнительныеУслуги.ПунктПогрузки.КонтактноеЛицоПартнера КАК Контакт,
	|	ЗаказПоставщикуДополнительныеУслуги.ПунктПогрузки.Наименование КАК Отправитель,
	|	ЗаказПоставщикуДополнительныеУслуги.ПунктПогрузки.Доверенность КАК Довереность,
	|	ЗаказПоставщику.АК_ОписаниеГруза КАК Примечание,
	|	ЗаказПоставщикуДополнительныеУслуги.ПунктПогрузки.Наименование,
	|	ЗаказПоставщикуДополнительныеУслуги.ПунктДоставки.КонтактноеЛицоПартнера КАК Контакт1
	|	ИЗ
	|	Документ.ЗаказПоставщику.ДополнительныеУслуги КАК ЗаказПоставщикуДополнительныеУслуги
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ЗаказПоставщику КАК ЗаказПоставщику
	|		ПО ЗаказПоставщикуДополнительныеУслуги.Ссылка = ЗаказПоставщику.Ссылка
	|ГДЕ
	|	ЗаказПоставщику.Ссылка = &Ссылка
	|
	|СГРУППИРОВАТЬ ПО
	|	ЗаказПоставщикуДополнительныеУслуги.ПунктПогрузки.Доверенность,
	|	ЗаказПоставщикуДополнительныеУслуги.ПунктПогрузки.Адрес,
	|	ЗаказПоставщикуДополнительныеУслуги.ПунктДоставки.КонтактноеЛицоПартнера,
	|	ЗаказПоставщикуДополнительныеУслуги.ПунктПогрузки.КонтактноеЛицоПартнера,
	|	ЗаказПоставщикуДополнительныеУслуги.ПунктПогрузки.ВремяРаботы,
	|	ЗаказПоставщику.АК_ОписаниеГруза,
	|	ЗаказПоставщикуДополнительныеУслуги.ПунктПогрузки.Наименование,
	|	ЗаказПоставщикуДополнительныеУслуги.ПунктПогрузки.Наименование");
	
	Запрос.УстановитьПараметр("Ссылка", СсылкаНаОбъект);
	Результат	= Запрос.Выполнить().Выбрать();
	Парам = 1;
	ОбъеденитьПерЯч = 8;
	ОбъеденитьПослЯч = 8;
	Столбец = 1;
	НомераЯчеек  = Новый Массив;
	Пока Результат.Следующий() Цикл
		
		
		//Если Результат.НомерЗаказа = NULL Тогда 
		//	ВозвратНаСклад = Результат;
		//КонецЕсли;
		НомерТочки = Макет.ПолучитьОбласть("НомерТочки");
		НомерТочки.Параметры.точка = "Точка №" + " " + Парам;
		ТабличныйДокумент.Присоединить(НомерТочки);
		ШабкаТабЧасти = Макет.ПолучитьОбласть("ШабкаТабЧасти");
		ТабличныйДокумент.Присоединить(ШабкаТабЧасти);
		
		ДанныеТабЧасти = Макет.ПолучитьОбласть("ДанныеТабЧасти|Инфо");
		ДанныеТабЧасти.Параметры.АдресПолучателя = Результат.АдресЗагрузки;
		ДанныеТабЧасти.Параметры.ВремяРаботы = Результат.РежимРаботы;
		КонтактныйТел1 = Новый Запрос ("ВЫБРАТЬ
		|	КонтактныеЛицаПартнеровКонтактнаяИнформация.НомерТелефона,
		|	ВидыКонтактнойИнформации.Наименование
		|ИЗ
		|	Справочник.КонтактныеЛицаПартнеров.КонтактнаяИнформация КАК КонтактныеЛицаПартнеровКонтактнаяИнформация
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ВидыКонтактнойИнформации КАК ВидыКонтактнойИнформации
		|		ПО КонтактныеЛицаПартнеровКонтактнаяИнформация.Вид = ВидыКонтактнойИнформации.Ссылка
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.КонтактныеЛицаПартнеров КАК КонтактныеЛицаПартнеров
		|		ПО КонтактныеЛицаПартнеровКонтактнаяИнформация.Ссылка = КонтактныеЛицаПартнеров.Ссылка
		|ГДЕ
		|	КонтактныеЛицаПартнеров.Ссылка = &Ссылка");
		КонтактныйТел1.УстановитьПараметр("Ссылка", Результат.Контакт);
		// КонтактныйТел1.УстановитьПараметр("Наименование", "Мобильный телефон");
		Результат3	= КонтактныйТел1.Выполнить().Выбрать();
		Пока Результат3.Следующий() Цикл
			Если Результат3.Наименование = "Мобильный телефон" и Результат3.НомерТелефона <> NULL Тогда
				НомерТелефона = Результат3.НомерТелефона;
				Прервать;
			ИначеЕсли Результат3.Наименование = "Телефон" и Результат3.НомерТелефона <> NULL Тогда
				НомерТелефона = Результат3.НомерТелефона;
			КонецЕсли;
		КонецЦикла;
		
		ДанныеТабЧасти.Параметры.Контакт = строка(Результат.Контакт) + " " + строка(НомерТелефона);
		ДанныеТабЧасти.Параметры.КонтрагентПоставщик = Результат.Отправитель;
		ТабличныйДокумент.Присоединить(ДанныеТабЧасти);
		
		
		
		Запрос2 = Новый Запрос ("ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ЗаказПоставщикуДополнительныеУслуги.ПунктПогрузки.Адрес КАК АдресЗагрузки,
		|	ЗаказПоставщикуДополнительныеУслуги.ПунктПогрузки.ВремяРаботы КАК РежимРаботы,
		|	ЗаказПоставщикуДополнительныеУслуги.ПунктПогрузки.КонтактноеЛицоПартнера КАК Контакт,
		|	ЗаказПоставщикуДополнительныеУслуги.ПунктПогрузки.Наименование КАК Отправитель,
		|	ЗаказПоставщикуДополнительныеУслуги.ПунктПогрузки.Доверенность КАК Довереность,
		|	ЗаказПоставщику.АК_ОписаниеГруза КАК Примечание,
		|	ЗаказПоставщикуДополнительныеУслуги.ПунктДоставки.Адрес КАК КудаВести,
		|	ЗаказПоставщикуДополнительныеУслуги.ПунктПогрузки.Наименование,
		|	ЗаказПоставщикуДополнительныеУслуги.ЗаказКлиента.Номер,
		|	ЗаказПоставщикуДополнительныеУслуги.ПунктДоставки.Наименование КАК Получатель,
		|	ЗаказПоставщику.ВозвращениеНаСклад КАК ВозвратНаСклад,
		|	ЗаказПоставщику.НомерПоДаннымПоставщика,
		|	ЗаказПоставщику.ДатаПоДаннымПоставщика,
		|	ЗаказПоставщикуДополнительныеУслуги.ЗаказКлиента.Ссылка КАК ЗаказСсылка,
		|	ЗаказПоставщикуДополнительныеУслуги.ПунктДоставки.КонтактноеЛицоПартнера КАК Контакт1
		|ИЗ
		|	Документ.ЗаказПоставщику.ДополнительныеУслуги КАК ЗаказПоставщикуДополнительныеУслуги
		|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ЗаказПоставщику КАК ЗаказПоставщику
		|		ПО ЗаказПоставщикуДополнительныеУслуги.Ссылка = ЗаказПоставщику.Ссылка
		|ГДЕ
		|	ЗаказПоставщику.Ссылка = &Ссылка
		|	И ЗаказПоставщикуДополнительныеУслуги.ПунктПогрузки.Адрес = &Адрес
		|	И ЗаказПоставщикуДополнительныеУслуги.ПунктПогрузки.Наименование = &Организация");
		
		Запрос2.УстановитьПараметр("Ссылка", СсылкаНаОбъект);
		Запрос2.УстановитьПараметр("Адрес", Результат.АдресЗагрузки);
		Запрос2.УстановитьПараметр("Организация", Результат.Отправитель);
		Результат2	= Запрос2.Выполнить().Выбрать();
		Труд = 1;
		Таксебе = 1;
		Пока Результат2.Следующий() Цикл 
			
			
			
			Если Труд > Таксебе Тогда
				ДанныеТабЧасти = Макет.ПолучитьОбласть("ДанныеТабЧасти|Инфо");
				ТабличныйДокумент.Вывести(ДанныеТабЧасти);
				ОбъеденитьПослЯч = ОбъеденитьПослЯч + 1; 
			КонецЕсли;
			
			ДанныеТабЧасти = Макет.ПолучитьОбласть("ДанныеТабЧасти|КрышаЗагрузка");
			ДанныеТабЧасти.Параметры.НомерЗаказа = Результат2.ЗаказКлиентаНомер;
			НомераСчетовПоставщика = Новый Запрос ("ВЫБРАТЬ
			|	ЗаказПоставщику.НомерПоДаннымПоставщика,
			|	ЗаказПоставщику.ДатаПоДаннымПоставщика
			|ИЗ
			|	Документ.ЗаказПоставщику КАК ЗаказПоставщику
			|ГДЕ
			|	ЗаказПоставщику.ДокументОснование.Ссылка = &Ссылка");
			НомераСчетовПоставщика.УстановитьПараметр("Ссылка", Результат2.ЗаказСсылка);
			Если  НЕ НомераСчетовПоставщика.Выполнить().Пустой() Тогда										
				НомераСчетов = НомераСчетовПоставщика.Выполнить().Выгрузить();
				Если  НомераСчетов[0].ДатаПоДаннымПоставщика = '00010101000000' Тогда
					ДанныеТабЧасти.Параметры.ДокументыЗагрузка = "Счет (№" + Строка(НомераСчетов[0].НомерПоДаннымПоставщика) + ") ";
				Иначе
					ДанныеТабЧасти.Параметры.ДокументыЗагрузка = "(Счет №" + Строка(НомераСчетов[0].НомерПоДаннымПоставщика) + " от " + Строка(НомераСчетов[0].ДатаПоДаннымПоставщика) + ") ";
					
				КонецЕсли;
			КонецЕсли;
			
			Если Результат.Довереность = Истина Тогда
				
				ДанныеТабЧасти.Параметры.ДокументыЗагрузка = строка(ДанныеТабЧасти.Параметры.ДокументыЗагрузка) + "Необходима Доверенность";
				
			КонецЕсли;
			
			
			ДанныеТабЧасти.Параметры.КудаВести = Результат2.КудаВести;
			ТабличныйДокумент.Присоединить(ДанныеТабЧасти); 
			ДанныеТабЧасти = Макет.ПолучитьОбласть("ДанныеТабЧасти|КрышаВыгрузка");
			ДанныеТабЧасти.Параметры.КонтрагентПолучатель = Результат2.Получатель;
			КонтактныйТел2 = Новый Запрос ("ВЫБРАТЬ
			|	КонтактныеЛицаПартнеровКонтактнаяИнформация.НомерТелефона,
			|	ВидыКонтактнойИнформации.Наименование
			|ИЗ
			|	Справочник.КонтактныеЛицаПартнеров.КонтактнаяИнформация КАК КонтактныеЛицаПартнеровКонтактнаяИнформация
			|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ВидыКонтактнойИнформации КАК ВидыКонтактнойИнформации
			|		ПО КонтактныеЛицаПартнеровКонтактнаяИнформация.Вид = ВидыКонтактнойИнформации.Ссылка
			|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.КонтактныеЛицаПартнеров КАК КонтактныеЛицаПартнеров
			|		ПО КонтактныеЛицаПартнеровКонтактнаяИнформация.Ссылка = КонтактныеЛицаПартнеров.Ссылка
			|ГДЕ
			|	КонтактныеЛицаПартнеров.Ссылка = &Ссылка");
			КонтактныйТел2.УстановитьПараметр("Ссылка", Результат2.Контакт1);
			// КонтактныйТел1.УстановитьПараметр("Наименование", "Мобильный телефон");
			Результат4	= КонтактныйТел2.Выполнить().Выбрать();
			Пока Результат4.Следующий() Цикл
				Если Результат4.Наименование = "Мобильный телефон" и Результат4.НомерТелефона <> NULL Тогда
					НомерТелефона = Результат4.НомерТелефона;
					Прервать;
				ИначеЕсли Результат4.Наименование = "Телефон" и Результат4.НомерТелефона <> NULL Тогда
					НомерТелефона = Результат4.НомерТелефона;
				КонецЕсли;
			КонецЦикла;
			
			ДанныеТабЧасти.Параметры.Контакт1 = строка(Результат2.Контакт1) + " " + строка(НомерТелефона);			
			ТабличныйДокумент.Присоединить(ДанныеТабЧасти);
			ДанныеТабЧасти = Макет.ПолучитьОбласть("ДанныеТабЧасти|Конец");
			ДанныеТабЧасти.Параметры.Примечание = Результат2.Примечание;
			ТабличныйДокумент.Присоединить(ДанныеТабЧасти); 
			Труд = Труд + 1;
			
		КонецЦикла;
		
		
		
		
		//ДанныеТабЧасти.Параметры.КонтрагентПоставщик = Результат.Отправитель;
		//Если Результат.Довереность = Истина Тогда
		//
		//	ДанныеТабЧасти.Параметры.ДокументыЗагрузка = "Необходима Доверенность";
		//
		//КонецЕсли;
		//ШапкаТабЧасти.Параметры.КудаВести = Результат.КудаВести;
		
		
		Парам = Парам + 1;
		
		//добавим в структуру номера точек
		
		НомераСтрок=Новый Структура
		("Первая,Последняя");
		НомераСтрок.Первая=ОбъеденитьПерЯч;
		НомераСтрок.Последняя=ОбъеденитьПослЯч;
		НомераЯчеек.Добавить(НомераСтрок);
		
		
		
		ОбъеденитьПерЯч = ОбъеденитьПослЯч + 4;
		ОбъеденитьПослЯч = ОбъеденитьПерЯч;
		
	КонецЦикла;
	//
	Для Каждого точка из НомераЯчеек цикл
		
		ТабличныйДокумент.Область(точка.Первая,1,точка.Последняя,1).Объединить();
		ТабличныйДокумент.Область(точка.Первая,2,точка.Последняя,2).Объединить();
		ТабличныйДокумент.Область(точка.Первая,3,точка.Последняя,3).Объединить();
		ТабличныйДокумент.Область(точка.Первая,4,точка.Последняя,4).Объединить();
		ТабличныйДокумент.Область(точка.Первая,8,точка.Последняя,8).Объединить();
		ТабличныйДокумент.Область(точка.Первая,9,точка.Последняя,9).Объединить();
		ТабличныйДокумент.Область(точка.Первая,10,точка.Последняя,10).Объединить();
		ТабличныйДокумент.Область(точка.Первая,11,точка.Последняя,11).Объединить();
		
		
	КонецЦикла;
	Если Результат2.ВозвратНаСклад = Истина Тогда 
		
		НомерТочки = Макет.ПолучитьОбласть("НомерТочки");
		НомерТочки.Параметры.точка = "Точка №" + " " + Парам;
		ТабличныйДокумент.Присоединить(НомерТочки);
		ШабкаТабЧасти = Макет.ПолучитьОбласть("ШабкаТабЧасти");
		ТабличныйДокумент.Присоединить(ШабкаТабЧасти);
		
		ДанныеТабЧасти = Макет.ПолучитьОбласть("ДанныеТабЧасти|Инфо");
		ДанныеТабЧасти.Параметры.АдресПолучателя = Результат2.КудаВести;
		ДанныеТабЧасти.Параметры.Контакт = строка(Результат2.Контакт1) + " " + строка(НомерТелефона);
		ДанныеТабЧасти.Параметры.КонтрагентПоставщик = Результат2.Получатель;
		ТабличныйДокумент.Присоединить(ДанныеТабЧасти);		
		ДанныеТабЧасти = Макет.ПолучитьОбласть("ДанныеТабЧасти|КрышаЗагрузка");	
		ДанныеТабЧасти.Параметры.КудаВести = "Южный склад Адрес: г. Чехов. Симферопольское шоссе, д. 2 Время работы: Понедельник - Пятница 9:00 - 18:00";
		ТабличныйДокумент.Присоединить(ДанныеТабЧасти); 
		ДанныеТабЧасти = Макет.ПолучитьОбласть("ДанныеТабЧасти|КрышаВыгрузка");
		ДанныеТабЧасти.Параметры.КонтрагентПолучатель = "Первая логистическая компания";
		ДанныеТабЧасти.Параметры.Контакт1 = "Светлана начальник склада  89104990099";
		ТабличныйДокумент.Присоединить(ДанныеТабЧасти);
		ДанныеТабЧасти = Макет.ПолучитьОбласть("ДанныеТабЧасти|Конец");
		ТабличныйДокумент.Присоединить(ДанныеТабЧасти); 
		
	КонецЕсли;	
	Возврат ТабличныйДокумент;
	
	
	
КонецФункции // ПечатьЗаказаНаДоставку2()

//	&НаСервере
//Функция ПечатьЗаказаНаДоставку3(СсылкаНаОбъект)
//	
//	ТабличныйДокумент = Новый ТабличныйДокумент;
//	
//	Сообщить("1234567");
//	//ЗаполнимЗаголовок
//	Макет = Документы.ЗаказПоставщику.ПолучитьМакет("акЗаказНаДоставку3");
//	
//	ОбластьНомерЗаявки = Макет.ПолучитьОбласть("ДанныеЗаказа");
//	ОбластьНомерЗаявки.Параметры.Заявка = СсылкаНаОбъект.Номер;
//	
//	//Разабьем дату на число и время
//	а = СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивСлов(СсылкаНаОбъект.АК_ДатаВремяИсполненияУслуги);
//	ДатаПодачи = а[0] + "." + а[1] + "." + а[2];
//	ВремяПодачи  = а[3] + ":" + а[4];
//	
//	ОбластьНомерЗаявки.Параметры.ДатаПодачи =  ДатаПодачи;
//	ОбластьНомерЗаявки.Параметры.ВремяПодачи = ВремяПодачи;
//	ОбластьНомерЗаявки.Параметры.Транспорт = СсылкаНаОбъект.АК_Транспорт;
//	
//	ОбластьПунктыПогрузкиШапка = Макет.ПолучитьОбласть("ПунктыПогрузкиШапка");	
//	ТабличныйДокумент.Вывести(ОбластьНомерЗаявки);
//	ТабличныйДокумент.Вывести(ОбластьПунктыПогрузкиШапка);
//	
//	ОбластьПунктыПогрузкиСтрока = Макет.ПолучитьОбласть("ПунктыПогрузкиСтрока");
//	ОбластьПунктыОтгрузкиШапка  = Макет.ПолучитьОбласть("ПунктыОтгрузкиШапка");
//	ОбластьПунктыОтгрузкиСтрока = Макет.ПолучитьОбласть("ПунктыОтгрузкиСтрока");
//	
//	
//	
//	//ЕДИНЫЙ ЗАПРОС ДЛЯ ПУНКТОВ ПОГРУЗКИ И ДОСТАВКИ
//	
//	ЕдиныйЗапрос = новый Запрос;
//	ЕдиныйЗапрос.Текст = "ВЫБРАТЬ РАЗЛИЧНЫЕ
//	|	ЗаказНаДоставку.Ссылка КАК ЗаказНаДоставку,
//	|	ЗаказПоставщикуДополнительныеУслуги.ПунктПогрузки,
//	|	ЗаказПоставщикуДополнительныеУслуги.ПунктДоставки,
//	|	ЗаказПоставщикуДополнительныеУслуги.ЗаказКлиента КАК ЗаказКлиента,
//	|	ЗаказПоставщикуДополнительныеУслуги.ЗаказПоставщика КАК ЗаказПоставщику,
//	|	ЗаказПоставщику.НомерПоДаннымПоставщика КАК НомерСчета,
//	|	ЗаказПоставщику.ДатаПоДаннымПоставщика КАК ДатаСчета,
//	|	ЗаказПоставщикуДополнительныеУслуги.ПунктПогрузки.Адрес КАК ПунктПогрузкиАдрес,
//	|	ЗаказПоставщикуДополнительныеУслуги.ПунктПогрузки.ВремяРаботы КАК ПунктПогрузкиВремяРаботы,
//	|	ЗаказПоставщикуДополнительныеУслуги.ПунктПогрузки.КонтактноеЛицоПартнера КАК ПунктПогрузкиКонтактноеЛицо,
//	|	ЗаказПоставщикуДополнительныеУслуги.ПунктПогрузки.Наименование КАК ПунктПогрузкиОтправитель,
//	|	ЗаказПоставщикуДополнительныеУслуги.ПунктДоставки.Адрес КАК ПунктДоставкиАдрес,
//	|	ЗаказПоставщикуДополнительныеУслуги.ПунктДоставки.ВремяРаботы КАК ПунктДоставкиВремяРаботы,
//	|	ЗаказПоставщикуДополнительныеУслуги.ПунктДоставки.КонтактноеЛицоПартнера КАК ПунктДоставкиКонтактноеЛицо,
//	|	ЗаказПоставщикуДополнительныеУслуги.ПунктДоставки.Наименование КАК ПунктДоставкиПолучатель,
//	|	ПогрузкаКонтактныеЛица.НомерТелефона КАК ПунктПогрузкиТелефон,
//	|	ВыгрузкаКонтактныеЛица.НомерТелефона КАК ПунктДоставкиТелефон,
//	|	ЗаказПоставщикуДополнительныеУслуги.ПунктПогрузки.Доверенность КАК ПунктПогрузкиДоверенность
//	|ИЗ
//	|	Документ.ЗаказПоставщику КАК ЗаказНаДоставку
//	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ЗаказПоставщику.ДополнительныеУслуги КАК ЗаказПоставщикуДополнительныеУслуги
//	|			ЛЕВОЕ СОЕДИНЕНИЕ Справочник.КонтактныеЛицаПартнеров.КонтактнаяИнформация КАК ПогрузкаКонтактныеЛица
//	|			ПО ЗаказПоставщикуДополнительныеУслуги.ПунктПогрузки.КонтактноеЛицоПартнера = ПогрузкаКонтактныеЛица.Ссылка
//	|			ЛЕВОЕ СОЕДИНЕНИЕ Документ.ЗаказПоставщику КАК ЗаказПоставщику
//	|			ПО ЗаказПоставщикуДополнительныеУслуги.ЗаказПоставщика = ЗаказПоставщику.Ссылка
//	|			ЛЕВОЕ СОЕДИНЕНИЕ Справочник.КонтактныеЛицаПартнеров.КонтактнаяИнформация КАК ВыгрузкаКонтактныеЛица
//	|			ПО ЗаказПоставщикуДополнительныеУслуги.ПунктДоставки.КонтактноеЛицоПартнера = ВыгрузкаКонтактныеЛица.Ссылка
//	|		ПО (ЗаказПоставщикуДополнительныеУслуги.Ссылка = ЗаказНаДоставку.Ссылка)
//	|ГДЕ
//	|	ЗаказНаДоставку.Ссылка = &Ссылка
//	|	И ПогрузкаКонтактныеЛица.Тип = &Тип
//	|	И ВыгрузкаКонтактныеЛица.Тип = &Тип";
//	
//	ЕдиныйЗапрос.УстановитьПараметр("Ссылка", СсылкаНаОбъект);
//	ЕдиныйЗапрос.УстановитьПараметр("Тип", Перечисления.ТипыКонтактнойИнформации.Телефон);
//	
//	Результат = ЕдиныйЗапрос.Выполнить().Выгрузить();
//	
//	//////////------------------------------------------
//	//Заполнение пункта погрузки
//	ПунктПогрузкиАдресСтарый =NULL;
//	ЗаказклиентаСтарый =NULL;
//	ЗаказПоставщикуСтарый =NULL;
//	Для каждого СтрокаРезультата ИЗ Результат ЦИКЛ
//		
//		ОбластьПунктыПогрузкиСтрока.Параметры.АдресПунктаПогрузки = СтрокаРезультата.ПунктПогрузкиАдрес;
//		ОбластьПунктыПогрузкиСтрока.Параметры.ВремяРаботыПунктаПогрузки = СтрокаРезультата.ПунктПогрузкиВремяРаботы;
//		ОбластьПунктыПогрузкиСтрока.Параметры.КонтактноеЛицоПунктаПогрузки = СТРОКА(СтрокаРезультата.ПунктПогрузкиКонтактноеЛицо);
//		
//		ОбластьПунктыПогрузкиСтрока.Параметры.ОтправительПунктаПогрузки = СтрокаРезультата.ПунктПогрузкиОтправитель;
//		
//		Если СтрокаРезультата.ПунктПогрузкиДоверенность = ложь Тогда		        
//			ОбластьПунктыПогрузкиСтрока.Параметры.ДокументыПунктаПогрузки = "По счету № " + СТРОКА(СтрокаРезультата.НомерСчета) + " от " + СТРОКА(Формат(ДАТА(СтрокаРезультата.ДатаСчета), "ДЛФ=Д"));
//		Иначе
//			ОбластьПунктыПогрузкиСтрока.Параметры.ДокументыПунктаПогрузки = "По счету № " + СТРОКА(СтрокаРезультата.НомерСчета) + " от " + СТРОКА(Формат(ДАТА(СтрокаРезультата.ДатаСчета), "ДЛФ=Д")) + " Необходима доверенность.";			
//		КонецЕсли;
//		//ОбластьПунктыПогрузкиСтрока.Параметры.ПримечаниеПунктаПогрузки = СтрокаРезультата.;	
//		
//		Если   ЗаказклиентаСтарый <> СтрокаРезультата.ЗаказКлиента
//			ИЛИ ЗаказПоставщикуСтарый <> СтрокаРезультата.ЗаказПоставщику  Тогда
//			ОбластьПунктыПогрузкиСтрока.Параметры.ОписаниеГрузаПунктаПогрузки = СТРОКА(СтрокаРезультата.ЗаказПоставщику)+ " по " +СТРОКА(СтрокаРезультата.ЗаказКлиента) + ". " ;
//		КонецЕсли;
//		ЗаказклиентаСтарый =СтрокаРезультата.ЗаказКлиента;
//		ЗаказПоставщикуСтарый =СтрокаРезультата.ЗаказПоставщику;
//		
//		
//		Если  ПунктПогрузкиАдресСтарый <> СтрокаРезультата.ПунктПогрузкиАдрес  Тогда
//			ОбластьПунктыПогрузкиСтрока.параметры.КонтактноеЛицоПунктаПогрузки  = ОбластьПунктыПогрузкиСтрока.параметры.КонтактноеЛицоПунктаПогрузки + " тел. " + Строка(СтрокаРезультата.ПунктПогрузкиТелефон);				
//			ТабличныйДокумент.Вывести(ОбластьПунктыПогрузкиСтрока);
//		КонецЕсли;
//		ПунктПогрузкиАдресСтарый = СтрокаРезультата.ПунктПогрузкиАдрес;
//	КонецЦикла;	
//	ТабличныйДокумент.Вывести(ОбластьПунктыОтгрузкиШапка);
//	
//	
//	
//	ПолучательАресСтарый = "";	
//	Для каждого СтрокаРезультата ИЗ Результат ЦИКЛ
//		
//		ОбластьПунктыОтгрузкиСтрока.параметры.ПунктВыгрузкиПолучатель = СтрокаРезультата.ПунктДоставкиПолучатель;
//		ОбластьПунктыОтгрузкиСтрока.параметры.ПунктВыгрузкиАдрес = СтрокаРезультата.ПунктДоставкиАдрес;
//		
//		ОбластьПунктыОтгрузкиСтрока.параметры.ПунктВыгрузкиВремяРаботы = СтрокаРезультата.ПунктДоставкиВремяРаботы;								
//		ОбластьПунктыОтгрузкиСтрока.параметры.ПунктВыгрузкиКонтактноеЛицо = Строка(СтрокаРезультата.ПунктДоставкиКонтактноеЛицо);
//		
//		//ОбластьПунктыОтгрузкиСтрока.параметры.ПунктВыгрузкиДокументы =СтрокаРезультата.ПунктДоставки
//		//ОбластьПунктыОтгрузкиСтрока.параметры.ПунктВыгрузкиКоличествоГрузчиков =СтрокаРезультата.ПунктДоставки
//		//ОбластьПунктыОтгрузкиСтрока.параметры.ПунктВыгрузкиПримечание =СтрокаРезультата.ПунктДоставки
//		Если  ПолучательАресСтарый <> СтрокаРезультата.ПунктДоставкиАдрес Тогда
//			ОбластьПунктыОтгрузкиСтрока.параметры.ПунктВыгрузкиКонтактноеЛицо  = ОбластьПунктыОтгрузкиСтрока.параметры.ПунктВыгрузкиКонтактноеЛицо + " тел. " + Строка(СтрокаРезультата.ПунктДоставкиТелефон);
//			
//			
//			ТабличныйДокумент.Вывести(ОбластьПунктыОтгрузкиСтрока);			
//		КонецЕсли; 
//		ПолучательАресСтарый = СтрокаРезультата.ПунктДоставкиАдрес;
//	КонецЦикла;
//	
//	
//	
//	
//	Возврат ТабличныйДокумент;
//	
//	
//	
//КонецФункции // ПечатьЗаказаНаДоставку3()

