
///////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// Обработчик подсистемы "Дополнительные отчеты и обработки"
	ДополнительныеОтчетыИОбработки.ПриСозданииНаСервере(ЭтаФорма);
	Если Параметры.Свойство("Организация") Тогда
		 Организация = Параметры.Организация;
		 ЭтаФорма.Элементы.Страницы.ТекущаяСтраница = Элементы.СтраницаРаспоряженияНаОформление;
	КонецЕсли;
	Если Параметры.Свойство("ПериодРегистрации") Тогда
		 ДатаНачала.Вариант = ВариантСтандартнойДатыНачала.ПроизвольнаяДата;
		 ДатаНачала.Дата = Параметры.ПериодРегистрации;
	КонецЕсли;
	УстановитьПараметрыДинамическихСписков();
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если ИмяСобытия = "Запись_РаспределениеРасходовБудущихПериодов" Тогда
		Элементы.РасходыКРаспределению.Обновить();
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПриЗагрузкеДанныхИзНастроекНаСервере(Настройки)
	
	Если Параметры.Свойство("Организация") Тогда
		 Организация = Параметры.Организация;
	Иначе 
		 Организация = Настройки.Получить("Организация");
	КонецЕсли;
	УстановитьОтборДинамическихСписков();
	
	Если Параметры.Свойство("ПериодРегистрации") Тогда
		 ДатаНачала.Дата = КонецМесяца(Параметры.ПериодРегистрации);
		 ДатаНачала.Вариант = ВариантСтандартнойДатыНачала.ПроизвольнаяДата;
	Иначе 
		Вариант = Настройки.Получить("ДатаНачала.Вариант");
		Если Вариант <> Неопределено Тогда
			ДатаНачала.Вариант = Вариант;
		КонецЕсли;
	КонецЕсли;
	
	
	УстановитьПараметрыДинамическихСписков();
	
КонецПроцедуры

///////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ ШАПКИ ФОРМЫ

&НаКлиенте
Процедура ОрганизацияПриИзменении(Элемент)
	
	УстановитьОтборДинамическихСписков();
	
КонецПроцедуры

&НаКлиенте
Процедура ДатаНачалаВариантПриИзменении(Элемент)
	
	УстановитьПараметрыДинамическихСписков();
	
КонецПроцедуры

&НаКлиенте
Процедура ДатаНачалаДатаПриИзменении(Элемент)
	
	УстановитьПараметрыДинамическихСписков();
	
КонецПроцедуры

&НаКлиенте
Процедура СтраницыПриСменеСтраницы(Элемент, ТекущаяСтраница)
	
	Если ТекущаяСтраница = Элементы.СтраницаРаспоряженияНаОформление Тогда
		Элементы.РасходыКРаспределению.Обновить();
	КонецЕсли;
	
КонецПроцедуры

///////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ КОМАНД ФОРМЫ

&НаКлиенте
Процедура СоздатьРаспределениеРасходов(Команда)
	
	Строка = Элементы.РасходыКРаспределению.ТекущиеДанные;
	Если Строка <> Неопределено Тогда
		
		СтруктураОснование = Новый Структура("Организация, Подразделение, СтатьяРасходов, АналитикаРасходов, СуммаДокумента",
			Строка.Организация,
			Строка.Подразделение,
			Строка.СтатьяРасходов,
			Строка.АналитикаРасходов,
			Строка.Сумма
		);
		СтруктураПараметры = Новый Структура;
		СтруктураПараметры.Вставить("Основание", СтруктураОснование);

		ОткрытьФорму("Документ.РаспределениеРасходовБудущихПериодов.ФормаОбъекта", СтруктураПараметры, Элементы.Список);
		
	КонецЕсли;
	
КонецПроцедуры

///////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

///////////////////////////////////////////////////////////////////////////////
// Прочее

&НаСервере
Процедура УстановитьПараметрыДинамическихСписков()
	
	ДатаОстатков = ?(ЗначениеЗаполнено(ДатаНачала.Дата), ДатаНачала.Дата, Дата(2399, 1, 1));
	Граница = Новый Граница(КонецДня(ДатаОстатков), ВидГраницы.Включая);
	РасходыКРаспределению.Параметры.УстановитьЗначениеПараметра("Граница", Граница);
	РасходыКРаспределению.Параметры.УстановитьЗначениеПараметра("ВалютаУправленческогоУчета", Константы.ВалютаУправленческогоУчета.Получить());
	
КонецПроцедуры

&НаСервере
Процедура УстановитьОтборДинамическихСписков()
	
	Для Каждого ДинамическийСписок Из МассивДинамическихСписков() Цикл
		ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбора(ДинамическийСписок.Отбор, "Организация", Организация, ВидСравненияКомпоновкиДанных.Равно,, ЗначениеЗаполнено(Организация));
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Функция МассивДинамическихСписков()

	МассивСписков = Новый Массив;
	МассивСписков.Добавить(Список);
	МассивСписков.Добавить(РасходыКРаспределению);
	
	Возврат МассивСписков;

КонецФункции
