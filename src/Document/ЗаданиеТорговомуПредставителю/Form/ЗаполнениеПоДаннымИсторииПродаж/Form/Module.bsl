////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ДетализацияПоНоменклатуре = Параметры.ДетализацияПоНоменклатуре;
	Партнер = Параметры.Партнер;
	Контрагент = Параметры.Контрагент;
	
	СформироватьНастройкиКомпоновщика();
	
	Период = НСтр("ru = 'в среднем за день'");
	
	Элементы.ДетализацияПоХарактеристикам.Видимость = ДетализацияПоНоменклатуре;

КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ ШАПКИ ФОРМЫ

&НаКлиенте
Процедура СписокПериодовНачалоВыбораИзСписка(Элемент, СтандартнаяОбработка)

	Элементы.Период.СписокВыбора.Очистить();
	СформироватьСписокПериодов();

КонецПроцедуры

&НаКлиенте
Процедура ПериодОчистка(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;

КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ КОМАНД ФОРМЫ

&НаКлиенте
Процедура ВыбратьПериодАнализаИсторииПродаж()
	
	ВыборПериода(ПериодАнализаИсторииПродаж);
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

&НаКлиенте
Процедура ВыборПериода(Период)

	Диалог = Новый ДиалогРедактированияСтандартногоПериода();
	Диалог.Период = Период;
	Если Диалог.Редактировать() Тогда 
		Период = Диалог.Период;		
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура СформироватьСписокПериодов()
	
	Элементы.Период.СписокВыбора.Добавить(НСтр("ru = 'в среднем за день'"));
	Элементы.Период.СписокВыбора.Добавить(НСтр("ru = 'в среднем за неделю'"));
	Элементы.Период.СписокВыбора.Добавить(НСтр("ru = 'в среднем за месяц'"));

КонецПроцедуры

&НаСервере
Процедура СформироватьНастройкиКомпоновщика()
	
	Если ДетализацияПоНоменклатуре Тогда
		СхемаКомпоновки = Документы.ЗаданиеТорговомуПредставителю.ПолучитьМакет("СхемаКомпоновкиДляАвтоматическогоЗаполненияПоИсторииПродаж");
	Иначе
		СхемаКомпоновки = Документы.ЗаданиеТорговомуПредставителю.ПолучитьМакет("СхемаКомпоновкиДляАвтоматическогоЗаполненияПоИсторииПродажПоСумме");
	КонецЕсли;	

	НастройкиКомпоновки = СхемаКомпоновки.НастройкиПоУмолчанию;
	
	Адрес = Новый УникальныйИдентификатор();
	URLСхемы = ПоместитьВоВременноеХранилище(СхемаКомпоновки, Адрес);
	ИсточникНастроек = Новый ИсточникДоступныхНастроекКомпоновкиДанных(URLСхемы);
	
	КомпоновщикНастроек.Инициализировать(ИсточникНастроек);
	КомпоновщикНастроек.ЗагрузитьНастройки(НастройкиКомпоновки);
	ПартнерыИКонтрагенты.УдалитьЭлементИзНастроекОтборовОтчета(КомпоновщикНастроек, "Контрагент");
	УстановитьЗначенияЭлементовОтбора(КомпоновщикНастроек.Настройки.Отбор);
	
КонецПроцедуры

// Выполняет установку значений элементов отбора в настройках
// компоновки
//
// Параметры:
//  Отбор - отбор компоновки
//
&НаСервере
Процедура УстановитьЗначенияЭлементовОтбора(Отбор)

	ПолеКомпоновкиПартнер = Новый ПолеКомпоновкиДанных("Партнер");
	ПолеКомпоновкиКонтрагент = Новый ПолеКомпоновкиДанных("Контрагент");
	
	Для Каждого ЭлементОтбора из Отбор.Элементы Цикл
		
		Если ЭлементОтбора.ЛевоеЗначение = ПолеКомпоновкиПартнер Тогда

            ЭлементОтбора.ПравоеЗначение = Партнер;
            ЭлементОтбора.Использование = ЗначениеЗаполнено(Партнер);

		ИначеЕсли ЭлементОтбора.ЛевоеЗначение = ПолеКомпоновкиКонтрагент Тогда

            ЭлементОтбора.ПравоеЗначение = Контрагент;
            ЭлементОтбора.Использование = ЗначениеЗаполнено(Контрагент);

		КонецЕсли;
		
	КонецЦикла;

КонецПроцедуры