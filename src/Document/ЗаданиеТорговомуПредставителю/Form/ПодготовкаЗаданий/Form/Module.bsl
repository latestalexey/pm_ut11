////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	УстановитьПараметрыСпискаЗаданий();

КонецПроцедуры

&НаСервере
Процедура ПриЗагрузкеДанныхИзНастроекНаСервере(Настройки)
	
	Куратор = Настройки.Получить("Куратор");
	ТорговыйПредставитель = Настройки.Получить("ТорговыйПредставитель");
	ПериодПодготовкиЗаданий = Настройки.Получить("ПериодПодготовкиЗаданий");
	УстановитьПараметрыСпискаЗаданий();
	
	ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбора(СписокЗаданий.Отбор, "ТорговыйПредставитель", ТорговыйПредставитель, ВидСравненияКомпоновкиДанных.Равно,, ЗначениеЗаполнено(ТорговыйПредставитель));
	ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбора(СписокЗаданий.Отбор, "Куратор", Куратор, ВидСравненияКомпоновкиДанных.Равно,, ЗначениеЗаполнено(Куратор));

КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если ИмяСобытия = "Запись_ЗаданиеТорговомуПредставителю" Тогда
		Элементы.СписокЗаданий.Обновить();
	КонецЕсли;

КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ ШАПКИ ФОРМЫ

&НаКлиенте
Процедура ПериодПодготовкиЗаданийПриИзменении(Элемент)
	
	СписокЗаданий.Параметры.УстановитьЗначениеПараметра("ДатаНачалаРаботы",ПериодПодготовкиЗаданий.ДатаНачала);
	СписокЗаданий.Параметры.УстановитьЗначениеПараметра("НачальнаяДатаПланирования", Макс(НачалоДня(ТекущаяДата()), ПериодПодготовкиЗаданий.ДатаНачала));
	СписокЗаданий.Параметры.УстановитьЗначениеПараметра("КонечнаяДатаПланирования", ПериодПодготовкиЗаданий.ДатаОкончания);
	
	Элементы.СписокЗаданий.Обновить();

КонецПроцедуры

&НаКлиенте
Процедура ТорговыйПредставительПриИзменении(Элемент)
	
	ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбора(СписокЗаданий.Отбор, "ТорговыйПредставитель", ТорговыйПредставитель, ВидСравненияКомпоновкиДанных.Равно,, ЗначениеЗаполнено(ТорговыйПредставитель));

КонецПроцедуры

&НаКлиенте
Процедура КураторПриИзменении(Элемент)
	
	ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбора(СписокЗаданий.Отбор, "Куратор", Куратор, ВидСравненияКомпоновкиДанных.Равно,, ЗначениеЗаполнено(Куратор));

КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ ТАБЛИЦЫ СПИСОКЗАДАНИЙ

&НаКлиенте
Процедура СписокЗаданийВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	Если Элемент.ТекущийЭлемент = Элементы.СписокЗаданийЗаданиеТорговомуПредставителю Тогда
		
		ПараметрыФормы = Новый Структура();
		
		Если Элементы.СписокЗаданий.ТекущиеДанные.ЗаданиеТорговомуПредставителю.Пустая() Тогда
			ЗначенияЗаполнения = Новый Структура();
			ЗначенияЗаполнения.Вставить("Партнер", Элементы.СписокЗаданий.ТекущиеДанные.Партнер);
			ЗначенияЗаполнения.Вставить("УсловияОбслуживания", Элементы.СписокЗаданий.ТекущиеДанные.УсловияОбслуживания);
			
			ПараметрыФормы.Вставить("ЗначенияЗаполнения",ЗначенияЗаполнения);
		Иначе	
			ПараметрыФормы.Вставить("Ключ",Элементы.СписокЗаданий.ТекущиеДанные.ЗаданиеТорговомуПредставителю);
		КонецЕсли;
		
		ОткрытьФормуЗаданияТорговомуПредставителю(ПараметрыФормы);
		
	ИначеЕсли Элемент.ТекущийЭлемент = Элементы.СписокЗаданийПартнер Тогда
		
		ПараметрыФормы = Новый Структура();
		Если ЗначениеЗаполнено(Элементы.СписокЗаданий.ТекущиеДанные.Партнер) Тогда
			ПараметрыФормы.Вставить("Ключ",Элементы.СписокЗаданий.ТекущиеДанные.Партнер);
		КонецЕсли;
		
		ОткрытьФорму("Справочник.Партнеры.ФормаОбъекта", ПараметрыФормы, Элементы.СписокЗаданийПартнер);
		
	ИначеЕсли Элемент.ТекущийЭлемент = Элементы.СписокЗаданийСоглашение Тогда
		
		ПараметрыФормы = Новый Структура();
		Если ЗначениеЗаполнено(Элементы.СписокЗаданий.ТекущиеДанные.Соглашение) Тогда
			ПараметрыФормы.Вставить("Ключ",Элементы.СписокЗаданий.ТекущиеДанные.Соглашение);
		КонецЕсли;
		
		ОткрытьФорму("Справочник.СоглашенияСКлиентами.ФормаОбъекта", ПараметрыФормы, Элементы.СписокЗаданийСоглашение);
		
	ИначеЕсли Элемент.ТекущийЭлемент = Элементы.СписокЗаданийУсловияОбслуживания Тогда
		
		ПараметрыФормы = Новый Структура();
		Если ЗначениеЗаполнено(Элементы.СписокЗаданий.ТекущиеДанные.УсловияОбслуживания) Тогда
			ПараметрыФормы.Вставить("Ключ",Элементы.СписокЗаданий.ТекущиеДанные.УсловияОбслуживания);
		КонецЕсли;
		
		ОткрытьФорму("Справочник.УсловияОбслуживанияПартнеровТорговымиПредставителями.ФормаОбъекта", ПараметрыФормы, Элементы.СписокЗаданийУсловияОбслуживания);
		
	КонецЕсли;

КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ КОМАНД ФОРМЫ

&НаКлиенте
Процедура ДобавитьЗадание(Команда)

	ПараметрыФормы = Новый Структура();
	ОткрытьФормуЗаданияТорговомуПредставителю(ПараметрыФормы);

КонецПроцедуры

&НаКлиенте
Процедура НастройкаПечатиБланковЗадания(Команда)

	ОткрытьФорму("Документ.ЗаданиеТорговомуПредставителю.Форма.НастройкаПечатиБланковЗадания");

КонецПроцедуры

&НаКлиенте
Процедура ПечатьБланкаЗадания(Команда)
	
	МассивОбъектов = ПолучитьМассивЗаданийДляПечати();
	
	Если МассивОбъектов.Количество() = 0 Тогда
		ТекстСообщения = НСтр("ru='Не выбраны задания для печати'");
		Предупреждение(ТекстСообщения);
		Возврат;
	КонецЕсли;
	
	ПараметрыПечати = Новый Структура();
	УправлениеПечатьюКлиент.ВыполнитьКомандуПечати("Документ.ЗаданиеТорговомуПредставителю",
													"БланкЗадания,БланкЗаказа",
													МассивОбъектов,
													Неопределено,
													ПараметрыПечати);

КонецПроцедуры

&НаКлиенте
Процедура ПечатьСводногоЗадания(Команда)
	
	МассивОбъектов = ПолучитьМассивЗаданийДляПечати();
	
	Если МассивОбъектов.Количество() = 0 Тогда
		ТекстСообщения = НСтр("ru='Не выбраны задания для печати'");
		Предупреждение(ТекстСообщения);
		Возврат;
	КонецЕсли;
	
	ПараметрыПечати = Новый Структура();
	УправлениеПечатьюКлиент.ВыполнитьКомандуПечати("Документ.ЗаданиеТорговомуПредставителю",
													"СводноеЗадание",
													МассивОбъектов,
													Неопределено,
													ПараметрыПечати);

												КонецПроцедуры
												
////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

&НаКлиенте
Процедура ОткрытьФормуЗаданияТорговомуПредставителю(ПараметрыФормы = Неопределено)

	ОткрытьФорму("Документ.ЗаданиеТорговомуПредставителю.ФормаОбъекта", ПараметрыФормы, Элементы.СписокЗаданий);

КонецПроцедуры

&НаКлиенте
Функция ПолучитьМассивЗаданийДляПечати()
	
	МассивОбъектов = Новый Массив();
	
	Для Каждого ИдентификаторСтроки из Элементы.СписокЗаданий.ВыделенныеСтроки Цикл
		Задание = Элементы.СписокЗаданий.ДанныеСтроки(ИдентификаторСтроки).ЗаданиеТорговомуПредставителю;
		Если ЗначениеЗаполнено(Задание) Тогда
			МассивОбъектов.Добавить(Задание);
		КонецЕсли;
	КонецЦикла;
	
	Возврат МассивОбъектов;

КонецФункции

&НаСервере
Процедура УстановитьПараметрыСпискаЗаданий()
	
	СписокЗаданий.Параметры.УстановитьЗначениеПараметра("ДатаНачалаРаботы",ПериодПодготовкиЗаданий.ДатаНачала);
	СписокЗаданий.Параметры.УстановитьЗначениеПараметра("НачальнаяДатаПланирования", Макс(НачалоДня(ТекущаяДата()), ПериодПодготовкиЗаданий.ДатаНачала));
	СписокЗаданий.Параметры.УстановитьЗначениеПараметра("КонечнаяДатаПланирования", ПериодПодготовкиЗаданий.ДатаОкончания);
	СписокЗаданий.Параметры.УстановитьЗначениеПараметра("ПустаяДата",ПустаяДата);
	
	СписокЗаданий.Параметры.УстановитьЗначениеПараметра("Понедельник",Перечисления.ДниНедели.Понедельник);
	СписокЗаданий.Параметры.УстановитьЗначениеПараметра("Вторник",Перечисления.ДниНедели.Вторник);
	СписокЗаданий.Параметры.УстановитьЗначениеПараметра("Среда",Перечисления.ДниНедели.Среда);
	СписокЗаданий.Параметры.УстановитьЗначениеПараметра("Четверг",Перечисления.ДниНедели.Четверг);
	СписокЗаданий.Параметры.УстановитьЗначениеПараметра("Пятница",Перечисления.ДниНедели.Пятница);
	СписокЗаданий.Параметры.УстановитьЗначениеПараметра("Суббота",Перечисления.ДниНедели.Суббота);
	СписокЗаданий.Параметры.УстановитьЗначениеПараметра("Воскресенье",Перечисления.ДниНедели.Воскресенье);

КонецПроцедуры