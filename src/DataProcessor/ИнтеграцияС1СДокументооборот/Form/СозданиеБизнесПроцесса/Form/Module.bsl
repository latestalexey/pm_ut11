///////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// Пропускаем инициализацию, чтобы гарантировать получение формы при передаче параметра "АвтоТест".
	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;
	КонецЕсли;
	
	Прокси = ИнтеграцияС1СДокументооборотПовтИсп.ПолучитьПрокси();
	
	Если НЕ ИнтеграцияС1СДокументооборотПовтИсп.ДоступенФункционалВерсииСервиса("1.2.6.2") Тогда
		Отказ = Истина;
		Возврат;
	КонецЕсли;
		
	Если Параметры.Свойство("Предмет") Тогда
		Предмет = Параметры.Предмет.name;
		ПредметID = Параметры.Предмет.id;
		ПредметТип = Параметры.Предмет.type;
	ИначеЕсли Параметры.Свойство("ВнешнийОбъект") Тогда
		ВнешнийОбъект = Параметры.ВнешнийОбъект;
		РезультатПоискаДокументаВДО = ИнтеграцияС1СДокументооборотВызовСервера.ПолучитьСвязанныйCВнешнимОбъектомДокумент(ВнешнийОбъект);
		Если ТипЗнч(РезультатПоискаДокументаВДО) = Тип("Структура") Тогда
			Предмет = РезультатПоискаДокументаВДО.name;
			ПредметID = РезультатПоискаДокументаВДО.id;
			ПредметТип = РезультатПоискаДокументаВДО.type;
			Если РезультатПоискаДокументаВДО.Свойство("documentType") Тогда
				ВидДокумента = РезультатПоискаДокументаВДО.documentType.name;
				ВидДокументаID = РезультатПоискаДокументаВДО.documentType.id;
				ВидДокументаТип = РезультатПоискаДокументаВДО.documentType.type;
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
	Если Параметры.Свойство("ГлавнаяЗадача") И ЗначениеЗаполнено(Параметры.ГлавнаяЗадача) Тогда
		ГлавнаяЗадача = Параметры.ГлавнаяЗадача.name;
		ГлавнаяЗадачаID = Параметры.ГлавнаяЗадача.id;
		ГлавнаяЗадачаТип = Параметры.ГлавнаяЗадача.type;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ПредметID) Тогда
		Если НЕ ЗначениеЗаполнено(ВидДокументаID) Тогда
			Запрос = ИнтеграцияС1СДокументооборот.СоздатьОбъект(Прокси, "DMRetrieveRequest");
			ОбъектИд = ИнтеграцияС1СДокументооборот.СоздатьObjectID(Прокси, ПредметID, ПредметТип);
			Запрос.objectIds.Добавить(ОбъектИд);
			Запрос.columnSet.Добавить("documentType");
			Результат = Прокси.execute(Запрос);
			ИнтеграцияС1СДокументооборот.ПроверитьВозвратВебСервиса(Прокси, Результат);
			Объект = Результат.objects[0];
			Если Найти(Объект.objectID.type,"Document") <> 0 Тогда
				ВидДокумента = Объект.documentType.name;
			Иначе
				Элементы.ВидДокумента.Видимость = Ложь;
			КонецЕсли;
		КонецЕсли;
		ЗаполнитьДеревоШаблонов();
	ИначеЕсли ЗначениеЗаполнено(ВнешнийОбъект) Тогда
		ИмяТипа = ИнтеграцияС1СДокументооборотВызовСервера.ПолучитьИмяТипаДокументаДОИзНастроекЗаполнения(ВнешнийОбъект);
		Если ИмяТипа <> Неопределено Тогда
			ДокументXDTO = ИнтеграцияС1СДокументооборот.СоздатьДокументПоВнешнемуОбъекту(Прокси, ВнешнийОбъект, ИмяТипа);
			Если ДокументXDTO <> Неопределено Тогда
				ИнтеграцияС1СДокументооборот.ЗаполнитьОбъектныйРеквизит(ЭтаФорма, ДокументXDTO.documentType, "ВидДокумента");
				ИнтеграцияС1СДокументооборот.ЗаполнитьОбъектныйРеквизит(ЭтаФорма, ДокументXDTO, "Предмет");
			КонецЕсли;
			ЗаполнитьДеревоШаблонов();
		Иначе
			// не определены настройки заполнения документа 
			МетаданныеПотребителя = ВнешнийОбъект.Метаданные();
			ИмяПотребителя = ?(МетаданныеПотребителя.Синоним <> "", МетаданныеПотребителя.Синоним, МетаданныеПотребителя.Имя);
			ТекстЗаголовка = НСтр("ru = 'Не настроено заполнение документа 1С:Документооборота из '''") + ИмяПотребителя + НСтр("ru = '''.'");
			ТекстЗаголовка = ТекстЗаголовка + НСтр("ru = ' Для настройки правил автоматического заполнения обратитесь к администратору, введите документ вручную или присоедините уже созданный документ.'");
            Элементы.ДекорацияИнфо.Заголовок = ТекстЗаголовка;
		КонецЕсли;
	Иначе
		ЗаполнитьДеревоШаблонов();
	КонецЕсли;
	
	УстановитьЗаголовокПредметаПоТипуОбъекта();
	
	Если ЗначениеЗаполнено(ПредметID) Тогда
		Элементы.ГруппаЭлементы.Доступность = Истина;
		Элементы.СоздатьПроцесс.Доступность = Истина;
		Элементы.ГруппаПредмет.Доступность = Истина;
		Элементы.ГруппаСтраницы.ТекущаяСтраница = Элементы.ГруппаПредмет;
	ИначеЕсли ЗначениеЗаполнено(ВнешнийОбъект) Тогда
		Элементы.ГруппаЭлементы.Доступность = Ложь;
		Элементы.СоздатьПроцесс.Доступность = Ложь;
		Элементы.ГруппаПредмет.Доступность = Ложь;
		Элементы.ГруппаСтраницы.ТекущаяСтраница = Элементы.ГруппаИнфо;
	Иначе
		Элементы.ГруппаСтраницы.ТекущаяСтраница = Элементы.ГруппаСовет;
		Элементы.СтартоватьСразу.Видимость = Ложь;
	КонецЕсли;
		
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	//Устанавливается развернутость ветвей по умолчанию
	ЭлементыДерева = ДеревоШаблонов.ПолучитьЭлементы();
	Для Каждого ЭлементДерева Из ЭлементыДерева Цикл
		Если ЭлементДерева.Развернуть Тогда
			Элементы.ДеревоШаблонов.Развернуть(ЭлементДерева.ПолучитьИдентификатор(), Ложь);
		КонецЕсли;
	КонецЦикла;
	
	Если СозданНовыйДокумент Тогда 
		ПараметрыОповещения = Новый Структура("name, id, type, Вид", Предмет, ПредметID, ПредметТип, ВидДокумента);
		Оповестить("Запись_ДокументооборотДокумент", ПараметрыОповещения, ЭтаФорма.ВладелецФормы);
    КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если ИмяСобытия = "Запись_ДокументооборотДокумент" И Источник = Элементы.Предмет Тогда 
		
		ПредметID = Параметр.id;
		ПредметТип = Параметр.type;
		Предмет = Параметр.name;
		Если Параметр.Свойство("documentType") Тогда
			ВидДокумента = Параметр.documentType;
		КонецЕсли;
		
		Элементы.ГруппаЭлементы.Доступность = Истина;
		Элементы.СоздатьПроцесс.Доступность = Истина;
		Элементы.ГруппаПредмет.Доступность = Истина;
		Элементы.ГруппаСтраницы.ТекущаяСтраница = Элементы.ГруппаПредмет;
		
		ЗаполнитьДеревоШаблонов();
		
		ЭлементыДерева = ДеревоШаблонов.ПолучитьЭлементы();
		Для Каждого ЭлементДерева Из ЭлементыДерева Цикл
			Если ЭлементДерева.Развернуть Тогда
				Элементы.ДеревоШаблонов.Развернуть(ЭлементДерева.ПолучитьИдентификатор(), Ложь);
			КонецЕсли;
		КонецЦикла;
	ИначеЕсли ИмяСобытия = "Запись_ДокументооборотБизнесПроцесс" Тогда
		Если Параметр.Свойство("Стартован") Тогда
			Если Параметр.Стартован Тогда
				ПодключитьОбработчикОжидания("ЗакрытьФорму",0.1,Истина);
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ЗакрытьФорму()
	Если Открыта() Тогда
		Закрыть();
	КонецЕсли;
КонецПроцедуры

///////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ ФОРМЫ

&НаКлиенте
Процедура ПредметНажатие(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	Если ЗначениеЗаполнено(ПредметID) Тогда
		ПараметрыФормы = Новый Структура;
		ПараметрыФормы.Вставить("ВнешнийОбъект", ВнешнийОбъект);
		ИнтеграцияС1СДокументооборотКлиент.ОткрытьОбъект(ПредметТип, ПредметID, Элементы.Предмет, ПараметрыФормы);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ВыбратьДокументНажатие(Элемент)
	
	СтандартнаяОбработка = Ложь;
	
	СписокВыбора = Новый СписокЗначений;
	СписокВыбора.Добавить("DMIncomingDocument",  НСтр("ru ='Входящий документ'"));
	СписокВыбора.Добавить("DMOutgoingDocument",  НСтр("ru ='Исходящий документ'"));
	СписокВыбора.Добавить("DMInternalDocument",  НСтр("ru ='Внутренний документ'"));
	
	ВыбранныйЭлемент = СписокВыбора.ВыбратьЭлемент(НСтр("ru ='Укажите тип документа'"));
	Если ВыбранныйЭлемент <> Неопределено Тогда 
		ИнтеграцияС1СДокументооборотКлиент.ВыбратьЗначениеИзСписка(ВыбранныйЭлемент.Значение, "Предмет", ЭтаФорма);
		
		Если ЗначениеЗаполнено(ПредметID) И ЗначениеЗаполнено(ПредметТип) Тогда // добавление новой связи
			ДобавлениеСвязи(ПредметID, ПредметТип, ВнешнийОбъект);
		КонецЕсли;
		ПолучитьДанныеДокумента();
		
		Если ЗначениеЗаполнено(Предмет) Тогда 
			Элементы.ГруппаЭлементы.Доступность = Истина;
			Элементы.СоздатьПроцесс.Доступность = Истина;
			Элементы.ГруппаПредмет.Доступность = Истина;
			Элементы.ГруппаСтраницы.ТекущаяСтраница = Элементы.ГруппаПредмет;
			
			ЗаполнитьДеревоШаблонов();
			
			ЭтаФорма.Модифицированность = Ложь;
			
			ЭлементыДерева = ДеревоШаблонов.ПолучитьЭлементы();
			Для Каждого ЭлементДерева Из ЭлементыДерева Цикл
				Если ЭлементДерева.Развернуть Тогда
					Элементы.ДеревоШаблонов.Развернуть(ЭлементДерева.ПолучитьИдентификатор(), Ложь);
				КонецЕсли;
			КонецЦикла;
			
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура СоздатьДокументНажатие(Элемент)
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("ВнешнийОбъект", ВнешнийОбъект);
	
	СписокВыбора = Новый СписокЗначений;
	СписокВыбора.Добавить("DMIncomingDocument",  "Входящий документ");
	СписокВыбора.Добавить("DMOutgoingDocument",  "Исходящий документ");
	СписокВыбора.Добавить("DMInternalDocument",  "Внутренний документ");
	
	ВыбранныйЭлемент = СписокВыбора.ВыбратьЭлемент("Укажите тип документа");
	Если ВыбранныйЭлемент <> Неопределено Тогда 
		Если ВыбранныйЭлемент.Значение = "DMIncomingDocument" Тогда 
			ОткрытьФорму("Обработка.ИнтеграцияС1СДокументооборот.Форма.ВходящийДокумент", ПараметрыФормы, Элементы.Предмет);
		ИначеЕсли ВыбранныйЭлемент.Значение = "DMOutgoingDocument" Тогда 
			ОткрытьФорму("Обработка.ИнтеграцияС1СДокументооборот.Форма.ИсходящийДокумент", ПараметрыФормы, Элементы.Предмет);
		ИначеЕсли ВыбранныйЭлемент.Значение = "DMInternalDocument" Тогда 
			ОткрытьФорму("Обработка.ИнтеграцияС1СДокументооборот.Форма.ВнутреннийДокумент", ПараметрыФормы, Элементы.Предмет);
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ТАБЛИЦЫ ФОРМЫ "ДЕРЕВО ШАБЛОНОВ"

&НаКлиенте
Процедура ДеревоШаблоновПередНачаломИзменения(Элемент, Отказ)
	
	Отказ = Истина;
	
КонецПроцедуры

&НаКлиенте
Процедура ДеревоШаблоновВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	СоздатьПроцессВыполнить();
	
КонецПроцедуры

&НаКлиенте
Процедура ДеревоШаблоновПриАктивизацииСтроки(Элемент)
	
	Если Элементы.ДеревоШаблонов.ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Элементы.СоздатьПроцесс.Доступность = НЕ Элементы.ДеревоШаблонов.ТекущиеДанные.ЭтоЗаголовок;
	
	Сводка = Элементы.ДеревоШаблонов.ТекущиеДанные.Подсказка;
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ КОМАНД ФОРМЫ

&НаКлиенте
Процедура СоздатьПроцесс(Команда)
	
	СоздатьПроцессВыполнить();

КонецПроцедуры

&НаКлиенте
Процедура СоздатьВходящийДокумент(Команда)
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("ВнешнийОбъект", ВнешнийОбъект);
	
	ОткрытьФорму("Обработка.ИнтеграцияС1СДокументооборот.Форма.ВходящийДокумент", ПараметрыФормы, Элементы.Предмет);
	
КонецПроцедуры

&НаКлиенте
Процедура СоздатьИсходящийДокумент(Команда)
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("ВнешнийОбъект", ВнешнийОбъект);
	
	ОткрытьФорму("Обработка.ИнтеграцияС1СДокументооборот.Форма.ИсходящийДокумент", ПараметрыФормы, Элементы.Предмет);
	
КонецПроцедуры

&НаКлиенте
Процедура СоздатьВнутреннийДокумент(Команда)
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("ВнешнийОбъект", ВнешнийОбъект);
	
	ОткрытьФорму("Обработка.ИнтеграцияС1СДокументооборот.Форма.ВнутреннийДокумент", ПараметрыФормы, Элементы.Предмет);
	
КонецПроцедуры

&НаКлиенте
Процедура Отмена(Команда)
	
	Закрыть(Ложь);
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

&НаСервере
Процедура УстановитьЗаголовокПредметаПоТипуОбъекта()
	
	Если ПредметТип = "DMInternalDocument" Тогда
		Элементы.Предмет.Заголовок = НСтр("ru='Внутренний документ'");
		
	ИначеЕсли ПредметТип = "DMIncomingDocument" Тогда
		Элементы.Предмет.Заголовок = НСтр("ru='Входящий документ'");
		
	ИначеЕсли ПредметТип = "DMOutgoingDocument" Тогда
		Элементы.Предмет.Заголовок = НСтр("ru='Исходящий документ'");
		
	ИначеЕсли ПредметТип = "DMFile" Тогда
		Элементы.Предмет.Заголовок = НСтр("ru='Файл'");
		
	ИначеЕсли ПредметТип = "DMActivity" Тогда
		Элементы.Предмет.Заголовок = НСтр("ru='Мероприятие'");
		
	ИначеЕсли ПредметТип = "DMIncomingEMail" Тогда
		Элементы.Предмет.Заголовок = НСтр("ru='Входящее письмо'");
		
	ИначеЕсли ПредметТип = "DMOutgoingEMail" Тогда
		Элементы.Предмет.Заголовок = НСтр("ru='Исходящее письмо'");
		
	ИначеЕсли ПредметТип = "DMProject" Тогда
		Элементы.Предмет.Заголовок = НСтр("ru='Проект'");
		
	ИначеЕсли ПредметТип = "DMProjectTask" Тогда
		Элементы.Предмет.Заголовок = НСтр("ru='Проектная задача'");
		
	ИначеЕсли ПредметТип = "DMDiscussionMessage" Тогда
		Элементы.Предмет.Заголовок = НСтр("ru='Сообщение'");
		
	Иначе
		Элементы.Предмет.Заголовок = "Предмет";
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьДеревоШаблонов()
	
	Дерево = РеквизитФормыВЗначение("ДеревоШаблонов");
	Дерево.Строки.Очистить();
	
	Прокси = ИнтеграцияС1СДокументооборотПовтИсп.ПолучитьПрокси();
	
	Запрос = ИнтеграцияС1СДокументооборот.СоздатьОбъект(Прокси, "DMGetBusinessProcessTemplatesTreeRequest");
	
	Если ЗначениеЗаполнено(ПредметID) Тогда
		ПредметБизнесПроцессаИд = ИнтеграцияС1СДокументооборот.СоздатьОбъект(Прокси, "DMObjectID");
		ПредметБизнесПроцессаИд.id = ПредметID;
		ПредметБизнесПроцессаИд.type = ПредметТип;
    	Запрос.businessProcessTargetID = ПредметБизнесПроцессаИд;
	КонецЕсли;

	Результат = Прокси.execute(Запрос);
	ИнтеграцияС1СДокументооборот.ПроверитьВозвратВебСервиса(Прокси, Результат);
	
	ПорядокБизнесПроцессов = новый Массив();
	ПорядокБизнесПроцессов.Добавить("DMBusinessProcessOrder");
	ПорядокБизнесПроцессов.Добавить("DMBusinessProcessApproval");
	ПорядокБизнесПроцессов.Добавить("DMBusinessProcessPerformance");
	ПорядокБизнесПроцессов.Добавить("DMBusinessProcessConsideration");
	ПорядокБизнесПроцессов.Добавить("DMBusinessProcessAcquaintance");
	ПорядокБизнесПроцессов.Добавить("DMComplexBusinessProcess");
	ПорядокБизнесПроцессов.Добавить("DMBusinessProcessRegistration");
	ПорядокБизнесПроцессов.Добавить("DMBusinessProcessConfirmation");
	ПорядокБизнесПроцессов.Добавить("DMBusinessProcessInvitation");
	ПорядокБизнесПроцессов.Добавить("DMBusinessProcessOutgoingDocumentProcessing");
	ПорядокБизнесПроцессов.Добавить("DMBusinessProcessInternalDocumentProcessing");
	ПорядокБизнесПроцессов.Добавить("DMBusinessProcessIncomingDocumentProcessing");
	
	Для каждого Раздел из Результат.BusinessProcessTemplatesTree Цикл
		РазделДерева = Дерево.Строки.Добавить();
		РазделДерева.Наименование = Раздел.name;
		РазделДерева.Подсказка = Раздел.hint;
		РазделДерева.ЭтоЗаголовок = Истина;
		Если РазделДерева.Наименование = "Другие шаблоны" Тогда
			РазделДерева.Развернуть = Ложь;
		Иначе
			РазделДерева.Развернуть = Истина;
		КонецЕсли;
		Для каждого Шаблон из Раздел.elements Цикл
			СтрокаРаздела = РазделДерева.Строки.Добавить();
			СтрокаРаздела.Наименование = Шаблон.name;
			СтрокаРаздела.Подсказка = Шаблон.hint;
			СтрокаРаздела.ЭтоЗаголовок = Ложь;
			СтрокаРаздела.ТипПроцесса = Шаблон.businessProcessType;
			Если ЗначениеЗаполнено(Шаблон.template.objectID.id) Тогда
				СтрокаРаздела.ШаблонID = Шаблон.template.objectID.id;
				СтрокаРаздела.ШаблонТип = Шаблон.template.objectID.type;
			Иначе
				СтрокаРаздела.Индекс = ПорядокБизнесПроцессов.Найти(СтрокаРаздела.ТипПроцесса);
			КонецЕсли;
		КонецЦикла;
		РазделДерева.Строки.Сортировать("Индекс");
	КонецЦикла;
	
	ЗначениеВДанныеФормы(Дерево, ДеревоШаблонов);
    УстановитьТекущуюСтрокуВДеревеНаПервыйЗначащийЭлемент();
	
КонецПроцедуры

&НаСервере
Процедура УстановитьТекущуюСтрокуВДеревеНаПервыйЗначащийЭлемент()
	
	ЭлементыДерева = ДеревоШаблонов.ПолучитьЭлементы();
	Если ЭлементыДерева.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	ПерваяГруппа = ЭлементыДерева[0];
	Если ПерваяГруппа.ПолучитьЭлементы().Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	ПервыйЭлементПервойГруппы = ПерваяГруппа.ПолучитьЭлементы()[0];
	Индекс = ПервыйЭлементПервойГруппы.ПолучитьИдентификатор();
	Элементы.ДеревоШаблонов.ТекущаяСтрока = Индекс;
	
КонецПроцедуры

&НаКлиенте
Процедура СоздатьПроцессВыполнить()
	
	Если Элементы.ДеревоШаблонов.ТекущиеДанные = Неопределено 
		ИЛИ Элементы.ДеревоШаблонов.ТекущиеДанные.ЭтоЗаголовок Тогда
		Возврат;
	КонецЕсли;
	
	Данные = Элементы.ДеревоШаблонов.ТекущиеДанные;
	
	ПараметрыФормы = новый Структура;
	
	Если ЗначениеЗаполнено(ПредметID) Тогда
		ПредметБизнесПроцесса = Новый Структура;
		ПредметБизнесПроцесса.Вставить("id", ПредметID);
		ПредметБизнесПроцесса.Вставить("type", ПредметТип);
		ПараметрыФормы.Вставить("Предмет", ПредметБизнесПроцесса);
		
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ГлавнаяЗадачаID) Тогда
		ГлавнаяЗадачаБизнесПроцесса = Новый Структура;
		ГлавнаяЗадачаБизнесПроцесса.Вставить("id",ГлавнаяЗадачаID);
		ГлавнаяЗадачаБизнесПроцесса.Вставить("type",ГлавнаяЗадачаТип);
		ГлавнаяЗадачаБизнесПроцесса.Вставить("name",ГлавнаяЗадача);
		ПараметрыФормы.Вставить("ГлавнаяЗадача", ГлавнаяЗадачаБизнесПроцесса);
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Данные.ШаблонID) Тогда
		ШаблонБизнесПроцесса = Новый Структура;
		ШаблонБизнесПроцесса.Вставить("id", Данные.ШаблонID);
		ШаблонБизнесПроцесса.Вставить("type", Данные.ШаблонТип);
		ПараметрыФормы.Вставить("Шаблон", ШаблонБизнесПроцесса);
	КонецЕсли;
	
	
	Если ЗначениеЗаполнено(ПредметID) И СтартоватьСразу Тогда
		Если ЗначениеЗаполнено(Данные.ШаблонID) Тогда 
			Если ЗаполнитьСтартоватьПроцесс(Данные.ТипПроцесса, ПараметрыФормы) Тогда
				ТекстСообщения = "Стартован бизнес процесс по шаблону ""%ИмяШаблона%"".";
				ТекстСообщения = СтрЗаменить(ТекстСообщения,"%ИмяШаблона%",Данные.Наименование);
				ТекстЗаголовка = НСтр("ru='Стартован процесс'");
				ПоказатьОповещениеПользователя(ТекстЗаголовка,, ТекстСообщения, БиблиотекаКартинок.Информация32);
				ПараметрыОповещения = Новый Структура("id", ПроцессID);
				ПараметрыОповещения.Вставить("Стартован", Истина);
				Оповестить("Запись_ДокументооборотБизнесПроцесс",ПараметрыОповещения, ВладелецФормы);
			Иначе
				ИнтеграцияС1СДокументооборотКлиент.ОткрытьОбъект(Данные.ТипПроцесса, Неопределено, , ПараметрыФормы);
			КонецЕсли;
		Иначе 
			ИнтеграцияС1СДокументооборотКлиент.ОткрытьОбъект(Данные.ТипПроцесса, Неопределено, , ПараметрыФормы);
		КонецЕсли;
	Иначе
		ИнтеграцияС1СДокументооборотКлиент.ОткрытьОбъект(Данные.ТипПроцесса, Неопределено, , ПараметрыФормы);
	КонецЕсли;

КонецПроцедуры

&НаСервере
Функция ЗаполнитьСтартоватьПроцесс(ТипПроцесса, ПараметрыЗапуска)
	
	Прокси = ИнтеграцияС1СДокументооборотПовтИсп.ПолучитьПрокси();
		
	Если ПараметрыЗапуска.Свойство("Предмет") Тогда
		ШаблонПроцесса = ИнтеграцияС1СДокументооборот.ПолучитьНовыйБизнесПроцессПоШаблону(Прокси, ТипПроцесса, ПараметрыЗапуска.Шаблон, ПараметрыЗапуска.Предмет);
	Иначе
		ШаблонПроцесса = ИнтеграцияС1СДокументооборот.ПолучитьНовыйБизнесПроцессПоШаблону(Прокси, ТипПроцесса, ПараметрыЗапуска.Шаблон);
	КонецЕсли;
	
	НовыйПроцесс = ИнтеграцияС1СДокументооборот.СоздатьОбъект(Прокси, ШаблонПроцесса.ObjectId.type);
	ЗаполнитьЗначенияСвойствXDTO(Прокси, НовыйПроцесс, ШаблонПроцесса);
	
	РезультатЗапуска = ИнтеграцияС1СДокументооборот.ЗапуститьБизнесПроцесс(Прокси, НовыйПроцесс);
		
	Если ИнтеграцияС1СДокументооборот.ПроверитьТип(Прокси, РезультатЗапуска, "DMError") Тогда
		Возврат Ложь;
	Иначе
		ПроцессID = РезультатЗапуска.businessProcess.ObjectID.id;
		Возврат Истина;
	КонецЕсли;

КонецФункции

&НаСервере
Процедура ЗаполнитьЗначенияСвойствXDTO(Прокси, Приемник, Источник)
	
	Для каждого Свойство из Источник.Свойства() Цикл
		Если Источник[Свойство.Имя] <> Неопределено Тогда
			Если ТипЗнч(Источник[Свойство.Имя]) = Тип("ОбъектXDTO") Тогда 
				ОбъектноеСвойство = ИнтеграцияС1СДокументооборот.СоздатьОбъект(Прокси, Свойство.Тип.Имя);
				ЗаполнитьЗначенияСвойствXDTO(Прокси, ОбъектноеСвойство, Источник[Свойство.Имя]);
				Приемник[Свойство.Имя] = ОбъектноеСвойство;
			ИначеЕсли ТипЗнч(Источник[Свойство.Имя]) = Тип("СписокXDTO") Тогда
				Для каждого Элемент из Источник[Свойство.Имя] Цикл
					НовыйЭлемент = ИнтеграцияС1СДокументооборот.СоздатьОбъект(Прокси,Свойство.Тип.Имя);
					ЗаполнитьЗначенияСвойствXDTO(Прокси, НовыйЭлемент, Элемент);  
					Приемник[Свойство.Имя].Добавить(НовыйЭлемент);
				КонецЦикла;
			Иначе
				Приемник[Свойство.Имя] = Источник[Свойство.Имя];
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ПолучитьДанныеДокумента()
	
	Прокси = ИнтеграцияС1СДокументооборотПовтИсп.ПолучитьПрокси();
	
	ExternalObject = ИнтеграцияС1СДокументооборот.СоздатьОбъект(Прокси, "ExternalObject");
	ExternalObject.id = Строка(ВнешнийОбъект.УникальныйИдентификатор());
	ExternalObject.type = ВнешнийОбъект.Метаданные().ПолноеИмя();
	ExternalObject.name = Строка(ВнешнийОбъект);
	
	Запрос = ИнтеграцияС1СДокументооборот.СоздатьОбъект(Прокси, "DMGetDocumentListRequest");
	Запрос.externalObjects.Добавить(ExternalObject);
	
	Запрос.columnSet.Добавить("name"); 
	Запрос.columnSet.Добавить("documentType"); 
	
	Результат = Прокси.execute(Запрос);
	ИнтеграцияС1СДокументооборот.ПроверитьВозвратВебСервиса(Прокси, Результат);
		
	Если Результат.documents.Количество() > 0 Тогда 
		ПредметXDTO = Результат.documents[0];
		ИнтеграцияС1СДокументооборот.ЗаполнитьОбъектныйРеквизит(ЭтаФорма, ПредметXDTO, "Предмет");
		ВидДокумента = ПредметXDTO.documentType.name;
		
		ЗаполнитьДеревоШаблонов();
		
	КонецЕсли;
		
КонецПроцедуры

&НаСервереБезКонтекста
Процедура ДобавлениеСвязи(ID, Тип, ВнешнийОбъект)
	
	Прокси = ИнтеграцияС1СДокументооборотПовтИсп.ПолучитьПрокси();
	
	Запрос = ИнтеграцияС1СДокументооборот.СоздатьОбъект(Прокси, "DMAddObjectLinkRequest");
			
	Запрос.ownerObject = ИнтеграцияС1СДокументооборот.СоздатьОбъект(Прокси, "ExternalObject");
	Запрос.ownerObject.id = Строка(ВнешнийОбъект.УникальныйИдентификатор());
	Запрос.ownerObject.type = ВнешнийОбъект.Метаданные().ПолноеИмя();
	Запрос.ownerObject.name = Строка(ВнешнийОбъект);
	
	Запрос.linkedObject = ИнтеграцияС1СДокументооборот.СоздатьОбъект(Прокси, "DMObjectID");
	Запрос.linkedObject.id = ID;
	Запрос.linkedObject.type = Тип;
	
	Ответ = Прокси.execute(Запрос);
	ИнтеграцияС1СДокументооборот.ПроверитьВозвратВебСервиса(Прокси, Ответ);
	
КонецПроцедуры
