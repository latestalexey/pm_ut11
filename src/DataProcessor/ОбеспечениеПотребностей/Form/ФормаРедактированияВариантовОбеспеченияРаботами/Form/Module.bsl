////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("АвтоТест") Тогда
	
		Возврат;
	
	КонецЕсли;

	ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбора(
	НаборЗаписейНоменклатура.Отбор, 
	"Номенклатура", 
	Параметры.Номенклатура, 
	ВидСравненияКомпоновкиДанных.Равно, 
	"Номенклатура", 
	Истина);

	ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбора(
	НаборЗаписейХарактеристика.Отбор, 
	"Номенклатура", 
	Параметры.Номенклатура, 
	ВидСравненияКомпоновкиДанных.Равно, 
	"Номенклатура", 
	Истина);
	
	ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбора(
	НаборЗаписейХарактеристика.Отбор, 
	"Характеристика", 
	Параметры.Характеристика, 
	ВидСравненияКомпоновкиДанных.Равно, 
	"Характеристика", 
	Истина);

	НаборЗаписейНоменклатура.Параметры.УстановитьЗначениеПараметра("Характеристика", Параметры.Характеристика);
	
	Элементы.ГруппаНоменклатура.Заголовок =
		НСтр("ru = ""Порядок применения способов обеспечения номенклатуры: """) + Строка(Параметры.Номенклатура);
	
	Если ЗначениеЗаполнено(Параметры.Характеристика) Тогда
		
		Элементы.ГруппаХарактеристика.Заголовок =
			НСтр("ru = ""Порядок применения способов обеспечения характеристики номенклатуры: """)
			+ Строка(Параметры.Характеристика);
		Элементы.ГруппаХарактеристика.Видимость = Истина;
		
	КонецЕсли;
	
	ПолучитьДействующиеСпособы();
	
КонецПроцедуры

&НаКлиенте
Процедура ПриЗакрытии()
	
	Результат = Новый Структура();
	
	Результат.Вставить("ИзменениеОсновногоСпособаОбеспечения", Новый Массив());
	
	СпособДляНоменклатурыСтарый   = СпособДляНоменклатуры;
	СпособДляХарактеристикиСтарый = СпособДляХарактеристики;
	
	ПолучитьДействующиеСпособы();
	
	Если СпособДляНоменклатурыСтарый   <> СпособДляНоменклатуры Тогда
		Результат.ИзменениеОсновногоСпособаОбеспечения.Добавить(3);
	КонецЕсли;
	Если СпособДляХарактеристикиСтарый <> СпособДляХарактеристики Тогда
		Результат.ИзменениеОсновногоСпособаОбеспечения.Добавить(4);
	КонецЕсли;
	
	Результат.Вставить("ИзменениеРеквизитовСпособаОбеспечения", ИзмененныеСпособы.ВыгрузитьЗначения());
	ОповеститьОВыборе(Результат);
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)

	Если ИмяСобытия = "Запись_СпособОбеспеченияПотребностей" Тогда
		
		ИзмененныеСпособы.Добавить(Источник);
		
	КонецЕсли;
	
КонецПроцедуры
////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ ШАПКИ ФОРМЫ

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ТАБЛИЦЫ ФОРМЫ <ИМЯ ТАБЛИЦЫ ФОРМЫ>

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ КОМАНД ФОРМЫ

&НаКлиенте
Процедура ПереместитьВверхНоменклатура(Команда)
	
	КлючЗаписи = Элементы.НаборЗаписейНоменклатура.ТекущаяСтрока;
	Если КлючЗаписи <> Неопределено Тогда
		
		ПереместитьВверхНаСервере(КлючЗаписи);
		
	КонецЕсли;
	Элементы.НаборЗаписейНоменклатура.Обновить();
	
КонецПроцедуры

&НаКлиенте
Процедура ПереместитьВнизНоменклатура(Команда)
	
	КлючЗаписи = Элементы.НаборЗаписейНоменклатура.ТекущаяСтрока;
	Если КлючЗаписи <> Неопределено Тогда
		
		ПереместитьВнизНаСервере(КлючЗаписи);
		
	КонецЕсли;
	Элементы.НаборЗаписейНоменклатура.Обновить();
	
КонецПроцедуры

&НаКлиенте
Процедура ПереместитьВверхХарактеристика(Команда)
	
	КлючЗаписи = Элементы.НаборЗаписейХарактеристика.ТекущаяСтрока;
	Если КлючЗаписи <> Неопределено Тогда
		
		ПереместитьВверхНаСервере(КлючЗаписи);
		
	КонецЕсли;
	Элементы.НаборЗаписейХарактеристика.Обновить();
	
КонецПроцедуры

&НаКлиенте
Процедура ПереместитьВнизХарактеристика(Команда)
	
	КлючЗаписи = Элементы.НаборЗаписейХарактеристика.ТекущаяСтрока;
	Если КлючЗаписи <> Неопределено Тогда
		
		ПереместитьВнизНаСервере(КлючЗаписи);
		
	КонецЕсли;
	Элементы.НаборЗаписейХарактеристика.Обновить();
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

&НаСервере 
Процедура ПолучитьДействующиеСпособы()

	Запрос = Новый Запрос();
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ОсновныеСпособы.ИсточникСпособа           КАК ИсточникСпособа,
	|	ОсновныеСпособы.СпособОбеспечения         КАК СпособОбеспечения
	|ИЗ
	|	(ВЫБРАТЬ
	|		3                                                 КАК ИсточникСпособа,
	|		СпособыНоменклатура.СпособОбеспеченияПотребностей КАК СпособОбеспечения
	|	ИЗ
	|		РегистрСведений.ВариантыОбеспеченияРаботами КАК СпособыНоменклатура
	|	ГДЕ
	|		СпособыНоменклатура.РеквизитДопУпорядочивания = 1
	|		И СпособыНоменклатура.Номенклатура   = &Номенклатура
	|		И СпособыНоменклатура.Характеристика = ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка)
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		4                                                    КАК ИсточникСпособа,
	|		СпособыХарактеристика.СпособОбеспеченияПотребностей  КАК СпособОбеспечения
	|	ИЗ
	|		РегистрСведений.ВариантыОбеспеченияРаботами КАК СпособыХарактеристика
	|	ГДЕ
	|		СпособыХарактеристика.РеквизитДопУпорядочивания = 1
	|		И СпособыХарактеристика.Номенклатура   =  &Номенклатура
	|		И СпособыХарактеристика.Характеристика =  &Характеристика
	|		И СпособыХарактеристика.Характеристика <> ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка)
	|) КАК ОсновныеСпособы";
	
	Запрос.УстановитьПараметр("Номенклатура",   Параметры.Номенклатура);
	Запрос.УстановитьПараметр("Характеристика", Параметры.Характеристика);
	РезультатЗапроса = Запрос.Выполнить();
	
	СпособДляНоменклатуры   = Неопределено;
	СпособДляХарактеристики = Неопределено;
	
	Если Не РезультатЗапроса.Пустой() Тогда
		
		Выборка = РезультатЗапроса.Выбрать();
		
		Пока Выборка.Следующий() Цикл
			
			Если Выборка.ИсточникСпособа      = 3 Тогда
				СпособДляНоменклатуры   = Выборка.СпособОбеспечения;
			ИначеЕсли Выборка.ИсточникСпособа = 4 Тогда
				СпособДляХарактеристики = Выборка.СпособОбеспечения;
			КонецЕсли;
			
		КонецЦикла;
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПереместитьВверхНаСервере(КлючЗаписи)

 	МенеджерЗаписи = РегистрыСведений.ВариантыОбеспеченияРаботами.СоздатьМенеджерЗаписи();
	МенеджерЗаписи.Номенклатура     = КлючЗаписи.Номенклатура;
	МенеджерЗаписи.Характеристика   = КлючЗаписи.Характеристика;
	МенеджерЗаписи.СпособОбеспеченияПотребностей = КлючЗаписи.СпособОбеспеченияПотребностей;
	МенеджерЗаписи.Прочитать();
	
	Если МенеджерЗаписи.РеквизитДопУпорядочивания > 0 Тогда
		
		МенеджерЗаписи.РеквизитДопУпорядочивания = МенеджерЗаписи.РеквизитДопУпорядочивания - 1;
		МенеджерЗаписи.Записать();
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПереместитьВнизНаСервере(КлючЗаписи)
	
	МенеджерЗаписи = РегистрыСведений.ВариантыОбеспеченияРаботами.СоздатьМенеджерЗаписи();
	МенеджерЗаписи.Номенклатура     = КлючЗаписи.Номенклатура;
	МенеджерЗаписи.Характеристика   = КлючЗаписи.Характеристика;
	МенеджерЗаписи.СпособОбеспеченияПотребностей = КлючЗаписи.СпособОбеспеченияПотребностей;
	МенеджерЗаписи.Прочитать();
	
	МенеджерЗаписи.РеквизитДопУпорядочивания = МенеджерЗаписи.РеквизитДопУпорядочивания + 1;
	МенеджерЗаписи.Записать();

КонецПроцедуры


