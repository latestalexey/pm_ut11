////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("АвтоТест") Тогда
	
		Возврат;
	
	КонецЕсли;
	
	ЗакрыватьПриВыборе = Ложь;
	
	Склад               = Параметры.Склад;
	СпособОбеспечения   = Параметры.СпособОбеспечения;
	Номенклатура        = Параметры.Номенклатура;
	
	ОбновитьГраницыКонтроляНаСервере();
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ КОМАНД ФОРМЫ

&НаКлиенте
Процедура Актуализировать(Команда)
	
	ПоказатьОповещениеПользователя(НСтр("ru = 'Обеспечение потребностей'"),,
		НСтр("ru = 'Выполняется актуализация границ контроля...'"), БиблиотекаКартинок.Информация32);
	
	АктуализироватьНаСервере();
	ОповеститьОВыборе(Новый Структура("ВыполняемаяОперация", "АктуализацияГраницКонтроля"));
	
	ПоказатьОповещениеПользователя(НСтр("ru = 'Управление запасами'"),,
		НСтр("ru = 'Выполнена актуализация границ контроля!'"), БиблиотекаКартинок.Информация32);
	
КонецПроцедуры

&НаКлиенте
Процедура СнятьФлажки(Команда)
	
	СнятьФлажкиНаСервере();
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьФлажки(Команда)
	
	УстановитьФлажкиНаСервере();
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

////////////////////////////////////////////////////////////////////////////////
// Прочее

&НаСервере
Процедура АктуализироватьНаСервере()
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	ГраницыКонтроля.Склад                КАК Склад,
	|	ГраницыКонтроля.Номенклатура         КАК Номенклатура,
	|	ГраницыКонтроля.Характеристика       КАК Характеристика,
	|	ГраницыКонтроля.НоваяГраницаКонтроля КАК НоваяГраницаКонтроля
	|ПОМЕСТИТЬ ГраницыКонтроля
	|ИЗ
	|	&ГраницыКонтроля КАК ГраницыКонтроля
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ГраницыКонтроля.Склад                                         КАК Склад,
	|	ГраницыКонтроля.Номенклатура                                  КАК Номенклатура,
	|	ГраницыКонтроля.Характеристика                                КАК Характеристика,
	|	ЗНАЧЕНИЕ(Перечисление.ВариантыКонтроля.ОстаткиСУчетомГрафика) КАК ВариантКонтроля,
	|	ГраницыКонтроля.НоваяГраницаКонтроля                          КАК ГраницаГрафикаДоступности,
	|	ЕСТЬNULL(НастройкаКонтроляОстатков.СрокПоставки, 0)           КАК СрокПоставки
	|ИЗ
	|	ГраницыКонтроля КАК ГраницыКонтроля
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.НастройкаКонтроляОстатков КАК НастройкаКонтроляОстатков
	|		ПО ГраницыКонтроля.Склад             = НастройкаКонтроляОстатков.Склад
	|			И ГраницыКонтроля.Номенклатура   = НастройкаКонтроляОстатков.Номенклатура
	|			И ГраницыКонтроля.Характеристика = НастройкаКонтроляОстатков.Характеристика");
	
	Запрос.УстановитьПараметр("ГраницыКонтроля", ГраницыКонтроля.Выгрузить(Новый Структура("Выбран", Истина)));
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Если РезультатЗапроса.Пустой() Тогда
		
		Возврат;
		
	КонецЕсли;
	
	Выборка = РезультатЗапроса.Выбрать();
	
	Пока Выборка.Следующий() Цикл
		
		МенеджерЗаписи = РегистрыСведений.НастройкаКонтроляОстатков.СоздатьМенеджерЗаписи();
		ЗаполнитьЗначенияСвойств(МенеджерЗаписи, Выборка);
		МенеджерЗаписи.Записать();
		
	КонецЦикла;
	
	ОбновитьГраницыКонтроляНаСервере();
	
КонецПроцедуры

&НаСервере
Процедура УстановитьФлажкиНаСервере()
	
	НайденныеСтроки = ГраницыКонтроля.НайтиСтроки(Новый Структура("Выбран", Ложь));
	
	Для каждого НайденнаяСтрока из НайденныеСтроки Цикл
		
		НайденнаяСтрока.Выбран = Истина;
		
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура СнятьФлажкиНаСервере()
	
	НайденныеСтроки = ГраницыКонтроля.НайтиСтроки(Новый Структура("Выбран", Истина));
	
	Для каждого НайденнаяСтрока из НайденныеСтроки Цикл
		
		НайденнаяСтрока.Выбран = Ложь;
		
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ОбновитьГраницыКонтроляНаСервере()

	ГраницыКонтроля.Очистить();
	
	ТекстЗапроса =
		//Основной способ обеспечения и данные о границе контроля.
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	Способы.Склад                                                  КАК Склад,
		|	Способы.Номенклатура                                           КАК Номенклатура,
		|	Способы.Характеристика                                         КАК Характеристика,
		|	Способы.СпособОбеспеченияПотребностей                          КАК СпособОбеспечения,
		|	Способы.СпособОбеспеченияПотребностей.СрокИсполненияЗаказа     КАК СрокИсполненияЗаказа,
		|	ЕСТЬNULL(НастройкаХарактеристика.ГраницаГрафикаДоступности,
		|		ЕСТЬNULL(НастройкаНоменклатура.ГраницаГрафикаДоступности,
		|			НастройкаСклад.ГраницаГрафикаДоступности))             КАК Граница,
		|	ЕСТЬNULL(НастройкаХарактеристика.СрокПоставки,
		|		ЕСТЬNULL(НастройкаНоменклатура.СрокПоставки,
		|			НастройкаСклад.СрокПоставки))                          КАК СрокПоставки,
		|	ВЫБОР 
		|		КОГДА Способы.СпособОбеспеченияПотребностей.Календарь <> ЗНАЧЕНИЕ(Справочник.Календари.ПустаяСсылка) ТОГДА
		|			Способы.СпособОбеспеченияПотребностей.Календарь
		|		ИНАЧЕ
		|			ВЫБОР 
		|				КОГДА ЕСТЬNULL(Способы.Склад.Календарь, ЗНАЧЕНИЕ(Справочник.Календари.ПустаяСсылка))
		|					<> ЗНАЧЕНИЕ(Справочник.Календари.ПустаяСсылка)
		|				ТОГДА
		|					Способы.Склад.Календарь
		|				ИНАЧЕ
		|					&УмолчаниеКалендарь
		|			КОНЕЦ
		|	КОНЕЦ                                                          КАК КалендарьПоставки,
		|	&УмолчаниеКалендарь                                            КАК КалендарьЗаказа
		|ПОМЕСТИТЬ ПорядокОбеспечения
		|ИЗ
		|	РегистрСведений.ВариантыОбеспеченияТоварами КАК Способы
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.НастройкаКонтроляОстатков КАК НастройкаХарактеристика
		|		ПО Способы.Склад             = НастройкаХарактеристика.Склад
		|			И Способы.Номенклатура   = НастройкаХарактеристика.Номенклатура
		|			И Способы.Характеристика = НастройкаХарактеристика.Характеристика
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.НастройкаКонтроляОстатков КАК НастройкаНоменклатура
		|		ПО Способы.Склад           = НастройкаНоменклатура.Склад
		|			И Способы.Номенклатура = НастройкаНоменклатура.Номенклатура
		|			И (НастройкаНоменклатура.Характеристика = ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка))
		|			И (НастройкаХарактеристика.Склад ЕСТЬ NULL )
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.НастройкаКонтроляОстатков КАК НастройкаСклад
		|		ПО Способы.Склад = НастройкаСклад.Склад
		|			И (НастройкаСклад.Номенклатура    = ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка))
		|			И (НастройкаСклад.Характеристика  = ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка))
		|			И (НастройкаХарактеристика.Склад ЕСТЬ NULL )
		|			И (НастройкаНоменклатура.Склад   ЕСТЬ NULL )
		|ГДЕ
		|	Способы.РеквизитДопУпорядочивания = 1
		|		И Способы.СпособОбеспеченияПотребностей.СрокИсполненияЗаказа > 0
		|		И ЕСТЬNULL(НастройкаХарактеристика.ВариантКонтроля, 
		|			ЕСТЬNULL(НастройкаНоменклатура.ВариантКонтроля, 
		|				НастройкаСклад.ВариантКонтроля)) 
		|		= ЗНАЧЕНИЕ(Перечисление.ВариантыКонтроля.ОстаткиСУчетомГрафика)
		|{ГДЕ
		|	Способы.Склад КАК Склад,
		|	Способы.СпособОбеспеченияПотребностей КАК СпособОбеспечения,
		|	Способы.Номенклатура КАК Номенклатура}
		|
		|;
		|/////////////////////////////////////////////////////////////////////////////
		//Данные о дате следующей поставки.
		|ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
		|	ПорядокОбеспечения.СпособОбеспечения    КАК СпособОбеспечения,
		|	ПорядокОбеспечения.СрокИсполненияЗаказа КАК СрокИсполненияЗаказа,
		|	ПорядокОбеспечения.КалендарьПоставки    КАК КалендарьПоставки,
		|	ПорядокОбеспечения.КалендарьЗаказа      КАК КалендарьЗаказа
		|ПОМЕСТИТЬ ПараметрыРасчетаКлючевыхДат
		|ИЗ
		|	ПорядокОбеспечения КАК ПорядокОбеспечения
		|;
		|/////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	ПараметрыРасчета.СпособОбеспечения                   КАК СпособОбеспечения,
		|	ДатыПоставок.ДатаГрафика                             КАК ДатаПоставки,
		|	МАКСИМУМ(ВЫБОР 
		|		КОГДА ПараметрыРасчета.КалендарьЗаказа = ЗНАЧЕНИЕ(Справочник.Календари.ПустаяСсылка) 
		|			И ДОБАВИТЬКДАТЕ(ДатыПоставок.ДатаГрафика, ДЕНЬ, 
		|				-ПараметрыРасчета.СрокИсполненияЗаказа) >= &НачалоПериода 
		|		ТОГДА
		|			ДОБАВИТЬКДАТЕ(ДатыПоставок.ДатаГрафика, ДЕНЬ, 
		|				-ПараметрыРасчета.СрокИсполненияЗаказа)
		|		ИНАЧЕ
		|			ДатыЗаказа.ДатаГрафика
		|	КОНЕЦ)                                               КАК ДатаЗаказа
		|ПОМЕСТИТЬ ДатыПоставок
		|ИЗ
		|	ПараметрыРасчетаКлючевыхДат КАК ПараметрыРасчета
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КалендарныеГрафики КАК ДатыПоставок
		|		ПО ПараметрыРасчета.КалендарьПоставки = ДатыПоставок.Календарь
		|			И ДатыПоставок.Год           >= ГОД(&НачалоПериода)
		|			И ДатыПоставок.ДатаГрафика   >= &НачалоПериода
		|			И ДатыПоставок.ДеньВключенВГрафик
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КалендарныеГрафики КАК ДатыЗаказа
		|			ПО ПараметрыРасчета.КалендарьЗаказа = ДатыЗаказа.Календарь
		|			И ДатыЗаказа.Год         >= ГОД(&НачалоПериода)
		|			И ДатыЗаказа.ДатаГрафика >= &НачалоПериода
		|			И ДатыЗаказа.ДеньВключенВГрафик
		|			И ДатыЗаказа.ДатаГрафика 
		|				<= ДОБАВИТЬКДАТЕ(ДатыПоставок.ДатаГрафика, ДЕНЬ,- ПараметрыРасчета.СрокИсполненияЗаказа)
		|
		|СГРУППИРОВАТЬ ПО 
		|	ПараметрыРасчета.СпособОбеспечения,
		|	ДатыПоставок.ДатаГрафика
		|ИМЕЮЩИЕ 
		|	НЕ МАКСИМУМ(ВЫБОР 
		|		КОГДА ПараметрыРасчета.КалендарьЗаказа = ЗНАЧЕНИЕ(Справочник.Календари.ПустаяСсылка) 
		|			И ДОБАВИТЬКДАТЕ(ДатыПоставок.ДатаГрафика, ДЕНЬ, 
		|				-ПараметрыРасчета.СрокИсполненияЗаказа) >=&НачалоПериода 
		|		ТОГДА
		|			ДОБАВИТЬКДАТЕ(ДатыПоставок.ДатаГрафика, ДЕНЬ, 
		|				-ПараметрыРасчета.СрокИсполненияЗаказа)
		|		ИНАЧЕ
		|			ДатыЗаказа.ДатаГрафика
		|	КОНЕЦ) ЕСТЬ NULL
		|	ИЛИ МАКСИМУМ(ПараметрыРасчета.КалендарьПоставки) = ЗНАЧЕНИЕ(Справочник.Календари.ПустаяСсылка)
		|;
		|/////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	ДатыПоставок.СпособОбеспечения                    КАК СпособОбеспечения,
		|	МИНИМУМ(ДатыПоставок.ДатаПоставки)                КАК ДатаПоставки,
		|	МИНИМУМ(ДатыПоставок.ДатаЗаказа)                  КАК ДатаЗаказа
		|ПОМЕСТИТЬ БлижайшиеПоставки
		|ИЗ
		|	ДатыПоставок КАК ДатыПоставок
		|СГРУППИРОВАТЬ ПО 
		|	ДатыПоставок.СпособОбеспечения
		|;
		|/////////////////////////////////////////////////////////////////////////////
		//Данные о новой границе контроля по дате следующей поставки.
		|ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	ПорядокОбеспечения.Номенклатура                                  КАК Номенклатура,
		|	ПорядокОбеспечения.Характеристика                                КАК Характеристика,
		|	ПорядокОбеспечения.Склад                                         КАК Склад,
		|	МАКСИМУМ(ВЫБОР 
		|		КОГДА Граница >= &НачалоПериода ТОГДА
		|			Граница
		|		КОГДА СрокПоставки > 0 ТОГДА
		|			ДОБАВИТЬКДАТЕ(&НачалоПериода, ДЕНЬ, СрокПоставки - 1)
		|		ИНАЧЕ 
		|			ДАТАВРЕМЯ(1, 1, 1)
		|	КОНЕЦ)                                                            КАК ГраницаКонтроля,
		|
		|	ВЫБОР
		|		КОГДА МАКСИМУМ(ПорядокОбеспечения.КалендарьПоставки) 
		|			= ЗНАЧЕНИЕ(Справочник.Календари.ПустаяСсылка)
		|		ТОГДА
		|			ВЫБОР 
		|				КОГДА &УмолчаниеДатаСледующегоЗаказа = ДАТАВРЕМЯ(1, 1, 1) ТОГДА
		|					ДАТАВРЕМЯ(1, 1, 1)
		|				ИНАЧЕ 
		|					ДОБАВИТЬКДАТЕ(&УмолчаниеДатаСледующегоЗаказа, ДЕНЬ,
		|						МАКСИМУМ(ПорядокОбеспечения.СрокИсполненияЗаказа))
		|			КОНЕЦ
		|		ИНАЧЕ 
		|			МИНИМУМ(СледующиеПоставки.ДатаПоставки)
		|	КОНЕЦ                                                            КАК НоваяГраницаКонтроля
		|ИЗ 
		|	ПорядокОбеспечения КАК ПорядокОбеспечения
		|		ЛЕВОЕ СОЕДИНЕНИЕ БлижайшиеПоставки КАК БлижайшиеПоставки 
		|			ЛЕВОЕ СОЕДИНЕНИЕ ДатыПоставок КАК СледующиеПоставки 
		|			ПО БлижайшиеПоставки.СпособОбеспечения = СледующиеПоставки.СпособОбеспечения
		|				И БлижайшиеПоставки.ДатаЗаказа < СледующиеПоставки.ДатаЗаказа
		|		ПО ПорядокОбеспечения.СпособОбеспечения = БлижайшиеПоставки.СпособОбеспечения
		|СГРУППИРОВАТЬ ПО 
		|	ПорядокОбеспечения.Номенклатура,
		|	ПорядокОбеспечения.Характеристика,
		|	ПорядокОбеспечения.Склад
		|ИМЕЮЩИЕ 
		|	МАКСИМУМ(ВЫБОР 
		|		КОГДА Граница >= &НачалоПериода ТОГДА
		|			Граница
		|		КОГДА СрокПоставки > 0 ТОГДА
		|			ДОБАВИТЬКДАТЕ(&НачалоПериода, ДЕНЬ, СрокПоставки - 1)
		|		ИНАЧЕ 
		|			ДАТАВРЕМЯ(1, 1, 1)
		|	КОНЕЦ) 
		|	< ВЫБОР
		|		КОГДА МАКСИМУМ(ПорядокОбеспечения.КалендарьПоставки) 
		|			= ЗНАЧЕНИЕ(Справочник.Календари.ПустаяСсылка)
		|		ТОГДА
		|			ВЫБОР 
		|				КОГДА &УмолчаниеДатаСледующегоЗаказа = ДАТАВРЕМЯ(1, 1, 1) ТОГДА
		|					ДАТАВРЕМЯ(1, 1, 1)
		|				ИНАЧЕ 
		|					ДОБАВИТЬКДАТЕ(&УмолчаниеДатаСледующегоЗаказа, ДЕНЬ,
		|						МАКСИМУМ(ПорядокОбеспечения.СрокИсполненияЗаказа))
		|			КОНЕЦ
		|		ИНАЧЕ 
		|			МИНИМУМ(СледующиеПоставки.ДатаПоставки)
		|	КОНЕЦ
		|УПОРЯДОЧИТЬ ПО
		|	Склад,
		|	Номенклатура,
		|	Характеристика";
	
	ПостроительЗапроса = Новый ПостроительЗапроса(ТекстЗапроса);
	
	Если ЗначениеЗаполнено(Склад) Тогда
		
		ОтборСклад = ПостроительЗапроса.Отбор.Добавить("Склад");
		ОтборСклад.Установить(Склад);
		
		УстановитьПривилегированныйРежим(Истина);
		
		СкладЭтоГруппа = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Склад, "ЭтоГруппа");
		
		УстановитьПривилегированныйРежим(Ложь);
		
		Если ЗначениеЗаполнено(СкладЭтоГруппа) И СкладЭтоГруппа Тогда
			
			ОтборСклад.ВидСравнения = ВидСравнения.ВИерархии;
			
		КонецЕсли;
		
	КонецЕсли;
	
	Если ЗначениеЗаполнено(СпособОбеспечения) Тогда
		
		ОтборСпособОбеспечения = ПостроительЗапроса.Отбор.Добавить("СпособОбеспечения");
		ОтборСпособОбеспечения.Установить(СпособОбеспечения);
		
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Номенклатура) Тогда
		
		ОтборНоменклатура = ПостроительЗапроса.Отбор.Добавить("Номенклатура");
		ОтборНоменклатура.Установить(Номенклатура);
		
	КонецЕсли;
	
	Запрос = ПостроительЗапроса.ПолучитьЗапрос();
	
	НачалоПериода   = НачалоДня(ТекущаяДатаСеанса());
	КалендарьЗаказа = Константы.ОсновнойКалендарьПредприятия.Получить();
	КлючевыеДаты    = Обработки.ОбеспечениеПотребностей.ПолучитьДатыЗаказаПоКалендарю(КалендарьЗаказа, НачалоПериода);
	
	Запрос.УстановитьПараметр("НачалоПериода",                 НачалоПериода);
	Запрос.УстановитьПараметр("УмолчаниеКалендарь",            КалендарьЗаказа);
	Запрос.УстановитьПараметр("УмолчаниеДатаЗаказа",           КлючевыеДаты.ДатаЗаказа);
	Запрос.УстановитьПараметр("УмолчаниеДатаСледующегоЗаказа", КлючевыеДаты.ДатаСледующегоЗаказа);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Выборка = РезультатЗапроса.Выбрать();
	
	Пока Выборка.Следующий() Цикл
		
		ЗаполнитьЗначенияСвойств(ГраницыКонтроля.Добавить(), Выборка);
		
	КонецЦикла;
	
КонецПроцедуры
