#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

///////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

///////////////////////////////////////////////////////////////////////////////
// Печать

Процедура Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт
	
	СтруктураТипов = ОбщегоНазначенияУТ.СоответствиеМассивовПоТипамОбъектов(МассивОбъектов);
	
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "ОтчетКомиссионера") Тогда
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм, "ОтчетКомиссионера", "Отчет комиссионера", СформироватьПечатнуюФормуОтчетПоКомиссии(СтруктураТипов, ОбъектыПечати, ПараметрыПечати));
	КонецЕсли;
	
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "ОтчетКомиссионераСписание") Тогда
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм, "ОтчетКомиссионераСписание", "Отчет комиссионера", СформироватьПечатнуюФормуОтчетПоКомиссииСписание(СтруктураТипов, ОбъектыПечати, ПараметрыПечати));
	КонецЕсли;
	
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "М4") Тогда
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм, "М4", "М-4 (Приходный ордер)", СформироватьПечатнуюФормуМ4(СтруктураТипов, ОбъектыПечати, ПараметрыПечати));
	КонецЕсли;
	
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "ТОРГ4") Тогда
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм, "ТОРГ4", "ТОРГ-4 (Акт о приемке товара, поступившего без счета поставщика)", СформироватьПечатнуюФормуТОРГ4(СтруктураТипов, ОбъектыПечати, ПараметрыПечати));
	КонецЕсли;
	
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "ТОРГ12") Тогда
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм, "ТОРГ12", "ТОРГ-12 (Товарная накладная" + ?(ПараметрыПечати["ВыводитьУслуги"], "", " без услуг") + ")", СформироватьПечатнуюФормуТОРГ12(СтруктураТипов, ОбъектыПечати, ПараметрыПечати));
	КонецЕсли;
	
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "М15") Тогда
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм, "М15", "М-15 (Накладная)", СформироватьПечатнуюФормуМ15(СтруктураТипов, ОбъектыПечати, ПараметрыПечати));
	КонецЕсли;
	
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "СчетФактура") Тогда
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм, "СчетФактура", "Счет-фактура", СформироватьПечатнуюФормуСчетФактура(СтруктураТипов, ОбъектыПечати, ПараметрыПечати));
	КонецЕсли;
	
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "СчетФактураВВалюте") Тогда
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм, "СчетФактураВВалюте", "Счет-фактура", СформироватьПечатнуюФормуСчетФактура(СтруктураТипов, ОбъектыПечати, ПараметрыПечати));
	КонецЕсли;
	
	ФормированиеПечатныхФорм.ЗаполнитьПараметрыОтправки(ПараметрыВывода.ПараметрыОтправки, СтруктураТипов, КоллекцияПечатныхФорм);
	
КонецПроцедуры

Функция СформироватьПечатнуюФормуОтчетПоКомиссии(СтруктураТипов, ОбъектыПечати, ПараметрыПечати)
	
	УстановитьПривилегированныйРежим(Истина);
	
	ТабличныйДокумент = Новый ТабличныйДокумент;
	ТабличныйДокумент.АвтоМасштаб = Истина;
	ТабличныйДокумент.ОриентацияСтраницы = ОриентацияСтраницы.Ландшафт;
	
	ТабличныйДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_ОтчетПоКомиссии";
	
	НомерТипаДокумента = 0;
	
	Для Каждого СтруктураОбъектов Из СтруктураТипов Цикл
		Если СтруктураОбъектов.Ключ = "Документ.ОтчетКомиссионераОСписании"
			Или СтруктураОбъектов.Ключ = "Документ.ОтчетКомитентуОСписании" Тогда
			Продолжить;
		КонецЕсли;

		НомерТипаДокумента = НомерТипаДокумента + 1;
		Если НомерТипаДокумента > 1 Тогда
			ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		
		МенеджерОбъекта = ОбщегоНазначения.МенеджерОбъектаПоПолномуИмени(СтруктураОбъектов.Ключ);
		
		ДанныеДляПечати = МенеджерОбъекта.ПолучитьДанныеДляПечатнойФормыОтчетПоКомиссии(ПараметрыПечати, СтруктураОбъектов.Значение);
		
		ЗаполнитьТабличныйДокументОтчетПоКомиссииОПродажах(
			ТабличныйДокумент,
			ДанныеДляПечати,
			ОбъектыПечати
		);
	КонецЦикла;
	
	Возврат ТабличныйДокумент;

КонецФункции

Функция СформироватьПечатнуюФормуОтчетПоКомиссииСписание(СтруктураТипов, ОбъектыПечати, ПараметрыПечати)
	
	УстановитьПривилегированныйРежим(Истина);
	
	ТабличныйДокумент = Новый ТабличныйДокумент;
	ТабличныйДокумент.АвтоМасштаб = Истина;
	ТабличныйДокумент.ОриентацияСтраницы = ОриентацияСтраницы.Ландшафт;
	
	ТабличныйДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_ОтчетПоКомиссииСписание";
	
	НомерТипаДокумента = 0;
	
	Для Каждого СтруктураОбъектов Из СтруктураТипов Цикл
		Если СтруктураОбъектов.Ключ = "Документ.ОтчетКомиссионера"
			Или СтруктураОбъектов.Ключ = "Документ.ОтчетКомитенту" Тогда
			Продолжить;
		КонецЕсли;
		НомерТипаДокумента = НомерТипаДокумента + 1;
		Если НомерТипаДокумента > 1 Тогда
			ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		
		МенеджерОбъекта = ОбщегоНазначения.МенеджерОбъектаПоПолномуИмени(СтруктураОбъектов.Ключ);
		
		ДанныеДляПечати = МенеджерОбъекта.ПолучитьДанныеДляПечатнойФормыОтчетПоКомиссииОСписании(ПараметрыПечати, СтруктураОбъектов.Значение);
		
		ЗаполнитьТабличныйДокументОтчетПоКомиссииОСписании(
			ТабличныйДокумент,
			ДанныеДляПечати,
			ОбъектыПечати
		);
	КонецЦикла;
	Возврат ТабличныйДокумент;
	
КонецФункции

Функция СформироватьПечатнуюФормуТОРГ12(СтруктураТипов, ОбъектыПечати, ПараметрыПечати, КомплектыПечати = Неопределено) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	ТабличныйДокумент = Новый ТабличныйДокумент;
	ТабличныйДокумент.ПолеСлева = 5;
	ТабличныйДокумент.ПолеСправа = 5;
	ТабличныйДокумент.РазмерКолонтитулаСверху = 0;
	ТабличныйДокумент.РазмерКолонтитулаСнизу = 0;
	ТабличныйДокумент.АвтоМасштаб = Истина;
	ТабличныйДокумент.ОриентацияСтраницы = ОриентацияСтраницы.Ландшафт;
	
	ТабличныйДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_ТОРГ12";
	
	НомерТипаДокумента = 0;
	
	Для Каждого СтруктураОбъектов Из СтруктураТипов Цикл
		
		НомерТипаДокумента = НомерТипаДокумента + 1;
		Если НомерТипаДокумента > 1 Тогда
			ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		
		МенеджерОбъекта = ОбщегоНазначения.МенеджерОбъектаПоПолномуИмени(СтруктураОбъектов.Ключ);
		
		ДанныеДляПечати = МенеджерОбъекта.ПолучитьДанныеДляПечатнойФормыТОРГ12(ПараметрыПечати, СтруктураОбъектов.Значение);
		
		ЗаполнитьТабличныйДокументТОРГ12(ТабличныйДокумент, ДанныеДляПечати, ОбъектыПечати, ПараметрыПечати, КомплектыПечати);
	КонецЦикла;
	Возврат ТабличныйДокумент;
	
КонецФункции

Функция СформироватьПечатнуюФормуМ4(СтруктураТипов, ОбъектыПечати, ПараметрыПечати)
	
	УстановитьПривилегированныйРежим(Истина);
	
	ТабличныйДокумент = Новый ТабличныйДокумент;
	// Зададим параметры макета
	ТабличныйДокумент.ОриентацияСтраницы = ОриентацияСтраницы.Ландшафт;
	
	ТабличныйДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_М4";
	
	НомерТипаДокумента = 0;
	
	Для Каждого СтруктураОбъектов Из СтруктураТипов Цикл
		
		НомерТипаДокумента = НомерТипаДокумента + 1;
		Если НомерТипаДокумента > 1 Тогда
			ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		
		МенеджерОбъекта = ОбщегоНазначения.МенеджерОбъектаПоПолномуИмени(СтруктураОбъектов.Ключ);
		
		ДанныеДляПечати = МенеджерОбъекта.ПолучитьДанныеДляПечатнойФормыМ4(ПараметрыПечати, СтруктураОбъектов.Значение);
		
		ЗаполнитьТабличныйДокументМ4(ТабличныйДокумент, ДанныеДляПечати, ОбъектыПечати);
	КонецЦикла;
	Возврат ТабличныйДокумент;

КонецФункции

Функция СформироватьПечатнуюФормуТОРГ4(СтруктураТипов, ОбъектыПечати, ПараметрыПечати)
	
	УстановитьПривилегированныйРежим(Истина);
	
	ТабличныйДокумент = Новый ТабличныйДокумент;
	
	// Зададим параметры макета
	ТабличныйДокумент.ОриентацияСтраницы = ОриентацияСтраницы.Ландшафт;
	
	ТабличныйДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_ТОРГ4";
	
	НомерТипаДокумента = 0;
	
	Для Каждого СтруктураОбъектов Из СтруктураТипов Цикл
		
		НомерТипаДокумента = НомерТипаДокумента + 1;
		Если НомерТипаДокумента > 1 Тогда
			ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		
		МенеджерОбъекта = ОбщегоНазначения.МенеджерОбъектаПоПолномуИмени(СтруктураОбъектов.Ключ);
		
		ДанныеДляПечати = МенеджерОбъекта.ПолучитьДанныеДляПечатнойФормыТОРГ4(ПараметрыПечати, СтруктураОбъектов.Значение);
		
		ЗаполнитьТабличныйДокументТОРГ4(ТабличныйДокумент, ДанныеДляПечати, ОбъектыПечати);
	КонецЦикла;
	Возврат ТабличныйДокумент;
	
КонецФункции

Функция СформироватьПечатнуюФормуМ15(СтруктураТипов, ОбъектыПечати, ПараметрыПечати, КомплектыПечати = Неопределено) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	ТабличныйДокумент = Новый ТабличныйДокумент;
	ТабличныйДокумент.АвтоМасштаб = Истина;
	ТабличныйДокумент.ОриентацияСтраницы = ОриентацияСтраницы.Ландшафт;
	
	ТабличныйДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_М15";
	
	НомерТипаДокумента = 0;
	
	Для Каждого СтруктураОбъектов Из СтруктураТипов Цикл
		
		НомерТипаДокумента = НомерТипаДокумента + 1;
		Если НомерТипаДокумента > 1 Тогда
			ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		
		МенеджерОбъекта = ОбщегоНазначения.МенеджерОбъектаПоПолномуИмени(СтруктураОбъектов.Ключ);
		
		ДанныеДляПечати = МенеджерОбъекта.ПолучитьДанныеДляПечатнойФормыМ15(ПараметрыПечати, СтруктураОбъектов.Значение);
		
		ЗаполнитьТабличныйДокументМ15(ТабличныйДокумент, ДанныеДляПечати, ОбъектыПечати, КомплектыПечати);
	КонецЦикла;
	Возврат ТабличныйДокумент;
	
КонецФункции

Функция СформироватьПечатнуюФормуСчетФактура(СтруктураТипов, ОбъектыПечати, ПараметрыПечати, КомплектыПечати = Неопределено) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	ТабличныйДокумент = Новый ТабличныйДокумент;
	ТабличныйДокумент.АвтоМасштаб = Истина;
	ТабличныйДокумент.ОриентацияСтраницы = ОриентацияСтраницы.Ландшафт;
	
	ТабличныйДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_СчетФактура";
	
	НомерТипаДокумента = 0;
	
	Для Каждого СтруктураОбъектов Из СтруктураТипов Цикл
		
		Если СтруктураОбъектов.Ключ = "Документ.ОтчетКомитентуОСписании"
			Или СтруктураОбъектов.Ключ = "Документ.ОтчетКомиссионераОСписании" Тогда
			Продолжить;
		КонецЕсли;
			
		НомерТипаДокумента = НомерТипаДокумента + 1;
		Если НомерТипаДокумента > 1 Тогда
			ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		
		МенеджерОбъекта = ОбщегоНазначения.МенеджерОбъектаПоПолномуИмени(СтруктураОбъектов.Ключ);
		
		ДанныеДляПечати = МенеджерОбъекта.ПолучитьДанныеДляПечатнойФормыСчетФактура(ПараметрыПечати, СтруктураОбъектов.Значение);
		
		СчетФактураНаАванс = ДанныеДляПечати.Свойство("СчетФактураНаАванс");
		ЗаполнитьТабличныйДокументСчетФактура(
			ТабличныйДокумент,
			ДанныеДляПечати,
			ОбъектыПечати,
			СчетФактураНаАванс,
			ПараметрыПечати.ПечатьВВалюте,
			КомплектыПечати
		);
	КонецЦикла;
	Возврат ТабличныйДокумент;
	
КонецФункции

///////////////////////////////////////////////////////////////////////////////
// Печать отчета по комиссии

Процедура ЗаполнитьРеквизитыШапкиОтчетПоКомиссии(ДанныеПечати, Заголовок, Макет, ТабличныйДокумент)
	
	// Выводим общие реквизиты шапки
	СведенияОКомитенте = ФормированиеПечатныхФорм.СведенияОЮрФизЛице(ДанныеПечати.Комитент, ДанныеПечати.Дата);
	СведенияОКомиссионере = ФормированиеПечатныхФорм.СведенияОЮрФизЛице(ДанныеПечати.Комиссионер, ДанныеПечати.Дата);
	
	ОбластьМакета = Макет.ПолучитьОбласть("Шапка");
	ОбластьМакета.Параметры.Заполнить(ДанныеПечати);
	ШтрихкодированиеПечатныхФорм.ВывестиШтрихкодВТабличныйДокумент(ТабличныйДокумент, Макет, ОбластьМакета, ДанныеПечати.Ссылка);
	ОбластьМакета.Параметры.ТекстЗаголовка = ОбщегоНазначенияУТКлиентСервер.СформироватьЗаголовокДокумента(ДанныеПечати, Заголовок);
	
	ОбластьМакета.Параметры.ПредставлениеКомитента = ФормированиеПечатныхФорм.ОписаниеОрганизации(СведенияОКомитенте, "ПолноеНаименование,");
	ОбластьМакета.Параметры.ПредставлениеКомиссионера = ФормированиеПечатныхФорм.ОписаниеОрганизации(СведенияОКомиссионере, "ПолноеНаименование,");
	
	ТабличныйДокумент.Вывести(ОбластьМакета);
	
КонецПроцедуры

Процедура ЗаполнитьРеквизитыПодвалаОтчетПоКомисии(ДанныеПечати, ВыборкаПоДокументам, Макет, ТабличныйДокумент)
	
	ОбластьМакета = Макет.ПолучитьОбласть("Подвал");
	
	ОбластьМакета.Параметры.СуммаКомитентаВсего = ВыборкаПоДокументам.СуммаКомитента;
	ОбластьМакета.Параметры.СуммаПродажиВсего = ВыборкаПоДокументам.СуммаПродажи;
	ОбластьМакета.Параметры.СуммаВознагражденияВсего = ВыборкаПоДокументам.СуммаВознаграждения;
	
	Если ВыборкаПоДокументам.СуммаПродажи < 0 Тогда
		ТекстИтоговаяСтрока = НСтр("ru = 'Всего возвращено наименований '");
	Иначе
		ТекстИтоговаяСтрока = НСтр("ru = 'Всего продано наименований '");
	КонецЕсли;
	ОбластьМакета.Параметры.ИтоговаяСтрока = ТекстИтоговаяСтрока
		+ ВыборкаПоДокументам.Выбрать().Количество()
		+ НСтр("ru = ', на сумму '")
		+ ФормированиеПечатныхФорм.ФорматСумм(ВыборкаПоДокументам.СуммаПродажи, ДанныеПечати.Валюта);
	
	ОбластьМакета.Параметры.СуммаПрописью = РаботаСКурсамиВалют.СформироватьСуммуПрописью(
		ВыборкаПоДокументам.СуммаПродажи, 
		ДанныеПечати.Валюта
	);
	Если ДанныеПечати.СуммаВознаграждения <> 0 Тогда
		ОбластьМакета.Параметры.СуммаВознаграждения = НСтр("ru = 'Сумма комиссионного вознаграждения составила '")
			+ ?(ДанныеПечати.СуммаВознаграждения < 0, НСтр("ru = 'минус '"), "")
			+ РаботаСКурсамиВалют.СформироватьСуммуПрописью(ДанныеПечати.СуммаВознаграждения, ДанныеПечати.Валюта);
	КонецЕсли;
	
	ОбластьМакета.Параметры.ПредставительКомитента = ФизическиеЛица.ФамилияИнициалыФизЛица(ДанныеПечати.ПредставительКомитента);
	ОбластьМакета.Параметры.ПредставительКомиссионера = ФизическиеЛица.ФамилияИнициалыФизЛица(ДанныеПечати.ПредставительКомиссионера);
	
	ТабличныйДокумент.Вывести(ОбластьМакета);
		
КонецПроцедуры

Процедура ЗаполнитьТабличныйДокументОтчетПоКомиссииОПродажах(ТабличныйДокумент, ДанныеДляПечати, ОбъектыПечати) 
	
	Заголовок = ДанныеДляПечати.Заголовок;
	
	Макет = УправлениеПечатью.ПолучитьМакет("Обработка.ПечатьОбщихФорм.ПФ_MXL_ОтчетПоКомиссии");
	
	КолонкаКодов = ФормированиеПечатныхФорм.ИмяДополнительнойКолонки();
	
	ДанныеПечати      	= ДанныеДляПечати.РезультатПоШапке.Выбрать();
	ВыборкаПоДокументам = ДанныеДляПечати.РезультатПоТабличнойЧасти.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	ПервыйДокумент = Истина;
	Пока ДанныеПечати.Следующий() Цикл
	
		Если Не ПервыйДокумент Тогда
			ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		
		ПервыйДокумент = Ложь;
		НомерСтрокиНачало = ТабличныйДокумент.ВысотаТаблицы + 1;
		
		ВыборкаПоДокументам.Сбросить();
		
		СтруктураПоиска = Новый Структура("Ссылка", ДанныеПечати.Ссылка);
		Если ВыборкаПоДокументам.НайтиСледующий(СтруктураПоиска) Тогда
		
			// Выводим общие реквизиты шапки
			ЗаполнитьРеквизитыШапкиОтчетПоКомиссии(
				ДанныеПечати,
				Заголовок,
				Макет,
				ТабличныйДокумент
			);
			
			// Выводим заголовок таблицы
			Если ЗначениеЗаполнено(КолонкаКодов) Тогда
				ЗаголовокТаблицы = Макет.ПолучитьОбласть("ШапкаТаблицыСКодами");
				ЗаголовокТаблицы.Параметры.ИмяКолонкиКодов = КолонкаКодов;
			Иначе
				ЗаголовокТаблицы = Макет.ПолучитьОбласть("ШапкаТаблицы");
			КонецЕсли;
			ЗаголовокТаблицы.Параметры.Валюта = ДанныеПечати.Валюта;
			ТабличныйДокумент.Вывести(ЗаголовокТаблицы);
			
			// Выводим многострочную часть документа
			Если ЗначениеЗаполнено(КолонкаКодов) Тогда
				ОбластьМакета = Макет.ПолучитьОбласть("СтрокаСКодами");
			Иначе
				ОбластьМакета = Макет.ПолучитьОбласть("Строка");
			КонецЕсли;
				
			НомерСтроки = 0;
			
			СтрокаТовары = ВыборкаПоДокументам.Выбрать();
			Пока СтрокаТовары.Следующий() Цикл

				НомерСтроки = НомерСтроки + 1;
				
				ОбластьМакета.Параметры.Заполнить(СтрокаТовары);
				
				Если ЗначениеЗаполнено(КолонкаКодов) Тогда
					ОбластьМакета.Параметры.Артикул = СтрокаТовары[КолонкаКодов];
				КонецЕсли;
				
				ОбластьМакета.Параметры.НомерСтроки = НомерСтроки;
				ОбластьМакета.Параметры.ТоварНаименование = НоменклатураКлиентСервер.ПредставлениеНоменклатурыДляПечати(
					СтрокаТовары.ТоварНаименование,
					СтрокаТовары.Характеристика
					);
				ОбластьМакета.Параметры.ЦенаКомитента = ?(СтрокаТовары.Количество = 0, 0, Окр(СтрокаТовары.СуммаКомитента / СтрокаТовары.Количество, 2, 1));
				ОбластьМакета.Параметры.ЦенаПродажи = ?(СтрокаТовары.Количество = 0, 0, Окр(СтрокаТовары.СуммаПродажи / СтрокаТовары.Количество, 2, 1));
				
				ТабличныйДокумент.Вывести(ОбластьМакета);

			КонецЦикла;
			
			ЗаполнитьРеквизитыПодвалаОтчетПоКомисии(
				ДанныеПечати,
				ВыборкаПоДокументам,
				Макет,
				ТабличныйДокумент
			);
			
			УправлениеПечатью.ЗадатьОбластьПечатиДокумента(
				ТабличныйДокумент,
				НомерСтрокиНачало,
				ОбъектыПечати,
				ДанныеПечати.Ссылка
			);
			
		КонецЕсли;
	
	КонецЦикла;

КонецПроцедуры

Процедура ЗаполнитьРеквизитыПодвалаОтчетПоКомиссииОСписании(ДанныеПечати, ВыборкаПоДокументам, Макет, ТабличныйДокумент)
	
	ОбластьМакета = Макет.ПолучитьОбласть("Подвал");
	
	ОбластьМакета.Параметры.СуммаВсего = ВыборкаПоДокументам.Сумма;
	
	ОбластьМакета.Параметры.ИтоговаяСтрока = НСтр("ru = 'Всего списано наименований '")
		+ ВыборкаПоДокументам.Выбрать().Количество()
		+ ?(ВыборкаПоДокументам.Сумма <> 0, НСтр("ru = ', на сумму '"), "")
		+ ?(ВыборкаПоДокументам.Сумма <> 0, ФормированиеПечатныхФорм.ФорматСумм(ВыборкаПоДокументам.Сумма, ДанныеПечати.Валюта), "");
	
	ОбластьМакета.Параметры.СуммаПрописью = РаботаСКурсамиВалют.СформироватьСуммуПрописью(
		ВыборкаПоДокументам.Сумма, 
		ДанныеПечати.Валюта
	);
	ОбластьМакета.Параметры.ПредставительКомитента = ФизическиеЛица.ФамилияИнициалыФизЛица(ДанныеПечати.ПредставительКомитента);
	ОбластьМакета.Параметры.ПредставительКомиссионера = ФизическиеЛица.ФамилияИнициалыФизЛица(ДанныеПечати.ПредставительКомиссионера);
	
	ТабличныйДокумент.Вывести(ОбластьМакета);
		
КонецПроцедуры

Процедура ЗаполнитьТабличныйДокументОтчетПоКомиссииОСписании(ТабличныйДокумент, ДанныеДляПечати, ОбъектыПечати) 
	
	Заголовок = "Отчет комиссионера о списании";
	
	Макет = УправлениеПечатью.ПолучитьМакет("Обработка.ПечатьОбщихФорм.ПФ_MXL_ОтчетПоКомиссииОСписании");
	
	КолонкаКодов = ФормированиеПечатныхФорм.ИмяДополнительнойКолонки();

	ДанныеПечати      	= ДанныеДляПечати.РезультатПоШапке.Выбрать();
	ВыборкаПоДокументам = ДанныеДляПечати.РезультатПоТабличнойЧасти.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	ПервыйДокумент = Истина;
	Пока ДанныеПечати.Следующий() Цикл
	
		Если Не ПервыйДокумент Тогда
			ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		
		ПервыйДокумент = Ложь;
		НомерСтрокиНачало = ТабличныйДокумент.ВысотаТаблицы + 1;
		
		СтруктураПоиска = Новый Структура("Ссылка", ДанныеПечати.Ссылка);
		Если ВыборкаПоДокументам.НайтиСледующий(СтруктураПоиска) Тогда
		
			// Выводим общие реквизиты шапки
			ЗаполнитьРеквизитыШапкиОтчетПоКомиссии(
				ДанныеПечати,
				Заголовок,
				Макет,
				ТабличныйДокумент
			);
			
			// Выводим заголовок таблицы
			Если ЗначениеЗаполнено(КолонкаКодов) Тогда
				ЗаголовокТаблицы = Макет.ПолучитьОбласть("ШапкаТаблицыСКодами");
				ЗаголовокТаблицы.Параметры.ИмяКолонкиКодов = КолонкаКодов;
			Иначе
				ЗаголовокТаблицы = Макет.ПолучитьОбласть("ШапкаТаблицы");
			КонецЕсли;
			ЗаголовокТаблицы.Параметры.Валюта = ДанныеПечати.Валюта;
			ТабличныйДокумент.Вывести(ЗаголовокТаблицы);
			
			// Выводим многострочную часть документа
			Если ЗначениеЗаполнено(КолонкаКодов) Тогда
				ОбластьМакета = Макет.ПолучитьОбласть("СтрокаСКодами");
			Иначе
				ОбластьМакета = Макет.ПолучитьОбласть("Строка");
			КонецЕсли;
				
			НомерСтроки = 0;
			
			СтрокаТовары = ВыборкаПоДокументам.Выбрать();
			Пока СтрокаТовары.Следующий() Цикл
				
				НомерСтроки = НомерСтроки + 1;
				
				ОбластьМакета.Параметры.Заполнить(СтрокаТовары);
				
				Если ЗначениеЗаполнено(КолонкаКодов) Тогда
					ОбластьМакета.Параметры.Артикул = СтрокаТовары[КолонкаКодов];
				КонецЕсли;
				
				ОбластьМакета.Параметры.НомерСтроки = НомерСтроки;
				ОбластьМакета.Параметры.ТоварНаименование = НоменклатураКлиентСервер.ПредставлениеНоменклатурыДляПечати(
					СтрокаТовары.ТоварНаименование,
					СтрокаТовары.Характеристика
					);
				ОбластьМакета.Параметры.Цена = ?(СтрокаТовары.Количество = 0, 0, Окр(СтрокаТовары.Сумма / СтрокаТовары.Количество, 2, 1));
				
				ТабличныйДокумент.Вывести(ОбластьМакета);
				
			КонецЦикла;
			
			ЗаполнитьРеквизитыПодвалаОтчетПоКомиссииОСписании(
				ДанныеПечати,
				ВыборкаПоДокументам,
				Макет,
				ТабличныйДокумент
			);
			
			УправлениеПечатью.ЗадатьОбластьПечатиДокумента(
				ТабличныйДокумент,
				НомерСтрокиНачало,
				ОбъектыПечати,
				ДанныеПечати.Ссылка
			);
			
		КонецЕсли;
	
	КонецЦикла;
	
КонецПроцедуры

///////////////////////////////////////////////////////////////////////////////
// Печать ТОРГ-12

Процедура ЗаполнитьРеквизитыШапкиТОРГ12(ДанныеПечати, Макет, ТабличныйДокумент)
	
	// Выводим общие реквизиты шапки
	СведенияОПоставщике       = ФормированиеПечатныхФорм.СведенияОЮрФизЛице(ДанныеПечати.Организация,      ДанныеПечати.Дата,, ДанныеПечати.БанковскийСчетОрганизации);
	СведенияОПокупателе       = ФормированиеПечатныхФорм.СведенияОЮрФизЛице(ДанныеПечати.Контрагент,       ДанныеПечати.Дата,, ДанныеПечати.БанковскийСчетКонтрагента);
	СведенияОГрузополучателе  = ФормированиеПечатныхФорм.СведенияОЮрФизЛице(ДанныеПечати.Грузополучатель,  ДанныеПечати.Дата,, ДанныеПечати.БанковскийСчетГрузополучателя);
	СведенияОГрузоотправитель = ФормированиеПечатныхФорм.СведенияОЮрФизЛице(ДанныеПечати.Грузоотправитель, ДанныеПечати.Дата,, ДанныеПечати.БанковскийСчетГрузоотправителя);
	
	ОбластьМакета = Макет.ПолучитьОбласть("Шапка");
	ШтрихкодированиеПечатныхФорм.ВывестиШтрихкодВТабличныйДокумент(ТабличныйДокумент, Макет, ОбластьМакета, ДанныеПечати.Ссылка);
	ОбластьМакета.Параметры.Заполнить(ДанныеПечати);
	ОбластьМакета.Параметры.НомерДокумента = ПрефиксацияОбъектовКлиентСервер.ПолучитьНомерНаПечать(ДанныеПечати.Номер, Ложь, Истина);
	ОбластьМакета.Параметры.ДатаДокумента  = ДанныеПечати.Дата;
	
	Если ДанныеПечати.Организация = ДанныеПечати.Грузоотправитель Тогда
		ОбластьМакета.Параметры.ПредставлениеОрганизации = ФормированиеПечатныхФорм.ОписаниеОрганизации(СведенияОПоставщике);
	Иначе
		ОбластьМакета.Параметры.ПредставлениеОрганизации = ФормированиеПечатныхФорм.ОписаниеОрганизации(СведенияОГрузоотправитель, 
			"ПолноеНаименование,ИНН,ФактическийАдрес,Телефоны,НомерСчета,Банк,БИК,КоррСчет");
	КонецЕсли;
	
	ОбластьМакета.Параметры.ПредставлениеПодразделения = ДанныеПечати.Подразделение;
	ОбластьМакета.Параметры.ПредставлениеГрузополучателя = ФормированиеПечатныхФорм.ОписаниеОрганизации(СведенияОГрузополучателе, 
		"ПолноеНаименование,ИНН,ФактическийАдрес,Телефоны,НомерСчета,Банк,БИК,КоррСчет");
	
	ОбластьМакета.Параметры.ПредставлениеПоставщика  = ФормированиеПечатныхФорм.ОписаниеОрганизации(СведенияОПоставщике);
	ОбластьМакета.Параметры.ПредставлениеПлательщика = ФормированиеПечатныхФорм.ОписаниеОрганизации(СведенияОПокупателе);
	
	// Выводим всевозможные коды
	ОбластьМакета.Параметры.ОрганизацияПоОКПО          = СведенияОГрузоотправитель.КодПоОКПО;
	ОбластьМакета.Параметры.ВидДеятельностиПоОКДП      = "";
	ОбластьМакета.Параметры.ГрузополучательПоОКПО      = СведенияОГрузополучателе.КодПоОКПО;
	ОбластьМакета.Параметры.ПоставщикПоОКПО            = СведенияОПоставщике.КодПоОКПО;
	ОбластьМакета.Параметры.ПлательщикПоОКПО           = СведенияОПокупателе.КодПоОКПО;
	ОбластьМакета.Параметры.ОснованиеНомер             = "";
	ОбластьМакета.Параметры.ОснованиеДата              = "";
	ОбластьМакета.Параметры.ТранспортнаяНакладнаяНомер = "";
	ОбластьМакета.Параметры.ТранспортнаяНакладнаяДата  = "";
	
	//ОбластьМакета.Параметры.Основание = НСтр("ru = 'Передача на комиссию'");
	
	ТабличныйДокумент.Вывести(ОбластьМакета);
	
КонецПроцедуры

Процедура ЗаполнитьРеквизитыПодвалаТОРГ12(ДанныеПечати, ИтоговыеСуммы, Макет, ТабличныйДокумент, КоэффициентПересчетаВТонны)
	
	ОбластьМакета = Макет.ПолучитьОбласть("Подвал");
		
	ПолнаяДатаДокумента = Формат(ДанныеПечати.Дата, "ДФ=""дд ММММ гггг """"года""""""");
	ДлинаСтроки = СтрДлина(ПолнаяДатаДокумента);
	ПервыйРазделитель = Найти(ПолнаяДатаДокумента, " ");
	ВторойРазделитель = Найти(Прав(ПолнаяДатаДокумента, ДлинаСтроки - ПервыйРазделитель), " ") + ПервыйРазделитель;
	ОбластьМакета.Параметры.ДатаДокументаДень = """" + Лев(ПолнаяДатаДокумента, ПервыйРазделитель -1 ) + """";
	ОбластьМакета.Параметры.ДатаДокументаМесяц = Сред(ПолнаяДатаДокумента, ПервыйРазделитель + 1, ВторойРазделитель - ПервыйРазделитель - 1);
	ОбластьМакета.Параметры.ДатаДокументаГод = Прав(ПолнаяДатаДокумента, ДлинаСтроки - ВторойРазделитель);
	
	// Главный бухгалтер
	ОбластьМакета.Параметры.ФИОГлавБухгалтера = ДанныеПечати.ГлавныйБухгалтер;
	
	// Отпуск товара разрешил
	ОбластьМакета.Параметры.ФИОРуководителя = ДанныеПечати.Руководитель;
	ОбластьМакета.Параметры.ДолжностьРуководителя = ДанныеПечати.ДолжностьРуководителя;
	
	ОбластьМакета.Параметры.ФИОКладовщика = ФизическиеЛица.ФамилияИнициалыФизЛица(ДанныеПечати.Кладовщик);
	ОбластьМакета.Параметры.ДолжностьКладовщика = ДанныеПечати.ДолжностьКладовщика;
	
	// Доверенность
	ОбластьМакета.Параметры.ДоверенностьНомер     = ДанныеПечати.ДоверенностьНомер;
	ОбластьМакета.Параметры.ДоверенностьДата      = Формат(ДанныеПечати.ДоверенностьДата, "ДФ='дд ММММ гггг'");
	ОбластьМакета.Параметры.ДоверенностьВыдана    = ДанныеПечати.ДоверенностьВыдана;
	ОбластьМакета.Параметры.ДоверенностьЧерезКого = ДанныеПечати.ДоверенностьЛицо;
	
	Если ИтоговыеСуммы.ИтогоКоличествоМест > 0 Тогда
		ОбластьМакета.Параметры.ВсегоМестПрописью = ЧислоПрописью(ИтоговыеСуммы.ИтогоКоличествоМест, ,",,,,,,,,0");
	КонецЕсли;
	
	Если ИтоговыеСуммы.ИтогоМассаНетто > 0 Тогда
		ПараметрыМассыПрописью = ПараметрыМассыПрописью(ИтоговыеСуммы.ИтогоМассаНетто, КоэффициентПересчетаВТонны);
		ОбластьМакета.Параметры.МассаНеттоПрописью = ЧислоПрописью(
			ИтоговыеСуммы.ИтогоМассаНетто * ПараметрыМассыПрописью.Коэффициент,
			"ДП=Истина",
			ПараметрыМассыПрописью.Формат
		);
	КонецЕсли;
	
	Если ИтоговыеСуммы.ИтогоМассаБрутто > 0 Тогда
		ПараметрыМассыПрописью = ПараметрыМассыПрописью(ИтоговыеСуммы.ИтогоМассаБрутто, КоэффициентПересчетаВТонны);
		ОбластьМакета.Параметры.МассаБруттоПрописью = ЧислоПрописью(
			ИтоговыеСуммы.ИтогоМассаБрутто * ПараметрыМассыПрописью.Коэффициент,
			"ДП=Истина",
			ПараметрыМассыПрописью.Формат
		);
	КонецЕсли;
	
	ОбластьМакета.Параметры.КоличествоПорядковыхНомеровЗаписейПрописью = ИтоговыеСуммы.КоличествоПорядковыхНомеровЗаписейПрописью;
	ОбластьМакета.Параметры.СуммаПрописью = ИтоговыеСуммы.СуммаПрописью;
	
	МассивВыводимыхОбластей = Новый Массив;
	МассивВыводимыхОбластей.Добавить(ОбластьМакета);
	Если НЕ ТабличныйДокумент.ПроверитьВывод(МассивВыводимыхОбластей) Тогда
		ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
	КонецЕсли;
	
	ТабличныйДокумент.Вывести(ОбластьМакета);
	
КонецПроцедуры

Процедура ЗаполнитьТабличныйДокументТОРГ12(ТабличныйДокумент, ДанныеДляПечати, ОбъектыПечати, ПараметрыПечати, КомплектыПечати)
	
	ВалютаРегламентированногоУчета = Константы.ВалютаРегламентированногоУчета.Получить();
	КоэффициентПересчетаВТонны     = Константы.КоэффициентПересчетаВТонны.Получить();
	
	ДанныеПечати      	= ДанныеДляПечати.РезультатПоШапке.Выбрать();
	ВыборкаПоДокументам = ДанныеДляПечати.РезультатПоТабличнойЧасти.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	ВыводитьГТД = ?(ПараметрыПечати.Свойство("ВыводитьГТД"), ПараметрыПечати.ВыводитьГТД, Ложь);
	
	Если ВыводитьГТД Тогда
		Макет = УправлениеПечатью.ПолучитьМакет("Обработка.ПечатьОбщихФорм.ПФ_MXL_ТОРГ12_ГТД");
	Иначе
		Макет = УправлениеПечатью.ПолучитьМакет("Обработка.ПечатьОбщихФорм.ПФ_MXL_ТОРГ12");
	КонецЕсли;
	
	ПервыйДокумент = Истина;
	Пока ДанныеПечати.Следующий() Цикл
		
		// Для печати комплектов
		Если КомплектыПечати <> Неопределено И КомплектыПечати.Колонки.Найти("Ссылка") <> Неопределено Тогда
			КомплектПечатиПоСсылке = КомплектыПечати.Найти(ДанныеПечати.Ссылка,"Ссылка");
			Если КомплектПечатиПоСсылке = Неопределено Тогда
				КомплектПечатиПоСсылке = КомплектыПечати[0];
			КонецЕсли;
			Если КомплектПечатиПоСсылке.Экземпляров = 0 Тогда
				Продолжить
			КонецЕсли;
		КонецЕсли;
		
		СтруктураПоиска = Новый Структура("Ссылка", ДанныеПечати.Ссылка);
		ВыборкаПоДокументам.Сбросить();
		Если НЕ ВыборкаПоДокументам.НайтиСледующий(СтруктураПоиска) Тогда
			Если ТипЗнч(ДанныеПечати.Ссылка) = Тип("ДокументСсылка.РеализацияУслугПрочихАктивов") Тогда
				Текст = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
					НСтр("ru = 'Для документа %1 печать ТОРГ-12 не требуется'"),
					ДанныеПечати.Ссылка
				);
			Иначе
				Текст = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
					НСтр("ru = 'В документе %1 отсутствуют товары. Печать товарной накладной без услуг не требуется'"),
					ДанныеПечати.Ссылка
				);
			КонецЕсли;
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
				Текст,
				ДанныеПечати.Ссылка
			);
			Продолжить;
		КонецЕсли;
		
		Если Не ПервыйДокумент Тогда
			ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		
		ПервыйДокумент = Ложь;
		НомерСтрокиНачало = ТабличныйДокумент.ВысотаТаблицы + 1;
		
		ЗаполнитьРеквизитыШапкиТОРГ12(ДанныеПечати, Макет, ТабличныйДокумент);
		
		НомерСтраницы = 1;
		ИтоговыеСуммы = СтруктураИтоговыеСуммы();
		
		// Создаем массив для проверки вывода
		МассивВыводимыхОбластей = Новый Массив;
		
		// Выводим многострочную часть докмента
		ОбластьЗаголовокТаблицы = Макет.ПолучитьОбласть("ЗаголовокТаб");
		ОбластьМакета           = Макет.ПолучитьОбласть("Строка");
		ОбластьИтоговПоСтранице = Макет.ПолучитьОбласть("ИтогоПоСтранице");
		ОбластьВсего            = Макет.ПолучитьОбласть("Всего");
		
		СтрокаТовары = ВыборкаПоДокументам.Выбрать();
		КоличествоСтрок = СтрокаТовары.Количество();
		НомерСтроки = 0;       
		Пока СтрокаТовары.Следующий() Цикл
			
			НомерСтроки = НомерСтроки + 1;
			
			ЗаполнитьРеквизитыСтрокиТовара(СтрокаТовары, ОбластьМакета);
			
			Если НомерСтроки = 1 Тогда
				ОбластьЗаголовокТаблицы.Параметры.НомерСтраницы = "Страница " + НомерСтраницы;
				ТабличныйДокумент.Вывести(ОбластьЗаголовокТаблицы);
			КонецЕсли;
			
			МассивВыводимыхОбластей.Очистить();
			МассивВыводимыхОбластей.Добавить(ОбластьМакета);
			МассивВыводимыхОбластей.Добавить(ОбластьИтоговПоСтранице);
			Если НомерСтроки = КоличествоСтрок Тогда
				//Чечин
				Область2 = Макет.ПолучитьОбласть("Всего");
				Область3 = Макет.ПолучитьОбласть("Подвал");

				МассивВыводимыхОбластей.Добавить(ОбластьВсего);
				МассивВыводимыхОбластей.Добавить(Область2);
				МассивВыводимыхОбластей.Добавить(Область3);
			КонецЕсли;
			
			Если НЕ ТабличныйДокумент.ПроверитьВывод(МассивВыводимыхОбластей) Тогда
				
				ОбластьИтоговПоСтранице.Параметры.Заполнить(ИтоговыеСуммы);
				ТабличныйДокумент.Вывести(ОбластьИтоговПоСтранице);
				
				ОбнулитьИтогиПоСтранице(ИтоговыеСуммы);
				
				НомерСтраницы = НомерСтраницы + 1;
				ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
				
				ОбластьЗаголовокТаблицы.Параметры.НомерСтраницы = "Страница " + НомерСтраницы;
				ТабличныйДокумент.Вывести(ОбластьЗаголовокТаблицы);
				
			КонецЕсли;
			
			ТабличныйДокумент.Вывести(ОбластьМакета);
			
			РассчитатьИтоговыеСуммы(ИтоговыеСуммы, СтрокаТовары);
			
		КонецЦикла;
		
		// Выводим итоги по последней странице
		ОбластьИтоговПоСтранице = Макет.ПолучитьОбласть("ИтогоПоСтранице");
		ОбластьИтоговПоСтранице.Параметры.Заполнить(ИтоговыеСуммы);
		
		ТабличныйДокумент.Вывести(ОбластьИтоговПоСтранице);
		
		// Выводим итоги по документу в целом
		ОбластьМакета = Макет.ПолучитьОбласть("Всего");
		ОбластьМакета.Параметры.Заполнить(ИтоговыеСуммы);
		
		ТабличныйДокумент.Вывести(ОбластьМакета);
		
		// Выводим подвал документа
		ДобавитьИтоговыеДанныеПодвала(ИтоговыеСуммы, НомерСтроки, ВалютаРегламентированногоУчета);
		ЗаполнитьРеквизитыПодвалаТОРГ12(ДанныеПечати, ИтоговыеСуммы, Макет, ТабличныйДокумент, КоэффициентПересчетаВТонны);
		
		// Выведем нужное количество экземпляров (при печати комплектов)
		Если КомплектыПечати <> Неопределено И КомплектыПечати.Колонки.Найти("Ссылка") <> Неопределено И КомплектПечатиПоСсылке.Экземпляров > 1 Тогда
			ОбластьКопирования = ТабличныйДокумент.ПолучитьОбласть(НомерСтрокиНачало,,ТабличныйДокумент.ВысотаТаблицы);
			Для Итератор = 2 По КомплектПечатиПоСсылке.Экземпляров Цикл
				ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
				ТабличныйДокумент.Вывести(ОбластьКопирования);
			КонецЦикла;
		КонецЕсли;
		
		УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабличныйДокумент, НомерСтрокиНачало, ОбъектыПечати, ДанныеПечати.Ссылка);
		
	КонецЦикла;
	
КонецПроцедуры

///////////////////////////////////////////////////////////////////////////////
// Печать ТОРГ-4

Процедура ЗаполнитьРеквизитыШапкиТОРГ4(ДанныеПечати, ДанныеПоСкладу, Макет, ТабличныйДокумент)
	
	// Выводим общие реквизиты шапки
	ОбластьМакета = Макет.ПолучитьОбласть("Шапка");
	ШтрихкодированиеПечатныхФорм.ВывестиШтрихкодВТабличныйДокумент(ТабличныйДокумент, Макет, ОбластьМакета, ДанныеПечати.Ссылка);
	
	СведенияОПокупателе       = ФормированиеПечатныхФорм.СведенияОЮрФизЛице(ДанныеПечати.Организация,      ДанныеПечати.ДатаДокумента, ,ДанныеПечати.БанковскийСчетОрганизации);
	СведенияОПоставщике       = ФормированиеПечатныхФорм.СведенияОЮрФизЛице(ДанныеПечати.Поставщик ,       ДанныеПечати.ДатаДокумента, ,ДанныеПечати.БанковскийСчетКонтрагента);
	СведенияОГрузоотправителе = ФормированиеПечатныхФорм.СведенияОЮрФизЛице(ДанныеПечати.Грузоотправитель, ДанныеПечати.ДатаДокумента, ,ДанныеПечати.БанковскийСчетГрузоотправителя);
	
	ОбластьМакета.Параметры.ПредставлениеПоставщика       = ФормированиеПечатныхФорм.ОписаниеОрганизации(СведенияОПоставщике);
	ОбластьМакета.Параметры.ОписаниеПоставщика            = ФормированиеПечатныхФорм.ОписаниеОрганизации(СведенияОПоставщике, "ПолноеНаименование,ЮридическийАдрес,Телефоны");
	ОбластьМакета.Параметры.ПредставлениеГрузоотправителя = ФормированиеПечатныхФорм.ОписаниеОрганизации(СведенияОГрузоотправителе, "ПолноеНаименование,ИНН,ФактическийАдрес,Телефоны,НомерСчета,Банк,БИК,КоррСчет");
	ОбластьМакета.Параметры.ПоставщикПоОКПО               = СведенияОПоставщике.КодПоОКПО;
	
	ОбластьМакета.Параметры.Заполнить(ДанныеПечати);
	ОбластьМакета.Параметры.Заполнить(ДанныеПоСкладу);
	ОбластьМакета.Параметры.ДатаДокумента            = ДанныеПечати.ДатаДокумента;
	ОбластьМакета.Параметры.НомерДокумента           = ПрефиксацияОбъектовКлиентСервер.ПолучитьНомерНаПечать(ДанныеПечати.Номер, Ложь, Истина);
	ОбластьМакета.Параметры.ПредставлениеОрганизации = ФормированиеПечатныхФорм.ОписаниеОрганизации(СведенияОПокупателе);
	ОбластьМакета.Параметры.ОрганизацияПоОКПО        = СведенияОПокупателе.КодПоОКПО;
	ОбластьМакета.Параметры.ГрузополучательПоОКПО    = СведенияОПокупателе.КодПоОКПО;
	
	ОбластьМакета.Параметры.ФИОРуководителя          = ДанныеПечати.Руководитель;
	ОбластьМакета.Параметры.ДолжностьРуководителя    = ДанныеПечати.ДолжностьРуководителя;
	
	РеквизитыСопроводительногоДокумента = НСтр("ru='сопроводительный документ № %НомерДокументаСопровождения% от %ДатаДокументаСопровождения%'");
	РеквизитыСопроводительногоДокумента = СтрЗаменить(РеквизитыСопроводительногоДокумента, "%НомерДокументаСопровождения%", ДанныеПечати.НомерДокументаСопровождения);
	РеквизитыСопроводительногоДокумента = СтрЗаменить(РеквизитыСопроводительногоДокумента, "%ДатаДокументаСопровождения%",  Формат(ДанныеПечати.ДатаДокументаСопровождения, "ДФ='дд ММММ гггг'"));
	
	ОбластьМакета.Параметры.РеквизитыСопроводительногоДокумента = РеквизитыСопроводительногоДокумента;
	
	ТабличныйДокумент.Вывести(ОбластьМакета);
	
КонецПроцедуры

Процедура ЗаполнитьРеквизитыПодвалаТОРГ4(ОбластьПодвала, ДанныеПечати)
	
	ОбластьПодвала.Параметры.Заполнить(ДанныеПечати);
	ОбластьПодвала.Параметры.МОЛ = ФизическиеЛица.ФамилияИнициалыФизЛица(ДанныеПечати.МОЛ);
	
КонецПроцедуры

Процедура ЗаполнитьТабличныйДокументТОРГ4(ТабличныйДокумент, ДанныеДляПечати, ОбъектыПечати)
	
	ВалютаРегламентированногоУчета = Константы.ВалютаРегламентированногоУчета.Получить();
	
	ДанныеПечати      	= ДанныеДляПечати.РезультатПоШапке.Выбрать();
	ВыборкаПоДокументам = ДанныеДляПечати.РезультатПоТабличнойЧасти.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	Макет = УправлениеПечатью.ПолучитьМакет("Обработка.ПечатьОбщихФорм.ПФ_MXL_ТОРГ4");
	
	ПервыйДокумент = Истина;
	
	Пока ДанныеПечати.Следующий() Цикл
		
		СтруктураПоиска = Новый Структура("Ссылка", ДанныеПечати.Ссылка);
		Если НЕ ВыборкаПоДокументам.НайтиСледующий(СтруктураПоиска) Тогда
			Текст = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				НСтр("ru = 'В документе %1 отсутствуют товары. Печать акта о приемке товара не требуется'"),
				ДанныеПечати.Ссылка
				);
				
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
				Текст,
				ДанныеПечати.Ссылка
			);
			Продолжить;
		КонецЕсли;
		
		НомерСтрокиНачало = ТабличныйДокумент.ВысотаТаблицы + 1;
		
		ВыборкаПоСкладам = ВыборкаПоДокументам.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		
		Пока ВыборкаПоСкладам.Следующий() Цикл
			
			Если Не ПервыйДокумент Тогда
				ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
			КонецЕсли;
			
			ПервыйДокумент = Ложь;
			
			ЗаполнитьРеквизитыШапкиТОРГ4(ДанныеПечати, ВыборкаПоСкладам, Макет, ТабличныйДокумент);
			
			НомерСтраницы = 1;
			ИтоговыеСуммы = СтруктураИтоговыеСуммы();
			
			// Создаем массив для проверки вывода
			МассивВыводимыхОбластей = Новый Массив;
			
			// Выводим многострочную часть докмента
			ОбластьЗаголовокТаблицы = Макет.ПолучитьОбласть("ЗаголовокТаблицы");
			ОбластьМакета           = Макет.ПолучитьОбласть("Строка");
			ОбластьИтоговПоСтранице = Макет.ПолучитьОбласть("ИтогиПоСтранице");
			ОбластьВсего            = Макет.ПолучитьОбласть("Всего");
			ОбластьПодвала          = Макет.ПолучитьОбласть("Подвал");
			
			ЗаполнитьРеквизитыПодвалаТОРГ4(ОбластьПодвала, ДанныеПечати);
			
			СтрокаТовары = ВыборкаПоСкладам.Выбрать();
			КоличествоСтрок = СтрокаТовары.Количество();
			НомерСтроки = 0;
			Пока СтрокаТовары.Следующий() Цикл
				
				НомерСтроки = НомерСтроки + 1;
				
				ОбластьМакета.Параметры.Заполнить(СтрокаТовары);
				
				ОбластьМакета.Параметры.ТоварНаименование = НоменклатураКлиентСервер.ПредставлениеНоменклатурыДляПечати(
					СтрокаТовары.ТоварНаименование,
					СтрокаТовары.Характеристика,
					,
					,
					,
					СтрокаТовары.ЭтоВозвратнаяТара);
				
				Если НомерСтроки = 1 Тогда // первая строка
					
					ОбластьЗаголовокТаблицы.Параметры.НомерСтраницы = "Страница " + НомерСтраницы; 
					ТабличныйДокумент.Вывести(ОбластьЗаголовокТаблицы);
					
				Иначе
					
					МассивВыводимыхОбластей.Очистить();
					МассивВыводимыхОбластей.Добавить(ОбластьМакета);
					МассивВыводимыхОбластей.Добавить(ОбластьИтоговПоСтранице);
					
					Если НомерСтроки = КоличествоСтрок Тогда
						
						МассивВыводимыхОбластей.Добавить(ОбластьВсего);
						МассивВыводимыхОбластей.Добавить(ОбластьПодвала);
						
					КонецЕсли;
					
					Если НомерСтроки <> 1 И Не ТабличныйДокумент.ПроверитьВывод(МассивВыводимыхОбластей) Тогда
						
						ОбластьИтоговПоСтранице.Параметры.Заполнить(ИтоговыеСуммы);
						ТабличныйДокумент.Вывести(ОбластьИтоговПоСтранице);
						
						// Очистим итоги по странице.
						ОбнулитьИтогиПоСтранице(ИтоговыеСуммы);
						
						НомерСтраницы = НомерСтраницы + 1;
						ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
						ОбластьЗаголовокТаблицы.Параметры.НомерСтраницы = "Страница " + НомерСтраницы;
						ТабличныйДокумент.Вывести(ОбластьЗаголовокТаблицы);
						
					КонецЕсли;
					
				КонецЕсли;
				
				ТабличныйДокумент.Вывести(ОбластьМакета);
				РассчитатьИтоговыеСуммы(ИтоговыеСуммы, СтрокаТовары);
				
			КонецЦикла;
			
			// Выводим итоги по последней странице
			ОбластьИтоговПоСтранице = Макет.ПолучитьОбласть("ИтогиПоСтранице");
			ОбластьИтоговПоСтранице.Параметры.Заполнить(ИтоговыеСуммы);
			
			ТабличныйДокумент.Вывести(ОбластьИтоговПоСтранице);
			
			// Выводим итоги по документу в целом
			ОбластьМакета = Макет.ПолучитьОбласть("Всего");
			ОбластьМакета.Параметры.Заполнить(ИтоговыеСуммы);
			
			ТабличныйДокумент.Вывести(ОбластьМакета);
			
			// Выводим подвал документа
			ТабличныйДокумент.Вывести(ОбластьПодвала);
			
		КонецЦикла; // Конец цикла обхода выборки "ВыборкаПоСкладам"
		
		УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабличныйДокумент, НомерСтрокиНачало, ОбъектыПечати, ДанныеПечати.Ссылка);
		
	КонецЦикла; // Конец цикла обхода выборки "ДанныеПечати"
	
КонецПроцедуры

///////////////////////////////////////////////////////////////////////////////
// Печать М-15

Процедура ЗаполнитьРеквизитыШапкиМ15(ДанныеПечати, Макет, ТабличныйДокумент)
	
	// Выводим общие реквизиты шапки
	СведенияОбОрганизации = ФормированиеПечатныхФорм.СведенияОЮрФизЛице(ДанныеПечати.Организация, ДанныеПечати.Дата, ,ДанныеПечати.БанковскийСчетОрганизации);
	
	ОбластьМакета = Макет.ПолучитьОбласть("Шапка");
	ШтрихкодированиеПечатныхФорм.ВывестиШтрихкодВТабличныйДокумент(ТабличныйДокумент, Макет, ОбластьМакета, ДанныеПечати.Ссылка);
	ОбластьМакета.Параметры.Заполнить(ДанныеПечати);
	ОбластьМакета.Параметры.ПредставлениеОрганизации = ФормированиеПечатныхФорм.ОписаниеОрганизации(СведенияОбОрганизации);
	ОбластьМакета.Параметры.ОрганизацияПоОКПО        = СведенияОбОрганизации.КодПоОКПО;
	ОбластьМакета.Параметры.НомерДокумента           = ПрефиксацияОбъектовКлиентСервер.ПолучитьНомерНаПечать(ДанныеПечати.Номер, Ложь, Истина);
	
	ПредставлениеКонтрагента = ФормированиеПечатныхФорм.ОписаниеОрганизации(ФормированиеПечатныхФорм.СведенияОЮрФизЛице(ДанныеПечати.Контрагент, ДанныеПечати.Дата), "ПолноеНаименование,");
	ОбластьМакета.Параметры.КонтрагентНаименование = ПредставлениеКонтрагента;
	
	ТабличныйДокумент.Вывести(ОбластьМакета);
	
КонецПроцедуры

Процедура ЗаполнитьРеквизитыПодвалаМ15(ОбластьПодвала, ДанныеПечати, ИтоговыеСуммы)
	
	ОбластьПодвала.Параметры.Заполнить(ДанныеПечати);
	
	// Главный бухгалтер
	ОбластьПодвала.Параметры.ФИОГлавБухгалтера       = ДанныеПечати.ГлавныйБухгалтер;
	
	ОбластьПодвала.Параметры.ФИОРуководителя         = ДанныеПечати.Руководитель;
	ОбластьПодвала.Параметры.ДолжностьРуководителя   = ДанныеПечати.ДолжностьРуководителя;
	
	ОбластьПодвала.Параметры.ФИОКладовщика           = ФизическиеЛица.ФамилияИнициалыФизЛица(ДанныеПечати.Кладовщик);
	ОбластьПодвала.Параметры.ДолжностьКладовщика     = ДанныеПечати.ДолжностьКладовщика;
	
	ОбластьПодвала.Параметры.КоличествоПорядковыхНомеровЗаписейПрописью = ИтоговыеСуммы.КоличествоПорядковыхНомеровЗаписейПрописью;
	ОбластьПодвала.Параметры.СуммаПрописью = ИтоговыеСуммы.СуммаПрописью;
	Если ЗначениеЗаполнено(ИтоговыеСуммы.ИтогоСуммаНДС) Тогда
		ОбластьПодвала.Параметры.ИтогНДС = ФормированиеПечатныхФорм.СуммаРубКоп(ИтоговыеСуммы.ИтогоСуммаНДС, Неопределено, Неопределено);
	Иначе
		ОбластьПодвала.Параметры.ИтогНДС = "______ руб. ______ коп.";
	КонецЕсли;
	
КонецПроцедуры

Процедура ЗаполнитьТабличныйДокументМ15(ТабличныйДокумент, ДанныеДляПечати, ОбъектыПечати, КомплектыПечати)
	
	ВалютаРегламентированногоУчета = Константы.ВалютаРегламентированногоУчета.Получить();
	
	Макет = УправлениеПечатью.ПолучитьМакет("Обработка.ПечатьОбщихФорм.ПФ_MXL_М15");
	
	ДанныеПечати        = ДанныеДляПечати.РезультатПоШапке.Выбрать();
	ВыборкаПоДокументам = ДанныеДляПечати.РезультатПоТабличнойЧасти.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	ПервыйДокумент = Истина;
	Пока ДанныеПечати.Следующий() Цикл
		
		// Для печати комплектов
		Если КомплектыПечати <> Неопределено И КомплектыПечати.Колонки.Найти("Ссылка") <> Неопределено Тогда
			КомплектПечатиПоСсылке = КомплектыПечати.Найти(ДанныеПечати.Ссылка,"Ссылка");
			Если КомплектПечатиПоСсылке = Неопределено Тогда
				КомплектПечатиПоСсылке = КомплектыПечати[0];
			КонецЕсли;
			Если КомплектПечатиПоСсылке.Экземпляров = 0 Тогда
				Продолжить
			КонецЕсли;
		КонецЕсли;
		
		СтруктураПоиска = Новый Структура("Ссылка", ДанныеПечати.Ссылка);
		ВыборкаПоДокументам.Сбросить();
		Если НЕ ВыборкаПоДокументам.НайтиСледующий(СтруктураПоиска) Тогда
			Если ТипЗнч(ДанныеПечати.Ссылка) = Тип("ДокументСсылка.РеализацияУслугПрочихАктивов") Тогда
				Текст = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
					НСтр("ru = 'Для документа %1 печать М-15 не требуется'"),
					ДанныеПечати.Ссылка
				);
			Иначе
				Текст = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
					НСтр("ru = 'В документе %1 отсутствуют товары. Печать накладной не требуется'"),
					ДанныеПечати.Ссылка
				);
			КонецЕсли;
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
				Текст,
				ДанныеПечати.Ссылка
			);
			Продолжить;
		КонецЕсли;
		
		Если Не ПервыйДокумент Тогда
			ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		
		ПервыйДокумент = Ложь;
		НомерСтрокиНачало = ТабличныйДокумент.ВысотаТаблицы + 1;
		
		// Выводим общие реквизиты шапки
		ЗаполнитьРеквизитыШапкиМ15(ДанныеПечати, Макет, ТабличныйДокумент);
		
		// Выводим заголовок таблицы
		ЗаголовокТаблицы = Макет.ПолучитьОбласть("ЗаголовокТаблицы");
		ТабличныйДокумент.Вывести(ЗаголовокТаблицы);
		
		НомерСтраницы   = 1;
		
		// Инициализация итогов в документе
		ИтоговыеСуммы = СтруктураИтоговыеСуммы();
		
		// Создаем массив для проверки вывода
		МассивВыводимыхОбластей = Новый Массив;
		
		// Выводим многострочную часть документа
		ОбластьМакета  = Макет.ПолучитьОбласть("Строка");
		ОбластьПодвала = Макет.ПолучитьОбласть("Подвал");
		
		НомерСтроки = 0;
		ДобавитьИтоговыеДанныеПодвала(ИтоговыеСуммы, НомерСтроки, ВалютаРегламентированногоУчета);
		ЗаполнитьРеквизитыПодвалаМ15(ОбластьПодвала, ДанныеПечати, ИтоговыеСуммы);
		
		СтрокаТовары = ВыборкаПоДокументам.Выбрать();
		КоличествоСтрок = СтрокаТовары.Количество();
		Пока СтрокаТовары.Следующий() Цикл
			
			НомерСтроки = НомерСтроки + 1;
			ЗаполнитьРеквизитыСтрокиТовара(СтрокаТовары, ОбластьМакета);
			
			МассивВыводимыхОбластей.Очистить();
			МассивВыводимыхОбластей.Добавить(ОбластьМакета);
			
			Если НомерСтроки = КоличествоСтрок Тогда
				МассивВыводимыхОбластей.Добавить(ОбластьПодвала);
			КонецЕсли;
			
			Если НЕ ТабличныйДокумент.ПроверитьВывод(МассивВыводимыхОбластей) Тогда
				НомерСтраницы = НомерСтраницы + 1;
				ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
				ЗаголовокТаблицы.Параметры.НомерСтраницы = "Страница " + НомерСтраницы;
				ТабличныйДокумент.Вывести(ЗаголовокТаблицы);
			КонецЕсли;
			
			ТабличныйДокумент.Вывести(ОбластьМакета);
			РассчитатьИтоговыеСуммы(ИтоговыеСуммы, СтрокаТовары);
			
		КонецЦикла;
		
		// Выводим итоги по документу
		ДобавитьИтоговыеДанныеПодвала(ИтоговыеСуммы, НомерСтроки, ВалютаРегламентированногоУчета);
		ЗаполнитьРеквизитыПодвалаМ15(ОбластьПодвала, ДанныеПечати, ИтоговыеСуммы);
		ТабличныйДокумент.Вывести(ОбластьПодвала);
		
		// Выведем нужное количество экземпляров (при печати комплектов)
		Если КомплектыПечати <> Неопределено И КомплектыПечати.Колонки.Найти("Ссылка") <> Неопределено И КомплектПечатиПоСсылке.Экземпляров > 1 Тогда
			ОбластьКопирования = ТабличныйДокумент.ПолучитьОбласть(НомерСтрокиНачало,,ТабличныйДокумент.ВысотаТаблицы);
			Для Итератор = 2 По КомплектПечатиПоСсылке.Экземпляров Цикл
				ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
				ТабличныйДокумент.Вывести(ОбластьКопирования);
			КонецЦикла;
		КонецЕсли;
		
		УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабличныйДокумент, НомерСтрокиНачало, ОбъектыПечати, ДанныеПечати.Ссылка);
		
	КонецЦикла;
	
КонецПроцедуры

///////////////////////////////////////////////////////////////////////////////
// Печать М-4

Процедура ЗаполнитьРеквизитыШапкиМ4(ДанныеПечати, ДанныеПоСкладу, Макет, ТабличныйДокумент)
	
	// Выводим общие реквизиты шапки
	СведенияОПокупателе = ФормированиеПечатныхФорм.СведенияОЮрФизЛице(ДанныеПечати.Организация, ДанныеПечати.ДатаСоставления, ,ДанныеПечати.БанковскийСчетОрганизации);

	ОбластьМакета = Макет.ПолучитьОбласть("Шапка");
	ШтрихкодированиеПечатныхФорм.ВывестиШтрихкодВТабличныйДокумент(ТабличныйДокумент, Макет, ОбластьМакета, ДанныеПечати.Ссылка);
	ОбластьМакета.Параметры.Заполнить(ДанныеПечати);
	ОбластьМакета.Параметры.ПредставлениеОрганизации = ФормированиеПечатныхФорм.ОписаниеОрганизации(СведенияОПокупателе);
	ОбластьМакета.Параметры.ОрганизацияПоОКПО        = СведенияОПокупателе.КодПоОКПО;
	ОбластьМакета.Параметры.НомерДокумента           = ПрефиксацияОбъектовКлиентСервер.ПолучитьНомерНаПечать(ДанныеПечати.Номер, Ложь, Истина);
	ТабличныйДокумент.Вывести(ОбластьМакета);

	// Выводим заголовок докмента
	ОбластьМакета = Макет.ПолучитьОбласть("ЗаголовокДокумента");
	ОбластьМакета.Параметры.Заполнить(ДанныеПечати);
	ОбластьМакета.Параметры.Заполнить(ДанныеПоСкладу);
	ОбластьМакета.Параметры.ДатаСоставления = ДанныеПечати.ДатаСоставления;
	
	СведенияОПоставщике     = ФормированиеПечатныхФорм.СведенияОЮрФизЛице(ДанныеПечати.Поставщик, ДанныеПечати.ДатаСоставления);
	ПредставлениеПоставщика = ФормированиеПечатныхФорм.ОписаниеОрганизации(СведенияОПоставщике, "ПолноеНаименование");
	ОбластьМакета.Параметры.ПоставщикНаименование = ПредставлениеПоставщика;

	ТабличныйДокумент.Вывести(ОбластьМакета);
	
КонецПроцедуры

Процедура ЗаполнитьРеквизитыПодвалаМ4(ОбластьПодвала, ДанныеПечати)
	
	ОбластьПодвала.Параметры.Заполнить(ДанныеПечати);
	ОбластьПодвала.Параметры.МОЛ = ФизическиеЛица.ФамилияИнициалыФизЛица(ДанныеПечати.МОЛ);
	
КонецПроцедуры

Процедура ЗаполнитьТабличныйДокументМ4(ТабличныйДокумент, ДанныеДляПечати, ОбъектыПечати)
	
	ВалютаРегламентированногоУчета = Константы.ВалютаРегламентированногоУчета.Получить();
	
	ДанныеПечати      	= ДанныеДляПечати.РезультатПоШапке.Выбрать();
	ВыборкаПоДокументам = ДанныеДляПечати.РезультатПоТабличнойЧасти.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	Макет = УправлениеПечатью.ПолучитьМакет("Обработка.ПечатьОбщихФорм.ПФ_MXL_М4");
	
	ПервыйДокумент = Истина;
	
	Пока ДанныеПечати.Следующий() Цикл
		
		СтруктураПоиска = Новый Структура("Ссылка", ДанныеПечати.Ссылка);
		Если НЕ ВыборкаПоДокументам.НайтиСледующий(СтруктураПоиска) Тогда
			Текст = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				НСтр("ru = 'В документе %1 отсутствуют товары. Печать приходного ордера не требуется'"),
				ДанныеПечати.Ссылка
				);
				
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
				Текст,
				ДанныеПечати.Ссылка
			);
			Продолжить;
		КонецЕсли;
		
		НомерСтрокиНачало = ТабличныйДокумент.ВысотаТаблицы + 1;
		
		ВыборкаПоСкладам = ВыборкаПоДокументам.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		
		Пока ВыборкаПоСкладам.Следующий() Цикл
			
			Если Не ПервыйДокумент Тогда
				ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
			КонецЕсли;
			
			ПервыйДокумент = Ложь;
			
			ЗаполнитьРеквизитыШапкиМ4(ДанныеПечати, ВыборкаПоСкладам, Макет, ТабличныйДокумент);
			
			// Выводим заголовок таблицы
			ОбластьЗаголовокТаблицы = Макет.ПолучитьОбласть("ЗаголовокТаблицы");
			ТабличныйДокумент.Вывести(ОбластьЗаголовокТаблицы);
			
			НомерСтраницы = 1;
			ИтоговыеСуммы = СтруктураИтоговыеСуммы();
			
			// Создаем массив для проверки вывода
			МассивВыводимыхОбластей = Новый Массив;
			
			// Выводим многострочную часть докмента
			ОбластьМакета           = Макет.ПолучитьОбласть("Строка");
			ОбластьПодвалСтрок      = Макет.ПолучитьОбласть("ПодвалСтрок");
			ОбластьИтоговПоСтранице = Макет.ПолучитьОбласть("Итого");
			ОбластьПодвала          = Макет.ПолучитьОбласть("Подвал");
			
			ЗаполнитьРеквизитыПодвалаМ4(ОбластьПодвала, ДанныеПечати);
			
			СтрокаТовары = ВыборкаПоСкладам.Выбрать();
			КоличествоСтрок = СтрокаТовары.Количество();
			НомерСтроки = 0;
			Пока СтрокаТовары.Следующий() Цикл
				
				ОбластьМакета.Параметры.Заполнить(СтрокаТовары);
				
				НомерСтроки = НомерСтроки + 1;
				
				ОбластьМакета.Параметры.ТоварНаименование = НоменклатураКлиентСервер.ПредставлениеНоменклатурыДляПечати(
					СтрокаТовары.ТоварНаименование,
					СтрокаТовары.Характеристика,
					,
					,
					,
					СтрокаТовары.ЭтоВозвратнаяТара);
				
				МассивВыводимыхОбластей.Очистить();
				МассивВыводимыхОбластей.Добавить(ОбластьМакета);
				МассивВыводимыхОбластей.Добавить(ОбластьИтоговПоСтранице);
				
				Если НомерСтроки = КоличествоСтрок Тогда
					МассивВыводимыхОбластей.Добавить(ОбластьПодвала);
				КонецЕсли;
				
				Если Не ТабличныйДокумент.ПроверитьВывод(МассивВыводимыхОбластей) Тогда
					НомерСтраницы = НомерСтраницы + 1;
					ПодвалСтрок   = Макет.ПолучитьОбласть("ПодвалСтрок");
					ТабличныйДокумент.Вывести(ПодвалСтрок);
					ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
					ОбластьЗаголовокТаблицы.Параметры.НомерСтраницы = "Страница " + НомерСтраницы;
					ТабличныйДокумент.Вывести(ОбластьЗаголовокТаблицы);
				КонецЕсли;
				
				ТабличныйДокумент.Вывести(ОбластьМакета);
				
				РассчитатьИтоговыеСуммы(ИтоговыеСуммы, СтрокаТовары);
				
			КонецЦикла;
			
			// Выводим итоги по документу
			ОбластьМакета = Макет.ПолучитьОбласть("Итого");
			
			ОбластьМакета.Параметры.ИтогоКоличествоПринято = ИтоговыеСуммы.ИтогоКоличество;
			ОбластьМакета.Параметры.ИтогоСуммаБезНДС = ИтоговыеСуммы.ИтогоСуммаБезНДС;
			ОбластьМакета.Параметры.ИтогоСуммаНДС    = ИтоговыеСуммы.ИтогоСуммаНДС;
			ОбластьМакета.Параметры.ИтогоСуммаСНДС   = ИтоговыеСуммы.ИтогоСуммаСНДС;
			ТабличныйДокумент.Вывести(ОбластьМакета);
			
			// Выводим подвал документа
			ТабличныйДокумент.Вывести(ОбластьПодвала);
			
		КонецЦикла; // Конец цикла обхода выборки "ВыборкаПоСкладам"
		
		УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабличныйДокумент, НомерСтрокиНачало, ОбъектыПечати, ДанныеПечати.Ссылка);
		
	КонецЦикла; // Конец цикла обхода выборки "ДанныеПечати"
	
КонецПроцедуры

///////////////////////////////////////////////////////////////////////////////
// Печать счет-фактуры

Процедура ЗаполнитьРеквизитыШапкиСчетФактура(ДанныеПечати, СведенияОПоставщике, Макет, ТабличныйДокумент, ЭтоСчетФактураНаАванс, ПечатьВВалюте, ДействующиеПостановления)
	
	СведенияОПоставщике = ФормированиеПечатныхФорм.СведенияОЮрФизЛице(ДанныеПечати.Организация, ДанныеПечати.Дата);
	СведенияОПокупателе = ФормированиеПечатныхФорм.СведенияОЮрФизЛице(ДанныеПечати.Контрагент, ДанныеПечати.Дата);
	СведенияОГрузоотправителе = СведенияОГрузоотправителе(ДанныеПечати);
	СведенияОГрузополучателе = ФормированиеПечатныхФорм.СведенияОЮрФизЛице(ДанныеПечати.Грузополучатель,  ДанныеПечати.Дата);
	
	ОбластьМакета = Макет.ПолучитьОбласть("Шапка");
	ШтрихкодированиеПечатныхФорм.ВывестиШтрихкодВТабличныйДокумент(ТабличныйДокумент, Макет, ОбластьМакета, ДанныеПечати.Ссылка);
	ОбластьМакета.Параметры.Заполнить(ДанныеПечати);
	
	НомераДаты = Новый Структура;
	НомераДаты.Вставить("Номер", 						ПрефиксацияОбъектовКлиентСервер.ПолучитьНомерНаПечать(ДанныеПечати.Номер, Ложь, Ложь)
		+ ?(ЗначениеЗаполнено(ДанныеПечати.ИндексПодразделения), "/"+ДанныеПечати.ИндексПодразделения, ""));
	НомераДаты.Вставить("Дата", 						Формат(ДанныеПечати.Дата, "ДФ='дд ММММ гггг'")+ " г.");
	НомераДаты.Вставить("НомерИсправления", 			?(ДанныеПечати.Исправление,
		ДанныеПечати.НомерИсправления,
		"--"
	));
	НомераДаты.Вставить("ДатаИсправления", 				?(ДанныеПечати.Исправление,
		Формат(ДанныеПечати.ДатаИсправления, "ДФ='дд ММММ гггг'")+ " г.",
		"--"
	));
	
	НомерСчетаФактуры = ПрефиксацияОбъектовКлиентСервер.ПолучитьНомерНаПечать(ДанныеПечати.НомерСчетаФактуры, Ложь, Ложь);
	Если ЗначениеЗаполнено(НомерСчетаФактуры) И ЗначениеЗаполнено(ДанныеПечати.ИндексПодразделения) Тогда
		НомерСчетаФактуры = НомерСчетаФактуры + "/"+ДанныеПечати.ИндексПодразделения;
	КонецЕсли;
	НомераДаты.Вставить("НомерСчетаФактуры", 			НомерСчетаФактуры);
	НомераДаты.Вставить("ДатаСчетаФактуры", 			Формат(ДанныеПечати.ДатаСчетаФактуры, "ДФ='дд ММММ гггг'")+ " г.");
	НомераДаты.Вставить("НомерИсправленияСчетаФактуры", ДанныеПечати.НомерИсправленияСчетаФактуры);
	НомераДаты.Вставить("ДатаИсправленияСчетаФактуры", 	Формат(ДанныеПечати.ДатаИсправленияСчетаФактуры, "ДФ='дд ММММ гггг'")+ " г.");
	ОбластьМакета.Параметры.Заполнить(НомераДаты);
	
	// Выводим данные о поставщике.
	ПредставлениеПоставщика = "Продавец: " + СведенияОПоставщике.ОфициальноеНаименование;
	Если ДействующиеПостановления.Постановление914 И СведенияОПоставщике.ОфициальноеНаименование <> СведенияОПоставщике.ПолноеНаименование Тогда
		ПредставлениеПоставщика = ПредставлениеПоставщика
			+ " ("
			+ ФормированиеПечатныхФорм.ОписаниеОрганизации(СведенияОПоставщике, "ПолноеНаименование")
			+ ")";
	КонецЕсли;
	ОбластьМакета.Параметры.ПредставлениеПоставщика = ПредставлениеПоставщика;
	
	ОбластьМакета.Параметры.АдресПоставщика = "Адрес: " + ФормированиеПечатныхФорм.ОписаниеОрганизации(СведенияОПоставщике, "ЮридическийАдрес");
	
	Если ДанныеПечати.ВыводитьКППГрузоотправителя Тогда
		КПП = СведенияОГрузоотправителе.КПП;
	Иначе
		КПП = ФормированиеПечатныхФорм.ОписаниеОрганизации(СведенияОПоставщике, "КПП,", Ложь);
	КонецЕсли;
	
	ОбластьМакета.Параметры.ИННПоставщика = "ИНН/КПП продавца: " 
		+ ФормированиеПечатныхФорм.ОписаниеОрганизации(СведенияОПоставщике, "ИНН", Ложь)
		+ ?(Не ПустаяСтрока(КПП), "/" + КПП, "");
		
	Если НЕ ДанныеПечати.КорректировочныйСчетФактура Тогда
		
		// Выводим данные грузоотправителя.	
		ПредставлениеГрузоотправителя = "Грузоотправитель и его адрес: ";
		Если ДанныеПечати.ТолькоУслуги 
		 ИЛИ (ДействующиеПостановления.Постановление1137 И ЭтоСчетФактураНаАванс) Тогда
			ПредставлениеГрузоотправителя = ПредставлениеГрузоотправителя + "--";
		ИначеЕсли ДанныеПечати.Организация = ДанныеПечати.Грузоотправитель Тогда
			ПредставлениеГрузоотправителя = ПредставлениеГрузоотправителя + "он же";
		Иначе
			ПредставлениеГрузоотправителя = ПредставлениеГрузоотправителя 
				+ ФормированиеПечатныхФорм.ОписаниеОрганизации(СведенияОГрузоотправителе, "ПолноеНаименование,ФактическийАдрес");
		КонецЕсли;
		ОбластьМакета.Параметры.ПредставлениеГрузоотправителя = ПредставлениеГрузоотправителя;
		
		// Выводим данные грузополучателя и покупателя.
		ПредставлениеГрузополучателя = "Грузополучатель и его адрес: ";
		Если ДанныеПечати.ТолькоУслуги 
		 ИЛИ (ДействующиеПостановления.Постановление1137 И ЭтоСчетФактураНаАванс) Тогда
			ПредставлениеГрузополучателя = ПредставлениеГрузополучателя + "--";
		Иначе
			Если Не ПустаяСтрока(ДанныеПечати.АдресДоставки) Тогда
				ПредставлениеГрузополучателя = ПредставлениеГрузополучателя
					+ ФормированиеПечатныхФорм.ОписаниеОрганизации(СведенияОГрузополучателе, "ПолноеНаименование", Ложь)
					+ ", " + СокрЛП(ДанныеПечати.АдресДоставки)
				;
			Иначе
				ПредставлениеГрузополучателя = ПредставлениеГрузополучателя
					+ ФормированиеПечатныхФорм.ОписаниеОрганизации(СведенияОГрузополучателе, "ПолноеНаименование,ФактическийАдрес", Ложь);
					 
			КонецЕсли;
		КонецЕсли;
		ОбластьМакета.Параметры.ПредставлениеГрузополучателя = ПредставлениеГрузополучателя;
		
		ОбластьМакета.Параметры.ПоДокументу = "К платежно-расчетному документу № ";
		Если Не ПустаяСтрока(ДанныеПечати.СтрокаПоДокументу) Тогда
			ОбластьМакета.Параметры.ПоДокументу = ОбластьМакета.Параметры.ПоДокументу + ДанныеПечати.СтрокаПоДокументу;
		Иначе
			ОбластьМакета.Параметры.ПоДокументу = ОбластьМакета.Параметры.ПоДокументу + "-- от --";
		КонецЕсли;
		
	КонецЕсли;
	
	ОбластьМакета.Параметры.ПредставлениеПокупателя = "Покупатель: " 
		+ ФормированиеПечатныхФорм.ОписаниеОрганизации(СведенияОПокупателе, "ПолноеНаименование", Ложь);
	ОбластьМакета.Параметры.АдресПокупателя = "Адрес: "
		+ ФормированиеПечатныхФорм.ОписаниеОрганизации(СведенияОПокупателе, "ЮридическийАдрес", Ложь);
		
	КПП = ФормированиеПечатныхФорм.ОписаниеОрганизации(СведенияОПокупателе, "КПП,", Ложь);	
	ОбластьМакета.Параметры.ИННПокупателя = "ИНН/КПП покупателя: "
		+ ФормированиеПечатныхФорм.ОписаниеОрганизации(СведенияОПокупателе, "ИНН,", Ложь)
		+ ?(Не ПустаяСтрока(КПП), "/" + КПП, "");
	
	Если ДействующиеПостановления.Постановление1137 И ЗначениеЗаполнено(ДанныеПечати.Валюта) И ПечатьВВалюте Тогда
		ОбластьМакета.Параметры.Валюта = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			НСтр("ru='Валюта: наименование, код %1, %2'"),
			ДанныеПечати.ВалютаНаименованиеПолное,
			ДанныеПечати.ВалютаКод
		);
	ИначеЕсли ДействующиеПостановления.Постановление1137 Тогда
		ОбластьМакета.Параметры.Валюта = НСтр("ru='Валюта: наименование, код Российский рубль, 643'"); 
	КонецЕсли;
	
	ТабличныйДокумент.Вывести(ОбластьМакета);
		
КонецПроцедуры

Процедура ЗаполнитьРеквизитыПодвалаСчетФактура(ОбластьПодвала, ДанныеПечати, СведенияОбОрганизации)
	
	Если СведенияОбОрганизации.ЮрФизЛицо = Перечисления.ЮрФизЛицо.ЮрЛицо Тогда
		ОбластьПодвала.Параметры.ФИОРуководителя 		= ДанныеПечати.Руководитель;
		ОбластьПодвала.Параметры.ФИОГлавногоБухгалтера 	= ДанныеПечати.ГлавныйБухгалтер;
	Иначе
		ОбластьПодвала.Параметры.ФИОПБОЮЛ 				= ДанныеПечати.Руководитель;
		ОбластьПодвала.Параметры.Свидетельство 			= СведенияОбОрганизации.Свидетельство;
	КонецЕсли;
	
КонецПроцедуры

Процедура ПроставитьПрочеркиВПустыеПоляСтрокиСчетФактура(ОбластьМакета)

	Для т = 0 По ОбластьМакета.Параметры.Количество() - 1 Цикл
		
		ТекПараметр = ОбластьМакета.Параметры.Получить(т);
		
		Если НЕ ЗначениеЗаполнено(ТекПараметр) Тогда
			ОбластьМакета.Параметры.Установить(т, "--");
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ЗаполнитьТабличныйДокументСчетФактура(ТабличныйДокумент, ДанныеДляПечати, ОбъектыПечати, ЭтоСчетФактураНаАванс = Ложь, ПечатьВВалюте = Ложь, КомплектыПечати = Неопределено) Экспорт
	
	ВалютаРегламентированногоУчета = Константы.ВалютаРегламентированногоУчета.Получить();
	
	ДатаНачалаПримененияПостановления1137 = Константы.ДатаНачалаПримененияПостановления1137.Получить();
	
	Макет451  = УправлениеПечатью.ПолучитьМакет("Обработка.ПечатьОбщихФорм.ПФ_MXL_СчетФактура451");
	Макет1137 = УправлениеПечатью.ПолучитьМакет("Обработка.ПечатьОбщихФорм.ПФ_MXL_СчетФактура1137");
	МакетКорр = УправлениеПечатью.ПолучитьМакет("Обработка.ПечатьОбщихФорм.ПФ_MXL_СчетФактураКорректировочный1137");
	
	ДанныеПечати        = ДанныеДляПечати.РезультатПоШапке.Выбрать();
	ВыборкаПоДокументам = ДанныеДляПечати.РезультатПоТабличнойЧасти.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	ТекущееПостановление1137 = Неопределено;
	ПервыйДокумент = Истина;
	Пока ДанныеПечати.Следующий() Цикл
		
		// Для печати комплектов
		Если КомплектыПечати <> Неопределено И КомплектыПечати.Колонки.Найти("Ссылка") <> Неопределено Тогда
			КомплектПечатиПоСсылке = КомплектыПечати.Найти(ДанныеПечати.Ссылка,"Ссылка");
			Если КомплектПечатиПоСсылке = Неопределено Тогда
				КомплектПечатиПоСсылке = КомплектыПечати[0];
			КонецЕсли;
			Если КомплектПечатиПоСсылке.Экземпляров = 0 Тогда
				Продолжить
			КонецЕсли;
		КонецЕсли;
		
		Если ДанныеПечати.ЭтоПередачаНаКомиссию Тогда
			
			Текст = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				НСтр("ru = 'Для документа %1 не требуется %2'"),
				ДанныеПечати.Ссылка,
				ДанныеПечати.ПредставлениеДокумента
				);
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
				Текст,
				ДанныеПечати.Ссылка
			);
		
		ИначеЕсли Не ЗначениеЗаполнено(ДанныеПечати.Номер) Тогда
			
			Если ДанныеПечати.Номер = Неопределено Тогда
				Текст = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
					НСтр("ru = 'Для документа %1 не введен %2'"),
					ДанныеПечати.Ссылка,
					ДанныеПечати.ПредставлениеДокумента
					);
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
					Текст,
					ДанныеПечати.Ссылка,
					, // "ТекстСчетФактура",
					"ТекстСчетФактура"
				);
			Иначе
				Текст = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
					НСтр("ru = 'Для документа %1 не заполнены данные предъявленной счет-фактуры поставщика'"),
					ДанныеПечати.Ссылка
					);
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
					Текст,
					ДанныеПечати.Ссылка,
					"ПредъявленСчетФактура"
				);
			КонецЕсли;
			
		ИначеЕсли ПечатьВВалюте И ДанныеПечати.Валюта = ВалютаРегламентированногоУчета Тогда
			
			Текст = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				НСтр("ru = 'Для документа %1 не требуется %2 в иностранной валюте'"),
				ДанныеПечати.Ссылка,
				ДанныеПечати.ПредставлениеДокумента
				);
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
				Текст,
				ДанныеПечати.Ссылка
			);
			
		ИначеЕсли ЗначениеЗаполнено(ДанныеПечати.ВалютаСчетаФактуры)
		 И ПечатьВВалюте И ДанныеПечати.ВалютаСчетаФактуры = ВалютаРегламентированногоУчета Тогда
			
			Текст = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				НСтр("ru = 'В счете-фактуре документа %1 указана валюта: рубли. Не требуется печатать счет-фактуру в иностранной валюте.'"),
				ДанныеПечати.Ссылка
				);
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
				Текст,
				ДанныеПечати.Ссылка
			);
			
		ИначеЕсли ЗначениеЗаполнено(ДанныеПечати.ВалютаСчетаФактуры)
		 И ДанныеПечати.ВалютаСчетаФактуры <> ВалютаРегламентированногоУчета И НЕ ПечатьВВалюте Тогда
			
			Текст = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				НСтр("ru = 'В счете-фактуре документа %1 указана иностранная валюта. Не требуется печатать счет-фактуру в рублях.'"),
				ДанныеПечати.Ссылка
				);
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
				Текст,
				ДанныеПечати.Ссылка
			);
			
		Иначе
			
			ДействующиеПостановления = Новый Структура;
			ДействующиеПостановления.Вставить("Постановление914",  ДанныеПечати.Дата < ДатаНачалаПримененияПостановления1137);
			ДействующиеПостановления.Вставить("Постановление1137", НЕ (ДанныеПечати.Дата < ДатаНачалаПримененияПостановления1137));
			
			Если ТекущееПостановление1137 = Неопределено Тогда
				ТекущееПостановление1137 = ДействующиеПостановления.Постановление1137;
			КонецЕсли;
			Если ТекущееПостановление1137 <> ДействующиеПостановления.Постановление1137 Тогда
				
				Текст = НСтр("ru = 'Недоступна одновременная печать счетов-фактур, сформированных до и после начала применения постановления Правительства РФ №1137 ('")
					+ Формат(ДатаНачалаПримененияПостановления1137, "ДФ=dd.MM.yyyy") + ")";
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
					Текст,
					ДанныеПечати.Ссылка
				);
				
				ТабличныйДокумент.Очистить();
				Прервать;
				
			КонецЕсли;
			
			Если ДанныеПечати.КорректировочныйСчетФактура Тогда
				Макет = МакетКорр;
			ИначеЕсли ДействующиеПостановления.Постановление914 Тогда
				Макет = Макет451;
			Иначе
				Макет = Макет1137;
			КонецЕсли;
			
			Если Не ПервыйДокумент Тогда
				ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
			КонецЕсли;
			
			ПервыйДокумент = Ложь;
			НомерСтрокиНачало = ТабличныйДокумент.ВысотаТаблицы + 1;
			
			// Выводим общие реквизиты шапки
			СведенияОбОрганизации = Новый Структура;
			ЗаполнитьРеквизитыШапкиСчетФактура(ДанныеПечати, СведенияОбОрганизации, Макет, ТабличныйДокумент, ЭтоСчетФактураНаАванс, ПечатьВВалюте, ДействующиеПостановления);
			
			// Выводим заголовок таблицы
			ЗаголовокТаблицы = Макет.ПолучитьОбласть("ЗаголовокТаблицы");
			Если ДействующиеПостановления.Постановление914 И Не ДанныеПечати.КорректировочныйСчетФактура Тогда
				ЗаголовокТаблицы.Параметры.Валюта = ?(ПечатьВВалюте, ДанныеПечати.Валюта, ВалютаРегламентированногоУчета);
			КонецЕсли;
			ТабличныйДокумент.Вывести(ЗаголовокТаблицы);
			
			НомерСтраницы = 1;
			
			// Инициализация итогов в документе
			ИтоговыеСуммы = СтруктураИтоговыеСуммы();
			
			// Создаем массив для проверки вывода
			МассивВыводимыхОбластей = Новый Массив;
			
			// Выводим многострочную часть документа
			ОбластьМакета = Макет.ПолучитьОбласть("Строка");
			ОбластьИтого = Макет.ПолучитьОбласть("Итого");
			ОбластьПодвала = Макет.ПолучитьОбласть("Подвал");
			
			ЗаполнитьРеквизитыПодвалаСчетФактура(ОбластьПодвала, ДанныеПечати, СведенияОбОрганизации);
			
			СтруктураПоиска = Новый Структура("Ссылка", ДанныеПечати.Ссылка);
			ВыборкаПоДокументам.НайтиСледующий(СтруктураПоиска);
			
			СтрокаТовары = ВыборкаПоДокументам.Выбрать();
			КоличествоСтрок = СтрокаТовары.Количество();
			ТолькоСтавкаБезНДС = Истина;
			НомерСтроки = 0;
			Пока СтрокаТовары.Следующий() Цикл
				
				Если ТипЗнч(ДанныеПечати.Ссылка) = Тип("ДокументСсылка.ОтчетКомиссионера")
				 ИЛИ ТипЗнч(ДанныеПечати.Ссылка) = Тип("ДокументСсылка.ОтчетПоКомиссииМеждуОрганизациями") Тогда
					Если СтрокаТовары.Покупатель <> ДанныеПечати.Покупатель
					 ИЛИ (ДанныеПечати.Покупатель <> НЕОПРЕДЕЛЕНО И НачалоДня(СтрокаТовары.Дата) <> НачалоДня(ДанныеПечати.Дата) И СтрокаТовары.Дата <> '00010101') Тогда
							Продолжить;
					КонецЕсли;
				КонецЕсли;
				
				НомерСтроки = НомерСтроки + 1;
				
				ЗаполнитьРеквизитыСтрокиТовара(СтрокаТовары, ОбластьМакета, ДанныеПечати.КорректировочныйСчетФактура);
				
				ПроставитьПрочеркиВПустыеПоляСтрокиСчетФактура(ОбластьМакета);
				
				Если СтрокаТовары.СтавкаНДС = Перечисления.СтавкиНДС.БезНДС Тогда
					ОбластьМакета.Параметры.СтавкаНДС = НСтр("ru='без НДС'");
					ОбластьМакета.Параметры.СуммаНДС  = НСтр("ru='без НДС'");
				ИначеЕсли СтрокаТовары.СтавкаНДС = Перечисления.СтавкиНДС.НДС0 Тогда
					ОбластьМакета.Параметры.СуммаНДС = 0;
					ТолькоСтавкаБезНДС = Ложь;
				Иначе
					ТолькоСтавкаБезНДС = Ложь;
				КонецЕсли;
				
				Если ДействующиеПостановления.Постановление914 ИЛИ ЭтоСчетФактураНаАванс Тогда
					ОбластьМакета.Параметры.Акциз = "--";
				Иначе
					ОбластьМакета.Параметры.Акциз = "без акциза";
				КонецЕсли;
				
				МассивВыводимыхОбластей.Очистить();
				МассивВыводимыхОбластей.Добавить(ОбластьМакета);
				
				Если НомерСтроки = КоличествоСтрок Тогда
					МассивВыводимыхОбластей.Добавить(ОбластьИтого);
					МассивВыводимыхОбластей.Добавить(ОбластьПодвала);
				КонецЕсли;
				
				Если НЕ ТабличныйДокумент.ПроверитьВывод(МассивВыводимыхОбластей) Тогда
					НомерСтраницы = НомерСтраницы + 1;
					ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
					ТабличныйДокумент.Вывести(ЗаголовокТаблицы);
				КонецЕсли;
				
				ТабличныйДокумент.Вывести(ОбластьМакета);
				РассчитатьИтоговыеСуммы(ИтоговыеСуммы, СтрокаТовары);
				
			КонецЦикла;
			
			// Выводим итоги по документу
			ДобавитьИтоговыеДанныеПодвала(ИтоговыеСуммы, НомерСтроки, ВалютаРегламентированногоУчета);
			
			ОбластьИтого.Параметры.Заполнить(ИтоговыеСуммы);
			ПроставитьПрочеркиВПустыеПоляСтрокиСчетФактура(ОбластьИтого);
			Если ДействующиеПостановления.Постановление1137
				И (НЕ ЭтоСчетФактураНаАванс)
				И (НЕ ДанныеПечати.КорректировочныйСчетФактура)
				И ТолькоСтавкаБезНДС Тогда
				ОбластьИтого.Параметры.ИтогоСуммаНДС = НСтр("ru='без НДС'");
			ИначеЕсли ИтоговыеСуммы.ИтогоСуммаНДС = 0 Тогда
				ОбластьИтого.Параметры.ИтогоСуммаНДС = 0;
			КонецЕсли;
			ТабличныйДокумент.Вывести(ОбластьИтого);
			
			ТабличныйДокумент.Вывести(ОбластьПодвала);
			
			// Выведем нужное количество экземпляров (при печати комплектов)
			Если КомплектыПечати <> Неопределено И КомплектыПечати.Колонки.Найти("Ссылка") <> Неопределено И КомплектПечатиПоСсылке.Экземпляров > 1 Тогда
				ОбластьКопирования = ТабличныйДокумент.ПолучитьОбласть(НомерСтрокиНачало,,ТабличныйДокумент.ВысотаТаблицы);
				Для Итератор = 2 По КомплектПечатиПоСсылке.Экземпляров Цикл
					ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
					ТабличныйДокумент.Вывести(ОбластьКопирования);
				КонецЦикла;
			КонецЕсли;
			
			УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабличныйДокумент, НомерСтрокиНачало, ОбъектыПечати, ДанныеПечати.Ссылка);
			
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

Функция СтруктураИтоговыеСуммы()
	
	Структура = Новый Структура;
	
	СтруктураРесурсовДляИтогов = СтруктураРесурсовДляИтогов();
	
	Для Каждого Элемент Из СтруктураРесурсовДляИтогов Цикл
		Структура.Вставить("Итого"+Элемент.Ключ+"НаСтранице", 0);
		Структура.Вставить("Итого"+Элемент.Ключ, 0);
	КонецЦикла;
	
	Возврат Структура;
	
КонецФункции

Процедура ОбнулитьИтогиПоСтранице(ИтоговыеСуммы)
	
	СтруктураРесурсовДляИтогов = СтруктураРесурсовДляИтогов();
	
	Для Каждого Элемент Из СтруктураРесурсовДляИтогов Цикл
		ИтоговыеСуммы.Вставить("Итого"+Элемент.Ключ+"НаСтранице", 0);
	КонецЦикла;
	
КонецПроцедуры

Процедура РассчитатьИтоговыеСуммы(ИтоговыеСуммы, СтрокаТовары)
	
	СтруктураСуммПоСтроке = СтруктураРесурсовДляИтогов();
	
	ЗаполнитьЗначенияСвойств(СтруктураСуммПоСтроке, СтрокаТовары);
	
	Для Каждого Элемент Из СтруктураСуммПоСтроке Цикл
		ИтоговыеСуммы["Итого"+Элемент.Ключ+"НаСтранице"] = ИтоговыеСуммы["Итого"+Элемент.Ключ+"НаСтранице"] + Элемент.Значение;
		ИтоговыеСуммы["Итого"+Элемент.Ключ] = ИтоговыеСуммы["Итого"+Элемент.Ключ] + Элемент.Значение;
	КонецЦикла;
	
КонецПроцедуры

Процедура ДобавитьИтоговыеДанныеПодвала(ИтоговыеСуммы, ВсегоНомеров, ВалютаРегламентированногоУчета)
	
	ИтоговыеСуммы.Вставить("КоличествоПорядковыхНомеровЗаписейПрописью", ЧислоПрописью(ВсегоНомеров, ,",,,,,,,,0"));
	ИтоговыеСуммы.Вставить("СуммаПрописью", РаботаСКурсамиВалют.СформироватьСуммуПрописью(ИтоговыеСуммы.ИтогоСуммаСНДС, ВалютаРегламентированногоУчета));
	
КонецПроцедуры

Процедура ЗаполнитьРеквизитыСтрокиТовара(СтрокаТовары, ОбластьМакета, КорректировочныйСчетФактура = Ложь)
	
	ОбластьМакета.Параметры.Заполнить(СтрокаТовары);
	Содержание = "";
	Содержание = итПолучитьСодержание(СтрокаТовары);
	ОбластьМакета.Параметры.ПредставлениеНоменклатуры = НоменклатураКлиентСервер.ПредставлениеНоменклатурыДляПечати(
		СтрокаТовары.НоменклатураНаименование,
		СтрокаТовары.ХарактеристикаНаименование,
		,
		,
		Содержание,
		СтрокаТовары.ЭтоВозвратнаяТара);
	
КонецПроцедуры

///////////////////////////////////////////////////////////////////////////////
// Прочее

Функция СтруктураРесурсовДляИтогов()
	
	Структура = Новый Структура;
	
	Структура.Вставить("СуммаБезНДС",       0);
	Структура.Вставить("СуммаНДС",          0);
	Структура.Вставить("СуммаСНДС",         0);
	Структура.Вставить("Количество",        0);
	Структура.Вставить("КоличествоМест",    0);
	Структура.Вставить("КоличествоПринято", 0);
	Структура.Вставить("МассаБрутто",       0);
	Структура.Вставить("МассаНетто",        0);
	
	Структура.Вставить("РазницаБезНДСУвеличение", 0);
	Структура.Вставить("РазницаБезНДСУменьшение", 0);
	Структура.Вставить("РазницаНДСУвеличение",    0);
	Структура.Вставить("РазницаНДСУменьшение",    0);
	Структура.Вставить("РазницаСНДСУвеличение",   0);
	Структура.Вставить("РазницаСНДСУменьшение",   0);
	
	Возврат Структура;
	
КонецФункции

Функция ПараметрыМассыПрописью(Масса, КоэффициентПересчетаВТонны)
	
	МассаТонны = Масса * КоэффициентПересчетаВТонны;
	Если МассаТонны > 1 Тогда
		Коэффициент = 1;
		СтрокаФормат = "т, т, т, ж, кг, кг, кг, м, " + ?(Окр(МассаТонны) = МассаТонны, "0", "3");
	ИначеЕсли МассаТонны * 1000 > 1 Тогда
		Коэффициент = 1000;
		СтрокаФормат = "кг, кг, кг, м, г, г, г, м, " + ?(Окр(МассаТонны * Коэффициент) = МассаТонны * Коэффициент, "0", "3");
	Иначе
		Коэффициент = 1000000;
		СтрокаФормат = "г, г, г, м, г, г, г, м, 0";
	КонецЕсли;
	
	Возврат Новый Структура("Формат, Коэффициент", СтрокаФормат, Коэффициент*КоэффициентПересчетаВТонны);
	
КонецФункции

Функция СведенияОГрузоотправителе(ДанныеПечати)
	
	Если ТипЗнч(ДанныеПечати.Грузоотправитель) = Тип("СправочникСсылка.РегистрацииВНалоговомОргане") Тогда
		СведенияОГрузоотправителе = Справочники.РегистрацииВНалоговомОргане.СведенияОПодразделении(ДанныеПечати.Грузоотправитель);
	Иначе
		СведенияОГрузоотправителе = ФормированиеПечатныхФорм.СведенияОЮрФизЛице(ДанныеПечати.Грузоотправитель, ДанныеПечати.Дата);
	КонецЕсли;
	
	Возврат СведенияОГрузоотправителе;
	
КонецФункции

Функция итПолучитьСодержание(Строка)
	Попытка
		Заказ= Строка.Ссылка.ЗаказКлиента;

	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ЗаказКлиентаТовары.АК_НестандартОписание КАК Описание,
		|	ЗаказКлиентаТовары.Номенклатура.НаименованиеПолное КАК Наименование
		|ИЗ
		|	Документ.ЗаказКлиента.Товары КАК ЗаказКлиентаТовары
		|ГДЕ
		|	ЗаказКлиентаТовары.Ссылка = &Ссылка
		|	И ЗаказКлиентаТовары.Номенклатура = &Номенклатура
		|	И ЗаказКлиентаТовары.Характеристика = &Характеристика
		|	И ЗаказКлиентаТовары.АК_ПризнакНестандарт = ИСТИНА";

	Запрос.УстановитьПараметр("Номенклатура", Строка.Номенклатура);
	Запрос.УстановитьПараметр("Ссылка", Заказ);
	Запрос.УстановитьПараметр("Характеристика", Строка.Характеристика);

	РезультатЗапроса = Запрос.Выполнить();

	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();

	Если ВыборкаДетальныеЗаписи.Следующий() Тогда
		//Возврат ВыборкаДетальныеЗаписи.Наименование + "( нест."+ВыборкаДетальныеЗаписи.Описание+")";	
		//Печатаем не стандартные размеры
		//если есть нестандартные, печатем их. В противном случае
		//берем стандартные из наименования или характеристики.
		ОписаниеНестандарта = ВыборкаДетальныеЗаписи.Описание;
		Номенклатура =ВыборкаДетальныеЗаписи.Наименование;
		Характеристика = Строка.Характеристика;
		//1.ищем в характеристике
		ГабаритыСтандарт = АК_ОбщегоНазначения.ПолучитьГабаритыИзСтроки(Характеристика);
		ГабаритыНестандарт = "";
		Если ГабаритыСтандарт = "" Тогда
			//2.ищем в наименовании
			ГабаритыСтандарт = АК_ОбщегоНазначения.ПолучитьГабаритыИзСтроки(Номенклатура);		
		КонецЕсли;
		
		
		ГабаритыНестандарт = АК_ОбщегоНазначения.ПолучитьГабаритыИзСтроки(ОписаниеНестандарта);
		ОписаниеНестандарта = ?(СокрЛП(ОписаниеНестандарта)<>"",
			"," +СтрЗаменить(СокрЛП(ОписаниеНестандарта),ГабаритыНестандарт,""),
			"");
		
		ГабаритыДляПечати = ?(ГабаритыНестандарт = "",ГабаритыСтандарт,ГабаритыНестандарт);
		
		//если есть в описании габариты, замених их
		Если ГабаритыНестандарт <> "" Тогда
			//1.ищем в наименовании
			ГабаритыСтандарт = АК_ОбщегоНазначения.ПолучитьГабаритыИзСтроки(Номенклатура);
			Если ГабаритыСтандарт <> "" Тогда
				Номенклатура = СтрЗаменить(Номенклатура,ГабаритыСтандарт,ГабаритыНестандарт);		
			КонецЕсли;
			//2.ищем в характеристике
			ГабаритыСтандарт = АК_ОбщегоНазначения.ПолучитьГабаритыИзСтроки(Характеристика);
			Если ГабаритыСтандарт <> "" Тогда
				Характеристика = СтрЗаменить(Характеристика,ГабаритыСтандарт,ГабаритыНестандарт);		
			КонецЕсли;
			
		КонецЕсли;
		
		Возврат Номенклатура +
		        ?(ЗначениеЗаполнено(Характеристика),", "+Строка(СокрЛП(Характеристика)),"")+
		        ?(СокрЛП(ОписаниеНестандарта)="","",", "+СокрЛП(ОписаниеНестандарта));
	КонецЕсли;
	Возврат "";
	
Исключение
		Сообщить(ОписаниеОшибки());
		Возврат "";
	КонецПопытки;
КонецФункции

#КонецЕсли