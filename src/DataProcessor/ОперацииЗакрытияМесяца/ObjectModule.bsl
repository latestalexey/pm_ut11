////////////////////////////////////////////////////////////////////////////////
// ПРОГРАММНЫЙ ИНТЕРФЕЙС

// Выполняет последовательно регламентные задания по закрытию месяца,
// которые могут быть выполнены в автоматическом режиме
//
Процедура ВыполнитьРегламентноеЗаданиеПоЗакрытиюМесяца() Экспорт
	
	ВзаиморасчетыСервер.ОтложенноеПроведениеПоРасчетамСПартнерамиЗакрытиеМесяца(Организация);
	ПартионныйУчетСервер.ВыполнитьРегламентноеФормированиеДвиженийПоПартиямТоваров();
	ПартионныйУчетСервер.ВыполнитьРаспределениеДополнительныхРасходов(ПериодРегистрации, ?(Организация.Пустая(), Неопределено, Организация));
	РаспределениеНДС();
	Документы.РасчетСебестоимостиТоваров.ВыполнитьРегламентноеЗаданиеРасчетСебестоимости(Истина, КонецМесяца(ПериодРегистрации));
	РаспределениеДоходовИРасходовПоНаправлениям();
	
КонецПроцедуры

// Выполняет распределение доходов и расходов по направлениям деятельности:
// если документ распределения есть, то он перезаполняется,
// если документа нет, то он создается и заполняется.
// После этого производится анализ, все ли данные, необходимые для проведения заполнены,
// если да, то производится попытка провести документ
//
Процедура РаспределениеДоходовИРасходовПоНаправлениям() Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст ="
		|ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	ДанныеСправочника.Ссылка КАК Организация
		|ПОМЕСТИТЬ ВТОрганизации
		|ИЗ
		|	Справочник.Организации КАК ДанныеСправочника
		|ГДЕ
		|	(ДанныеСправочника.Ссылка = &Организация
		|	ИЛИ &Организация = ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка))
		|	И
		|	(ДанныеСправочника.Ссылка <> ЗНАЧЕНИЕ(Справочник.Организации.УправленческаяОрганизация)
		|	ИЛИ &УчитыватьУпрОрганизацию)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	РаспределениеДоходовИРасходовПоНаправлениямДеятельности.Ссылка,
		|	РаспределениеДоходовИРасходовПоНаправлениямДеятельности.Организация
		|ПОМЕСТИТЬ ВТДокументы
		|ИЗ
		|	Документ.РаспределениеДоходовИРасходовПоНаправлениямДеятельности КАК РаспределениеДоходовИРасходовПоНаправлениямДеятельности
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТОрганизации КАК ВТОрганизации
		|		ПО РаспределениеДоходовИРасходовПоНаправлениямДеятельности.Организация = ВТОрганизации.Организация
		|ГДЕ
		|	РаспределениеДоходовИРасходовПоНаправлениямДеятельности.Дата МЕЖДУ &ДатаНачала И &ДатаОкончания
		|	И РаспределениеДоходовИРасходовПоНаправлениямДеятельности.ПометкаУдаления = ЛОЖЬ
		|	И РаспределениеДоходовИРасходовПоНаправлениямДеятельности.РаспределениеПоВсемОрганизациям = ЛОЖЬ
		|	И
		|	(РаспределениеДоходовИРасходовПоНаправлениямДеятельности.Организация <> ЗНАЧЕНИЕ(Справочник.Организации.УправленческаяОрганизация)
		|	ИЛИ &УчитыватьУпрОрганизацию)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТОрганизации.Организация,
		|	ВТДокументы.Ссылка КАК Документ
		|ИЗ
		|	ВТОрганизации КАК ВТОрганизации
		|		ПОЛНОЕ СОЕДИНЕНИЕ ВТДокументы КАК ВТДокументы
		|		ПО ВТОрганизации.Организация = ВТДокументы.Организация";

	Запрос.УстановитьПараметр("ДатаНачала", 	НачалоМесяца(ПериодРегистрации));
	Запрос.УстановитьПараметр("ДатаОкончания", 	КонецМесяца(ПериодРегистрации));
	Запрос.УстановитьПараметр("Организация", 	Организация);
	Запрос.УстановитьПараметр("УчитыватьУпрОрганизацию", ПолучитьФункциональнуюОпцию("ИспользоватьУправленческуюОрганизацию"));
	
	Результат = Запрос.Выполнить().Выбрать();
	
	Пока Результат.Следующий() Цикл 
		Если Результат.Документ = Null Тогда
			ДокументРаспределения 									= Документы.РаспределениеДоходовИРасходовПоНаправлениямДеятельности.СоздатьДокумент();
			ДокументРаспределения.Дата 								= КонецМесяца(ПериодРегистрации);
			ДокументРаспределения.РаспределениеПоВсемОрганизациям 	= Ложь;
			ДокументРаспределения.Организация 						= Результат.Организация;
			ДокументРаспределения.Ответственный 					= Пользователи.ТекущийПользователь();
		Иначе
			ДокументРаспределения = Результат.Документ.ПолучитьОбъект();
		КонецЕсли;
		Если ДокументРаспределения.Проведен Тогда
			Попытка 
				ДокументРаспределения.Записать(РежимЗаписиДокумента.ОтменаПроведения)
			Исключение
				Возврат;
			КонецПопытки;
		КонецЕсли;
		
		ДокументРаспределения.ДополнительныеСвойства.Вставить("ВыводитьСообщенияВЖурналРегистрации",Истина);
		
		ДокументРаспределения.ЗаполнитьРасходыПоОстаткам();
		ДокументРаспределения.ЗаполнитьДоходыПоОстаткам();
		
		ДокументРаспределения.Записать(РежимЗаписиДокумента.Запись);
		
		Попытка
			ДокументРаспределения.Записать(РежимЗаписиДокумента.Проведение);
		Исключение
		КонецПопытки;
		
	КонецЦикла;

КонецПроцедуры

// Выполняет распределение НДС:
// если документа распределения нет, то он создается и заполняется.
// После этого производится попытка провести документ
//
Процедура РаспределениеНДС() Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = "
		|ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	ДанныеСправочника.Ссылка КАК Организация
		|ПОМЕСТИТЬ ВТОрганизации
		|ИЗ
		|	Справочник.Организации КАК ДанныеСправочника
		|ГДЕ
		|	ДанныеСправочника.Ссылка = &Организация
		|	ИЛИ &Организация = ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	РаспределениеНДС.Ссылка,
		|	РаспределениеНДС.Организация
		|ПОМЕСТИТЬ ВТДокументы
		|ИЗ
		|	Документ.РаспределениеНДС КАК РаспределениеНДС
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТОрганизации КАК ВТОрганизации
		|		ПО РаспределениеНДС.Организация = ВТОрганизации.Организация
		|ГДЕ
		|	РаспределениеНДС.Дата МЕЖДУ &ДатаНачала И &ДатаОкончания
		|	И РаспределениеНДС.ПометкаУдаления = ЛОЖЬ
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТОрганизации.Организация,
		|	ВТДокументы.Ссылка КАК Документ
		|ИЗ
		|	ВТОрганизации КАК ВТОрганизации
		|		ПОЛНОЕ СОЕДИНЕНИЕ ВТДокументы КАК ВТДокументы
		|		ПО ВТОрганизации.Организация = ВТДокументы.Организация";

	Запрос.УстановитьПараметр("ДатаНачала", 	НачалоМесяца(ПериодРегистрации));
	Запрос.УстановитьПараметр("ДатаОкончания", 	КонецМесяца(ПериодРегистрации));
	Запрос.УстановитьПараметр("Организация", 	Организация);
	
	Результат = Запрос.Выполнить().Выбрать();
	
	Пока Результат.Следующий() Цикл 
		Если Результат.Документ = Null Тогда
			ДокументРаспределения = Документы.РаспределениеНДС.СоздатьДокумент();
			ДокументРаспределения.Дата 			= КонецМесяца(ПериодРегистрации);
			ДокументРаспределения.Организация 	= Результат.Организация;
			ДокументРаспределения.Ответственный = Пользователи.ТекущийПользователь();
			Попытка 
				ДокументРаспределения.Записать(РежимЗаписиДокумента.Запись);
			Исключение
				Продолжить;
			КонецПопытки;
	
			БазаРаспределения = Документы.РаспределениеНДС.ПолучитьБазуРаспределения(ДокументРаспределения.Дата, ДокументРаспределения.Организация);
			
			ДокументРаспределения.ВыручкаНДС	= БазаРаспределения.ТаблицаВыручка.Итог("ВыручкаНДС");
			ДокументРаспределения.ВыручкаНеНДС	= БазаРаспределения.ТаблицаВыручка.Итог("ВыручкаНеНДС");
			ДокументРаспределения.ВыручкаЕНВД	= БазаРаспределения.ТаблицаВыручка.Итог("ВыручкаЕНВД");
			ДокументРаспределения.ВыручкаНДС0	= БазаРаспределения.ТаблицаДокументыЭкспорт.Итог("Сумма");
			
			ДокументРаспределения.ДокументыЭкспорт.Загрузить(БазаРаспределения.ТаблицаДокументыЭкспорт);
	
			Попытка 
				ДокументРаспределения.Записать(РежимЗаписиДокумента.Проведение);
			Исключение
			КонецПопытки;
		КонецЕсли;
	КонецЦикла;

КонецПроцедуры

// Возвращает список подразделений из справочника "Структура предприятия",
// которые не помечены на удаление
//
Функция ПолучитьСписокПодразделений() Экспорт
	
	СписокПодразделений = Новый СписокЗначений;
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	СтруктураПредприятия.Ссылка
		|ИЗ
		|	Справочник.СтруктураПредприятия КАК СтруктураПредприятия
		|ГДЕ
		|	СтруктураПредприятия.ПометкаУдаления = ЛОЖЬ";

		СписокПодразделений.ЗагрузитьЗначения(Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Ссылка"));
	
	Возврат СписокПодразделений;
	
КонецФункции




