#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

////////////////////////////////////////////////////////////////////////////////
// Печать

Процедура Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт
	
	ПараметрыВывода.ДоступнаПечатьПоКомплектно = Истина;
	
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "ЗаданиеНаОтборРазмещениеТовара") Тогда
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм,
		"ЗаданиеНаОтборРазмещениеТовара",
		"Задание на отбор (размещение) товара",
		СформироватьЗаданиеНаОтборРазмещениеТовара(МассивОбъектов, ОбъектыПечати, ПараметрыПечати));
	КонецЕсли;
	
КонецПроцедуры

Функция СформироватьЗаданиеНаОтборРазмещениеТовара(МассивОбъектов, ОбъектыПечати, ПараметрыПечати, КомплектыПечати = Неопределено) Экспорт
	
	ТабличныйДокумент = Новый ТабличныйДокумент;
	ТабличныйДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_" + ПараметрыПечати.ИмяФормы;
	НомерТипаДокумента = 0;
	
	Если ПараметрыПечати.ИмяФормы = "ЗаданиеНаДобор" Тогда
		ПараметрыПечати.Свойство("ПроверяемыйОрдер", МассивОбъектов);
	КонецЕсли;
	
	СтруктураТипов = ОбщегоНазначенияУТ.СоответствиеМассивовПоТипамОбъектов(МассивОбъектов);
	
	Для Каждого СтруктураОбъектов Из СтруктураТипов Цикл
		
		НомерТипаДокумента = НомерТипаДокумента + 1;
		Если НомерТипаДокумента > 1 Тогда
			ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		
		КолонкаКодов = ФормированиеПечатныхФорм.ИмяДополнительнойКолонки();
		ВыводитьКоды = ЗначениеЗаполнено(КолонкаКодов);
		ВыводитьУпаковкиПараметрыПечати = ПолучитьФункциональнуюОпцию("ИспользоватьУпаковкиНоменклатуры") 
							             И Не(ПараметрыПечати.Свойство("БезДопКолонки"));
		ВыводитьПоУчету = ВыводитьУпаковкиПараметрыПечати;
		ЗаданиеНаДобор 	= ПараметрыПечати.ИмяФормы = "ЗаданиеНаДобор";
		
		Макет = УправлениеПечатью.ПолучитьМакет("Обработка.ПечатьЗаданияНаОтборРазмещениеТоваров.ПФ_MXL_ЗаданиеНаОтборРазмещениеТовара");
		
		ОбластьЗаголовок 		= Макет.ПолучитьОбласть("Заголовок");
		
		ОбластьШапка 			  = Макет.ПолучитьОбласть("Шапка");
		ОбластьОснование 		  = Макет.ПолучитьОбласть("Основание");
		ОбластьЗаданиеНаПеревозку = Макет.ПолучитьОбласть("ЗаданиеНаПеревозку");
		
		ОбластьШапкаТаблицыНачало 	= Макет.ПолучитьОбласть("ШапкаТаблицы|НачалоСтроки");
		ОбластьРабочийУчастокНачало	= Макет.ПолучитьОбласть("РабочийУчасток|НачалоСтроки");
		ОбластьСтрокаТаблицыНачало 	= Макет.ПолучитьОбласть("СтрокаТаблицы|НачалоСтроки");
		ОбластьПодвалТаблицыНачало	= Макет.ПолучитьОбласть("ПодвалТаблицы|НачалоСтроки");
		
		ОбластьШапкаТаблицыКолонкаКодов 	= Макет.ПолучитьОбласть("ШапкаТаблицы|КолонкаКодов");
		ОбластьРабочийУчастокКолонкаКодов	= Макет.ПолучитьОбласть("РабочийУчасток|КолонкаКодов");
		ОбластьСтрокаТаблицыКолонкаКодов 	= Макет.ПолучитьОбласть("СтрокаТаблицы|КолонкаКодов");
		ОбластьПодвалТаблицыКолонкаКодов	= Макет.ПолучитьОбласть("ПодвалТаблицы|КолонкаКодов");
		
		ОбластьШапкаТаблицыКолонкаКодов.Параметры.ИмяКолонкиКодов = КолонкаКодов; 
		
		ОбластьШапкаТаблицыКолонкаУпаковок 		= Макет.ПолучитьОбласть("ШапкаТаблицы|КолонкаУпаковок");
		ОбластьРабочийУчастокКолонкаУпаковок	= Макет.ПолучитьОбласть("РабочийУчасток|КолонкаУпаковок");
		ОбластьСтрокаТаблицыКолонкаУпаковок 	= Макет.ПолучитьОбласть("СтрокаТаблицы|КолонкаУпаковок");
		ОбластьПодвалТаблицыКолонкаУпаковок		= Макет.ПолучитьОбласть("ПодвалТаблицы|КолонкаУпаковок");
		
		ОбластьШапкаТаблицыКонец 	= Макет.ПолучитьОбласть("ШапкаТаблицы|КонецСтроки");
		ОбластьРабочийУчастокКонец	= Макет.ПолучитьОбласть("РабочийУчасток|КонецСтроки");
		ОбластьСтрокаТаблицыКонец 	= Макет.ПолучитьОбласть("СтрокаТаблицы|КонецСтроки");
		ОбластьПодвалТаблицыКонец 	= Макет.ПолучитьОбласть("ПодвалТаблицы|КонецСтроки");
		ОбластьИсполнитель 			= Макет.ПолучитьОбласть("Исполнитель");
		
		ОбластьКолонкаТоваров = Макет.Область("КолонкаТоваров");
		
		Если НЕ ВыводитьКоды Тогда
			ОбластьКолонкаТоваров.ШиринаКолонки = ОбластьКолонкаТоваров.ШиринаКолонки + Макет.Область("КолонкаКодов").ШиринаКолонки;
		КонецЕсли;
		
		ЭтоЗаданиеНаРазмещение 	= Неопределено;
		ПервыйДокумент 	 		= Истина;
		
		Если ПараметрыПечати.ИмяФормы  = "ЗаданиеНаПересчет" Тогда
			ОбластьШапкаТаблицыКолонкаУпаковок.Параметры.НадписьКоличество 	= НСтр("ru='(По учету)'");
			ОбластьШапкаТаблицыКонец.Параметры.НадписьКоличество 			= НСтр("ru='(Факт)'");
			НазваниеФормы = НСтр("ru = 'Задание на пересчет товаров'");
		ИначеЕсли ПараметрыПечати.ИмяФормы  = "ЗаданиеНаРазмещение" Тогда
			ЭтоЗаданиеНаРазмещение 	= Истина;
			НазваниеФормы 			= НСтр("ru = 'Задание на размещение товаров'");
			ОбластьШапкаТаблицыКолонкаУпаковок.Параметры.НадписьКоличество = НСтр("ru='упаковок'");
		ИначеЕсли ПараметрыПечати.ИмяФормы  = "ЗаданиеНаОтбор" Тогда
			ЭтоЗаданиеНаРазмещение 	= Ложь;
			НазваниеФормы 			= НСтр("ru = 'Задание на отбор товаров'");
			ОбластьШапкаТаблицыКолонкаУпаковок.Параметры.НадписьКоличество = НСтр("ru='упаковок'");	
		КонецЕсли;
		
		
		Если ЗаданиеНаДобор Тогда
			ЭтоЗаданиеНаРазмещение 	= Ложь;
			НазваниеФормы 			= НСтр("ru = 'Задание на добор товаров'");
			ОбластьШапкаТаблицыКолонкаУпаковок.Параметры.НадписьКоличество = НСтр("ru='упаковок'");	
			ДанныеДляПечати = Обработки.ПроверкаКоличестваТоваровВДокументе.ПолучитьДанныеДляПечатнойФормыЗаданиеНаДоборТоваров(ПараметрыПечати, ПараметрыПечати.Ордер);
		Иначе
			МенеджерОбъекта = ОбщегоНазначения.МенеджерОбъектаПоПолномуИмени(СтруктураОбъектов.Ключ);
			ДанныеДляПечати = МенеджерОбъекта.ПолучитьДанныеДляПечатнойФормыОтборРазмещениеТоваров(ПараметрыПечати, СтруктураОбъектов.Значение);
		КонецЕсли;
		
		
		ДанныеПоШапке 			= ДанныеДляПечати.РезультатПоШапке;
		ДанныеПоТабличнойЧасти	= ДанныеДляПечати.РезультатПоТабличнойЧасти;
		
		ЕстьПолеИспользоватьСерииНоменклатуры = ДанныеПоШапке.Колонки.Найти("ИспользоватьСерииНоменклатуры") <> Неопределено;
		
		ВыборкаПоШапке			= ДанныеПоШапке.Выбрать();
		ВыборкаПоТабличнойЧасти	= ДанныеПоТабличнойЧасти.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		Пока ВыборкаПоШапке.Следующий() Цикл
					
			ТекстСообщения = "";
			
			Если Не ЗначениеЗаполнено(ВыборкаПоШапке.СкладПредставление) Тогда
				ТекстСообщения = НСтр("ru='Невозможно напечатать %НазваниеФормы% для ""%Документ%"",
				|т.к. не заполнено поле ""Склад"".'");
				
			ИначеЕсли Не(ВыборкаПоШапке.ИспользуетсяСправочноеХранение) Тогда
				ТекстСообщения = НСтр("ru='Невозможно напечатать %НазваниеФормы% для ""%Документ%"",
				|т.к. для склада ""%Склад%"" не используется справочное деление на складские ячейки.'");
				
			ИначеЕсли ВыборкаПоШапке.НарушенаОрдернаяСхема Тогда
				ТекстСообщения = НСтр("ru='Невозможно напечатать %НазваниеФормы% для ""%Документ%"",
				|т.к. на складе ""%Склад%"" используется ордерная схема, поэтому печать задания должна вестись из ордера.'");
				
			ИначеЕсли ДанныеПоТабличнойЧасти.Пустой() Тогда
				ТекстСообщения = НСтр("ru='Невозможно напечатать %НазваниеФормы% для ""%Документ%"",
				|т.к. в табличной части отсутствует номенклатура с типом ""Товар"".'");
			КонецЕсли;	
			
			ИспользоватьСерии = Ложь;
			
			Если ЕстьПолеИспользоватьСерииНоменклатуры Тогда
				ИспользоватьСерии = ВыборкаПоШапке.ИспользоватьСерииНоменклатуры;
			КонецЕсли;
			
			ВыводитьУпаковки = ВыводитьУпаковкиПараметрыПечати
							   И Не ИспользоватьСерии;
			
			Если ЗначениеЗаполнено(ТекстСообщения) Тогда
				ТекстСообщения = СтрЗаменить(ТекстСообщения,"%Документ%", ВыборкаПоШапке.СсылкаПредставление);
				ТекстСообщения = СтрЗаменить(ТекстСообщения,"%Склад%", СкладыСервер.ПолучитьПредставлениеСклада(ВыборкаПоШапке.СкладПредставление, ВыборкаПоШапке.ПомещениеПредставление));
				ТекстСообщения = СтрЗаменить(ТекстСообщения,"%НазваниеФормы%",НазваниеФормы);
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения);
				Продолжить;
			КонецЕсли;
			
			Если Не ПервыйДокумент Тогда
				ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
			КонецЕсли;
			
			ПервыйДокумент 		= Ложь;
			НомерСтрокиНачало 	= ТабличныйДокумент.ВысотаТаблицы + 1;
			ПредставлениеСклада = СкладыСервер.ПолучитьПредставлениеСклада(ВыборкаПоШапке.СкладПредставление,
			ВыборкаПоШапке.ПомещениеПредставление);
			
			РеквизитыДокумента 	= Новый Структура("Номер, Дата, Префикс, Представление");
			ЗаполнитьЗначенияСвойств(РеквизитыДокумента, ВыборкаПоШапке);
			РеквизитыДокумента.Представление = ВыборкаПоШапке.СсылкаПредставление;
			
			ПредставлениеРаспоряжения = ОбщегоНазначенияУТКлиентСервер.СформироватьЗаголовокДокумента(РеквизитыДокумента);
			
			ОбластьЗаголовок.Параметры.ТекстЗаголовка = НазваниеФормы;
			ШтрихкодированиеПечатныхФорм.ВывестиШтрихкодВТабличныйДокумент(ТабличныйДокумент, Макет, ОбластьЗаголовок, ВыборкаПоШапке.Ссылка);

			ТабличныйДокумент.Вывести(ОбластьЗаголовок);
			
			ОбластьШапка.Параметры.ПредставлениеСклада 		 = ПредставлениеСклада;
			ОбластьШапка.Параметры.ПредставлениеРаспоряжения = ПредставлениеРаспоряжения;
			
			ТабличныйДокумент.Вывести(ОбластьШапка);
			
			Если ТипЗнч(ВыборкаПоШапке.Ссылка) = Тип("ДокументСсылка.РасходныйОрдерНаТовары") Тогда
				РеквизитыДокумента.Дата          = ВыборкаПоШапке.ОснованиеДата;
				РеквизитыДокумента.Номер         = ВыборкаПоШапке.ОснованиеНомер;
				РеквизитыДокумента.Префикс       = "";
				РеквизитыДокумента.Представление = ВыборкаПоШапке.ОснованиеПредставление;
				
				ОбластьОснование.Параметры.ПредставлениеОснования = ОбщегоНазначенияУТКлиентСервер.СформироватьЗаголовокДокумента(РеквизитыДокумента);
				ТабличныйДокумент.Вывести(ОбластьОснование);
				
				Если ВыборкаПоШапке.ОтгрузкаПоЗаданиюНаПеревозку Тогда
					
					РеквизитыДокумента.Дата          = ВыборкаПоШапке.ЗаданиеНаПеревозкуДата;
					РеквизитыДокумента.Номер         = ВыборкаПоШапке.ЗаданиеНаПеревозкуНомер;
					РеквизитыДокумента.Префикс       = "";
					РеквизитыДокумента.Представление = ВыборкаПоШапке.ЗаданиеНаПеревозкуПредставление;
					
					ОбластьЗаданиеНаПеревозку.Параметры.ЗаданиеНаПеревозкуПредставление	= ОбщегоНазначенияУТКлиентСервер.СформироватьЗаголовокДокумента(РеквизитыДокумента);
					ОбластьЗаданиеНаПеревозку.Параметры.ПорядокДоставки = ВыборкаПоШапке.ПорядокДоставки;
					ТабличныйДокумент.Вывести(ОбластьЗаданиеНаПеревозку);
					
				КонецЕсли;
				
			КонецЕсли;
			
			Если ПараметрыПечати.ИмяФормы  = "ЗаданиеНаПересчет" Тогда
				ОбластьИсполнитель.Параметры.ИсполнительПредставление = ФизическиеЛица.ФамилияИнициалыФизЛица(ВыборкаПоШапке.ИсполнительПредставление);
				ТабличныйДокумент.Вывести(ОбластьИсполнитель);
				ВыводитьПоУчету = ВыборкаПоШапке.ВыводитьПоУчету;
			КонецЕсли;
			
			Если Не (ВыводитьУпаковки 
				И ВыводитьПоУчету) Тогда
				ОбластьКолонкаТоваров.ШиринаКолонки = ОбластьКолонкаТоваров.ШиринаКолонки + Макет.Область("КолонкаУпаковокКоличество").ШиринаКолонки
				+ Макет.Область("КолонкаУпаковокПредставление").ШиринаКолонки; 		
			КонецЕсли;
			
			ОбластьШапкаТаблицыКолонкаТоваров 	= Макет.ПолучитьОбласть("ШапкаТаблицы|КолонкаТоваров");
			ОбластьРабочийУчастокКолонкаТоваров	= Макет.ПолучитьОбласть("РабочийУчасток|КолонкаТоваров");
			ОбластьСтрокаТаблицыКолонкаТоваров 	= Макет.ПолучитьОбласть("СтрокаТаблицы|КолонкаТоваров");
			ОбластьПодвалТаблицыКолонкаТоваров	= Макет.ПолучитьОбласть("ПодвалТаблицы|КолонкаТоваров");
			
			Если ВыборкаПоШапке.СкладыВТЧ Тогда
				ВыборкаПоТабличнойЧасти.НайтиСледующий(Новый Структура("Ссылка",ВыборкаПоШапке.Ссылка));
				ВыборкаПоСкладам = ВыборкаПоТабличнойЧасти.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
				ВыборкаПоСкладам.НайтиСледующий(Новый Структура("Склад",ВыборкаПоШапке.Склад));
				ВыборкаРабочиеУчастки = ВыборкаПоСкладам.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
			Иначе
				ВыборкаПоТабличнойЧасти.НайтиСледующий(Новый Структура("Ссылка",ВыборкаПоШапке.Ссылка));
				ВыборкаРабочиеУчастки = ВыборкаПоТабличнойЧасти.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
			КонецЕсли;
			
			ВыводитьУчастки = Истина;
			
			//Если у всех ячеек рабочий участок не заполнен, то не будем выводить пустую строку по группировке "РабочийУчасток"
			Если ВыборкаРабочиеУчастки.Количество() < 2 Тогда
				Если ВыборкаРабочиеУчастки.Следующий() Тогда
					ВыводитьУчастки = ЗначениеЗаполнено(ВыборкаРабочиеУчастки.РабочийУчасток);
				КонецЕсли;
				ВыборкаРабочиеУчастки.Сбросить();
			КонецЕсли;
			
			ТабличныйДокумент.Вывести(ОбластьШапкаТаблицыНачало);
			
			Если ВыводитьКоды Тогда
				ТабличныйДокумент.Присоединить(ОбластьШапкаТаблицыКолонкаКодов);
			КонецЕсли;
			
			ТабличныйДокумент.Присоединить(ОбластьШапкаТаблицыКолонкаТоваров);
			
			Если ВыводитьУпаковки
				И ВыводитьПоУчету Тогда
				ТабличныйДокумент.Присоединить(ОбластьШапкаТаблицыКолонкаУпаковок);
			КонецЕсли;
			
			ТабличныйДокумент.Присоединить(ОбластьШапкаТаблицыКонец);
			
			ТекЯчейка = 0;
			
			НомерСтроки = 1;
			
			Пока ВыборкаРабочиеУчастки.Следующий() Цикл
				
				Если ВыводитьУчастки
					И ЗначениеЗаполнено(ВыборкаРабочиеУчастки.РабочийУчасток) Тогда
					
					ОбластьРабочийУчастокНачало.Параметры.Заполнить(ВыборкаРабочиеУчастки);
					
					ТабличныйДокумент.Вывести(ОбластьРабочийУчастокНачало);
					
					Если ВыводитьКоды Тогда
						ТабличныйДокумент.Присоединить(ОбластьРабочийУчастокКолонкаКодов);
					КонецЕсли;
					
					ТабличныйДокумент.Присоединить(ОбластьРабочийУчастокКолонкаТоваров);
					
					Если ВыводитьУпаковки
						И ВыводитьПоУчету Тогда
						ТабличныйДокумент.Присоединить(ОбластьРабочийУчастокКолонкаУпаковок);
					КонецЕсли;
					
					ТабличныйДокумент.Присоединить(ОбластьРабочийУчастокКонец);
					
				КонецЕсли;
				
				ВыборкаПорядокОбхода = ВыборкаРабочиеУчастки.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
				
				Пока ВыборкаПорядокОбхода.Следующий() Цикл 
					
					ВыборкаНоменклатура = ВыборкаПорядокОбхода.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
					
					Пока ВыборкаНоменклатура.Следующий() Цикл
						
						ВыборкаХарактеристика = ВыборкаНоменклатура.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
						
						Пока ВыборкаХарактеристика.Следующий() Цикл
							
							ВыборкаСерия = ВыборкаХарактеристика.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
						 	
							Пока ВыборкаСерия.Следующий() Цикл
							
								ВыборкаУпаковка = ВыборкаСерия.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
								
								Пока ВыборкаУпаковка.Следующий() Цикл
									
									ВыборкаДетали = ВыборкаУпаковка.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
									
									ВыборкаДетали.Следующий();
									ОбластьСтрокаТаблицыНачало.Параметры.Заполнить(ВыборкаДетали);
									ОбластьСтрокаТаблицыНачало.Параметры.НомерСтроки = НомерСтроки;
									НомерСтроки = НомерСтроки + 1;
									
									Если ВыводитьКоды Тогда
										ОбластьСтрокаТаблицыКолонкаКодов.Параметры.Артикул = ВыборкаДетали[КолонкаКодов];
									КонецЕсли;
									
									ОбластьСтрокаТаблицыКолонкаТоваров.Параметры.Товар = НоменклатураКлиентСервер.ПредставлениеНоменклатурыДляПечати(
										ВыборкаДетали.ПредставлениеНоменклатуры,
										ВыборкаДетали.ПредставлениеХарактеристики,
										, // Упаковка
										ВыборкаДетали.ПредставлениеСерии
									);
									
									Если ВыводитьУпаковки
										И ВыводитьПоУчету Тогда
										ОбластьСтрокаТаблицыКолонкаУпаковок.Параметры.Заполнить(ВыборкаДетали);
									КонецЕсли;
									
									ОбластьСтрокаТаблицыКонец.Параметры.Заполнить(ВыборкаДетали);
									
									ВыборкаДетали.Сбросить();
									
									ДопЯчейки    = "";
									
									Пока ВыборкаДетали.Следующий() Цикл
										
										ДопЯчейки = ДопЯчейки + ВыборкаДетали.ЯчейкаПредставление + Символы.ПС;
										
									КонецЦикла;
									
									ОбластьСтрокаТаблицыНачало.Параметры.ДополнительныеЯчейки = ДопЯчейки;
									
									ТабличныйДокумент.Вывести(ОбластьСтрокаТаблицыНачало);
									Если ВыводитьКоды Тогда
										ТабличныйДокумент.Присоединить(ОбластьСтрокаТаблицыКолонкаКодов);
									КонецЕсли;
									
									ТабличныйДокумент.Присоединить(ОбластьСтрокаТаблицыКолонкаТоваров);
									
									Если ВыводитьУпаковки
										И ВыводитьПоУчету Тогда
										ТабличныйДокумент.Присоединить(ОбластьСтрокаТаблицыКолонкаУпаковок);
									КонецЕсли;
									
									ТабличныйДокумент.Присоединить(ОбластьСтрокаТаблицыКонец);
									
								КонецЦикла;
								
							КонецЦикла;
							
						КонецЦикла;
						
					КонецЦикла;
					
				КонецЦикла;
				
			КонецЦикла;
			
			ТабличныйДокумент.Вывести(ОбластьПодвалТаблицыНачало);
			
			Если ВыводитьКоды Тогда
				ТабличныйДокумент.Присоединить(ОбластьПодвалТаблицыКолонкаКодов);
			КонецЕсли;
			
			ТабличныйДокумент.Присоединить(ОбластьПодвалТаблицыКолонкаТоваров);
			
			Если ВыводитьУпаковки
				И ВыводитьПоУчету Тогда
				ТабличныйДокумент.Присоединить(ОбластьПодвалТаблицыКолонкаУпаковок);
			КонецЕсли;
			
			ТабличныйДокумент.Присоединить(ОбластьПодвалТаблицыКонец);
						
			УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабличныйДокумент,
			НомерСтрокиНачало,
			ОбъектыПечати,
			ВыборкаПоШапке.Ссылка);
		КонецЦикла;
		
		Если ВыборкаПоШапке.Количество() = 0
			И СтруктураОбъектов.Ключ = "ВводОстатков" Тогда
				ТекстСообщения = НСтр("ru='Для данного вида операции документа ""Ввод остатков""
				|печать %НазваниеФормы% не требуется.'");
				ТекстСообщения = СтрЗаменить(ТекстСообщения,"%НазваниеФормы%",НазваниеФормы);
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения);
		КонецЕсли;
		
	КонецЦикла;
	
	ТабличныйДокумент.АвтоМасштаб = Истина;
	
	Возврат ТабличныйДокумент;
	
КонецФункции

#КонецЕсли