#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

////////////////////////////////////////////////////////////////////////////////
// ПРОГРАММНЫЙ ИНТЕРФЕЙС

// Получает состояние обеспечения для переданных параметров.
//
// Параметры:
//	Параметры - Структура - содержит элементы с ключами:
//		"Заказ" - ДокументСсылка - заказ, для которого необходимо получить состояние обеспечения
//		"Склад" - СправочникСсылка.Склады - склад из реквизита заказа, если указывается в шапке
//		"АдресТовары" - Строка - адрес во временном хранилище, по которому помещен список товаров из заказа
//		"ОтборПоСостояниюНаличия" - ПеречислениеСсылка.СостоянияНаличия - состояние наличия для отбора получаемых строк заказа
//
// Возвращаемое значение:
//	Булево - Истина, если по заказу есть потребности
//
Функция ПолучитьСостояниеОбеспечения(Параметры, ПараметрыВидимости = Неопределено) Экспорт
	
	Товары.Очистить();
	
	Запрос = Новый Запрос;
	
	Если Не Параметры.Свойство("РассчитатьБезЗаказа") Тогда
		
		Параметры.Вставить("РассчитатьБезЗаказа", Ложь);
		
	КонецЕсли;
	
	Если Параметры.Заказ.Пустая() ИЛИ 
		Параметры.Заказ.Метаданные().Реквизиты.Найти("Подразделение") = Неопределено Тогда
		
		Параметры.Вставить("Подразделение", Справочники.СтруктураПредприятия.ПустаяСсылка());
		
	Иначе
		
		Параметры.Вставить("Подразделение", Параметры.Заказ.Подразделение);
		
	КонецЕсли;
		
	Если Не Параметры.Свойство("Назначение") Тогда
		
		Если Параметры.Заказ.Пустая() Тогда 
			
			Параметры.Вставить("Назначение", Справочники.Назначения.ПустаяСсылка());
			
		Иначе
			
			Если Параметры.Заказ.Метаданные().Реквизиты.Найти("Назначение") <> Неопределено Тогда
			
				Параметры.Вставить("Назначение", Параметры.Заказ.Назначение);
				Если Параметры.Назначение.Пустая() 
					И ТипЗнч(Параметры.Заказ) = Тип("ДокументСсылка.ЗаказНаСборку") Тогда
				
					Параметры.Вставить("Назначение", Параметры.Заказ.НазначениеТовары);
				
				КонецЕсли;
			
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЕсли;
	
	Если ЭтоАдресВременногоХранилища(Параметры.АдресТовары) Тогда
		
		// Заказ клиента
		Если ТипЗнч(Параметры.Заказ) = Тип("ДокументСсылка.ЗаказКлиента") Тогда
			
			// Помощник продаж
			Если Параметры.РассчитатьБезЗаказа Тогда
			
				Запрос.Текст =
				"ВЫБРАТЬ
				|	&Заказ КАК Заказ,
				|	&Подразделение КАК Подразделение,
				|	Товары.Склад КАК Склад,
				|	Товары.КодСтроки КАК КодСтроки,
				|	Товары.НомерСтроки КАК НомерСтроки,
				|	Товары.Номенклатура КАК Номенклатура,
				|	Товары.Характеристика КАК Характеристика,
				|	Товары.Упаковка КАК Упаковка,
				|	Товары.ДатаОтгрузки КАК ДатаОтгрузки,
				|	Товары.Количество КАК Количество,
				|	Товары.СрокПоставки КАК СрокПоставки,
				|	Товары.УказыватьСерии КАК УказыватьСерии,
				|	Товары.СтатусУказанияСерий КАК СтатусУказанияСерий,
				|	Товары.ВариантОбеспечения КАК ВариантОбеспечения,
				|	&Назначение КАК Назначение
				|ПОМЕСТИТЬ Товары
				|ИЗ
				|	&Товары КАК Товары
				|;
				|
				|////////////////////////////////////////////////////////////////////////////////
				|";
			
			Иначе
			
				Запрос.Текст =
				"ВЫБРАТЬ
				|	&Заказ КАК Заказ,
				|	&Подразделение КАК Подразделение,
				|	Товары.Склад КАК Склад,
				|	Товары.КодСтроки КАК КодСтроки,
				|	Товары.НомерСтроки КАК НомерСтроки,
				|	Товары.Номенклатура КАК Номенклатура,
				|	Товары.Характеристика КАК Характеристика,
				|	Товары.Упаковка КАК Упаковка,
				|	Товары.ДатаОтгрузки КАК ДатаОтгрузки,
				|	Товары.Количество КАК Количество,
				|	Товары.СрокПоставки КАК СрокПоставки,
				|	Товары.УказыватьСерии КАК УказыватьСерии,
				|	Товары.СтатусУказанияСерий КАК СтатусУказанияСерий,
				|	Товары.ВариантОбеспечения КАК ВариантОбеспечения,
				|	&Назначение КАК Назначение
				|ПОМЕСТИТЬ Товары
				|ИЗ
				|	&Товары КАК Товары
				|ГДЕ
				|	(НЕ Товары.Отменено)
				|;
				|
				|////////////////////////////////////////////////////////////////////////////////
				|";
				
			КонецЕсли;
			
		// Заявка на возврат товаров от клиента
		ИначеЕсли ТипЗнч(Параметры.Заказ) = Тип("ДокументСсылка.ЗаявкаНаВозвратТоваровОтКлиента") Тогда
			
			Запрос.Текст =
			"ВЫБРАТЬ
			|	&Заказ КАК Заказ,
			|	&Подразделение КАК Подразделение,
			|	&Склад КАК Склад,
			|	Товары.КодСтроки КАК КодСтроки,
			|	Товары.НомерСтроки КАК НомерСтроки,
			|	Товары.Номенклатура КАК Номенклатура,
			|	Товары.Характеристика КАК Характеристика,
			|	Товары.Упаковка КАК Упаковка,
			|	Товары.ДатаОтгрузки КАК ДатаОтгрузки,
			|	Товары.Количество КАК Количество,
			|	Товары.СрокПоставки КАК СрокПоставки,
			|	Товары.УказыватьСерии КАК УказыватьСерии,
			|	Товары.СтатусУказанияСерий КАК СтатусУказанияСерий,
			|	Товары.ВариантОбеспечения КАК ВариантОбеспечения,
			|	&Назначение КАК Назначение
			|ПОМЕСТИТЬ Товары
			|ИЗ
			|	&Товары КАК Товары
			|ГДЕ
			|	(НЕ Товары.Отменено)
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|";
			
		// Заказ на внутреннее потребление
		ИначеЕсли ТипЗнч(Параметры.Заказ) = Тип("ДокументСсылка.ЗаказНаВнутреннееПотребление") Тогда
			
			Запрос.Текст =
			"ВЫБРАТЬ
			|	&Заказ КАК Заказ,
			|	&Подразделение КАК Подразделение,
			|	&Склад КАК Склад,
			|	Товары.КодСтроки КАК КодСтроки,
			|	Товары.НомерСтроки КАК НомерСтроки,
			|	Товары.Номенклатура КАК Номенклатура,
			|	Товары.Характеристика КАК Характеристика,
			|	Товары.Упаковка КАК Упаковка,
			|	Товары.ДатаОтгрузки КАК ДатаОтгрузки,
			|	Товары.Количество КАК Количество,
			|	0 КАК СрокПоставки,
			|	Товары.УказыватьСерии КАК УказыватьСерии,
			|	Товары.СтатусУказанияСерий КАК СтатусУказанияСерий,
			|	ЗНАЧЕНИЕ(Перечисление.ВариантыОбеспечения.ПустаяСсылка) КАК ВариантОбеспечения,
			|	ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка) КАК Назначение
			|ПОМЕСТИТЬ Товары
			|ИЗ
			|	&Товары КАК Товары
			|ГДЕ
			|	(НЕ Товары.Отменено)
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|";
			
		// Заказ на перемещение
		ИначеЕсли ТипЗнч(Параметры.Заказ) = Тип("ДокументСсылка.ЗаказНаПеремещение") Тогда
			
			Запрос.Текст =
			"ВЫБРАТЬ
			|	&Заказ                          КАК Заказ,
			|	&Подразделение                  КАК Подразделение,
			|	&Склад                          КАК Склад,
			|	Товары.КодСтроки                КАК КодСтроки,
			|	Товары.НомерСтроки              КАК НомерСтроки,
			|	Товары.Номенклатура             КАК Номенклатура,
			|	Товары.Характеристика           КАК Характеристика,
			|	Товары.Упаковка                 КАК Упаковка,
			|	Товары.НачалоОтгрузки           КАК ДатаОтгрузки,
			|	Товары.Количество               КАК Количество,
			|	0                               КАК СрокПоставки,
			|	Товары.УказыватьСерии           КАК УказыватьСерии,
			|	Товары.СтатусУказанияСерий      КАК СтатусУказанияСерий,
			|	Товары.ВариантОбеспечения       КАК ВариантОбеспечения,
			|	ВЫБОР
			|		КОГДА Товары.Назначение = ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка) ТОГДА 
			|			&Назначение
			|		ИНАЧЕ
			|			Товары.Назначение
			|	КОНЕЦ                           КАК Назначение
			|ПОМЕСТИТЬ Товары
			|ИЗ
			|	&Товары КАК Товары
			|ГДЕ
			|	(НЕ Товары.Отменено)
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|";
			
		// Заказ на сборку
		ИначеЕсли ТипЗнч(Параметры.Заказ) = Тип("ДокументСсылка.ЗаказНаСборку") Тогда
			
			Запрос.Текст =
			"ВЫБРАТЬ
			|	&Заказ КАК Заказ,
			|	&Подразделение КАК Подразделение,
			|	&Склад КАК Склад,
			|	Товары.КодСтроки КАК КодСтроки,
			|	Товары.НомерСтроки КАК НомерСтроки,
			|	Товары.Номенклатура КАК Номенклатура,
			|	Товары.Характеристика КАК Характеристика,
			|	Товары.Упаковка КАК Упаковка,
			|	Товары.НачалоСборкиРазборки КАК ДатаОтгрузки,
			|	Товары.Количество КАК Количество,
			|	Товары.ТипОперации КАК ТипОперации,
			|	0 КАК СрокПоставки,
			|	Товары.УказыватьСерии КАК УказыватьСерии,
			|	Товары.СтатусУказанияСерий КАК СтатусУказанияСерий,
			|	Товары.ВариантОбеспечения КАК ВариантОбеспечения,
			|	&Назначение КАК Назначение
			|ПОМЕСТИТЬ Товары
			|ИЗ
			|	&Товары КАК Товары
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|";
			
		КонецЕсли;
		
		Запрос.УстановитьПараметр("Назначение",    Параметры.Назначение);
		Запрос.УстановитьПараметр("Подразделение", Параметры.Подразделение);
		Запрос.УстановитьПараметр("Склад",         Параметры.Склад);
		Запрос.УстановитьПараметр("Товары",        ПолучитьИзВременногоХранилища(Параметры.АдресТовары));
		
	Иначе
		
		// Заказ клиента
		Если ТипЗнч(Параметры.Заказ) = Тип("ДокументСсылка.ЗаказКлиента") Тогда
			
			Запрос.Текст =
			"ВЫБРАТЬ
			|	ТаблицаЗаказа.Ссылка КАК Заказ,
			|	ТаблицаЗаказа.Ссылка.Подразделение КАК Подразделение,
			|	ТаблицаЗаказа.Склад КАК Склад,
			|	ТаблицаЗаказа.КодСтроки КАК КодСтроки,
			|	ТаблицаЗаказа.НомерСтроки КАК НомерСтроки,
			|	ТаблицаЗаказа.Номенклатура КАК Номенклатура,
			|	ТаблицаЗаказа.Характеристика КАК Характеристика,
			|	ТаблицаЗаказа.Упаковка КАК Упаковка,
			|	ТаблицаЗаказа.ДатаОтгрузки КАК ДатаОтгрузки,
			|	ТаблицаЗаказа.Количество КАК Количество,
			|	ТаблицаЗаказа.СрокПоставки КАК СрокПоставки,
			|	ТаблицаЗаказа.УказыватьСерии КАК УказыватьСерии,
			|	ТаблицаЗаказа.СтатусУказанияСерий КАК СтатусУказанияСерий,
			|	ТаблицаЗаказа.ВариантОбеспечения КАК ВариантОбеспечения,
			|	ТаблицаЗаказа.Ссылка.Назначение КАК Назначение
			|ПОМЕСТИТЬ Товары
			|ИЗ
			|	Документ.ЗаказКлиента.Товары КАК ТаблицаЗаказа
			|ГДЕ
			|	ТаблицаЗаказа.Ссылка = &Заказ
			|	И (НЕ ТаблицаЗаказа.Отменено)
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|";
			
		// Заявка на возврат товаров от клиента
		ИначеЕсли ТипЗнч(Параметры.Заказ) = Тип("ДокументСсылка.ЗаявкаНаВозвратТоваровОтКлиента") Тогда
			
			Запрос.Текст =
			"ВЫБРАТЬ
			|	ТаблицаЗаказа.Ссылка КАК Заказ,
			|	ТаблицаЗаказа.Ссылка.Подразделение КАК Подразделение,
			|	ТаблицаЗаказа.Ссылка.Склад КАК Склад,
			|	ТаблицаЗаказа.КодСтроки КАК КодСтроки,
			|	ТаблицаЗаказа.НомерСтроки КАК НомерСтроки,
			|	ТаблицаЗаказа.Номенклатура КАК Номенклатура,
			|	ТаблицаЗаказа.Характеристика КАК Характеристика,
			|	ТаблицаЗаказа.Упаковка КАК Упаковка,
			|	ТаблицаЗаказа.ДатаОтгрузки КАК ДатаОтгрузки,
			|	ТаблицаЗаказа.Количество КАК Количество,
			|	ТаблицаЗаказа.СрокПоставки КАК СрокПоставки,
			|	ТаблицаЗаказа.УказыватьСерии КАК УказыватьСерии,
			|	ТаблицаЗаказа.СтатусУказанияСерий КАК СтатусУказанияСерий,
			|	ТаблицаЗаказа.ВариантОбеспечения КАК ВариантОбеспечения,
			|	ТаблицаЗаказа.Ссылка.Назначение КАК Назначение
			|ПОМЕСТИТЬ Товары
			|ИЗ
			|	Документ.ЗаявкаНаВозвратТоваровОтКлиента.ЗаменяющиеТовары КАК ТаблицаЗаказа
			|ГДЕ
			|	ТаблицаЗаказа.Ссылка = &Заказ
			|	И (НЕ ТаблицаЗаказа.Отменено)
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|";
			
		// Заказ на внутреннее потребление
		ИначеЕсли ТипЗнч(Параметры.Заказ) = Тип("ДокументСсылка.ЗаказНаВнутреннееПотребление") Тогда
			
			Запрос.Текст =
			"ВЫБРАТЬ
			|	ТаблицаЗаказа.Ссылка КАК Заказ,
			|	ТаблицаЗаказа.Ссылка.Подразделение КАК Подразделение,
			|	ТаблицаЗаказа.Ссылка.Склад КАК Склад,
			|	ТаблицаЗаказа.КодСтроки КАК КодСтроки,
			|	ТаблицаЗаказа.НомерСтроки КАК НомерСтроки,
			|	ТаблицаЗаказа.Номенклатура КАК Номенклатура,
			|	ТаблицаЗаказа.Характеристика КАК Характеристика,
			|	ТаблицаЗаказа.Упаковка КАК Упаковка,
			|	ТаблицаЗаказа.ДатаОтгрузки КАК ДатаОтгрузки,
			|	ТаблицаЗаказа.Количество КАК Количество,
			|	0 КАК СрокПоставки,
			|	ТаблицаЗаказа.УказыватьСерии КАК УказыватьСерии,
			|	ТаблицаЗаказа.СтатусУказанияСерий КАК СтатусУказанияСерий,
			|	ЗНАЧЕНИЕ(Перечисление.ВариантыОбеспечения.ПустаяСсылка) КАК ВариантОбеспечения,
			|	ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка) КАК Назначение
			|ПОМЕСТИТЬ Товары
			|ИЗ
			|	Документ.ЗаказНаВнутреннееПотребление.Товары КАК ТаблицаЗаказа
			|ГДЕ
			|	ТаблицаЗаказа.Ссылка = &Заказ
			|	И (НЕ ТаблицаЗаказа.Отменено)
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|";
			
		// Заказ на перемещение
		ИначеЕсли ТипЗнч(Параметры.Заказ) = Тип("ДокументСсылка.ЗаказНаПеремещение") Тогда
			
			Запрос.Текст =
			"ВЫБРАТЬ
			|	ТаблицаЗаказа.Ссылка                  КАК Заказ,
			|	ТаблицаЗаказа.Ссылка.Подразделение КАК Подразделение,
			|	ТаблицаЗаказа.Ссылка.СкладОтправитель КАК Склад,
			|	ТаблицаЗаказа.КодСтроки               КАК КодСтроки,
			|	ТаблицаЗаказа.НомерСтроки             КАК НомерСтроки,
			|	ТаблицаЗаказа.Номенклатура            КАК Номенклатура,
			|	ТаблицаЗаказа.Характеристика          КАК Характеристика,
			|	ТаблицаЗаказа.Упаковка                КАК Упаковка,
			|	ТаблицаЗаказа.НачалоОтгрузки          КАК ДатаОтгрузки,
			|	ТаблицаЗаказа.Количество              КАК Количество,
			|	0                                     КАК СрокПоставки,
			|	ТаблицаЗаказа.УказыватьСерии          КАК УказыватьСерии,
			|	ТаблицаЗаказа.СтатусУказанияСерий     КАК СтатусУказанияСерий,
			|	ТаблицаЗаказа.ВариантОбеспечения      КАК ВариантОбеспечения,
			|	ВЫБОР
			|		КОГДА ТаблицаЗаказа.Назначение = ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка) ТОГДА 
			|			ТаблицаЗаказа.Ссылка.Назначение
			|		ИНАЧЕ
			|			ТаблицаЗаказа.Назначение
			|	КОНЕЦ                                 КАК Назначение
			|ПОМЕСТИТЬ Товары
			|ИЗ
			|	Документ.ЗаказНаПеремещение.Товары КАК ТаблицаЗаказа
			|ГДЕ
			|	ТаблицаЗаказа.Ссылка = &Заказ
			|	И (НЕ ТаблицаЗаказа.Отменено)
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|";
			
		// Заказ на сборку
		ИначеЕсли ТипЗнч(Параметры.Заказ) = Тип("ДокументСсылка.ЗаказНаСборку") Тогда
			
			Запрос.Текст =
			"ВЫБРАТЬ
			|	ТаблицаЗаказа.Ссылка                      КАК Заказ,
			|	ТаблицаЗаказа.Ссылка.Подразделение КАК Подразделение,
			|	ТаблицаЗаказа.Ссылка.Склад                КАК Склад,
			|	ТаблицаЗаказа.КодСтроки                   КАК КодСтроки,
			|	ТаблицаЗаказа.НомерСтроки                 КАК НомерСтроки,
			|	ТаблицаЗаказа.Номенклатура                КАК Номенклатура,
			|	ТаблицаЗаказа.Характеристика              КАК Характеристика,
			|	ТаблицаЗаказа.Упаковка                    КАК Упаковка,
			|	ТаблицаЗаказа.Ссылка.НачалоСборкиРазборки КАК ДатаОтгрузки,
			|	ТаблицаЗаказа.Количество                  КАК Количество,
			|	ТаблицаЗаказа.Ссылка.ТипОперации          КАК ТипОперации,
			|	0                                         КАК СрокПоставки,
			|	ТаблицаЗаказа.УказыватьСерии              КАК УказыватьСерии,
			|	ТаблицаЗаказа.СтатусУказанияСерий         КАК СтатусУказанияСерий,
			|	ТаблицаЗаказа.ВариантОбеспечения          КАК ВариантОбеспечения,
			|	ВЫБОР 
			|		КОГДА ТаблицаЗаказа.Ссылка.Назначение = ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка) ТОГДА
			|			ТаблицаЗаказа.Ссылка.НазначениеТовары
			|		ИНАЧЕ
			|			ТаблицаЗаказа.Ссылка.Назначение
			|	КОНЕЦ                                     КАК Назначение
			|ПОМЕСТИТЬ Товары
			|ИЗ
			|	Документ.ЗаказНаСборку.Товары КАК ТаблицаЗаказа
			|ГДЕ
			|	ТаблицаЗаказа.Ссылка = &Заказ
			|	И ТаблицаЗаказа.Ссылка.ТипОперации = ЗНАЧЕНИЕ(Перечисление.ТипыОперацийЗаказаНаСборку.СборкаИзКомплектующих)
			|
			|ОБЪЕДИНИТЬ ВСЕ
			|
			|ВЫБРАТЬ
			|	ТаблицаЗаказа.Ссылка                                    КАК Заказ,
			|	ТаблицаЗаказа.Ссылка.Подразделение                      КАК Подразделение,
			|	ТаблицаЗаказа.Склад                                     КАК Склад,
			|	1                                                       КАК КодСтроки,
			|	1                                                       КАК НомерСтроки,
			|	ТаблицаЗаказа.Номенклатура                              КАК Номенклатура,
			|	ТаблицаЗаказа.Характеристика                            КАК Характеристика,
			|	ТаблицаЗаказа.Упаковка                                  КАК Упаковка,
			|	ТаблицаЗаказа.НачалоСборкиРазборки                      КАК ДатаОтгрузки,
			|	ТаблицаЗаказа.Количество                                КАК Количество,
			|	ТаблицаЗаказа.Ссылка.ТипОперации                        КАК ТипОперации,
			|	0                                                       КАК СрокПоставки,
			|	ТаблицаЗаказа.УказыватьСерии                            КАК УказыватьСерии,
			|	ТаблицаЗаказа.СтатусУказанияСерий                       КАК СтатусУказанияСерий,
			|	ЗНАЧЕНИЕ(Перечисление.ВариантыОбеспечения.ПустаяСсылка) КАК ВариантОбеспечения,
			|	ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)            КАК Назначение
			|ИЗ
			|	Документ.ЗаказНаСборку КАК ТаблицаЗаказа
			|ГДЕ
			|	ТаблицаЗаказа.Ссылка = &Заказ
			|	И ТаблицаЗаказа.ТипОперации = ЗНАЧЕНИЕ(Перечисление.ТипыОперацийЗаказаНаСборку.РазборкаНаКомплектующие)
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|";
			
		КонецЕсли;
		
	КонецЕсли;
	
	// Заказ клиента
	Если ТипЗнч(Параметры.Заказ) = Тип("ДокументСсылка.ЗаказКлиента") Тогда
		
		// Помощник продаж
		Если Параметры.РассчитатьБезЗаказа Тогда
			
			Запрос.Текст = Запрос.Текст +
			"ВЫБРАТЬ РАЗРЕШЕННЫЕ
			|	Товары.Заказ КАК Заказ,
			|	Товары.Подразделение КАК Подразделение,
			|	Товары.Заказ.Дата КАК Дата,
			|	Товары.Склад КАК Склад,
			|	Товары.КодСтроки КАК КодСтроки,
			|	Товары.НомерСтроки КАК НомерСтроки,
			|	Товары.Номенклатура КАК Номенклатура,
			|	Товары.Характеристика КАК Характеристика,
			|	Товары.Упаковка КАК Упаковка,
			|	ЕСТЬNULL(Товары.Упаковка.Коэффициент, 1) КАК УпаковкаКоэффициент,
			|	Товары.Номенклатура.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
			|	Товары.ДатаОтгрузки КАК ДатаОтгрузки,
			|	Товары.Количество КАК Количество,
			|	ЛОЖЬ КАК ПринятКОбеспечению,
			|	Товары.СрокПоставки КАК СрокПоставки,
			|	Товары.УказыватьСерии КАК УказыватьСерии,
			|	Товары.СтатусУказанияСерий КАК СтатусУказанияСерий,
			|	Товары.ВариантОбеспечения КАК ВариантОбеспечения,
			|	Товары.Назначение КАК Назначение
			|ПОМЕСТИТЬ ТаблицаЗаказа
			|ИЗ
			|	Товары КАК Товары
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|";
			
		Иначе
			
			Запрос.Текст = Запрос.Текст +
			"ВЫБРАТЬ РАЗРЕШЕННЫЕ
			|	Товары.Заказ КАК Заказ,
			|	Товары.Подразделение КАК Подразделение,
			|	Товары.Заказ.Дата КАК Дата,
			|	Товары.Склад КАК Склад,
			|	Товары.КодСтроки КАК КодСтроки,
			|	Товары.НомерСтроки КАК НомерСтроки,
			|	Товары.Номенклатура КАК Номенклатура,
			|	Товары.Характеристика КАК Характеристика,
			|	Товары.Упаковка КАК Упаковка,
			|	ЕСТЬNULL(Товары.Упаковка.Коэффициент, 1) КАК УпаковкаКоэффициент,
			|	Товары.Номенклатура.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
			|	Товары.ДатаОтгрузки КАК ДатаОтгрузки,
			|	ЕСТЬNULL(ОстаткиПоЗаказу.ЗаказаноОстаток, 0) + Товары.Количество - ЕСТЬNULL(ДвиженияПоЗаказуЗаказано.Заказано, 0) - ЕСТЬNULL(ДвиженияПоЗаказуОтменено.Заказано, 0) КАК Количество,
			|	ВЫБОР
			|		КОГДА ЕСТЬNULL(ДвиженияПоЗаказуЗаказано.Заказано, 0) > 0
			|				И Товары.ДатаОтгрузки <> ДАТАВРЕМЯ(1, 1, 1)
			|				И Товары.Заказ.Статус В (ЗНАЧЕНИЕ(Перечисление.СтатусыЗаказовКлиентов.КОбеспечению), ЗНАЧЕНИЕ(Перечисление.СтатусыЗаказовКлиентов.КОтгрузке), ЗНАЧЕНИЕ(Перечисление.СтатусыЗаказовКлиентов.Закрыт))
			|			ТОГДА ИСТИНА
			|		ИНАЧЕ ЛОЖЬ
			|	КОНЕЦ КАК ПринятКОбеспечению,
			|	Товары.СрокПоставки КАК СрокПоставки,
			|	Товары.УказыватьСерии КАК УказыватьСерии,
			|	Товары.СтатусУказанияСерий КАК СтатусУказанияСерий,
			|	Товары.ВариантОбеспечения КАК ВариантОбеспечения,
			|	Товары.Назначение КАК Назначение
			|ПОМЕСТИТЬ ТаблицаЗаказа
			|ИЗ
			|	Товары КАК Товары
			|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ЗаказыКлиентов КАК ДвиженияПоЗаказуЗаказано
			|		ПО Товары.Заказ = ДвиженияПоЗаказуЗаказано.Регистратор
			|			И Товары.КодСтроки = ДвиженияПоЗаказуЗаказано.КодСтроки
			|			И Товары.Номенклатура = ДвиженияПоЗаказуЗаказано.Номенклатура
			|			И Товары.Характеристика = ДвиженияПоЗаказуЗаказано.Характеристика
			|			И (ДвиженияПоЗаказуЗаказано.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход))
			|			И (ДвиженияПоЗаказуЗаказано.Заказано > 0)
			|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ЗаказыКлиентов КАК ДвиженияПоЗаказуОтменено
			|		ПО Товары.Заказ = ДвиженияПоЗаказуОтменено.Регистратор
			|			И Товары.КодСтроки = ДвиженияПоЗаказуОтменено.КодСтроки
			|			И Товары.Номенклатура = ДвиженияПоЗаказуОтменено.Номенклатура
			|			И Товары.Характеристика = ДвиженияПоЗаказуОтменено.Характеристика
			|			И (ДвиженияПоЗаказуОтменено.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход))
			|			И (ДвиженияПоЗаказуОтменено.Заказано < 0)
			|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ЗаказыКлиентов.Остатки(, ЗаказКлиента = &Заказ) КАК ОстаткиПоЗаказу
			|		ПО Товары.КодСтроки = ОстаткиПоЗаказу.КодСтроки
			|			И Товары.Номенклатура = ОстаткиПоЗаказу.Номенклатура
			|			И Товары.Характеристика = ОстаткиПоЗаказу.Характеристика
			|ГДЕ
			|	ЕСТЬNULL(ОстаткиПоЗаказу.ЗаказаноОстаток, 0) + Товары.Количество - ЕСТЬNULL(ДвиженияПоЗаказуЗаказано.Заказано, 0) - ЕСТЬNULL(ДвиженияПоЗаказуОтменено.Заказано, 0) > 0
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|";
		
		КонецЕсли;
		
	// Заявка на возврат товаров от клиента
	ИначеЕсли ТипЗнч(Параметры.Заказ) = Тип("ДокументСсылка.ЗаявкаНаВозвратТоваровОтКлиента") Тогда
		
		Запрос.Текст = Запрос.Текст +
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	Товары.Заказ КАК Заказ,
		|	Товары.Подразделение КАК Подразделение,
		|	Товары.Заказ.Дата КАК Дата,
		|	Товары.Склад КАК Склад,
		|	Товары.КодСтроки КАК КодСтроки,
		|	Товары.НомерСтроки КАК НомерСтроки,
		|	Товары.Номенклатура КАК Номенклатура,
		|	Товары.Характеристика КАК Характеристика,
		|	Товары.Упаковка КАК Упаковка,
		|	ЕСТЬNULL(Товары.Упаковка.Коэффициент, 1) КАК УпаковкаКоэффициент,
		|	Товары.Номенклатура.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
		|	Товары.ДатаОтгрузки КАК ДатаОтгрузки,
		|	ЕСТЬNULL(ОстаткиПоЗаказу.ЗаказаноОстаток, 0) + Товары.Количество - ЕСТЬNULL(ДвиженияПоЗаказуЗаказано.Заказано, 0) - ЕСТЬNULL(ДвиженияПоЗаказуОтменено.Заказано, 0) КАК Количество,
		|	ВЫБОР
		|		КОГДА ЕСТЬNULL(ДвиженияПоЗаказуЗаказано.Заказано, 0) > 0
		|				И Товары.ДатаОтгрузки <> ДАТАВРЕМЯ(1, 1, 1)
		|				И Товары.Заказ.Статус В (ЗНАЧЕНИЕ(Перечисление.СтатусыЗаявокНаВозвратТоваровОтКлиентов.КОбеспечению), ЗНАЧЕНИЕ(Перечисление.СтатусыЗаявокНаВозвратТоваровОтКлиентов.КОтгрузке), ЗНАЧЕНИЕ(Перечисление.СтатусыЗаявокНаВозвратТоваровОтКлиентов.Выполнена))
		|			ТОГДА ИСТИНА
		|		ИНАЧЕ ЛОЖЬ
		|	КОНЕЦ КАК ПринятКОбеспечению,
		|	Товары.СрокПоставки КАК СрокПоставки,
		|	Товары.УказыватьСерии КАК УказыватьСерии,
		|	Товары.СтатусУказанияСерий КАК СтатусУказанияСерий,
		|	Товары.ВариантОбеспечения КАК ВариантОбеспечения,
		|	Товары.Назначение КАК Назначение
		|ПОМЕСТИТЬ ТаблицаЗаказа
		|ИЗ
		|	Товары КАК Товары
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ЗаказыКлиентов КАК ДвиженияПоЗаказуЗаказано
		|		ПО Товары.Заказ = ДвиженияПоЗаказуЗаказано.Регистратор
		|			И Товары.КодСтроки = ДвиженияПоЗаказуЗаказано.КодСтроки
		|			И Товары.Номенклатура = ДвиженияПоЗаказуЗаказано.Номенклатура
		|			И Товары.Характеристика = ДвиженияПоЗаказуЗаказано.Характеристика
		|			И (ДвиженияПоЗаказуЗаказано.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход))
		|			И (ДвиженияПоЗаказуЗаказано.Заказано > 0)
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ЗаказыКлиентов КАК ДвиженияПоЗаказуОтменено
		|		ПО Товары.Заказ = ДвиженияПоЗаказуОтменено.Регистратор
		|			И Товары.КодСтроки = ДвиженияПоЗаказуОтменено.КодСтроки
		|			И Товары.Номенклатура = ДвиженияПоЗаказуОтменено.Номенклатура
		|			И Товары.Характеристика = ДвиженияПоЗаказуОтменено.Характеристика
		|			И (ДвиженияПоЗаказуОтменено.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход))
		|			И (ДвиженияПоЗаказуОтменено.Заказано < 0)
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ЗаказыКлиентов.Остатки(, ЗаказКлиента = &Заказ) КАК ОстаткиПоЗаказу
		|		ПО Товары.КодСтроки = ОстаткиПоЗаказу.КодСтроки
		|			И Товары.Номенклатура = ОстаткиПоЗаказу.Номенклатура
		|			И Товары.Характеристика = ОстаткиПоЗаказу.Характеристика
		|ГДЕ
		|	ЕСТЬNULL(ОстаткиПоЗаказу.ЗаказаноОстаток, 0) + Товары.Количество - ЕСТЬNULL(ДвиженияПоЗаказуЗаказано.Заказано, 0) - ЕСТЬNULL(ДвиженияПоЗаказуОтменено.Заказано, 0) > 0
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|";
		
	// Заказ на внутреннее потребление
	ИначеЕсли ТипЗнч(Параметры.Заказ) = Тип("ДокументСсылка.ЗаказНаВнутреннееПотребление") Тогда
		
		Запрос.Текст = Запрос.Текст +
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	Товары.Заказ КАК Заказ,
		|	Товары.Подразделение КАК Подразделение,
		|	Товары.Заказ.Дата КАК Дата,
		|	Товары.Склад КАК Склад,
		|	Товары.КодСтроки КАК КодСтроки,
		|	Товары.НомерСтроки КАК НомерСтроки,
		|	Товары.Номенклатура КАК Номенклатура,
		|	Товары.Характеристика КАК Характеристика,
		|	Товары.Упаковка КАК Упаковка,
		|	ЕСТЬNULL(Товары.Упаковка.Коэффициент, 1) КАК УпаковкаКоэффициент,
		|	Товары.Номенклатура.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
		|	Товары.ДатаОтгрузки КАК ДатаОтгрузки,
		|	ЕСТЬNULL(ОстаткиПоЗаказу.ЗаказаноОстаток, 0) + Товары.Количество - ЕСТЬNULL(ДвиженияПоЗаказуЗаказано.Заказано, 0) - ЕСТЬNULL(ДвиженияПоЗаказуОтменено.Заказано, 0) КАК Количество,
		|	ВЫБОР
		|		КОГДА ЕСТЬNULL(ДвиженияПоЗаказуЗаказано.Заказано, 0) <> ЕСТЬNULL(ДвиженияПоЗаказуОтменено.Заказано, 0)
		|				И Товары.ДатаОтгрузки <> ДАТАВРЕМЯ(1, 1, 1)
		|			ТОГДА ИСТИНА
		|		ИНАЧЕ ЛОЖЬ
		|	КОНЕЦ КАК ПринятКОбеспечению,
		|	Товары.СрокПоставки КАК СрокПоставки,
		|	Товары.УказыватьСерии КАК УказыватьСерии,
		|	Товары.СтатусУказанияСерий КАК СтатусУказанияСерий,
		|	Товары.ВариантОбеспечения КАК ВариантОбеспечения,
		|	Товары.Назначение КАК Назначение
		|ПОМЕСТИТЬ ТаблицаЗаказа
		|ИЗ
		|	Товары КАК Товары
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ЗаказыНаВнутреннееПотребление КАК ДвиженияПоЗаказуЗаказано
		|		ПО Товары.Заказ = ДвиженияПоЗаказуЗаказано.Регистратор
		|			И Товары.КодСтроки = ДвиженияПоЗаказуЗаказано.КодСтроки
		|			И Товары.Номенклатура = ДвиженияПоЗаказуЗаказано.Номенклатура
		|			И Товары.Характеристика = ДвиженияПоЗаказуЗаказано.Характеристика
		|			И (ДвиженияПоЗаказуЗаказано.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход))
		|			И (ДвиженияПоЗаказуЗаказано.Заказано > 0)
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ЗаказыНаВнутреннееПотребление КАК ДвиженияПоЗаказуОтменено
		|		ПО Товары.Заказ = ДвиженияПоЗаказуОтменено.Регистратор
		|			И Товары.КодСтроки = ДвиженияПоЗаказуОтменено.КодСтроки
		|			И Товары.Номенклатура = ДвиженияПоЗаказуОтменено.Номенклатура
		|			И Товары.Характеристика = ДвиженияПоЗаказуОтменено.Характеристика
		|			И (ДвиженияПоЗаказуОтменено.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход))
		|			И (ДвиженияПоЗаказуОтменено.Заказано < 0)
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ЗаказыНаВнутреннееПотребление.Остатки(, ЗаказНаВнутреннееПотребление = &Заказ) КАК ОстаткиПоЗаказу
		|		ПО Товары.КодСтроки = ОстаткиПоЗаказу.КодСтроки
		|			И Товары.Номенклатура = ОстаткиПоЗаказу.Номенклатура
		|			И Товары.Характеристика = ОстаткиПоЗаказу.Характеристика
		|ГДЕ
		|	ЕСТЬNULL(ОстаткиПоЗаказу.ЗаказаноОстаток, 0) + Товары.Количество - ЕСТЬNULL(ДвиженияПоЗаказуЗаказано.Заказано, 0) - ЕСТЬNULL(ДвиженияПоЗаказуОтменено.Заказано, 0) > 0
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|";
		
	// Заказ на перемещение
	ИначеЕсли ТипЗнч(Параметры.Заказ) = Тип("ДокументСсылка.ЗаказНаПеремещение") Тогда
		
		Запрос.Текст = Запрос.Текст +
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	Товары.Заказ КАК Заказ,
		|	Товары.Подразделение КАК Подразделение,
		|	Товары.Заказ.Дата КАК Дата,
		|	Товары.Склад КАК Склад,
		|	Товары.КодСтроки КАК КодСтроки,
		|	Товары.НомерСтроки КАК НомерСтроки,
		|	Товары.Номенклатура КАК Номенклатура,
		|	Товары.Характеристика КАК Характеристика,
		|	Товары.Упаковка КАК Упаковка,
		|	ЕСТЬNULL(Товары.Упаковка.Коэффициент, 1) КАК УпаковкаКоэффициент,
		|	Товары.Номенклатура.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
		|	Товары.ДатаОтгрузки КАК ДатаОтгрузки,
		|	ЕСТЬNULL(ОстаткиПоЗаказу.ЗаказаноОстаток, 0) + Товары.Количество - ЕСТЬNULL(ДвиженияПоЗаказуЗаказано.Заказано, 0) - ЕСТЬNULL(ДвиженияПоЗаказуОтменено.Заказано, 0) КАК Количество,
		|	ВЫБОР
		|		КОГДА ЕСТЬNULL(ДвиженияПоЗаказуЗаказано.Заказано, 0) > 0
		|				И Товары.ДатаОтгрузки <> ДАТАВРЕМЯ(1, 1, 1)
		|			ТОГДА ИСТИНА
		|		ИНАЧЕ ЛОЖЬ
		|	КОНЕЦ КАК ПринятКОбеспечению,
		|	Товары.СрокПоставки КАК СрокПоставки,
		|	Товары.УказыватьСерии КАК УказыватьСерии,
		|	Товары.СтатусУказанияСерий КАК СтатусУказанияСерий,
		|	Товары.ВариантОбеспечения КАК ВариантОбеспечения,
		|	Товары.Назначение КАК Назначение
		|ПОМЕСТИТЬ ТаблицаЗаказа
		|ИЗ
		|	Товары КАК Товары
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ЗаказыНаПеремещение КАК ДвиженияПоЗаказуЗаказано
		|		ПО Товары.Заказ = ДвиженияПоЗаказуЗаказано.Регистратор
		|			И Товары.КодСтроки = ДвиженияПоЗаказуЗаказано.КодСтроки
		|			И Товары.Номенклатура = ДвиженияПоЗаказуЗаказано.Номенклатура
		|			И Товары.Характеристика = ДвиженияПоЗаказуЗаказано.Характеристика
		|			И (ДвиженияПоЗаказуЗаказано.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход))
		|			И (ДвиженияПоЗаказуЗаказано.Заказано > 0)
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ЗаказыНаПеремещение КАК ДвиженияПоЗаказуОтменено
		|		ПО Товары.Заказ = ДвиженияПоЗаказуОтменено.Регистратор
		|			И Товары.КодСтроки = ДвиженияПоЗаказуОтменено.КодСтроки
		|			И Товары.Номенклатура = ДвиженияПоЗаказуОтменено.Номенклатура
		|			И Товары.Характеристика = ДвиженияПоЗаказуОтменено.Характеристика
		|			И (ДвиженияПоЗаказуОтменено.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход))
		|			И (ДвиженияПоЗаказуОтменено.Заказано < 0)
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ЗаказыНаПеремещение.Остатки(, ЗаказНаПеремещение = &Заказ) КАК ОстаткиПоЗаказу
		|		ПО Товары.КодСтроки = ОстаткиПоЗаказу.КодСтроки
		|			И Товары.Номенклатура = ОстаткиПоЗаказу.Номенклатура
		|			И Товары.Характеристика = ОстаткиПоЗаказу.Характеристика
		|ГДЕ
		|	ЕСТЬNULL(ОстаткиПоЗаказу.ЗаказаноОстаток, 0) + Товары.Количество - ЕСТЬNULL(ДвиженияПоЗаказуЗаказано.Заказано, 0) - ЕСТЬNULL(ДвиженияПоЗаказуОтменено.Заказано, 0) > 0
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|";
		
	// Заказ на сборку
	ИначеЕсли ТипЗнч(Параметры.Заказ) = Тип("ДокументСсылка.ЗаказНаСборку") Тогда
		
		Запрос.Текст = Запрос.Текст +
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	Товары.Заказ КАК Заказ,
		|	Товары.Подразделение КАК Подразделение,
		|	Товары.Заказ.Дата КАК Дата,
		|	Товары.Склад КАК Склад,
		|	Товары.КодСтроки КАК КодСтроки,
		|	Товары.НомерСтроки КАК НомерСтроки,
		|	Товары.Номенклатура КАК Номенклатура,
		|	Товары.Характеристика КАК Характеристика,
		|	Товары.Упаковка КАК Упаковка,
		|	ЕСТЬNULL(Товары.Упаковка.Коэффициент, 1) КАК УпаковкаКоэффициент,
		|	Товары.Номенклатура.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
		|	Товары.ДатаОтгрузки КАК ДатаОтгрузки,
		|	ЕСТЬNULL(ОстаткиПоЗаказу.ЗаказаноОстаток, 0) + Товары.Количество - ЕСТЬNULL(ДвиженияПоЗаказуЗаказано.Заказано, 0) - ЕСТЬNULL(ДвиженияПоЗаказуОтменено.Заказано, 0) КАК Количество,
		|	ВЫБОР
		|		КОГДА ЕСТЬNULL(ДвиженияПоЗаказуЗаказано.Заказано, 0) > 0
		|				И Товары.ДатаОтгрузки <> ДАТАВРЕМЯ(1, 1, 1)
		|			ТОГДА ИСТИНА
		|		ИНАЧЕ ЛОЖЬ
		|	КОНЕЦ КАК ПринятКОбеспечению,
		|	Товары.СрокПоставки КАК СрокПоставки,
		|	Товары.УказыватьСерии КАК УказыватьСерии,
		|	Товары.СтатусУказанияСерий КАК СтатусУказанияСерий,
		|	Товары.ВариантОбеспечения КАК ВариантОбеспечения,
		|	Товары.Назначение КАК Назначение
		|ПОМЕСТИТЬ ТаблицаЗаказа
		|ИЗ
		|	Товары КАК Товары
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ЗаказыНаСборку КАК ДвиженияПоЗаказуЗаказано
		|		ПО Товары.Заказ = ДвиженияПоЗаказуЗаказано.Регистратор
		|			И Товары.КодСтроки = ДвиженияПоЗаказуЗаказано.КодСтроки
		|			И Товары.Номенклатура = ДвиженияПоЗаказуЗаказано.Номенклатура
		|			И Товары.Характеристика = ДвиженияПоЗаказуЗаказано.Характеристика
		|			И (ДвиженияПоЗаказуЗаказано.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход))
		|			И (ДвиженияПоЗаказуЗаказано.Заказано > 0)
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ЗаказыНаСборку КАК ДвиженияПоЗаказуОтменено
		|		ПО Товары.Заказ = ДвиженияПоЗаказуОтменено.Регистратор
		|			И Товары.КодСтроки = ДвиженияПоЗаказуОтменено.КодСтроки
		|			И Товары.Номенклатура = ДвиженияПоЗаказуОтменено.Номенклатура
		|			И Товары.Характеристика = ДвиженияПоЗаказуОтменено.Характеристика
		|			И (ДвиженияПоЗаказуОтменено.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход))
		|			И (ДвиженияПоЗаказуОтменено.Заказано < 0)
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ЗаказыНаСборку.Остатки(
		|				,
		|				ТипСборки = ЗНАЧЕНИЕ(Перечисление.ТипыДвиженияЗапасов.Отгрузка)
		|					И ЗаказНаСборку = &Заказ) КАК ОстаткиПоЗаказу
		|		ПО Товары.КодСтроки = ОстаткиПоЗаказу.КодСтроки
		|			И Товары.Номенклатура = ОстаткиПоЗаказу.Номенклатура
		|			И Товары.Характеристика = ОстаткиПоЗаказу.Характеристика
		|ГДЕ
		|	Товары.ТипОперации = ЗНАЧЕНИЕ(Перечисление.ТипыОперацийЗаказаНаСборку.СборкаИзКомплектующих)
		|	И ЕСТЬNULL(ОстаткиПоЗаказу.ЗаказаноОстаток, 0) + Товары.Количество - ЕСТЬNULL(ДвиженияПоЗаказуЗаказано.Заказано, 0) - ЕСТЬNULL(ДвиженияПоЗаказуОтменено.Заказано, 0) > 0
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	Товары.Заказ,
		|	Товары.Подразделение КАК Подразделение,
		|	Товары.Заказ.Дата,
		|	Товары.Склад,
		|	Товары.КодСтроки,
		|	Товары.НомерСтроки,
		|	Товары.Номенклатура,
		|	Товары.Характеристика,
		|	Товары.Упаковка,
		|	ЕСТЬNULL(Товары.Упаковка.Коэффициент, 1),
		|	Товары.Номенклатура.ЕдиницаИзмерения,
		|	Товары.ДатаОтгрузки,
		|	ЕСТЬNULL(ОстаткиПоЗаказу.ЗаказаноОстаток, 0) + Товары.Количество - ЕСТЬNULL(ДвиженияПоЗаказуЗаказано.Заказано, 0) - ЕСТЬNULL(ДвиженияПоЗаказуОтменено.Заказано, 0),
		|	ВЫБОР
		|		КОГДА ЕСТЬNULL(ДвиженияПоЗаказуЗаказано.Заказано, 0) > 0
		|				И Товары.ДатаОтгрузки <> ДАТАВРЕМЯ(1, 1, 1)
		|			ТОГДА ИСТИНА
		|		ИНАЧЕ ЛОЖЬ
		|	КОНЕЦ,
		|	Товары.СрокПоставки,
		|	Товары.УказыватьСерии,
		|	Товары.СтатусУказанияСерий,
		|	Товары.ВариантОбеспечения,
		|	Товары.Назначение
		|ИЗ
		|	Товары КАК Товары
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ЗаказыНаСборку КАК ДвиженияПоЗаказуЗаказано
		|		ПО Товары.Заказ = ДвиженияПоЗаказуЗаказано.Регистратор
		|			И Товары.КодСтроки = ДвиженияПоЗаказуЗаказано.КодСтроки
		|			И Товары.Номенклатура = ДвиженияПоЗаказуЗаказано.Номенклатура
		|			И Товары.Характеристика = ДвиженияПоЗаказуЗаказано.Характеристика
		|			И (ДвиженияПоЗаказуЗаказано.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход))
		|			И (ДвиженияПоЗаказуЗаказано.Заказано > 0)
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ЗаказыНаСборку КАК ДвиженияПоЗаказуОтменено
		|		ПО Товары.Заказ = ДвиженияПоЗаказуОтменено.Регистратор
		|			И Товары.КодСтроки = ДвиженияПоЗаказуОтменено.КодСтроки
		|			И Товары.Номенклатура = ДвиженияПоЗаказуОтменено.Номенклатура
		|			И Товары.Характеристика = ДвиженияПоЗаказуОтменено.Характеристика
		|			И (ДвиженияПоЗаказуОтменено.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход))
		|			И (ДвиженияПоЗаказуОтменено.Заказано < 0)
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ЗаказыНаСборку.Остатки(
		|				,
		|				ТипСборки = ЗНАЧЕНИЕ(Перечисление.ТипыДвиженияЗапасов.Отгрузка)
		|					И ЗаказНаСборку = &Заказ) КАК ОстаткиПоЗаказу
		|		ПО Товары.КодСтроки = ОстаткиПоЗаказу.КодСтроки
		|			И Товары.Номенклатура = ОстаткиПоЗаказу.Номенклатура
		|			И Товары.Характеристика = ОстаткиПоЗаказу.Характеристика
		|ГДЕ
		|	Товары.ТипОперации = ЗНАЧЕНИЕ(Перечисление.ТипыОперацийЗаказаНаСборку.РазборкаНаКомплектующие)
		|	И ЕСТЬNULL(ОстаткиПоЗаказу.ЗаказаноОстаток, 0) + Товары.Количество - ЕСТЬNULL(ДвиженияПоЗаказуЗаказано.Заказано, 0) - ЕСТЬNULL(ДвиженияПоЗаказуОтменено.Заказано, 0) > 0
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|";
		
	КонецЕсли;
	
	Запрос.Текст = Запрос.Текст +
	"ВЫБРАТЬ
	|	ТаблицаЗаказа.Заказ                                       КАК Заказ,
	|	ТаблицаЗаказа.НомерСтроки                                 КАК НомерСтроки,
	|	МАКСИМУМ(ТаблицаЗаказа.КодСтроки)                         КАК КодСтроки,
	|	МАКСИМУМ(ТаблицаЗаказа.Подразделение)                     КАК Подразделение,
	|	МАКСИМУМ(ТаблицаЗаказа.Дата)                              КАК Дата,
	|	МАКСИМУМ(ТаблицаЗаказа.Склад)                             КАК Склад,
	|	МАКСИМУМ(ТаблицаЗаказа.Номенклатура)                      КАК Номенклатура,
	|	МАКСИМУМ(ВЫБОР 
	|		КОГДА (ВЫРАЗИТЬ(ТаблицаЗаказа.Номенклатура КАК Справочник.Номенклатура)).ТипНоменклатуры
	|				В (ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Товар),ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара)) ТОГДА
	|			ИСТИНА
	|		ИНАЧЕ
	|			ЛОЖЬ
	|	КОНЕЦ)                                                    КАК ЭтоТовар,
	|	МАКСИМУМ(ВЫБОР 
	|		КОГДА (ВЫРАЗИТЬ(ТаблицаЗаказа.Номенклатура КАК Справочник.Номенклатура)).ТипНоменклатуры
	|				= ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Работа) ТОГДА
	|			ИСТИНА
	|		ИНАЧЕ
	|			ЛОЖЬ
	|	КОНЕЦ)                                                    КАК ЭтоРабота,
	|	МАКСИМУМ(ТаблицаЗаказа.Характеристика)                    КАК Характеристика,
	|	МАКСИМУМ(ТаблицаЗаказа.Упаковка)                          КАК Упаковка,
	|	МАКСИМУМ(ТаблицаЗаказа.УпаковкаКоэффициент)               КАК УпаковкаКоэффициент,
	|	МАКСИМУМ(ТаблицаЗаказа.Номенклатура.ЕдиницаИзмерения)     КАК ЕдиницаИзмерения,
	|	МАКСИМУМ(ТаблицаЗаказа.ДатаОтгрузки)                      КАК ДатаОтгрузки,
	|	МАКСИМУМ(ТаблицаЗаказа.Количество)                        КАК Количество,
	|	СУММА(ЕСТЬNULL(ГрафикОтгрузкиТекущийЗаказ.Количество, 0)) КАК КоличествоПредыдущиеСтрокиЗаказа,
	|	МАКСИМУМ(ТаблицаЗаказа.ПринятКОбеспечению)                КАК ПринятКОбеспечению,
	|	МАКСИМУМ(ТаблицаЗаказа.СрокПоставки)                      КАК СрокПоставки,
	|	МАКСИМУМ(ТаблицаЗаказа.УказыватьСерии)                    КАК УказыватьСерии,
	|	МАКСИМУМ(ТаблицаЗаказа.СтатусУказанияСерий)               КАК СтатусУказанияСерий,
	|	МАКСИМУМ(ТаблицаЗаказа.ВариантОбеспечения)                КАК ВариантОбеспечения,
	|	МАКСИМУМ(ТаблицаЗаказа.Назначение)                        КАК Назначение,
	|	МАКСИМУМ(ВЫБОР
	|				КОГДА ТаблицаЗаказа.ВариантОбеспечения <> ЗНАЧЕНИЕ(Перечисление.ВариантыОбеспечения.ПустаяСсылка) 
	|						И ТаблицаЗаказа.Назначение = ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка) ТОГДА
	|					ЛОЖЬ
	|				ИНАЧЕ
	|					ИСТИНА
	|			КОНЕЦ)                                            КАК НазначениеСформировано,
	|	МАКСИМУМ(ВЫБОР
	|				КОГДА ТаблицаЗаказа.ВариантОбеспечения = ЗНАЧЕНИЕ(Перечисление.ВариантыОбеспечения.ПустаяСсылка) ТОГДА
	|					ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
	|				ИНАЧЕ
	|					ТаблицаЗаказа.Назначение
	|			КОНЕЦ)                                            КАК НазначениеПоВарианту,
	|	МАКСИМУМ(ВЫБОР
	|				КОГДА ТаблицаЗаказа.ВариантОбеспечения = ЗНАЧЕНИЕ(Перечисление.ВариантыОбеспечения.ПодЗаказ) ТОГДА
	|					ТаблицаЗаказа.Назначение
	|				ИНАЧЕ 
	|					ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
	|			КОНЕЦ)                                            КАК НазначениеДляОстатков,
	|	МАКСИМУМ(ЕСТЬNULL(НастройкаХарактеристика.ВариантКонтроля, 
	|				 ЕСТЬNULL(НастройкаНоменклатура.ВариантКонтроля, 
	|						  НастройкаСклад.ВариантКонтроля)))   КАК ВариантКонтроля,
	|	МАКСИМУМ(ВЫБОР
	|			   КОГДА ЕСТЬNULL(НастройкаХарактеристика.ВариантКонтроля, 
	|			           ЕСТЬNULL(НастройкаНоменклатура.ВариантКонтроля, 
	|			               НастройкаСклад.ВариантКонтроля)) 
	|			         = ЗНАЧЕНИЕ(Перечисление.ВариантыКонтроля.ОстаткиСУчетомГрафика) 
	|			   И ТаблицаЗаказа.СрокПоставки > 0 ТОГДА 
	|			         ДОБАВИТЬКДАТЕ(&НачалоТекущегоДня, ДЕНЬ, ТаблицаЗаказа.СрокПоставки)
	|			ИНАЧЕ 
	|			   НЕОПРЕДЕЛЕНО
	|			КОНЕЦ)                                            КАК ГраницаГрафикаДоступностиСрокПоставки,
	|	МАКСИМУМ(ВЫБОР
	|			   КОГДА НЕ ЕСТЬNULL(НастройкаХарактеристика.ВариантКонтроля, 
	|			               ЕСТЬNULL(НастройкаНоменклатура.ВариантКонтроля, 
	|			                  НастройкаСклад.ВариантКонтроля)) 
	|			            = ЗНАЧЕНИЕ(Перечисление.ВариантыКонтроля.ОстаткиСУчетомГрафика) ТОГДА
	|			         &НачалоТекущегоДня
	|				КОГДА НЕ НастройкаХарактеристика.ВариантКонтроля ЕСТЬ NULL ТОГДА 
	|					ВЫБОР 
	|						КОГДА НастройкаХарактеристика.ГраницаГрафикаДоступности >= &НачалоТекущегоДня ТОГДА 
	|							ДОБАВИТЬКДАТЕ(НастройкаХарактеристика.ГраницаГрафикаДоступности, ДЕНЬ, 1)
	|						КОГДА НастройкаХарактеристика.СрокПоставки > 0 ТОГДА 
	|							ДОБАВИТЬКДАТЕ(&НачалоТекущегоДня, ДЕНЬ, НастройкаХарактеристика.СрокПоставки)
	|						ИНАЧЕ 
	|							&НачалоТекущегоДня
	|					КОНЕЦ
	|				КОГДА НЕ НастройкаНоменклатура.ВариантКонтроля ЕСТЬ NULL ТОГДА
	|					ВЫБОР 
	|						КОГДА НастройкаНоменклатура.ГраницаГрафикаДоступности >= &НачалоТекущегоДня ТОГДА 
	|							ДОБАВИТЬКДАТЕ(НастройкаНоменклатура.ГраницаГрафикаДоступности, ДЕНЬ, 1)
	|						КОГДА НастройкаНоменклатура.СрокПоставки > 0 ТОГДА 
	|							ДОБАВИТЬКДАТЕ(&НачалоТекущегоДня, ДЕНЬ, НастройкаНоменклатура.СрокПоставки)
	|						ИНАЧЕ 
	|							&НачалоТекущегоДня
	|					КОНЕЦ
	|				ИНАЧЕ 
	|					ВЫБОР 
	|						КОГДА НастройкаСклад.ГраницаГрафикаДоступности >= &НачалоТекущегоДня ТОГДА 
	|							ДОБАВИТЬКДАТЕ(НастройкаСклад.ГраницаГрафикаДоступности, ДЕНЬ, 1)
	|						КОГДА НастройкаСклад.СрокПоставки > 0 ТОГДА 
	|							ДОБАВИТЬКДАТЕ(&НачалоТекущегоДня, ДЕНЬ, НастройкаСклад.СрокПоставки)
	|						ИНАЧЕ 
	|							&НачалоТекущегоДня
	|					КОНЕЦ
	|			КОНЕЦ)                                            КАК ГраницаГрафикаДоступности
	|ПОМЕСТИТЬ ГрафикОтгрузкиПоЗаказуБезПредыдущихЗаказов
	|ИЗ
	|	ТаблицаЗаказа КАК ТаблицаЗаказа
	|		ЛЕВОЕ СОЕДИНЕНИЕ ТаблицаЗаказа КАК ГрафикОтгрузкиТекущийЗаказ
	|		ПО  ТаблицаЗаказа.Склад                                     =  ГрафикОтгрузкиТекущийЗаказ.Склад
	|			И ТаблицаЗаказа.Номенклатура                            =  ГрафикОтгрузкиТекущийЗаказ.Номенклатура
	|			И ТаблицаЗаказа.Характеристика                          =  ГрафикОтгрузкиТекущийЗаказ.Характеристика
	|			И (ТаблицаЗаказа.ВариантОбеспечения                     =  ГрафикОтгрузкиТекущийЗаказ.ВариантОбеспечения
	|				ИЛИ ТаблицаЗаказа.ВариантОбеспечения                = Значение(Перечисление.ВариантыОбеспечения.ПустаяСсылка)
	|					И ГрафикОтгрузкиТекущийЗаказ.ВариантОбеспечения = Значение(Перечисление.ВариантыОбеспечения.СоСклада))
	|			И (ГрафикОтгрузкиТекущийЗаказ.СтатусУказанияСерий = 10 
	|			   ИЛИ ТаблицаЗаказа.СтатусУказанияСерий <> 10)
	|			И ВЫБОР 
	|				КОГДА ГрафикОтгрузкиТекущийЗаказ.ВариантОбеспечения = ЗНАЧЕНИЕ(Перечисление.ВариантыОбеспечения.СоСклада) 
	|						И ТаблицаЗаказа.ВариантОбеспечения <> ЗНАЧЕНИЕ(Перечисление.ВариантыОбеспечения.СоСклада) ТОГДА
	|					ИСТИНА
	|				КОГДА ТаблицаЗаказа.ПринятКОбеспечению = ГрафикОтгрузкиТекущийЗаказ.ПринятКОбеспечению ТОГДА
	|					ТаблицаЗаказа.ДатаОтгрузки      > ГрафикОтгрузкиТекущийЗаказ.ДатаОтгрузки
	|					ИЛИ ТаблицаЗаказа.ДатаОтгрузки  = ГрафикОтгрузкиТекущийЗаказ.ДатаОтгрузки
	|						И ТаблицаЗаказа.НомерСтроки > ГрафикОтгрузкиТекущийЗаказ.НомерСтроки
	|				ИНАЧЕ 
	|					ГрафикОтгрузкиТекущийЗаказ.ПринятКОбеспечению
	|			КОНЕЦ
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.НастройкаКонтроляОстатков КАК НастройкаХарактеристика
	|		ПО ТаблицаЗаказа.Склад             = НастройкаХарактеристика.Склад
	|			И ТаблицаЗаказа.Номенклатура   = НастройкаХарактеристика.Номенклатура
	|			И ТаблицаЗаказа.Характеристика = НастройкаХарактеристика.Характеристика
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.НастройкаКонтроляОстатков КАК НастройкаНоменклатура
	|		ПО ТаблицаЗаказа.Склад             = НастройкаНоменклатура.Склад
	|			И ТаблицаЗаказа.Номенклатура   = НастройкаНоменклатура.Номенклатура
	|			И (НастройкаНоменклатура.Характеристика = ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка))
	|			И (НастройкаХарактеристика.Склад ЕСТЬ NULL )
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.НастройкаКонтроляОстатков КАК НастройкаСклад
	|		ПО ТаблицаЗаказа.Склад = НастройкаСклад.Склад
	|			И (НастройкаСклад.Номенклатура = ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка))
	|			И (НастройкаСклад.Характеристика = ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка))
	|			И (НастройкаХарактеристика.Склад ЕСТЬ NULL )
	|			И (НастройкаНоменклатура.Склад ЕСТЬ NULL )
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаЗаказа.Заказ,
	|	ТаблицаЗаказа.НомерСтроки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаЗаказа.Заказ                                           КАК Заказ,
	|	ТаблицаЗаказа.НомерСтроки                                     КАК НомерСтроки,
	|	МАКСИМУМ(ТаблицаЗаказа.Дата)                                  КАК Дата,
	|	МАКСИМУМ(ТаблицаЗаказа.Склад)                                 КАК Склад,
	|	МАКСИМУМ(ТаблицаЗаказа.КодСтроки)                             КАК КодСтроки,
	|	МАКСИМУМ(ТаблицаЗаказа.Номенклатура)                          КАК Номенклатура,
	|	МАКСИМУМ(ТаблицаЗаказа.Характеристика)                        КАК Характеристика,
	|	МАКСИМУМ(ТаблицаЗаказа.ЭтоТовар)                              КАК ЭтоТовар,
	|	МАКСИМУМ(ТаблицаЗаказа.Назначение)                            КАК Назначение,
	|	МАКСИМУМ(ТаблицаЗаказа.Подразделение)                         КАК Подразделение,
	|	МАКСИМУМ(ТаблицаЗаказа.НазначениеСформировано)                КАК НазначениеСформировано,
	|	МАКСИМУМ(ТаблицаЗаказа.НазначениеПоВарианту)                  КАК НазначениеПоВарианту,
	|	МАКСИМУМ(ТаблицаЗаказа.НазначениеДляОстатков)                 КАК НазначениеДляОстатков,
	|	МАКСИМУМ(ТаблицаЗаказа.ВариантОбеспечения)                    КАК ВариантОбеспечения,
	|	МАКСИМУМ(ТаблицаЗаказа.Упаковка)                              КАК Упаковка,
	|	МАКСИМУМ(ТаблицаЗаказа.УпаковкаКоэффициент)                   КАК УпаковкаКоэффициент,
	|	МАКСИМУМ(ТаблицаЗаказа.ЕдиницаИзмерения)                      КАК ЕдиницаИзмерения,
	|	МАКСИМУМ(ТаблицаЗаказа.ДатаОтгрузки)                          КАК ДатаОтгрузки,
	|	МАКСИМУМ(ТаблицаЗаказа.Количество)                            КАК Количество,
	|	МАКСИМУМ(ТаблицаЗаказа.КоличествоПредыдущиеСтрокиЗаказа)      КАК КоличествоПредыдущиеСтрокиЗаказа,
	|	МАКСИМУМ(ТаблицаЗаказа.ПринятКОбеспечению)                    КАК ПринятКОбеспечению,
	|	МАКСИМУМ(ТаблицаЗаказа.СрокПоставки)                          КАК СрокПоставки,
	|	МАКСИМУМ(ТаблицаЗаказа.УказыватьСерии)                        КАК УказыватьСерии,
	|	МАКСИМУМ(ТаблицаЗаказа.СтатусУказанияСерий)                   КАК СтатусУказанияСерий,
	|	МАКСИМУМ(ТаблицаЗаказа.ВариантКонтроля)                       КАК ВариантКонтроля,
	|	МАКСИМУМ(ТаблицаЗаказа.ГраницаГрафикаДоступностиСрокПоставки) КАК ГраницаГрафикаДоступностиСрокПоставки,
	|	МАКСИМУМ(ТаблицаЗаказа.ГраницаГрафикаДоступности)             КАК ГраницаГрафикаДоступности,
	|	СУММА(ВЫБОР
	|			КОГДА ТаблицаЗаказа.ВариантОбеспечения = ЗНАЧЕНИЕ(Перечисление.ВариантыОбеспечения.ПустаяСсылка)
	|				ТОГДА ЕСТЬNULL(ГрафикОтгрузкиПредыдущиеЗаказы.Количество, 0)
	|			ИНАЧЕ 
	|				ЕСТЬNULL(ГрафикОтгрузкиПредыдущиеЗаказы.КоличествоПодЗаказ, 0)
	|		КОНЕЦ) КАК КоличествоПредыдущиеЗаказы
	|ПОМЕСТИТЬ ГрафикОтгрузкиПоЗаказу
	|ИЗ
	|	ГрафикОтгрузкиПоЗаказуБезПредыдущихЗаказов КАК ТаблицаЗаказа
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ГрафикДвиженияТоваров КАК ГрафикОтгрузкиПредыдущиеЗаказы
	|		ПО  ТаблицаЗаказа.ЭтоТовар
	|			И (ГрафикОтгрузкиПредыдущиеЗаказы.ВидДвижения    =  ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход))
	|			И ТаблицаЗаказа.Склад                         =  ГрафикОтгрузкиПредыдущиеЗаказы.Склад
	|			И ТаблицаЗаказа.Номенклатура                  =  ГрафикОтгрузкиПредыдущиеЗаказы.Номенклатура
	|			И ТаблицаЗаказа.Характеристика                =  ГрафикОтгрузкиПредыдущиеЗаказы.Характеристика
	|			И ТаблицаЗаказа.ВариантОбеспечения            <> ЗНАЧЕНИЕ(Перечисление.ВариантыОбеспечения.СоСклада)
	|			И (ТаблицаЗаказа.ВариантОбеспечения           <> ЗНАЧЕНИЕ(Перечисление.ВариантыОбеспечения.ПодЗаказ) 
	|				ИЛИ ТаблицаЗаказа.НазначениеСформировано)
	|			И ТаблицаЗаказа.НазначениеПоВарианту          =  ГрафикОтгрузкиПредыдущиеЗаказы.Назначение
	|			И ТаблицаЗаказа.СтатусУказанияСерий           <> 10
	|			И ГрафикОтгрузкиПредыдущиеЗаказы.Регистратор  <> &Заказ
	|			И (ТаблицаЗаказа.ДатаОтгрузки      > ГрафикОтгрузкиПредыдущиеЗаказы.ДатаСобытия
	|				ИЛИ ТаблицаЗаказа.ДатаОтгрузки = ГрафикОтгрузкиПредыдущиеЗаказы.ДатаСобытия
	|					И ТаблицаЗаказа.Дата       > ГрафикОтгрузкиПредыдущиеЗаказы.Регистратор.Дата
	|				ИЛИ ТаблицаЗаказа.ДатаОтгрузки = ГрафикОтгрузкиПредыдущиеЗаказы.ДатаСобытия
	|					И ТаблицаЗаказа.Дата       = ГрафикОтгрузкиПредыдущиеЗаказы.Регистратор.Дата
	|					И ТаблицаЗаказа.Заказ      > ГрафикОтгрузкиПредыдущиеЗаказы.Регистратор
	|				ИЛИ НЕ ТаблицаЗаказа.ПринятКОбеспечению)
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаЗаказа.Заказ,
	|	ТаблицаЗаказа.НомерСтроки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ГрафикОтгрузкиПоЗаказу.Склад КАК Склад,
	|	ГрафикОтгрузкиПоЗаказу.Номенклатура КАК Номенклатура,
	|	ГрафикОтгрузкиПоЗаказу.Характеристика КАК Характеристика,
	|	ЕСТЬNULL(МИНИМУМ(КалендарныеГрафики.ДатаГрафика), &НачалоТекущегоДня) КАК ДатаПоставки
	|ПОМЕСТИТЬ БлижайшиеДатыПоставки
	|ИЗ
	|	ГрафикОтгрузкиПоЗаказу КАК ГрафикОтгрузкиПоЗаказу
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ВариантыОбеспеченияТоварами КАК ВариантыОбеспеченияТоварамиХарактеристика
	|		ПО  ГрафикОтгрузкиПоЗаказу.ЭтоТовар
	|			И ГрафикОтгрузкиПоЗаказу.Склад          = ВариантыОбеспеченияТоварамиХарактеристика.Склад
	|			И ГрафикОтгрузкиПоЗаказу.Номенклатура   = ВариантыОбеспеченияТоварамиХарактеристика.Номенклатура
	|			И ГрафикОтгрузкиПоЗаказу.Характеристика = ВариантыОбеспеченияТоварамиХарактеристика.Характеристика
	|			И (ВариантыОбеспеченияТоварамиХарактеристика.РеквизитДопУпорядочивания = 1)
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ВариантыОбеспеченияТоварами КАК ВариантыОбеспеченияТоварамиНоменклатура
	|		ПО  ГрафикОтгрузкиПоЗаказу.ЭтоТовар
	|			И ГрафикОтгрузкиПоЗаказу.Склад          = ВариантыОбеспеченияТоварамиНоменклатура.Склад
	|			И ГрафикОтгрузкиПоЗаказу.Номенклатура   = ВариантыОбеспеченияТоварамиНоменклатура.Номенклатура
	|			И (ВариантыОбеспеченияТоварамиНоменклатура.Характеристика = ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка))
	|			И (ВариантыОбеспеченияТоварамиХарактеристика.СпособОбеспеченияПотребностей ЕСТЬ NULL )
	|			И (ВариантыОбеспеченияТоварамиНоменклатура.РеквизитДопУпорядочивания   = 1)
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ВариантыОбеспеченияТоварами КАК ВариантыОбеспеченияТоварамиСклад
	|		ПО ГрафикОтгрузкиПоЗаказу.ЭтоТовар
	|			И ГрафикОтгрузкиПоЗаказу.Склад             = ВариантыОбеспеченияТоварамиСклад.Склад
	|			И (ВариантыОбеспеченияТоварамиСклад.Номенклатура         = ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка))
	|			И (ВариантыОбеспеченияТоварамиСклад.Характеристика       = ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка))
	|			И (ВариантыОбеспеченияТоварамиХарактеристика.СпособОбеспеченияПотребностей ЕСТЬ NULL )
	|			И (ВариантыОбеспеченияТоварамиНоменклатура.СпособОбеспеченияПотребностей   ЕСТЬ NULL )
	|			И (ВариантыОбеспеченияТоварамиСклад.РеквизитДопУпорядочивания         = 1)
	|		ЛЕВОЕ СОЕДИНЕНИЕ Константы КАК Константы
	|		ПО ГрафикОтгрузкиПоЗаказу.ЭтоТовар
	|			И (ЕСТЬNULL(ВариантыОбеспеченияТоварамиХарактеристика.СпособОбеспеченияПотребностей.Календарь, 
	|				ЕСТЬNULL(ВариантыОбеспеченияТоварамиНоменклатура.СпособОбеспеченияПотребностей.Календарь, 
	|					ЕСТЬNULL(ВариантыОбеспеченияТоварамиСклад.СпособОбеспеченияПотребностей.Календарь, 
	|						ЗНАЧЕНИЕ(Справочник.Календари.ПустаяСсылка)))) = ЗНАЧЕНИЕ(Справочник.Календари.ПустаяСсылка))
	|			И (ВЫРАЗИТЬ(ГрафикОтгрузкиПоЗаказу.Склад КАК Справочник.Склады).Календарь = ЗНАЧЕНИЕ(Справочник.Календари.ПустаяСсылка))
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КалендарныеГрафики КАК КалендарныеГрафики
	|		ПО ГрафикОтгрузкиПоЗаказу.ЭтоТовар
	|			И (КалендарныеГрафики.ДеньВключенВГрафик)
	|			И (ВЫБОР
	|				КОГДА ЕСТЬNULL(ВариантыОбеспеченияТоварамиХарактеристика.СпособОбеспеченияПотребностей.Календарь, 
	|						ЕСТЬNULL(ВариантыОбеспеченияТоварамиНоменклатура.СпособОбеспеченияПотребностей.Календарь, 
	|							ВариантыОбеспеченияТоварамиСклад.СпособОбеспеченияПотребностей.Календарь)) ЕСТЬ NULL ТОГДА
	|					ВЫБОР
	|						КОГДА ВЫРАЗИТЬ(ГрафикОтгрузкиПоЗаказу.Склад КАК Справочник.Склады).Календарь = ЗНАЧЕНИЕ(Справочник.Календари.ПустаяСсылка) ТОГДА 
	|							Константы.ОсновнойКалендарьПредприятия
	|						ИНАЧЕ 
	|							ВЫРАЗИТЬ(ГрафикОтгрузкиПоЗаказу.Склад КАК Справочник.Склады).Календарь
	|					КОНЕЦ
	|				ИНАЧЕ 
	|					ЕСТЬNULL(ВариантыОбеспеченияТоварамиХарактеристика.СпособОбеспеченияПотребностей.Календарь, 
	|						ЕСТЬNULL(ВариантыОбеспеченияТоварамиНоменклатура.СпособОбеспеченияПотребностей.Календарь, 
	|							ВариантыОбеспеченияТоварамиСклад.СпособОбеспеченияПотребностей.Календарь))
	|			КОНЕЦ = КалендарныеГрафики.Календарь)
	|			И (КалендарныеГрафики.ДатаГрафика >= ДОБАВИТЬКДАТЕ(&НачалоТекущегоДня, ДЕНЬ, 
	|											ЕСТЬNULL(ВариантыОбеспеченияТоварамиХарактеристика.СпособОбеспеченияПотребностей.СрокИсполненияЗаказа, 
	|												ЕСТЬNULL(ВариантыОбеспеченияТоварамиНоменклатура.СпособОбеспеченияПотребностей.СрокИсполненияЗаказа, 
	|													ЕСТЬNULL(ВариантыОбеспеченияТоварамиСклад.СпособОбеспеченияПотребностей.СрокИсполненияЗаказа, 0)))))
	|
	|СГРУППИРОВАТЬ ПО
	|	ГрафикОтгрузкиПоЗаказу.Склад,
	|	ГрафикОтгрузкиПоЗаказу.Номенклатура,
	|	ГрафикОтгрузкиПоЗаказу.Характеристика
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ 
	|	НаборДанных.Склад                   КАК Склад,
	|	НаборДанных.Номенклатура            КАК Номенклатура,
	|	НаборДанных.Характеристика          КАК Характеристика,
	|	НаборДанных.Назначение              КАК Назначение,
	|	СУММА(НаборДанных.ВНаличии)         КАК ВНаличии,
	|	СУММА(НаборДанных.ВГрафике)         КАК ВГрафике
	|
	|ПОМЕСТИТЬ СвободныеОстатки
	|ИЗ(ВЫБРАТЬ
	|		СвободныеОстатки.Склад                       КАК Склад,
	|		СвободныеОстатки.Номенклатура                КАК Номенклатура,
	|		СвободныеОстатки.Характеристика              КАК Характеристика,
	|		ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка) КАК Назначение,
	|		СвободныеОстатки.ВНаличииОстаток             КАК ВНаличии,
	|		ЕСТЬNULL(КонтрольПоГрафику.Количество, 0)    КАК ВГрафике
	|	ИЗ
	|		РегистрНакопления.СвободныеОстатки.Остатки(
	|				,
	|				(Склад, Номенклатура, Характеристика) В
	|				(ВЫБРАТЬ
	|					ГрафикОтгрузкиПоЗаказу.Склад           КАК Склад,
	|					ГрафикОтгрузкиПоЗаказу.Номенклатура    КАК Номенклатура,
	|					ГрафикОтгрузкиПоЗаказу.Характеристика  КАК Характеристика
	|				ИЗ
	|					ГрафикОтгрузкиПоЗаказу)) КАК СвободныеОстатки
	|		ЛЕВОЕ СОЕДИНЕНИЕ (
	|			ВЫБРАТЬ
	|				График.Склад                               КАК Склад,
	|				График.Номенклатура                        КАК Номенклатура,
	|				График.Характеристика                      КАК Характеристика,
	|				-МИНИМУМ(График.КоличествоКонечныйОстаток) КАК Количество
	|			ИЗ
	|				РегистрНакопления.ГрафикДвиженияТоваров.ОстаткиИОбороты(
	|						КОНЕЦПЕРИОДА(&НачалоТекущегоДня, ДЕНЬ),
	|						,
	|						День,
	|						ДвиженияИГраницыПериода,
	|						(Склад, Номенклатура, Характеристика, Назначение) В
	|						(ВЫБРАТЬ
	|							ГрафикОтгрузкиПоЗаказу.Склад                 КАК Склад,
	|							ГрафикОтгрузкиПоЗаказу.Номенклатура          КАК Номенклатура,
	|							ГрафикОтгрузкиПоЗаказу.Характеристика        КАК Характеристика,
	|							ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка) КАК Назначение
	|						ИЗ
	|							ГрафикОтгрузкиПоЗаказу
	|						ГДЕ
	|							ГрафикОтгрузкиПоЗаказу.ВариантОбеспечения 
	|							= ЗНАЧЕНИЕ(Перечисление.ВариантыОбеспечения.ПустаяСсылка))) КАК График
	|				
	|				ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.НастройкаКонтроляОстатков КАК НастройкаХарактеристика
	|				ПО График.Склад             = НастройкаХарактеристика.Склад
	|					И График.Номенклатура   = НастройкаХарактеристика.Номенклатура
	|					И График.Характеристика = НастройкаХарактеристика.Характеристика
	|				ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.НастройкаКонтроляОстатков КАК НастройкаНоменклатура
	|				ПО График.Склад             = НастройкаНоменклатура.Склад
	|					И График.Номенклатура   = НастройкаНоменклатура.Номенклатура
	|					И (НастройкаНоменклатура.Характеристика = ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка))
	|					И (НастройкаХарактеристика.Склад ЕСТЬ NULL )
	|				ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.НастройкаКонтроляОстатков КАК НастройкаСклад
	|				ПО График.Склад             = НастройкаСклад.Склад
	|					И (НастройкаСклад.Номенклатура         = ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка))
	|					И (НастройкаСклад.Характеристика       = ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка))
	|					И (НастройкаХарактеристика.Склад ЕСТЬ NULL )
	|					И (НастройкаНоменклатура.Склад   ЕСТЬ NULL )
	|			ГДЕ
	|				ВЫБОР
	|					КОГДА ЕСТЬNULL(НастройкаХарактеристика.ВариантКонтроля, 
	|							ЕСТЬNULL(НастройкаНоменклатура.ВариантКонтроля, 
	|								НастройкаСклад.ВариантКонтроля)) <> ЗНАЧЕНИЕ(Перечисление.ВариантыКонтроля.ОстаткиСУчетомГрафика) ТОГДА 
	|						ЛОЖЬ
	|					КОГДА НЕ НастройкаХарактеристика.ВариантКонтроля ЕСТЬ NULL ТОГДА 
	|						ВЫБОР
	|							КОГДА НастройкаХарактеристика.ГраницаГрафикаДоступности >= &НачалоТекущегоДня ТОГДА 
	|								График.Период <= НастройкаХарактеристика.ГраницаГрафикаДоступности
	|							КОГДА НастройкаХарактеристика.СрокПоставки > 0 ТОГДА 
	|								График.Период <= ДОБАВИТЬКДАТЕ(&НачалоТекущегоДня, ДЕНЬ, НастройкаХарактеристика.СрокПоставки - 1)
	|							ИНАЧЕ ЛОЖЬ
	|						КОНЕЦ
	|					КОГДА НЕ НастройкаНоменклатура.ВариантКонтроля ЕСТЬ NULL ТОГДА 
	|						ВЫБОР
	|							КОГДА НастройкаНоменклатура.ГраницаГрафикаДоступности >= &НачалоТекущегоДня ТОГДА 
	|								График.Период <= НастройкаНоменклатура.ГраницаГрафикаДоступности
	|							КОГДА НастройкаНоменклатура.СрокПоставки > 0 ТОГДА 
	|								График.Период <= ДОБАВИТЬКДАТЕ(&НачалоТекущегоДня, ДЕНЬ, НастройкаНоменклатура.СрокПоставки - 1)
	|							ИНАЧЕ ЛОЖЬ
	|						КОНЕЦ
	|					ИНАЧЕ 
	|						ВЫБОР
	|							КОГДА НастройкаСклад.ГраницаГрафикаДоступности >= &НачалоТекущегоДня
	|								ТОГДА График.Период <= НастройкаСклад.ГраницаГрафикаДоступности
	|							КОГДА НастройкаСклад.СрокПоставки > 0
	|								ТОГДА График.Период <= ДОБАВИТЬКДАТЕ(&НачалоТекущегоДня, ДЕНЬ, НастройкаСклад.СрокПоставки - 1)
	|							ИНАЧЕ ЛОЖЬ
	|						КОНЕЦ
	|				КОНЕЦ
	|				И График.КоличествоКонечныйОстаток < 0
	|			СГРУППИРОВАТЬ ПО
	|				График.Номенклатура,
	|				График.Характеристика,
	|				График.Склад) КАК КонтрольПоГрафику
	|		ПО СвободныеОстатки.Склад              = КонтрольПоГрафику.Склад
	|			И СвободныеОстатки.Номенклатура    = КонтрольПоГрафику.Номенклатура
	|			И СвободныеОстатки.Характеристика  = КонтрольПоГрафику.Характеристика
	|
	|	ОБЪЕДИНИТЬ ВСЕ
	|
	|	ВЫБРАТЬ
	|		ОбеспечениеЗаказовОстатки.Склад                  КАК Склад,
	|		ОбеспечениеЗаказовОстатки.Номенклатура           КАК Номенклатура,
	|		ОбеспечениеЗаказовОстатки.Характеристика         КАК Характеристика,
	|		ОбеспечениеЗаказовОстатки.Назначение             КАК Назначение,
	|		ОбеспечениеЗаказовОстатки.НаличиеПодЗаказОстаток КАК ВНаличии,
	|		ЕСТЬNULL(КонтрольПоГрафику.Количество, 0)        КАК ВГрафике
	|	ИЗ
	|		РегистрНакопления.ОбеспечениеЗаказов.Остатки(
	|			,
	|			(Склад, Номенклатура, Характеристика, Назначение) В
	|			(ВЫБРАТЬ
	|				ГрафикОтгрузкиПоЗаказу.Склад                 КАК Склад,
	|				ГрафикОтгрузкиПоЗаказу.Номенклатура          КАК Номенклатура,
	|				ГрафикОтгрузкиПоЗаказу.Характеристика        КАК Характеристика,
	|				ГрафикОтгрузкиПоЗаказу.НазначениеПоВарианту  КАК Назначение
	|			ИЗ
	|				ГрафикОтгрузкиПоЗаказу)) КАК ОбеспечениеЗаказовОстатки
	|		ЛЕВОЕ СОЕДИНЕНИЕ (
	|			ВЫБРАТЬ
	|				График.Склад                                           КАК Склад,
	|				График.Номенклатура                                    КАК Номенклатура,
	|				График.Характеристика                                  КАК Характеристика,
	|				График.Назначение                                      КАК Назначение,
	|				-МИНИМУМ(График.КоличествоПодЗаказКонечныйОстаток)     КАК Количество
	|			ИЗ
	|				РегистрНакопления.ГрафикДвиженияТоваров.ОстаткиИОбороты(
	|					КОНЕЦПЕРИОДА(&НачалоТекущегоДня, ДЕНЬ),
	|					,
	|					День,
	|					ДвиженияИГраницыПериода,
	|					(Склад, Номенклатура, Характеристика, Назначение) В
	|					(ВЫБРАТЬ
	|						ГрафикОтгрузкиПоЗаказу.Склад             КАК Склад,
	|						ГрафикОтгрузкиПоЗаказу.Номенклатура      КАК Номенклатура,
	|						ГрафикОтгрузкиПоЗаказу.Характеристика    КАК Характеристика,
	|						ГрафикОтгрузкиПоЗаказу.Назначение        КАК Назначение
	|					ИЗ
	|						ГрафикОтгрузкиПоЗаказу
	|					ГДЕ
	|						ГрафикОтгрузкиПоЗаказу.ВариантОбеспечения 
	|						= ЗНАЧЕНИЕ(Перечисление.ВариантыОбеспечения.ПодЗаказ))) КАК График
	|			ГДЕ
	|				График.КоличествоПодЗаказКонечныйОстаток < 0
	|		
	|			СГРУППИРОВАТЬ ПО
	|				График.Номенклатура,
	|				График.Характеристика,
	|				График.Склад,
	|				График.Назначение) КАК КонтрольПоГрафику
	|		ПО ОбеспечениеЗаказовОстатки.Склад             = КонтрольПоГрафику.Склад
	|			И ОбеспечениеЗаказовОстатки.Номенклатура   = КонтрольПоГрафику.Номенклатура
	|			И ОбеспечениеЗаказовОстатки.Характеристика = КонтрольПоГрафику.Характеристика
	|			И ОбеспечениеЗаказовОстатки.Назначение     = КонтрольПоГрафику.Назначение
	|
	|	ОБЪЕДИНИТЬ ВСЕ
	|
	|	ВЫБРАТЬ
	|		СторноНаличие.Склад                          КАК Склад,
	|		СторноНаличие.Номенклатура                   КАК Номенклатура,
	|		СторноНаличие.Характеристика                 КАК Характеристика,
	|		ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка) КАК Назначение,
	|		Сумма(СторноНаличие.НаличиеСоСклада)         КАК ВНаличии,
	|		0                                            КАК ВГрафике
	|
	|	ИЗ 
	|		РегистрНакопления.ОбеспечениеЗаказов КАК СторноНаличие
	|	ГДЕ 
	|		Регистратор = &Заказ
	|	СГРУППИРОВАТЬ ПО 
	|		СторноНаличие.Склад,
	|		СторноНаличие.Номенклатура,
	|		СторноНаличие.Характеристика) КАК НаборДанных
	|СГРУППИРОВАТЬ ПО 
	|	НаборДанных.Склад,
	|	НаборДанных.Номенклатура,
	|	НаборДанных.Характеристика,
	|	НаборДанных.Назначение
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ГрафикПоступления.Склад           КАК Склад,
	|	ГрафикПоступления.Номенклатура    КАК Номенклатура,
	|	ГрафикПоступления.Характеристика  КАК Характеристика,
	|	ГрафикПоступления.Назначение      КАК Назначение,
	|	ГрафикПоступления.ДатаСобытия     КАК ДатаСобытия,
	|	ВЫБОР
	|		КОГДА ГрафикПоступления.Назначение = ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка) ТОГДА 
	|			ГрафикПоступления.Количество
	|		ИНАЧЕ 
	|			ГрафикПоступления.КоличествоПодЗаказ
	|	КОНЕЦ                             КАК Количество
	|ПОМЕСТИТЬ ВТГрафикПоступления
	|ИЗ
	|	РегистрНакопления.ГрафикДвиженияТоваров КАК ГрафикПоступления
	|ГДЕ
	|	(ГрафикПоступления.Склад, ГрафикПоступления.Номенклатура, ГрафикПоступления.Характеристика, ГрафикПоступления.Назначение) В
	|			(ВЫБРАТЬ
	|				ГрафикОтгрузкиПоЗаказу.Склад                КАК Склад,
	|				ГрафикОтгрузкиПоЗаказу.Номенклатура         КАК Номенклатура,
	|				ГрафикОтгрузкиПоЗаказу.Характеристика       КАК Характеристика,
	|				ГрафикОтгрузкиПоЗаказу.НазначениеПоВарианту КАК Назначение
	|			ИЗ
	|				ГрафикОтгрузкиПоЗаказу)
	|	И ГрафикПоступления.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|;
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ГрафикПоступления.Склад                                            КАК Склад,
	|	ГрафикПоступления.Номенклатура                                     КАК Номенклатура,
	|	ГрафикПоступления.Характеристика                                   КАК Характеристика,
	|	ГрафикПоступления.Назначение                                       КАК Назначение,
	|	ВЫБОР
	|		КОГДА ГрафикПоступления.ДатаСобытия < &НачалоТекущегоДня ТОГДА 
	|			&НачалоТекущегоДня
	|		ИНАЧЕ 
	|			ГрафикПоступления.ДатаСобытия
	|	КОНЕЦ                                                              КАК ДатаСобытия,
	|	СУММА(ГрафикПоступленияПредыдущиеДни.Количество)                   КАК КоличествоВсего,
	|	СУММА(ВЫБОР
	|			КОГДА ГрафикПоступления.ДатаСобытия >= ГрафикПоступленияПредыдущиеДни.ДатаСобытия ТОГДА 
	|				ГрафикПоступленияПредыдущиеДни.Количество
	|			ИНАЧЕ 
	|			0
	|		КОНЕЦ)                                                         КАК КоличествоДатаСобытия,
	|	СУММА(ВЫБОР
	|			КОГДА ГрафикПоступления.ДатаСобытия > ГрафикПоступленияПредыдущиеДни.ДатаСобытия ТОГДА 
	|				ГрафикПоступленияПредыдущиеДни.Количество
	|			ИНАЧЕ 
	|				0
	|		КОНЕЦ)                                                         КАК КоличествоПредыдущиеДни
	|ПОМЕСТИТЬ ГрафикПоступления
	|ИЗ
	|	ВТГрафикПоступления КАК ГрафикПоступления
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТГрафикПоступления КАК ГрафикПоступленияПредыдущиеДни
	|		ПО ГрафикПоступления.Склад             = ГрафикПоступленияПредыдущиеДни.Склад
	|			И ГрафикПоступления.Номенклатура   = ГрафикПоступленияПредыдущиеДни.Номенклатура
	|			И ГрафикПоступления.Характеристика = ГрафикПоступленияПредыдущиеДни.Характеристика
	|			И ГрафикПоступления.Назначение     = ГрафикПоступленияПредыдущиеДни.Назначение
	|
	|СГРУППИРОВАТЬ ПО
	|	ГрафикПоступления.Склад,
	|	ГрафикПоступления.Номенклатура,
	|	ГрафикПоступления.Характеристика,
	|	ГрафикПоступления.Назначение,
	|	ГрафикПоступления.ДатаСобытия
	|;
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ГрафикОтгрузкиПоЗаказу.НомерСтроки                                     КАК НомерСтроки,
	|	МАКСИМУМ(ГрафикОтгрузкиПоЗаказу.КодСтроки)                             КАК КодСтроки,
	|	МАКСИМУМ(ВЫРАЗИТЬ(ГрафикОтгрузкиПоЗаказу.Номенклатура 
	|							КАК Справочник.Номенклатура).Код)              КАК Код,
	|	МАКСИМУМ(ВЫРАЗИТЬ(ГрафикОтгрузкиПоЗаказу.Номенклатура 
	|							КАК Справочник.Номенклатура).Артикул)          КАК Артикул,
	|	МАКСИМУМ(ГрафикОтгрузкиПоЗаказу.Упаковка)                              КАК Упаковка,
	|	МАКСИМУМ(ГрафикОтгрузкиПоЗаказу.УпаковкаКоэффициент)                   КАК УпаковкаКоэффициент,
	|	МАКСИМУМ(ГрафикОтгрузкиПоЗаказу.ЕдиницаИзмерения)                      КАК ЕдиницаИзмерения,
	|	МАКСИМУМ(ГрафикОтгрузкиПоЗаказу.Назначение)                            КАК Назначение,
	
	|	МАКСИМУМ(ГрафикОтгрузкиПоЗаказу.Склад)                                 КАК Склад,
	|	МАКСИМУМ(ГрафикОтгрузкиПоЗаказу.Подразделение)                         КАК Подразделение,
	|	МАКСИМУМ(ГрафикОтгрузкиПоЗаказу.Номенклатура)                          КАК Номенклатура,
	|	МАКСИМУМ(ГрафикОтгрузкиПоЗаказу.Характеристика)                        КАК Характеристика,
	|	МАКСИМУМ(ГрафикОтгрузкиПоЗаказу.ВариантОбеспечения)                    КАК ВариантОбеспечения,
	|	МАКСИМУМ(ГрафикОтгрузкиПоЗаказу.ДатаОтгрузки)                          КАК ДатаОтгрузки,
	|	МАКСИМУМ(ГрафикОтгрузкиПоЗаказу.Количество)                            КАК Количество,
	
	|	МАКСИМУМ(БлижайшиеДатыПоставки.ДатаПоставки)                           КАК БлижайшаяДатаПоставки,
	|	МАКСИМУМ(ГрафикОтгрузкиПоЗаказу.ГраницаГрафикаДоступности)             КАК ГраницаГрафикаДоступности,
	|	МАКСИМУМ(ГрафикОтгрузкиПоЗаказу.ГраницаГрафикаДоступностиСрокПоставки) КАК ГраницаГрафикаДоступностиСрокПоставки,
	|	МАКСИМУМ(ГрафикОтгрузкиПоЗаказу.ПринятКОбеспечению)                    КАК ПринятКОбеспечению,
	|	ВЫБОР
	|		КОГДА МАКСИМУМ(ВЫРАЗИТЬ(ГрафикОтгрузкиПоЗаказу.Номенклатура КАК Справочник.Номенклатура).ТипНоменклатуры) В (ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Услуга), ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Работа))
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК ЭтоУслуга,
	|	МАКСИМУМ(ГрафикОтгрузкиПоЗаказу.СрокПоставки)                          КАК СрокПоставки,
	|	МАКСИМУМ(ГрафикОтгрузкиПоЗаказу.УказыватьСерии)                        КАК УказыватьСерии,
	|	МАКСИМУМ(ГрафикОтгрузкиПоЗаказу.СтатусУказанияСерий)                   КАК СтатусУказанияСерий,
	|	МАКСИМУМ(ВЫБОР
	|		КОГДА ГрафикОтгрузкиПоЗаказу.ПринятКОбеспечению     =  ЛОЖЬ
	|				И ГрафикОтгрузкиПоЗаказу.ВариантОбеспечения <> ЗНАЧЕНИЕ(Перечисление.ВариантыОбеспечения.СоСклада)
	|				И ГрафикОтгрузкиПоЗаказу.ВариантКонтроля    =  ЗНАЧЕНИЕ(Перечисление.ВариантыКонтроля.ОстаткиСУчетомГрафика) ТОГДА 
	|			ВЫБОР
	|				КОГДА ЕСТЬNULL(СвободныеОстатки.ВНаличии - СвободныеОстатки.ВГрафике, 0) > ГрафикОтгрузкиПоЗаказу.КоличествоПредыдущиеСтрокиЗаказа ТОГДА
	|					ЕСТЬNULL(СвободныеОстатки.ВНаличии - СвободныеОстатки.ВГрафике, 0) - ГрафикОтгрузкиПоЗаказу.КоличествоПредыдущиеСтрокиЗаказа
	|				ИНАЧЕ 
	|					0
	|			КОНЕЦ
	|		ИНАЧЕ 
	|			ВЫБОР
	|				КОГДА ЕСТЬNULL(СвободныеОстатки.ВНаличии, 0) > 
	|																ГрафикОтгрузкиПоЗаказу.КоличествоПредыдущиеЗаказы 
	|																+ ГрафикОтгрузкиПоЗаказу.КоличествоПредыдущиеСтрокиЗаказа ТОГДА
	|					ЕСТЬNULL(СвободныеОстатки.ВНаличии, 0)  -  (ГрафикОтгрузкиПоЗаказу.КоличествоПредыдущиеЗаказы 
	|														+ ГрафикОтгрузкиПоЗаказу.КоличествоПредыдущиеСтрокиЗаказа)
	|				ИНАЧЕ 
	|					0
	|			КОНЕЦ
	|	КОНЕЦ)                                                                 КАК ОбеспеченоНаличием,
	|	МАКСИМУМ(ВЫБОР
	|		КОГДА ГрафикОтгрузкиПоЗаказу.ВариантОбеспечения = ЗНАЧЕНИЕ(Перечисление.ВариантыОбеспечения.СоСклада) 
	|				ИЛИ ЕСТЬNULL(ГрафикПоступления.КоличествоДатаСобытия, 0) = 0 ТОГДА 
	|			0
	|		КОГДА ГрафикОтгрузкиПоЗаказу.ПринятКОбеспечению = ЛОЖЬ
	|				И ГрафикОтгрузкиПоЗаказу.ВариантКонтроля = ЗНАЧЕНИЕ(Перечисление.ВариантыКонтроля.ОстаткиСУчетомГрафика) ТОГДА 
	|			ВЫБОР
	|				КОГДА ЕСТЬNULL(СвободныеОстатки.ВНаличии, 0) 
	|						> ГрафикОтгрузкиПоЗаказу.КоличествоПредыдущиеЗаказы + ГрафикОтгрузкиПоЗаказу.КоличествоПредыдущиеСтрокиЗаказа ТОГДА 
	|					ГрафикПоступления.КоличествоДатаСобытия
	|				КОГДА ЕСТЬNULL(СвободныеОстатки.ВГрафике - СвободныеОстатки.ВНаличии, 0) > 0 ТОГДА
	|					ГрафикПоступления.КоличествоДатаСобытия + СвободныеОстатки.ВГрафике 
	|					- (ГрафикОтгрузкиПоЗаказу.КоличествоПредыдущиеЗаказы + ГрафикОтгрузкиПоЗаказу.КоличествоПредыдущиеСтрокиЗаказа)
	|				ИНАЧЕ 
	|					ГрафикПоступления.КоличествоДатаСобытия + ЕСТЬNULL(СвободныеОстатки.ВНаличии, 0) 
	|					- (ГрафикОтгрузкиПоЗаказу.КоличествоПредыдущиеЗаказы + ГрафикОтгрузкиПоЗаказу.КоличествоПредыдущиеСтрокиЗаказа)
	|			КОНЕЦ
	|		КОГДА ЕСТЬNULL(СвободныеОстатки.ВНаличии, 0) 
	|				<= ГрафикОтгрузкиПоЗаказу.КоличествоПредыдущиеЗаказы + ГрафикОтгрузкиПоЗаказу.КоличествоПредыдущиеСтрокиЗаказа ТОГДА 
	|			ГрафикПоступления.КоличествоДатаСобытия + ЕСТЬNULL(СвободныеОстатки.ВНаличии, 0) 
	|			- (ГрафикОтгрузкиПоЗаказу.КоличествоПредыдущиеЗаказы + ГрафикОтгрузкиПоЗаказу.КоличествоПредыдущиеСтрокиЗаказа)
	|		ИНАЧЕ 
	|			ГрафикПоступления.КоличествоДатаСобытия
	|	КОНЕЦ)                                                                 КАК ОбеспеченоПоступлением,
	|	МАКСИМУМ(ЕСТЬNULL(ГрафикПоступления.ДатаСобытия, ДАТАВРЕМЯ(1, 1, 1)))  КАК ОжидаемаяДатаПоступления
	|ИЗ
	|	ГрафикОтгрузкиПоЗаказу КАК ГрафикОтгрузкиПоЗаказу
	|		ЛЕВОЕ СОЕДИНЕНИЕ СвободныеОстатки КАК СвободныеОстатки
	|		ПО ГрафикОтгрузкиПоЗаказу.Склад                      =  СвободныеОстатки.Склад
	|			И ГрафикОтгрузкиПоЗаказу.Номенклатура            =  СвободныеОстатки.Номенклатура
	|			И ГрафикОтгрузкиПоЗаказу.Характеристика          =  СвободныеОстатки.Характеристика
	|			И ГрафикОтгрузкиПоЗаказу.НазначениеДляОстатков   =  СвободныеОстатки.Назначение
	|			И (ГрафикОтгрузкиПоЗаказу.ВариантОбеспечения <> ЗНАЧЕНИЕ(Перечисление.ВариантыОбеспечения.ПодЗаказ)
	|				ИЛИ ГрафикОтгрузкиПоЗаказу.НазначениеСформировано)
	|		ЛЕВОЕ СОЕДИНЕНИЕ ГрафикПоступления КАК ГрафикПоступления
	|		ПО ГрафикОтгрузкиПоЗаказу.ВариантОбеспечения         <> ЗНАЧЕНИЕ(Перечисление.ВариантыОбеспечения.СоСклада)
	|			И ГрафикОтгрузкиПоЗаказу.Номенклатура            =  ГрафикПоступления.Номенклатура
	|			И ГрафикОтгрузкиПоЗаказу.Склад                   =  ГрафикПоступления.Склад
	|			И ГрафикОтгрузкиПоЗаказу.Характеристика          =  ГрафикПоступления.Характеристика
	|			И ГрафикОтгрузкиПоЗаказу.НазначениеПоВарианту    =  ГрафикПоступления.Назначение
	|			И (ГрафикОтгрузкиПоЗаказу.ВариантОбеспечения = ЗНАЧЕНИЕ(Перечисление.ВариантыОбеспечения.ПустаяСсылка)
	|				ИЛИ ГрафикОтгрузкиПоЗаказу.НазначениеСформировано)
	|			И (ГрафикОтгрузкиПоЗаказу.ДатаОтгрузки            >= ГрафикПоступления.ДатаСобытия
	|				ИЛИ ГрафикОтгрузкиПоЗаказу.ВариантОбеспечения = ЗНАЧЕНИЕ(Перечисление.ВариантыОбеспечения.ПодЗаказ)
	|				ИЛИ ГрафикОтгрузкиПоЗаказу.ПринятКОбеспечению = ЛОЖЬ)
	|			И (ВЫБОР
	|				КОГДА ГрафикОтгрузкиПоЗаказу.ПринятКОбеспечению = ЛОЖЬ
	|						И ГрафикОтгрузкиПоЗаказу.ВариантКонтроля = ЗНАЧЕНИЕ(Перечисление.ВариантыКонтроля.ОстаткиСУчетомГрафика) ТОГДА
	|					ГрафикОтгрузкиПоЗаказу.Количество 
	|							- ЕСТЬNULL(СвободныеОстатки.ВНаличии - СвободныеОстатки.ВГрафике, 0)
	|							+ ГрафикОтгрузкиПоЗаказу.КоличествоПредыдущиеСтрокиЗаказа 
	|							+ ГрафикОтгрузкиПоЗаказу.КоличествоПредыдущиеЗаказы 
	|						<= ГрафикПоступления.КоличествоДатаСобытия
	|						И ГрафикОтгрузкиПоЗаказу.Количество 
	|							- ЕСТЬNULL(СвободныеОстатки.ВНаличии - СвободныеОстатки.ВГрафике, 0) 
	|							+ ГрафикОтгрузкиПоЗаказу.КоличествоПредыдущиеСтрокиЗаказа
	|							+ ГрафикОтгрузкиПоЗаказу.КоличествоПредыдущиеЗаказы 
	|						> ГрафикПоступления.КоличествоПредыдущиеДни
	|					ИЛИ ГрафикОтгрузкиПоЗаказу.Количество 
	|							- ЕСТЬNULL(СвободныеОстатки.ВНаличии - СвободныеОстатки.ВГрафике, 0)
	|							+ ГрафикОтгрузкиПоЗаказу.КоличествоПредыдущиеСтрокиЗаказа 
	|							+ ГрафикОтгрузкиПоЗаказу.КоличествоПредыдущиеЗаказы 
	|						> ГрафикПоступления.КоличествоДатаСобытия
	|						И ГрафикПоступления.КоличествоДатаСобытия = ГрафикПоступления.КоличествоВсего
	|				ИНАЧЕ 
	|					ГрафикОтгрузкиПоЗаказу.Количество 
	|							- ЕСТЬNULL(СвободныеОстатки.ВНаличии, 0)
	|							+ ГрафикОтгрузкиПоЗаказу.КоличествоПредыдущиеСтрокиЗаказа 
	|							+ ГрафикОтгрузкиПоЗаказу.КоличествоПредыдущиеЗаказы 
	|						<= ГрафикПоступления.КоличествоДатаСобытия
	|						И ГрафикОтгрузкиПоЗаказу.Количество 
	|							- ЕСТЬNULL(СвободныеОстатки.ВНаличии, 0) 
	|							+ ГрафикОтгрузкиПоЗаказу.КоличествоПредыдущиеСтрокиЗаказа
	|							+ ГрафикОтгрузкиПоЗаказу.КоличествоПредыдущиеЗаказы 
	|						> ГрафикПоступления.КоличествоПредыдущиеДни
	|					ИЛИ ГрафикОтгрузкиПоЗаказу.Количество 
	|							- ЕСТЬNULL(СвободныеОстатки.ВНаличии, 0)
	|							+ ГрафикОтгрузкиПоЗаказу.КоличествоПредыдущиеСтрокиЗаказа 
	|							+ ГрафикОтгрузкиПоЗаказу.КоличествоПредыдущиеЗаказы 
	|						> ГрафикПоступления.КоличествоДатаСобытия
	|						И ГрафикПоступления.КоличествоДатаСобытия = ГрафикПоступления.КоличествоВсего
	|			КОНЕЦ)
	|		ЛЕВОЕ СОЕДИНЕНИЕ БлижайшиеДатыПоставки КАК БлижайшиеДатыПоставки
	|		ПО ГрафикОтгрузкиПоЗаказу.Склад              = БлижайшиеДатыПоставки.Склад
	|			И ГрафикОтгрузкиПоЗаказу.Номенклатура    = БлижайшиеДатыПоставки.Номенклатура
	|			И ГрафикОтгрузкиПоЗаказу.Характеристика  = БлижайшиеДатыПоставки.Характеристика
	|
	|СГРУППИРОВАТЬ ПО
	|	ГрафикОтгрузкиПоЗаказу.НомерСтроки
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки";
	
	НачалоТекущегоДня = НачалоДня(ТекущаяДатаСеанса());
	
	Запрос.УстановитьПараметр("Заказ",             Параметры.Заказ);
	Запрос.УстановитьПараметр("НачалоТекущегоДня", НачалоТекущегоДня);
	
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц();
	УстановитьПривилегированныйРежим(Истина);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	УстановитьПривилегированныйРежим(Ложь);
	
	Если РезультатЗапроса.Пустой() Тогда
		
		Возврат Ложь;
		
	КонецЕсли;
	
	
	НомерСтрокиПоПорядку = 1;
	
	Выборка = РезультатЗапроса.Выбрать();
	НазначениеПервойСтроки = Неопределено;
	
	Пока Выборка.Следующий() Цикл
	
		НоваяСтрокаТовары = Товары.Добавить();
		
		Если НазначениеПервойСтроки = Неопределено Тогда
			НазначениеПервойСтроки = Выборка.Назначение;
		КонецЕсли;
		
		НоваяСтрокаТовары.КодСтроки = Выборка.КодСтроки;
		НоваяСтрокаТовары.НомерСтрокиДокумента = Выборка.НомерСтроки;
		НоваяСтрокаТовары.НомерСтрокиПоПорядку = НомерСтрокиПоПорядку;
		НоваяСтрокаТовары.ПринятКОбеспечению = Выборка.ПринятКОбеспечению;
		НоваяСтрокаТовары.Склад = Выборка.Склад;
		НоваяСтрокаТовары.Подразделение = Выборка.Подразделение;
		Если ПараметрыВидимости <> Неопределено Тогда
			
			Если Не Выборка.ЭтоУслуга И Не ПараметрыВидимости.ЕстьТовары Тогда
				ПараметрыВидимости.ЕстьТовары = Истина;
			ИначеЕсли Выборка.ЭтоУслуга И Не ПараметрыВидимости.ЕстьРаботы Тогда
				ПараметрыВидимости.ЕстьРаботы = Истина;
			КонецЕсли;
			
			Если Не ПараметрыВидимости.ЕстьНазначение И (НазначениеПервойСтроки <> Выборка.Назначение) Тогда
				ПараметрыВидимости.ЕстьНазначение = Истина;
			КонецЕсли;
			
		КонецЕсли;
		
		НоваяСтрокаТовары.СкладИлиПодразделение = ?(ЗначениеЗаполнено(Выборка.Склад), Выборка.Склад, Выборка.Подразделение);
		НоваяСтрокаТовары.Код = Выборка.Код;
		НоваяСтрокаТовары.Артикул = Выборка.Артикул;
		НоваяСтрокаТовары.Номенклатура = Выборка.Номенклатура;
		НоваяСтрокаТовары.Характеристика = Выборка.Характеристика;
		НоваяСтрокаТовары.ВариантОбеспечения = Выборка.ВариантОбеспечения;
		НоваяСтрокаТовары.Назначение = Выборка.Назначение;
		НоваяСтрокаТовары.КоличествоУпаковок = Выборка.Количество / Выборка.УпаковкаКоэффициент;
		НоваяСтрокаТовары.Упаковка = Выборка.Упаковка;
		НоваяСтрокаТовары.УпаковкаКоэффициент = Выборка.УпаковкаКоэффициент;
		НоваяСтрокаТовары.ЕдиницаИзмерения = Выборка.ЕдиницаИзмерения;
		НоваяСтрокаТовары.ДатаОтгрузки = Выборка.ДатаОтгрузки;
		НоваяСтрокаТовары.ЭтоУслуга = Выборка.ЭтоУслуга;
		НоваяСтрокаТовары.СрокПоставки = Выборка.СрокПоставки;
		НоваяСтрокаТовары.УказыватьСерии = Выборка.УказыватьСерии;
		НоваяСтрокаТовары.СтатусУказанияСерий = Выборка.СтатусУказанияСерий;
		НоваяСтрокаТовары.ГраницаГрафикаДоступностиСрокПоставки = Выборка.ГраницаГрафикаДоступностиСрокПоставки;
		НоваяСтрокаТовары.ГраницаГрафикаДоступности = Выборка.ГраницаГрафикаДоступности;
		
		Если Выборка.ЭтоУслуга Тогда
			
			НоваяСтрокаТовары.ВНаличии = НоваяСтрокаТовары.КоличествоУпаковок;
			
		Иначе
			
			НоваяСтрокаТовары.ВНаличии = Мин(Выборка.Количество, Выборка.ОбеспеченоНаличием) / Выборка.УпаковкаКоэффициент;
			
		КонецЕсли;
		
		НоваяСтрокаТовары.ОбеспеченоПоступлением = Мин(НоваяСтрокаТовары.КоличествоУпаковок - НоваяСтрокаТовары.ВНаличии, Макс(Выборка.ОбеспеченоПоступлением / Выборка.УпаковкаКоэффициент, 0));
		НоваяСтрокаТовары.НеОбеспечено = НоваяСтрокаТовары.КоличествоУпаковок - НоваяСтрокаТовары.ВНаличии - НоваяСтрокаТовары.ОбеспеченоПоступлением;
		
		Если НоваяСтрокаТовары.ОбеспеченоПоступлением <> 0 Тогда
			
			НоваяСтрокаТовары.ОжидаемаяДатаПоступления = Выборка.ОжидаемаяДатаПоступления;
			
		КонецЕсли;
		
		Если НоваяСтрокаТовары.НеОбеспечено <> 0 И НоваяСтрокаТовары.СтатусУказанияСерий <> 10 Тогда
			
			НоваяСтрокаТовары.БлижайшаяДатаПоставки = Макс(Выборка.ГраницаГрафикаДоступности, Выборка.БлижайшаяДатаПоставки);
			
		КонецЕсли;
		
		// Состояние наличия по позиции заказа
		Если НоваяСтрокаТовары.КоличествоУпаковок = НоваяСтрокаТовары.ВНаличии Тогда
			
			НоваяСтрокаТовары.СостояниеНаличия = Перечисления.СостоянияНаличия.ПолностьюВНаличии;
			НоваяСтрокаТовары.ПолностьюИлиЧастичноВНаличии = Истина;
			НоваяСтрокаТовары.ЧастичноИлиНетВНаличии = Ложь;
			
		ИначеЕсли НоваяСтрокаТовары.ВНаличии > 0 Тогда
			
			НоваяСтрокаТовары.СостояниеНаличия = Перечисления.СостоянияНаличия.ЧастичноВНаличии;
			НоваяСтрокаТовары.ПолностьюИлиЧастичноВНаличии = Истина;
			НоваяСтрокаТовары.ЧастичноИлиНетВНаличии = Истина;
			
		Иначе
			
			НоваяСтрокаТовары.СостояниеНаличия = Перечисления.СостоянияНаличия.НетВНаличии;
			НоваяСтрокаТовары.ПолностьюИлиЧастичноВНаличии = Ложь;
			НоваяСтрокаТовары.ЧастичноИлиНетВНаличии = Истина;
			
		КонецЕсли;
		
		// Дата отгрузки по заказу просрочена
		Если НоваяСтрокаТовары.ДатаОтгрузки < НачалоТекущегоДня Тогда
			
			НоваяСтрокаТовары.ЗаказПросрочен = Истина;
			
		КонецЕсли;
		
		НоваяСтрокаТовары.СтрокаСоответствуетОтбору = СтрокаСоответствуетОтбору(НоваяСтрокаТовары, Параметры.ОтборПоСостояниюНаличия);
		
		НомерСтрокиПоПорядку = НомерСтрокиПоПорядку + 1;
		
	КонецЦикла;
	
	Возврат Истина;
	
КонецФункции

// Рассчитывает даты полной отгрузки в табличной части "Товары" для переданных параметров.
//
//	Параметры - Структура - содержит элементы с ключами:
//		"ЖелаемаяДатаОтгрузки" - Дата - желаемая дата отгрузки по заказу
//		"НеОтгружатьЧастями" - Булево - признак необходимости расчета одинаковой даты отгрузки для все позиций заказа
//
// Возвращаемое значение:
//	Булево - Истина, если в списке товаров есть строки, соответствующие отбору по состоянию наличия
//
Функция РассчитатьДляПолнойОтгрузки(Параметры) Экспорт
	
	КорректируемыеСтроки = Товары.НайтиСтроки(Новый Структура("СтрокаСоответствуетОтбору, Выбран", Истина, Истина));
	
	Если КорректируемыеСтроки.Количество() = 0 Тогда
		
		Возврат Ложь;
		
	КонецЕсли;
	
	НачалоТекущегоДня = НачалоДня(ТекущаяДатаСеанса());
	ОкончаниеТекущегоДня = КонецДня(НачалоТекущегоДня);
	ЕстьУслуги = Ложь;
	
	Если НЕ ЗначениеЗаполнено(Параметры.ЖелаемаяДатаОтгрузки) Тогда
		
		Параметры.ЖелаемаяДатаОтгрузки = НачалоТекущегоДня;
		
	КонецЕсли;
	
	Для каждого КорректируемаяСтрока из КорректируемыеСтроки Цикл
		
		Если КорректируемаяСтрока.ЭтоУслуга Тогда
			
			ЕстьУслуги = Истина;
			
		КонецЕсли;
		
		КорректируемаяСтрока.ДатаОтгрузки = ДатаОтгрузки(КорректируемаяСтрока, Параметры.ЖелаемаяДатаОтгрузки, НачалоТекущегоДня, ОкончаниеТекущегоДня);
		КорректируемаяСтрока.ЗаказПросрочен = Ложь;
		КорректируемаяСтрока.СтрокаИзменена = Истина;
		КорректируемаяСтрока.Выбран = Ложь;
		
	КонецЦикла;
	
	Если ЕстьУслуги ИЛИ Параметры.НеОтгружатьЧастями Тогда
		
		МаксимальнаяДатаОтгрузки = Параметры.ЖелаемаяДатаОтгрузки;
		
		Для каждого СтрокаТовары из Товары Цикл
			
			Если НЕ СтрокаТовары.ЭтоУслуга Тогда
			
				МаксимальнаяДатаОтгрузки = Макс(МаксимальнаяДатаОтгрузки, СтрокаТовары.ДатаОтгрузки);
				
			КонецЕсли;
			
		КонецЦикла;
		
		Для каждого КорректируемаяСтрока из КорректируемыеСтроки Цикл
			
			Если (КорректируемаяСтрока.ЭтоУслуга ИЛИ Параметры.НеОтгружатьЧастями) И КорректируемаяСтрока.ДатаОтгрузки < МаксимальнаяДатаОтгрузки Тогда
				
				КорректируемаяСтрока.ДатаОтгрузки = МаксимальнаяДатаОтгрузки;
				КорректируемаяСтрока.ЗаказПросрочен = (МаксимальнаяДатаОтгрузки < НачалоТекущегоДня);
				КорректируемаяСтрока.СтрокаИзменена = Истина;
				
			КонецЕсли;
		
		КонецЦикла;
		
	КонецЕсли;
	
	НомерСтрокиПоПорядку = 1;
	
	Для каждого СтрокаТовары из Товары Цикл
		
		СтрокаТовары.НомерСтрокиПоПорядку = НомерСтрокиПоПорядку;
		НомерСтрокиПоПорядку = НомерСтрокиПоПорядку + 1;
		
	КонецЦикла;
	
	Возврат Истина;
	
КонецФункции

// Рассчитывает даты частичной отгрузки в табличной части "Товары" для переданных параметров.
//
//	Параметры - Структура - содержит элементы с ключами:
//		"ЖелаемаяДатаОтгрузки" - Дата - желаемая дата отгрузки по заказу
//
// Возвращаемое значение:
//	Булево - Истина, если в списке товаров есть строки, соответствующие отбору по состоянию наличия
//
Функция РассчитатьДляЧастичнойОтгрузки(Параметры) Экспорт
	
	КорректируемыеСтроки = Товары.НайтиСтроки(Новый Структура("СтрокаСоответствуетОтбору, Выбран", Истина, Истина));
	
	Если КорректируемыеСтроки.Количество() = 0 Тогда
		
		Возврат Ложь;
		
	КонецЕсли;
	
	НачалоТекущегоДня = НачалоДня(ТекущаяДатаСеанса());
	ОкончаниеТекущегоДня = КонецДня(НачалоТекущегоДня);
	ЕстьУслуги = Ложь;
	
	Если НЕ ЗначениеЗаполнено(Параметры.ЖелаемаяДатаОтгрузки) Тогда
		
		Параметры.ЖелаемаяДатаОтгрузки = НачалоТекущегоДня;
		
	КонецЕсли;
	
	Для каждого КорректируемаяСтрока из КорректируемыеСтроки Цикл
		
		Если КорректируемаяСтрока.ЭтоУслуга Тогда
			
			ЕстьУслуги = Истина;
			
		КонецЕсли;
		
		Если КорректируемаяСтрока.СостояниеНаличия = ПредопределенноеЗначение("Перечисление.СостоянияНаличия.НетВНаличии") Тогда
			
			Если КорректируемаяСтрока.ОбеспеченоПоступлением > 0 Тогда
				
				Если КорректируемаяСтрока.НеОбеспечено > 0 Тогда
					
					НоваяСтрокаТовары = Товары.Вставить(Товары.Индекс(КорректируемаяСтрока) + 1);
					ЗаполнитьЗначенияСвойств(НоваяСтрокаТовары, КорректируемаяСтрока);
					
					НоваяСтрокаТовары.Выбран = Ложь;
					НоваяСтрокаТовары.КодСтроки = 0;
					
					НоваяСтрокаТовары.КоличествоУпаковок = КорректируемаяСтрока.НеОбеспечено;
					НоваяСтрокаТовары.СостояниеНаличия = ПредопределенноеЗначение("Перечисление.СостоянияНаличия.НетВНаличии");
					НоваяСтрокаТовары.ПолностьюИлиЧастичноВНаличии = Ложь;
					НоваяСтрокаТовары.ЧастичноИлиНетВНаличии = Истина;
					
					НоваяСтрокаТовары.ВНаличии = 0;
					НоваяСтрокаТовары.ОбеспеченоПоступлением = 0;
					НоваяСтрокаТовары.ОжидаемаяДатаПоступления = Неопределено;
					НоваяСтрокаТовары.ЗаказПросрочен = Ложь;
					НоваяСтрокаТовары.СтрокаИзменена = Истина;
					НоваяСтрокаТовары.НоваяСтрока = Истина;
					НоваяСтрокаТовары.ДатаОтгрузки = ДатаОтгрузки(НоваяСтрокаТовары, Параметры.ЖелаемаяДатаОтгрузки, НачалоТекущегоДня, ОкончаниеТекущегоДня);
					
					НоваяСтрокаТовары.СтрокаСоответствуетОтбору = Истина;
					
				КонецЕсли;
				
				КорректируемаяСтрока.КоличествоУпаковок = КорректируемаяСтрока.ОбеспеченоПоступлением;
				КорректируемаяСтрока.НеОбеспечено = 0;
				КорректируемаяСтрока.БлижайшаяДатаПоставки = Неопределено;
				КорректируемаяСтрока.ЗаказПросрочен = Ложь;
				КорректируемаяСтрока.СтрокаИзменена = Истина;
				КорректируемаяСтрока.ДатаОтгрузки = ДатаОтгрузки(КорректируемаяСтрока, Параметры.ЖелаемаяДатаОтгрузки, НачалоТекущегоДня, ОкончаниеТекущегоДня);
				
			Иначе
				
				КорректируемаяСтрока.ЗаказПросрочен = Ложь;
				КорректируемаяСтрока.СтрокаИзменена = Истина;
				КорректируемаяСтрока.ДатаОтгрузки = ДатаОтгрузки(КорректируемаяСтрока, Параметры.ЖелаемаяДатаОтгрузки, НачалоТекущегоДня, ОкончаниеТекущегоДня);
				
			КонецЕсли;
			
		ИначеЕсли КорректируемаяСтрока.СостояниеНаличия = ПредопределенноеЗначение("Перечисление.СостоянияНаличия.ЧастичноВНаличии") Тогда
			
			Если КорректируемаяСтрока.НеОбеспечено > 0 Тогда
				
				НоваяСтрокаТовары = Товары.Вставить(Товары.Индекс(КорректируемаяСтрока) + 1);
				ЗаполнитьЗначенияСвойств(НоваяСтрокаТовары, КорректируемаяСтрока);
				
				НоваяСтрокаТовары.Выбран = Ложь;
				НоваяСтрокаТовары.КодСтроки = 0;
				
				НоваяСтрокаТовары.КоличествоУпаковок = КорректируемаяСтрока.НеОбеспечено;
				НоваяСтрокаТовары.СостояниеНаличия = ПредопределенноеЗначение("Перечисление.СостоянияНаличия.НетВНаличии");
				НоваяСтрокаТовары.ПолностьюИлиЧастичноВНаличии = Ложь;
				НоваяСтрокаТовары.ЧастичноИлиНетВНаличии = Истина;
				
				НоваяСтрокаТовары.ВНаличии = 0;
				НоваяСтрокаТовары.ОбеспеченоПоступлением = 0;
				НоваяСтрокаТовары.ОжидаемаяДатаПоступления = Неопределено;
				НоваяСтрокаТовары.ЗаказПросрочен = Ложь;
				НоваяСтрокаТовары.СтрокаИзменена = Истина;
				НоваяСтрокаТовары.НоваяСтрока = Истина;
				НоваяСтрокаТовары.ДатаОтгрузки = ДатаОтгрузки(НоваяСтрокаТовары, Параметры.ЖелаемаяДатаОтгрузки, НачалоТекущегоДня, ОкончаниеТекущегоДня);
				
				НоваяСтрокаТовары.СтрокаСоответствуетОтбору = Истина;
				
			КонецЕсли;
			
			Если КорректируемаяСтрока.ОбеспеченоПоступлением > 0 Тогда
				
				НоваяСтрокаТовары = Товары.Вставить(Товары.Индекс(КорректируемаяСтрока) + 1);
				ЗаполнитьЗначенияСвойств(НоваяСтрокаТовары, КорректируемаяСтрока);
				
				НоваяСтрокаТовары.Выбран = Ложь;
				НоваяСтрокаТовары.КодСтроки = 0;
				
				НоваяСтрокаТовары.КоличествоУпаковок = КорректируемаяСтрока.ОбеспеченоПоступлением;
				НоваяСтрокаТовары.СостояниеНаличия = ПредопределенноеЗначение("Перечисление.СостоянияНаличия.НетВНаличии");
				НоваяСтрокаТовары.ПолностьюИлиЧастичноВНаличии = Ложь;
				НоваяСтрокаТовары.ЧастичноИлиНетВНаличии = Истина;
				
				НоваяСтрокаТовары.ВНаличии = 0;
				НоваяСтрокаТовары.НеОбеспечено = 0;
				НоваяСтрокаТовары.БлижайшаяДатаПоставки = Неопределено;
				НоваяСтрокаТовары.ЗаказПросрочен = Ложь;
				НоваяСтрокаТовары.СтрокаИзменена = Истина;
				НоваяСтрокаТовары.НоваяСтрока = Истина;
				НоваяСтрокаТовары.ДатаОтгрузки = ДатаОтгрузки(НоваяСтрокаТовары, Параметры.ЖелаемаяДатаОтгрузки, НачалоТекущегоДня, ОкончаниеТекущегоДня);
				
				НоваяСтрокаТовары.СтрокаСоответствуетОтбору = Истина;
				
			КонецЕсли;
			
			КорректируемаяСтрока.КоличествоУпаковок = КорректируемаяСтрока.ВНаличии;
			КорректируемаяСтрока.СостояниеНаличия = ПредопределенноеЗначение("Перечисление.СостоянияНаличия.ПолностьюВНаличии");
			КорректируемаяСтрока.ПолностьюИлиЧастичноВНаличии = Истина;
			КорректируемаяСтрока.ЧастичноИлиНетВНаличии = Ложь;
			КорректируемаяСтрока.ОбеспеченоПоступлением = 0;
			КорректируемаяСтрока.ОжидаемаяДатаПоступления = Неопределено;
			КорректируемаяСтрока.НеОбеспечено = 0;
			КорректируемаяСтрока.БлижайшаяДатаПоставки = Неопределено;
			КорректируемаяСтрока.ЗаказПросрочен = Ложь;
			КорректируемаяСтрока.СтрокаИзменена = Истина;
			КорректируемаяСтрока.ДатаОтгрузки = ДатаОтгрузки(КорректируемаяСтрока, Параметры.ЖелаемаяДатаОтгрузки, НачалоТекущегоДня, ОкончаниеТекущегоДня);
			
		ИначеЕсли КорректируемаяСтрока.СостояниеНаличия = ПредопределенноеЗначение("Перечисление.СостоянияНаличия.ПолностьюВНаличии") Тогда
			
			КорректируемаяСтрока.ДатаОтгрузки = ДатаОтгрузки(КорректируемаяСтрока, Параметры.ЖелаемаяДатаОтгрузки, НачалоТекущегоДня, ОкончаниеТекущегоДня);
			КорректируемаяСтрока.ЗаказПросрочен = Ложь;
			КорректируемаяСтрока.СтрокаИзменена = Истина;
				
		КонецЕсли;
		
		КорректируемаяСтрока.Выбран = Ложь;
		
	КонецЦикла;
	
	Если ЕстьУслуги Тогда
		
		МаксимальнаяДатаОтгрузки = Параметры.ЖелаемаяДатаОтгрузки;
		
		Для каждого СтрокаТовары из Товары Цикл
			
			Если НЕ СтрокаТовары.ЭтоУслуга Тогда
			
				МаксимальнаяДатаОтгрузки = Макс(МаксимальнаяДатаОтгрузки, СтрокаТовары.ДатаОтгрузки);
				
			КонецЕсли;
			
		КонецЦикла;
		
		Для каждого КорректируемаяСтрока из КорректируемыеСтроки Цикл
			
			Если КорректируемаяСтрока.ЭтоУслуга И КорректируемаяСтрока.ДатаОтгрузки < МаксимальнаяДатаОтгрузки Тогда
				
				КорректируемаяСтрока.ДатаОтгрузки = МаксимальнаяДатаОтгрузки;
				КорректируемаяСтрока.ЗаказПросрочен = (МаксимальнаяДатаОтгрузки < НачалоТекущегоДня);
				КорректируемаяСтрока.СтрокаИзменена = Истина;
				
			КонецЕсли;
		
		КонецЦикла;
		
	КонецЕсли;
	
	НомерСтрокиПоПорядку = 1;
	
	Для каждого СтрокаТовары из Товары Цикл
		
		СтрокаТовары.НомерСтрокиПоПорядку = НомерСтрокиПоПорядку;
		НомерСтрокиПоПорядку = НомерСтрокиПоПорядку + 1;
		
	КонецЦикла;
	
	Возврат Истина;
	
КонецФункции

// Возвращает результат расчета даты отгрузки для переданных параметров.
//
//	Параметры - Структура - содержит элементы с ключами:
//		"Заказ" - ДокументСсылка - заказ, для которого необходимо получить состояние обеспечения
//		"АдресТовары" - Строка - адрес во временном хранилище, по которому помещен список товаров из заказа
//
// Возвращаемое значение:
//	ТаблицаЗначений - Таблица, содержащая переданный список товаров с рассчитанными датами отгрузки
//
Функция ПолучитьРезультатРасчета(Параметры) Экспорт
	
	Если Не Параметры.Свойство("РассчитатьБезЗаказа") Тогда
		
		Параметры.Вставить("РассчитатьБезЗаказа", Ложь);
		
	КонецЕсли;
	
	// Заказ клиента
	Если ТипЗнч(Параметры.Заказ) = Тип("ДокументСсылка.ЗаказКлиента") Тогда
		
		Если Параметры.РассчитатьБезЗаказа Тогда
			
			Запрос = Новый Запрос(
			"ВЫБРАТЬ
			|	Товары.НомерСтроки КАК НомерСтроки,
			|	Товары.ДатаОтгрузки КАК ДатаОтгрузки,
			|	Товары.Номенклатура КАК Номенклатура,
			|	Товары.Характеристика КАК Характеристика,
			|	Товары.ВариантОбеспечения КАК ВариантОбеспечения,
			|	Товары.Упаковка КАК Упаковка,
			|	Товары.КоличествоУпаковок КАК КоличествоУпаковок,
			|	Товары.Количество КАК Количество,
			|	Товары.ВидЦены КАК ВидЦены,
			|	Товары.Цена КАК Цена,
			|	Товары.Сумма КАК Сумма,
			|	Товары.СтавкаНДС КАК СтавкаНДС,
			|	Товары.СуммаНДС КАК СуммаНДС,
			|	Товары.СуммаСНДС КАК СуммаСНДС,
			|	Товары.ПроцентРучнойСкидки КАК ПроцентРучнойСкидки,
			|	Товары.СуммаРучнойСкидки КАК СуммаРучнойСкидки,
			|	Товары.ПроцентАвтоматическойСкидки КАК ПроцентАвтоматическойСкидки,
			|	Товары.СуммаАвтоматическойСкидки КАК СуммаАвтоматическойСкидки,
			|	Товары.КодСтроки КАК КодСтроки,
			|	Товары.КлючСвязи КАК КлючСвязи,
			|	Товары.Склад КАК Склад,
			|	Товары.СрокПоставки КАК СрокПоставки,
			|	Товары.Содержание КАК Содержание,
			|	Товары.СтатусУказанияСерий КАК СтатусУказанияСерий,
			|	Товары.УказыватьСерии КАК УказыватьСерии,
			|	Товары.ВариантОформления КАК ВариантОформления
			|ПОМЕСТИТЬ Товары
			|ИЗ
			|	&Товары КАК Товары
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	КорректируемыеСтроки.НомерСтрокиДокумента КАК НомерСтроки,
			|	КорректируемыеСтроки.ДатаОтгрузки КАК ДатаОтгрузки,
			|	КорректируемыеСтроки.КоличествоУпаковок КАК КоличествоУпаковок,
			|	КорректируемыеСтроки.КодСтроки КАК КодСтроки,
			|	КорректируемыеСтроки.УпаковкаКоэффициент КАК УпаковкаКоэффициент,
			|	КорректируемыеСтроки.НоваяСтрока КАК НоваяСтрока
			|ПОМЕСТИТЬ КорректируемыеСтроки
			|ИЗ
			|	&КорректируемыеСтроки КАК КорректируемыеСтроки
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	КорректируемыеСтроки.НомерСтроки КАК НомерСтроки,
			|	СУММА(КорректируемыеСтроки.КоличествоУпаковок) КАК КоличествоУпаковок,
			|	МАКСИМУМ(КорректируемыеСтроки.УпаковкаКоэффициент) КАК УпаковкаКоэффициент
			|ПОМЕСТИТЬ КорректируемыеСтрокиИтог
			|ИЗ
			|	КорректируемыеСтроки КАК КорректируемыеСтроки
			|
			|СГРУППИРОВАТЬ ПО
			|	КорректируемыеСтроки.НомерСтроки
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	Товары.НомерСтроки КАК НомерСтроки,
			|	ЕСТЬNULL(КорректируемыеСтроки.ДатаОтгрузки, Товары.ДатаОтгрузки) КАК ДатаОтгрузки,
			|	Товары.Номенклатура КАК Номенклатура,
			|	Товары.Характеристика КАК Характеристика,
			|	Товары.ВариантОбеспечения КАК ВариантОбеспечения,
			|	Товары.Упаковка КАК Упаковка,
			|	ВЫБОР
			|		КОГДА КорректируемыеСтроки.НомерСтроки ЕСТЬ NULL 
			|			ТОГДА Товары.КоличествоУпаковок
			|		ИНАЧЕ КорректируемыеСтроки.КоличествоУпаковок + ВЫБОР
			|				КОГДА КорректируемыеСтрокиИтог.НомерСтроки ЕСТЬ NULL 
			|					ТОГДА 0
			|				ИНАЧЕ Товары.КоличествоУпаковок - КорректируемыеСтрокиИтог.КоличествоУпаковок
			|			КОНЕЦ
			|	КОНЕЦ КАК КоличествоУпаковок,
			|	ВЫБОР
			|		КОГДА КорректируемыеСтроки.НомерСтроки ЕСТЬ NULL 
			|			ТОГДА Товары.Количество
			|		ИНАЧЕ КорректируемыеСтроки.КоличествоУпаковок * КорректируемыеСтроки.УпаковкаКоэффициент + ВЫБОР
			|				КОГДА КорректируемыеСтрокиИтог.НомерСтроки ЕСТЬ NULL 
			|					ТОГДА 0
			|				ИНАЧЕ (Товары.КоличествоУпаковок - КорректируемыеСтрокиИтог.КоличествоУпаковок) * КорректируемыеСтрокиИтог.УпаковкаКоэффициент
			|			КОНЕЦ
			|	КОНЕЦ КАК Количество,
			|	Товары.ВидЦены КАК ВидЦены,
			|	Товары.Цена КАК Цена,
			|	Товары.Сумма КАК Сумма,
			|	Товары.СтавкаНДС КАК СтавкаНДС,
			|	Товары.СуммаНДС КАК СуммаНДС,
			|	Товары.СуммаСНДС КАК СуммаСНДС,
			|	Товары.ПроцентРучнойСкидки КАК ПроцентРучнойСкидки,
			|	Товары.СуммаРучнойСкидки КАК СуммаРучнойСкидки,
			|	Товары.ПроцентАвтоматическойСкидки КАК ПроцентАвтоматическойСкидки,
			|	Товары.СуммаАвтоматическойСкидки КАК СуммаАвтоматическойСкидки,
			|	ЕСТЬNULL(КорректируемыеСтроки.КодСтроки, Товары.КодСтроки) КАК КодСтроки,
			|	Товары.КлючСвязи КАК КлючСвязи,
			|	Товары.Склад КАК Склад,
			|	Товары.СрокПоставки КАК СрокПоставки,
			|	Товары.Содержание КАК Содержание,
			|	Товары.СтатусУказанияСерий КАК СтатусУказанияСерий,
			|	Товары.УказыватьСерии КАК УказыватьСерии,
			|	Товары.ВариантОформления КАК ВариантОформления
			|ИЗ
			|	Товары КАК Товары
			|		ЛЕВОЕ СОЕДИНЕНИЕ КорректируемыеСтроки КАК КорректируемыеСтроки
			|		ПО Товары.НомерСтроки = КорректируемыеСтроки.НомерСтроки
			|		ЛЕВОЕ СОЕДИНЕНИЕ КорректируемыеСтрокиИтог КАК КорректируемыеСтрокиИтог
			|		ПО Товары.НомерСтроки = КорректируемыеСтрокиИтог.НомерСтроки
			|			И (НЕ КорректируемыеСтроки.НоваяСтрока)
			|
			|УПОРЯДОЧИТЬ ПО
			|	НомерСтроки");
			
		Иначе
		
			Запрос = Новый Запрос(
			"ВЫБРАТЬ
			|	Товары.НомерСтроки КАК НомерСтроки,
			|	Товары.ДатаОтгрузки КАК ДатаОтгрузки,
			|	Товары.Номенклатура КАК Номенклатура,
			|	Товары.Характеристика КАК Характеристика,
			|	Товары.ВариантОбеспечения КАК ВариантОбеспечения,
			|	Товары.Упаковка КАК Упаковка,
			|	Товары.КоличествоУпаковок КАК КоличествоУпаковок,
			|	Товары.Количество КАК Количество,
			|	Товары.ВидЦены КАК ВидЦены,
			|	Товары.Цена КАК Цена,
			|	Товары.Сумма КАК Сумма,
			|	Товары.СтавкаНДС КАК СтавкаНДС,
			|	Товары.СуммаНДС КАК СуммаНДС,
			|	Товары.СуммаСНДС КАК СуммаСНДС,
			|	Товары.ПроцентРучнойСкидки КАК ПроцентРучнойСкидки,
			|	Товары.СуммаРучнойСкидки КАК СуммаРучнойСкидки,
			|	Товары.ПроцентАвтоматическойСкидки КАК ПроцентАвтоматическойСкидки,
			|	Товары.СуммаАвтоматическойСкидки КАК СуммаАвтоматическойСкидки,
			|	Товары.ПричинаОтмены КАК ПричинаОтмены,
			|	Товары.КодСтроки КАК КодСтроки,
			|	Товары.Отменено КАК Отменено,
			|	Товары.КлючСвязи КАК КлючСвязи,
			|	Товары.Склад КАК Склад,
			|	Товары.СрокПоставки КАК СрокПоставки,
			|	Товары.Содержание КАК Содержание,
			|	Товары.СтатусУказанияСерий КАК СтатусУказанияСерий,
			|	Товары.УказыватьСерии КАК УказыватьСерии ,
			// АСТЭК
			
			|АК_ТекстовоеОписание,   
			|АК_ДопКомплектация ,
			|АК_ПунктДоставки , 
			|АК_ПунктМонтажа ,     
			|АК_ПроцентНаценкиДоставка,    
			|АК_ПроцентНаценкиДоставкаКлиент,   
			|АК_ПроцентНаценкиДоставкаАгент,   
			|АК_ПроцентНаценкиМонтаж,
			| АК_ПризнакНестандарт ,   
			| АК_ПроцентНаценкиМонтажКлиент,  
			| АК_ДопУслугиСумма ,       
			| АК_ДопУслугиСуммаНДС,
			|   АК_НестандартОписание,  
			|   АК_ПризнакЭскиз , 
			|   АК_ЭскизФайл     , 
			|   АК_ИнформацияДляОтделаЗакупки,                                            
			|   АК_ПроцентНаценкиМонтажАгент  
			// АСТЭК

			|ПОМЕСТИТЬ Товары
			|ИЗ
			|	&Товары КАК Товары
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	КорректируемыеСтроки.НомерСтрокиДокумента КАК НомерСтроки,
			|	КорректируемыеСтроки.ДатаОтгрузки КАК ДатаОтгрузки,
			|	КорректируемыеСтроки.КоличествоУпаковок КАК КоличествоУпаковок,
			|	КорректируемыеСтроки.КодСтроки КАК КодСтроки,
			|	КорректируемыеСтроки.УпаковкаКоэффициент КАК УпаковкаКоэффициент,
			|	КорректируемыеСтроки.НоваяСтрока КАК НоваяСтрока
			|ПОМЕСТИТЬ КорректируемыеСтроки
			|ИЗ
			|	&КорректируемыеСтроки КАК КорректируемыеСтроки
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	КорректируемыеСтроки.НомерСтроки КАК НомерСтроки,
			|	СУММА(КорректируемыеСтроки.КоличествоУпаковок) КАК КоличествоУпаковок,
			|	МАКСИМУМ(КорректируемыеСтроки.УпаковкаКоэффициент) КАК УпаковкаКоэффициент
			|ПОМЕСТИТЬ КорректируемыеСтрокиИтог
			|ИЗ
			|	КорректируемыеСтроки КАК КорректируемыеСтроки
			|
			|СГРУППИРОВАТЬ ПО
			|	КорректируемыеСтроки.НомерСтроки
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	Товары.НомерСтроки КАК НомерСтроки,
			|	ЕСТЬNULL(КорректируемыеСтроки.ДатаОтгрузки, Товары.ДатаОтгрузки) КАК ДатаОтгрузки,
			|	Товары.Номенклатура КАК Номенклатура,
			|	Товары.Характеристика КАК Характеристика,
			|	Товары.ВариантОбеспечения КАК ВариантОбеспечения,
			|	Товары.Упаковка КАК Упаковка,
			|	ВЫБОР
			|		КОГДА КорректируемыеСтроки.НомерСтроки ЕСТЬ NULL 
			|			ТОГДА Товары.КоличествоУпаковок
			|		ИНАЧЕ КорректируемыеСтроки.КоличествоУпаковок + ВЫБОР
			|				КОГДА КорректируемыеСтрокиИтог.НомерСтроки ЕСТЬ NULL 
			|					ТОГДА 0
			|				ИНАЧЕ Товары.КоличествоУпаковок - КорректируемыеСтрокиИтог.КоличествоУпаковок
			|			КОНЕЦ
			|	КОНЕЦ КАК КоличествоУпаковок,
			|	ВЫБОР
			|		КОГДА КорректируемыеСтроки.НомерСтроки ЕСТЬ NULL 
			|			ТОГДА Товары.Количество
			|		ИНАЧЕ КорректируемыеСтроки.КоличествоУпаковок * КорректируемыеСтроки.УпаковкаКоэффициент + ВЫБОР
			|				КОГДА КорректируемыеСтрокиИтог.НомерСтроки ЕСТЬ NULL 
			|					ТОГДА 0
			|				ИНАЧЕ (Товары.КоличествоУпаковок - КорректируемыеСтрокиИтог.КоличествоУпаковок) * КорректируемыеСтрокиИтог.УпаковкаКоэффициент
			|			КОНЕЦ
			|	КОНЕЦ КАК Количество,
			|	Товары.ВидЦены КАК ВидЦены,
			|	Товары.Цена КАК Цена,
			|	Товары.Сумма КАК Сумма,
			|	Товары.СтавкаНДС КАК СтавкаНДС,
			|	Товары.СуммаНДС КАК СуммаНДС,
			|	Товары.СуммаСНДС КАК СуммаСНДС,
			|	Товары.ПроцентРучнойСкидки КАК ПроцентРучнойСкидки,
			|	Товары.СуммаРучнойСкидки КАК СуммаРучнойСкидки,
			|	Товары.ПроцентАвтоматическойСкидки КАК ПроцентАвтоматическойСкидки,
			|	Товары.СуммаАвтоматическойСкидки КАК СуммаАвтоматическойСкидки,
			|	Товары.ПричинаОтмены КАК ПричинаОтмены,
			|	ЕСТЬNULL(КорректируемыеСтроки.КодСтроки, Товары.КодСтроки) КАК КодСтроки,
			|	Товары.Отменено КАК Отменено,
			|	Товары.КлючСвязи КАК КлючСвязи,
			|	Товары.Склад КАК Склад,
			|	Товары.СрокПоставки КАК СрокПоставки,
			|	Товары.Содержание КАК Содержание,
			// АСТЭК
			
			|АК_ТекстовоеОписание,   
			|АК_ДопКомплектация ,
			|АК_ПунктДоставки , 
			|АК_ПунктМонтажа ,     
			|АК_ПроцентНаценкиДоставка,    
			|АК_ПроцентНаценкиДоставкаКлиент,   
			|АК_ПроцентНаценкиДоставкаАгент,   
			|АК_ПроцентНаценкиМонтаж,
			| АК_ПризнакНестандарт ,   
			| АК_ПроцентНаценкиМонтажКлиент,  
			| АК_ДопУслугиСумма ,       
			| АК_ДопУслугиСуммаНДС,
			|   АК_НестандартОписание,  
			|   АК_ПризнакЭскиз , 
			|   АК_ЭскизФайл     , 
			|   АК_ИнформацияДляОтделаЗакупки,                                            
			|   АК_ПроцентНаценкиМонтажАгент  ,
			// АСТЭК
			|	Товары.СтатусУказанияСерий КАК СтатусУказанияСерий,
			|	Товары.УказыватьСерии КАК УказыватьСерии
			|ИЗ
			|	Товары КАК Товары
			|		ЛЕВОЕ СОЕДИНЕНИЕ КорректируемыеСтроки КАК КорректируемыеСтроки
			|		ПО Товары.НомерСтроки = КорректируемыеСтроки.НомерСтроки
			|		ЛЕВОЕ СОЕДИНЕНИЕ КорректируемыеСтрокиИтог КАК КорректируемыеСтрокиИтог
			|		ПО Товары.НомерСтроки = КорректируемыеСтрокиИтог.НомерСтроки
			|			И (НЕ КорректируемыеСтроки.НоваяСтрока)
			|
			|УПОРЯДОЧИТЬ ПО
			|	НомерСтроки");
			
			
		КонецЕсли;
		
		Запрос.УстановитьПараметр("Товары", ПолучитьИзВременногоХранилища(Параметры.АдресТовары));
		Запрос.УстановитьПараметр("КорректируемыеСтроки", Товары.Выгрузить(Новый Структура("СтрокаИзменена", Истина)));
		
		Возврат Запрос.Выполнить().Выгрузить();
		
	// Заказ на внутреннее потребление
	ИначеЕсли ТипЗнч(Параметры.Заказ) = Тип("ДокументСсылка.ЗаказНаВнутреннееПотребление") Тогда
		
		Запрос = Новый Запрос(
		"ВЫБРАТЬ
		|	Товары.НомерСтроки КАК НомерСтроки,
		|	Товары.Номенклатура КАК Номенклатура,
		|	Товары.Характеристика КАК Характеристика,
		|	Товары.Упаковка КАК Упаковка,
		|	Товары.КоличествоУпаковок КАК КоличествоУпаковок,
		|	Товары.Количество КАК Количество,
		|	Товары.ДатаОтгрузки КАК ДатаОтгрузки,
		|	Товары.Отменено КАК Отменено,
		|	Товары.КодСтроки КАК КодСтроки,
		|	Товары.СтатьяРасходов КАК СтатьяРасходов,
		|	Товары.АналитикаРасходов КАК АналитикаРасходов,
		|	Товары.ФизическоеЛицо КАК ФизическоеЛицо,
		|	Товары.СрокЭксплуатации КАК СрокЭксплуатации,
		|	Товары.СтатусУказанияСерий КАК СтатусУказанияСерий,
		|	Товары.УказыватьСерии КАК УказыватьСерии
		|ПОМЕСТИТЬ Товары
		|ИЗ
		|	&Товары КАК Товары
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	КорректируемыеСтроки.НомерСтрокиДокумента КАК НомерСтроки,
		|	КорректируемыеСтроки.ДатаОтгрузки КАК ДатаОтгрузки,
		|	КорректируемыеСтроки.КоличествоУпаковок КАК КоличествоУпаковок,
		|	КорректируемыеСтроки.КодСтроки КАК КодСтроки,
		|	КорректируемыеСтроки.УпаковкаКоэффициент КАК УпаковкаКоэффициент,
		|	КорректируемыеСтроки.НоваяСтрока КАК НоваяСтрока
		|ПОМЕСТИТЬ КорректируемыеСтроки
		|ИЗ
		|	&КорректируемыеСтроки КАК КорректируемыеСтроки
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	КорректируемыеСтроки.НомерСтроки КАК НомерСтроки,
		|	СУММА(КорректируемыеСтроки.КоличествоУпаковок) КАК КоличествоУпаковок,
		|	МАКСИМУМ(КорректируемыеСтроки.УпаковкаКоэффициент) КАК УпаковкаКоэффициент
		|ПОМЕСТИТЬ КорректируемыеСтрокиИтог
		|ИЗ
		|	КорректируемыеСтроки КАК КорректируемыеСтроки
		|
		|СГРУППИРОВАТЬ ПО
		|	КорректируемыеСтроки.НомерСтроки
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	Товары.НомерСтроки КАК НомерСтроки,
		|	Товары.Номенклатура КАК Номенклатура,
		|	Товары.Характеристика КАК Характеристика,
		|	Товары.Упаковка КАК Упаковка,
		|	ВЫБОР
		|		КОГДА КорректируемыеСтроки.НомерСтроки ЕСТЬ NULL 
		|			ТОГДА Товары.КоличествоУпаковок
		|		ИНАЧЕ КорректируемыеСтроки.КоличествоУпаковок + ВЫБОР
		|				КОГДА КорректируемыеСтрокиИтог.НомерСтроки ЕСТЬ NULL 
		|					ТОГДА 0
		|				ИНАЧЕ Товары.КоличествоУпаковок - КорректируемыеСтрокиИтог.КоличествоУпаковок
		|			КОНЕЦ
		|	КОНЕЦ КАК КоличествоУпаковок,
		|	ВЫБОР
		|		КОГДА КорректируемыеСтроки.НомерСтроки ЕСТЬ NULL 
		|			ТОГДА Товары.Количество
		|		ИНАЧЕ КорректируемыеСтроки.КоличествоУпаковок * КорректируемыеСтроки.УпаковкаКоэффициент + ВЫБОР
		|				КОГДА КорректируемыеСтрокиИтог.НомерСтроки ЕСТЬ NULL 
		|					ТОГДА 0
		|				ИНАЧЕ (Товары.КоличествоУпаковок - КорректируемыеСтрокиИтог.КоличествоУпаковок) * КорректируемыеСтрокиИтог.УпаковкаКоэффициент
		|			КОНЕЦ
		|	КОНЕЦ КАК Количество,
		|	ЕСТЬNULL(КорректируемыеСтроки.ДатаОтгрузки, Товары.ДатаОтгрузки) КАК ДатаОтгрузки,
		|	Товары.Отменено КАК Отменено,
		|	ЕСТЬNULL(КорректируемыеСтроки.КодСтроки, Товары.КодСтроки) КАК КодСтроки,
		|	Товары.СтатьяРасходов КАК СтатьяРасходов,
		|	Товары.АналитикаРасходов КАК АналитикаРасходов,
		|	Товары.ФизическоеЛицо КАК ФизическоеЛицо,
		|	Товары.СрокЭксплуатации КАК СрокЭксплуатации,
		|	Товары.СтатусУказанияСерий КАК СтатусУказанияСерий,
		|	Товары.УказыватьСерии КАК УказыватьСерии
		|ИЗ
		|	Товары КАК Товары
		|		ЛЕВОЕ СОЕДИНЕНИЕ КорректируемыеСтроки КАК КорректируемыеСтроки
		|		ПО Товары.НомерСтроки = КорректируемыеСтроки.НомерСтроки
		|		ЛЕВОЕ СОЕДИНЕНИЕ КорректируемыеСтрокиИтог КАК КорректируемыеСтрокиИтог
		|		ПО Товары.НомерСтроки = КорректируемыеСтрокиИтог.НомерСтроки
		|			И (НЕ КорректируемыеСтроки.НоваяСтрока)
		|
		|УПОРЯДОЧИТЬ ПО
		|	НомерСтроки");
		
		Запрос.УстановитьПараметр("Товары", ПолучитьИзВременногоХранилища(Параметры.АдресТовары));
		Запрос.УстановитьПараметр("КорректируемыеСтроки", Товары.Выгрузить(Новый Структура("СтрокаИзменена", Истина)));
		
		Возврат Запрос.Выполнить().Выгрузить();
		
	// Заказ на перемещение	
	ИначеЕсли ТипЗнч(Параметры.Заказ) = Тип("ДокументСсылка.ЗаказНаПеремещение") Тогда
		
		Запрос = Новый Запрос(
		"ВЫБРАТЬ
		|	Товары.НомерСтроки КАК НомерСтроки,
		|	Товары.НачалоОтгрузки КАК НачалоОтгрузки,
		|	Товары.ОкончаниеПоступления КАК ОкончаниеПоступления,
		|	Товары.Количество КАК Количество,
		|	Товары.КоличествоУпаковок КАК КоличествоУпаковок,
		|	Товары.Номенклатура КАК Номенклатура,
		|	Товары.Упаковка КАК Упаковка,
		|	Товары.Характеристика КАК Характеристика,
		|	Товары.ВариантОбеспечения КАК ВариантОбеспечения,
		|	Товары.Назначение КАК Назначение,
		|	Товары.Отменено КАК Отменено,
		|	Товары.КодСтроки КАК КодСтроки,
		|	Товары.СтатусУказанияСерий КАК СтатусУказанияСерий,
		|	Товары.УказыватьСерии КАК УказыватьСерии
		|ПОМЕСТИТЬ Товары
		|ИЗ
		|	&Товары КАК Товары
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	КорректируемыеСтроки.НомерСтрокиДокумента КАК НомерСтроки,
		|	КорректируемыеСтроки.ДатаОтгрузки КАК НачалоОтгрузки,
		|	КорректируемыеСтроки.КоличествоУпаковок КАК КоличествоУпаковок,
		|	КорректируемыеСтроки.КодСтроки КАК КодСтроки,
		|	КорректируемыеСтроки.УпаковкаКоэффициент КАК УпаковкаКоэффициент,
		|	КорректируемыеСтроки.НоваяСтрока КАК НоваяСтрока
		|ПОМЕСТИТЬ КорректируемыеСтроки
		|ИЗ
		|	&КорректируемыеСтроки КАК КорректируемыеСтроки
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	КорректируемыеСтроки.НомерСтроки КАК НомерСтроки,
		|	СУММА(КорректируемыеСтроки.КоличествоУпаковок) КАК КоличествоУпаковок,
		|	МАКСИМУМ(КорректируемыеСтроки.УпаковкаКоэффициент) КАК УпаковкаКоэффициент
		|ПОМЕСТИТЬ КорректируемыеСтрокиИтог
		|ИЗ
		|	КорректируемыеСтроки КАК КорректируемыеСтроки
		|
		|СГРУППИРОВАТЬ ПО
		|	КорректируемыеСтроки.НомерСтроки
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	Товары.НомерСтроки КАК НомерСтроки,
		|	ЕСТЬNULL(КорректируемыеСтроки.НачалоОтгрузки, Товары.НачалоОтгрузки) КАК НачалоОтгрузки,
		|	Товары.ОкончаниеПоступления КАК ОкончаниеПоступления,
		|	ВЫБОР
		|		КОГДА КорректируемыеСтроки.НомерСтроки ЕСТЬ NULL 
		|			ТОГДА Товары.КоличествоУпаковок
		|		ИНАЧЕ КорректируемыеСтроки.КоличествоУпаковок + ВЫБОР
		|				КОГДА КорректируемыеСтрокиИтог.НомерСтроки ЕСТЬ NULL 
		|					ТОГДА 0
		|				ИНАЧЕ Товары.КоличествоУпаковок - КорректируемыеСтрокиИтог.КоличествоУпаковок
		|			КОНЕЦ
		|	КОНЕЦ КАК КоличествоУпаковок,
		|	ВЫБОР
		|		КОГДА КорректируемыеСтроки.НомерСтроки ЕСТЬ NULL 
		|			ТОГДА Товары.Количество
		|		ИНАЧЕ КорректируемыеСтроки.КоличествоУпаковок * КорректируемыеСтроки.УпаковкаКоэффициент + ВЫБОР
		|				КОГДА КорректируемыеСтрокиИтог.НомерСтроки ЕСТЬ NULL 
		|					ТОГДА 0
		|				ИНАЧЕ (Товары.КоличествоУпаковок - КорректируемыеСтрокиИтог.КоличествоУпаковок) * КорректируемыеСтрокиИтог.УпаковкаКоэффициент
		|			КОНЕЦ
		|	КОНЕЦ КАК Количество,
		|	Товары.Номенклатура КАК Номенклатура,
		|	Товары.Упаковка КАК Упаковка,
		|	Товары.Характеристика КАК Характеристика,
		|	Товары.ВариантОбеспечения КАК ВариантОбеспечения,
		|	Товары.Назначение КАК Назначение,
		|	Товары.Отменено КАК Отменено,
		|	ЕСТЬNULL(КорректируемыеСтроки.КодСтроки, Товары.КодСтроки) КАК КодСтроки,
		|	Товары.СтатусУказанияСерий КАК СтатусУказанияСерий,
		|	Товары.УказыватьСерии КАК УказыватьСерии
		|ИЗ
		|	Товары КАК Товары
		|		ЛЕВОЕ СОЕДИНЕНИЕ КорректируемыеСтроки КАК КорректируемыеСтроки
		|		ПО Товары.НомерСтроки = КорректируемыеСтроки.НомерСтроки
		|		ЛЕВОЕ СОЕДИНЕНИЕ КорректируемыеСтрокиИтог КАК КорректируемыеСтрокиИтог
		|		ПО Товары.НомерСтроки = КорректируемыеСтрокиИтог.НомерСтроки
		|			И (НЕ КорректируемыеСтроки.НоваяСтрока)
		|
		|УПОРЯДОЧИТЬ ПО
		|	НомерСтроки");
		
		Запрос.УстановитьПараметр("Товары", ПолучитьИзВременногоХранилища(Параметры.АдресТовары));
		Запрос.УстановитьПараметр("КорректируемыеСтроки", Товары.Выгрузить(Новый Структура("СтрокаИзменена", Истина)));
		
		Возврат Запрос.Выполнить().Выгрузить();
		
	// Заказ на сборку	
	ИначеЕсли ТипЗнч(Параметры.Заказ) = Тип("ДокументСсылка.ЗаказНаСборку") Тогда
		
		Запрос = Новый Запрос(
		"ВЫБРАТЬ
		|	Товары.НомерСтроки КАК НомерСтроки,
		|	Товары.Номенклатура КАК Номенклатура,
		|	Товары.Характеристика КАК Характеристика,
		|	Товары.Упаковка КАК Упаковка,
		|	Товары.Количество КАК Количество,
		|	Товары.КоличествоУпаковок КАК КоличествоУпаковок,
		|	Товары.КодСтроки КАК КодСтроки,
		|	Товары.НачалоСборкиРазборки КАК НачалоСборкиРазборки,
		|	Товары.СтатусУказанияСерий КАК СтатусУказанияСерий,
		|	Товары.УказыватьСерии КАК УказыватьСерии,
		|	Товары.ВариантОбеспечения КАК ВариантОбеспечения
		|ПОМЕСТИТЬ Товары
		|ИЗ
		|	&Товары КАК Товары
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	КорректируемыеСтроки.НомерСтрокиДокумента КАК НомерСтроки,
		|	КорректируемыеСтроки.ДатаОтгрузки КАК НачалоСборкиРазборки,
		|	КорректируемыеСтроки.КоличествоУпаковок КАК КоличествоУпаковок,
		|	КорректируемыеСтроки.КодСтроки КАК КодСтроки,
		|	КорректируемыеСтроки.УпаковкаКоэффициент КАК УпаковкаКоэффициент,
		|	КорректируемыеСтроки.НоваяСтрока КАК НоваяСтрока
		|ПОМЕСТИТЬ КорректируемыеСтроки
		|ИЗ
		|	&КорректируемыеСтроки КАК КорректируемыеСтроки
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	КорректируемыеСтроки.НомерСтроки КАК НомерСтроки,
		|	СУММА(КорректируемыеСтроки.КоличествоУпаковок) КАК КоличествоУпаковок,
		|	МАКСИМУМ(КорректируемыеСтроки.УпаковкаКоэффициент) КАК УпаковкаКоэффициент
		|ПОМЕСТИТЬ КорректируемыеСтрокиИтог
		|ИЗ
		|	КорректируемыеСтроки КАК КорректируемыеСтроки
		|
		|СГРУППИРОВАТЬ ПО
		|	КорректируемыеСтроки.НомерСтроки
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	Товары.НомерСтроки КАК НомерСтроки,
		|	Товары.Номенклатура КАК Номенклатура,
		|	Товары.Характеристика КАК Характеристика,
		|	Товары.ВариантОбеспечения КАК ВариантОбеспечения,
		|	Товары.Упаковка КАК Упаковка,
		|	ВЫБОР
		|		КОГДА КорректируемыеСтроки.НомерСтроки ЕСТЬ NULL 
		|			ТОГДА Товары.КоличествоУпаковок
		|		ИНАЧЕ КорректируемыеСтроки.КоличествоУпаковок + ВЫБОР
		|				КОГДА КорректируемыеСтрокиИтог.НомерСтроки ЕСТЬ NULL 
		|					ТОГДА 0
		|				ИНАЧЕ Товары.КоличествоУпаковок - КорректируемыеСтрокиИтог.КоличествоУпаковок
		|			КОНЕЦ
		|	КОНЕЦ КАК КоличествоУпаковок,
		|	ВЫБОР
		|		КОГДА КорректируемыеСтроки.НомерСтроки ЕСТЬ NULL 
		|			ТОГДА Товары.Количество
		|		ИНАЧЕ КорректируемыеСтроки.КоличествоУпаковок * КорректируемыеСтроки.УпаковкаКоэффициент + ВЫБОР
		|				КОГДА КорректируемыеСтрокиИтог.НомерСтроки ЕСТЬ NULL 
		|					ТОГДА 0
		|				ИНАЧЕ (Товары.КоличествоУпаковок - КорректируемыеСтрокиИтог.КоличествоУпаковок) * КорректируемыеСтрокиИтог.УпаковкаКоэффициент
		|			КОНЕЦ
		|	КОНЕЦ КАК Количество,
		|	ЕСТЬNULL(КорректируемыеСтроки.КодСтроки, Товары.КодСтроки) КАК КодСтроки,
		|	ЕСТЬNULL(КорректируемыеСтроки.НачалоСборкиРазборки, Товары.НачалоСборкиРазборки) КАК НачалоСборкиРазборки,
		|	Товары.СтатусУказанияСерий КАК СтатусУказанияСерий,
		|	Товары.УказыватьСерии КАК УказыватьСерии
		|ИЗ
		|	Товары КАК Товары
		|		ЛЕВОЕ СОЕДИНЕНИЕ КорректируемыеСтроки КАК КорректируемыеСтроки
		|		ПО Товары.НомерСтроки = КорректируемыеСтроки.НомерСтроки
		|		ЛЕВОЕ СОЕДИНЕНИЕ КорректируемыеСтрокиИтог КАК КорректируемыеСтрокиИтог
		|		ПО Товары.НомерСтроки = КорректируемыеСтрокиИтог.НомерСтроки
		|			И (НЕ КорректируемыеСтроки.НоваяСтрока)
		|
		|УПОРЯДОЧИТЬ ПО
		|	НомерСтроки");
		
		Запрос.УстановитьПараметр("Товары", ПолучитьИзВременногоХранилища(Параметры.АдресТовары));
		Запрос.УстановитьПараметр("КорректируемыеСтроки", Товары.Выгрузить(Новый Структура("СтрокаИзменена", Истина)));
		
		Возврат Запрос.Выполнить().Выгрузить();
		
	// Заявка на возврат товаров от клиента	
	ИначеЕсли ТипЗнч(Параметры.Заказ) = Тип("ДокументСсылка.ЗаявкаНаВозвратТоваровОтКлиента") Тогда
		
		Запрос = Новый Запрос(
		"ВЫБРАТЬ
		|	Товары.НомерСтроки КАК НомерСтроки,
		|	Товары.ДатаОтгрузки КАК ДатаОтгрузки,
		|	Товары.Номенклатура КАК Номенклатура,
		|	Товары.Характеристика КАК Характеристика,
		|	Товары.ВариантОбеспечения КАК ВариантОбеспечения,
		|	Товары.Содержание КАК Содержание,
		|	Товары.Упаковка КАК Упаковка,
		|	Товары.КоличествоУпаковок КАК КоличествоУпаковок,
		|	Товары.Количество КАК Количество,
		|	Товары.ВидЦены КАК ВидЦены,
		|	Товары.Цена КАК Цена,
		|	Товары.Сумма КАК Сумма,
		|	Товары.СтавкаНДС КАК СтавкаНДС,
		|	Товары.СуммаНДС КАК СуммаНДС,
		|	Товары.СуммаСНДС КАК СуммаСНДС,
		|	Товары.ПроцентРучнойСкидки КАК ПроцентРучнойСкидки,
		|	Товары.СуммаРучнойСкидки КАК СуммаРучнойСкидки,
		|	Товары.ПроцентАвтоматическойСкидки КАК ПроцентАвтоматическойСкидки,
		|	Товары.СуммаАвтоматическойСкидки КАК СуммаАвтоматическойСкидки,
		|	Товары.КодСтроки КАК КодСтроки,
		|	Товары.Отменено КАК Отменено,
		|	Товары.КлючСвязи КАК КлючСвязи,
		|	Товары.ПричинаОтмены КАК ПричинаОтмены,
		|	Товары.СрокПоставки КАК СрокПоставки,
		|	Товары.СтатусУказанияСерий КАК СтатусУказанияСерий,
		|	Товары.УказыватьСерии КАК УказыватьСерии
		|ПОМЕСТИТЬ Товары
		|ИЗ
		|	&Товары КАК Товары
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	КорректируемыеСтроки.НомерСтрокиДокумента КАК НомерСтроки,
		|	КорректируемыеСтроки.ДатаОтгрузки КАК ДатаОтгрузки,
		|	КорректируемыеСтроки.КоличествоУпаковок КАК КоличествоУпаковок,
		|	КорректируемыеСтроки.КодСтроки КАК КодСтроки,
		|	КорректируемыеСтроки.УпаковкаКоэффициент КАК УпаковкаКоэффициент,
		|	КорректируемыеСтроки.НоваяСтрока КАК НоваяСтрока
		|ПОМЕСТИТЬ КорректируемыеСтроки
		|ИЗ
		|	&КорректируемыеСтроки КАК КорректируемыеСтроки
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	КорректируемыеСтроки.НомерСтроки КАК НомерСтроки,
		|	СУММА(КорректируемыеСтроки.КоличествоУпаковок) КАК КоличествоУпаковок,
		|	МАКСИМУМ(КорректируемыеСтроки.УпаковкаКоэффициент) КАК УпаковкаКоэффициент
		|ПОМЕСТИТЬ КорректируемыеСтрокиИтог
		|ИЗ
		|	КорректируемыеСтроки КАК КорректируемыеСтроки
		|
		|СГРУППИРОВАТЬ ПО
		|	КорректируемыеСтроки.НомерСтроки
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	Товары.НомерСтроки КАК НомерСтроки,
		|	ЕСТЬNULL(КорректируемыеСтроки.ДатаОтгрузки, Товары.ДатаОтгрузки) КАК ДатаОтгрузки,
		|	Товары.Номенклатура КАК Номенклатура,
		|	Товары.Характеристика КАК Характеристика,
		|	Товары.ВариантОбеспечения КАК ВариантОбеспечения,
		|	Товары.Содержание КАК Содержание,
		|	Товары.Упаковка КАК Упаковка,
		|	ВЫБОР
		|		КОГДА КорректируемыеСтроки.НомерСтроки ЕСТЬ NULL 
		|			ТОГДА Товары.КоличествоУпаковок
		|		ИНАЧЕ КорректируемыеСтроки.КоличествоУпаковок + ВЫБОР
		|				КОГДА КорректируемыеСтрокиИтог.НомерСтроки ЕСТЬ NULL 
		|					ТОГДА 0
		|				ИНАЧЕ Товары.КоличествоУпаковок - КорректируемыеСтрокиИтог.КоличествоУпаковок
		|			КОНЕЦ
		|	КОНЕЦ КАК КоличествоУпаковок,
		|	ВЫБОР
		|		КОГДА КорректируемыеСтроки.НомерСтроки ЕСТЬ NULL 
		|			ТОГДА Товары.Количество
		|		ИНАЧЕ КорректируемыеСтроки.КоличествоУпаковок * КорректируемыеСтроки.УпаковкаКоэффициент + ВЫБОР
		|				КОГДА КорректируемыеСтрокиИтог.НомерСтроки ЕСТЬ NULL 
		|					ТОГДА 0
		|				ИНАЧЕ (Товары.КоличествоУпаковок - КорректируемыеСтрокиИтог.КоличествоУпаковок) * КорректируемыеСтрокиИтог.УпаковкаКоэффициент
		|			КОНЕЦ
		|	КОНЕЦ КАК Количество,
		|	Товары.ВидЦены КАК ВидЦены,
		|	Товары.Цена КАК Цена,
		|	Товары.Сумма КАК Сумма,
		|	Товары.СтавкаНДС КАК СтавкаНДС,
		|	Товары.СуммаНДС КАК СуммаНДС,
		|	Товары.СуммаСНДС КАК СуммаСНДС,
		|	Товары.ПроцентРучнойСкидки КАК ПроцентРучнойСкидки,
		|	Товары.СуммаРучнойСкидки КАК СуммаРучнойСкидки,
		|	Товары.ПроцентАвтоматическойСкидки КАК ПроцентАвтоматическойСкидки,
		|	Товары.СуммаАвтоматическойСкидки КАК СуммаАвтоматическойСкидки,
		|	ЕСТЬNULL(КорректируемыеСтроки.КодСтроки, Товары.КодСтроки) КАК КодСтроки,
		|	Товары.Отменено КАК Отменено,
		|	Товары.КлючСвязи КАК КлючСвязи,
		|	Товары.ПричинаОтмены КАК ПричинаОтмены,
		|	Товары.СрокПоставки КАК СрокПоставки,
		|	Товары.СтатусУказанияСерий КАК СтатусУказанияСерий,
		|	Товары.УказыватьСерии КАК УказыватьСерии
		|ИЗ
		|	Товары КАК Товары
		|		ЛЕВОЕ СОЕДИНЕНИЕ КорректируемыеСтроки КАК КорректируемыеСтроки
		|		ПО Товары.НомерСтроки = КорректируемыеСтроки.НомерСтроки
		|		ЛЕВОЕ СОЕДИНЕНИЕ КорректируемыеСтрокиИтог КАК КорректируемыеСтрокиИтог
		|		ПО Товары.НомерСтроки = КорректируемыеСтрокиИтог.НомерСтроки
		|			И (НЕ КорректируемыеСтроки.НоваяСтрока)
		|
		|УПОРЯДОЧИТЬ ПО
		|	НомерСтроки");
		
		Запрос.УстановитьПараметр("Товары", ПолучитьИзВременногоХранилища(Параметры.АдресТовары));
		Запрос.УстановитьПараметр("КорректируемыеСтроки", Товары.Выгрузить(Новый Структура("СтрокаИзменена", Истина)));
		
		Возврат Запрос.Выполнить().Выгрузить();
		
	Иначе
		
		Возврат Неопределено;

	КонецЕсли;
	
КонецФункции

////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

////////////////////////////////////////////////////////////////////////////////
// Прочее

Функция СтрокаСоответствуетОтбору(ПроверяемаяСтрока, ЗначениеОтбора)
	
	Возврат ЗначениеОтбора = Перечисления.СостоянияНаличия.ПолностьюИлиЧастичноВНаличии
		И ПроверяемаяСтрока.ПолностьюИлиЧастичноВНаличии
		ИЛИ ЗначениеОтбора = Перечисления.СостоянияНаличия.ЧастичноИлиНетВНаличии
		И ПроверяемаяСтрока.ЧастичноИлиНетВНаличии
		ИЛИ ЗначениеОтбора = Перечисления.СостоянияНаличия.Любое
		ИЛИ ПроверяемаяСтрока.СостояниеНаличия = ЗначениеОтбора;

КонецФункции

Функция ДатаОтгрузки(СтрокаЗаказа, ЖелаемаяДатаОтгрузки, НачалоТекущегоДня, ОкончаниеТекущегоДня)
	
	ДатаОтгрузки = Неопределено;
	
	Если СтрокаЗаказа.СостояниеНаличия = Перечисления.СостоянияНаличия.НетВНаличии Тогда
		
		Если СтрокаЗаказа.НеОбеспечено > 0 Тогда
		
			Если ЗначениеЗаполнено(СтрокаЗаказа.ГраницаГрафикаДоступностиСрокПоставки) Тогда
				
				ДатаОтгрузки = Макс(ЖелаемаяДатаОтгрузки, Мин(СтрокаЗаказа.ГраницаГрафикаДоступности, СтрокаЗаказа.ГраницаГрафикаДоступностиСрокПоставки));
				
			Иначе
				
				ДатаОтгрузки = Макс(ЖелаемаяДатаОтгрузки, СтрокаЗаказа.ГраницаГрафикаДоступности, СтрокаЗаказа.БлижайшаяДатаПоставки);
				
			КонецЕсли;
			
		ИначеЕсли СтрокаЗаказа.ОбеспеченоПоступлением > 0 Тогда
			
			Если ЗначениеЗаполнено(СтрокаЗаказа.ГраницаГрафикаДоступностиСрокПоставки) Тогда
				
				ДатаОтгрузки = Макс(ЖелаемаяДатаОтгрузки, Мин(СтрокаЗаказа.ОжидаемаяДатаПоступления, СтрокаЗаказа.ГраницаГрафикаДоступностиСрокПоставки));
				
			Иначе
				
				ДатаОтгрузки = Макс(ЖелаемаяДатаОтгрузки, СтрокаЗаказа.ОжидаемаяДатаПоступления);
				
			КонецЕсли;
			
		КонецЕсли;
		
	ИначеЕсли СтрокаЗаказа.СостояниеНаличия = Перечисления.СостоянияНаличия.ЧастичноВНаличии Тогда
		
		Если СтрокаЗаказа.НеОбеспечено > 0 Тогда
			
			Если ЗначениеЗаполнено(СтрокаЗаказа.ГраницаГрафикаДоступностиСрокПоставки) Тогда
				
				ДатаОтгрузки = Макс(ЖелаемаяДатаОтгрузки, Мин(СтрокаЗаказа.ГраницаГрафикаДоступности, СтрокаЗаказа.ГраницаГрафикаДоступностиСрокПоставки));
				
			Иначе
				
				ДатаОтгрузки = Макс(ЖелаемаяДатаОтгрузки, СтрокаЗаказа.ГраницаГрафикаДоступности, СтрокаЗаказа.БлижайшаяДатаПоставки);
				
			КонецЕсли;
			
		ИначеЕсли СтрокаЗаказа.ОбеспеченоПоступлением > 0 Тогда
			
			Если ЗначениеЗаполнено(СтрокаЗаказа.ГраницаГрафикаДоступностиСрокПоставки) Тогда
				
				ДатаОтгрузки = Макс(ЖелаемаяДатаОтгрузки, Мин(СтрокаЗаказа.ОжидаемаяДатаПоступления, СтрокаЗаказа.ГраницаГрафикаДоступностиСрокПоставки));
				
			Иначе
				
				ДатаОтгрузки = Макс(ЖелаемаяДатаОтгрузки, СтрокаЗаказа.ОжидаемаяДатаПоступления);
				
			КонецЕсли;
			
		КонецЕсли;
		
	ИначеЕсли СтрокаЗаказа.СостояниеНаличия = Перечисления.СостоянияНаличия.ПолностьюВНаличии Тогда
		
		Если СтрокаЗаказа.ДатаОтгрузки <> Макс(НачалоТекущегоДня, ЖелаемаяДатаОтгрузки) Тогда
			
			ДатаОтгрузки = Макс(НачалоТекущегоДня, ЖелаемаяДатаОтгрузки);
			
		Иначе
			
			ДатаОтгрузки = СтрокаЗаказа.ДатаОтгрузки;
			
		КонецЕсли;
		
	КонецЕсли;
	
	Возврат ДатаОтгрузки;
	
КонецФункции

#КонецЕсли
