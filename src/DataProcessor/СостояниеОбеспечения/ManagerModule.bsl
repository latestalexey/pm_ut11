#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

//Функция ТекстЗапросаКОбеспечению()
//
//Возвращаемое значение
//
//	Для связи с измерениями регистров:
//		Номенклатура,
//		Характеристика,
//		Склад,
//		Подразделение,
//		Назначение,
//		КодСтроки.
//
//	Ограничивают соединения с теми или иными регистрами исходя из логики учета:
//		ЭтоНазначениеНовое,
//		ВариантОбеспечения,
//		ТипНоменклатуры.
//
//	Поддерживают хронологию:
//		ДатаОтгрузки,
//		ДатаДокумента,
//		ДатаОтгрузкиПоСроку.
//
//	Для связи с исходной строкой таб. части и компоновки блоков получаемых данных:
//		Заказ,
//		НомерСтроки.
//
//	Информационные поля:
//		Код,
//		Артикул,
//		Упаковка,
//		УпаковкаКоэффициент,
//		ЕдиницаИзмерения.
//
//	Определяют дополнительное упорядочивание строк внутри заказа:
//		УказыватьСерии,
//		СтатусУказанияСерий,
//		ПринятКОбеспечению
//
//	Требующее обеспечения количество:
//		Количество.
//
Функция ТекстЗапросаКОбеспечению(Параметры) Экспорт

	ТекстЗапроса = "
		|ВЫБРАТЬ 
		|	ОстаткиПоСтроке.КодСтроки,
		|	ОстаткиПоСтроке.Номенклатура,
		|	ОстаткиПоСтроке.Характеристика,
		|	ОстаткиПоСтроке.ЗаказаноОстаток
		|ПОМЕСТИТЬ ОстаткиПоСтроке
		|ИЗ
		|	РегистрНакопления." + Параметры.ИмяРегистраЗаказы + ".Остатки(
		|		, " + Параметры.ИмяИзмеренияЗаказа + " = &Заказ " + 
		?(Параметры.ВидДокумента = "ЗаказНаСборку","
		|			И ТипСборки = ЗНАЧЕНИЕ(Перечисление.ТипыДвиженияЗапасов.Отгрузка)", "") + "
		|		) КАК ОстаткиПоСтроке
		|ГДЕ
		|	НЕ &РассчитатьБезЗаказа
		|;
		|///////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	Товары.Заказ                                                       КАК Заказ,
		|	Товары.Подразделение                                               КАК Подразделение,
		|	Товары.ДатаДокумента                                               КАК ДатаДокумента,
		|	Товары.Склад                                                       КАК Склад,
		|	Товары.КодСтроки                                                   КАК КодСтроки,
		|	Товары.НомерСтроки                                                 КАК НомерСтроки,
		|	Товары.Номенклатура                                                КАК Номенклатура,
		|	Товары.Характеристика                                              КАК Характеристика,
		|	Товары.Упаковка                                                    КАК Упаковка,
		|	ЕСТЬNULL(Товары.Упаковка.Коэффициент, 1)                           КАК УпаковкаКоэффициент,
		|	Товары.Номенклатура.ЕдиницаИзмерения                               КАК ЕдиницаИзмерения,
		|	Товары.Номенклатура.Код                                            КАК Код,
		|	Товары.Номенклатура.Артикул                                        КАК Артикул,
		|	Товары.Номенклатура.ТипНоменклатуры                                КАК ТипНоменклатуры,
		|	Товары.ДатаОтгрузки                                                КАК ДатаОтгрузки,
		|	ДОБАВИТЬКДАТЕ(&НачалоТекущегоДня, ДЕНЬ,
		|		Товары.СрокПоставки)                                           КАК ДатаОтгрузкиПоСроку,
		|	Товары.СрокПоставки                                                КАК СрокПоставки,
		|	Товары.УказыватьСерии                                              КАК УказыватьСерии,
		|	Товары.СтатусУказанияСерий                                         КАК СтатусУказанияСерий,
		|	Товары.ВариантОбеспечения                                          КАК ВариантОбеспечения,
		|	ВЫБОР
		|		КОГДА Товары.ВариантОбеспечения
		|			<> ЗНАЧЕНИЕ(Перечисление.ВариантыОбеспечения.ПустаяСсылка)
		|		ТОГДА
		|			Товары.Назначение
		|		ИНАЧЕ
		|			ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
		|	КОНЕЦ                                                              КАК Назначение,
		|	ВЫБОР
		|		КОГДА Товары.ВариантОбеспечения
		|			<> ЗНАЧЕНИЕ(Перечисление.ВариантыОбеспечения.ПустаяСсылка)
		|			И Товары.Назначение = ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
		|		ТОГДА
		|			ИСТИНА
		|		ИНАЧЕ
		|			ЛОЖЬ
		|	КОНЕЦ                                                              КАК ЭтоНазначениеНовое,
		|	Товары.Количество +
		|		ЕСТЬNULL(ОстаткиПоСтроке.ЗаказаноОстаток, 0)
		|		- ЕСТЬNULL(ЗаказаноПоСтроке.Заказано, 0)
		|		- ЕСТЬNULL(ОтмененоПоСтроке.Заказано, 0)                       КАК Количество,
		|	ВЫБОР
		|		КОГДА ЕСТЬNULL(ЗаказаноПоСтроке.Заказано, 0) <> ЕСТЬNULL(ОтмененоПоСтроке.Заказано, 0)
		|				И Товары.ДатаОтгрузки <> ДАТАВРЕМЯ(1, 1, 1)
		|				И (НЕ &ЕстьОграничениеСтатуса
		|					ИЛИ Товары.Статус В (&СтатусыКОбеспечению)
		|				)
		|		ТОГДА
		|			ИСТИНА
		|		ИНАЧЕ
		|			ЛОЖЬ
		|	КОНЕЦ                                                              КАК ПринятКОбеспечению
		|ПОМЕСТИТЬ ТаблицаЗаказа
		|ИЗ
		|	Товары КАК Товары
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления." + Параметры.ИмяРегистраЗаказы + " КАК ЗаказаноПоСтроке
		|		ПО  НЕ &РассчитатьБезЗаказа
		|			И Товары.Заказ          = ЗаказаноПоСтроке.Регистратор
		|			И Товары.КодСтроки      = ЗаказаноПоСтроке.КодСтроки
		|			И Товары.Номенклатура   = ЗаказаноПоСтроке.Номенклатура
		|			И Товары.Характеристика = ЗаказаноПоСтроке.Характеристика
		|			И (ЗаказаноПоСтроке.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход))
		|			И (ЗаказаноПоСтроке.Заказано > 0)
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления." + Параметры.ИмяРегистраЗаказы + " КАК ОтмененоПоСтроке
		|		ПО НЕ &РассчитатьБезЗаказа И &ИзвлекатьОтмененныеСтроки
		|			И Товары.Заказ          = ОтмененоПоСтроке.Регистратор
		|			И Товары.КодСтроки      = ОтмененоПоСтроке.КодСтроки
		|			И Товары.Номенклатура   = ОтмененоПоСтроке.Номенклатура
		|			И Товары.Характеристика = ОтмененоПоСтроке.Характеристика
		|			И (ОтмененоПоСтроке.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход))
		|			И (ОтмененоПоСтроке.Заказано < 0)
		|		ЛЕВОЕ СОЕДИНЕНИЕ ОстаткиПоСтроке КАК ОстаткиПоСтроке
		|		ПО Товары.КодСтроки         = ОстаткиПоСтроке.КодСтроки
		|			И Товары.Номенклатура   = ОстаткиПоСтроке.Номенклатура
		|			И Товары.Характеристика = ОстаткиПоСтроке.Характеристика
		|ГДЕ
		|	Товары.Количество +
		|		ЕСТЬNULL(ОстаткиПоСтроке.ЗаказаноОстаток, 0)
		|		- ЕСТЬNULL(ЗаказаноПоСтроке.Заказано, 0)
		|		- ЕСТЬNULL(ОтмененоПоСтроке.Заказано, 0)
		|	> 0
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	НомерСтроки
		|;
		|////////////////////////////////////////////////////////////////////////////////
		|";
		
	Возврат ТекстЗапроса;
	
КонецФункции // ТекстЗапросаКОбеспечению()

//Функция ТекстЗапросаРезервовВТаблице()
Функция ТекстЗапросаРезервовВТаблице(ИмяВедущейТаблицы, ИмяВременнойТаблицыРезультата) Экспорт
	
	//Резервы для варианта обеспечения со склада только строки со склада.
	ТекстЗапроса = "
		|ВЫБРАТЬ
		|	Таблица.НомерСтроки                              КАК НомерСтроки,
		|	СУММА(ЕСТЬNULL(СтрокиРезерва.Количество, 0))     КАК Количество
		|ПОМЕСТИТЬ " + ИмяВременнойТаблицыРезультата + "
		|ИЗ
		|	" + ИмяВедущейТаблицы + " КАК Таблица
		|		ЛЕВОЕ СОЕДИНЕНИЕ " + ИмяВедущейТаблицы + " КАК СтрокиРезерва
		|		ПО  Таблица.Склад            = СтрокиРезерва.Склад
		|			И Таблица.Номенклатура   = СтрокиРезерва.Номенклатура
		|			И Таблица.Характеристика = СтрокиРезерва.Характеристика
		|			И (ВЫБОР
		|				КОГДА Таблица.ВариантОбеспечения  = СтрокиРезерва.ВариантОбеспечения
		|					И Таблица.Назначение          = СтрокиРезерва.Назначение
		|					И Таблица.ПринятКОбеспечению  = СтрокиРезерва.ПринятКОбеспечению
		|					И Таблица.УказыватьСерии      = СтрокиРезерва.УказыватьСерии
		|					И Таблица.СтатусУказанияСерий = СтрокиРезерва.СтатусУказанияСерий
		|				ТОГДА
		|					ВЫБОР
		|						КОГДА Таблица.ДатаОтгрузки > СтрокиРезерва.ДатаОтгрузки
		|								И Таблица.ТипНоменклатуры В (ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Товар),ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара))
		|							ИЛИ Таблица.ДатаОтгрузки = СтрокиРезерва.ДатаОтгрузки
		|								И Таблица.НомерСтроки > СтрокиРезерва.НомерСтроки
		|						ТОГДА
		|							ИСТИНА
		|						ИНАЧЕ
		|							ЛОЖЬ
		|						КОНЕЦ
		|				КОГДА Таблица.ВариантОбеспечения  = СтрокиРезерва.ВариантОбеспечения
		|					И Таблица.Назначение          = СтрокиРезерва.Назначение
		|					И Таблица.ПринятКОбеспечению  = СтрокиРезерва.ПринятКОбеспечению
		|				ТОГДА
		|					ВЫБОР
		|						КОГДА 
		|							СтрокиРезерва.УказыватьСерии = ИСТИНА
		|							И СтрокиРезерва.СтатусУказанияСерий = 10
		|						ТОГДА
		|							ИСТИНА
		|						ИНАЧЕ
		|							ЛОЖЬ
		|					КОНЕЦ
		|				КОГДА Таблица.ВариантОбеспечения  = СтрокиРезерва.ВариантОбеспечения
		|					И Таблица.Назначение          = СтрокиРезерва.Назначение
		|				ТОГДА
		|					ВЫБОР
		|						КОГДА 
		|							СтрокиРезерва.ПринятКОбеспечению = ИСТИНА
		|						ТОГДА
		|							ИСТИНА
		|						ИНАЧЕ
		|							ЛОЖЬ
		|					КОНЕЦ
		|				КОГДА СтрокиРезерва.ВариантОбеспечения = ЗНАЧЕНИЕ(Перечисление.ВариантыОбеспечения.СоСклада) ТОГДА
		|					ИСТИНА
		|				ИНАЧЕ
		|					ЛОЖЬ
		|			КОНЕЦ)
		|СГРУППИРОВАТЬ ПО
		|	Таблица.НомерСтроки
		|ИНДЕКСИРОВАТЬ ПО
		|	НомерСтроки
		|;
		|
		|/////////////////////////////////////////////////////////////////////";
	Возврат ТекстЗапроса;
	
КонецФункции //ТекстЗапросаРезервовВТаблице()

Функция ТекстЗапросаСвободныхОстатков(ИмяВедущейТаблицы, ИмяВременнойТаблицыРезультата) Экспорт
	
	ТекстЗапроса = "
		|ВЫБРАТЬ
		|	СвободныеОстатки.Склад           КАК Склад,
		|	СвободныеОстатки.Номенклатура    КАК Номенклатура,
		|	СвободныеОстатки.Характеристика  КАК Характеристика,
		|	СвободныеОстатки.ВНаличииОстаток КАК Количество
		|ПОМЕСТИТЬ " + ИмяВременнойТаблицыРезультата + "
		|ИЗ
		|	РегистрНакопления.СвободныеОстатки.Остатки(
		|		,
		|		(Склад, Номенклатура, Характеристика)
		|		В (
		|			ВЫБРАТЬ
		|				Таблица.Склад          КАК Склад,
		|				Таблица.Номенклатура   КАК Номенклатура,
		|				Таблица.Характеристика КАК Характеристика
		|			ИЗ
		|				" + ИмяВедущейТаблицы + " КАК Таблица
		|			ГДЕ
		|				Таблица.ТипНоменклатуры В (ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Товар),ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара))
		|				И Таблица.ВариантОбеспечения <> ЗНАЧЕНИЕ(Перечисление.ВариантыОбеспечения.ПодЗаказ)
		|		)
		|	) КАК СвободныеОстатки
		|ИНДЕКСИРОВАТЬ ПО
		|	Склад,
		|	Номенклатура,
		|	Характеристика,
		|	Количество
		|;
		|
		|/////////////////////////////////////////////////////////////////////////////";
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаОбособленныхОстатков(ИмяВедущейТаблицы, ИмяВременнойТаблицыРезультата) Экспорт
	
	ТекстЗапроса = "
		|ВЫБРАТЬ
		|	ОбособленныеОстатки.Склад                   КАК Склад,
		|	ОбособленныеОстатки.Номенклатура            КАК Номенклатура,
		|	ОбособленныеОстатки.Характеристика          КАК Характеристика,
		|	ОбособленныеОстатки.Назначение              КАК Назначение,
		|	ОбособленныеОстатки.НаличиеПодЗаказОстаток  КАК Количество
		|ПОМЕСТИТЬ " + ИмяВременнойТаблицыРезультата + "
		|ИЗ
		|	РегистрНакопления.ОбеспечениеЗаказов.Остатки(
		|		,
		|		(Склад, Номенклатура, Характеристика, Назначение)
		|		В (
		|			ВЫБРАТЬ
		|				Таблица.Склад          КАК Склад,
		|				Таблица.Номенклатура   КАК Номенклатура,
		|				Таблица.Характеристика КАК Характеристика,
		|				Таблица.Назначение     КАК Назначение
		|			ИЗ
		|				" + ИмяВедущейТаблицы + " КАК Таблица
		|			ГДЕ
		|				Таблица.ТипНоменклатуры В (ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Товар),ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара))
		|				И Таблица.ВариантОбеспечения <> ЗНАЧЕНИЕ(Перечисление.ВариантыОбеспечения.ПустаяСсылка)
		|		
		|		)
		|	) КАК ОбособленныеОстатки
		|ИНДЕКСИРОВАТЬ ПО
		|	Склад,
		|	Номенклатура,
		|	Характеристика,
		|	Назначение,
		|	Количество
		|;
		|
		|/////////////////////////////////////////////////////////////////////////////";
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаОбеспеченияТоварами(ИмяВедущейТаблицы, ИмяВременнойТаблицыРезультата, ИменаДопПолей, ИменаПолейИндекса) Экспорт
	
	ТекстЗапроса = ТекстСекцииВыбрать(ИменаДопПолей, Истина);
	ТекстЗапроса = ТекстЗапроса + "
		|	ВЫБОР
		|		КОГДА ПланируемыеПоступления.ДатаСобытия < &НачалоТекущегоДня ТОГДА
		|			&НачалоТекущегоДня
		|		ИНАЧЕ 
		|			ПланируемыеПоступления.ДатаСобытия
		|	КОНЕЦ                                             КАК Дата,
		|	СУММА(ПланируемыеПоступления.Количество
		|		+ ПланируемыеПоступления.КоличествоПодЗаказ)  КАК Количество
		|ПОМЕСТИТЬ ПланируемыеПоступления
		|ИЗ
		|	" + ИмяВедущейТаблицы + " КАК Таблица
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.ГрафикДвиженияТоваров КАК ПланируемыеПоступления
		|			ПО Таблица.Склад             = ПланируемыеПоступления.Склад
		|				И Таблица.Номенклатура   = ПланируемыеПоступления.Номенклатура
		|				И Таблица.Характеристика = ПланируемыеПоступления.Характеристика
		|				И Таблица.Назначение     = ПланируемыеПоступления.Назначение
		|ГДЕ
		|	НЕ Таблица.ЭтоНазначениеНовое
		|	И ПланируемыеПоступления.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
		|СГРУППИРОВАТЬ ПО
		|	ВЫБОР
		|		КОГДА ПланируемыеПоступления.ДатаСобытия < &НачалоТекущегоДня ТОГДА
		|			&НачалоТекущегоДня
		|		ИНАЧЕ 
		|			ПланируемыеПоступления.ДатаСобытия
		|	КОНЕЦ,
		|	Таблица.НомерСтроки";
	ТекстЗапроса = ТекстЗапроса + ТекстСекцииИндексировать(ИменаПолейИндекса);
	ТекстЗапроса = ТекстЗапроса + "
		|;
		|
		|/////////////////////////////////////////////////////////////////////////////";
	
	ТекстЗапроса = ТекстЗапроса + ТекстСекцииВыбрать(ИменаДопПолей);
	ТекстЗапроса = ТекстЗапроса + "
		|	Таблица.Дата                                                       КАК Дата,
		|	СУММА(ПоступаетРанее.Количество)                                   КАК КоличествоВсего,
		|	СУММА(ВЫБОР
		|			КОГДА Таблица.Дата >= ПоступаетРанее.Дата ТОГДА
		|				ПоступаетРанее.Количество
		|			ИНАЧЕ
		|				0
		|		КОНЕЦ)                                                         КАК КоличествоКонецДня,
		|	СУММА(ВЫБОР
		|			КОГДА Таблица.Дата > ПоступаетРанее.Дата ТОГДА 
		|				ПоступаетРанее.Количество
		|			ИНАЧЕ 
		|				0
		|		КОНЕЦ)                                                         КАК КоличествоНачалоДня
		|ПОМЕСТИТЬ " + ИмяВременнойТаблицыРезультата + "
		|ИЗ
		|	ПланируемыеПоступления КАК Таблица
		|		ЛЕВОЕ СОЕДИНЕНИЕ ПланируемыеПоступления КАК ПоступаетРанее
		|		ПО Таблица.НомерСтроки = ПоступаетРанее.НомерСтроки
		|СГРУППИРОВАТЬ ПО
		|	Таблица.НомерСтроки,
		|	Таблица.Дата";
	ТекстЗапроса = ТекстЗапроса + ТекстСекцииИндексировать(ИменаПолейИндекса);
	ТекстЗапроса = ТекстЗапроса + "
		|;
		|
		|/////////////////////////////////////////////////////////////////////////////";
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаДатПоставки(ИмяВедущейТаблицы, ИмяВременнойТаблицыРезультата, ИменаДопПолей, ИменаПолейИндекса) Экспорт
	
	//Сворачиваем по полям вариантов поставки
	ТекстЗапроса = "
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	Таблица.КалендарьЗаказа      КАК КалендарьЗаказа,
		|	Таблица.КалендарьПоставки    КАК КалендарьПоставки,
		|	Таблица.СрокИсполненияЗаказа КАК СрокИсполненияЗаказа
		|ПОМЕСТИТЬ " + ИмяВедущейТаблицы + "Свернуто
		|ИЗ
		|	" + ИмяВедущейТаблицы + " КАК Таблица
		|ИНДЕКСИРОВАТЬ ПО
		|	КалендарьПоставки
		|;
		|//////////////////////////////////////////////////////////////////////////////////";
	ИмяТаблицы = ИмяВедущейТаблицы + "Свернуто";
	
	ТекстЗапроса = ТекстЗапроса + "
		|ВЫБРАТЬ
		|	ПараметрыРасчета.КалендарьПоставки               КАК КалендарьПоставки,
		|	ПараметрыРасчета.СрокИсполненияЗаказа            КАК СрокИсполненияЗаказа,
		|	ДатыПоставок.ДатаГрафика                         КАК ДатаПоставки,
		|	МАКСИМУМ(ВЫБОР 
		|		КОГДА ПараметрыРасчета.КалендарьЗаказа = ЗНАЧЕНИЕ(Справочник.Календари.ПустаяСсылка)
		|			И ДОБАВИТЬКДАТЕ(ДатыПоставок.ДатаГрафика, ДЕНЬ, 
		|				- ПараметрыРасчета.СрокИсполненияЗаказа) >= &НачалоТекущегоДня
		|		ТОГДА
		|			ДОБАВИТЬКДАТЕ(ДатыПоставок.ДатаГрафика, ДЕНЬ, 
		|				- ПараметрыРасчета.СрокИсполненияЗаказа)
		|		ИНАЧЕ
		|			ДатыЗаказа.ДатаГрафика
		|	КОНЕЦ)                                           КАК ДатаЗаказа
		|ПОМЕСТИТЬ ДатыПоставок
		|ИЗ
		|	" + ИмяТаблицы + " КАК ПараметрыРасчета
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КалендарныеГрафики КАК ДатыПоставок
		|		ПО ПараметрыРасчета.КалендарьПоставки = ДатыПоставок.Календарь
		|			И ДатыПоставок.Год           >= ГОД(&НачалоТекущегоДня)
		|			И ДатыПоставок.ДатаГрафика   >= &НачалоТекущегоДня
		|			И ДатыПоставок.ДеньВключенВГрафик = ИСТИНА
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КалендарныеГрафики КАК ДатыЗаказа
		|			ПО ПараметрыРасчета.КалендарьЗаказа = ДатыЗаказа.Календарь
		|			И ДатыЗаказа.Год         >= ГОД(&НачалоТекущегоДня)
		|			И ДатыЗаказа.ДатаГрафика >= &НачалоТекущегоДня
		|			И ДатыЗаказа.ДеньВключенВГрафик = ИСТИНА
		|			И ДатыЗаказа.ДатаГрафика <= ДОБАВИТЬКДАТЕ(ДатыПоставок.ДатаГрафика, ДЕНЬ, - ПараметрыРасчета.СрокИсполненияЗаказа)
		|
		|СГРУППИРОВАТЬ ПО 
		|	ПараметрыРасчета.КалендарьПоставки,
		|	ПараметрыРасчета.СрокИсполненияЗаказа,
		|	ДатыПоставок.ДатаГрафика
		|ИМЕЮЩИЕ 
		|	НЕ МАКСИМУМ(ВЫБОР 
		|		КОГДА ПараметрыРасчета.КалендарьЗаказа = ЗНАЧЕНИЕ(Справочник.Календари.ПустаяСсылка) 
		|			И ДОБАВИТЬКДАТЕ(ДатыПоставок.ДатаГрафика, ДЕНЬ, 
		|				- ПараметрыРасчета.СрокИсполненияЗаказа) >= &НачалоТекущегоДня
		|		ТОГДА
		|			ДОБАВИТЬКДАТЕ(ДатыПоставок.ДатаГрафика, ДЕНЬ,
		|				- ПараметрыРасчета.СрокИсполненияЗаказа)
		|		ИНАЧЕ
		|			ДатыЗаказа.ДатаГрафика
		|	КОНЕЦ) ЕСТЬ NULL
		|	ИЛИ МАКСИМУМ(ПараметрыРасчета.КалендарьПоставки) = ЗНАЧЕНИЕ(Справочник.Календари.ПустаяСсылка)
		|;
		|/////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ДатыПоставок.СрокИсполненияЗаказа                                   КАК СрокИсполненияЗаказа,
		|	ДатыПоставок.КалендарьПоставки                                      КАК КалендарьПоставки,
		|	МИНИМУМ(ВЫБОР
		|		КОГДА ДатыПоставок.КалендарьПоставки 
		|			= ЗНАЧЕНИЕ(Справочник.Календари.ПустаяСсылка)
		|		ТОГДА
		|			ВЫБОР 
		|				КОГДА &УмолчаниеДатаЗаказа = ДАТАВРЕМЯ(1, 1, 1) ТОГДА
		|					NULL
		|				ИНАЧЕ 
		|					ДОБАВИТЬКДАТЕ(&УмолчаниеДатаЗаказа, ДЕНЬ,
		|						ДатыПоставок.СрокИсполненияЗаказа)
		|			КОНЕЦ
		|		ИНАЧЕ 
		|			ДатыПоставок.ДатаПоставки
		|	КОНЕЦ)                                                              КАК ДатаБлижайшейПоставки,
		|	МИНИМУМ(ВЫБОР
		|		КОГДА ДатыПоставок.КалендарьПоставки 
		|			= ЗНАЧЕНИЕ(Справочник.Календари.ПустаяСсылка)
		|		ТОГДА
		|			ВЫБОР 
		|				КОГДА &УмолчаниеДатаЗаказа = ДАТАВРЕМЯ(1, 1, 1) ТОГДА
		|					NULL
		|				ИНАЧЕ 
		|					&УмолчаниеДатаЗаказа
		|			КОНЕЦ
		|		ИНАЧЕ 
		|			ДатыПоставок.ДатаЗаказа
		|	КОНЕЦ)                                                              КАК ДатаЗаказа
		|ПОМЕСТИТЬ БлижайшаяПоставка
		|ИЗ
		|	ДатыПоставок КАК ДатыПоставок
		|СГРУППИРОВАТЬ ПО 
		|	ДатыПоставок.СрокИсполненияЗаказа,
		|	ДатыПоставок.КалендарьПоставки
		|ИНДЕКСИРОВАТЬ ПО
		|	СрокИсполненияЗаказа,
		|	КалендарьПоставки
		|
		|;
		|/////////////////////////////////////////////////////////////////////////////";
		
	ТекстЗапроса = ТекстЗапроса + ТекстСекцииВыбрать(ИменаДопПолей);
	ТекстЗапроса = ТекстЗапроса + "
		|	ЕСТЬNULL(БлижайшаяПоставка.ДатаБлижайшейПоставки, ДАТАВРЕМЯ(1, 1, 1))     КАК ДатаБлижайшейПоставки,
		|	ЕСТЬNULL(БлижайшаяПоставка.ДатаЗаказа,            ДАТАВРЕМЯ(1, 1, 1))     КАК ДатаЗаказа
		|ПОМЕСТИТЬ " + ИмяВременнойТаблицыРезультата + "
		|ИЗ
		|	" + ИмяВедущейТаблицы + " КАК Таблица
		|	ЛЕВОЕ СОЕДИНЕНИЕ БлижайшаяПоставка КАК БлижайшаяПоставка
		|	ПО Таблица.КалендарьПоставки       = БлижайшаяПоставка.КалендарьПоставки
		|		И Таблица.СрокИсполненияЗаказа = БлижайшаяПоставка.СрокИсполненияЗаказа";
	ТекстЗапроса = ТекстЗапроса + ТекстСекцииИндексировать(ИменаПолейИндекса);
	ТекстЗапроса = ТекстЗапроса + "
		|;
		|
		|/////////////////////////////////////////////////////////////////////////////";
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаКалендарей(ИмяВедущейТаблицы, ИмяВременнойТаблицыРезультата, ИменаДопПолей, ИменаПолейИндекса) Экспорт
	
	ТекстЗапроса = ТекстСекцииВыбрать(ИменаДопПолей);
	ТекстЗапроса = ТекстЗапроса + "
		|	ВЫБОР
		|		КОГДА ОсновнойСпособ.Календарь <> ЗНАЧЕНИЕ(Справочник.Календари.ПустаяСсылка) ТОГДА
		|			ОсновнойСпособ.Календарь
		|		КОГДА Таблица.Склад.Календарь <> ЗНАЧЕНИЕ(Справочник.Календари.ПустаяСсылка) ТОГДА
		|			Таблица.Склад.Календарь
		|		ИНАЧЕ
		|			&УмолчаниеКалендарь
		|	КОНЕЦ                                                               КАК КалендарьПоставки,
		|	&УмолчаниеКалендарь                                                 КАК КалендарьЗаказа,
		|	ЕСТЬNULL(ОсновнойСпособ.СрокИсполненияЗаказа, 0)                    КАК СрокИсполненияЗаказа
		|ПОМЕСТИТЬ " + ИмяВременнойТаблицыРезультата + "
		|ИЗ
		|	" + ИмяВедущейТаблицы + " КАК Таблица
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ВариантыОбеспеченияТоварами КАК СпособХарактеристика
		|		ПО СпособХарактеристика.РеквизитДопУпорядочивания          = 1
		|			И Таблица.Склад                     =      СпособХарактеристика.Склад
		|			И Таблица.Номенклатура              =      СпособХарактеристика.Номенклатура
		|			И Таблица.Характеристика            =      СпособХарактеристика.Характеристика
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ВариантыОбеспеченияТоварами КАК СпособНоменклатура
		|		ПО СпособХарактеристика.Склад  ЕСТЬ NULL
		|			И СпособНоменклатура.РеквизитДопУпорядочивания         = 1
		|			И Таблица.Склад                     = СпособНоменклатура.Склад
		|			И Таблица.Номенклатура              = СпособНоменклатура.Номенклатура
		|			И СпособНоменклатура.Характеристика = ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка)
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ВариантыОбеспеченияТоварами КАК СпособСклад
		|		ПО СпособХарактеристика.Склад  ЕСТЬ NULL
		|			И СпособНоменклатура.Склад ЕСТЬ NULL
		|			И СпособСклад.РеквизитДопУпорядочивания                = 1
		|			И Таблица.Склад                     = СпособСклад.Склад
		|			И СпособСклад.Номенклатура          = ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка)
		|			И СпособСклад.Характеристика        = ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка)
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.СпособыОбеспеченияПотребностей КАК ОсновнойСпособ
		|		ПО ЕСТЬNULL(СпособХарактеристика.СпособОбеспеченияПотребностей,
		|				ЕСТЬNULL(СпособНоменклатура.СпособОбеспеченияПотребностей,
		|				СпособСклад.СпособОбеспеченияПотребностей
		|			)) = ОсновнойСпособ.Ссылка";
		
	ТекстЗапроса = ТекстЗапроса + ТекстСекцииИндексировать(ИменаПолейИндекса);
	ТекстЗапроса = ТекстЗапроса + "
		|;
		|
		|/////////////////////////////////////////////////////////////////////////////";
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаГраницКонтроля(ИмяВедущейТаблицы, ИмяВременнойТаблицыРезультата, ИменаДопПолей, ИменаПолейИндекса) Экспорт
	
	ТекстЗапроса = ТекстСекцииВыбрать(ИменаДопПолей);
	ТекстЗапроса = ТекстЗапроса + "
		|	Таблица.Номенклатура                                                     КАК Номенклатура,
		|	Таблица.Характеристика                                                   КАК Характеристика,
		|	Таблица.Склад                                                            КАК Склад,
		|	ЕСТЬNULL(НастройкаХарактеристика.ВариантКонтроля,
		|		ЕСТЬNULL(НастройкаНоменклатура.ВариантКонтроля,
		|		ЕСТЬNULL(НастройкаСклад.ВариантКонтроля,
		|		ЗНАЧЕНИЕ(Перечисление.ВариантыКонтроля.НеКонтролировать))))          КАК ВариантКонтроля,
		|	ВЫБОР
		|		КОГДА НастройкаХарактеристика.ВариантКонтроля
		|			= ЗНАЧЕНИЕ(Перечисление.ВариантыКонтроля.ОстаткиСУчетомГрафика)
		|		ТОГДА
		|			ВЫБОР 
		|				КОГДА НастройкаХарактеристика.ГраницаГрафикаДоступности >= &НачалоТекущегоДня ТОГДА 
		|					ДОБАВИТЬКДАТЕ(НастройкаХарактеристика.ГраницаГрафикаДоступности, ДЕНЬ, 1)
		|				КОГДА НастройкаХарактеристика.СрокПоставки > 0 ТОГДА
		|					ДОБАВИТЬКДАТЕ(&НачалоТекущегоДня, ДЕНЬ, НастройкаХарактеристика.СрокПоставки)
		|				ИНАЧЕ
		|					ДАТАВРЕМЯ(1, 1, 1)
		|			КОНЕЦ
		|		КОГДА НастройкаНоменклатура.ВариантКонтроля
		|			= ЗНАЧЕНИЕ(Перечисление.ВариантыКонтроля.ОстаткиСУчетомГрафика)
		|		ТОГДА
		|			ВЫБОР 
		|				КОГДА НастройкаНоменклатура.ГраницаГрафикаДоступности >= &НачалоТекущегоДня ТОГДА 
		|					ДОБАВИТЬКДАТЕ(НастройкаНоменклатура.ГраницаГрафикаДоступности, ДЕНЬ, 1)
		|				КОГДА НастройкаНоменклатура.СрокПоставки > 0 ТОГДА
		|					ДОБАВИТЬКДАТЕ(&НачалоТекущегоДня, ДЕНЬ, НастройкаНоменклатура.СрокПоставки)
		|				ИНАЧЕ
		|					ДАТАВРЕМЯ(1, 1, 1)
		|			КОНЕЦ
		|		КОГДА НастройкаСклад.ВариантКонтроля
		|			= ЗНАЧЕНИЕ(Перечисление.ВариантыКонтроля.ОстаткиСУчетомГрафика)
		|		ТОГДА
		|			ВЫБОР 
		|				КОГДА НастройкаСклад.ГраницаГрафикаДоступности >= &НачалоТекущегоДня ТОГДА 
		|					ДОБАВИТЬКДАТЕ(НастройкаСклад.ГраницаГрафикаДоступности, ДЕНЬ, 1)
		|				КОГДА НастройкаСклад.СрокПоставки > 0 ТОГДА
		|					ДОБАВИТЬКДАТЕ(&НачалоТекущегоДня, ДЕНЬ, НастройкаСклад.СрокПоставки)
		|				ИНАЧЕ
		|					ДАТАВРЕМЯ(1, 1, 1)
		|			КОНЕЦ
		|		ИНАЧЕ
		|			ДАТАВРЕМЯ(1, 1, 1)
		|	КОНЕЦ                                                                    КАК ГраницаКонтроля
		|ПОМЕСТИТЬ " + ИмяВременнойТаблицыРезультата + "
		|ИЗ
		|	" + ИмяВедущейТаблицы + " КАК Таблица
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.НастройкаКонтроляОстатков КАК НастройкаХарактеристика
		|		ПО Таблица.Склад             = НастройкаХарактеристика.Склад
		|			И Таблица.Номенклатура   = НастройкаХарактеристика.Номенклатура
		|			И Таблица.Характеристика = НастройкаХарактеристика.Характеристика
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.НастройкаКонтроляОстатков КАК НастройкаНоменклатура
		|		ПО Таблица.Склад             = НастройкаНоменклатура.Склад
		|			И Таблица.Номенклатура   = НастройкаНоменклатура.Номенклатура
		|			И НастройкаНоменклатура.Характеристика = ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка)
		|			И НастройкаХарактеристика.Склад ЕСТЬ NULL
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.НастройкаКонтроляОстатков КАК НастройкаСклад
		|		ПО Таблица.Склад = НастройкаСклад.Склад
		|			И НастройкаСклад.Номенклатура   = ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка)
		|			И НастройкаСклад.Характеристика = ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка)
		|			И НастройкаХарактеристика.Склад ЕСТЬ NULL
		|			И НастройкаНоменклатура.Склад   ЕСТЬ NULL";
	
	ТекстЗапроса = ТекстЗапроса + ТекстСекцииИндексировать(ИменаПолейИндекса);
	ТекстЗапроса = ТекстЗапроса + "
		|;
		|
		|/////////////////////////////////////////////////////////////////////////////";
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаОтрицательныхОстатковВГрафике(ИмяВедущейТаблицы, ИмяВременнойТаблицыРезультата, ИменаПолейИндекса) Экспорт
	
	ТекстЗапроса = "
		|ВЫБРАТЬ
		|	ОстаткиИОборотыВГрафике.Склад                     КАК Склад,
		|	ОстаткиИОборотыВГрафике.Номенклатура              КАК Номенклатура,
		|	ОстаткиИОборотыВГрафике.Характеристика            КАК Характеристика,
		|	ОстаткиИОборотыВГрафике.Период                    КАК ДатаОтгрузки,
		|	ОстаткиИОборотыВГрафике.КоличествоКонечныйОстаток КАК Количество
		|ПОМЕСТИТЬ " + ИмяВременнойТаблицыРезультата + "
		|ИЗ
		|	РегистрНакопления.ГрафикДвиженияТоваров.ОстаткиИОбороты(
		|		КОНЕЦПЕРИОДА(&НачалоТекущегоДня, ДЕНЬ),
		|		,
		|		ДЕНЬ,
		|		ДвиженияИГраницыПериода,
		|		(Склад, Номенклатура, Характеристика, Назначение)
		|		В (
		|			ВЫБРАТЬ
		|				Таблица.Склад                                КАК Склад,
		|				Таблица.Номенклатура                         КАК Номенклатура,
		|				Таблица.Характеристика                       КАК Характеристика,
		|				ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка) КАК Назначение
		|			ИЗ
		|				" + ИмяВедущейТаблицы + " КАК Таблица
		|			ГДЕ
		|				Таблица.ВариантКонтроля = ЗНАЧЕНИЕ(Перечисление.ВариантыКонтроля.ОстаткиСУчетомГрафика)
		|				И Таблица.ГраницаКонтроля <> ДАТАВРЕМЯ(1, 1, 1)
		|		)
		|	) КАК ОстаткиИОборотыВГрафике
		|ГДЕ
		|	ОстаткиИОборотыВГрафике.КоличествоКонечныйОстаток < 0";
		
	ТекстЗапроса = ТекстЗапроса + ТекстСекцииИндексировать(ИменаПолейИндекса);
	ТекстЗапроса = ТекстЗапроса + "
		|;
		|
		|/////////////////////////////////////////////////////////////////////////////";
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаОбеспеченияНаличием(ИмяВедущейТаблицы, ИмяТаблицыОстатковГрафика, ИмяВременнойТаблицыРезультата, ИменаДопПолей, ИменаПолейИндекса) Экспорт
	
	ТекстЗапроса = ТекстСекцииВыбрать(ИменаДопПолей, Истина);
	ТекстЗапроса = ТекстЗапроса + "
		|	ОтрицательныеОстаткиВГрафике.Номенклатура           КАК Номенклатура,
		|	ОтрицательныеОстаткиВГрафике.Характеристика         КАК Характеристика,
		|	ОтрицательныеОстаткиВГрафике.Склад                  КАК Склад,
		|	- МИНИМУМ(ОтрицательныеОстаткиВГрафике.Количество)  КАК Количество
		|ПОМЕСТИТЬ " + ИмяВременнойТаблицыРезультата + "
		|ИЗ
		|	" + ИмяВедущейТаблицы + " КАК Таблица
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ " + ИмяТаблицыОстатковГрафика + " КАК ОтрицательныеОстаткиВГрафике
		|		ПО Таблица.Характеристика  = ОтрицательныеОстаткиВГрафике.Характеристика
		|			И Таблица.Номенклатура = ОтрицательныеОстаткиВГрафике.Номенклатура
		|			И Таблица.Склад        = ОтрицательныеОстаткиВГрафике.Склад
		|			И Таблица.ГраницаКонтроля > ОтрицательныеОстаткиВГрафике.ДатаОтгрузки
		|СГРУППИРОВАТЬ ПО
		|	ОтрицательныеОстаткиВГрафике.Номенклатура,
		|	ОтрицательныеОстаткиВГрафике.Характеристика,
		|	ОтрицательныеОстаткиВГрафике.Склад";
		
	ТекстЗапроса = ТекстЗапроса + ТекстСекцииИндексировать(ИменаПолейИндекса);
	ТекстЗапроса = ТекстЗапроса + "
		|;
		|
		|/////////////////////////////////////////////////////////////////////////////";
	Возврат ТекстЗапроса;
	
КонецФункции

//Функция ТекстЗапросаРезервовТовара()
//
//Возвращаемое значение
//
//	Количество в заказах на отгрузку товара, стоящее в графике отгрузок ранее товара в заказе к обеспечению:
//		Количество
//
Функция ТекстЗапросаРезервовТовара(ТекстыКомпоновки) Экспорт
	
	ТекстЗапроса = "
		|ВЫБРАТЬ
		|	СУММА(ВЫБОР
		|		КОГДА Таблица.ВариантОбеспечения
		|			= ЗНАЧЕНИЕ(Перечисление.ВариантыОбеспечения.ПустаяСсылка)
		|		ТОГДА
		|			ЕСТЬNULL(РезервыТовара.Количество, 0)
		|		ИНАЧЕ 
		|			ЕСТЬNULL(РезервыТовара.КоличествоПодЗаказ, 0)
		|		КОНЕЦ)                                              КАК Количество,
		|	%ПоляВыборки
		|ПОМЕСТИТЬ %ВременнаяТаблица
		|ИЗ
		|	%ТаблицаОтбора КАК Таблица
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ГрафикДвиженияТоваров КАК РезервыТовара
		|		ПО РезервыТовара.ВидДвижения    =  ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
		|			И РезервыТовара.Активность = ИСТИНА
		|			И РезервыТовара.Регистратор <> &Заказ
		|			И Таблица.Склад               =     РезервыТовара.Склад
		|			И Таблица.Номенклатура        =     РезервыТовара.Номенклатура
		|			И Таблица.Характеристика      =     РезервыТовара.Характеристика
		|			И Таблица.Назначение          =     РезервыТовара.Назначение
		|			И Таблица.ВариантОбеспечения  <> ЗНАЧЕНИЕ(Перечисление.ВариантыОбеспечения.СоСклада)
		|			И (Таблица.ВариантОбеспечения <> ЗНАЧЕНИЕ(Перечисление.ВариантыОбеспечения.ПодЗаказ)
		|				ИЛИ РезервыТовара.КоличествоПодЗаказ > 0
		|			)
		|			И (Таблица.ВариантОбеспечения <> ЗНАЧЕНИЕ(Перечисление.ВариантыОбеспечения.ПустаяСсылка)
		|				ИЛИ РезервыТовара.Количество > 0
		|			)
		|			И (Таблица.ДатаОтгрузки          >  РезервыТовара.ДатаСобытия
		|				ИЛИ Таблица.ДатаОтгрузки     =  РезервыТовара.ДатаСобытия
		|					И Таблица.ДатаДокумента  >  РезервыТовара.Регистратор.Дата
		|				ИЛИ Таблица.ДатаОтгрузки     =  РезервыТовара.ДатаСобытия
		|					И Таблица.ДатаДокумента  =  РезервыТовара.Регистратор.Дата
		|					И Таблица.Заказ          >  РезервыТовара.Регистратор
		|			)
		|ГДЕ
		|	Таблица.ТипНоменклатуры В (ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Товар),ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара))
		|//СГРУППИРОВАТЬ ПО
		|	%ПоляГруппировки
		|ИНДЕКСИРОВАТЬ ПО
		|	%ПоляИндекса
		|;
		|
		|/////////////////////////////////////////////////////////////////////////////";
		
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "%ПоляВыборки",      ТекстыКомпоновки.ПоляВыборки);
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "%ТаблицаОтбора",    ТекстыКомпоновки.ТаблицаОтбора);
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "%ВременнаяТаблица", ТекстыКомпоновки.ВременнаяТаблица);
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "%ПоляГруппировки",  ТекстыКомпоновки.ПоляГруппировки);
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "%ПоляИндекса",      ТекстыКомпоновки.ПоляИндекса);
	Если ТекстыКомпоновки.ПоляГруппировки <> "" Тогда
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "//СГРУППИРОВАТЬ ПО", "СГРУППИРОВАТЬ ПО");
	КонецЕсли;
	
	Возврат ТекстЗапроса;
	
КонецФункции //ТекстЗапросаРезервовТовара()

Функция ТекстСекцииВыбрать(ИменаПолей, ЕстьГруппировка = Ложь)
	
	ТекстСекции = "
	|ВЫБРАТЬ";
	МассивПолей = СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивПодстрок(ИменаПолей);
	Для каждого ИмяПоля Из МассивПолей Цикл
		ТекстСекции = ТекстСекции +
			?(ЕстьГруппировка, "
			|	МАКСИМУМ(Таблица." + СокрЛП(ИмяПоля) + ") КАК " + СокрЛП(ИмяПоля) + ",", "
			|	Таблица." + СокрЛП(ИмяПоля) + " КАК " + СокрЛП(ИмяПоля) + ",");
	КонецЦикла;
	
	Возврат ТекстСекции;
	
КонецФункции

Функция ТекстСекцииИндексировать(ИменаПолей)
	
	ТекстСекции = "
		|ИНДЕКСИРОВАТЬ ПО";
	
	МассивПолей = СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивПодстрок(ИменаПолей);
	Разделитель = "";
	Для каждого ИмяПоля Из МассивПолей Цикл
		
		ТекстСекции = ТекстСекции + Разделитель + "
			|	" + ИмяПоля;
			
		Если Разделитель = "" Тогда 
			Разделитель = ",";
		КонецЕсли;
	
	КонецЦикла;
	
КонецФункции



#КонецЕсли