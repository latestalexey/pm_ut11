////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;
	КонецЕсли;
	
	РежимПроизводства = Параметры.РежимПроизводства;
	
	ПолноеИмя = РеквизитФормыВЗначение("Объект").Метаданные().ПолноеИмя();
	
	ОтборыСписковКлиентСервер.СкопироватьСписокВыбораОтбораПоМенеджеру(
		Элементы.Менеджер.СписокВыбора,
		СписокВыбораОтбораПоМенеджеруСервер(РежимПроизводства)
	);
	
	Если НЕ РежимПроизводства
			И (ЗначениеЗаполнено(Номенклатура)
				ИЛИ ЗначениеЗаполнено(Склад)
				ИЛИ ЗначениеЗаполнено(Менеджер))
	Тогда
		ОбновитьСостояниеНаСервере();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура НоменклатураНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	НоменклатураКлиент.ВыбратьЭлементГруппуНоменклатуры(ЭтаФорма, Элемент, СтандартнаяОбработка);
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ ТАБЛИЦЫ ФОРМЫ ТОВАРЫ

&НаКлиенте
Процедура ТоварыВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	ОткрытьЗначение(Элемент.ТекущиеДанные.Заказ);
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ КОМАНД ФОРМЫ

&НаКлиенте
Процедура ОбновитьСостояние(Команда)
	
	ОбновитьСостояниеНаСервере();
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

////////////////////////////////////////////////////////////////////////////////
// Прочее

&НаСервере
Процедура ОбновитьСостояниеНаСервере()
	
	СтрокиЗаказы = Товары.ПолучитьЭлементы();
	СтрокиЗаказы.Очистить();
	
	ЗаказыКлиентов = ПолучитьФункциональнуюОпцию("ИспользоватьЗаказыКлиентов")
			И ПравоДоступа("Чтение", Метаданные.Документы.ЗаказКлиента)
			И ПравоДоступа("Чтение", Метаданные.РегистрыНакопления.ЗаказыКлиентов)
			И НЕ РежимПроизводства;
	ЗаказыНаВнутреннееПотребление = ПолучитьФункциональнуюОпцию("ИспользоватьЗаказыНаВнутреннееПотребление")
			И ПравоДоступа("Чтение", Метаданные.Документы.ЗаказНаВнутреннееПотребление)
			И ПравоДоступа("Чтение", Метаданные.РегистрыНакопления.ЗаказыНаВнутреннееПотребление)
			И НЕ РежимПроизводства;
	ЗаказыНаПеремещение = ПолучитьФункциональнуюОпцию("ИспользоватьЗаказыНаПеремещение")
			И ПравоДоступа("Чтение", Метаданные.Документы.ЗаказНаПеремещение)
			И ПравоДоступа("Чтение", Метаданные.РегистрыНакопления.ЗаказыНаПеремещение)
			И НЕ РежимПроизводства;
	ЗаказыНаСборку = ПолучитьФункциональнуюОпцию("ИспользоватьЗаказыНаСборку")
			И ПравоДоступа("Чтение", Метаданные.Документы.ЗаказНаСборку)
			И ПравоДоступа("Чтение", Метаданные.РегистрыНакопления.ЗаказыНаСборку)
			И НЕ РежимПроизводства;
	ЗаявкиНаВозвратТоваровОтКлиентов = ПолучитьФункциональнуюОпцию("ИспользоватьЗаявкиНаВозвратТоваровОтКлиентов")
			И ПравоДоступа("Чтение", Метаданные.Документы.ЗаявкаНаВозвратТоваровОтКлиента)
			И ПравоДоступа("Чтение", Метаданные.РегистрыНакопления.ЗаказыКлиентов)
			И НЕ РежимПроизводства;
			
	Если НЕ (
	 ЗаказыКлиентов ИЛИ ЗаказыНаВнутреннееПотребление
	 ИЛИ ЗаказыНаПеремещение ИЛИ ЗаказыНаСборку 
	 ИЛИ ЗаявкиНаВозвратТоваровОтКлиентов) Тогда
		
		Возврат;
		
	КонецЕсли;
	
	НачалоТекущегоДня = НачалоДня(ТекущаяДатаСеанса());

	ТекстЗапроса = "";
	
	Если ЗаказыКлиентов Тогда
		
		ТекстЗапросаЗаказыКлиентов =
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	ВЫРАЗИТЬ(ОстаткиПоЗаказу.ЗаказКлиента КАК Документ.ЗаказКлиента) КАК Заказ,
		|	ВЫРАЗИТЬ(ОстаткиПоЗаказу.ЗаказКлиента КАК Документ.ЗаказКлиента).Дата КАК Дата,
		|	ВЫБОР 
		|		КОГДА &ИспользоватьСтатусыЗаказовКлиентов 
		|		ТОГДА ВЫРАЗИТЬ(ОстаткиПоЗаказу.ЗаказКлиента КАК Документ.ЗаказКлиента).Статус 
		|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.СтатусыЗаказовКлиентов.ПустаяСсылка)
		|	КОНЕЦ КАК Статус,
		|	ОстаткиПоЗаказу.Склад КАК Склад,
		|	ТаблицаЗаказа.НомерСтроки КАК НомерСтроки,
		|	ОстаткиПоЗаказу.Номенклатура КАК Номенклатура,
		|	ОстаткиПоЗаказу.Характеристика КАК Характеристика,
		|	ТаблицаЗаказа.Упаковка КАК Упаковка,
		|	ЕСТЬNULL(ТаблицаЗаказа.Упаковка.Коэффициент, 1) КАК УпаковкаКоэффициент,
		|	ОстаткиПоЗаказу.Номенклатура.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
		|	ТаблицаЗаказа.ДатаОтгрузки КАК ДатаОтгрузки,
		|	ОстаткиПоЗаказу.ЗаказаноОстаток КАК Количество,
		|	ВЫБОР
		|		КОГДА ВЫРАЗИТЬ(ОстаткиПоЗаказу.ЗаказКлиента КАК Документ.ЗаказКлиента).Статус В (ЗНАЧЕНИЕ(Перечисление.СтатусыЗаказовКлиентов.КОбеспечению), ЗНАЧЕНИЕ(Перечисление.СтатусыЗаказовКлиентов.КОтгрузке), ЗНАЧЕНИЕ(Перечисление.СтатусыЗаказовКлиентов.Закрыт))
		|			ТОГДА ИСТИНА
		|		ИНАЧЕ ЛОЖЬ
		|	КОНЕЦ КАК ПринятКОбеспечению,
		|	ВЫБОР
		|		КОГДА ОстаткиПоЗаказу.Номенклатура.ТипНоменклатуры НЕ В
		|		(ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Товар),ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара))
		|			ТОГДА ИСТИНА
		|		ИНАЧЕ ЛОЖЬ
		|	КОНЕЦ КАК ЭтоУслуга,
		|	ТаблицаЗаказа.СрокПоставки КАК СрокПоставки,
		|	ТаблицаЗаказа.УказыватьСерии КАК УказыватьСерии,
		|	ТаблицаЗаказа.СтатусУказанияСерий КАК СтатусУказанияСерий,
		|	ВЫБОР
		|		КОГДА ЕСТЬNULL(НастройкаХарактеристика.ВариантКонтроля, ЕСТЬNULL(НастройкаНоменклатура.ВариантКонтроля, НастройкаСклад.ВариантКонтроля)) = ЗНАЧЕНИЕ(Перечисление.ВариантыКонтроля.ОстаткиСУчетомГрафика)
		|			ТОГДА ВЫБОР
		|					КОГДА ТаблицаЗаказа.СрокПоставки > 0
		|						ТОГДА ДОБАВИТЬКДАТЕ(&НачалоТекущегоДня, ДЕНЬ, ТаблицаЗаказа.СрокПоставки + 1)
		|					ИНАЧЕ ДОБАВИТЬКДАТЕ(&НачалоТекущегоДня, ДЕНЬ, 1)
		|				КОНЕЦ
		|		ИНАЧЕ ДОБАВИТЬКДАТЕ(&НачалоТекущегоДня, ДЕНЬ, 1)
		|	КОНЕЦ КАК ГраницаГрафикаДоступностиСрокПоставки,
		|	ВЫБОР
		|		КОГДА ЕСТЬNULL(НастройкаХарактеристика.ВариантКонтроля, ЕСТЬNULL(НастройкаНоменклатура.ВариантКонтроля, НастройкаСклад.ВариантКонтроля)) = ЗНАЧЕНИЕ(Перечисление.ВариантыКонтроля.ОстаткиСУчетомГрафика)
		|			ТОГДА ВЫБОР
		|					КОГДА НЕ НастройкаХарактеристика.ВариантКонтроля ЕСТЬ NULL 
		|						ТОГДА ВЫБОР
		|								КОГДА НастройкаХарактеристика.ГраницаГрафикаДоступности >= &НачалоТекущегоДня
		|									ТОГДА ДОБАВИТЬКДАТЕ(НастройкаХарактеристика.ГраницаГрафикаДоступности, ДЕНЬ, 1)
		|								КОГДА НастройкаХарактеристика.СрокПоставки > 0
		|									ТОГДА ДОБАВИТЬКДАТЕ(&НачалоТекущегоДня, ДЕНЬ, НастройкаХарактеристика.СрокПоставки + 1)
		|								ИНАЧЕ ДОБАВИТЬКДАТЕ(&НачалоТекущегоДня, ДЕНЬ, 1)
		|							КОНЕЦ
		|					КОГДА НЕ НастройкаНоменклатура.ВариантКонтроля ЕСТЬ NULL 
		|						ТОГДА ВЫБОР
		|								КОГДА НастройкаНоменклатура.ГраницаГрафикаДоступности >= &НачалоТекущегоДня
		|									ТОГДА ДОБАВИТЬКДАТЕ(НастройкаНоменклатура.ГраницаГрафикаДоступности, ДЕНЬ, 1)
		|								КОГДА НастройкаНоменклатура.СрокПоставки > 0
		|									ТОГДА ДОБАВИТЬКДАТЕ(&НачалоТекущегоДня, ДЕНЬ, НастройкаНоменклатура.СрокПоставки + 1)
		|								ИНАЧЕ ДОБАВИТЬКДАТЕ(&НачалоТекущегоДня, ДЕНЬ, 1)
		|							КОНЕЦ
		|					ИНАЧЕ ВЫБОР
		|							КОГДА НастройкаСклад.ГраницаГрафикаДоступности >= &НачалоТекущегоДня
		|								ТОГДА ДОБАВИТЬКДАТЕ(НастройкаСклад.ГраницаГрафикаДоступности, ДЕНЬ, 1)
		|							КОГДА НастройкаСклад.СрокПоставки > 0
		|								ТОГДА ДОБАВИТЬКДАТЕ(&НачалоТекущегоДня, ДЕНЬ, НастройкаСклад.СрокПоставки + 1)
		|							ИНАЧЕ ДОБАВИТЬКДАТЕ(&НачалоТекущегоДня, ДЕНЬ, 1)
		|						КОНЕЦ
		|				КОНЕЦ
		|		ИНАЧЕ ДОБАВИТЬКДАТЕ(&НачалоТекущегоДня, ДЕНЬ, 1)
		|	КОНЕЦ КАК ГраницаГрафикаДоступности,
		|	ВЫБОР
		|		КОГДА ЕСТЬNULL(ВариантыОбеспеченияТоварамиСНХ.СпособОбеспеченияПотребностей.Календарь, ЕСТЬNULL(ВариантыОбеспеченияТоварамиСН.СпособОбеспеченияПотребностей.Календарь, ЕСТЬNULL(ВариантыОбеспеченияТоварамиС.СпособОбеспеченияПотребностей.Календарь, ЗНАЧЕНИЕ(Справочник.Календари.ПустаяСсылка)))) = ЗНАЧЕНИЕ(Справочник.Календари.ПустаяСсылка)
		|			ТОГДА ВЫБОР
		|					КОГДА ОстаткиПоЗаказу.Склад.Календарь = ЗНАЧЕНИЕ(Справочник.Календари.ПустаяСсылка)
		|						ТОГДА &ОсновнойКалендарьПредприятия
		|					ИНАЧЕ ОстаткиПоЗаказу.Склад.Календарь
		|				КОНЕЦ
		|		ИНАЧЕ ЕСТЬNULL(ВариантыОбеспеченияТоварамиСНХ.СпособОбеспеченияПотребностей.Календарь, ЕСТЬNULL(ВариантыОбеспеченияТоварамиСН.СпособОбеспеченияПотребностей.Календарь, ЕСТЬNULL(ВариантыОбеспеченияТоварамиС.СпособОбеспеченияПотребностей.Календарь, ЗНАЧЕНИЕ(Справочник.Календари.ПустаяСсылка))))
		|	КОНЕЦ КАК Календарь,
		|	ЕСТЬNULL(ВариантыОбеспеченияТоварамиСНХ.СпособОбеспеченияПотребностей.СрокИсполненияЗаказа, ЕСТЬNULL(ВариантыОбеспеченияТоварамиСН.СпособОбеспеченияПотребностей.СрокИсполненияЗаказа, ЕСТЬNULL(ВариантыОбеспеченияТоварамиС.СпособОбеспеченияПотребностей.СрокИсполненияЗаказа, 1))) КАК СрокТранспортировки
		|ПОМЕСТИТЬ ТаблицаЗаказов
		|ИЗ
		|	РегистрНакопления.ЗаказыКлиентов.Остатки(, ЗаказКлиента ССЫЛКА Документ.ЗаказКлиента {(ВЫРАЗИТЬ(ЗаказКлиента КАК Документ.ЗаказКлиента).Менеджер) КАК Менеджер, (Склад) КАК Склад, (Номенклатура) КАК Номенклатура}) КАК ОстаткиПоЗаказу
		|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ЗаказКлиента.Товары КАК ТаблицаЗаказа
		|		ПО ((ВЫРАЗИТЬ(ОстаткиПоЗаказу.ЗаказКлиента КАК Документ.ЗаказКлиента)) = ТаблицаЗаказа.Ссылка)
		|			И ОстаткиПоЗаказу.КодСтроки = ТаблицаЗаказа.КодСтроки
		|			И ОстаткиПоЗаказу.Номенклатура = ТаблицаЗаказа.Номенклатура
		|			И ОстаткиПоЗаказу.Характеристика = ТаблицаЗаказа.Характеристика
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.НастройкаКонтроляОстатков КАК НастройкаХарактеристика
		|		ПО ОстаткиПоЗаказу.Склад = НастройкаХарактеристика.Склад
		|			И ОстаткиПоЗаказу.Номенклатура = НастройкаХарактеристика.Номенклатура
		|			И ОстаткиПоЗаказу.Характеристика = НастройкаХарактеристика.Характеристика
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.НастройкаКонтроляОстатков КАК НастройкаНоменклатура
		|		ПО ОстаткиПоЗаказу.Склад = НастройкаНоменклатура.Склад
		|			И ОстаткиПоЗаказу.Номенклатура = НастройкаНоменклатура.Номенклатура
		|			И (НастройкаНоменклатура.Характеристика = ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка))
		|			И (НастройкаХарактеристика.Склад ЕСТЬ NULL )
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.НастройкаКонтроляОстатков КАК НастройкаСклад
		|		ПО ОстаткиПоЗаказу.Склад = НастройкаСклад.Склад
		|			И (НастройкаСклад.Номенклатура = ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка))
		|			И (НастройкаСклад.Характеристика = ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка))
		|			И (НастройкаХарактеристика.Склад ЕСТЬ NULL )
		|			И (НастройкаНоменклатура.Склад ЕСТЬ NULL )
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ВариантыОбеспеченияТоварами КАК ВариантыОбеспеченияТоварамиСНХ
		|		ПО ОстаткиПоЗаказу.Склад = ВариантыОбеспеченияТоварамиСНХ.Склад
		|			И ОстаткиПоЗаказу.Номенклатура = ВариантыОбеспеченияТоварамиСНХ.Номенклатура
		|			И ОстаткиПоЗаказу.Характеристика = ВариантыОбеспеченияТоварамиСНХ.Характеристика
		|			И (ВариантыОбеспеченияТоварамиСНХ.РеквизитДопУпорядочивания = 1)
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ВариантыОбеспеченияТоварами КАК ВариантыОбеспеченияТоварамиСН
		|		ПО ОстаткиПоЗаказу.Склад = ВариантыОбеспеченияТоварамиСН.Склад
		|			И ОстаткиПоЗаказу.Номенклатура = ВариантыОбеспеченияТоварамиСН.Номенклатура
		|			И (ВариантыОбеспеченияТоварамиСН.Характеристика = ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка))
		|			И (ВариантыОбеспеченияТоварамиСНХ.Склад ЕСТЬ NULL )
		|			И (ВариантыОбеспеченияТоварамиСН.РеквизитДопУпорядочивания = 1)
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ВариантыОбеспеченияТоварами КАК ВариантыОбеспеченияТоварамиС
		|		ПО ОстаткиПоЗаказу.Склад = ВариантыОбеспеченияТоварамиС.Склад
		|			И (ВариантыОбеспеченияТоварамиС.Номенклатура = ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка))
		|			И (ВариантыОбеспеченияТоварамиС.Характеристика = ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка))
		|			И (ВариантыОбеспеченияТоварамиСНХ.Склад ЕСТЬ NULL )
		|			И (ВариантыОбеспеченияТоварамиСН.Склад ЕСТЬ NULL )
		|			И (ВариантыОбеспеченияТоварамиС.РеквизитДопУпорядочивания = 1)";
		
		Если НЕ ПустаяСтрока(ТекстЗапроса) Тогда
			
			ТекстЗапросаЗаказыКлиентов = СтрЗаменить(ТекстЗапросаЗаказыКлиентов, "РАЗРЕШЕННЫЕ", "");
			ТекстЗапросаЗаказыКлиентов = СтрЗаменить(ТекстЗапросаЗаказыКлиентов, "ПОМЕСТИТЬ ТаблицаЗаказов", "");
			ТекстЗапросаЗаказыКлиентов = Символы.ПС + "|ОБЪЕДИНИТЬ ВСЕ" + Символы.ПС + ТекстЗапросаЗаказыКлиентов;
			
		КонецЕсли;
		
		ТекстЗапроса = ТекстЗапроса + ТекстЗапросаЗаказыКлиентов;
		
	КонецЕсли;
	
	Если ЗаказыНаВнутреннееПотребление Тогда
		
		ТекстЗапросаЗаказыНаВнутреннееПотребление =
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	ОстаткиПоЗаказу.ЗаказНаВнутреннееПотребление КАК Заказ,
		|	ОстаткиПоЗаказу.ЗаказНаВнутреннееПотребление.Дата КАК Дата,
		|	ВЫБОР 
		|		КОГДА &ИспользоватьСтатусыЗаказовНаВнутреннееПотребление 
		|		ТОГДА ОстаткиПоЗаказу.ЗаказНаВнутреннееПотребление.Статус 
		|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.СтатусыВнутреннихЗаказов.ПустаяСсылка)
		|	КОНЕЦ КАК Статус,
		|	ОстаткиПоЗаказу.ЗаказНаВнутреннееПотребление.Склад КАК Склад,
		|	ТаблицаЗаказа.НомерСтроки КАК НомерСтроки,
		|	ОстаткиПоЗаказу.Номенклатура КАК Номенклатура,
		|	ОстаткиПоЗаказу.Характеристика КАК Характеристика,
		|	ТаблицаЗаказа.Упаковка КАК Упаковка,
		|	ЕСТЬNULL(ТаблицаЗаказа.Упаковка.Коэффициент, 1) КАК УпаковкаКоэффициент,
		|	ОстаткиПоЗаказу.Номенклатура.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
		|	ТаблицаЗаказа.ДатаОтгрузки КАК ДатаОтгрузки,
		|	ОстаткиПоЗаказу.ЗаказаноОстаток КАК Количество,
		|	ИСТИНА КАК ПринятКОбеспечению,
		|	ВЫБОР
		|		КОГДА ОстаткиПоЗаказу.Номенклатура.ТипНоменклатуры НЕ В
		|		(ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Товар),ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара))
		|			ТОГДА ИСТИНА
		|		ИНАЧЕ ЛОЖЬ
		|	КОНЕЦ КАК ЭтоУслуга,
		|	0 КАК СрокПоставки,
		|	ТаблицаЗаказа.УказыватьСерии КАК УказыватьСерии,
		|	ТаблицаЗаказа.СтатусУказанияСерий КАК СтатусУказанияСерий,
		|	ДОБАВИТЬКДАТЕ(&НачалоТекущегоДня, ДЕНЬ, 1) КАК ГраницаГрафикаДоступностиСрокПоставки,
		|	ВЫБОР
		|		КОГДА ЕСТЬNULL(НастройкаХарактеристика.ВариантКонтроля, ЕСТЬNULL(НастройкаНоменклатура.ВариантКонтроля, НастройкаСклад.ВариантКонтроля)) = ЗНАЧЕНИЕ(Перечисление.ВариантыКонтроля.ОстаткиСУчетомГрафика)
		|			ТОГДА ВЫБОР
		|					КОГДА НЕ НастройкаХарактеристика.ВариантКонтроля ЕСТЬ NULL 
		|						ТОГДА ВЫБОР
		|								КОГДА НастройкаХарактеристика.ГраницаГрафикаДоступности >= &НачалоТекущегоДня
		|									ТОГДА ДОБАВИТЬКДАТЕ(НастройкаХарактеристика.ГраницаГрафикаДоступности, ДЕНЬ, 1)
		|								КОГДА НастройкаХарактеристика.СрокПоставки > 0
		|									ТОГДА ДОБАВИТЬКДАТЕ(&НачалоТекущегоДня, ДЕНЬ, НастройкаХарактеристика.СрокПоставки + 1)
		|								ИНАЧЕ ДОБАВИТЬКДАТЕ(&НачалоТекущегоДня, ДЕНЬ, 1)
		|							КОНЕЦ
		|					КОГДА НЕ НастройкаНоменклатура.ВариантКонтроля ЕСТЬ NULL 
		|						ТОГДА ВЫБОР
		|								КОГДА НастройкаНоменклатура.ГраницаГрафикаДоступности >= &НачалоТекущегоДня
		|									ТОГДА ДОБАВИТЬКДАТЕ(НастройкаНоменклатура.ГраницаГрафикаДоступности, ДЕНЬ, 1)
		|								КОГДА НастройкаНоменклатура.СрокПоставки > 0
		|									ТОГДА ДОБАВИТЬКДАТЕ(&НачалоТекущегоДня, ДЕНЬ, НастройкаНоменклатура.СрокПоставки + 1)
		|								ИНАЧЕ ДОБАВИТЬКДАТЕ(&НачалоТекущегоДня, ДЕНЬ, 1)
		|							КОНЕЦ
		|					ИНАЧЕ ВЫБОР
		|							КОГДА НастройкаСклад.ГраницаГрафикаДоступности >= &НачалоТекущегоДня
		|								ТОГДА ДОБАВИТЬКДАТЕ(НастройкаСклад.ГраницаГрафикаДоступности, ДЕНЬ, 1)
		|							КОГДА НастройкаСклад.СрокПоставки > 0
		|								ТОГДА ДОБАВИТЬКДАТЕ(&НачалоТекущегоДня, ДЕНЬ, НастройкаСклад.СрокПоставки + 1)
		|							ИНАЧЕ ДОБАВИТЬКДАТЕ(&НачалоТекущегоДня, ДЕНЬ, 1)
		|						КОНЕЦ
		|				КОНЕЦ
		|		ИНАЧЕ ДОБАВИТЬКДАТЕ(&НачалоТекущегоДня, ДЕНЬ, 1)
		|	КОНЕЦ КАК ГраницаГрафикаДоступности,
		|	ВЫБОР
		|		КОГДА ЕСТЬNULL(ВариантыОбеспеченияТоварамиСНХ.СпособОбеспеченияПотребностей.Календарь, ЕСТЬNULL(ВариантыОбеспеченияТоварамиСН.СпособОбеспеченияПотребностей.Календарь, ЕСТЬNULL(ВариантыОбеспеченияТоварамиС.СпособОбеспеченияПотребностей.Календарь, ЗНАЧЕНИЕ(Справочник.Календари.ПустаяСсылка)))) = ЗНАЧЕНИЕ(Справочник.Календари.ПустаяСсылка)
		|			ТОГДА ВЫБОР
		|					КОГДА ОстаткиПоЗаказу.ЗаказНаВнутреннееПотребление.Склад.Календарь = ЗНАЧЕНИЕ(Справочник.Календари.ПустаяСсылка)
		|						ТОГДА &ОсновнойКалендарьПредприятия
		|					ИНАЧЕ ОстаткиПоЗаказу.ЗаказНаВнутреннееПотребление.Склад.Календарь
		|				КОНЕЦ
		|		ИНАЧЕ ЕСТЬNULL(ВариантыОбеспеченияТоварамиСНХ.СпособОбеспеченияПотребностей.Календарь, ЕСТЬNULL(ВариантыОбеспеченияТоварамиСН.СпособОбеспеченияПотребностей.Календарь, ЕСТЬNULL(ВариантыОбеспеченияТоварамиС.СпособОбеспеченияПотребностей.Календарь, ЗНАЧЕНИЕ(Справочник.Календари.ПустаяСсылка))))
		|	КОНЕЦ КАК Календарь,
		|	ЕСТЬNULL(ВариантыОбеспеченияТоварамиСНХ.СпособОбеспеченияПотребностей.СрокИсполненияЗаказа, ЕСТЬNULL(ВариантыОбеспеченияТоварамиСН.СпособОбеспеченияПотребностей.СрокИсполненияЗаказа, ЕСТЬNULL(ВариантыОбеспеченияТоварамиС.СпособОбеспеченияПотребностей.СрокИсполненияЗаказа, 1))) КАК СрокТранспортировки
		|ПОМЕСТИТЬ ТаблицаЗаказов
		|ИЗ
		|	РегистрНакопления.ЗаказыНаВнутреннееПотребление.Остатки(, {(ЗаказНаВнутреннееПотребление.Ответственный) КАК Менеджер, (ЗаказНаВнутреннееПотребление.Склад) КАК Склад, (Номенклатура) КАК Номенклатура}) КАК ОстаткиПоЗаказу
		|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ЗаказНаВнутреннееПотребление.Товары КАК ТаблицаЗаказа
		|		ПО ОстаткиПоЗаказу.ЗаказНаВнутреннееПотребление = ТаблицаЗаказа.Ссылка
		|			И ОстаткиПоЗаказу.КодСтроки = ТаблицаЗаказа.КодСтроки
		|			И ОстаткиПоЗаказу.Номенклатура = ТаблицаЗаказа.Номенклатура
		|			И ОстаткиПоЗаказу.Характеристика = ТаблицаЗаказа.Характеристика
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.НастройкаКонтроляОстатков КАК НастройкаХарактеристика
		|		ПО ОстаткиПоЗаказу.ЗаказНаВнутреннееПотребление.Склад = НастройкаХарактеристика.Склад
		|			И ОстаткиПоЗаказу.Номенклатура = НастройкаХарактеристика.Номенклатура
		|			И ОстаткиПоЗаказу.Характеристика = НастройкаХарактеристика.Характеристика
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.НастройкаКонтроляОстатков КАК НастройкаНоменклатура
		|		ПО ОстаткиПоЗаказу.ЗаказНаВнутреннееПотребление.Склад = НастройкаНоменклатура.Склад
		|			И ОстаткиПоЗаказу.Номенклатура = НастройкаНоменклатура.Номенклатура
		|			И (НастройкаНоменклатура.Характеристика = ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка))
		|			И (НастройкаХарактеристика.Склад ЕСТЬ NULL )
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.НастройкаКонтроляОстатков КАК НастройкаСклад
		|		ПО ОстаткиПоЗаказу.ЗаказНаВнутреннееПотребление.Склад = НастройкаСклад.Склад
		|			И (НастройкаСклад.Номенклатура = ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка))
		|			И (НастройкаСклад.Характеристика = ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка))
		|			И (НастройкаХарактеристика.Склад ЕСТЬ NULL )
		|			И (НастройкаНоменклатура.Склад ЕСТЬ NULL )
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ВариантыОбеспеченияТоварами КАК ВариантыОбеспеченияТоварамиСНХ
		|		ПО ОстаткиПоЗаказу.ЗаказНаВнутреннееПотребление.Склад = ВариантыОбеспеченияТоварамиСНХ.Склад
		|			И ОстаткиПоЗаказу.Номенклатура = ВариантыОбеспеченияТоварамиСНХ.Номенклатура
		|			И ОстаткиПоЗаказу.Характеристика = ВариантыОбеспеченияТоварамиСНХ.Характеристика
		|			И (ВариантыОбеспеченияТоварамиСНХ.РеквизитДопУпорядочивания = 1)
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ВариантыОбеспеченияТоварами КАК ВариантыОбеспеченияТоварамиСН
		|		ПО ОстаткиПоЗаказу.ЗаказНаВнутреннееПотребление.Склад = ВариантыОбеспеченияТоварамиСН.Склад
		|			И ОстаткиПоЗаказу.Номенклатура = ВариантыОбеспеченияТоварамиСН.Номенклатура
		|			И (ВариантыОбеспеченияТоварамиСН.Характеристика = ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка))
		|			И (ВариантыОбеспеченияТоварамиСНХ.Склад ЕСТЬ NULL )
		|			И (ВариантыОбеспеченияТоварамиСН.РеквизитДопУпорядочивания = 1)
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ВариантыОбеспеченияТоварами КАК ВариантыОбеспеченияТоварамиС
		|		ПО ОстаткиПоЗаказу.ЗаказНаВнутреннееПотребление.Склад = ВариантыОбеспеченияТоварамиС.Склад
		|			И (ВариантыОбеспеченияТоварамиС.Номенклатура = ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка))
		|			И (ВариантыОбеспеченияТоварамиС.Характеристика = ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка))
		|			И (ВариантыОбеспеченияТоварамиСНХ.Склад ЕСТЬ NULL )
		|			И (ВариантыОбеспеченияТоварамиСН.Склад ЕСТЬ NULL )
		|			И (ВариантыОбеспеченияТоварамиС.РеквизитДопУпорядочивания = 1)";
		
		Если НЕ ПустаяСтрока(ТекстЗапроса) Тогда
			
			ТекстЗапросаЗаказыНаВнутреннееПотребление = СтрЗаменить(ТекстЗапросаЗаказыНаВнутреннееПотребление, "РАЗРЕШЕННЫЕ", "");
			ТекстЗапросаЗаказыНаВнутреннееПотребление = СтрЗаменить(ТекстЗапросаЗаказыНаВнутреннееПотребление, "ПОМЕСТИТЬ ТаблицаЗаказов", "");
			ТекстЗапросаЗаказыНаВнутреннееПотребление = Символы.ПС + "ОБЪЕДИНИТЬ ВСЕ" + Символы.ПС + ТекстЗапросаЗаказыНаВнутреннееПотребление;
			
		КонецЕсли;
		
		ТекстЗапроса = ТекстЗапроса + ТекстЗапросаЗаказыНаВнутреннееПотребление;
		
	КонецЕсли;
	
	Если ЗаказыНаПеремещение Тогда
		
		ТекстЗапросаЗаказыНаПеремещение =
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	ОстаткиПоЗаказу.ЗаказНаПеремещение КАК Заказ,
		|	ОстаткиПоЗаказу.ЗаказНаПеремещение.Дата КАК Дата,
		|	ВЫБОР 
		|		КОГДА &ИспользоватьСтатусыЗаказовНаПеремещение 
		|		ТОГДА ОстаткиПоЗаказу.ЗаказНаПеремещение.Статус 
		|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.СтатусыВнутреннихЗаказов.ПустаяСсылка)
		|	КОНЕЦ КАК Статус,
		|	ОстаткиПоЗаказу.ЗаказНаПеремещение.СкладОтправитель КАК Склад,
		|	ТаблицаЗаказа.НомерСтроки КАК НомерСтроки,
		|	ОстаткиПоЗаказу.Номенклатура КАК Номенклатура,
		|	ОстаткиПоЗаказу.Характеристика КАК Характеристика,
		|	ТаблицаЗаказа.Упаковка КАК Упаковка,
		|	ЕСТЬNULL(ТаблицаЗаказа.Упаковка.Коэффициент, 1) КАК УпаковкаКоэффициент,
		|	ОстаткиПоЗаказу.Номенклатура.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
		|	ТаблицаЗаказа.НачалоОтгрузки КАК ДатаОтгрузки,
		|	ОстаткиПоЗаказу.ЗаказаноОстаток КАК Количество,
		|	ИСТИНА КАК ПринятКОбеспечению,
		|	ВЫБОР
		|		КОГДА ОстаткиПоЗаказу.Номенклатура.ТипНоменклатуры НЕ В
		|		(ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Товар),ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара))
		|			ТОГДА ИСТИНА
		|		ИНАЧЕ ЛОЖЬ
		|	КОНЕЦ КАК ЭтоУслуга,
		|	0 КАК СрокПоставки,
		|	ТаблицаЗаказа.УказыватьСерии КАК УказыватьСерии,
		|	ТаблицаЗаказа.СтатусУказанияСерий КАК СтатусУказанияСерий,
		|	ДОБАВИТЬКДАТЕ(&НачалоТекущегоДня, ДЕНЬ, 1) КАК ГраницаГрафикаДоступностиСрокПоставки,
		|	ВЫБОР
		|		КОГДА ЕСТЬNULL(НастройкаХарактеристика.ВариантКонтроля, ЕСТЬNULL(НастройкаНоменклатура.ВариантКонтроля, НастройкаСклад.ВариантКонтроля)) = ЗНАЧЕНИЕ(Перечисление.ВариантыКонтроля.ОстаткиСУчетомГрафика)
		|			ТОГДА ВЫБОР
		|					КОГДА НЕ НастройкаХарактеристика.ВариантКонтроля ЕСТЬ NULL 
		|						ТОГДА ВЫБОР
		|								КОГДА НастройкаХарактеристика.ГраницаГрафикаДоступности >= &НачалоТекущегоДня
		|									ТОГДА ДОБАВИТЬКДАТЕ(НастройкаХарактеристика.ГраницаГрафикаДоступности, ДЕНЬ, 1)
		|								КОГДА НастройкаХарактеристика.СрокПоставки > 0
		|									ТОГДА ДОБАВИТЬКДАТЕ(&НачалоТекущегоДня, ДЕНЬ, НастройкаХарактеристика.СрокПоставки + 1)
		|								ИНАЧЕ ДОБАВИТЬКДАТЕ(&НачалоТекущегоДня, ДЕНЬ, 1)
		|							КОНЕЦ
		|					КОГДА НЕ НастройкаНоменклатура.ВариантКонтроля ЕСТЬ NULL 
		|						ТОГДА ВЫБОР
		|								КОГДА НастройкаНоменклатура.ГраницаГрафикаДоступности >= &НачалоТекущегоДня
		|									ТОГДА ДОБАВИТЬКДАТЕ(НастройкаНоменклатура.ГраницаГрафикаДоступности, ДЕНЬ, 1)
		|								КОГДА НастройкаНоменклатура.СрокПоставки > 0
		|									ТОГДА ДОБАВИТЬКДАТЕ(&НачалоТекущегоДня, ДЕНЬ, НастройкаНоменклатура.СрокПоставки + 1)
		|								ИНАЧЕ ДОБАВИТЬКДАТЕ(&НачалоТекущегоДня, ДЕНЬ, 1)
		|							КОНЕЦ
		|					ИНАЧЕ ВЫБОР
		|							КОГДА НастройкаСклад.ГраницаГрафикаДоступности >= &НачалоТекущегоДня
		|								ТОГДА ДОБАВИТЬКДАТЕ(НастройкаСклад.ГраницаГрафикаДоступности, ДЕНЬ, 1)
		|							КОГДА НастройкаСклад.СрокПоставки > 0
		|								ТОГДА ДОБАВИТЬКДАТЕ(&НачалоТекущегоДня, ДЕНЬ, НастройкаСклад.СрокПоставки + 1)
		|							ИНАЧЕ ДОБАВИТЬКДАТЕ(&НачалоТекущегоДня, ДЕНЬ, 1)
		|						КОНЕЦ
		|				КОНЕЦ
		|		ИНАЧЕ ДОБАВИТЬКДАТЕ(&НачалоТекущегоДня, ДЕНЬ, 1)
		|	КОНЕЦ КАК ГраницаГрафикаДоступности,
		|	ВЫБОР
		|		КОГДА ЕСТЬNULL(ВариантыОбеспеченияТоварамиСНХ.СпособОбеспеченияПотребностей.Календарь, ЕСТЬNULL(ВариантыОбеспеченияТоварамиСН.СпособОбеспеченияПотребностей.Календарь, ЕСТЬNULL(ВариантыОбеспеченияТоварамиС.СпособОбеспеченияПотребностей.Календарь, ЗНАЧЕНИЕ(Справочник.Календари.ПустаяСсылка)))) = ЗНАЧЕНИЕ(Справочник.Календари.ПустаяСсылка)
		|			ТОГДА ВЫБОР
		|					КОГДА ОстаткиПоЗаказу.ЗаказНаПеремещение.СкладОтправитель.Календарь = ЗНАЧЕНИЕ(Справочник.Календари.ПустаяСсылка)
		|						ТОГДА &ОсновнойКалендарьПредприятия
		|					ИНАЧЕ ОстаткиПоЗаказу.ЗаказНаПеремещение.СкладОтправитель.Календарь
		|				КОНЕЦ
		|		ИНАЧЕ ЕСТЬNULL(ВариантыОбеспеченияТоварамиСНХ.СпособОбеспеченияПотребностей.Календарь, ЕСТЬNULL(ВариантыОбеспеченияТоварамиСН.СпособОбеспеченияПотребностей.Календарь, ЕСТЬNULL(ВариантыОбеспеченияТоварамиС.СпособОбеспеченияПотребностей.Календарь, ЗНАЧЕНИЕ(Справочник.Календари.ПустаяСсылка))))
		|	КОНЕЦ КАК Календарь,
		|	ЕСТЬNULL(ВариантыОбеспеченияТоварамиСНХ.СпособОбеспеченияПотребностей.СрокИсполненияЗаказа, ЕСТЬNULL(ВариантыОбеспеченияТоварамиСН.СпособОбеспеченияПотребностей.СрокИсполненияЗаказа, ЕСТЬNULL(ВариантыОбеспеченияТоварамиС.СпособОбеспеченияПотребностей.СрокИсполненияЗаказа, 1))) КАК СрокТранспортировки
		|ПОМЕСТИТЬ ТаблицаЗаказов
		|ИЗ
		|	РегистрНакопления.ЗаказыНаПеремещение.Остатки(, {(ЗаказНаПеремещение.Ответственный) КАК Менеджер, (ЗаказНаПеремещение.СкладОтправитель) КАК Склад, (Номенклатура) КАК Номенклатура}) КАК ОстаткиПоЗаказу
		|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ЗаказНаПеремещение.Товары КАК ТаблицаЗаказа
		|		ПО ОстаткиПоЗаказу.ЗаказНаПеремещение = ТаблицаЗаказа.Ссылка
		|			И ОстаткиПоЗаказу.КодСтроки = ТаблицаЗаказа.КодСтроки
		|			И ОстаткиПоЗаказу.Номенклатура = ТаблицаЗаказа.Номенклатура
		|			И ОстаткиПоЗаказу.Характеристика = ТаблицаЗаказа.Характеристика
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.НастройкаКонтроляОстатков КАК НастройкаХарактеристика
		|		ПО ОстаткиПоЗаказу.ЗаказНаПеремещение.СкладОтправитель = НастройкаХарактеристика.Склад
		|			И ОстаткиПоЗаказу.Номенклатура = НастройкаХарактеристика.Номенклатура
		|			И ОстаткиПоЗаказу.Характеристика = НастройкаХарактеристика.Характеристика
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.НастройкаКонтроляОстатков КАК НастройкаНоменклатура
		|		ПО ОстаткиПоЗаказу.ЗаказНаПеремещение.СкладОтправитель = НастройкаНоменклатура.Склад
		|			И ОстаткиПоЗаказу.Номенклатура = НастройкаНоменклатура.Номенклатура
		|			И (НастройкаНоменклатура.Характеристика = ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка))
		|			И (НастройкаХарактеристика.Склад ЕСТЬ NULL )
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.НастройкаКонтроляОстатков КАК НастройкаСклад
		|		ПО ОстаткиПоЗаказу.ЗаказНаПеремещение.СкладОтправитель = НастройкаСклад.Склад
		|			И (НастройкаСклад.Номенклатура = ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка))
		|			И (НастройкаСклад.Характеристика = ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка))
		|			И (НастройкаХарактеристика.Склад ЕСТЬ NULL )
		|			И (НастройкаНоменклатура.Склад ЕСТЬ NULL )
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ВариантыОбеспеченияТоварами КАК ВариантыОбеспеченияТоварамиСНХ
		|		ПО ОстаткиПоЗаказу.ЗаказНаПеремещение.СкладОтправитель = ВариантыОбеспеченияТоварамиСНХ.Склад
		|			И ОстаткиПоЗаказу.Номенклатура = ВариантыОбеспеченияТоварамиСНХ.Номенклатура
		|			И ОстаткиПоЗаказу.Характеристика = ВариантыОбеспеченияТоварамиСНХ.Характеристика
		|			И (ВариантыОбеспеченияТоварамиСНХ.РеквизитДопУпорядочивания = 1)
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ВариантыОбеспеченияТоварами КАК ВариантыОбеспеченияТоварамиСН
		|		ПО ОстаткиПоЗаказу.ЗаказНаПеремещение.СкладОтправитель = ВариантыОбеспеченияТоварамиСН.Склад
		|			И ОстаткиПоЗаказу.Номенклатура = ВариантыОбеспеченияТоварамиСН.Номенклатура
		|			И (ВариантыОбеспеченияТоварамиСН.Характеристика = ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка))
		|			И (ВариантыОбеспеченияТоварамиСНХ.Склад ЕСТЬ NULL )
		|			И (ВариантыОбеспеченияТоварамиСН.РеквизитДопУпорядочивания = 1)
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ВариантыОбеспеченияТоварами КАК ВариантыОбеспеченияТоварамиС
		|		ПО ОстаткиПоЗаказу.ЗаказНаПеремещение.СкладОтправитель = ВариантыОбеспеченияТоварамиС.Склад
		|			И (ВариантыОбеспеченияТоварамиС.Номенклатура = ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка))
		|			И (ВариантыОбеспеченияТоварамиС.Характеристика = ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка))
		|			И (ВариантыОбеспеченияТоварамиСНХ.Склад ЕСТЬ NULL )
		|			И (ВариантыОбеспеченияТоварамиСН.Склад ЕСТЬ NULL )
		|			И (ВариантыОбеспеченияТоварамиС.РеквизитДопУпорядочивания = 1)";
		
		Если НЕ ПустаяСтрока(ТекстЗапроса) Тогда
			
			ТекстЗапросаЗаказыНаПеремещение = СтрЗаменить(ТекстЗапросаЗаказыНаПеремещение, "РАЗРЕШЕННЫЕ", "");
			ТекстЗапросаЗаказыНаПеремещение = СтрЗаменить(ТекстЗапросаЗаказыНаПеремещение, "ПОМЕСТИТЬ ТаблицаЗаказов", "");
			ТекстЗапросаЗаказыНаПеремещение = Символы.ПС + "ОБЪЕДИНИТЬ ВСЕ" + Символы.ПС + ТекстЗапросаЗаказыНаПеремещение;
			
		КонецЕсли;
		
		ТекстЗапроса = ТекстЗапроса + ТекстЗапросаЗаказыНаПеремещение;
		
	КонецЕсли;
	
	Если ЗаказыНаСборку Тогда
		
		ТекстЗапросаЗаказыНаСборку =
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	ОстаткиПоЗаказу.ЗаказНаСборку КАК Заказ,
		|	ОстаткиПоЗаказу.ЗаказНаСборку.Дата КАК Дата,
		|	ВЫБОР 
		|		КОГДА &ИспользоватьСтатусыЗаказовНаСборку 
		|		ТОГДА ОстаткиПоЗаказу.ЗаказНаСборку.Статус 
		|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.СтатусыВнутреннихЗаказов.ПустаяСсылка)
		|	КОНЕЦ КАК Статус,
		|	ОстаткиПоЗаказу.ЗаказНаСборку.Склад КАК Склад,
		|	ВЫБОР
		|		КОГДА ОстаткиПоЗаказу.ЗаказНаСборку.ТипОперации = ЗНАЧЕНИЕ(Перечисление.ТипыОперацийЗаказаНаСборку.СборкаИзКомплектующих)
		|			ТОГДА ТаблицаЗаказа.НомерСтроки
		|		ИНАЧЕ 1
		|	КОНЕЦ КАК НомерСтроки,
		|	ОстаткиПоЗаказу.Номенклатура КАК Номенклатура,
		|	ОстаткиПоЗаказу.Характеристика КАК Характеристика,
		|	ВЫБОР
		|		КОГДА ОстаткиПоЗаказу.ЗаказНаСборку.ТипОперации = ЗНАЧЕНИЕ(Перечисление.ТипыОперацийЗаказаНаСборку.СборкаИзКомплектующих)
		|			ТОГДА ТаблицаЗаказа.Упаковка
		|		ИНАЧЕ ОстаткиПоЗаказу.ЗаказНаСборку.Упаковка
		|	КОНЕЦ КАК Упаковка,
		|	ВЫБОР
		|		КОГДА ОстаткиПоЗаказу.ЗаказНаСборку.ТипОперации = ЗНАЧЕНИЕ(Перечисление.ТипыОперацийЗаказаНаСборку.СборкаИзКомплектующих)
		|			ТОГДА ЕСТЬNULL(ТаблицаЗаказа.Упаковка.Коэффициент, 1)
		|		ИНАЧЕ ЕСТЬNULL(ОстаткиПоЗаказу.ЗаказНаСборку.Упаковка.Коэффициент, 1)
		|	КОНЕЦ КАК УпаковкаКоэффициент,
		|	ОстаткиПоЗаказу.Номенклатура.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
		|	ОстаткиПоЗаказу.ЗаказНаСборку.НачалоСборкиРазборки КАК ДатаОтгрузки,
		|	ОстаткиПоЗаказу.ЗаказаноОстаток КАК Количество,
		|	ИСТИНА КАК ПринятКОбеспечению,
		|	ВЫБОР
		|		КОГДА ОстаткиПоЗаказу.Номенклатура.ТипНоменклатуры НЕ В
		|		(ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Товар),ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара))
		|			ТОГДА ИСТИНА
		|		ИНАЧЕ ЛОЖЬ
		|	КОНЕЦ КАК ЭтоУслуга,
		|	0 КАК СрокПоставки,
		|	ТаблицаЗаказа.УказыватьСерии КАК УказыватьСерии,
		|	ТаблицаЗаказа.СтатусУказанияСерий КАК СтатусУказанияСерий,
		|	ДОБАВИТЬКДАТЕ(&НачалоТекущегоДня, ДЕНЬ, 1) КАК ГраницаГрафикаДоступностиСрокПоставки,
		|	ВЫБОР
		|		КОГДА ЕСТЬNULL(НастройкаХарактеристика.ВариантКонтроля, ЕСТЬNULL(НастройкаНоменклатура.ВариантКонтроля, НастройкаСклад.ВариантКонтроля)) = ЗНАЧЕНИЕ(Перечисление.ВариантыКонтроля.ОстаткиСУчетомГрафика)
		|			ТОГДА ВЫБОР
		|					КОГДА НЕ НастройкаХарактеристика.ВариантКонтроля ЕСТЬ NULL 
		|						ТОГДА ВЫБОР
		|								КОГДА НастройкаХарактеристика.ГраницаГрафикаДоступности >= &НачалоТекущегоДня
		|									ТОГДА ДОБАВИТЬКДАТЕ(НастройкаХарактеристика.ГраницаГрафикаДоступности, ДЕНЬ, 1)
		|								КОГДА НастройкаХарактеристика.СрокПоставки > 0
		|									ТОГДА ДОБАВИТЬКДАТЕ(&НачалоТекущегоДня, ДЕНЬ, НастройкаХарактеристика.СрокПоставки + 1)
		|								ИНАЧЕ ДОБАВИТЬКДАТЕ(&НачалоТекущегоДня, ДЕНЬ, 1)
		|							КОНЕЦ
		|					КОГДА НЕ НастройкаНоменклатура.ВариантКонтроля ЕСТЬ NULL 
		|						ТОГДА ВЫБОР
		|								КОГДА НастройкаНоменклатура.ГраницаГрафикаДоступности >= &НачалоТекущегоДня
		|									ТОГДА ДОБАВИТЬКДАТЕ(НастройкаНоменклатура.ГраницаГрафикаДоступности, ДЕНЬ, 1)
		|								КОГДА НастройкаНоменклатура.СрокПоставки > 0
		|									ТОГДА ДОБАВИТЬКДАТЕ(&НачалоТекущегоДня, ДЕНЬ, НастройкаНоменклатура.СрокПоставки + 1)
		|								ИНАЧЕ ДОБАВИТЬКДАТЕ(&НачалоТекущегоДня, ДЕНЬ, 1)
		|							КОНЕЦ
		|					ИНАЧЕ ВЫБОР
		|							КОГДА НастройкаСклад.ГраницаГрафикаДоступности >= &НачалоТекущегоДня
		|								ТОГДА ДОБАВИТЬКДАТЕ(НастройкаСклад.ГраницаГрафикаДоступности, ДЕНЬ, 1)
		|							КОГДА НастройкаСклад.СрокПоставки > 0
		|								ТОГДА ДОБАВИТЬКДАТЕ(&НачалоТекущегоДня, ДЕНЬ, НастройкаСклад.СрокПоставки + 1)
		|							ИНАЧЕ ДОБАВИТЬКДАТЕ(&НачалоТекущегоДня, ДЕНЬ, 1)
		|						КОНЕЦ
		|				КОНЕЦ
		|		ИНАЧЕ ДОБАВИТЬКДАТЕ(&НачалоТекущегоДня, ДЕНЬ, 1)
		|	КОНЕЦ КАК ГраницаГрафикаДоступности,
		|	ВЫБОР
		|		КОГДА ЕСТЬNULL(ВариантыОбеспеченияТоварамиСНХ.СпособОбеспеченияПотребностей.Календарь, ЕСТЬNULL(ВариантыОбеспеченияТоварамиСН.СпособОбеспеченияПотребностей.Календарь, ЕСТЬNULL(ВариантыОбеспеченияТоварамиС.СпособОбеспеченияПотребностей.Календарь, ЗНАЧЕНИЕ(Справочник.Календари.ПустаяСсылка)))) = ЗНАЧЕНИЕ(Справочник.Календари.ПустаяСсылка)
		|			ТОГДА ВЫБОР
		|					КОГДА ОстаткиПоЗаказу.ЗаказНаСборку.Склад.Календарь = ЗНАЧЕНИЕ(Справочник.Календари.ПустаяСсылка)
		|						ТОГДА &ОсновнойКалендарьПредприятия
		|					ИНАЧЕ ОстаткиПоЗаказу.ЗаказНаСборку.Склад.Календарь
		|				КОНЕЦ
		|		ИНАЧЕ ЕСТЬNULL(ВариантыОбеспеченияТоварамиСНХ.СпособОбеспеченияПотребностей.Календарь, ЕСТЬNULL(ВариантыОбеспеченияТоварамиСН.СпособОбеспеченияПотребностей.Календарь, ЕСТЬNULL(ВариантыОбеспеченияТоварамиС.СпособОбеспеченияПотребностей.Календарь, ЗНАЧЕНИЕ(Справочник.Календари.ПустаяСсылка))))
		|	КОНЕЦ КАК Календарь,
		|	ЕСТЬNULL(ВариантыОбеспеченияТоварамиСНХ.СпособОбеспеченияПотребностей.СрокИсполненияЗаказа, ЕСТЬNULL(ВариантыОбеспеченияТоварамиСН.СпособОбеспеченияПотребностей.СрокИсполненияЗаказа, ЕСТЬNULL(ВариантыОбеспеченияТоварамиС.СпособОбеспеченияПотребностей.СрокИсполненияЗаказа, 1))) КАК СрокТранспортировки
		|ПОМЕСТИТЬ ТаблицаЗаказов
		|ИЗ
		|	РегистрНакопления.ЗаказыНаСборку.Остатки(, ТипСборки = ЗНАЧЕНИЕ(Перечисление.ТипыДвиженияЗапасов.Отгрузка) {(ЗаказНаСборку.Ответственный) КАК Менеджер, (ЗаказНаСборку.Склад) КАК Склад, (Номенклатура) КАК Номенклатура}) КАК ОстаткиПоЗаказу
		|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ЗаказНаСборку.Товары КАК ТаблицаЗаказа
		|		ПО ОстаткиПоЗаказу.ЗаказНаСборку = ТаблицаЗаказа.Ссылка
		|			И ОстаткиПоЗаказу.КодСтроки = ТаблицаЗаказа.КодСтроки
		|			И ОстаткиПоЗаказу.Номенклатура = ТаблицаЗаказа.Номенклатура
		|			И ОстаткиПоЗаказу.Характеристика = ТаблицаЗаказа.Характеристика
		|			И (ОстаткиПоЗаказу.ЗаказНаСборку.ТипОперации = ЗНАЧЕНИЕ(Перечисление.ТипыОперацийЗаказаНаСборку.СборкаИзКомплектующих))
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.НастройкаКонтроляОстатков КАК НастройкаХарактеристика
		|		ПО ОстаткиПоЗаказу.ЗаказНаСборку.Склад = НастройкаХарактеристика.Склад
		|			И ОстаткиПоЗаказу.Номенклатура = НастройкаХарактеристика.Номенклатура
		|			И ОстаткиПоЗаказу.Характеристика = НастройкаХарактеристика.Характеристика
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.НастройкаКонтроляОстатков КАК НастройкаНоменклатура
		|		ПО ОстаткиПоЗаказу.ЗаказНаСборку.Склад = НастройкаНоменклатура.Склад
		|			И ОстаткиПоЗаказу.Номенклатура = НастройкаНоменклатура.Номенклатура
		|			И (НастройкаНоменклатура.Характеристика = ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка))
		|			И (НастройкаХарактеристика.Склад ЕСТЬ NULL )
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.НастройкаКонтроляОстатков КАК НастройкаСклад
		|		ПО ОстаткиПоЗаказу.ЗаказНаСборку.Склад = НастройкаСклад.Склад
		|			И (НастройкаСклад.Номенклатура = ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка))
		|			И (НастройкаСклад.Характеристика = ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка))
		|			И (НастройкаХарактеристика.Склад ЕСТЬ NULL )
		|			И (НастройкаНоменклатура.Склад ЕСТЬ NULL )
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ВариантыОбеспеченияТоварами КАК ВариантыОбеспеченияТоварамиСНХ
		|		ПО ОстаткиПоЗаказу.ЗаказНаСборку.Склад = ВариантыОбеспеченияТоварамиСНХ.Склад
		|			И ОстаткиПоЗаказу.Номенклатура = ВариантыОбеспеченияТоварамиСНХ.Номенклатура
		|			И ОстаткиПоЗаказу.Характеристика = ВариантыОбеспеченияТоварамиСНХ.Характеристика
		|			И (ВариантыОбеспеченияТоварамиСНХ.РеквизитДопУпорядочивания = 1)
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ВариантыОбеспеченияТоварами КАК ВариантыОбеспеченияТоварамиСН
		|		ПО ОстаткиПоЗаказу.ЗаказНаСборку.Склад = ВариантыОбеспеченияТоварамиСН.Склад
		|			И ОстаткиПоЗаказу.Номенклатура = ВариантыОбеспеченияТоварамиСН.Номенклатура
		|			И (ВариантыОбеспеченияТоварамиСН.Характеристика = ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка))
		|			И (ВариантыОбеспеченияТоварамиСНХ.Склад ЕСТЬ NULL )
		|			И (ВариантыОбеспеченияТоварамиСН.РеквизитДопУпорядочивания = 1)
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ВариантыОбеспеченияТоварами КАК ВариантыОбеспеченияТоварамиС
		|		ПО ОстаткиПоЗаказу.ЗаказНаСборку.Склад = ВариантыОбеспеченияТоварамиС.Склад
		|			И (ВариантыОбеспеченияТоварамиС.Номенклатура = ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка))
		|			И (ВариантыОбеспеченияТоварамиС.Характеристика = ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка))
		|			И (ВариантыОбеспеченияТоварамиСНХ.Склад ЕСТЬ NULL )
		|			И (ВариантыОбеспеченияТоварамиСН.Склад ЕСТЬ NULL )
		|			И (ВариантыОбеспеченияТоварамиС.РеквизитДопУпорядочивания = 1)";
		
		Если НЕ ПустаяСтрока(ТекстЗапроса) Тогда
			
			ТекстЗапросаЗаказыНаСборку = СтрЗаменить(ТекстЗапросаЗаказыНаСборку, "РАЗРЕШЕННЫЕ", "");
			ТекстЗапросаЗаказыНаСборку = СтрЗаменить(ТекстЗапросаЗаказыНаСборку, "ПОМЕСТИТЬ ТаблицаЗаказов", "");
			ТекстЗапросаЗаказыНаСборку = Символы.ПС + "ОБЪЕДИНИТЬ ВСЕ" + Символы.ПС + ТекстЗапросаЗаказыНаСборку;
			
		КонецЕсли;
		
		ТекстЗапроса = ТекстЗапроса + ТекстЗапросаЗаказыНаСборку;
		
	КонецЕсли;
	
	Если ЗаявкиНаВозвратТоваровОтКлиентов Тогда
		
		ТекстЗапросЗаявкиНаВозвратТоваровОтКлиента =
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	ВЫРАЗИТЬ(ОстаткиПоЗаказу.ЗаказКлиента КАК Документ.ЗаявкаНаВозвратТоваровОтКлиента) КАК Заказ,
		|	ВЫРАЗИТЬ(ОстаткиПоЗаказу.ЗаказКлиента КАК Документ.ЗаявкаНаВозвратТоваровОтКлиента).Дата КАК Дата,
		|	ВЫБОР 
		|		КОГДА &ИспользоватьСтатусыЗаявокНаВозврат 
		|		ТОГДА ВЫРАЗИТЬ(ОстаткиПоЗаказу.ЗаказКлиента КАК Документ.ЗаявкаНаВозвратТоваровОтКлиента).Статус
		|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.СтатусыЗаявокНаВозвратТоваровОтКлиентов.ПустаяСсылка)
		|	КОНЕЦ КАК Статус,
		|	ОстаткиПоЗаказу.Склад КАК Склад,
		|	ТаблицаЗаказа.НомерСтроки КАК НомерСтроки,
		|	ОстаткиПоЗаказу.Номенклатура КАК Номенклатура,
		|	ОстаткиПоЗаказу.Характеристика КАК Характеристика,
		|	ТаблицаЗаказа.Упаковка КАК Упаковка,
		|	ЕСТЬNULL(ТаблицаЗаказа.Упаковка.Коэффициент, 1) КАК УпаковкаКоэффициент,
		|	ОстаткиПоЗаказу.Номенклатура.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
		|	ТаблицаЗаказа.ДатаОтгрузки КАК ДатаОтгрузки,
		|	ОстаткиПоЗаказу.ЗаказаноОстаток КАК Количество,
		|	ВЫБОР
		|		КОГДА ВЫРАЗИТЬ(ОстаткиПоЗаказу.ЗаказКлиента КАК Документ.ЗаявкаНаВозвратТоваровОтКлиента).Статус В (ЗНАЧЕНИЕ(Перечисление.СтатусыЗаявокНаВозвратТоваровОтКлиентов.КОбеспечению), ЗНАЧЕНИЕ(Перечисление.СтатусыЗаявокНаВозвратТоваровОтКлиентов.КОтгрузке), ЗНАЧЕНИЕ(Перечисление.СтатусыЗаявокНаВозвратТоваровОтКлиентов.Выполнена))
		|			ТОГДА ИСТИНА
		|		ИНАЧЕ ЛОЖЬ
		|	КОНЕЦ КАК ПринятКОбеспечению,
		|	ВЫБОР
		|		КОГДА ОстаткиПоЗаказу.Номенклатура.ТипНоменклатуры НЕ В
		|		(ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Товар),ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара))
		|			ТОГДА ИСТИНА
		|		ИНАЧЕ ЛОЖЬ
		|	КОНЕЦ КАК ЭтоУслуга,
		|	ТаблицаЗаказа.СрокПоставки КАК СрокПоставки,
		|	ТаблицаЗаказа.УказыватьСерии КАК УказыватьСерии,
		|	ТаблицаЗаказа.СтатусУказанияСерий КАК СтатусУказанияСерий,
		|	ВЫБОР
		|		КОГДА ЕСТЬNULL(НастройкаХарактеристика.ВариантКонтроля, ЕСТЬNULL(НастройкаНоменклатура.ВариантКонтроля, НастройкаСклад.ВариантКонтроля)) = ЗНАЧЕНИЕ(Перечисление.ВариантыКонтроля.ОстаткиСУчетомГрафика)
		|			ТОГДА ВЫБОР
		|					КОГДА ТаблицаЗаказа.СрокПоставки > 0
		|						ТОГДА ДОБАВИТЬКДАТЕ(&НачалоТекущегоДня, ДЕНЬ, ТаблицаЗаказа.СрокПоставки + 1)
		|					ИНАЧЕ ДОБАВИТЬКДАТЕ(&НачалоТекущегоДня, ДЕНЬ, 1)
		|				КОНЕЦ
		|		ИНАЧЕ ДОБАВИТЬКДАТЕ(&НачалоТекущегоДня, ДЕНЬ, 1)
		|	КОНЕЦ КАК ГраницаГрафикаДоступностиСрокПоставки,
		|	ВЫБОР
		|		КОГДА ЕСТЬNULL(НастройкаХарактеристика.ВариантКонтроля, ЕСТЬNULL(НастройкаНоменклатура.ВариантКонтроля, НастройкаСклад.ВариантКонтроля)) = ЗНАЧЕНИЕ(Перечисление.ВариантыКонтроля.ОстаткиСУчетомГрафика)
		|			ТОГДА ВЫБОР
		|					КОГДА НЕ НастройкаХарактеристика.ВариантКонтроля ЕСТЬ NULL 
		|						ТОГДА ВЫБОР
		|								КОГДА НастройкаХарактеристика.ГраницаГрафикаДоступности >= &НачалоТекущегоДня
		|									ТОГДА ДОБАВИТЬКДАТЕ(НастройкаХарактеристика.ГраницаГрафикаДоступности, ДЕНЬ, 1)
		|								КОГДА НастройкаХарактеристика.СрокПоставки > 0
		|									ТОГДА ДОБАВИТЬКДАТЕ(&НачалоТекущегоДня, ДЕНЬ, НастройкаХарактеристика.СрокПоставки + 1)
		|								ИНАЧЕ ДОБАВИТЬКДАТЕ(&НачалоТекущегоДня, ДЕНЬ, 1)
		|							КОНЕЦ
		|					КОГДА НЕ НастройкаНоменклатура.ВариантКонтроля ЕСТЬ NULL 
		|						ТОГДА ВЫБОР
		|								КОГДА НастройкаНоменклатура.ГраницаГрафикаДоступности >= &НачалоТекущегоДня
		|									ТОГДА ДОБАВИТЬКДАТЕ(НастройкаНоменклатура.ГраницаГрафикаДоступности, ДЕНЬ, 1)
		|								КОГДА НастройкаНоменклатура.СрокПоставки > 0
		|									ТОГДА ДОБАВИТЬКДАТЕ(&НачалоТекущегоДня, ДЕНЬ, НастройкаНоменклатура.СрокПоставки + 1)
		|								ИНАЧЕ ДОБАВИТЬКДАТЕ(&НачалоТекущегоДня, ДЕНЬ, 1)
		|							КОНЕЦ
		|					ИНАЧЕ ВЫБОР
		|							КОГДА НастройкаСклад.ГраницаГрафикаДоступности >= &НачалоТекущегоДня
		|								ТОГДА ДОБАВИТЬКДАТЕ(НастройкаСклад.ГраницаГрафикаДоступности, ДЕНЬ, 1)
		|							КОГДА НастройкаСклад.СрокПоставки > 0
		|								ТОГДА ДОБАВИТЬКДАТЕ(&НачалоТекущегоДня, ДЕНЬ, НастройкаСклад.СрокПоставки + 1)
		|							ИНАЧЕ ДОБАВИТЬКДАТЕ(&НачалоТекущегоДня, ДЕНЬ, 1)
		|						КОНЕЦ
		|				КОНЕЦ
		|		ИНАЧЕ ДОБАВИТЬКДАТЕ(&НачалоТекущегоДня, ДЕНЬ, 1)
		|	КОНЕЦ КАК ГраницаГрафикаДоступности,
		|	ВЫБОР
		|		КОГДА ЕСТЬNULL(ВариантыОбеспеченияТоварамиСНХ.СпособОбеспеченияПотребностей.Календарь, ЕСТЬNULL(ВариантыОбеспеченияТоварамиСН.СпособОбеспеченияПотребностей.Календарь, ЕСТЬNULL(ВариантыОбеспеченияТоварамиС.СпособОбеспеченияПотребностей.Календарь, ЗНАЧЕНИЕ(Справочник.Календари.ПустаяСсылка)))) = ЗНАЧЕНИЕ(Справочник.Календари.ПустаяСсылка)
		|			ТОГДА ВЫБОР
		|					КОГДА ОстаткиПоЗаказу.Склад.Календарь = ЗНАЧЕНИЕ(Справочник.Календари.ПустаяСсылка)
		|						ТОГДА &ОсновнойКалендарьПредприятия
		|					ИНАЧЕ ОстаткиПоЗаказу.Склад.Календарь
		|				КОНЕЦ
		|		ИНАЧЕ ЕСТЬNULL(ВариантыОбеспеченияТоварамиСНХ.СпособОбеспеченияПотребностей.Календарь, ЕСТЬNULL(ВариантыОбеспеченияТоварамиСН.СпособОбеспеченияПотребностей.Календарь, ЕСТЬNULL(ВариантыОбеспеченияТоварамиС.СпособОбеспеченияПотребностей.Календарь, ЗНАЧЕНИЕ(Справочник.Календари.ПустаяСсылка))))
		|	КОНЕЦ КАК Календарь,
		|	ЕСТЬNULL(ВариантыОбеспеченияТоварамиСНХ.СпособОбеспеченияПотребностей.СрокИсполненияЗаказа, ЕСТЬNULL(ВариантыОбеспеченияТоварамиСН.СпособОбеспеченияПотребностей.СрокИсполненияЗаказа, ЕСТЬNULL(ВариантыОбеспеченияТоварамиС.СпособОбеспеченияПотребностей.СрокИсполненияЗаказа, 1))) КАК СрокТранспортировки
		|ПОМЕСТИТЬ ТаблицаЗаказов
		|ИЗ
		|	РегистрНакопления.ЗаказыКлиентов.Остатки(, ЗаказКлиента ССЫЛКА Документ.ЗаявкаНаВозвратТоваровОтКлиента {(ВЫРАЗИТЬ(ЗаказКлиента КАК Документ.ЗаявкаНаВозвратТоваровОтКлиента).Менеджер) КАК Менеджер, (Склад) КАК Склад, (Номенклатура) КАК Номенклатура}) КАК ОстаткиПоЗаказу
		|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ЗаявкаНаВозвратТоваровОтКлиента.ЗаменяющиеТовары КАК ТаблицаЗаказа
		|		ПО ((ВЫРАЗИТЬ(ОстаткиПоЗаказу.ЗаказКлиента КАК Документ.ЗаявкаНаВозвратТоваровОтКлиента)) = ТаблицаЗаказа.Ссылка)
		|			И ОстаткиПоЗаказу.КодСтроки = ТаблицаЗаказа.КодСтроки
		|			И ОстаткиПоЗаказу.Номенклатура = ТаблицаЗаказа.Номенклатура
		|			И ОстаткиПоЗаказу.Характеристика = ТаблицаЗаказа.Характеристика
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.НастройкаКонтроляОстатков КАК НастройкаХарактеристика
		|		ПО ОстаткиПоЗаказу.Склад = НастройкаХарактеристика.Склад
		|			И ОстаткиПоЗаказу.Номенклатура = НастройкаХарактеристика.Номенклатура
		|			И ОстаткиПоЗаказу.Характеристика = НастройкаХарактеристика.Характеристика
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.НастройкаКонтроляОстатков КАК НастройкаНоменклатура
		|		ПО ОстаткиПоЗаказу.Склад = НастройкаНоменклатура.Склад
		|			И ОстаткиПоЗаказу.Номенклатура = НастройкаНоменклатура.Номенклатура
		|			И (НастройкаНоменклатура.Характеристика = ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка))
		|			И (НастройкаХарактеристика.Склад ЕСТЬ NULL )
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.НастройкаКонтроляОстатков КАК НастройкаСклад
		|		ПО ОстаткиПоЗаказу.Склад = НастройкаСклад.Склад
		|			И (НастройкаСклад.Номенклатура = ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка))
		|			И (НастройкаСклад.Характеристика = ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка))
		|			И (НастройкаХарактеристика.Склад ЕСТЬ NULL )
		|			И (НастройкаНоменклатура.Склад ЕСТЬ NULL )
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ВариантыОбеспеченияТоварами КАК ВариантыОбеспеченияТоварамиСНХ
		|		ПО ОстаткиПоЗаказу.Склад = ВариантыОбеспеченияТоварамиСНХ.Склад
		|			И ОстаткиПоЗаказу.Номенклатура = ВариантыОбеспеченияТоварамиСНХ.Номенклатура
		|			И ОстаткиПоЗаказу.Характеристика = ВариантыОбеспеченияТоварамиСНХ.Характеристика
		|			И (ВариантыОбеспеченияТоварамиСНХ.РеквизитДопУпорядочивания = 1)
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ВариантыОбеспеченияТоварами КАК ВариантыОбеспеченияТоварамиСН
		|		ПО ОстаткиПоЗаказу.Склад = ВариантыОбеспеченияТоварамиСН.Склад
		|			И ОстаткиПоЗаказу.Номенклатура = ВариантыОбеспеченияТоварамиСН.Номенклатура
		|			И (ВариантыОбеспеченияТоварамиСН.Характеристика = ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка))
		|			И (ВариантыОбеспеченияТоварамиСНХ.Склад ЕСТЬ NULL )
		|			И (ВариантыОбеспеченияТоварамиСН.РеквизитДопУпорядочивания = 1)
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ВариантыОбеспеченияТоварами КАК ВариантыОбеспеченияТоварамиС
		|		ПО ОстаткиПоЗаказу.Склад = ВариантыОбеспеченияТоварамиС.Склад
		|			И (ВариантыОбеспеченияТоварамиС.Номенклатура = ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка))
		|			И (ВариантыОбеспеченияТоварамиС.Характеристика = ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка))
		|			И (ВариантыОбеспеченияТоварамиСНХ.Склад ЕСТЬ NULL )
		|			И (ВариантыОбеспеченияТоварамиСН.Склад ЕСТЬ NULL )
		|			И (ВариантыОбеспеченияТоварамиС.РеквизитДопУпорядочивания = 1)";
		
		Если НЕ ПустаяСтрока(ТекстЗапроса) Тогда
			
			ТекстЗапросЗаявкиНаВозвратТоваровОтКлиента = СтрЗаменить(ТекстЗапросЗаявкиНаВозвратТоваровОтКлиента, "РАЗРЕШЕННЫЕ", "");
			ТекстЗапросЗаявкиНаВозвратТоваровОтКлиента = СтрЗаменить(ТекстЗапросЗаявкиНаВозвратТоваровОтКлиента, "ПОМЕСТИТЬ ТаблицаЗаказов", "");
			ТекстЗапросЗаявкиНаВозвратТоваровОтКлиента = Символы.ПС + "ОБЪЕДИНИТЬ ВСЕ" + Символы.ПС + ТекстЗапросЗаявкиНаВозвратТоваровОтКлиента;
			
		КонецЕсли;
		
		ТекстЗапроса = ТекстЗапроса + ТекстЗапросЗаявкиНаВозвратТоваровОтКлиента;
		
	КонецЕсли;
	
	ПостроительЗапроса = Новый ПостроительЗапроса(ТекстЗапроса);
	
	Если ЗначениеЗаполнено(Менеджер) Тогда
		
		ОтборМенеджер = ПостроительЗапроса.Отбор.Добавить("Менеджер");
		ОтборМенеджер.Установить(Менеджер);
		
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Склад) И НЕ РежимПроизводства Тогда
		
		ОтборСклад = ПостроительЗапроса.Отбор.Добавить("Склад");
		ОтборСклад.Установить(Склад);
		
		УстановитьПривилегированныйРежим(Истина);
		
		СкладЭтоГруппа = Справочники.Склады.ЭтоГруппа(Склад);
		
		УстановитьПривилегированныйРежим(Ложь);
		
		Если ЗначениеЗаполнено(СкладЭтоГруппа) И СкладЭтоГруппа Тогда
			
			ОтборСклад.ВидСравнения = ВидСравнения.ВИерархии;
			
		КонецЕсли;
		
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Номенклатура) И НЕ РежимПроизводства Тогда
		
		ОтборНоменклатура = ПостроительЗапроса.Отбор.Добавить("Номенклатура");
		ОтборНоменклатура.Установить(Номенклатура);
		
		УстановитьПривилегированныйРежим(Истина);
		
		НоменклатураЭтоГруппа = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Номенклатура, "ЭтоГруппа");
		
		УстановитьПривилегированныйРежим(Ложь);
		
		Если ЗначениеЗаполнено(НоменклатураЭтоГруппа) И НоменклатураЭтоГруппа Тогда
			
			ОтборНоменклатура.ВидСравнения = ВидСравнения.ВИерархии;
			
		КонецЕсли;
		
	КонецЕсли;
	
	Запрос = ПостроительЗапроса.ПолучитьЗапрос();
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("НачалоТекущегоДня",                                 НачалоТекущегоДня);
	Запрос.УстановитьПараметр("ОсновнойКалендарьПредприятия",                      Константы.ОсновнойКалендарьПредприятия.Получить());
	Запрос.УстановитьПараметр("ИспользоватьСтатусыЗаказовКлиентов",                ПолучитьФункциональнуюОпцию("ИспользоватьСтатусыЗаказовКлиентов"));
	Запрос.УстановитьПараметр("ИспользоватьСтатусыЗаявокНаВозврат",                ПолучитьФункциональнуюОпцию("ИспользоватьСтатусыЗаявокНаВозврат"));
	Запрос.УстановитьПараметр("ИспользоватьСтатусыЗаказовНаВнутреннееПотребление", ПолучитьФункциональнуюОпцию("ИспользоватьСтатусыЗаказовНаВнутреннееПотребление"));
	Запрос.УстановитьПараметр("ИспользоватьСтатусыЗаказовНаПеремещение",           ПолучитьФункциональнуюОпцию("ИспользоватьСтатусыЗаказовНаПеремещение"));
	Запрос.УстановитьПараметр("ИспользоватьСтатусыЗаказовНаСборку",                ПолучитьФункциональнуюОпцию("ИспользоватьСтатусыЗаказовНаСборку"));
	
	Запрос.Выполнить();
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ТаблицаЗаказов.Заказ КАК Заказ,
	|	МАКСИМУМ(ТаблицаЗаказов.Дата) КАК Дата,
	|	МАКСИМУМ(ТаблицаЗаказов.Статус) КАК Статус,
	|	МАКСИМУМ(ТаблицаЗаказов.Склад) КАК Склад,
	|	ТаблицаЗаказов.НомерСтроки КАК НомерСтроки,
	|	МАКСИМУМ(ТаблицаЗаказов.Номенклатура) КАК Номенклатура,
	|	МАКСИМУМ(ТаблицаЗаказов.Характеристика) КАК Характеристика,
	|	МАКСИМУМ(ТаблицаЗаказов.Упаковка) КАК Упаковка,
	|	МАКСИМУМ(ТаблицаЗаказов.УпаковкаКоэффициент) КАК УпаковкаКоэффициент,
	|	МАКСИМУМ(ТаблицаЗаказов.ЕдиницаИзмерения) КАК ЕдиницаИзмерения,
	|	МАКСИМУМ(ТаблицаЗаказов.ДатаОтгрузки) КАК ДатаОтгрузки,
	|	МАКСИМУМ(ТаблицаЗаказов.Количество) КАК Количество,
	|	СУММА(ЕСТЬNULL(ГрафикОтгрузкиТекущийЗаказ.Количество, 0)) КАК КоличествоПредыдущиеЗаказы,
	|	МАКСИМУМ(ТаблицаЗаказов.ПринятКОбеспечению) КАК ПринятКОбеспечению,
	|	МАКСИМУМ(ТаблицаЗаказов.СрокПоставки) КАК СрокПоставки,
	|	МАКСИМУМ(ТаблицаЗаказов.УказыватьСерии) КАК УказыватьСерии,
	|	МАКСИМУМ(ТаблицаЗаказов.СтатусУказанияСерий) КАК СтатусУказанияСерий,
	|	МАКСИМУМ(ТаблицаЗаказов.ГраницаГрафикаДоступностиСрокПоставки) КАК ГраницаГрафикаДоступностиСрокПоставки,
	|	МАКСИМУМ(ТаблицаЗаказов.ГраницаГрафикаДоступности) КАК ГраницаГрафикаДоступности,
	|	МАКСИМУМ(ТаблицаЗаказов.Календарь) КАК Календарь,
	|	МАКСИМУМ(ТаблицаЗаказов.СрокТранспортировки) КАК СрокТранспортировки
	|ПОМЕСТИТЬ ГрафикОтгрузкиПоЗаказамБезПредыдущихЗаказов
	|ИЗ
	|	ТаблицаЗаказов КАК ТаблицаЗаказов
	|		ЛЕВОЕ СОЕДИНЕНИЕ ТаблицаЗаказов КАК ГрафикОтгрузкиТекущийЗаказ
	|		ПО ТаблицаЗаказов.Заказ = ГрафикОтгрузкиТекущийЗаказ.Заказ
	|			И ТаблицаЗаказов.Склад = ГрафикОтгрузкиТекущийЗаказ.Склад
	|			И ТаблицаЗаказов.Номенклатура = ГрафикОтгрузкиТекущийЗаказ.Номенклатура
	|			И ТаблицаЗаказов.Характеристика = ГрафикОтгрузкиТекущийЗаказ.Характеристика
	|			И (ВЫБОР
	|				КОГДА ТаблицаЗаказов.СтатусУказанияСерий = 10
	|					ТОГДА ГрафикОтгрузкиТекущийЗаказ.СтатусУказанияСерий = 10
	|				ИНАЧЕ ИСТИНА
	|			КОНЕЦ)
	|			И (ТаблицаЗаказов.ПринятКОбеспечению
	|					И ГрафикОтгрузкиТекущийЗаказ.ПринятКОбеспечению
	|					И (ТаблицаЗаказов.ДатаОтгрузки > ГрафикОтгрузкиТекущийЗаказ.ДатаОтгрузки
	|						ИЛИ ТаблицаЗаказов.ДатаОтгрузки = ГрафикОтгрузкиТекущийЗаказ.ДатаОтгрузки
	|							И ТаблицаЗаказов.НомерСтроки > ГрафикОтгрузкиТекущийЗаказ.НомерСтроки)
	|				ИЛИ НЕ ТаблицаЗаказов.ПринятКОбеспечению
	|					И ГрафикОтгрузкиТекущийЗаказ.ПринятКОбеспечению
	|				ИЛИ НЕ ТаблицаЗаказов.ПринятКОбеспечению
	|					И НЕ ГрафикОтгрузкиТекущийЗаказ.ПринятКОбеспечению
	|					И ТаблицаЗаказов.ДатаОтгрузки >= ГрафикОтгрузкиТекущийЗаказ.ДатаОтгрузки
	|					И ТаблицаЗаказов.НомерСтроки > ГрафикОтгрузкиТекущийЗаказ.НомерСтроки)
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаЗаказов.Заказ,
	|	ТаблицаЗаказов.НомерСтроки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаЗаказов.Заказ КАК Заказ,
	|	МАКСИМУМ(ТаблицаЗаказов.Дата) КАК Дата,
	|	МАКСИМУМ(ТаблицаЗаказов.Статус) КАК Статус,
	|	МАКСИМУМ(ТаблицаЗаказов.Склад) КАК Склад,
	|	ТаблицаЗаказов.НомерСтроки КАК НомерСтроки,
	|	МАКСИМУМ(ТаблицаЗаказов.Номенклатура) КАК Номенклатура,
	|	МАКСИМУМ(ТаблицаЗаказов.Характеристика) КАК Характеристика,
	|	МАКСИМУМ(ТаблицаЗаказов.Упаковка) КАК Упаковка,
	|	МАКСИМУМ(ТаблицаЗаказов.УпаковкаКоэффициент) КАК УпаковкаКоэффициент,
	|	МАКСИМУМ(ТаблицаЗаказов.ЕдиницаИзмерения) КАК ЕдиницаИзмерения,
	|	МАКСИМУМ(ТаблицаЗаказов.ДатаОтгрузки) КАК ДатаОтгрузки,
	|	МАКСИМУМ(ТаблицаЗаказов.Количество) КАК Количество,
	|	СУММА(ЕСТЬNULL(ГрафикОтгрузкиПредыдущиеЗаказы.Количество, 0)) + МАКСИМУМ(ТаблицаЗаказов.КоличествоПредыдущиеЗаказы) КАК КоличествоПредыдущиеЗаказы,
	|	МАКСИМУМ(ТаблицаЗаказов.ПринятКОбеспечению) КАК ПринятКОбеспечению,
	|	МАКСИМУМ(ТаблицаЗаказов.СрокПоставки) КАК СрокПоставки,
	|	МАКСИМУМ(ТаблицаЗаказов.УказыватьСерии) КАК УказыватьСерии,
	|	МАКСИМУМ(ТаблицаЗаказов.СтатусУказанияСерий) КАК СтатусУказанияСерий,
	|	МАКСИМУМ(ТаблицаЗаказов.ГраницаГрафикаДоступностиСрокПоставки) КАК ГраницаГрафикаДоступностиСрокПоставки,
	|	МАКСИМУМ(ТаблицаЗаказов.ГраницаГрафикаДоступности) КАК ГраницаГрафикаДоступности,
	|	МАКСИМУМ(ТаблицаЗаказов.Календарь) КАК Календарь,
	|	МАКСИМУМ(ТаблицаЗаказов.СрокТранспортировки) КАК СрокТранспортировки
	|ПОМЕСТИТЬ ГрафикОтгрузкиПоЗаказам
	|ИЗ
	|	ГрафикОтгрузкиПоЗаказамБезПредыдущихЗаказов КАК ТаблицаЗаказов
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ГрафикДвиженияТоваров КАК ГрафикОтгрузкиПредыдущиеЗаказы
	|		ПО (ГрафикОтгрузкиПредыдущиеЗаказы.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход))
	|			И ТаблицаЗаказов.Склад = ГрафикОтгрузкиПредыдущиеЗаказы.Склад
	|			И ТаблицаЗаказов.Номенклатура = ГрафикОтгрузкиПредыдущиеЗаказы.Номенклатура
	|			И ТаблицаЗаказов.Характеристика = ГрафикОтгрузкиПредыдущиеЗаказы.Характеристика
	|			И (ТаблицаЗаказов.СтатусУказанияСерий <> 10)
	|			И (ГрафикОтгрузкиПредыдущиеЗаказы.Регистратор <> ТаблицаЗаказов.Заказ)
	|			И (ТаблицаЗаказов.ДатаОтгрузки > ГрафикОтгрузкиПредыдущиеЗаказы.ДатаСобытия
	|				ИЛИ ТаблицаЗаказов.ДатаОтгрузки = ГрафикОтгрузкиПредыдущиеЗаказы.ДатаСобытия
	|					И ТаблицаЗаказов.Дата > ГрафикОтгрузкиПредыдущиеЗаказы.Регистратор.Дата
	|				ИЛИ ТаблицаЗаказов.ДатаОтгрузки = ГрафикОтгрузкиПредыдущиеЗаказы.ДатаСобытия
	|					И ТаблицаЗаказов.Дата = ГрафикОтгрузкиПредыдущиеЗаказы.Регистратор.Дата
	|					И ТаблицаЗаказов.Заказ > ГрафикОтгрузкиПредыдущиеЗаказы.Регистратор
	|				ИЛИ НЕ ТаблицаЗаказов.ПринятКОбеспечению)
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаЗаказов.Заказ,
	|	ТаблицаЗаказов.НомерСтроки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ГрафикОтгрузкиПоЗаказам.Склад КАК Склад,
	|	ГрафикОтгрузкиПоЗаказам.Номенклатура КАК Номенклатура,
	|	ГрафикОтгрузкиПоЗаказам.Характеристика КАК Характеристика,
	|	ЕСТЬNULL(МИНИМУМ(КалендарныеГрафики.ДатаГрафика), ДОБАВИТЬКДАТЕ(&НачалоТекущегоДня, ДЕНЬ, 1)) КАК ДатаПоставки,
	|	МАКСИМУМ(ГрафикОтгрузкиПоЗаказам.ГраницаГрафикаДоступностиСрокПоставки) КАК ГраницаГрафикаДоступностиСрокПоставки,
	|	МАКСИМУМ(ГрафикОтгрузкиПоЗаказам.ГраницаГрафикаДоступности) КАК ГраницаГрафикаДоступности
	|ПОМЕСТИТЬ БлижайшиеДатыПоставки
	|ИЗ
	|	ГрафикОтгрузкиПоЗаказам КАК ГрафикОтгрузкиПоЗаказам
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КалендарныеГрафики КАК КалендарныеГрафики
	|		ПО (КалендарныеГрафики.ДеньВключенВГрафик)
	|			И ГрафикОтгрузкиПоЗаказам.Календарь = КалендарныеГрафики.Календарь
	|			И (КалендарныеГрафики.ДатаГрафика >= ДОБАВИТЬКДАТЕ(&НачалоТекущегоДня, ДЕНЬ, ГрафикОтгрузкиПоЗаказам.СрокТранспортировки))
	|
	|СГРУППИРОВАТЬ ПО
	|	ГрафикОтгрузкиПоЗаказам.Склад,
	|	ГрафикОтгрузкиПоЗаказам.Номенклатура,
	|	ГрафикОтгрузкиПоЗаказам.Характеристика
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СвободныеОстатки.Склад КАК Склад,
	|	СвободныеОстатки.Номенклатура КАК Номенклатура,
	|	СвободныеОстатки.Характеристика КАК Характеристика,
	|	СвободныеОстатки.ВНаличииОстаток КАК ВНаличии
	|ПОМЕСТИТЬ СвободныеОстатки
	|ИЗ
	|	РегистрНакопления.СвободныеОстатки.Остатки(
	|			,
	|			(Склад, Номенклатура, Характеристика) В
	|				(ВЫБРАТЬ
	|					ГрафикОтгрузкиПоЗаказам.Склад КАК Склад,
	|					ГрафикОтгрузкиПоЗаказам.Номенклатура КАК Номенклатура,
	|					ГрафикОтгрузкиПоЗаказам.Характеристика КАК Характеристика
	|				ИЗ
	|					ГрафикОтгрузкиПоЗаказам)) КАК СвободныеОстатки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ГрафикПоступления.Склад КАК Склад,
	|	ГрафикПоступления.Номенклатура КАК Номенклатура,
	|	ГрафикПоступления.Характеристика КАК Характеристика,
	|	ГрафикПоступления.ДатаСобытия КАК ДатаСобытия,
	|	ГрафикПоступления.Количество КАК Количество
	|ПОМЕСТИТЬ ВТГрафикПоступления
	|ИЗ
	|	РегистрНакопления.ГрафикДвиженияТоваров КАК ГрафикПоступления
	|ГДЕ
	|	(ГрафикПоступления.Склад, ГрафикПоступления.Номенклатура, ГрафикПоступления.Характеристика) В
	|			(ВЫБРАТЬ
	|				ГрафикОтгрузкиПоЗаказам.Склад КАК Склад,
	|				ГрафикОтгрузкиПоЗаказам.Номенклатура КАК Номенклатура,
	|				ГрафикОтгрузкиПоЗаказам.Характеристика КАК Характеристика
	|			ИЗ
	|				ГрафикОтгрузкиПоЗаказам)
	|	И ГрафикПоступления.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ГрафикПоступления.Склад КАК Склад,
	|	ГрафикПоступления.Номенклатура КАК Номенклатура,
	|	ГрафикПоступления.Характеристика КАК Характеристика,
	|	ГрафикПоступления.ДатаСобытия КАК ДатаСобытия,
	|	СУММА(ГрафикПоступленияПредыдущиеДни.Количество) КАК КоличествоВсего,
	|	СУММА(ВЫБОР
	|			КОГДА ГрафикПоступления.ДатаСобытия >= ГрафикПоступленияПредыдущиеДни.ДатаСобытия
	|				ТОГДА ГрафикПоступленияПредыдущиеДни.Количество
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК КоличествоДатаСобытия,
	|	СУММА(ВЫБОР
	|			КОГДА ГрафикПоступления.ДатаСобытия > ГрафикПоступленияПредыдущиеДни.ДатаСобытия
	|				ТОГДА ГрафикПоступленияПредыдущиеДни.Количество
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК КоличествоПредыдущиеДни
	|ПОМЕСТИТЬ ГрафикПоступления
	|ИЗ
	|	ВТГрафикПоступления КАК ГрафикПоступления
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТГрафикПоступления КАК ГрафикПоступленияПредыдущиеДни
	|		ПО ГрафикПоступления.Склад = ГрафикПоступленияПредыдущиеДни.Склад
	|			И ГрафикПоступления.Номенклатура = ГрафикПоступленияПредыдущиеДни.Номенклатура
	|			И ГрафикПоступления.Характеристика = ГрафикПоступленияПредыдущиеДни.Характеристика
	|
	|СГРУППИРОВАТЬ ПО
	|	ГрафикПоступления.Склад,
	|	ГрафикПоступления.Номенклатура,
	|	ГрафикПоступления.Характеристика,
	|	ГрафикПоступления.ДатаСобытия
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	МАКСИМУМ(ГрафикОтгрузкиПоЗаказам.Дата) КАК Дата,
	|	ГрафикОтгрузкиПоЗаказам.Заказ КАК Заказ,
	|	ГрафикОтгрузкиПоЗаказам.НомерСтроки КАК НомерСтроки,
	|	МАКСИМУМ(ВЫРАЗИТЬ(ГрафикОтгрузкиПоЗаказам.Номенклатура КАК Справочник.Номенклатура).Код) КАК Код,
	|	МАКСИМУМ(ВЫРАЗИТЬ(ГрафикОтгрузкиПоЗаказам.Номенклатура КАК Справочник.Номенклатура).Артикул) КАК Артикул,
	|	МАКСИМУМ(ГрафикОтгрузкиПоЗаказам.Номенклатура) КАК Номенклатура,
	|	МАКСИМУМ(ГрафикОтгрузкиПоЗаказам.Характеристика) КАК Характеристика,
	|	МАКСИМУМ(ГрафикОтгрузкиПоЗаказам.Статус) КАК Статус,
	|	МАКСИМУМ(ГрафикОтгрузкиПоЗаказам.Упаковка) КАК Упаковка,
	|	МАКСИМУМ(ГрафикОтгрузкиПоЗаказам.УпаковкаКоэффициент) КАК УпаковкаКоэффициент,
	|	МАКСИМУМ(ГрафикОтгрузкиПоЗаказам.ЕдиницаИзмерения) КАК ЕдиницаИзмерения,
	|	МАКСИМУМ(ГрафикОтгрузкиПоЗаказам.ДатаОтгрузки) КАК ДатаОтгрузки,
	|	МАКСИМУМ(ГрафикОтгрузкиПоЗаказам.Количество) КАК Количество,
	|	МАКСИМУМ(БлижайшиеДатыПоставки.ДатаПоставки) КАК БлижайшаяДатаПоставки,
	|	МАКСИМУМ(БлижайшиеДатыПоставки.ГраницаГрафикаДоступностиСрокПоставки) КАК ГраницаГрафикаДоступностиСрокПоставки,
	|	МАКСИМУМ(БлижайшиеДатыПоставки.ГраницаГрафикаДоступности) КАК ГраницаГрафикаДоступности,
	|	ВЫБОР
	|		КОГДА МАКСИМУМ(ГрафикОтгрузкиПоЗаказам.СтатусУказанияСерий) = 10
	|			ТОГДА МАКСИМУМ(ГрафикОтгрузкиПоЗаказам.Количество)
	|		ИНАЧЕ ВЫБОР
	|				КОГДА МАКСИМУМ(ЕСТЬNULL(СвободныеОстатки.ВНаличии, 0)) > МАКСИМУМ(ЕСТЬNULL(ГрафикОтгрузкиПоЗаказам.КоличествоПредыдущиеЗаказы, 0))
	|					ТОГДА МАКСИМУМ(ЕСТЬNULL(СвободныеОстатки.ВНаличии, 0)) - МАКСИМУМ(ЕСТЬNULL(ГрафикОтгрузкиПоЗаказам.КоличествоПредыдущиеЗаказы, 0))
	|				ИНАЧЕ 0
	|			КОНЕЦ
	|	КОНЕЦ КАК ОбеспеченоНаличием,
	|	ВЫБОР
	|		КОГДА МАКСИМУМ(ЕСТЬNULL(ГрафикПоступления.КоличествоДатаСобытия, 0)) > 0
	|			ТОГДА МАКСИМУМ(ЕСТЬNULL(ГрафикПоступления.КоличествоДатаСобытия, 0)) + МАКСИМУМ(ЕСТЬNULL(СвободныеОстатки.ВНаличии, 0)) - МАКСИМУМ(ЕСТЬNULL(ГрафикОтгрузкиПоЗаказам.КоличествоПредыдущиеЗаказы, 0))
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК ОбеспеченоПоступлением,
	|	МАКСИМУМ(ЕСТЬNULL(ГрафикПоступления.ДатаСобытия, ДАТАВРЕМЯ(1, 1, 1))) КАК ОжидаемаяДатаПоступления,
	|	МАКСИМУМ(ГрафикОтгрузкиПоЗаказам.ПринятКОбеспечению) КАК ПринятКОбеспечению,
	|	ВЫБОР
	|		КОГДА МАКСИМУМ(ВЫРАЗИТЬ(ГрафикОтгрузкиПоЗаказам.Номенклатура КАК Справочник.Номенклатура).ТипНоменклатуры) НЕ В
	|			(ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Товар),ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара))
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК ЭтоУслуга,
	|	МАКСИМУМ(ГрафикОтгрузкиПоЗаказам.УказыватьСерии) КАК УказыватьСерии,
	|	МАКСИМУМ(ГрафикОтгрузкиПоЗаказам.СтатусУказанияСерий) КАК СтатусУказанияСерий
	|ИЗ
	|	ГрафикОтгрузкиПоЗаказам КАК ГрафикОтгрузкиПоЗаказам
	|		ЛЕВОЕ СОЕДИНЕНИЕ СвободныеОстатки КАК СвободныеОстатки
	|		ПО ГрафикОтгрузкиПоЗаказам.Склад = СвободныеОстатки.Склад
	|			И ГрафикОтгрузкиПоЗаказам.Номенклатура = СвободныеОстатки.Номенклатура
	|			И ГрафикОтгрузкиПоЗаказам.Характеристика = СвободныеОстатки.Характеристика
	|			И (ГрафикОтгрузкиПоЗаказам.СтатусУказанияСерий <> 10)
	|		ЛЕВОЕ СОЕДИНЕНИЕ ГрафикПоступления КАК ГрафикПоступления
	|		ПО ГрафикОтгрузкиПоЗаказам.Склад = ГрафикПоступления.Склад
	|			И ГрафикОтгрузкиПоЗаказам.Номенклатура = ГрафикПоступления.Номенклатура
	|			И ГрафикОтгрузкиПоЗаказам.Характеристика = ГрафикПоступления.Характеристика
	|			И (ГрафикОтгрузкиПоЗаказам.СтатусУказанияСерий <> 10)
	|			И (ГрафикОтгрузкиПоЗаказам.ДатаОтгрузки >= ГрафикПоступления.ДатаСобытия
	|				ИЛИ НЕ ГрафикОтгрузкиПоЗаказам.ПринятКОбеспечению)
	|			И (ГрафикОтгрузкиПоЗаказам.Количество - ЕСТЬNULL(СвободныеОстатки.ВНаличии, 0) + ЕСТЬNULL(ГрафикОтгрузкиПоЗаказам.КоличествоПредыдущиеЗаказы, 0) <= ГрафикПоступления.КоличествоДатаСобытия
	|					И ГрафикОтгрузкиПоЗаказам.Количество - ЕСТЬNULL(СвободныеОстатки.ВНаличии, 0) + ЕСТЬNULL(ГрафикОтгрузкиПоЗаказам.КоличествоПредыдущиеЗаказы, 0) > ГрафикПоступления.КоличествоПредыдущиеДни
	|				ИЛИ ГрафикОтгрузкиПоЗаказам.Количество - ЕСТЬNULL(СвободныеОстатки.ВНаличии, 0) + ЕСТЬNULL(ГрафикОтгрузкиПоЗаказам.КоличествоПредыдущиеЗаказы, 0) > ГрафикПоступления.КоличествоДатаСобытия
	|					И ГрафикПоступления.КоличествоДатаСобытия = ГрафикПоступления.КоличествоВсего)
	|		ЛЕВОЕ СОЕДИНЕНИЕ БлижайшиеДатыПоставки КАК БлижайшиеДатыПоставки
	|		ПО ГрафикОтгрузкиПоЗаказам.Склад = БлижайшиеДатыПоставки.Склад
	|			И ГрафикОтгрузкиПоЗаказам.Номенклатура = БлижайшиеДатыПоставки.Номенклатура
	|			И ГрафикОтгрузкиПоЗаказам.Характеристика = БлижайшиеДатыПоставки.Характеристика
	|
	|СГРУППИРОВАТЬ ПО
	|	ГрафикОтгрузкиПоЗаказам.Заказ,
	|	ГрафикОтгрузкиПоЗаказам.НомерСтроки
	|
	|УПОРЯДОЧИТЬ ПО
	|	Дата,
	|	Заказ,
	|	НомерСтроки";
	
	УстановитьПривилегированныйРежим(Истина);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	УстановитьПривилегированныйРежим(Ложь);
	
	Если РезультатЗапроса.Пустой() Тогда
		
		Возврат;
		
	КонецЕсли;
	
	ТекущийЗаказ = Неопределено;
	
	Выборка = РезультатЗапроса.Выбрать();
	
	Пока Выборка.Следующий() Цикл
		
		Если ТекущийЗаказ <> Выборка.Заказ Тогда
			
			НовыйЗаказ = СтрокиЗаказы.Добавить();
			НовыйЗаказ.Заказ = Выборка.Заказ;
			НовыйЗаказ.ТипСтроки = 1;
			НовыйЗаказ.СостояниеНаличия = Перечисления.СостоянияНаличия.ПустаяСсылка();
			НовыйЗаказ.ПолностьюИЧастичноВНаличии = Ложь;
			НовыйЗаказ.ЧастичноИНетВНаличии = Ложь;
			
			СтрокиТовары = НовыйЗаказ.ПолучитьЭлементы();
			ТекущийЗаказ = Выборка.Заказ;
			
		КонецЕсли;		
		
		НоваяСтрокаТовары = СтрокиТовары.Добавить();
		НоваяСтрокаТовары.Заказ = Выборка.Заказ;
		НоваяСтрокаТовары.НомерСтроки = Выборка.НомерСтроки;
		НоваяСтрокаТовары.Код = Выборка.Код;
		НоваяСтрокаТовары.Артикул = Выборка.Артикул;
		НоваяСтрокаТовары.Номенклатура = Выборка.Номенклатура;
		НоваяСтрокаТовары.Характеристика = Выборка.Характеристика;
		НоваяСтрокаТовары.КоличествоУпаковок = Выборка.Количество / Выборка.УпаковкаКоэффициент;
		НоваяСтрокаТовары.Статус = Выборка.Статус;
		НоваяСтрокаТовары.Упаковка = Выборка.Упаковка;
		НоваяСтрокаТовары.ЕдиницаИзмерения = Выборка.ЕдиницаИзмерения;
		НоваяСтрокаТовары.ДатаОтгрузки = Выборка.ДатаОтгрузки;
		НоваяСтрокаТовары.УказыватьСерии = Выборка.УказыватьСерии;
		НоваяСтрокаТовары.СтатусУказанияСерий = Выборка.СтатусУказанияСерий;
		
		Если Выборка.ЭтоУслуга Тогда
			
			НоваяСтрокаТовары.ВНаличии = НоваяСтрокаТовары.КоличествоУпаковок;
			
		Иначе
			
			НоваяСтрокаТовары.ВНаличии = Мин(Выборка.Количество, Выборка.ОбеспеченоНаличием) / Выборка.УпаковкаКоэффициент;
			
		КонецЕсли;
		
		НоваяСтрокаТовары.ОбеспеченоПоступлением = Мин(НоваяСтрокаТовары.КоличествоУпаковок - НоваяСтрокаТовары.ВНаличии, Макс(Выборка.ОбеспеченоПоступлением / Выборка.УпаковкаКоэффициент, 0));
		НоваяСтрокаТовары.НеОбеспечено = НоваяСтрокаТовары.КоличествоУпаковок - НоваяСтрокаТовары.ВНаличии - НоваяСтрокаТовары.ОбеспеченоПоступлением;
		
		Если НоваяСтрокаТовары.ОбеспеченоПоступлением <> 0 Тогда
			
			НоваяСтрокаТовары.ОжидаемаяДатаПоступления = Выборка.ОжидаемаяДатаПоступления;
			
		КонецЕсли;
		
		Если НоваяСтрокаТовары.НеОбеспечено <> 0 И НоваяСтрокаТовары.СтатусУказанияСерий <> 10 Тогда
			
			НоваяСтрокаТовары.БлижайшаяДатаПоставки = Выборка.БлижайшаяДатаПоставки;
			
		КонецЕсли;
		
		// Состояние наличия по позиции заказа
		Если НоваяСтрокаТовары.КоличествоУпаковок = НоваяСтрокаТовары.ВНаличии Тогда
			
			НоваяСтрокаТовары.СостояниеНаличия = Перечисления.СостоянияНаличия.ПолностьюВНаличии;
			НоваяСтрокаТовары.ПолностьюИЧастичноВНаличии = Истина;
			НоваяСтрокаТовары.ЧастичноИНетВНаличии = Ложь;
			
		ИначеЕсли НоваяСтрокаТовары.ВНаличии > 0 Тогда
			
			НоваяСтрокаТовары.СостояниеНаличия = Перечисления.СостоянияНаличия.ЧастичноВНаличии;
			НоваяСтрокаТовары.ПолностьюИЧастичноВНаличии = Истина;
			НоваяСтрокаТовары.ЧастичноИНетВНаличии = Истина;
			
		Иначе
			
			НоваяСтрокаТовары.СостояниеНаличия = Перечисления.СостоянияНаличия.НетВНаличии;
			НоваяСтрокаТовары.ПолностьюИЧастичноВНаличии = Ложь;
			НоваяСтрокаТовары.ЧастичноИНетВНаличии = Истина;
			
		КонецЕсли;
		
		// Дата отгрузки по заказу просрочена
		Если НоваяСтрокаТовары.ДатаОтгрузки < НачалоТекущегоДня Тогда
			
			НоваяСтрокаТовары.ЗаказПросрочен = Истина;
			
		КонецЕсли;
		
		// Состояние наличия по заказу
		Если НовыйЗаказ.СостояниеНаличия = Перечисления.СостоянияНаличия.ПустаяСсылка() Тогда
			
			НовыйЗаказ.СостояниеНаличия = НоваяСтрокаТовары.СостояниеНаличия;
			
		ИначеЕсли НовыйЗаказ.СостояниеНаличия <> НоваяСтрокаТовары.СостояниеНаличия Тогда
			
			НовыйЗаказ.СостояниеНаличия = Перечисления.СостоянияНаличия.ЧастичноВНаличии;
			
		КонецЕсли;
		
		Если НовыйЗаказ.СостояниеНаличия = Перечисления.СостоянияНаличия.ПолностьюВНаличии Тогда
			
			НовыйЗаказ.ПолностьюИЧастичноВНаличии = Истина;
			НовыйЗаказ.ЧастичноИНетВНаличии = Ложь;
			
		ИначеЕсли НовыйЗаказ.СостояниеНаличия = Перечисления.СостоянияНаличия.ЧастичноВНаличии Тогда
			
			НовыйЗаказ.ПолностьюИЧастичноВНаличии = Истина;
			НовыйЗаказ.ЧастичноИНетВНаличии = Истина;
			
		Иначе
			
			НовыйЗаказ.ПолностьюИЧастичноВНаличии = Ложь;
			НовыйЗаказ.ЧастичноИНетВНаличии = Истина;
			
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция СписокВыбораОтбораПоМенеджеруСервер(РежимПроизводства)
	
	Роли = Новый Структура;
	
	Если НЕ РежимПроизводства И ПравоДоступа("Чтение", Метаданные.Документы.ЗаказКлиента) Тогда
		Для каждого Элемент из Документы.ЗаказКлиента.ИменаРолейСПравомДобавления() Цикл
			
			Роли.Вставить(Элемент);
			
		КонецЦикла;
	КонецЕсли; 
	
	Если НЕ РежимПроизводства И ПравоДоступа("Чтение", Метаданные.Документы.ЗаявкаНаВозвратТоваровОтКлиента) Тогда
		Для каждого Элемент из Документы.ЗаявкаНаВозвратТоваровОтКлиента.ИменаРолейСПравомДобавления() Цикл
			
			Роли.Вставить(Элемент);
			
		КонецЦикла;
	КонецЕсли; 
	
	Если НЕ РежимПроизводства И ПравоДоступа("Чтение", Метаданные.Документы.ЗаказНаВнутреннееПотребление) Тогда
		Для каждого Элемент из Документы.ЗаказНаВнутреннееПотребление.ИменаРолейСПравомДобавления() Цикл
			
			Роли.Вставить(Элемент);
			
		КонецЦикла;
	КонецЕсли; 
	
	Если НЕ РежимПроизводства И ПравоДоступа("Чтение", Метаданные.Документы.ЗаказНаСборку) Тогда
		Для каждого Элемент из Документы.ЗаказНаСборку.ИменаРолейСПравомДобавления() Цикл
			
			Роли.Вставить(Элемент);
			
		КонецЦикла;
	КонецЕсли; 
	
	Если НЕ РежимПроизводства И ПравоДоступа("Чтение", Метаданные.Документы.ЗаказНаПеремещение) Тогда
		Для каждого Элемент из Документы.ЗаказНаПеремещение.ИменаРолейСПравомДобавления() Цикл
			
			Роли.Вставить(Элемент);
			
		КонецЦикла;
	КонецЕсли; 
	
	Массив = Новый Массив;
	
	Для каждого Роль из Роли Цикл
		
		Массив.Добавить(Роль.Ключ);
		
	КонецЦикла;
	
	Возврат ОбщегоНазначенияУТ.ПолучитьСписокПользователейПоМассивуРолей(Массив);
	
КонецФункции
