
////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ИнициализироватьНачальныеЗначенияРеквизитов();
	
	УстановитьВидимостьДоступностьЗависимыхЭлементовФормы();
	
КонецПроцедуры

&НаКлиенте
Процедура ПриЗакрытии()
	
	Если ТребуетсяОбновлениеИнтерфейса Тогда
		ОбновитьИнтерфейс();
	КонецЕсли;
	
КонецПроцедуры


////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ ШАПКИ ФОРМЫ

&НаКлиенте
Процедура ИспользованиеСоглашенийСКлиентамиПриИзменении(Элемент)
	
	Если НаборКонстант.ИспользованиеСоглашенийСКлиентами = ПредопределенноеЗначение("Перечисление.ИспользованиеСоглашенийСКлиентами.НеИспользовать") Тогда
		Элементы.ИспользованиеСоглашенийСКлиентами.ОтображениеПредупрежденияПриРедактировании = ОтображениеПредупрежденияПриРедактировании.НеОтображать;
	Иначе
		Элементы.ИспользованиеСоглашенийСКлиентами.ОтображениеПредупрежденияПриРедактировании = ОтображениеПредупрежденияПриРедактировании.Отображать;
	КонецЕсли;
	
	СохранитьЗначениеКонстанты(Элемент.Имя);
	
	ПодключитьОбработчикОжиданияОбновленияИнтерфейса();
	
КонецПроцедуры

&НаКлиенте
Процедура ИспользованиеСоглашенийСКлиентамиОчистка(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
КонецПроцедуры

&НаКлиенте
Процедура ИспользоватьЗаказыКлиентовПриИзменении(Элемент)
	
	СохранитьЗначениеКонстанты(Элемент.Имя);
	
	ПодключитьОбработчикОжиданияОбновленияИнтерфейса();
	
КонецПроцедуры

&НаКлиенте
Процедура ИспользоватьСчетаНаОплатуКлиентамПриИзменении(Элемент)
	
	СохранитьЗначениеКонстанты(Элемент.Имя);
	
	ПодключитьОбработчикОжиданияОбновленияИнтерфейса();
	
КонецПроцедуры

&НаКлиенте
Процедура ИспользоватьРеализациюПоНесколькимЗаказамПриИзменении(Элемент)
	
	СохранитьЗначениеКонстанты(Элемент.Имя);
	
	ПодключитьОбработчикОжиданияОбновленияИнтерфейса();
	
КонецПроцедуры

&НаКлиенте
Процедура ИспользоватьАктыВыполненныхРаботПоНесколькимЗаказамПриИзменении(Элемент)
	
	СохранитьЗначениеКонстанты(Элемент.Имя);
	
	ПодключитьОбработчикОжиданияОбновленияИнтерфейса();
	
КонецПроцедуры

&НаКлиенте
Процедура ИспользоватьСделкиСКлиентамиПриИзменении(Элемент)
	
	СохранитьЗначениеКонстанты(Элемент.Имя);
	
	ПодключитьОбработчикОжиданияОбновленияИнтерфейса();
	
КонецПроцедуры

&НаКлиенте
Процедура ИспользоватьУправлениеСделкамиПриИзменении(Элемент)
	
	СохранитьЗначениеКонстанты(Элемент.Имя);
	
	ПодключитьОбработчикОжиданияОбновленияИнтерфейса();
	
КонецПроцедуры

&НаКлиенте
Процедура ИспользоватьПервичныйСпросПриИзменении(Элемент)
	
	СохранитьЗначениеКонстанты(Элемент.Имя);
	
	ПодключитьОбработчикОжиданияОбновленияИнтерфейса();
	
КонецПроцедуры

&НаКлиенте
Процедура ИспользоватьКоммерческиеПредложенияКлиентамПриИзменении(Элемент)
	
	СохранитьЗначениеКонстанты(Элемент.Имя);
	
	ПодключитьОбработчикОжиданияОбновленияИнтерфейса();
	
КонецПроцедуры

&НаКлиенте
Процедура ИспользоватьКомиссиюПриПродажахПриИзменении(Элемент)
	
	СохранитьЗначениеКонстанты(Элемент.Имя);
	
	ПодключитьОбработчикОжиданияОбновленияИнтерфейса();
	
КонецПроцедуры

&НаКлиенте
Процедура ИспользоватьЗаявкиНаВозвратТоваровОтКлиентовПриИзменении(Элемент)
	
	СохранитьЗначениеКонстанты(Элемент.Имя);
	
	ПодключитьОбработчикОжиданияОбновленияИнтерфейса();
	
КонецПроцедуры

&НаКлиенте
Процедура ИспользоватьСогласованиеЗаказовКлиентовПриИзменении(Элемент)
	СохранитьЗначениеКонстанты(Элемент.Имя);
	
	ПодключитьОбработчикОжиданияОбновленияИнтерфейса();
КонецПроцедуры

&НаКлиенте
Процедура ИспользоватьСогласованиеКоммерческихПредложенийПриИзменении(Элемент)
	СохранитьЗначениеКонстанты(Элемент.Имя);
	
	ПодключитьОбработчикОжиданияОбновленияИнтерфейса();
КонецПроцедуры

&НаКлиенте
Процедура ИспользоватьСогласованиеСоглашенийСКлиентамиПриИзменении(Элемент)
	СохранитьЗначениеКонстанты(Элемент.Имя);
	
	ПодключитьОбработчикОжиданияОбновленияИнтерфейса();
КонецПроцедуры

&НаКлиенте
Процедура ИспользоватьСогласованиеЗаявокНаВозвратТоваровОтКлиентовПриИзменении(Элемент)
	
	СохранитьЗначениеКонстанты(Элемент.Имя);
	
	ПодключитьОбработчикОжиданияОбновленияИнтерфейса();
	
КонецПроцедуры

&НаКлиенте
Процедура ИспользоватьРозничныеПродажиПриИзменении(Элемент)
	
	СохранитьЗначениеКонстанты(Элемент.Имя);
	
	ПодключитьОбработчикОжиданияОбновленияИнтерфейса();
	
КонецПроцедуры

&НаКлиенте
Процедура НазначатьСкидкиПоКнопкеРасчетВЧекеККМПриИзменении(Элемент)
	
	СохранитьЗначениеКонстанты(Элемент.Имя);
	
КонецПроцедуры

&НаКлиенте
Процедура АрхивироватьЧекиККМПриЗакрытииКассовойСменыПриИзменении(Элемент)
	
	СохранитьЗначениеКонстанты(Элемент.Имя);
	
	ПодключитьОбработчикОжиданияОбновленияИнтерфейса();
	
КонецПроцедуры

&НаКлиенте
Процедура КоличествоДнейХраненияОтложенныхЧековПриИзменении(Элемент)
	
	СохранитьЗначениеКонстанты(Элемент.Имя);
	
КонецПроцедуры

&НаКлиенте
Процедура НеЗакрыватьЗаказыКлиентовБезПолнойОтгрузкиПриИзменении(Элемент)
	
	СохранитьЗначениеКонстанты(Элемент.Имя);
	
КонецПроцедуры

&НаКлиенте
Процедура НеЗакрыватьЗаказыКлиентовБезПолнойОплатыПриИзменении(Элемент)
	
	СохранитьЗначениеКонстанты(Элемент.Имя);
	
КонецПроцедуры

&НаКлиенте
Процедура ИспользоватьСтатусыРеализацийТоваровУслугПриИзменении(Элемент)
	
	СохранитьЗначениеКонстанты(Элемент.Имя);
	
	ПодключитьОбработчикОжиданияОбновленияИнтерфейса();
	
КонецПроцедуры

&НаКлиенте
Процедура ИспользоватьСтатусыЗаказовКлиентовПриИзменении(Элемент)
	
	СохранитьЗначениеКонстанты(Элемент.Имя);
	
	ПодключитьОбработчикОжиданияОбновленияИнтерфейса();
	
КонецПроцедуры

&НаКлиенте
Процедура ИспользоватьСтатусыЗаявокНаВозвратПриИзменении(Элемент)
	
	СохранитьЗначениеКонстанты(Элемент.Имя);
	
	ПодключитьОбработчикОжиданияОбновленияИнтерфейса();
	
КонецПроцедуры

&НаКлиенте
Процедура ИспользоватьПричиныОтменыЗаказовКлиентовПриИзменении(Элемент)
	
	СохранитьЗначениеКонстанты(Элемент.Имя);
	
	ПодключитьОбработчикОжиданияОбновленияИнтерфейса();
	
КонецПроцедуры

&НаКлиенте
Процедура ИспользоватьСкладыВТабличнойЧастиДокументовПродажиПриИзменении(Элемент)
	
	СохранитьЗначениеКонстанты(Элемент.Имя);
	
	ПодключитьОбработчикОжиданияОбновленияИнтерфейса();
	
КонецПроцедуры

//1с-ит. Чечин Петр. 2014-05-23
&НаКлиенте
Процедура НаборКонстантитСтоимостьНЕПриИзменении(Элемент)
	СохранитьЗначениеКонстанты(Элемент.Имя);
	
	ПодключитьОбработчикОжиданияОбновленияИнтерфейса();
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ КОМАНД ФОРМЫ

&НаКлиенте
Процедура ВключитьВерсионированиеДокументовПродажи(Команда)
	Если Не НаборКонстант.ИспользоватьВерсионированиеОбъектов Тогда
		НаборКонстант.ИспользоватьВерсионированиеОбъектов = Истина;
		
		СохранитьЗначениеКонстанты("ИспользоватьВерсионированиеОбъектов");
		
		ПодключитьОбработчикОжиданияОбновленияИнтерфейса();
	КонецЕсли;
	
	МассивТиповДокументовОбъектов = Новый Массив();
	
	Если НаборКонстант.ИспользоватьСогласованиеКоммерческихПредложений Тогда
		МассивТиповДокументовОбъектов.Добавить("Документ.КоммерческоеПредложениеКлиенту");
	КонецЕсли;
	
	Если НаборКонстант.ИспользоватьСогласованиеЗаказовКлиентов Тогда
		МассивТиповДокументовОбъектов.Добавить("Документ.ЗаказКлиента");
	КонецЕсли;
	
	Если НаборКонстант.ИспользоватьСогласованиеЗаявокНаВозвратТоваровОтКлиентов Тогда
		МассивТиповДокументовОбъектов.Добавить("Документ.ЗаявкаНаВозвратТоваровОтКлиента");
	КонецЕсли;
		
	
	Если НаборКонстант.ИспользоватьВерсионированиеОбъектов Тогда
		МассивТиповСправочников = Новый Массив;
		МассивТиповСправочников.Добавить("Справочник.СоглашенияСКлиентами");
		ВерсионированиеСправочниковВключено = ВключитьВерсионированиеОбъектовСервер(МассивТиповСправочников, "Всегда");
	Иначе
		ВерсионированиеСправочниковВключено = Ложь;
	КонецЕсли;
	
	ВерсионированиеДокументовВключено = ВключитьВерсионированиеОбъектовСервер(МассивТиповДокументовОбъектов, "ПриПроведении");
	
	ПоказатьОповещениеПользователя(НСтр("ru = 'Версионирование включено'"),
		,
		НСтр("ru='Для документов продажи установлен вариант версионирования ""Версионировать при проведении""'"),
		БиблиотекаКартинок.Информация32);
	
КонецПроцедуры

&НаКлиенте
Процедура НазначитьОтветственныхЗаСогласованиеЛогистическихУсловийДокументовПродажи(Команда)
	ОткрытьФорму("РегистрСведений.ИсполнителиЗадач.Форма.АдресацияПоОбъектуИРоли", 
	Новый Структура("ОсновнойОбъектАдресации,Роль", 
	Неопределено, 
	ПредопределенноеЗначение("Справочник.РолиИсполнителей.СогласующийЛогистическиеУсловияПродаж")));
КонецПроцедуры

&НаКлиенте
Процедура НазначитьОтветственныхЗаСогласованиеФинансовыхУсловийДокументовПродажи(Команда)
	ОткрытьФорму("РегистрСведений.ИсполнителиЗадач.Форма.АдресацияПоОбъектуИРоли", 
	Новый Структура("ОсновнойОбъектАдресации,Роль", 
	Неопределено, 
	ПредопределенноеЗначение("Справочник.РолиИсполнителей.СогласующийФинансовыеУсловияПродаж")));
КонецПроцедуры

&НаКлиенте
Процедура НазначитьОтветственныхЗаСогласованиеЦеновыхУсловийДокументовПродажи(Команда)
	ОткрытьФорму("РегистрСведений.ИсполнителиЗадач.Форма.АдресацияПоОбъектуИРоли", 
	Новый Структура("ОсновнойОбъектАдресации,Роль", 
	Неопределено, 
	ПредопределенноеЗначение("Справочник.РолиИсполнителей.СогласующийЦеновыеУсловияПродаж")));
КонецПроцедуры

&НаКлиенте
Процедура НазначитьОтветственныхЗаСогласованиеЗаявокНаВозврат(Команда)
	
	ОткрытьФорму("РегистрСведений.ИсполнителиЗадач.Форма.АдресацияПоОбъектуИРоли", 
	Новый Структура("ОсновнойОбъектАдресации,Роль", 
	Неопределено, 
	ПредопределенноеЗначение("Справочник.РолиИсполнителей.СогласующийЗаявкиНаВозвратТоваровОтКлиентов")));
	
КонецПроцедуры

&НаКлиенте
Процедура НазначитьОтветственныхЗаСогласованиеКоммерческихУсловийДокументовПродажи(Команда)
	ОткрытьФорму("РегистрСведений.ИсполнителиЗадач.Форма.АдресацияПоОбъектуИРоли", 
	Новый Структура("ОсновнойОбъектАдресации,Роль", 
	Неопределено, 
	ПредопределенноеЗначение("Справочник.РолиИсполнителей.СогласующийКоммерческиеУсловияПродаж")));
КонецПроцедуры


////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

////////////////////////////////////////////////////////////////////////////////
// Прочее

&НаСервереБезКонтекста
Функция ВключитьВерсионированиеОбъектовСервер(МассивТиповОбъектов, ВариантВерсионирования = "Всегда")
	
	ПараметрыОпции = Новый Структура;
	
	ВерсионированиеВключено = Ложь;
	
	Если ВариантВерсионирования = "ПриПроведении" Тогда
		ПеречислениеВариантВерсионирования = Перечисления.ВариантыВерсионированияОбъектов.ВерсионироватьПриПроведении;
	ИначеЕсли ВариантВерсионирования = "Всегда" Тогда
		ПеречислениеВариантВерсионирования = Перечисления.ВариантыВерсионированияОбъектов.ВерсионироватьПриЗаписи;
	КонецЕсли;
	
	Для Каждого ТекЭлемент Из МассивТиповОбъектов Цикл
		
		ПараметрыОпции.Вставить("ТипОбъектаКонфигурации", ТекЭлемент);
		ИспользоватьВерсионированиеОбъекта = ПолучитьФункциональнуюОпцию("ИспользоватьВерсионированиеОбъекта", ПараметрыОпции);
		
		Если Не ИспользоватьВерсионированиеОбъекта Тогда
			
			ВерсионированиеОбъектов.ЗаписатьНастройкуВерсионированияПоОбъекту(ТекЭлемент, ПеречислениеВариантВерсионирования);
			ВерсионированиеВключено = Истина;
			
		КонецЕсли;
		
	КонецЦикла;
	
	Возврат ВерсионированиеВключено;
	
КонецФункции

////////////////////////////////////////////////////////////////////////////////
// Обновление интерфейса

&НаКлиенте 
Процедура ПодключитьОбработчикОжиданияОбновленияИнтерфейса()
	
	ТребуетсяОбновлениеИнтерфейса = Истина;
	
	#Если НЕ ВебКлиент Тогда
	ПодключитьОбработчикОжидания("ОбработчикОжиданияОбновленияИнтерфейса", 1, Истина);
	#КонецЕсли 
	
КонецПроцедуры

&НаКлиенте 
Процедура ОбработчикОжиданияОбновленияИнтерфейса()
	
	ОбновитьИнтерфейс();
	
	ТребуетсяОбновлениеИнтерфейса = Ложь;
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// Изменение реквизитов

&НаСервере
Процедура ИнициализироватьНачальныеЗначенияРеквизитов()
	
	// Инициализация набора констант
	НаборКонстантОбъект = ДанныеФормыВЗначение(НаборКонстант, Тип("КонстантыНабор"));
	НаборКонстантОбъект.Прочитать();
	ЗначениеВДанныеФормы(НаборКонстантОбъект, НаборКонстант);
	
	ЕстьОбменыСФормированиемДоговоровПоЗаказам = ОбменДаннымиПереопределяемыйУТУП.ЕстьОбменыСФормированиемДоговоровПоЗаказам();
	
КонецПроцедуры

&НаСервере 
Процедура СохранитьЗначениеКонстанты(ИмяКонстанты)
	
	УстановитьЗначениеКонстантыПоИмени(ИмяКонстанты);
	
	ОбновитьПовторноИспользуемыеЗначения();
	
	ВыполнитьМетодыПослеУстановкиЗначенияКонстанты(ИмяКонстанты);
	
КонецПроцедуры

&НаСервере 
Процедура ВыполнитьМетодыПослеУстановкиЗначенияКонстанты(ИмяКонстанты)
	
	Если ИмяКонстанты = "ИспользоватьКомиссиюПриПродажах" Тогда
		
		Справочники.СоглашенияСКлиентами.СоздатьСоглашениеПоУмолчанию(Истина);
		
	КонецЕсли;
	
	ВариантыОтчетовУТПереопределяемый.НастроитьВариантыОтчетовПоФункциональнойОпции(ИмяКонстанты, НаборКонстант[ИмяКонстанты]);
	
КонецПроцедуры

&НаСервере 
Процедура УстановитьЗначениеКонстантыПоИмени(ИмяКонстанты)
	
	Если Константы[ИмяКонстанты].Получить() <> НаборКонстант[ИмяКонстанты] Тогда
		Константы[ИмяКонстанты].Установить(НаборКонстант[ИмяКонстанты]);
	КонецЕсли;
	
	УстановитьВидимостьДоступностьЗависимыхЭлементовФормы(ИмяКонстанты);
	
	УстановитьЗначенияЗависимыхКонстант(ИмяКонстанты);
	
КонецПроцедуры

&НаСервере 
Процедура УстановитьЗначенияЗависимыхКонстант(ИмяРодительскойКонстанты)
	
	Если ИмяРодительскойКонстанты = "ИспользованиеСоглашенийСКлиентами" Тогда
		
		Если НаборКонстант.ИспользованиеСоглашенийСКлиентами = Перечисления.ИспользованиеСоглашенийСКлиентами.ТиповыеИИндивидуальныеСоглашения Тогда
			НаборКонстант.ИспользоватьТиповыеИИндивидуальныеСоглашенияСКлиентами	= Истина;
			НаборКонстант.ИспользоватьТиповыеСоглашенияСКлиентами					= Истина;
			НаборКонстант.ИспользоватьИндивидуальныеСоглашенияСКлиентами			= Истина;
			НаборКонстант.ИспользоватьСоглашенияСКлиентами                          = Истина;
		ИначеЕсли НаборКонстант.ИспользованиеСоглашенийСКлиентами = Перечисления.ИспользованиеСоглашенийСКлиентами.ТолькоТиповыеСоглашения Тогда
			НаборКонстант.ИспользоватьТиповыеИИндивидуальныеСоглашенияСКлиентами	= Ложь;
			НаборКонстант.ИспользоватьТиповыеСоглашенияСКлиентами					= Истина;
			НаборКонстант.ИспользоватьИндивидуальныеСоглашенияСКлиентами			= Ложь;
			НаборКонстант.ИспользоватьСоглашенияСКлиентами                          = Истина;
		ИначеЕсли НаборКонстант.ИспользованиеСоглашенийСКлиентами = Перечисления.ИспользованиеСоглашенийСКлиентами.ТолькоИндивидуальныеСоглашения Тогда
			НаборКонстант.ИспользоватьТиповыеИИндивидуальныеСоглашенияСКлиентами	= Ложь;
			НаборКонстант.ИспользоватьТиповыеСоглашенияСКлиентами					= Ложь;
			НаборКонстант.ИспользоватьИндивидуальныеСоглашенияСКлиентами			= Истина;
			НаборКонстант.ИспользоватьСоглашенияСКлиентами                          = Истина;
		ИначеЕсли НаборКонстант.ИспользованиеСоглашенийСКлиентами = Перечисления.ИспользованиеСоглашенийСКлиентами.НеИспользовать Тогда
			НаборКонстант.ИспользоватьТиповыеИИндивидуальныеСоглашенияСКлиентами	= Ложь;
			НаборКонстант.ИспользоватьТиповыеСоглашенияСКлиентами					= Ложь;
			НаборКонстант.ИспользоватьИндивидуальныеСоглашенияСКлиентами			= Ложь;
			НаборКонстант.ИспользоватьСоглашенияСКлиентами                          = Ложь;
			НаборКонстант.ИспользоватьСогласованиеСоглашенийСКлиентами              = Ложь;
			
			УстановитьЗначениеКонстантыПоИмени("ИспользоватьСогласованиеСоглашенийСКлиентами");
		КонецЕсли;
		
		УстановитьЗначениеКонстантыПоИмени("ИспользоватьТиповыеИИндивидуальныеСоглашенияСКлиентами");
		УстановитьЗначениеКонстантыПоИмени("ИспользоватьТиповыеСоглашенияСКлиентами");
		УстановитьЗначениеКонстантыПоИмени("ИспользоватьИндивидуальныеСоглашенияСКлиентами");
		
		УстановитьЗначениеКонстантыПоИмени("ИспользоватьСоглашенияСКлиентами");
		ВыполнитьМетодыПослеУстановкиЗначенияКонстанты("ИспользоватьСоглашенияСКлиентами");
	ИначеЕсли ИмяРодительскойКонстанты = "ИспользоватьЗаказыКлиентов" Тогда
		
		Если Не НаборКонстант.ИспользоватьЗаказыКлиентов Тогда
			НаборКонстант.ИспользоватьАктыВыполненныхРаботПоНесколькимЗаказам	= Ложь;
			НаборКонстант.ИспользоватьРеализациюПоНесколькимЗаказам				= Ложь;
			НаборКонстант.ВедетсяРаботаЧерезТорговыхПредставителей				= Ложь;
			НаборКонстант.ИспользоватьСогласованиеЗаказовКлиентов               = Ложь;
			НаборКонстант.ИспользоватьСтатусыЗаказовКлиентов                    = Ложь;
			НаборКонстант.НеЗакрыватьЗаказыКлиентовБезПолнойОплаты              = НаборКонстант.ИспользоватьСтатусыЗаявокНаВозврат;
			НаборКонстант.НеЗакрыватьЗаказыКлиентовБезПолнойОтгрузки            = НаборКонстант.ИспользоватьСтатусыЗаявокНаВозврат;
			НаборКонстант.ИспользоватьПричиныОтменыЗаказовКлиентов              = Ложь;
			
			УстановитьЗначениеКонстантыПоИмени("ИспользоватьАктыВыполненныхРаботПоНесколькимЗаказам");
			УстановитьЗначениеКонстантыПоИмени("ИспользоватьРеализациюПоНесколькимЗаказам");
			УстановитьЗначениеКонстантыПоИмени("ВедетсяРаботаЧерезТорговыхПредставителей");
			УстановитьЗначениеКонстантыПоИмени("ИспользоватьСогласованиеЗаказовКлиентов");
			УстановитьЗначениеКонстантыПоИмени("ИспользоватьСтатусыЗаказовКлиентов");
			УстановитьЗначениеКонстантыПоИмени("НеЗакрыватьЗаказыКлиентовБезПолнойОплаты");
			УстановитьЗначениеКонстантыПоИмени("НеЗакрыватьЗаказыКлиентовБезПолнойОтгрузки");
			УстановитьЗначениеКонстантыПоИмени("ИспользоватьПричиныОтменыЗаказовКлиентов");
			
		КонецЕсли;
	
	ИначеЕсли ИмяРодительскойКонстанты = "ИспользоватьКоммерческиеПредложенияКлиентам" Тогда
		
		Если Не НаборКонстант.ИспользоватьКоммерческиеПредложенияКлиентам Тогда
			НаборКонстант.ИспользоватьСогласованиеКоммерческихПредложений = Ложь;
			УстановитьЗначениеКонстантыПоИмени("ИспользоватьСогласованиеКоммерческихПредложений");
		КонецЕсли;
		
	ИначеЕсли ИмяРодительскойКонстанты = "ИспользоватьУправлениеСделками" Тогда
		
		НаборКонстант.ИспользоватьКоммерческиеПредложенияКлиентам	= НаборКонстант.ИспользоватьУправлениеСделками Или НаборКонстант.ИспользоватьКоммерческиеПредложенияКлиентам;
		НаборКонстант.ИспользоватьЗаказыКлиентов					= НаборКонстант.ИспользоватьУправлениеСделками Или НаборКонстант.ИспользоватьЗаказыКлиентов;
		
		УстановитьЗначениеКонстантыПоИмени("ИспользоватьКоммерческиеПредложенияКлиентам");
		УстановитьЗначениеКонстантыПоИмени("ИспользоватьЗаказыКлиентов");
		
	ИначеЕсли ИмяРодительскойКонстанты = "ИспользоватьСчетаНаОплатуКлиентам" Тогда
		
		НаборКонстант.НеИспользоватьСчетаНаОплатуКлиентам = Не НаборКонстант.ИспользоватьСчетаНаОплатуКлиентам;
		УстановитьЗначениеКонстантыПоИмени("НеИспользоватьСчетаНаОплатуКлиентам");
		
	ИначеЕсли ИмяРодительскойКонстанты = "ИспользоватьСделкиСКлиентами" Тогда
		
		НаборКонстант.ИспользоватьУправлениеСделками	= НаборКонстант.ИспользоватьСделкиСКлиентами И НаборКонстант.ИспользоватьУправлениеСделками;
		НаборКонстант.ИспользоватьПервичныйСпрос    	= НаборКонстант.ИспользоватьСделкиСКлиентами И НаборКонстант.ИспользоватьПервичныйСпрос;
		
		Если Не НаборКонстант.ИспользоватьСделкиСКлиентами Тогда
			НаборКонстант.ФормироватьВидыЗапасовПоСделкам = Ложь;
		КонецЕсли;
		
		УстановитьЗначениеКонстантыПоИмени("ИспользоватьУправлениеСделками");
		УстановитьЗначениеКонстантыПоИмени("ИспользоватьПервичныйСпрос");
		УстановитьЗначениеКонстантыПоИмени("ФормироватьВидыЗапасовПоСделкам");
		
	ИначеЕсли ИмяРодительскойКонстанты = "ИспользоватьЗаявкиНаВозвратТоваровОтКлиентов" Тогда 
		
		Если НЕ НаборКонстант.ИспользоватьЗаявкиНаВозвратТоваровОтКлиентов Тогда
			
			НаборКонстант.ИспользоватьСогласованиеЗаявокНаВозвратТоваровОтКлиентов = Ложь;
			НаборКонстант.ИспользоватьСтатусыЗаявокНаВозврат = Ложь;
			НаборКонстант.НеЗакрыватьЗаказыКлиентовБезПолнойОплаты              = НаборКонстант.ИспользоватьСтатусыЗаказовКлиентов;
			НаборКонстант.НеЗакрыватьЗаказыКлиентовБезПолнойОтгрузки            = НаборКонстант.ИспользоватьСтатусыЗаказовКлиентов;
			
			УстановитьЗначениеКонстантыПоИмени("ИспользоватьСогласованиеЗаявокНаВозвратТоваровОтКлиентов");
			УстановитьЗначениеКонстантыПоИмени("ИспользоватьСтатусыЗаявокНаВозврат");
			УстановитьЗначениеКонстантыПоИмени("НеЗакрыватьЗаказыКлиентовБезПолнойОплаты");
			УстановитьЗначениеКонстантыПоИмени("НеЗакрыватьЗаказыКлиентовБезПолнойОтгрузки");
		КонецЕсли;
		
	ИначеЕсли ИмяРодительскойКонстанты = "ИспользоватьСогласованиеЗаявокНаВозвратТоваровОтКлиентов" Тогда
		
		Если НаборКонстант.ИспользоватьСогласованиеЗаявокНаВозвратТоваровОтКлиентов Тогда
			НаборКонстант.ИспользоватьБизнесПроцессыИЗадачи = Истина;
			УстановитьЗначениеКонстантыПоИмени("ИспользоватьБизнесПроцессыИЗадачи");
		КонецЕсли;
		
		НаборКонстант.ИспользоватьВнутреннееСогласованиеЗаявокНаВозвратТоваровОтКлиентов = НЕ НаборКонстант.ИспользоватьСогласованиеЧерез1СДокументооборот И НаборКонстант.ИспользоватьСогласованиеЗаявокНаВозвратТоваровОтКлиентов;
		УстановитьЗначениеКонстантыПоИмени("ИспользоватьВнутреннееСогласованиеЗаявокНаВозвратТоваровОтКлиентов");
		
	ИначеЕсли ИмяРодительскойКонстанты = "ИспользоватьСогласованиеЗаказовКлиентов" Тогда
		
		Если НаборКонстант.ИспользоватьСогласованиеЗаказовКлиентов Тогда
			НаборКонстант.ИспользоватьБизнесПроцессыИЗадачи = Истина;
			УстановитьЗначениеКонстантыПоИмени("ИспользоватьБизнесПроцессыИЗадачи");
		КонецЕсли;
		
		НаборКонстант.ИспользоватьВнутреннееСогласованиеЗаказовКлиентов = НЕ НаборКонстант.ИспользоватьСогласованиеЧерез1СДокументооборот И НаборКонстант.ИспользоватьСогласованиеЗаказовКлиентов;
		УстановитьЗначениеКонстантыПоИмени("ИспользоватьВнутреннееСогласованиеЗаказовКлиентов");
		
	 ИначеЕсли ИмяРодительскойКонстанты = "ИспользоватьСогласованиеКоммерческихПредложений" Тогда
	 
	 	Если НаборКонстант.ИспользоватьСогласованиеКоммерческихПредложений Тогда
			 НаборКонстант.ИспользоватьБизнесПроцессыИЗадачи = Истина;
			УстановитьЗначениеКонстантыПоИмени("ИспользоватьБизнесПроцессыИЗадачи");
		КонецЕсли;
						
		НаборКонстант.ИспользоватьВнутреннееСогласованиеКоммерческихПредложений = НЕ НаборКонстант.ИспользоватьСогласованиеЧерез1СДокументооборот И НаборКонстант.ИспользоватьСогласованиеКоммерческихПредложений;
		УстановитьЗначениеКонстантыПоИмени("ИспользоватьВнутреннееСогласованиеКоммерческихПредложений");
		
	 
	 ИначеЕсли ИмяРодительскойКонстанты = "ИспользоватьСогласованиеСоглашенийСКлиентами" Тогда
		
		Если  НаборКонстант.ИспользоватьСогласованиеСоглашенийСКлиентами Тогда
			НаборКонстант.ИспользоватьБизнесПроцессыИЗадачи = Истина;
			УстановитьЗначениеКонстантыПоИмени("ИспользоватьБизнесПроцессыИЗадачи");
		КонецЕсли;
		
		НаборКонстант.ИспользоватьВнутреннееСогласованиеСоглашенийСКлиентами = НЕ НаборКонстант.ИспользоватьСогласованиеЧерез1СДокументооборот И НаборКонстант.ИспользоватьСогласованиеСоглашенийСКлиентами;
		УстановитьЗначениеКонстантыПоИмени("ИспользоватьВнутреннееСогласованиеСоглашенийСКлиентами");
		
	ИначеЕсли ИмяРодительскойКонстанты = "ИспользоватьРозничныеПродажи" Тогда
		
		Если Не НаборКонстант.ИспользоватьРозничныеПродажи Тогда
			НаборКонстант.АрхивироватьЧекиККМПриЗакрытииКассовойСмены = Ложь;
			НаборКонстант.КоличествоДнейХраненияОтложенныхЧеков = Ложь;
			НаборКонстант.ИспользоватьОбменСПодключаемымОборудованиемOffline = Ложь;
			НаборКонстант.НазначатьСкидкиПоКнопкеРасчетВЧекеККМ = Ложь;
			
			УстановитьЗначениеКонстантыПоИмени("АрхивироватьЧекиККМПриЗакрытииКассовойСмены");
			УстановитьЗначениеКонстантыПоИмени("КоличествоДнейХраненияОтложенныхЧеков");
			УстановитьЗначениеКонстантыПоИмени("ИспользоватьОбменСПодключаемымОборудованиемOffline");
			УстановитьЗначениеКонстантыПоИмени("НазначатьСкидкиПоКнопкеРасчетВЧекеККМ");
		КонецЕсли;
		
	ИначеЕсли ИмяРодительскойКонстанты = "ИспользоватьСтатусыЗаказовКлиентов" Тогда
		
		Если НЕ НаборКонстант.ИспользоватьСтатусыЗаказовКлиентов Тогда
			НаборКонстант.ИспользоватьСогласованиеЗаказовКлиентов    = Ложь;
			НаборКонстант.НеЗакрыватьЗаказыКлиентовБезПолнойОплаты              = НаборКонстант.ИспользоватьСтатусыЗаявокНаВозврат;
			НаборКонстант.НеЗакрыватьЗаказыКлиентовБезПолнойОтгрузки            = НаборКонстант.ИспользоватьСтатусыЗаявокНаВозврат;
			
			УстановитьЗначениеКонстантыПоИмени("ИспользоватьСогласованиеЗаказовКлиентов");
			УстановитьЗначениеКонстантыПоИмени("НеЗакрыватьЗаказыКлиентовБезПолнойОплаты");
			УстановитьЗначениеКонстантыПоИмени("НеЗакрыватьЗаказыКлиентовБезПолнойОтгрузки");
		КонецЕсли;

	ИначеЕсли ИмяРодительскойКонстанты = "ИспользоватьСтатусыЗаявокНаВозврат" Тогда
		
		Если НЕ НаборКонстант.ИспользоватьСтатусыЗаявокНаВозврат Тогда
			НаборКонстант.ИспользоватьСогласованиеЗаявокНаВозвратТоваровОтКлиентов = Ложь;
			НаборКонстант.НеЗакрыватьЗаказыКлиентовБезПолнойОплаты              = НаборКонстант.ИспользоватьСтатусыЗаказовКлиентов;
			НаборКонстант.НеЗакрыватьЗаказыКлиентовБезПолнойОтгрузки            = НаборКонстант.ИспользоватьСтатусыЗаказовКлиентов;
			
			УстановитьЗначениеКонстантыПоИмени("ИспользоватьСогласованиеЗаявокНаВозвратТоваровОтКлиентов");
			УстановитьЗначениеКонстантыПоИмени("НеЗакрыватьЗаказыКлиентовБезПолнойОплаты");
			УстановитьЗначениеКонстантыПоИмени("НеЗакрыватьЗаказыКлиентовБезПолнойОплаты");
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура УстановитьВидимостьДоступностьЗависимыхЭлементовФормы(ИмяКонстанты = Неопределено)
	
	// Настройки, выполняемые однократно, только при создании формы
	Если ИмяКонстанты = Неопределено Тогда
		
		Элементы.ИспользоватьСкладыВТабличнойЧастиДокументовПродажи.Доступность = НаборКонстант.ИспользоватьНесколькоСкладов;
		Элементы.ГруппаКомментарийИспользоватьСкладыВТабличнойЧастиДокументовПродажи.Видимость = Не НаборКонстант.ИспользоватьНесколькоСкладов;
		
	КонецЕсли;
	
	// Настройки, выполняемые при создании формы и при изменении соответствующего элемента формы
	Если ИмяКонстанты = "ИспользоватьЗаказыКлиентов" Или ИмяКонстанты = Неопределено Тогда
		Элементы.ИспользоватьРеализациюПоНесколькимЗаказам.Доступность 				  = НаборКонстант.ИспользоватьЗаказыКлиентов И НЕ (НаборКонстант.ИспользоватьСинхронизациюДанных И ЕстьОбменыСФормированиемДоговоровПоЗаказам);
		Элементы.ГруппаКомментарийИспользоватьРеализациюПоНесколькимЗаказам.Видимость = НаборКонстант.ИспользоватьСинхронизациюДанных И ЕстьОбменыСФормированиемДоговоровПоЗаказам;
		Элементы.ИспользоватьСогласованиеЗаказовКлиентов.Доступность 				  = НаборКонстант.ИспользоватьЗаказыКлиентов И НаборКонстант.ИспользоватьСтатусыЗаказовКлиентов;
		Элементы.НеЗакрыватьЗаказыКлиентовБезПолнойОтгрузки.Доступность				  = (НаборКонстант.ИспользоватьЗаказыКлиентов И НаборКонстант.ИспользоватьСтатусыЗаказовКлиентов) 
																							ИЛИ (НаборКонстант.ИспользоватьЗаявкиНаВозвратТоваровОтКлиентов И НаборКонстант.ИспользоватьСтатусыЗаявокНаВозврат);
		Элементы.НеЗакрыватьЗаказыКлиентовБезПолнойОплаты.Доступность				  = (НаборКонстант.ИспользоватьЗаказыКлиентов И НаборКонстант.ИспользоватьСтатусыЗаказовКлиентов)
																							ИЛИ (НаборКонстант.ИспользоватьЗаявкиНаВозвратТоваровОтКлиентов И НаборКонстант.ИспользоватьСтатусыЗаявокНаВозврат);
		Элементы.ИспользоватьАктыВыполненныхРаботПоНесколькимЗаказам.Доступность 	  = НаборКонстант.ИспользоватьЗаказыКлиентов И НЕ (НаборКонстант.ИспользоватьСинхронизациюДанных И ЕстьОбменыСФормированиемДоговоровПоЗаказам);
		Элементы.ИспользоватьСтатусыЗаказовКлиентов.Доступность                       = НаборКонстант.ИспользоватьЗаказыКлиентов;
		Элементы.ИспользоватьПричиныОтменыЗаказовКлиентов.Доступность                 = НаборКонстант.ИспользоватьЗаказыКлиентов;
	КонецЕсли;
	
	Если ИмяКонстанты = "ИспользоватьСтатусыЗаказовКлиентов" Или ИмяКонстанты = Неопределено Тогда
		
		Элементы.ИспользоватьСогласованиеЗаказовКлиентов.Доступность    = НаборКонстант.ИспользоватьСтатусыЗаказовКлиентов И НаборКонстант.ИспользоватьЗаказыКлиентов;
		Элементы.НеЗакрыватьЗаказыКлиентовБезПолнойОтгрузки.Доступность = НаборКонстант.ИспользоватьСтатусыЗаказовКлиентов ИЛИ НаборКонстант.ИспользоватьСтатусыЗаявокНаВозврат;
		Элементы.НеЗакрыватьЗаказыКлиентовБезПолнойОплаты.Доступность   = НаборКонстант.ИспользоватьСтатусыЗаказовКлиентов ИЛИ НаборКонстант.ИспользоватьСтатусыЗаявокНаВозврат;
		Элементы.ГруппаКомментарийКонтролироватьЗакрытие.Видимость      = НЕ (НаборКонстант.ИспользоватьСтатусыЗаказовКлиентов ИЛИ НаборКонстант.ИспользоватьСтатусыЗаявокНаВозврат);
		
	КонецЕсли;
	
	Если ИмяКонстанты = "ИспользоватьСтатусыЗаявокНаВозврат" Или ИмяКонстанты = Неопределено Тогда
		
		Элементы.ИспользоватьСогласованиеЗаявокНаВозвратТоваровОтКлиентов.Доступность = НаборКонстант.ИспользоватьСтатусыЗаявокНаВозврат И  НаборКонстант.ИспользоватьЗаявкиНаВозвратТоваровОтКлиентов;
		Элементы.НеЗакрыватьЗаказыКлиентовБезПолнойОтгрузки.Доступность               = НаборКонстант.ИспользоватьСтатусыЗаявокНаВозврат ИЛИ НаборКонстант.ИспользоватьСтатусыЗаказовКлиентов;
		Элементы.НеЗакрыватьЗаказыКлиентовБезПолнойОплаты.Доступность                 = НаборКонстант.ИспользоватьСтатусыЗаявокНаВозврат ИЛИ НаборКонстант.ИспользоватьСтатусыЗаказовКлиентов;
		Элементы.ГруппаКомментарийКонтролироватьЗакрытие.Видимость                    = НЕ (НаборКонстант.ИспользоватьСтатусыЗаявокНаВозврат ИЛИ НаборКонстант.ИспользоватьСтатусыЗаказовКлиентов);
		
	КонецЕсли;
	
	Если ИмяКонстанты = "ИспользоватьСогласованиеЗаказовКлиентов"
	 ИЛИ ИмяКонстанты = "ИспользоватьСогласованиеКоммерческихПредложений"
	 ИЛИ ИмяКонстанты = "ИспользоватьСогласованиеСоглашенийСКлиентами"
	 ИЛИ ИмяКонстанты = "ИспользоватьСогласованиеЗаявокНаВозвратТоваровОтКлиентов"
	 ИЛИ ИмяКонстанты = Неопределено Тогда
		
	 	ДоступностьРеквизитовСогласования = 
	 		НаборКонстант.ИспользоватьСогласованиеЗаказовКлиентов 
			ИЛИ НаборКонстант.ИспользоватьСогласованиеКоммерческихПредложений
			ИЛИ НаборКонстант.ИспользоватьСогласованиеСоглашенийСКлиентами
			ИЛИ НаборКонстант.ИспользоватьСогласованиеЗаявокНаВозвратТоваровОтКлиентов;
		
		Элементы.ВключитьВерсионированиеДокументовПродажи.Доступность 									= ДоступностьРеквизитовСогласования;
		Элементы.НазначитьОтветственныхЗаСогласованиеЛогистическихУсловийДокументовПродажи.Доступность 	= ДоступностьРеквизитовСогласования;
		Элементы.НазначитьОтветственныхЗаСогласованиеФинансовыхУсловийДокументовПродажи.Доступность 	= ДоступностьРеквизитовСогласования;
		Элементы.НазначитьОтветственныхЗаСогласованиеЦеновыхУсловийДокументовПродажи.Доступность 		= ДоступностьРеквизитовСогласования;
		Элементы.НазначитьОтветственныхЗаСогласованиеКоммерческихУсловийДокументовПродажи.Доступность 	= ДоступностьРеквизитовСогласования;
				
		Элементы.НазначитьОтветственныхЗаСогласованиеЗаявокНаВозврат.Доступность = НаборКонстант.ИспользоватьСогласованиеЗаявокНаВозвратТоваровОтКлиентов;
		
	КонецЕсли;

	Если ИмяКонстанты = "ИспользоватьУправлениеСделками" Или ИмяКонстанты = Неопределено Тогда
		Элементы.ИспользоватьКоммерческиеПредложенияКлиентам.Доступность = Не НаборКонстант.ИспользоватьУправлениеСделками;
	КонецЕсли;
	
	Если ИмяКонстанты = "ИспользоватьСделкиСКлиентами" Или ИмяКонстанты = Неопределено Тогда
		Элементы.ИспользоватьУправлениеСделками.Доступность	= НаборКонстант.ИспользоватьСделкиСКлиентами;
		Элементы.ИспользоватьПервичныйСпрос.Доступность		= НаборКонстант.ИспользоватьСделкиСКлиентами;
	КонецЕсли;
		
	Если ИмяКонстанты = "ИспользоватьЗаявкиНаВозвратТоваровОтКлиентов" Или ИмяКонстанты = Неопределено Тогда
		Элементы.ИспользоватьСогласованиеЗаявокНаВозвратТоваровОтКлиентов.Доступность = НаборКонстант.ИспользоватьЗаявкиНаВозвратТоваровОтКлиентов И НаборКонстант.ИспользоватьСтатусыЗаявокНаВозврат;
		Элементы.НеЗакрыватьЗаказыКлиентовБезПолнойОтгрузки.Доступность				  = (НаборКонстант.ИспользоватьЗаявкиНаВозвратТоваровОтКлиентов И НаборКонстант.ИспользоватьСтатусыЗаявокНаВозврат)
																							ИЛИ (НаборКонстант.ИспользоватьЗаказыКлиентов И НаборКонстант.ИспользоватьСтатусыЗаказовКлиентов);
		Элементы.НеЗакрыватьЗаказыКлиентовБезПолнойОплаты.Доступность				  = НаборКонстант.ИспользоватьЗаявкиНаВозвратТоваровОтКлиентов И НаборКонстант.ИспользоватьСтатусыЗаявокНаВозврат
																							ИЛИ (НаборКонстант.ИспользоватьЗаказыКлиентов И НаборКонстант.ИспользоватьСтатусыЗаказовКлиентов);
		Элементы.ИспользоватьСтатусыЗаявокНаВозврат.Доступность                       = НаборКонстант.ИспользоватьЗаявкиНаВозвратТоваровОтКлиентов;
		Элементы.ГруппаКомментарийКонтролироватьЗакрытие.Видимость                    = НЕ (НаборКонстант.ИспользоватьЗаявкиНаВозвратТоваровОтКлиентов И НаборКонстант.ИспользоватьСтатусыЗаявокНаВозврат)
																							ИЛИ НЕ (НаборКонстант.ИспользоватьЗаказыКлиентов И НаборКонстант.ИспользоватьСтатусыЗаказовКлиентов);
		
	КонецЕсли;
	
	Если ИмяКонстанты = "ИспользоватьКоммерческиеПредложенияКлиентам" Или ИмяКонстанты = Неопределено Тогда 
		Элементы.ИспользоватьСогласованиеКоммерческихПредложений.Доступность = НаборКонстант.ИспользоватьКоммерческиеПредложенияКлиентам;
	КонецЕсли;
		
	Если ИмяКонстанты = "ИспользоватьСогласованиеЗаявокНаВозвратТоваровОтКлиентов" Или ИмяКонстанты = Неопределено Тогда
		Элементы.НазначитьОтветственныхЗаСогласованиеЗаявокНаВозврат.Доступность = НаборКонстант.ИспользоватьСогласованиеЗаявокНаВозвратТоваровОтКлиентов;
	КонецЕсли;
		
	Если ИмяКонстанты = "ИспользоватьРозничныеПродажи" Или ИмяКонстанты = Неопределено Тогда
		Элементы.АрхивироватьЧекиККМПриЗакрытииКассовойСмены.Доступность = НаборКонстант.ИспользоватьРозничныеПродажи;
		Элементы.КоличествоДнейХраненияОтложенныхЧеков.Доступность 		 = НаборКонстант.ИспользоватьРозничныеПродажи;
		Элементы.НазначатьСкидкиПоКнопкеРасчетВЧекеККМ.Доступность 		 = НаборКонстант.ИспользоватьРозничныеПродажи;
	КонецЕсли;
	
	Если ИмяКонстанты = "ИспользоватьСоглашенияСКлиентами" Или ИмяКонстанты = Неопределено Тогда
		Элементы.ИспользоватьСогласованиеСоглашенийСКлиентами.Доступность = НаборКонстант.ИспользоватьСоглашенияСКлиентами;
	КонецЕсли;
	
КонецПроцедуры

