
////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ИнициализироватьНачальныеЗначенияРеквизитов();
	
	УстановитьВидимостьДоступностьЗависимыхЭлементовФормы();
	
КонецПроцедуры

&НаКлиенте
Процедура ПриЗакрытии()
	
	Если ТребуетсяОбновлениеИнтерфейса Тогда
		ОбновитьИнтерфейс();
	КонецЕсли;
	
КонецПроцедуры


////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ ШАПКИ ФОРМЫ

&НаКлиенте
Процедура ИспользоватьЦеновыеГруппыПриИзменении(Элемент)
	
	СохранитьЗначениеКонстанты(Элемент.Имя);
	
	ПодключитьОбработчикОжиданияОбновленияИнтерфейса();
	
КонецПроцедуры

&НаКлиенте
Процедура ИспользоватьРучныеСкидкиВПродажахПриИзменении(Элемент)
	
	СохранитьЗначениеКонстанты(Элемент.Имя);
	
	ПодключитьОбработчикОжиданияОбновленияИнтерфейса();
	
КонецПроцедуры

&НаКлиенте
Процедура ИспользоватьОграниченияРучныхСкидокВПродажахПоСоглашениямПриИзменении(Элемент)
	
	СохранитьЗначениеКонстанты(Элемент.Имя);
	
	ПодключитьОбработчикОжиданияОбновленияИнтерфейса();
	
КонецПроцедуры

&НаКлиенте
Процедура ИспользоватьОграниченияРучныхСкидокВПродажахПоПользователямПриИзменении(Элемент)
	
	СохранитьЗначениеКонстанты(Элемент.Имя);
	
	ПодключитьОбработчикОжиданияОбновленияИнтерфейса();
	
КонецПроцедуры

&НаКлиенте
Процедура ИспользоватьРучныеСкидкиВЗакупкахПриИзменении(Элемент)
	
	СохранитьЗначениеКонстанты(Элемент.Имя);
	
	ПодключитьОбработчикОжиданияОбновленияИнтерфейса();
	
КонецПроцедуры

&НаКлиенте
Процедура ИспользоватьАвтоматическиеСкидкиВПродажахПриИзменении(Элемент)
	
	СохранитьЗначениеКонстанты(Элемент.Имя);
	
	ПодключитьОбработчикОжиданияОбновленияИнтерфейса();
	
КонецПроцедуры

&НаКлиенте
Процедура ИспользоватьГрафикиОплатыПриИзменении(Элемент)
	
	СохранитьЗначениеКонстанты(Элемент.Имя);
	
	ПодключитьОбработчикОжиданияОбновленияИнтерфейса();
	
КонецПроцедуры

&НаКлиенте
Процедура ИспользоватьКартыЛояльностиПриИзменении(Элемент)
	
	СохранитьЗначениеКонстанты(Элемент.Имя);
	
	ПодключитьОбработчикОжиданияОбновленияИнтерфейса();
	
КонецПроцедуры

&НаКлиенте
Процедура ФиксироватьПервичныйИнтересПриИзменении(Элемент)
	
	СохранитьЗначениеКонстанты(Элемент.Имя);
	
	ПодключитьОбработчикОжиданияОбновленияИнтерфейса();
	
КонецПроцедуры

&НаКлиенте
Процедура ИспользоватьСогласованиеЦенНоменклатурыПриИзменении(Элемент)
	
	Если Не НаборКонстант.ИспользоватьСогласованиеЦенНоменклатуры Тогда
		
		Если ЕстьНесогласованныеУстановкиЦен() Тогда
			
			СписокКнопок = Новый СписокЗначений();
			СписокКнопок.Добавить("ПерейтиВСписок", НСтр("ru = 'Перейти в список'"));
			СписокКнопок.Добавить("ОтключитьСогласование", НСтр("ru = 'Отключить согласование'"));
			
			ОтветНаВопрос = Вопрос(НСтр("ru = 'Существуют документы установки цен в статусе ""Не согласован"". Перед отключением согласования рекомендуется перейти в список документов установки цен и провести документы в статусе ""Согласован"", иначе дальнейшая работа с ними будет невозможа.'"), СписокКнопок);
			
			Если ОтветНаВопрос = "ПерейтиВСписок" Тогда
				ОткрытьФорму(
					"Документ.УстановкаЦенНоменклатуры.ФормаСписка",
					Новый Структура("Отбор", Новый Структура("Статус", ПредопределенноеЗначение("Перечисление.СтатусыУстановокЦенНоменклатуры.НеСогласован")))
				);
			КонецЕсли;
			
		Иначе
			ОтветНаВопрос = "ОтключитьСогласование";
		КонецЕсли;
		
	Иначе
		
		ОтветНаВопрос = "ОтключитьСогласование";
		
	КонецЕсли;
	
	Если ОтветНаВопрос = "ОтключитьСогласование" Тогда
	
		СохранитьЗначениеКонстанты(Элемент.Имя);
		ИспользоватьСогласованиеЦенНоменклатуры = НаборКонстант.ИспользоватьСогласованиеЦенНоменклатуры;
		
		ПодключитьОбработчикОжиданияОбновленияИнтерфейса();
		
	Иначе
		
		НаборКонстант.ИспользоватьСогласованиеЦенНоменклатуры = ИспользоватьСогласованиеЦенНоменклатуры;
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ИспользоватьКонкурентнуюРазведкуПриИзменении(Элемент)
	
	СохранитьЗначениеКонстанты(Элемент.Имя);
	ПодключитьОбработчикОжиданияОбновленияИнтерфейса();
	
КонецПроцедуры

&НаКлиенте
Процедура ИспользоватьСегментыПартнеровПриИзменении(Элемент)
	
	СохранитьЗначениеКонстанты(Элемент.Имя);
	ПодключитьОбработчикОжиданияОбновленияИнтерфейса();

КонецПроцедуры

&НаКлиенте
Процедура ИспользоватьМаркетинговыеМероприятияПриИзменении(Элемент)
	
	СохранитьЗначениеКонстанты(Элемент.Имя);
	ПодключитьОбработчикОжиданияОбновленияИнтерфейса();

КонецПроцедуры

&НаКлиенте
Процедура ИспользоватьСкидкиПоМаркетинговымМероприятиямПриИзменении(Элемент)
	
	СохранитьЗначениеКонстанты(Элемент.Имя);
	ПодключитьОбработчикОжиданияОбновленияИнтерфейса();

КонецПроцедуры

&НаКлиенте
Процедура ИспользоватьСегментыНоменклатурыПриИзменении(Элемент)
	
	СохранитьЗначениеКонстанты(Элемент.Имя);
	ПодключитьОбработчикОжиданияОбновленияИнтерфейса();
	
КонецПроцедуры


////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ КОМАНД ФОРМЫ

&НаКлиенте
Процедура ВключитьВерсионированиеУстановкиЦенНоменклатуры(Команда)
	
	Если Не НаборКонстант.ИспользоватьВерсионированиеОбъектов Тогда
		НаборКонстант.ИспользоватьВерсионированиеОбъектов = Истина;
		
		СохранитьЗначениеКонстанты("ИспользоватьВерсионированиеОбъектов");
		
		ПодключитьОбработчикОжиданияОбновленияИнтерфейса();
	КонецЕсли;
	
	МассивТиповОбъектов = Новый Массив();
	
	МассивТиповОбъектов.Добавить("Документ.УстановкаЦенНоменклатуры");
	
	ВерсионированиеВключено = ВключитьВерсионированиеОбъектовСервер(МассивТиповОбъектов, "Всегда");
	
	Если ВерсионированиеВключено Тогда
		
		ПоказатьОповещениеПользователя(НСтр("ru = 'Версионирование включено'"),
		,
		НСтр("ru='Для документа ""Установки цен номенклатуры"" установлен вариант версионирования ""Версионировать при записи""'"),
		БиблиотекаКартинок.Информация32);
		
		
		Элементы.ВключитьВерсионированиеУстановкиЦенНоменклатуры.Доступность = Ложь;
		
	Иначе
		
		ПоказатьОповещениеПользователя(НСтр("ru = 'Версионирование не включено'"),
		,
		НСтр("ru='Для документа ""Установки цен номенклатуры"" версионирование уже было включено'"),
		БиблиотекаКартинок.Информация32);
		
	КонецЕсли
	
КонецПроцедуры

&НаКлиенте
Процедура НазначитьОтветственныхЗаСогласованиеЦенНоменклатуры(Команда)
	
	ОткрытьФорму("РегистрСведений.ИсполнителиЗадач.Форма.АдресацияПоОбъектуИРоли", 
	Новый Структура("ОсновнойОбъектАдресации,Роль", 
	Неопределено, 
	ПредопределенноеЗначение("Справочник.РолиИсполнителей.СогласующийУстановкиЦенНоменклатуры"))
	);
	
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьВидыКонтактнойИнформации(Команда)
	
	ОткрытьФорму("Справочник.ВидыКонтактнойИнформации.ФормаСписка", , ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьВидыСвязейПартнеров(Команда)
	
	ОткрытьФорму("Справочник.ВидыСвязейМеждуПартнерами.ФормаСписка", , ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьРолиКонтактныхЛиц(Команда)
	
	ОткрытьФорму("Справочник.РолиКонтактныхЛицПартнеров.ФормаСписка", , ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьБизнесРегионы(Команда)
	
	ОткрытьФорму("Справочник.БизнесРегионы.ФормаСписка", , ЭтаФорма);
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

////////////////////////////////////////////////////////////////////////////////
// Прочее

&НаСервереБезКонтекста
Функция ОтображениеПредупреждения(Отображать)
	
	Если Отображать Тогда
		Возврат ОтображениеПредупрежденияПриРедактировании.Отображать;
	КонецЕсли;
	
	Возврат ОтображениеПредупрежденияПриРедактировании.НеОтображать;
	
КонецФункции


&НаСервереБезКонтекста
Функция ЕстьНесогласованныеУстановкиЦен()
	
	УстановитьПривилегированныйРежим(Истина);
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	УстановкаЦенНоменклатуры.Ссылка
	|ИЗ
	|	Документ.УстановкаЦенНоменклатуры КАК УстановкаЦенНоменклатуры
	|ГДЕ
	|	УстановкаЦенНоменклатуры.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыУстановокЦенНоменклатуры.НеСогласован)";
	
	Возврат НЕ Запрос.Выполнить().Пустой();
	
КонецФункции

&НаСервереБезКонтекста
Функция ВключитьВерсионированиеОбъектовСервер(МассивТиповОбъектов, ВариантВерсионирования = "Всегда")
	
	ПараметрыОпции = Новый Структура;
	
	ВерсионированиеВключено = Ложь;
	
	Если ВариантВерсионирования = "ПриПроведении" Тогда
		ПеречислениеВариантВерсионирования = Перечисления.ВариантыВерсионированияОбъектов.ВерсионироватьПриПроведении;
	ИначеЕсли ВариантВерсионирования = "Всегда" Тогда
		ПеречислениеВариантВерсионирования = Перечисления.ВариантыВерсионированияОбъектов.ВерсионироватьПриЗаписи;
	КонецЕсли;
	
	Для Каждого ТекЭлемент Из МассивТиповОбъектов Цикл
		
		ПараметрыОпции.Вставить("ТипОбъектаКонфигурации", ТекЭлемент);
		ИспользоватьВерсионированиеОбъекта = ПолучитьФункциональнуюОпцию("ИспользоватьВерсионированиеОбъекта", ПараметрыОпции);
		
		Если Не ИспользоватьВерсионированиеОбъекта Тогда
			
			ВерсионированиеОбъектов.ЗаписатьНастройкуВерсионированияПоОбъекту(ТекЭлемент, ПеречислениеВариантВерсионирования);
			ВерсионированиеВключено = Истина;
			
		КонецЕсли;
		
	КонецЦикла;
	
	Возврат ВерсионированиеВключено;
	
КонецФункции

////////////////////////////////////////////////////////////////////////////////
// Обновление интерфейса

&НаКлиенте 
Процедура ПодключитьОбработчикОжиданияОбновленияИнтерфейса()
	
	ТребуетсяОбновлениеИнтерфейса = Истина;
	
	#Если НЕ ВебКлиент Тогда
	ПодключитьОбработчикОжидания("ОбработчикОжиданияОбновленияИнтерфейса", 1, Истина);
	#КонецЕсли 
	
КонецПроцедуры

&НаКлиенте 
Процедура ОбработчикОжиданияОбновленияИнтерфейса()
	
	ОбновитьИнтерфейс();
	
	ТребуетсяОбновлениеИнтерфейса = Ложь;
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// Изменение реквизитов

&НаСервере
Процедура ИнициализироватьНачальныеЗначенияРеквизитов()
	
	// Инициализация набора констант
	НаборКонстантОбъект = ДанныеФормыВЗначение(НаборКонстант, Тип("КонстантыНабор"));
	НаборКонстантОбъект.Прочитать();
	ЗначениеВДанныеФормы(НаборКонстантОбъект, НаборКонстант);
	
	ИспользоватьСогласованиеЦенНоменклатуры = НаборКонстант.ИспользоватьСогласованиеЦенНоменклатуры;
	
КонецПроцедуры

&НаСервере 
Процедура СохранитьЗначениеКонстанты(ИмяКонстанты)
	
	УстановитьЗначениеКонстантыПоИмени(ИмяКонстанты);
	
	ОбновитьПовторноИспользуемыеЗначения();
	
	ВыполнитьМетодыПослеУстановкиЗначенияКонстанты(ИмяКонстанты);
	
КонецПроцедуры

&НаСервере 
Процедура ВыполнитьМетодыПослеУстановкиЗначенияКонстанты(ИмяКонстанты)
	
	ВариантыОтчетовУТПереопределяемый.НастроитьВариантыОтчетовПоФункциональнойОпции(ИмяКонстанты, НаборКонстант[ИмяКонстанты]);
	
КонецПроцедуры

&НаСервере 
Процедура УстановитьЗначениеКонстантыПоИмени(ИмяКонстанты)
	
	Если Константы[ИмяКонстанты].Получить() <> НаборКонстант[ИмяКонстанты] Тогда
		Константы[ИмяКонстанты].Установить(НаборКонстант[ИмяКонстанты]);
	КонецЕсли;
	
	УстановитьВидимостьДоступностьЗависимыхЭлементовФормы(ИмяКонстанты);
	
	УстановитьЗначенияЗависимыхКонстант(ИмяКонстанты);
	
КонецПроцедуры

&НаСервере 
Процедура УстановитьЗначенияЗависимыхКонстант(ИмяРодительскойКонстанты)
	
	Если ИмяРодительскойКонстанты = "ИспользоватьМаркетинговыеМероприятия" Тогда
		
		Если Не НаборКонстант.ИспользоватьМаркетинговыеМероприятия Тогда
			НаборКонстант.ИспользоватьСкидкиПоМаркетинговымМероприятиям = Ложь;
			УстановитьЗначениеКонстантыПоИмени("ИспользоватьСкидкиПоМаркетинговымМероприятиям");
		КонецЕсли;
		
	ИначеЕсли ИмяРодительскойКонстанты = "ИспользоватьРучныеСкидкиВПродажах" Тогда
		
		Если Не НаборКонстант.ИспользоватьРучныеСкидкиВПродажах Тогда
			НаборКонстант.ИспользоватьОграниченияРучныхСкидокВПродажахПоСоглашениям = Ложь;
			НаборКонстант.ИспользоватьОграниченияРучныхСкидокВПродажахПоПользователям = Ложь;
			
			УстановитьЗначениеКонстантыПоИмени("ИспользоватьОграниченияРучныхСкидокВПродажахПоСоглашениям");
			УстановитьЗначениеКонстантыПоИмени("ИспользоватьОграниченияРучныхСкидокВПродажахПоПользователям");
		КонецЕсли;
		
	ИначеЕсли ИмяРодительскойКонстанты = "ИспользоватьАвтоматическиеСкидкиВПродажах" Тогда
		
		Если Не НаборКонстант.ИспользоватьАвтоматическиеСкидкиВПродажах Тогда
			НаборКонстант.НазначатьСкидкиПоКнопкеРасчетВЧекеККМ         = Ложь;
			НаборКонстант.ИспользоватьКартыЛояльности                   = Ложь;
			НаборКонстант.ИспользоватьСкидкиПоМаркетинговымМероприятиям = Ложь;
			
			УстановитьЗначениеКонстантыПоИмени("НазначатьСкидкиПоКнопкеРасчетВЧекеККМ");
			УстановитьЗначениеКонстантыПоИмени("ИспользоватьКартыЛояльности");
			УстановитьЗначениеКонстантыПоИмени("ИспользоватьСкидкиПоМаркетинговымМероприятиям");
		КонецЕсли;
		
	ИначеЕсли ИмяРодительскойКонстанты = "ИспользоватьСогласованиеЦенНоменклатуры" Тогда
		
		Если НаборКонстант.ИспользоватьСогласованиеЦенНоменклатуры Тогда
			НаборКонстант.ИспользоватьБизнесПроцессыИЗадачи = Истина;
			УстановитьЗначениеКонстантыПоИмени("ИспользоватьБизнесПроцессыИЗадачи");
		КонецЕсли;
		
	ИначеЕсли ИмяРодительскойКонстанты = "ИспользоватьПартнеровИКонтрагентов" Тогда
		
		НаборКонстант.ИспользоватьПартнеровКакКонтрагентов = НЕ НаборКонстант.ИспользоватьПартнеровИКонтрагентов;
		УстановитьЗначениеКонстантыПоИмени("ИспользоватьПартнеровКакКонтрагентов");
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура УстановитьВидимостьДоступностьЗависимыхЭлементовФормы(ИмяКонстанты = Неопределено)
	
	// Настройки, выполняемые однократно, только при создании формы
	Если ИмяКонстанты = Неопределено Тогда
		Элементы.ИспользоватьПартнеровИКонтрагентов.ОтображениеПредупрежденияПриРедактировании = ОтображениеПредупреждения(НаборКонстант.ИспользоватьПартнеровИКонтрагентов);
	КонецЕсли;
	
	// Настройки, выполняемые при создании формы и при изменении соответствующего элемента формы
	Если ИмяКонстанты = "ИспользоватьМаркетинговыеМероприятия" Или ИмяКонстанты = Неопределено Тогда
		Элементы.ИспользоватьСкидкиПоМаркетинговымМероприятиям.Доступность = НаборКонстант.ИспользоватьМаркетинговыеМероприятия И НаборКонстант.ИспользоватьАвтоматическиеСкидкиВПродажах;
	КонецЕсли;
	
	Если ИмяКонстанты = "ИспользоватьАвтоматическиеСкидкиВПродажах" Или ИмяКонстанты = Неопределено Тогда
		Элементы.ИспользоватьКартыЛояльности.Доступность           		   = НаборКонстант.ИспользоватьАвтоматическиеСкидкиВПродажах;
		Элементы.ИспользоватьСкидкиПоМаркетинговымМероприятиям.Доступность = НаборКонстант.ИспользоватьМаркетинговыеМероприятия И НаборКонстант.ИспользоватьАвтоматическиеСкидкиВПродажах;
	КонецЕсли;
		
	Если ИмяКонстанты = "ИспользоватьРучныеСкидкиВПродажах" Или ИмяКонстанты = Неопределено Тогда
		Элементы.ИспользоватьОграниченияРучныхСкидокВПродажахПоСоглашениям.Доступность   = НаборКонстант.ИспользоватьРучныеСкидкиВПродажах;
		Элементы.ИспользоватьОграниченияРучныхСкидокВПродажахПоПользователям.Доступность = НаборКонстант.ИспользоватьРучныеСкидкиВПродажах;
	КонецЕсли;
		
	Если ИмяКонстанты = "ИспользоватьСогласованиеЦенНоменклатуры" Или ИмяКонстанты = Неопределено Тогда
		Элементы.ВключитьВерсионированиеУстановкиЦенНоменклатуры.Доступность 	 = НаборКонстант.ИспользоватьСогласованиеЦенНоменклатуры;
		Элементы.НазначитьОтветственныхЗаСогласованиеЦенНоменклатуры.Доступность = НаборКонстант.ИспользоватьСогласованиеЦенНоменклатуры;
	КонецЕсли;
	
	Если ИмяКонстанты = "ИспользоватьБизнесРегионы" Или ИмяКонстанты = Неопределено Тогда
		Элементы.ОткрытьБизнесРегионы.Доступность = НаборКонстант.ИспользоватьБизнесРегионы;
	КонецЕсли;
	
	Если ИмяКонстанты = "ИспользоватьВидыСвязейПартнеров" Или ИмяКонстанты = Неопределено Тогда
		Элементы.ОткрытьСправочникВидыСвязейПартнеров.Доступность = НаборКонстант.ИспользоватьВидыСвязейПартнеров;
	КонецЕсли;
	
	Если ИмяКонстанты = "ИспользоватьРолиКонтактныхЛицПартнеров" Или ИмяКонстанты = Неопределено Тогда
		Элементы.ОткрытьРолиКонтактныхЛиц.Доступность = НаборКонстант.ИспользоватьРолиКонтактныхЛицПартнеров;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ИспользоватьНесколькоВидовЦенПриИзменении(Элемент)
	
	СохранитьЗначениеКонстанты(Элемент.Имя);
	
	ПодключитьОбработчикОжиданияОбновленияИнтерфейса();
	
КонецПроцедуры

&НаКлиенте
Процедура ИспользоватьАссортиментПриИзменении(Элемент)
	
	СохранитьЗначениеКонстанты(Элемент.Имя);
	
	ПодключитьОбработчикОжиданияОбновленияИнтерфейса();
	
КонецПроцедуры

&НаКлиенте
Процедура ИспользоватьБизнесРегионыПриИзменении(Элемент)
	
	СохранитьЗначениеКонстанты(Элемент.Имя);
	
	ПодключитьОбработчикОжиданияОбновленияИнтерфейса();
	
КонецПроцедуры

&НаКлиенте
Процедура ИспользоватьВидыСвязейПартнеровПриИзменении(Элемент)
	
	СохранитьЗначениеКонстанты(Элемент.Имя);
	
	ПодключитьОбработчикОжиданияОбновленияИнтерфейса();
	
КонецПроцедуры

&НаКлиенте
Процедура ИспользоватьРолиКонтактныхЛицПартнеровПриИзменении(Элемент)
	
	СохранитьЗначениеКонстанты(Элемент.Имя);
	
	ПодключитьОбработчикОжиданияОбновленияИнтерфейса();
	
КонецПроцедуры

&НаКлиенте
Процедура ИспользоватьПартнеровИКонтрагентовПриИзменении(Элемент)
	
	Если НЕ НаборКонстант.ИспользоватьПартнеровКакКонтрагентов Тогда
		Элементы.ИспользоватьПартнеровИКонтрагентов.ОтображениеПредупрежденияПриРедактировании = ОтображениеПредупрежденияПриРедактировании.НеОтображать;
	Иначе
		Элементы.ИспользоватьПартнеровИКонтрагентов.ОтображениеПредупрежденияПриРедактировании = ОтображениеПредупрежденияПриРедактировании.Отображать;
	КонецЕсли;
	
	СохранитьЗначениеКонстанты(Элемент.Имя);
	
	ПодключитьОбработчикОжиданияОбновленияИнтерфейса();
	
КонецПроцедуры

&НаКлиенте
Процедура ФиксироватьПретензииКлиентовПриИзменении(Элемент)
	
	СохранитьЗначениеКонстанты(Элемент.Имя);
	
	ПодключитьОбработчикОжиданияОбновленияИнтерфейса();
	
КонецПроцедуры
