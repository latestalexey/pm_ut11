
////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ИнициализироватьНачальныеЗначенияРеквизитов();
	
	УстановитьВидимостьДоступностьЗависимыхЭлементовФормы();
	
КонецПроцедуры

&НаКлиенте
Процедура ПриЗакрытии()
	
	Если ТребуетсяОбновлениеИнтерфейса Тогда
		ОбновитьИнтерфейс();
	КонецЕсли;
	
КонецПроцедуры


////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ ШАПКИ ФОРМЫ

&НаКлиенте
Процедура ИспользоватьЗаказыПоставщикамПриИзменении(Элемент)
	
	СохранитьЗначениеКонстанты(Элемент.Имя);
	
	ПодключитьОбработчикОжиданияОбновленияИнтерфейса();
	
КонецПроцедуры

&НаКлиенте
Процедура ИспользоватьПоступлениеПоНесколькимЗаказамПриИзменении(Элемент)
	
	СохранитьЗначениеКонстанты(Элемент.Имя);
	
	ПодключитьОбработчикОжиданияОбновленияИнтерфейса();
	
КонецПроцедуры

&НаКлиенте
Процедура НеЗакрыватьЗаказыПоставщикамБезПолногоПоступленияПриИзменении(Элемент)
	
	СохранитьЗначениеКонстанты(Элемент.Имя);
	
КонецПроцедуры

&НаКлиенте
Процедура НеЗакрыватьЗаказыПоставщикамБезПолнойОплатыПриИзменении(Элемент)
	
	СохранитьЗначениеКонстанты(Элемент.Имя);
	
КонецПроцедуры

&НаКлиенте
Процедура ИспользоватьАктыПриемкиТоваровПриИзменении(Элемент)
	
	СохранитьЗначениеКонстанты(Элемент.Имя);
	
	ПодключитьОбработчикОжиданияОбновленияИнтерфейса();
	
КонецПроцедуры

&НаКлиенте
Процедура ИспользоватьАктыОРасхожденияхПриПоступленииТоваровПриИзменении(Элемент)
	
	СохранитьЗначениеКонстанты(Элемент.Имя);
	
	ПодключитьОбработчикОжиданияОбновленияИнтерфейса();
	
КонецПроцедуры

&НаКлиенте
Процедура ИспользоватьДоверенностиНаПолучениеТоваровПриИзменении(Элемент)
	
	СохранитьЗначениеКонстанты(Элемент.Имя);
	
	ПодключитьОбработчикОжиданияОбновленияИнтерфейса();
	
КонецПроцедуры

&НаКлиенте
Процедура ИспользоватьКомиссиюПриЗакупкахПриИзменении(Элемент)
	
	СохранитьЗначениеКонстанты(Элемент.Имя);
	
	ПодключитьОбработчикОжиданияОбновленияИнтерфейса();
	
КонецПроцедуры

&НаКлиенте
Процедура ИспользоватьЗаказыНаВнутреннееПотреблениеПриИзменении(Элемент)
	
	СохранитьЗначениеКонстанты(Элемент.Имя);

	ПодключитьОбработчикОжиданияОбновленияИнтерфейса();
	
КонецПроцедуры

&НаКлиенте
Процедура ИспользоватьВнутреннееПотреблениеПоНесколькимЗаказамПриИзменении(Элемент)
	
	СохранитьЗначениеКонстанты(Элемент.Имя);
	
	ПодключитьОбработчикОжиданияОбновленияИнтерфейса();
	
КонецПроцедуры

&НаКлиенте
Процедура ИспользоватьЗаказыНаСборкуПриИзменении(Элемент)
	
	СохранитьЗначениеКонстанты(Элемент.Имя);
	
	ПодключитьОбработчикОжиданияОбновленияИнтерфейса();
	
КонецПроцедуры

&НаКлиенте
Процедура ИспользоватьИмпортныеЗакупкиПриИзменении(Элемент)
	
	СохранитьЗначениеКонстанты(Элемент.Имя);
	
	ПодключитьОбработчикОжиданияОбновленияИнтерфейса();
	
КонецПроцедуры

&НаКлиенте
Процедура ИспользоватьСогласованиеЗаказовПоставщикамПриИзменении(Элемент)
	
	СохранитьЗначениеКонстанты(Элемент.Имя);
	
	ПодключитьОбработчикОжиданияОбновленияИнтерфейса();
	
КонецПроцедуры

&НаКлиенте
Процедура ПланированиеПродажИВнутреннегоПотребленияПриИзменении(Элемент)
	
	СохранитьЗначениеКонстанты(Элемент.Имя);
	
	ПодключитьОбработчикОжиданияОбновленияИнтерфейса();
	
КонецПроцедуры

&НаКлиенте
Процедура ИспользоватьВнутреннееПотреблениеПриИзменении(Элемент)
	
	СохранитьЗначениеКонстанты(Элемент.Имя);
	
	ПодключитьОбработчикОжиданияОбновленияИнтерфейса();
	
КонецПроцедуры

&НаКлиенте
Процедура СборкаРазборкаПриИзменении(Элемент)
	
	СохранитьЗначениеКонстанты(Элемент.Имя);
	
	ПодключитьОбработчикОжиданияОбновленияИнтерфейса();
	
КонецПроцедуры

&НаКлиенте
Процедура ПрочееОприходованиеТоваровПриИзменении(Элемент)
	
	СохранитьЗначениеКонстанты(Элемент.Имя);
	
	ПодключитьОбработчикОжиданияОбновленияИнтерфейса();
	
КонецПроцедуры

&НаКлиенте
Процедура ИспользоватьСтатусыВозвратовТоваровПоставщикамПриИзменении(Элемент)
	
	СохранитьЗначениеКонстанты(Элемент.Имя);
	
	ПодключитьОбработчикОжиданияОбновленияИнтерфейса();
	
КонецПроцедуры

&НаКлиенте
Процедура ИспользоватьСтатусыВнутреннихПотребленийТоваровПриИзменении(Элемент)
	
	СохранитьЗначениеКонстанты(Элемент.Имя);
	
	ПодключитьОбработчикОжиданияОбновленияИнтерфейса();
	
КонецПроцедуры

&НаКлиенте
Процедура ИспользоватьСтатусыСборокТоваровПриИзменении(Элемент)
	
	СохранитьЗначениеКонстанты(Элемент.Имя);
	
	ПодключитьОбработчикОжиданияОбновленияИнтерфейса();
	
КонецПроцедуры

&НаКлиенте
Процедура ИспользоватьСтатусыЗаказовНаВнутреннееПотреблениеПриИзменении(Элемент)
	
	СохранитьЗначениеКонстанты(Элемент.Имя);
	
	ПодключитьОбработчикОжиданияОбновленияИнтерфейса();
	
КонецПроцедуры

&НаКлиенте
Процедура ИспользоватьСтатусыЗаказовНаСборкуПриИзменении(Элемент)
	
	СохранитьЗначениеКонстанты(Элемент.Имя);
	
	ПодключитьОбработчикОжиданияОбновленияИнтерфейса();
	
КонецПроцедуры

&НаКлиенте
Процедура ИспользоватьСтатусыЗаказовПоставщикамПриИзменении(Элемент)
	
	СохранитьЗначениеКонстанты(Элемент.Имя);
	
	ПодключитьОбработчикОжиданияОбновленияИнтерфейса();
	
КонецПроцедуры

&НаКлиенте
Процедура ИспользоватьПричиныОтменыЗаказовПоставщикамПриИзменении(Элемент)
	
	СохранитьЗначениеКонстанты(Элемент.Имя);
	
	ПодключитьОбработчикОжиданияОбновленияИнтерфейса();
	
КонецПроцедуры

&НаКлиенте
Процедура ИспользоватьСкладыВТабличнойЧастиДокументовЗакупкиПриИзменении(Элемент)
	
	СохранитьЗначениеКонстанты(Элемент.Имя);
	
	ПодключитьОбработчикОжиданияОбновленияИнтерфейса();
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ КОМАНД ФОРМЫ

&НаКлиенте
Процедура ВключитьВерсионированиеДокументовЗакупки(Команда)
	
	Если Не НаборКонстант.ИспользоватьВерсионированиеОбъектов Тогда
		НаборКонстант.ИспользоватьВерсионированиеОбъектов = Истина;
		
		СохранитьЗначениеКонстанты("ИспользоватьВерсионированиеОбъектов");
		
		ПодключитьОбработчикОжиданияОбновленияИнтерфейса();
	КонецЕсли;
	
	МассивТиповДокументовОбъектов = Новый Массив();
	
	Если НаборКонстант.ИспользоватьЗаказыПоставщикам Тогда
		МассивТиповДокументовОбъектов.Добавить("Документ.ЗаказПоставщику");
	КонецЕсли;
	
	ВерсионированиеДокументовВключено = ВключитьВерсионированиеОбъектовСервер(МассивТиповДокументовОбъектов, "ПриПроведении");
	
	Если ВерсионированиеДокументовВключено Тогда
		
		ПоказатьОповещениеПользователя(НСтр("ru = 'Версионирование включено'"),
		,
		НСтр("ru='Для документов заказов поставщику установлен вариант версионирования ""Версионировать при проведении""'"),
		БиблиотекаКартинок.Информация32);
		
		
		Элементы.ВключитьВерсионированиеДокументовЗакупки.Доступность = Ложь;
		
	Иначе
		
		ПоказатьОповещениеПользователя(НСтр("ru = 'Версионирование не включено'"),
		,
		НСтр("ru='Для документов заказов поставщику версионирование уже было включено'"),
		БиблиотекаКартинок.Информация32);
		
	КонецЕсли
	
	
КонецПроцедуры

&НаКлиенте
Процедура НазначитьОтветственныхЗаСогласованиеЛогистическихУсловийДокументовЗакупки(Команда)
	ОткрытьФорму("РегистрСведений.ИсполнителиЗадач.Форма.АдресацияПоОбъектуИРоли", 
	Новый Структура("ОсновнойОбъектАдресации,Роль", 
	Неопределено, 
	ПредопределенноеЗначение("Справочник.РолиИсполнителей.СогласующийЛогистическиеУсловияЗакупок")));
КонецПроцедуры

&НаКлиенте
Процедура НазначитьОтветственныхЗаСогласованиеФинансовыхУсловийДокументовЗакупки(Команда)
	ОткрытьФорму("РегистрСведений.ИсполнителиЗадач.Форма.АдресацияПоОбъектуИРоли", 
	Новый Структура("ОсновнойОбъектАдресации,Роль", 
	Неопределено, 
	ПредопределенноеЗначение("Справочник.РолиИсполнителей.СогласующийФинансовыеУсловияЗакупок")));
КонецПроцедуры

&НаКлиенте
Процедура НазначитьОтветственныхЗаСогласованиеЦеновыхУсловийДокументовЗакупки(Команда)
	ОткрытьФорму("РегистрСведений.ИсполнителиЗадач.Форма.АдресацияПоОбъектуИРоли", 
	Новый Структура("ОсновнойОбъектАдресации,Роль", 
	Неопределено, 
	ПредопределенноеЗначение("Справочник.РолиИсполнителей.СогласующийЦеновыеУсловияЗакупок")));
КонецПроцедуры

&НаКлиенте
Процедура НазначитьОтветственныхЗаСогласованиеКоммерческихУсловийДокументовЗакупки(Команда)
	ОткрытьФорму("РегистрСведений.ИсполнителиЗадач.Форма.АдресацияПоОбъектуИРоли", 
	Новый Структура("ОсновнойОбъектАдресации,Роль", 
	Неопределено, 
	ПредопределенноеЗначение("Справочник.РолиИсполнителей.СогласующийКоммерческиеУсловияЗакупок")));
КонецПроцедуры


////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

////////////////////////////////////////////////////////////////////////////////
// Прочее

&НаСервереБезКонтекста
Функция ВключитьВерсионированиеОбъектовСервер(МассивТиповОбъектов, ВариантВерсионирования = "Всегда")
	
	ПараметрыОпции = Новый Структура;
	
	ВерсионированиеВключено = Ложь;
	
	Если ВариантВерсионирования = "ПриПроведении" Тогда
		ПеречислениеВариантВерсионирования = Перечисления.ВариантыВерсионированияОбъектов.ВерсионироватьПриПроведении;
	ИначеЕсли ВариантВерсионирования = "Всегда" Тогда
		ПеречислениеВариантВерсионирования = Перечисления.ВариантыВерсионированияОбъектов.ВерсионироватьПриЗаписи;
	КонецЕсли;
	
	Для Каждого ТекЭлемент Из МассивТиповОбъектов Цикл
		
		ПараметрыОпции.Вставить("ТипОбъектаКонфигурации", ТекЭлемент);
		ИспользоватьВерсионированиеОбъекта = ПолучитьФункциональнуюОпцию("ИспользоватьВерсионированиеОбъекта", ПараметрыОпции);
		
		Если Не ИспользоватьВерсионированиеОбъекта Тогда
			
			ВерсионированиеОбъектов.ЗаписатьНастройкуВерсионированияПоОбъекту(ТекЭлемент, ПеречислениеВариантВерсионирования);
			ВерсионированиеВключено = Истина;
			
		КонецЕсли;
		
	КонецЦикла;
	
	Возврат ВерсионированиеВключено;
	
КонецФункции

////////////////////////////////////////////////////////////////////////////////
// Обновление интерфейса

&НаКлиенте 
Процедура ПодключитьОбработчикОжиданияОбновленияИнтерфейса()
	
	ТребуетсяОбновлениеИнтерфейса = Истина;
	
	#Если НЕ ВебКлиент Тогда
	ПодключитьОбработчикОжидания("ОбработчикОжиданияОбновленияИнтерфейса", 1, Истина);
	#КонецЕсли 
	
КонецПроцедуры

&НаКлиенте 
Процедура ОбработчикОжиданияОбновленияИнтерфейса()
	
	ОбновитьИнтерфейс();
	
	ТребуетсяОбновлениеИнтерфейса = Ложь;
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// Изменение реквизитов

&НаСервере
Процедура ИнициализироватьНачальныеЗначенияРеквизитов()
	
	// Инициализация набора констант
	НаборКонстантОбъект = ДанныеФормыВЗначение(НаборКонстант, Тип("КонстантыНабор"));
	НаборКонстантОбъект.Прочитать();
	ЗначениеВДанныеФормы(НаборКонстантОбъект, НаборКонстант);
	
	ЕстьОбменыСФормированиемДоговоровПоЗаказам = ОбменДаннымиПереопределяемыйУТУП.ЕстьОбменыСФормированиемДоговоровПоЗаказам();
	
КонецПроцедуры

&НаСервере 
Процедура СохранитьЗначениеКонстанты(ИмяКонстанты)
	
	УстановитьЗначениеКонстантыПоИмени(ИмяКонстанты);
	
	ОбновитьПовторноИспользуемыеЗначения();
	
	ВыполнитьМетодыПослеУстановкиЗначенияКонстанты(ИмяКонстанты);
	
КонецПроцедуры

&НаСервере 
Процедура ВыполнитьМетодыПослеУстановкиЗначенияКонстанты(ИмяКонстанты)
	
	ВариантыОтчетовУТПереопределяемый.НастроитьВариантыОтчетовПоФункциональнойОпции(ИмяКонстанты, НаборКонстант[ИмяКонстанты]);
	
КонецПроцедуры

&НаСервере 
Процедура УстановитьЗначениеКонстантыПоИмени(ИмяКонстанты)
	
	Если Константы[ИмяКонстанты].Получить() <> НаборКонстант[ИмяКонстанты] Тогда
		Константы[ИмяКонстанты].Установить(НаборКонстант[ИмяКонстанты]);
	КонецЕсли;
	
	УстановитьВидимостьДоступностьЗависимыхЭлементовФормы(ИмяКонстанты);
	
	УстановитьЗначенияЗависимыхКонстант(ИмяКонстанты);
	
КонецПроцедуры

&НаСервере 
Процедура УстановитьЗначенияЗависимыхКонстант(ИмяРодительскойКонстанты)
	
	Если ИмяРодительскойКонстанты = "ИспользоватьЗаказыПоставщикам" Тогда
		
		Если Не НаборКонстант.ИспользоватьЗаказыПоставщикам Тогда
			
			НаборКонстант.ИспользоватьСогласованиеЗаказовПоставщикам        = Ложь;
			НаборКонстант.ИспользоватьПоступлениеПоНесколькимЗаказам        = Ложь;
			НаборКонстант.НеЗакрыватьЗаказыПоставщикамБезПолногоПоступления = Ложь;
			НаборКонстант.НеЗакрыватьЗаказыПоставщикамБезПолнойОплаты       = Ложь;
			НаборКонстант.ИспользоватьСтатусыЗаказовПоставщикам             = Ложь;
			НаборКонстант.ИспользоватьПричиныОтменыЗаказовПоставщикам       = Ложь;
			
			УстановитьЗначениеКонстантыПоИмени("ИспользоватьСогласованиеЗаказовПоставщикам");
			УстановитьЗначениеКонстантыПоИмени("ИспользоватьПоступлениеПоНесколькимЗаказам");
			УстановитьЗначениеКонстантыПоИмени("НеЗакрыватьЗаказыПоставщикамБезПолногоПоступления");
			УстановитьЗначениеКонстантыПоИмени("НеЗакрыватьЗаказыПоставщикамБезПолнойОплаты");
			УстановитьЗначениеКонстантыПоИмени("ИспользоватьСтатусыЗаказовПоставщикам");
			УстановитьЗначениеКонстантыПоИмени("ИспользоватьПричиныОтменыЗаказовПоставщикам");
			
		КонецЕсли;
		
	ИначеЕсли ИмяРодительскойКонстанты = "ИспользоватьЗаказыНаВнутреннееПотребление" Тогда
		
		Если Не НаборКонстант.ИспользоватьЗаказыНаВнутреннееПотребление Тогда
			НаборКонстант.ИспользоватьВнутреннееПотреблениеПоНесколькимЗаказам = Ложь;
			УстановитьЗначениеКонстантыПоИмени("ИспользоватьВнутреннееПотреблениеПоНесколькимЗаказам");
		КонецЕсли;
		
	ИначеЕсли ИмяРодительскойКонстанты = "ИспользоватьСогласованиеЗаказовПоставщикам" Тогда
		
		Если НаборКонстант.ИспользоватьСогласованиеЗаказовПоставщикам Тогда
			НаборКонстант.ИспользоватьБизнесПроцессыИЗадачи = Истина;
			УстановитьЗначениеКонстантыПоИмени("ИспользоватьБизнесПроцессыИЗадачи");
		КонецЕсли;
		
	ИначеЕсли ИмяРодительскойКонстанты = "ИспользоватьВнутреннееПотребление" Тогда
		
		Если Не НаборКонстант.ИспользоватьВнутреннееПотребление Тогда
			НаборКонстант.ИспользоватьЗаказыНаВнутреннееПотребление            = Ложь;
			НаборКонстант.ИспользоватьВнутреннееПотреблениеПоНесколькимЗаказам = Ложь;
			НаборКонстант.ИспользоватьСтатусыВнутреннихПотребленийТоваров      = Ложь;
			
			УстановитьЗначениеКонстантыПоИмени("ИспользоватьЗаказыНаВнутреннееПотребление");
			УстановитьЗначениеКонстантыПоИмени("ИспользоватьВнутреннееПотреблениеПоНесколькимЗаказам");
			УстановитьЗначениеКонстантыПоИмени("ИспользоватьСтатусыВнутреннихПотребленийТоваров");
		КонецЕсли;
		
	ИначеЕсли ИмяРодительскойКонстанты = "ИспользоватьСборкуРазборку" Тогда
		
		Если Не НаборКонстант.ИспользоватьСборкуРазборку Тогда
			НаборКонстант.ИспользоватьЗаказыНаСборку            = Ложь;
			НаборКонстант.ИспользоватьСтатусыСборокТоваров      = Ложь;
			
			УстановитьЗначениеКонстантыПоИмени("ИспользоватьЗаказыНаСборку");
			УстановитьЗначениеКонстантыПоИмени("ИспользоватьСтатусыСборокТоваров");
		КонецЕсли;
		
	ИначеЕсли ИмяРодительскойКонстанты = "ИспользоватьСтатусыЗаказовПоставщикам" Тогда
		
		Если НЕ НаборКонстант.ИспользоватьСтатусыЗаказовПоставщикам Тогда
			НаборКонстант.ИспользоватьСогласованиеЗаказовПоставщикам = Ложь;
			НаборКонстант.НеЗакрыватьЗаказыПоставщикамБезПолногоПоступления = Ложь;
			НаборКонстант.НеЗакрыватьЗаказыПоставщикамБезПолнойОплаты = Ложь;

			УстановитьЗначениеКонстантыПоИмени("ИспользоватьСогласованиеЗаказовПоставщикам");
			УстановитьЗначениеКонстантыПоИмени("НеЗакрыватьЗаказыПоставщикамБезПолногоПоступления");
			УстановитьЗначениеКонстантыПоИмени("НеЗакрыватьЗаказыПоставщикамБезПолнойОплаты");
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура УстановитьВидимостьДоступностьЗависимыхЭлементовФормы(ИмяКонстанты = Неопределено)
	
	// Настройки, выполняемые однократно, только при создании формы
	Если ИмяКонстанты = Неопределено Тогда
		
		Элементы.ИспользоватьСкладыВТабличнойЧастиДокументовЗакупки.Доступность = НаборКонстант.ИспользоватьНесколькоСкладов;
		Элементы.ГруппаКомментарийИспользоватьСкладыВТабличнойЧастиДокументовЗакупки.Видимость = Не НаборКонстант.ИспользоватьНесколькоСкладов;
		
	КонецЕсли;
	
	// Настройки, выполняемые при создании формы и при изменении соответствующего элемента формы
	Если ИмяКонстанты = "ИспользоватьВнутреннееПотребление" Или ИмяКонстанты = Неопределено Тогда
		Элементы.ИспользоватьЗаказыНаВнутреннееПотребление.Доступность 			  = НаборКонстант.ИспользоватьВнутреннееПотребление;
		Элементы.ИспользоватьВнутреннееПотреблениеПоНесколькимЗаказам.Доступность = НаборКонстант.ИспользоватьВнутреннееПотребление;
		Элементы.ИспользоватьСтатусыВнутреннихПотребленийТоваров.Доступность 	  = НаборКонстант.ИспользоватьВнутреннееПотребление;
	КонецЕсли;
	
	Если ИмяКонстанты = "ИспользоватьСборкуРазборку" Или ИмяКонстанты = Неопределено Тогда
		Элементы.ИспользоватьЗаказыНаСборку.Доступность 	  = НаборКонстант.ИспользоватьСборкуРазборку;
		Элементы.ИспользоватьСтатусыСборокТоваров.Доступность = НаборКонстант.ИспользоватьСборкуРазборку;
	КонецЕсли;
	
	Если ИмяКонстанты = "ИспользоватьЗаказыПоставщикам" Или ИмяКонстанты = Неопределено Тогда
		Элементы.ИспользоватьПоступлениеПоНесколькимЗаказам.Доступность 				= НаборКонстант.ИспользоватьЗаказыПоставщикам И НЕ (НаборКонстант.ИспользоватьСинхронизациюДанных И ЕстьОбменыСФормированиемДоговоровПоЗаказам);
		Элементы.НеЗакрыватьЗаказыПоставщикамБезПолногоПоступления.Доступность 			= НаборКонстант.ИспользоватьЗаказыПоставщикам И НаборКонстант.ИспользоватьСтатусыЗаказовПоставщикам;
		Элементы.НеЗакрыватьЗаказыПоставщикамБезПолнойОплаты.Доступность				= НаборКонстант.ИспользоватьЗаказыПоставщикам И НаборКонстант.ИспользоватьСтатусыЗаказовПоставщикам;
		Элементы.ИспользоватьСогласованиеЗаказовПоставщикам.Доступность 				= НаборКонстант.ИспользоватьЗаказыПоставщикам И НаборКонстант.ИспользоватьСтатусыЗаказовПоставщикам;
		Элементы.ГруппаКомментарийИспользоватьПоступлениеПоНесколькимЗаказам.Видимость 	= НаборКонстант.ИспользоватьСинхронизациюДанных И ЕстьОбменыСФормированиемДоговоровПоЗаказам;
		Элементы.ИспользоватьСтатусыЗаказовПоставщикам.Доступность                      = НаборКонстант.ИспользоватьЗаказыПоставщикам;
		Элементы.ИспользоватьПричиныОтменыЗаказовПоставщикам.Доступность                = НаборКонстант.ИспользоватьЗаказыПоставщикам;
	КонецЕсли;
		
	Если ИмяКонстанты = "ИспользоватьЗаказыНаВнутреннееПотребление" Или ИмяКонстанты = Неопределено Тогда
		Элементы.ИспользоватьВнутреннееПотреблениеПоНесколькимЗаказам.Доступность = НаборКонстант.ИспользоватьЗаказыНаВнутреннееПотребление;
		Элементы.ИспользоватьСтатусыЗаказовНаВнутреннееПотребление.Доступность    = НаборКонстант.ИспользоватьЗаказыНаВнутреннееПотребление;
	КонецЕсли;
		
	Если ИмяКонстанты = "ИспользоватьСогласованиеЗаказовПоставщикам" Или ИмяКонстанты = Неопределено Тогда
		Элементы.НазначитьОтветственныхЗаСогласованиеЛогистическихУсловийДокументовЗакупки.Доступность = НаборКонстант.ИспользоватьСогласованиеЗаказовПоставщикам;
		Элементы.НазначитьОтветственныхЗаСогласованиеФинансовыхУсловийДокументовЗакупки.Доступность    = НаборКонстант.ИспользоватьСогласованиеЗаказовПоставщикам;
		Элементы.НазначитьОтветственныхЗаСогласованиеЦеновыхУсловийДокументовЗакупки.Доступность       = НаборКонстант.ИспользоватьСогласованиеЗаказовПоставщикам;
		Элементы.НазначитьОтветственныхЗаСогласованиеКоммерческихУсловийДокументовЗакупки.Доступность  = НаборКонстант.ИспользоватьСогласованиеЗаказовПоставщикам;
		Элементы.ВключитьВерсионированиеДокументовЗакупки.Доступность                                  = НаборКонстант.ИспользоватьСогласованиеЗаказовПоставщикам;
	КонецЕсли;
	
	Если ИмяКонстанты = "ИспользоватьЗаказыНаСборку" Или ИмяКонстанты = Неопределено Тогда
		
		Элементы.ИспользоватьСтатусыЗаказовНаСборку.Доступность = НаборКонстант.ИспользоватьЗаказыНаСборку;
		
	КонецЕсли;
	
	Если ИмяКонстанты = "ИспользоватьСтатусыЗаказовПоставщикам" Или ИмяКонстанты = Неопределено Тогда
		
		Элементы.ИспользоватьСогласованиеЗаказовПоставщикам.Доступность           = НаборКонстант.ИспользоватьЗаказыПоставщикам И НаборКонстант.ИспользоватьСтатусыЗаказовПоставщикам;
		Элементы.НеЗакрыватьЗаказыПоставщикамБезПолногоПоступления.Доступность = НаборКонстант.ИспользоватьСтатусыЗаказовПоставщикам;
		Элементы.НеЗакрыватьЗаказыПоставщикамБезПолнойОплаты.Доступность       = НаборКонстант.ИспользоватьСтатусыЗаказовПоставщикам;
		
	КонецЕсли;
	
КонецПроцедуры
