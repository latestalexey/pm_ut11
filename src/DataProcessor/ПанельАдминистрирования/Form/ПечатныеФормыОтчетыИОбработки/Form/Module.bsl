
////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ИнициализироватьНачальныеЗначенияРеквизитов();
	
	УстановитьВидимостьДоступностьЗависимыхЭлементовФормы();
	
КонецПроцедуры

&НаКлиенте
Процедура ПриЗакрытии()
	
	Если ТребуетсяОбновлениеИнтерфейса Тогда
		ОбновитьИнтерфейс();
	КонецЕсли;
	
КонецПроцедуры


////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ ШАПКИ ФОРМЫ

&НаКлиенте
Процедура ДополнительнаяКолонкаПечатныхФормДокументовПриИзменении(Элемент)
	
	СохранитьЗначениеКонстанты(Элемент.Имя);
	
КонецПроцедуры

&НаКлиенте
Процедура ИспользоватьШтрихкодированиеПечатныхФормОбъектовПриИзменении(Элемент)
	
	СохранитьЗначениеКонстанты(Элемент.Имя);
	
КонецПроцедуры

&НаКлиенте
Процедура ИспользоватьТТНПриИзменении(Элемент)
	
	СохранитьЗначениеКонстанты(Элемент.Имя);
	
	ПодключитьОбработчикОжиданияОбновленияИнтерфейса();
	
КонецПроцедуры

&НаКлиенте
Процедура ВыводитьБазовыеЕдиницыИзмеренияПриИзменении(Элемент)
	
	СохранитьЗначениеКонстанты(Элемент.Имя);
	
КонецПроцедуры

&НаКлиенте
Процедура ИспользоватьМониторингЦелевыхПоказателейПриИзменении(Элемент)
	
	СохранитьЗначениеКонстанты(Элемент.Имя);
	
	ПодключитьОбработчикОжиданияОбновленияИнтерфейса();
	
КонецПроцедуры

&НаКлиенте
Процедура ВестиОтдельнуюНумерациюСчетовФактурНаАвансыПриИзменении(Элемент)
	
	СохранитьЗначениеКонстанты(Элемент.Имя);
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ КОМАНД ФОРМЫ

&НаКлиенте
Процедура ОткрытьМакетыПечатныхФорм(Команда)
	
	ОткрытьФорму("РегистрСведений.ПользовательскиеМакетыПечати.ФормаСписка", , ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьВариантыОтчетов(Команда)
	
	ОткрытьФорму("Справочник.ВариантыОтчетов.ФормаСписка", , ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьРассылкиОтчетов(Команда)
	
	ОткрытьФорму("Справочник.РассылкиОтчетов.ФормаСписка", , ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьДополнительныеОтчетыИОбработки(Команда)
	
	ОткрытьФорму("Справочник.ДополнительныеОтчетыИОбработки.ФормаСписка", , ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьШаблоныЭтикетокИЦенников(Команда)
	
	ОткрытьФорму("Справочник.ШаблоныЭтикетокИЦенников.ФормаСписка", , ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьНастрокиПечатиОбъектов(Команда)
	
	ОткрытьФорму("РегистрСведений.НастройкиПечатиОбъектов.ФормаСписка", , ЭтаФорма);
	
КонецПроцедуры


////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

////////////////////////////////////////////////////////////////////////////////
// Обновление интерфейса

&НаКлиенте 
Процедура ПодключитьОбработчикОжиданияОбновленияИнтерфейса()
	
	ТребуетсяОбновлениеИнтерфейса = Истина;
	
	#Если НЕ ВебКлиент Тогда
	ПодключитьОбработчикОжидания("ОбработчикОжиданияОбновленияИнтерфейса", 1, Истина);
	#КонецЕсли 
	
КонецПроцедуры

&НаКлиенте 
Процедура ОбработчикОжиданияОбновленияИнтерфейса()
	
	ОбновитьИнтерфейс();
	
	ТребуетсяОбновлениеИнтерфейса = Ложь;
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// Изменение реквизитов

&НаСервере
Процедура ИнициализироватьНачальныеЗначенияРеквизитов()
	
	// Инициализация набора констант
	НаборКонстантОбъект = ДанныеФормыВЗначение(НаборКонстант, Тип("КонстантыНабор"));
	НаборКонстантОбъект.Прочитать();
	ЗначениеВДанныеФормы(НаборКонстантОбъект, НаборКонстант);
	
КонецПроцедуры

&НаСервере 
Процедура СохранитьЗначениеКонстанты(ИмяКонстанты)
	
	УстановитьЗначениеКонстантыПоИмени(ИмяКонстанты);
	
	ОбновитьПовторноИспользуемыеЗначения();
	
	ВыполнитьМетодыПослеУстановкиЗначенияКонстанты(ИмяКонстанты);
	
КонецПроцедуры

&НаСервере 
Процедура ВыполнитьМетодыПослеУстановкиЗначенияКонстанты(ИмяКонстанты)
	
КонецПроцедуры

&НаСервере 
Процедура УстановитьЗначениеКонстантыПоИмени(ИмяКонстанты)
	
	Если Константы[ИмяКонстанты].Получить() <> НаборКонстант[ИмяКонстанты] Тогда
		Константы[ИмяКонстанты].Установить(НаборКонстант[ИмяКонстанты]);
	КонецЕсли;
	
	УстановитьВидимостьДоступностьЗависимыхЭлементовФормы(ИмяКонстанты);
	
	УстановитьЗначенияЗависимыхКонстант(ИмяКонстанты);
	
КонецПроцедуры

&НаСервере 
Процедура УстановитьЗначенияЗависимыхКонстант(ИмяРодительскойКонстанты)
	
КонецПроцедуры

&НаСервере
Процедура УстановитьВидимостьДоступностьЗависимыхЭлементовФормы(ИмяКонстанты = Неопределено)
	
	// Настройки, выполняемые однократно, только при создании формы
	Если ИмяКонстанты = Неопределено Тогда
		
	КонецЕсли;
	
	// Настройки, выполняемые при создании формы и при изменении соответствующего элемента формы
	
КонецПроцедуры
