
////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ИнициализироватьНачальныеЗначенияРеквизитов();
	
	УстановитьВидимостьДоступностьЗависимыхЭлементовФормы();
	
КонецПроцедуры

&НаКлиенте
Процедура ПриЗакрытии()
	
	Если ТребуетсяОбновлениеИнтерфейса Тогда
		ОбновитьИнтерфейс();
	КонецЕсли;
	
КонецПроцедуры


////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ ШАПКИ ФОРМЫ

&НаКлиенте
Процедура ИспользоватьСинхронизациюДанныхПриИзменении(Элемент)
	
	СохранитьЗначениеКонстанты(Элемент.Имя);
	
	Если НаборКонстант.ИспользоватьСинхронизациюДанных Тогда
		
		СтрокаСообщения = НСтр("ru = 'Для использования обмена данными рекомендуется включить использование Журнала регистрации
		|В противном случае, запись событий в Журнал регистрации не будет произведена. 
		|Включить сейчас?'");
		ОбщегоНазначенияКлиент.ПроверитьВключениеЖурналаРегистрации( , , СтрокаСообщения);
		
	КонецЕсли;
	
	ПодключитьОбработчикОжиданияОбновленияИнтерфейса();
	
КонецПроцедуры

&НаКлиенте
Процедура ПрефиксУзлаРаспределеннойИнформационнойБазыПриИзменении(Элемент)
	
	СохранитьЗначениеКонстанты(Элемент.Имя);
	
	ПодключитьОбработчикОжиданияОбновленияИнтерфейса();
	
КонецПроцедуры

&НаКлиенте
Процедура ИспользоватьОбменССайтамиПриИзменении(Элемент)
	
	СохранитьЗначениеКонстанты(Элемент.Имя);
	
	ПодключитьОбработчикОжиданияОбновленияИнтерфейса();
	
КонецПроцедуры

&НаКлиенте
Процедура КластерСервера1СПредприятияРазвернутНаНесколькихМашинахПриИзменении(Элемент)
	
	Элементы.ГруппаВременныеКаталоги.Видимость = КластерСервера1СПредприятияРазвернутНаНесколькихМашинах;
	
	УстановитьЗначенияЗависимыхКонстант(Элемент.Имя);
	
КонецПроцедуры

&НаКлиенте
Процедура КаталогВременныхФайловДляWindowsПриИзменении(Элемент)
	
	СохранитьЗначениеКонстанты(Элемент.Имя);
	
КонецПроцедуры

&НаКлиенте
Процедура КаталогВременныхФайловДляLinuxПриИзменении(Элемент)
	
	СохранитьЗначениеКонстанты(Элемент.Имя);
	
КонецПроцедуры


////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ КОМАНД ФОРМЫ

&НаКлиенте
Процедура ОткрытьОбменыДанными(Команда)
	
	ОткрытьФорму("ОбщаяФорма.ОбменыДанными", , ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьДатыЗапретаЗагрузкиДанных(Команда)
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("ДатыЗапретаЗагрузкиДанных", Истина);
	ОткрытьФорму("РегистрСведений.ДатыЗапретаИзменения.Форма.ДатыЗапретаИзменения", ПараметрыФормы, ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьУзлыОбменаССайтами(Команда)
	
	ОткрытьФорму("ПланОбмена.ОбменУправлениеТорговлейСайт.ФормаСписка", , ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьРеестрНормативноСправочнойИнформации(Команда)
	
	ОткрытьФорму("Отчет.РеестрНормативноСправочнойИнформации.Форма", , ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьРеестрУчетныхДанных(Команда)
	
	ОткрытьФорму("Отчет.РеестрУчетныхДанных.Форма", , ЭтаФорма);
	
КонецПроцедуры


////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

////////////////////////////////////////////////////////////////////////////////
// Обновление интерфейса

&НаКлиенте 
Процедура ПодключитьОбработчикОжиданияОбновленияИнтерфейса()
	
	ТребуетсяОбновлениеИнтерфейса = Истина;
	
	#Если НЕ ВебКлиент Тогда
	ПодключитьОбработчикОжидания("ОбработчикОжиданияОбновленияИнтерфейса", 1, Истина);
	#КонецЕсли 
	
КонецПроцедуры

&НаКлиенте 
Процедура ОбработчикОжиданияОбновленияИнтерфейса()
	
	ОбновитьИнтерфейс();
	
	ТребуетсяОбновлениеИнтерфейса = Ложь;
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// Изменение реквизитов

&НаСервере
Процедура ИнициализироватьНачальныеЗначенияРеквизитов()
	
	// Инициализация набора констант
	НаборКонстантОбъект = ДанныеФормыВЗначение(НаборКонстант, Тип("КонстантыНабор"));
	НаборКонстантОбъект.Прочитать();
	ЗначениеВДанныеФормы(НаборКонстантОбъект, НаборКонстант);
	
	КластерСервера1СПредприятияРазвернутНаНесколькихМашинах =
		ЗначениеЗаполнено(НаборКонстант.КаталогВременныхФайловДляWindows)
		ИЛИ ЗначениеЗаполнено(НаборКонстант.КаталогВременныхФайловДляLinux);
	
КонецПроцедуры

&НаСервере 
Процедура СохранитьЗначениеКонстанты(ИмяКонстанты)
	
	УстановитьЗначениеКонстантыПоИмени(ИмяКонстанты);
	
	ОбновитьПовторноИспользуемыеЗначения();
	
	ВыполнитьМетодыПослеУстановкиЗначенияКонстанты(ИмяКонстанты);
	
КонецПроцедуры

&НаСервере 
Процедура ВыполнитьМетодыПослеУстановкиЗначенияКонстанты(ИмяКонстанты)
	
КонецПроцедуры

&НаСервере 
Процедура УстановитьЗначениеКонстантыПоИмени(ИмяКонстанты)
	
	Если Константы[ИмяКонстанты].Получить() <> НаборКонстант[ИмяКонстанты] Тогда
		Константы[ИмяКонстанты].Установить(НаборКонстант[ИмяКонстанты]);
	КонецЕсли;
	
	УстановитьВидимостьДоступностьЗависимыхЭлементовФормы(ИмяКонстанты);
	
	УстановитьЗначенияЗависимыхКонстант(ИмяКонстанты);
	
КонецПроцедуры

&НаСервере 
Процедура УстановитьЗначенияЗависимыхКонстант(ИмяРодительскойКонстанты)
	
	Если ИмяРодительскойКонстанты = "КластерСервера1СПредприятияРазвернутНаНесколькихМашинах" Тогда
		
		Если Не КластерСервера1СПредприятияРазвернутНаНесколькихМашинах Тогда
			
			Если ЗначениеЗаполнено(НаборКонстант.КаталогВременныхФайловДляLinux) Тогда
				НаборКонстант.КаталогВременныхФайловДляLinux = "";
				УстановитьЗначениеКонстантыПоИмени("КаталогВременныхФайловДляLinux");
			КонецЕсли;
			
			Если ЗначениеЗаполнено(НаборКонстант.КаталогВременныхФайловДляWindows) Тогда
				НаборКонстант.КаталогВременныхФайловДляWindows = "";
				УстановитьЗначениеКонстантыПоИмени("КаталогВременныхФайловДляWindows");
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура УстановитьВидимостьДоступностьЗависимыхЭлементовФормы(ИмяКонстанты = Неопределено)
	
	// Настройки, выполняемые однократно, только при создании формы
	Если ИмяКонстанты = Неопределено Тогда
		Элементы.ИспользоватьОбменССайтами.Доступность 			  	 = НаборКонстант.ИспользоватьДополнительныеРеквизитыИСведения;
		Элементы.ГруппаКомментарийОбменаДаннымиССайтами.Видимость 	 = НЕ НаборКонстант.ИспользоватьДополнительныеРеквизитыИСведения;
		Элементы.ГруппаУправлениеКаталогамиСообщенийОбмена.Видимость = НЕ ОбщегоНазначения.ИнформационнаяБазаФайловая();;
	КонецЕсли;
	
	// Настройки, выполняемые при создании формы и при изменении соответствующего элемента формы
	Если ИмяКонстанты = "ИспользоватьСинхронизациюДанных" Или ИмяКонстанты = Неопределено Тогда
		Элементы.ПрефиксУзлаРаспределеннойИнформационнойБазы.Доступность	= НаборКонстант.ИспользоватьСинхронизациюДанных;
		Элементы.ОткрытьОбменыДанными.Доступность							= НаборКонстант.ИспользоватьСинхронизациюДанных;
		Элементы.ОткрытьДатыЗапретаЗагрузкиДанных.Доступность				= НаборКонстант.ИспользоватьСинхронизациюДанных;
	КонецЕсли;
		
	Если ИмяКонстанты = "ИспользоватьОбменССайтами" Или ИмяКонстанты = Неопределено Тогда
		Элементы.ОткрытьУзлыОбменаССайтами.Доступность = НаборКонстант.ИспользоватьОбменССайтами;
	КонецЕсли;
		
	Если ИмяКонстанты = "КластерСервера1СПредприятияРазвернутНаНесколькихМашинах" Или ИмяКонстанты = Неопределено Тогда
		Элементы.ГруппаВременныеКаталоги.Видимость = КластерСервера1СПредприятияРазвернутНаНесколькихМашинах;
	КонецЕсли;
	
КонецПроцедуры
