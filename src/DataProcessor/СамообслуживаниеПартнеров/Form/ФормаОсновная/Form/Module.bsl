////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// Пропускаем инициализацию, чтобы гарантировать получение формы при передаче параметра "АвтоТест".
	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;
	КонецЕсли;

	
	Партнер = ПартнерыИКонтрагентыВызовСервера.ПолучитьАвторизовавшегосяПартнера();
	
	Если Партнер = Неопределено ИЛИ Партнер.Пустая() Тогда
		Отказ = Истина;
		Возврат;
	КонецЕсли;
	
	ЗаполнитьПриветственнуюИнформацию();
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ ШАПКИ ФОРМЫ

&НаКлиенте
Процедура ПриветственнаяИнформацияПриНажатии(Элемент, ДанныеСобытия, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	Если СтрЧислоВхождений(ДанныеСобытия.Href,"cart") > 0 Тогда
		ОткрытьФорму("Обработка.СамообслуживаниеПартнеров.Форма.КорзинаПокупателя",
		,
		ПолучитьОкна()[0],
		,
		ПолучитьОкна()[0]);
	ИначеЕсли  СтрЧислоВхождений(ДанныеСобытия.Href,"orders") > 0 Тогда
		
		ОткрытьФорму("Обработка.СамообслуживаниеПартнеров.Форма.СписокЗаказов",
		,
		ПолучитьОкна()[0],
		,
		ПолучитьОкна()[0]);
		
	КонецЕсли;
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

&НаСервере
Процедура ЗаполнитьПриветственнуюИнформацию()
	
	ПриветственнаяИнформация = Обработки.СамообслуживаниеПартнеров.ПолучитьМакет("ГлавнаяСтраница").ПолучитьТекст();
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	Партнеры.НаименованиеПолное,
	|	Партнеры.Наименование
	|ИЗ
	|	Справочник.Партнеры КАК Партнеры
	|ГДЕ
	|	Партнеры.Ссылка = &Партнер
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	КОЛИЧЕСТВО(ВложенныйЗапрос.Номенклатура) КАК КоличествоТоваров
	|ИЗ
	|	(ВЫБРАТЬ РАЗЛИЧНЫЕ
	|		КорзинаПокупателя.Номенклатура КАК Номенклатура,
	|		КорзинаПокупателя.Характеристика КАК Характеристика
	|	ИЗ
	|		РегистрСведений.КорзинаПокупателя КАК КорзинаПокупателя
	|	ГДЕ
	|		КорзинаПокупателя.Партнер = &Партнер) КАК ВложенныйЗапрос
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ЗаказКлиента.Ссылка) КАК Количество
	|ИЗ
	|	Документ.ЗаказКлиента КАК ЗаказКлиента
	|ГДЕ
	|	ЗаказКлиента.Проведен
	|	И (НЕ ЗаказКлиента.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыЗаказовКлиентов.Закрыт))
	|	И ЗаказКлиента.Партнер = &Партнер
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВЫБОР
	|		КОГДА РасчетыСКлиентамиОстатки.СуммаОстаток > 0
	|			ТОГДА РасчетыСКлиентамиОстатки.СуммаОстаток
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК СуммаОстаток,
	|	ВЫБОР
	|		КОГДА РасчетыСКлиентамиОстатки.КОплатеОстаток > 0
	|			ТОГДА РасчетыСКлиентамиОстатки.КОплатеОстаток
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК КОплатеОстаток,
	|	РасчетыСКлиентамиОстатки.Валюта
	|ИЗ
	|	РегистрНакопления.РасчетыСКлиентами.Остатки(&ТекущаяДата, ВЫРАЗИТЬ(ЗаказКлиента КАК Документ.ЗаказКлиента).Партнер = &Партнер) КАК РасчетыСКлиентамиОстатки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ПартнерыКонтактнаяИнформация.Представление,
	|	ПартнерыКонтактнаяИнформация.Тип,
	|	ПартнерыКонтактнаяИнформация.Вид
	|ИЗ
	|	Справочник.Партнеры.КонтактнаяИнформация КАК ПартнерыКонтактнаяИнформация
	|ГДЕ
	|	ПартнерыКонтактнаяИнформация.Ссылка = &Партнер";
	
	Запрос.УстановитьПараметр("Партнер",Партнер);
	Запрос.УстановитьПараметр("ТекущаяДата",ТекущаяДата());
	
	Результат = Запрос.ВыполнитьПакет();
	
	ВыборкаНаименование = Результат[0].Выбрать();
	Если ВыборкаНаименование.Следующий() Тогда
		НаименованиеПартнера 		= ?(ПустаяСтрока(ВыборкаНаименование.НаименованиеПолное),ВыборкаНаименование.Наименование,ВыборкаНаименование.НаименованиеПолное);
		ПриветственнаяИнформация 	= СтрЗаменить(ПриветственнаяИнформация,"#ПолноеНаименованиеПартнера#",НаименованиеПартнера);
	КонецЕсли;
	
	ВыборкаТоварыКорзины = Результат[1].Выбрать();
	Если ВыборкаТоварыКорзины.Следующий() Тогда
		ПриветственнаяИнформация 	= СтрЗаменить(ПриветственнаяИнформация,"#КоличествоТоваровВКорзине#",ВыборкаТоварыКорзины.КоличествоТоваров);
	Иначе
		ПриветственнаяИнформация 	= СтрЗаменить(ПриветственнаяИнформация,"#КоличествоТоваровВКорзине#",0);
	КонецЕсли;
	
	ВыборкаЗаказыВОбработке = Результат[2].Выбрать();
	Если ВыборкаЗаказыВОбработке.Следующий() Тогда
		ПриветственнаяИнформация 	= СтрЗаменить(ПриветственнаяИнформация,"#КоличествоОбрабатываемыхЗаказов#",ВыборкаЗаказыВОбработке.Количество);
	Иначе
		ПриветственнаяИнформация 	= СтрЗаменить(ПриветственнаяИнформация,"#КоличествоОбрабатываемыхЗаказов#",0);
	КонецЕсли;
	
	ВыборкаВзаиморасчеты = Результат[3].Выбрать();
	Если НЕ Результат[3].Пустой() Тогда
		СтрокаСуммаОстаток = "";
		СтрокаКОплатеОстаток = "";
		Пока ВыборкаВзаиморасчеты.Следующий() Цикл
			СтрокаСуммаОстаток = СтрокаСуммаОстаток + ?(ВыборкаВзаиморасчеты.СуммаОстаток > 0,Строка(ВыборкаВзаиморасчеты.СуммаОстаток) + " " + Строка(ВыборкаВзаиморасчеты.Валюта)+ " ","");
			СтрокаКОплатеОстаток = СтрокаКОплатеОстаток + ?(ВыборкаВзаиморасчеты.КОплатеОстаток > 0,Строка(ВыборкаВзаиморасчеты.КОплатеОстаток) + " " + Строка(ВыборкаВзаиморасчеты.Валюта)+ " ","");
		КонецЦикла; 
		ПриветственнаяИнформация 	= СтрЗаменить(ПриветственнаяИнформация,"#ТекущаяЗадолженность#",?(ПустаяСтрока(СтрокаСуммаОстаток),НСтр("ru = 'нет '"),СтрокаСуммаОстаток));
		ПриветственнаяИнформация 	= СтрЗаменить(ПриветственнаяИнформация,"#ТекущаяЗадолженностьОплатыПоЗаказам#",?(ПустаяСтрока(СтрокаКОплатеОстаток),НСтр("ru = 'нет '"),СтрокаКОплатеОстаток ));
	Иначе	
		ПриветственнаяИнформация 	= СтрЗаменить(ПриветственнаяИнформация,"#ТекущаяЗадолженность#",НСтр("ru = 'нет'"));
		ПриветственнаяИнформация 	= СтрЗаменить(ПриветственнаяИнформация,"#ТекущаяЗадолженностьОплатыПоЗаказам#",НСтр("ru = 'нет'"));
	КонецЕсли;
	
	Если Результат[4].Пустой() Тогда
		ПриветственнаяИнформация 	= СтрЗаменить(ПриветственнаяИнформация,"#КонтактнаяИнформация#",НСтр("ru = 'не указана.'"));
	Иначе
		СтрокаКИ = "";
		ВыборкаКИ = Результат[4].Выбрать();
		Пока ВыборкаКИ.Следующий() Цикл
			СтрокаКИ = СтрокаКИ + Строка(ВыборкаКИ.Вид) + ": " + Строка(ВыборкаКИ.Представление) + "<br>"
		КонецЦикла;
		ПриветственнаяИнформация 	= СтрЗаменить(ПриветственнаяИнформация,"#КонтактнаяИнформация#",?(ПустаяСтрока(СтрокаКИ),НСтр("ru = 'не указана.'"),СтрокаКИ));
	КонецЕсли;
	
КонецПроцедуры


