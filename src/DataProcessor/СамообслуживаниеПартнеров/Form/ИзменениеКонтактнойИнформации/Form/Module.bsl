
////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// Пропускаем инициализацию, чтобы гарантировать получение формы при передаче параметра "АвтоТест".
	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;
	КонецЕсли;
	
	Партнер = ПартнерыИКонтрагентыВызовСервера.ПолучитьАвторизовавшегосяПартнера();
	
	Если Партнер = Неопределено ИЛИ Партнер.Пустая() Тогда
		Отказ = Истина;
		Возврат;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	ПартнерыКонтактнаяИнформация.НомерСтроки КАК НомерСтроки,
	|	ПартнерыКонтактнаяИнформация.Тип,
	|	ПартнерыКонтактнаяИнформация.Вид,
	|	ПартнерыКонтактнаяИнформация.Представление,
	|	ПартнерыКонтактнаяИнформация.ЗначенияПолей,
	|	ПартнерыКонтактнаяИнформация.Страна,
	|	ПартнерыКонтактнаяИнформация.Регион,
	|	ПартнерыКонтактнаяИнформация.Город,
	|	ПартнерыКонтактнаяИнформация.АдресЭП,
	|	ПартнерыКонтактнаяИнформация.ДоменноеИмяСервера,
	|	ПартнерыКонтактнаяИнформация.НомерТелефона,
	|	ПартнерыКонтактнаяИнформация.НомерТелефонаБезКодов
	|ИЗ
	|	Справочник.Партнеры.КонтактнаяИнформация КАК ПартнерыКонтактнаяИнформация
	|ГДЕ
	|	ПартнерыКонтактнаяИнформация.Ссылка = &Партнер
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки";
	
	Запрос.УстановитьПараметр("Партнер",Партнер);
	
	КонтактнаяИнформация.Загрузить(Запрос.Выполнить().Выгрузить());
	
	//Обработчик механизма "Контактная информация"
	УправлениеКонтактнойИнформацией.ПриСозданииНаСервере(ЭтаФорма,СформироватьСтруктуруПартнера(), "ГруппаКонтактнаяИнформация");
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ ТАБЛИЦЫ ФОРМЫ КОНТАКТНАЯ ИНФОРМАЦИЯ

&НаКлиенте
Процедура Подключаемый_КонтактнаяИнформацияПриИзменении(Элемент)
	
	УправлениеКонтактнойИнформациейКлиент.ПредставлениеПриИзменении(ЭтаФорма, Элемент);
	
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_КонтактнаяИнформацияНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	УправлениеКонтактнойИнформациейКлиент.ПредставлениеНачалоВыбора(ЭтаФорма,
	                                                                Элемент,
	                                                                Модифицированность,
	                                                                СтандартнаяОбработка);
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ КОМАНД ФОРМЫ

&НаКлиенте
Процедура Сохранить(Команда)
	
	ЗаписатьКонтактнуюИнформациюПартнера();
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаписатьИЗакрыть(Команда)
	
	ЗаписатьКонтактнуюИнформациюПартнера();
	Закрыть();
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

&НаСервере
Функция СформироватьСтруктуруПартнера()
	
	СтруктрураПартнера = Новый Структура;
	СтруктрураПартнера.Вставить("Ссылка",Партнер);
	СтруктрураПартнера.Вставить("КонтактнаяИнформация",КонтактнаяИнформация.Выгрузить());
	
	Возврат СтруктрураПартнера;
	
КонецФункции

&НаСервере
Процедура ЗаписатьКонтактнуюИнформациюПартнера()
	
	СтруктураПартнера =  СформироватьСтруктуруПартнера();
	
	Отказ = Ложь;
	УправлениеКонтактнойИнформацией.ПередЗаписьюНаСервере(ЭтаФорма,СтруктураПартнера, Отказ);
	Если Отказ Тогда
		Возврат;
	КонецЕсли;
	
	Если Модифицированность Тогда
		СамообслуживаниеСервер.ЗаписатьКонтактнуюИнформациюПартнера(Партнер,СтруктураПартнера.КонтактнаяИнформация);
		Модифицированность = Ложь;
	КонецЕсли;
	
КонецПроцедуры



