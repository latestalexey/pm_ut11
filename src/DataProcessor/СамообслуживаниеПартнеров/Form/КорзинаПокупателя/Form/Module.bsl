&НаКлиенте
Перем КэшированныеЗначения; //используется механизмом обработки изменения реквизитов ТЧ

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// Пропускаем инициализацию, чтобы гарантировать получение формы при передаче параметра "АвтоТест".
	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;
	КонецЕсли;
	
	ИспользоватьСоглашенияСКлиентами = ПолучитьФункциональнуюОпцию("ИспользоватьСоглашенияСКлиентами");
	
	Партнер = ПартнерыИКонтрагентыВызовСервера.ПолучитьАвторизовавшегосяПартнера();
	
	Если Партнер = Неопределено ИЛИ Партнер.Пустая() Тогда
		Отказ = Истина;
		Возврат;
	КонецЕсли;
	
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "ЗакупкаПоКомиссии", "Видимость", НЕ ИспользоватьСоглашенияСКлиентами);
	
	ЗагрузитьНастройки();
	Если Соглашение.Пустая() Тогда
		УстановитьРеквизитыФормыПоВыборке(СамообслуживаниеСервер.ПолучитьСоглашениеПартнераПоУмолчанию(Партнер, ХозяйственнаяОперация));
	КонецЕсли;
	
	КешироватьРеквизитыСклад();
	
	ЗаполнитьТаблицуКорзиныПоДаннымРегистра();
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	ПересчитатьИтоги();
	УправлениеДоступностью();
	
КонецПроцедуры

&НаКлиенте
Процедура ПриЗакрытии()
	
	ВыполнитьДействияПриЗакрытииФормыНаСервере();
	СохранитьНастройки();
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаВыбора(ВыбранноеЗначение, ИсточникВыбора)
	
	Если ИсточникВыбора.ИмяФормы = "Обработка.ПодборТоваровВДокументПродажи.Форма.Форма" Тогда
		
		Если ТипЗнч(ВыбранноеЗначение) = Тип("Структура") И ВыбранноеЗначение.Свойство("АдресТоваровВХранилище") Тогда
			ОбработкаПодбораНоменклатурыКлиент(ВыбранноеЗначение.АдресТоваровВХранилище);
			ОбработатьИзмененииДанныхКорзины();
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если ИмяСобытия = "ЗаказОформлен" Тогда
		ЗаполнитьТаблицуКорзиныПоДаннымРегистра();
		Предупреждение(Нстр("ru='Ваш заказ оформлен, ознакомиться с текущим статусом ваших заказов можно в разделе Заказы.'"));
		ОбработатьИзмененииДанныхКорзины();
		Модифицированность = Ложь;
	КонецЕсли;
	
КонецПроцедуры


////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ ШАПКИ ФОРМЫ

&НаКлиенте
Процедура СоглашениеНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	РезультатВыбора = ОткрытьФормуМодально("Обработка.СамообслуживаниеПартнеров.Форма.ВыборСоглашения",Новый Структура("Партнер,Соглашение",Партнер,Соглашение),ЭтаФорма);
	Если РезультатВыбора <> Неопределено И РезультатВыбора.Соглашение <> Соглашение Тогда
		ЗаполнитьЗначенияСвойств(ЭтаФорма,РезультатВыбора);
		Если КорзинаПокупателя.Количество() > 0 Тогда
			ЗаполнитьТаблицуКорзиныПриИзмененииРеквизитовШапки();
		КонецЕсли;
	КонецЕсли;
	
	ОбработатьИзмененииДанныхКорзины();
	
КонецПроцедуры

&НаКлиенте
Процедура СоглашениеОчистка(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
КонецПроцедуры

&НаКлиенте
Процедура СкладПриИзменении(Элемент)
	
	УправлениеДоступностью();
	ЗаполнитьТаблицуКорзиныПриИзмененииРеквизитовШапки();
	
КонецПроцедуры

&НаКлиенте
Процедура ЗакупкаПоКомиссииПриИзменении(Элемент)
	
	Если ЗакупкаПоКомиссии Тогда
		ХозяйственнаяОперация = ПредопределенноеЗначение("Перечисление.ХозяйственныеОперации.ПередачаНаКомиссию");
	Иначе
		ХозяйственнаяОперация = ПредопределенноеЗначение("Перечисление.ХозяйственныеОперации.РеализацияКлиенту");
	КонецЕсли;
	ЗакупкаПоКомиссииПриИзмененииСервер();
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ ТАБЛИЦЫ ФОРМЫ КОРЗИНА ПОКУПАТЕЛЯ

 &НаКлиенте
Процедура КорзинаПокупателяУпаковкаПриИзменении(Элемент)
	
	ТекущаяСтрока = Элементы.КорзинаПокупателя.ТекущиеДанные;
	
	СтруктураНДС = Новый Структура("ЦенаВключаетНДС",ЦенаВключаетНДС);
	
	СтруктураДействий = Новый Структура;
	СтруктураДействий.Вставить("ПересчитатьКоличествоЕдиниц");
	
	Если ТекущаяСтрока.Количество > 0 Тогда
		СтруктураДействий.Вставить("ПересчитатьЦенуЗаУпаковку", ТекущаяСтрока.Количество);
	ИначеЕсли ЗначениеЗаполнено(ТекущаяСтрока.ВидЦены) Тогда
		СтруктураДействий.Вставить("ЗаполнитьЦенуПродажи",Новый Структура("Валюта,Дата",Валюта,ТекущаяДата()));
	КонецЕсли;
	
	СтруктураДействий.Вставить("ПересчитатьСуммуНДС", СтруктураНДС);
	СтруктураДействий.Вставить("ПересчитатьСумму");
	СтруктураДействий.Вставить("ПересчитатьСуммуСНДС", СтруктураНДС);
	
	ОбработкаТабличнойЧастиКлиент.ОбработатьСтрокуТЧ(ТекущаяСтрока, СтруктураДействий, КэшированныеЗначения);
	
КонецПроцедуры

&НаКлиенте
Процедура КорзинаПокупателяКоличествоУпаковокПриИзменении(Элемент)
	
	ТекущаяСтрока = Элементы.КорзинаПокупателя.ТекущиеДанные;
	
	СтруктураНДС = Новый Структура("ЦенаВключаетНДС",ЦенаВключаетНДС);
	
	СтруктураДействий = Новый Структура;
	СтруктураДействий.Вставить("ПересчитатьКоличествоЕдиниц");
	СтруктураДействий.Вставить("ПересчитатьСуммуНДС", СтруктураНДС);
	СтруктураДействий.Вставить("ПересчитатьСумму");
	СтруктураДействий.Вставить("ПересчитатьСуммуСНДС", СтруктураНДС);
	
	ОбработкаТабличнойЧастиКлиент.ОбработатьСтрокуТЧ(ТекущаяСтрока, СтруктураДействий, КэшированныеЗначения);
	
	Если СкладВариантКонтроля = ПредопределенноеЗначение("Перечисление.ВариантыКонтроля.ОстаткиСУчетомРезерва") 
		И (Не ТекущаяСтрока.Доступность = "Доступно под заказ") Тогда
		
		Если ТекущаяСтрока.Доступно > 0 Тогда
			Если ТекущаяСтрока.Количество/ТекущаяСтрока.Доступно < 0.5 Тогда
				ТекущаяСтрока.Доступность = НСтр("ru = 'В наличии'");
			Иначе 
				ТекущаяСтрока.Доступность = НСтр("ru = 'Требует уточнения'");
			КонецЕсли;
			
		Иначе
			ТекущаяСтрока.Доступность = НСтр("ru = 'Нет на складе'");
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура КорзинаПокупателяПриИзменении(Элемент)
	
	ОбработатьИзмененииДанныхКорзины();
	
КонецПроцедуры

&НаКлиенте
Процедура КорзинаПокупателяКОформлениюПриИзменении(Элемент)
	
	УправлениеДоступностью();
	
КонецПроцедуры

&НаКлиенте
Процедура КорзинаПокупателяПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа)
	
	Отказ = Истина;
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ КОМАНД ФОРМЫ

&НаКлиенте
Процедура ПодобратьТовары(Команда)
	
	ПараметрЗаголовок = НСтр("ru = 'Подбор товаров в корзину'");
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("Соглашение",                                 Соглашение);
	ПараметрыФормы.Вставить("Склад",                                      Склад);
	ПараметрыФормы.Вставить("Валюта",                                     Валюта);
	ПараметрыФормы.Вставить("Заголовок",                                  ПараметрЗаголовок);
	ПараметрыФормы.Вставить("ТолькоСЦенами",                              Истина);
	ПараметрыФормы.Вставить("СкрыватьКолонкуВидЦены",                     Истина);
	ПараметрыФормы.Вставить("СкрыватьКнопкуЗапрашиватьКоличество",        Истина);
	ПараметрыФормы.Вставить("СкрыватьКомандуЦеныНоменклатуры",            Истина);
	ПараметрыФормы.Вставить("СкрыватьКомандуОстаткиНаСкладах",            Истина);
	ПараметрыФормы.Вставить("ИспользоватьОтборПоИерархииНоменклатуры",    Истина);
	ПараметрыФормы.Вставить("СкрыватьНастройкуПодбора",                   Истина);
	ПараметрыФормы.Вставить("ИспользоватьОтборПоВидамНоменклатуры",       Истина);
	ПараметрыФормы.Вставить("НедоступностьФильтраПоСегментуНоменклатуры", Истина);
	ПараметрыФормы.Вставить("ПоказыватьПодобранныеТовары",                Истина);
	ПараметрыФормы.Вставить("СкрыватьВыборНоменклатуры",                  Истина);
	ПараметрыФормы.Вставить("СкрыватьРучныеСкидки",                       Истина);
	ПараметрыФормы.Вставить("ЗаголовокКнопкиПеренести",                   НСтр("ru='Перенести в корзину'"));
	ПараметрыФормы.Вставить("Дата",                                       ТекущаяДата());
	ПараметрыФормы.Вставить("Документ",                                   "СамообслуживаниеПартнеров");
	ПараметрыФормы.Вставить("СкрыватьПодакцизныеТовары",                  НалогообложениеНДС = ПредопределенноеЗначение("Перечисление.ТипыНалогообложенияНДС.ПродажаОблагаетсяЕНВД"));
	ПараметрыФормы.Вставить("ОтображатьФлагСкрыватьПодакцизныеТовары",    НалогообложениеНДС = ПредопределенноеЗначение("Перечисление.ТипыНалогообложенияНДС.ПродажаОблагаетсяЕНВД"));
	ПараметрыФормы.Вставить("ЗапрашиватьКоличество",                      Ложь);
	Если Не Соглашение.Пустая() Тогда
		СегментНоменклатуры = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Соглашение, "СегментНоменклатуры");
		ПараметрыФормы.Вставить("СегментНоменклатуры", СегментНоменклатуры);
	КонецЕсли;
	
	ОткрытьФорму("Обработка.ПодборТоваровВДокументПродажи.Форма", ПараметрыФормы, ЭтаФорма, УникальныйИдентификатор);
	ОбработатьИзмененииДанныхКорзины();
	
КонецПроцедуры

&НаКлиенте
Процедура ОформитьЗаказ(Команда)
	
	ВыполнитьЗаписьРегистрКорзинаПокупателя();
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("Партнер",Партнер);
	ПараметрыФормы.Вставить("Соглашение",Соглашение);
	ПараметрыФормы.Вставить("Склад",Склад);
	АдресКорзинаВременноеХранилище =АдресВременногоХранилищаСКорзиной();
	ПараметрыФормы.Вставить("АдресКорзины",АдресКорзинаВременноеХранилище);
	
	ОткрытьФорму("Обработка.СамообслуживаниеПартнеров.Форма.МастерОформленияЗаказа",ПараметрыФормы,ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура СохранитьДанныеКорзины(Команда)
	
	Если Модифицированность Тогда
		ВыполнитьЗаписьРегистрКорзинаПокупателя();
		Модифицированность = Ложь;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьПометкиКОформлению(Команда)
	
	Для каждого Строка Из КорзинаПокупателя Цикл
		Строка.КОформлению = Истина;
	КонецЦикла;
	ОбработатьИзмененииДанныхКорзины()
	
КонецПроцедуры

&НаКлиенте
Процедура СнятьПометкиКОформлению(Команда)
	
	Для каждого Строка Из КорзинаПокупателя  Цикл
		Строка.КОформлению = Ложь;
	КонецЦикла;
	ОбработатьИзмененииДанныхКорзины();
	
КонецПроцедуры

&НаКлиенте
Процедура ОстаткиПоСкладам(Команда)
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("ДанныеКорзины",КорзинаПокупателя);
	ПараметрыФормы.Вставить("Соглашение",Соглашение);
	
	ОткрытьФорму("Обработка.СамообслуживаниеПартнеров.Форма.ОстаткиПоСкладам", ПараметрыФормы, ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура ЦеныСуммыПоСоглашениям(Команда)
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("ДанныеКорзины",КорзинаПокупателя);
	ПараметрыФормы.Вставить("Партнер",Партнер);
	ПараметрыФормы.Вставить("Валюта",Валюта);
	ПараметрыФормы.Вставить("ЦенаВключаетНДС",ЦенаВключаетНДС);
	
	ОткрытьФорму("Обработка.СамообслуживаниеПартнеров.Форма.ЦеныСуммыПоСоглашениям", ПараметрыФормы, ЭтаФорма);
	
КонецПроцедуры


////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

////////////////////////////////////////////////////////////////////////////////
// Настройки

&НаСервере
Процедура СохранитьНастройки()
	
	Настройки = Новый Структура;
	Настройки.Вставить("Соглашение",Соглашение);
	Настройки.Вставить("Склад",Склад);
	
	ОбщегоНазначения.ХранилищеОбщихНастроекСохранить("Обработки.Самообслуживание", "КорзинаПокупателя", Настройки);
	
КонецПроцедуры

&НаСервере
Процедура ЗагрузитьНастройки()
	
	Перем СоглашениеСохраненныеНастройки;
	Перем СкладСохраненныеНастройки;
	
	ЗначениеНастроек = ОбщегоНазначения.ХранилищеОбщихНастроекЗагрузить("Обработки.Самообслуживание", "КорзинаПокупателя");
	Если ТипЗнч(ЗначениеНастроек) = Тип("Структура") И ЗначениеНастроек.Свойство("Соглашение") Тогда
		ЗначениеНастроек.Свойство("Соглашение",СоглашениеСохраненныеНастройки);
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(ХозяйственнаяОперация) Тогда
		ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.РеализацияКлиенту;
	КонецЕсли; 
	
	Если СоглашениеСохраненныеНастройки <> Неопределено И 
		НЕ СоглашениеСохраненныеНастройки.Пустая() Тогда
		
		ИспользоватьТиповыеСоглашенияСКлиентами			= ПолучитьФункциональнуюОпцию("ИспользоватьТиповыеСоглашенияСКлиентами");
		ИспользоватьИндивидуальныеСоглашенияСКлиентами	= ПолучитьФункциональнуюОпцию("ИспользоватьИндивидуальныеСоглашенияСКлиентами");
		ТолькоТиповые = ИспользоватьТиповыеСоглашенияСКлиентами И НЕ ИспользоватьИндивидуальныеСоглашенияСКлиентами;
		ТолькоИндивидуальные = НЕ ИспользоватьТиповыеСоглашенияСКлиентами И ИспользоватьИндивидуальныеСоглашенияСКлиентами;
		
		Если ТолькоТиповые И НЕ СоглашениеСохраненныеНастройки.Типовое
			ИЛИ ТолькоИндивидуальные И СоглашениеСохраненныеНастройки.Типовое Тогда
			СоглашениеСохраненныеНастройки = Неопределено;
			ЗначениеНастроек.Свойство("Соглашение",СоглашениеСохраненныеНастройки);
			Возврат;
		КонецЕсли;
		
		УстановитьРеквизитыФормыПоВыборке(СамообслуживаниеСервер.СоглашениеДействуетДляПартнера(СоглашениеСохраненныеНастройки,Партнер));
		
		ЗначениеНастроек.Свойство("Склад",СкладСохраненныеНастройки); 
		Если Склад.Пустая() И СкладСохраненныеНастройки <> Неопределено И НЕ СкладСохраненныеНастройки.Пустая() Тогда
			Запрос = Новый Запрос;
			Запрос.Текст = "ВЫБРАТЬ РАЗРЕШЕННЫЕ
			|	Склады.Ссылка
			|ИЗ
			|	Справочник.Склады КАК Склады
			|ГДЕ
			|	Склады.Ссылка = &Склад";
			
			Запрос.УстановитьПараметр("Склад",СкладСохраненныеНастройки);
			
			Выборка = Запрос.Выполнить().Выбрать();
			Если Выборка.Следующий() Тогда
				Склад = СкладСохраненныеНастройки;
			КонецЕсли;
		КонецЕсли;
		
	КонецЕсли;
	
	ЗакупкаПоКомиссии = (ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ПередачаНаКомиссию);
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// Формирование запросов

&НаСервере
Функция ТекстЗапросаДанныеКорзиныПоРегистру()
	
	Возврат "ВЫБРАТЬ
	|	КорзинаПокупателя.Номенклатура,
	|	КорзинаПокупателя.Характеристика,
	|	КорзинаПокупателя.Упаковка,
	|	КорзинаПокупателя.КоличествоУпаковок,
	|	КорзинаПокупателя.Цена КАК ЦенаКорзины,
	|	КорзинаПокупателя.ДатаПомещения,
	|	КорзинаПокупателя.Валюта,
	|	ВЫБОР
	|		КОГДА &НалогообложениеНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаОблагаетсяНДС)
	|			ТОГДА СпрНоменклатура.СтавкаНДС
	|		КОГДА &НалогообложениеНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаНаЭкспорт)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.НДС0)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.БезНДС)
	|	КОНЕЦ КАК СтавкаНДС,
	|	ВЫБОР
	|		КОГДА &НалогообложениеНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаОблагаетсяНДС)
	|			ТОГДА ВЫБОР
	|					КОГДА СпрНоменклатура.СтавкаНДС = ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.НДС18)
	|						ТОГДА 0.18
	|					КОГДА СпрНоменклатура.СтавкаНДС = ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.НДС10)
	|						ТОГДА 0.1
	|					ИНАЧЕ 0
	|				КОНЕЦ
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК ЗначениеСтавкиНДС,
	|	СпрНоменклатура.ЦеноваяГруппа,
	|	КорзинаПокупателя.КОформлению,
	|	СпрНоменклатура.ПодакцизныйТовар
	|ПОМЕСТИТЬ ДанныеКорзины
	|ИЗ
	|	РегистрСведений.КорзинаПокупателя КАК КорзинаПокупателя
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СпрНоменклатура
	|		ПО КорзинаПокупателя.Номенклатура = СпрНоменклатура.Ссылка
	|ГДЕ
	|	КорзинаПокупателя.Партнер = &Партнер
	|
	|;
	|//////////////////////////////////////////////////////////////////////////////////////////////////////
	|";
	
КонецФункции

&НаСервере
Функция ТекстЗапросаДанныеПоДоступностиТоваровНаСкладе()
	
	Возврат "ВЫБРАТЬ
	        |	Склады.Ссылка,
	        |	Склады.Наименование,
	        |	Склады.ВариантКонтроля,
	        |	Склады.ГраницаГрафикаДоступности,
	        |	Склады.СрокПоставки
	        |ПОМЕСТИТЬ Склады
	        |ИЗ
	        |	Справочник.Склады КАК Склады
	        |ГДЕ
	        |	Склады.Ссылка = &Склад
	        |;
	        |
	        |////////////////////////////////////////////////////////////////////////////////
	        |ВЫБРАТЬ
	        |	ДанныеКорзины.Номенклатура,
	        |	ДанныеКорзины.Характеристика,
	        |	&Склад КАК Склад,
	        |	ЕСТЬNULL(ДоступностьТоваровДляВнешнихПользователейСрезПервых.Доступно, 0) КАК Доступно,
	        |	ЕСТЬNULL(ДоступностьТоваровДляВнешнихПользователейСрезПервых.Период, ДАТАВРЕМЯ(1, 1, 1)) КАК Период,
	        |	ВЫБОР
	        |		КОГДА ПараметрыОбеспеченияТоварами.МетодУправления ЕСТЬ NULL 
	        |			ТОГДА ВЫБОР
	        |					КОГДА ЕСТЬNULL(XYZКлассификацияНоменклатурыСрезПоследних.Класс, ЗНАЧЕНИЕ(Перечисление.XYZКлассификация.НеКлассифицирован)) = ЗНАЧЕНИЕ(Перечисление.XYZКлассификация.НеКлассифицирован)
	        |							ИЛИ ЕСТЬNULL(XYZКлассификацияНоменклатурыСрезПоследних.Класс, ЗНАЧЕНИЕ(Перечисление.XYZКлассификация.НеКлассифицирован)) = ЗНАЧЕНИЕ(Перечисление.XYZКлассификация.ZКласс)
	        |							ИЛИ ЕСТЬNULL(ABCКлассификацияНоменклатурыСрезПоследних.Класс, ЗНАЧЕНИЕ(Перечисление.ABCКлассификация.НЕКлассифицирован)) = ЗНАЧЕНИЕ(Перечисление.ABCКлассификация.НЕКлассифицирован)
	        |						ТОГДА ЗНАЧЕНИЕ(Перечисление.МетодыУправленияЗапасами.ЗаказПодЗаказ)
	        |					ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.МетодыУправленияЗапасами.ПустаяСсылка)
	        |				КОНЕЦ
	        |		ИНАЧЕ ПараметрыОбеспеченияТоварами.МетодУправления
	        |	КОНЕЦ КАК МУЗ
	        |ПОМЕСТИТЬ ДанныеПоДоступностиИМУЗ
	        |ИЗ
	        |	ДанныеКорзины КАК ДанныеКорзины
	        |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ДоступностьТоваровДляВнешнихПользователей.СрезПервых(
	        |				&ТекущаяДата,
	        |				Склад = &Склад
	        |					И Номенклатура В
	        |						(ВЫБРАТЬ РАЗЛИЧНЫЕ
	        |							ДанныеКорзины.Номенклатура
	        |						ИЗ
	        |							ДанныеКорзины КАК ДанныеКорзины)
	        |					И Характеристика В
	        |						(ВЫБРАТЬ РАЗЛИЧНЫЕ
	        |							ДанныеКорзины.Характеристика
	        |						ИЗ
	        |							ДанныеКорзины КАК ДанныеКорзины)) КАК ДоступностьТоваровДляВнешнихПользователейСрезПервых
	        |		ПО ДанныеКорзины.Номенклатура = ДоступностьТоваровДляВнешнихПользователейСрезПервых.Номенклатура
	        |			И ДанныеКорзины.Характеристика = ДоступностьТоваровДляВнешнихПользователейСрезПервых.Характеристика
	        |			И (&Склад = ДоступностьТоваровДляВнешнихПользователейСрезПервых.Склад)
	        |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПараметрыОбеспеченияТоварами КАК ПараметрыОбеспеченияТоварами
	        |		ПО ДанныеКорзины.Номенклатура = ПараметрыОбеспеченияТоварами.Номенклатура
	        |			И ДанныеКорзины.Характеристика = ПараметрыОбеспеченияТоварами.Характеристика
	        |			И (&Склад = ПараметрыОбеспеченияТоварами.Склад)
	        |			И (ПараметрыОбеспеченияТоварами.МетодУправления <> ЗНАЧЕНИЕ(Перечисление.МетодыУправленияЗапасами.ПустаяСсылка))
	        |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ABCXYZКлассификацияНоменклатуры.СрезПоследних(
	        |				&ТекущаяДата,
	        |				РазделКлассификации = &Склад
	        |					И Номенклатура В
	        |						(ВЫБРАТЬ РАЗЛИЧНЫЕ
	        |							ДанныеКорзины.Номенклатура
	        |						ИЗ
	        |							ДанныеКорзины КАК ДанныеКорзины)
	        |					И Характеристика В
	        |						(ВЫБРАТЬ РАЗЛИЧНЫЕ
	        |							ДанныеКорзины.Характеристика
	        |						ИЗ
	        |							ДанныеКорзины КАК ДанныеКорзины)
	        |					И ТипПараметраКлассификации = ЗНАЧЕНИЕ(Перечисление.ТипыПараметровКлассификации.Выручка)
	        |					И ТипКлассификации = ЗНАЧЕНИЕ(Перечисление.ТипыКлассификации.ABC)) КАК ABCКлассификацияНоменклатурыСрезПоследних
	        |		ПО ДанныеКорзины.Номенклатура = ABCКлассификацияНоменклатурыСрезПоследних.Номенклатура
	        |			И ДанныеКорзины.Характеристика = ABCКлассификацияНоменклатурыСрезПоследних.Характеристика
	        |			И (&Склад = ABCКлассификацияНоменклатурыСрезПоследних.РазделКлассификации)
	        |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ABCXYZКлассификацияНоменклатуры.СрезПоследних(
	        |				&ТекущаяДата,
	        |				РазделКлассификации = &Склад
	        |					И Номенклатура В
	        |						(ВЫБРАТЬ РАЗЛИЧНЫЕ
	        |							ДанныеКорзины.Номенклатура
	        |						ИЗ
	        |							ДанныеКорзины КАК ДанныеКорзины)
	        |					И Характеристика В
	        |						(ВЫБРАТЬ РАЗЛИЧНЫЕ
	        |							ДанныеКорзины.Характеристика
	        |						ИЗ
	        |							ДанныеКорзины КАК ДанныеКорзины)
	        |					И ТипПараметраКлассификации = ЗНАЧЕНИЕ(Перечисление.ТипыПараметровКлассификации.Количество)
	        |					И ТипКлассификации = ЗНАЧЕНИЕ(Перечисление.ТипыКлассификации.XYZ)) КАК XYZКлассификацияНоменклатурыСрезПоследних
	        |		ПО ДанныеКорзины.Номенклатура = XYZКлассификацияНоменклатурыСрезПоследних.Номенклатура
	        |			И ДанныеКорзины.Характеристика = XYZКлассификацияНоменклатурыСрезПоследних.Характеристика
	        |			И (&Склад = XYZКлассификацияНоменклатурыСрезПоследних.РазделКлассификации)
	        |;
	        |
	        |////////////////////////////////////////////////////////////////////////////////
	        |ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
	        |	ДанныеПоДоступностиИМУЗ.Номенклатура КАК Номенклатура,
	        |	ДанныеПоДоступностиИМУЗ.Характеристика КАК Характеристика,
	        |	ДанныеПоДоступностиИМУЗ.Период КАК Период,
	        |	ДанныеПоДоступностиИМУЗ.Доступно КАК Доступно,
	        |	ВЫБОР
	        |		КОГДА ВидыНоменклатуры.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Услуга)
	        |			ТОГДА &СтрокаУслугаДоступна
	        |		ИНАЧЕ ВЫБОР
	        |				КОГДА &Склад = ЗНАЧЕНИЕ(Справочник.Склады.ПустаяСсылка)
	        |					ТОГДА &СтрокаВыберитеСклад
	        |				КОГДА ДанныеПоДоступностиИМУЗ.МУЗ = ЗНАЧЕНИЕ(Перечисление.МетодыУправленияЗапасами.ЗаказПодЗаказ)
	        |					ТОГДА &СтрокаДоступноПодЗаказ
	        |				ИНАЧЕ ВЫБОР
	        |						КОГДА Склады.ВариантКонтроля = ЗНАЧЕНИЕ(Перечисление.ВариантыКонтроля.НеКонтролировать)
	        |								ИЛИ Склады.ВариантКонтроля = ЗНАЧЕНИЕ(Перечисление.ВариантыКонтроля.Остатки)
	        |							ТОГДА &СтрокаВНаличии
	        |						КОГДА Склады.ВариантКонтроля = ЗНАЧЕНИЕ(Перечисление.ВариантыКонтроля.ОстаткиСУчетомРезерва)
	        |							ТОГДА ВЫБОР
	        |									КОГДА ДанныеПоДоступностиИМУЗ.Доступно > 0
	        |										ТОГДА &СтрокаВНаличии
	        |									ИНАЧЕ &СтрокаНетНаСкладе
	        |								КОНЕЦ
	        |						ИНАЧЕ &СтрокаСогласноГрафика
	        |					КОНЕЦ
	        |			КОНЕЦ
	        |	КОНЕЦ КАК Доступность
	        |ПОМЕСТИТЬ ДанныеПоДоступности
	        |ИЗ
	        |	ДанныеПоДоступностиИМУЗ КАК ДанныеПоДоступностиИМУЗ
	        |		ЛЕВОЕ СОЕДИНЕНИЕ Склады КАК Склады
	        |		ПО ДанныеПоДоступностиИМУЗ.Склад = Склады.Ссылка
	        |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ДанныеКорзины КАК ДанныеКорзины
	        |		ПО ДанныеПоДоступностиИМУЗ.Номенклатура = ДанныеКорзины.Номенклатура
	        |			И ДанныеПоДоступностиИМУЗ.Характеристика = ДанныеКорзины.Характеристика
	        |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СправочникНоменклатура
	        |			ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ВидыНоменклатуры КАК ВидыНоменклатуры
	        |			ПО СправочникНоменклатура.ВидНоменклатуры = ВидыНоменклатуры.Ссылка
	        |		ПО ДанныеПоДоступностиИМУЗ.Номенклатура = СправочникНоменклатура.Ссылка
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|";
	
КонецФункции

&НаСервере
Функция ТекстЗапросаДанныеКорзиныПоТабличнойЧасти()
	
	Возврат "ВЫБРАТЬ
	|	ДанныеКорзины.Номенклатура,
	|	ДанныеКорзины.Характеристика,
	|	ДанныеКорзины.Упаковка,
	|	ДанныеКорзины.КоличествоУпаковок,
	|	ДанныеКорзины.Цена,
	|	ДанныеКорзины.КОформлению,
	|	ДанныеКорзины.ДатаПомещения,
	|	ДанныеКорзины.Валюта,
	|	ДанныеКорзины.ПодакцизныйТовар
	|ПОМЕСТИТЬ КорзинаПокупателя
	|ИЗ
	|	&ДанныеКорзины КАК ДанныеКорзины
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	КорзинаПокупателя.Номенклатура,
	|	КорзинаПокупателя.Характеристика,
	|	КорзинаПокупателя.Упаковка,
	|	КорзинаПокупателя.КоличествоУпаковок,
	|	КорзинаПокупателя.Цена,
	|	КорзинаПокупателя.КОформлению,
	|	КорзинаПокупателя.ДатаПомещения,
	|	КорзинаПокупателя.Валюта,
	|	КорзинаПокупателя.ПодакцизныйТовар,
	|	ВЫБОР
	|		КОГДА &НалогообложениеНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаОблагаетсяНДС)
	|			ТОГДА СпрНоменклатура.СтавкаНДС
	|		КОГДА &НалогообложениеНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаНаЭкспорт)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.НДС0)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.БезНДС)
	|	КОНЕЦ КАК СтавкаНДС,
	|	ВЫБОР
	|		КОГДА &НалогообложениеНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаОблагаетсяНДС)
	|			ТОГДА ВЫБОР
	|					КОГДА СпрНоменклатура.СтавкаНДС = ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.НДС18)
	|						ТОГДА 0.18
	|					КОГДА СпрНоменклатура.СтавкаНДС = ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.НДС10)
	|						ТОГДА 0.1
	|					ИНАЧЕ 0
	|				КОНЕЦ
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК ЗначениеСтавкиНДС,
	|	СпрНоменклатура.ЦеноваяГруппа
	|ПОМЕСТИТЬ ДанныеКорзины
	|ИЗ
	|	КорзинаПокупателя КАК КорзинаПокупателя
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СпрНоменклатура
	|		ПО КорзинаПокупателя.Номенклатура = СпрНоменклатура.Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|";
	
	
КонецФункции

&НаСервере
Функция ТекстЗапросаПолучениеЦен()
	
	Возврат "ВЫБРАТЬ
	|	СоглашениеСКлиентомТовары.Номенклатура,
	|	СоглашениеСКлиентомТовары.Характеристика,
	|	СоглашениеСКлиентомТовары.Упаковка,
	|	СоглашениеСКлиентомТовары.Цена,
	|	ЗНАЧЕНИЕ(Справочник.ВидыЦен.ПустаяСсылка) КАК ВидЦены,
	|	СоглашениеСКлиентомТовары.Ссылка.Валюта
	|ПОМЕСТИТЬ ЦенаПоТоваруСоглашение
	|ИЗ
	|	ДанныеКорзины КАК ДанныеКорзины
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.СоглашенияСКлиентами.Товары КАК СоглашениеСКлиентомТовары
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.СоглашенияСКлиентами КАК СоглашениеСКлиентом
	|			ПО СоглашениеСКлиентомТовары.Ссылка = СоглашениеСКлиентом.Ссылка
	|		ПО ДанныеКорзины.Номенклатура = СоглашениеСКлиентомТовары.Номенклатура
	|			И ДанныеКорзины.Характеристика = СоглашениеСКлиентомТовары.Характеристика
	|ГДЕ
	|	СоглашениеСКлиентомТовары.Ссылка = &Соглашение
	|	И СоглашениеСКлиентомТовары.Цена > 0
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ДанныеКорзины.Номенклатура,
	|	ДанныеКорзины.Характеристика,
	|	СоглашениеСКлиентомТовары.ВидЦены
	|ПОМЕСТИТЬ ВидЦеныУсловияСоглашения
	|ИЗ
	|	ДанныеКорзины КАК ДанныеКорзины
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.СоглашенияСКлиентами.Товары КАК СоглашениеСКлиентомТовары
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.СоглашенияСКлиентами КАК СоглашениеСКлиентом
	|			ПО СоглашениеСКлиентомТовары.Ссылка = СоглашениеСКлиентом.Ссылка
	|		ПО ДанныеКорзины.Номенклатура = СоглашениеСКлиентомТовары.Номенклатура
	|			И ДанныеКорзины.Характеристика = СоглашениеСКлиентомТовары.Характеристика
	|ГДЕ
	|	СоглашениеСКлиентомТовары.Цена = 0
	|	И СоглашениеСКлиентомТовары.Ссылка = &Соглашение
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ РАЗРЕШЕННЫЕ
	|	ДанныеКорзины.Номенклатура,
	|	ДанныеКорзины.Характеристика,
	|	СоглашениеСКлиентомЦеновыеГруппы.ВидЦен КАК ВидЦены
	|ПОМЕСТИТЬ ВидЦеныПоЦеновойГруппе
	|ИЗ
	|	ДанныеКорзины КАК ДанныеКорзины
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.СоглашенияСКлиентами.ЦеновыеГруппы КАК СоглашениеСКлиентомЦеновыеГруппы
	|		ПО ДанныеКорзины.ЦеноваяГруппа = СоглашениеСКлиентомЦеновыеГруппы.ЦеноваяГруппа
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВидЦеныУсловияСоглашения КАК ВидЦеныУсловияСоглашения
	|		ПО ДанныеКорзины.Номенклатура = ВидЦеныУсловияСоглашения.Номенклатура
	|			И ДанныеКорзины.Характеристика = ВидЦеныУсловияСоглашения.Характеристика
	|		ЛЕВОЕ СОЕДИНЕНИЕ ЦенаПоТоваруСоглашение КАК ЦенаПоТоваруСоглашение
	|		ПО ДанныеКорзины.Номенклатура = ЦенаПоТоваруСоглашение.Номенклатура
	|			И ДанныеКорзины.Характеристика = ЦенаПоТоваруСоглашение.Характеристика
	|ГДЕ
	|	ВидЦеныУсловияСоглашения.Номенклатура ЕСТЬ NULL 
	|	И ЦенаПоТоваруСоглашение.Номенклатура ЕСТЬ NULL 
	|	И СоглашениеСКлиентомЦеновыеГруппы.Ссылка = &Соглашение
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ДанныеКорзины.Номенклатура,
	|	ДанныеКорзины.Характеристика,
	|	СоглашениеСКлиентом.ВидЦен КАК ВидЦены
	|ПОМЕСТИТЬ ВидЦеныПоСоглашению
	|ИЗ
	|	ДанныеКорзины КАК ДанныеКорзины
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВидЦеныПоЦеновойГруппе КАК ВидЦеныПоЦеновойГруппе
	|		ПО ДанныеКорзины.Номенклатура = ВидЦеныПоЦеновойГруппе.Номенклатура
	|			И ДанныеКорзины.Характеристика = ВидЦеныПоЦеновойГруппе.Характеристика
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВидЦеныУсловияСоглашения КАК ВидЦеныУсловияСоглашения
	|		ПО ДанныеКорзины.Номенклатура = ВидЦеныУсловияСоглашения.Номенклатура
	|			И ДанныеКорзины.Характеристика = ВидЦеныУсловияСоглашения.Характеристика
	|		ЛЕВОЕ СОЕДИНЕНИЕ ЦенаПоТоваруСоглашение КАК ЦенаПоТоваруСоглашение
	|		ПО ДанныеКорзины.Номенклатура = ЦенаПоТоваруСоглашение.Номенклатура
	|			И ДанныеКорзины.Характеристика = ЦенаПоТоваруСоглашение.Характеристика,
	|	Справочник.СоглашенияСКлиентами КАК СоглашениеСКлиентом
	|ГДЕ
	|	СоглашениеСКлиентом.Ссылка = &Соглашение
	|	И ВидЦеныПоЦеновойГруппе.Номенклатура ЕСТЬ NULL 
	|	И ВидЦеныУсловияСоглашения.Номенклатура ЕСТЬ NULL 
	|	И ЦенаПоТоваруСоглашение.Номенклатура ЕСТЬ NULL 
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВидЦеныУсловияСоглашения.Номенклатура,
	|	ВидЦеныУсловияСоглашения.Характеристика,
	|	ВидЦеныУсловияСоглашения.ВидЦены КАК ВидЦены
	|ПОМЕСТИТЬ ТоварыПоВидамЦен
	|ИЗ
	|	ВидЦеныУсловияСоглашения КАК ВидЦеныУсловияСоглашения
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ВидЦеныПоЦеновойГруппе.Номенклатура,
	|	ВидЦеныПоЦеновойГруппе.Характеристика,
	|	ВидЦеныПоЦеновойГруппе.ВидЦены
	|ИЗ
	|	ВидЦеныПоЦеновойГруппе КАК ВидЦеныПоЦеновойГруппе
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ВидЦеныПоСоглашению.Номенклатура,
	|	ВидЦеныПоСоглашению.Характеристика,
	|	ВидЦеныПоСоглашению.ВидЦены
	|ИЗ
	|	ВидЦеныПоСоглашению КАК ВидЦеныПоСоглашению
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ТоварыПоВидамЦен.Номенклатура,
	|	ТоварыПоВидамЦен.Характеристика,
	|	ЦеныНоменклатурыСрезПоследних.Упаковка,
	|	ВЫБОР
	|		КОГДА ЦеныНоменклатурыСрезПоследних.Валюта ЕСТЬ NULL 
	|			ТОГДА 0
	|		ИНАЧЕ ВЫБОР
	|				КОГДА ЦеныНоменклатурыСрезПоследних.Валюта <> &Валюта
	|					ТОГДА ВЫБОР
	|							КОГДА ЕСТЬNULL(КурсыВалютСрезПоследних.Курс, 0) = 0
	|									ИЛИ ЕСТЬNULL(КурсыВалютСрезПоследних.Кратность, 0) = 0
	|									ИЛИ ЕСТЬNULL(КурсыВалютСрезПоследнихСоглашение.Курс, 0) = 0
	|									ИЛИ ЕСТЬNULL(КурсыВалютСрезПоследнихСоглашение.Кратность, 0) = 0
	|								ТОГДА 0
	|							ИНАЧЕ ЦеныНоменклатурыСрезПоследних.Цена * КурсыВалютСрезПоследних.Курс * КурсыВалютСрезПоследнихСоглашение.Кратность / (КурсыВалютСрезПоследнихСоглашение.Курс * КурсыВалютСрезПоследних.Кратность)
	|						КОНЕЦ
	|				ИНАЧЕ ЕСТЬNULL(ЦеныНоменклатурыСрезПоследних.Цена, 0)
	|			КОНЕЦ
	|	КОНЕЦ КАК Цена,
	|	ТоварыПоВидамЦен.ВидЦены
	|ПОМЕСТИТЬ ЦеныПоВидамЦен
	|ИЗ
	|	ТоварыПоВидамЦен КАК ТоварыПоВидамЦен
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЦеныНоменклатуры.СрезПоследних(
	|				КОНЕЦПЕРИОДА(&ТекущаяДата, ДЕНЬ),
	|				Номенклатура В
	|						(ВЫБРАТЬ РАЗЛИЧНЫЕ
	|							ТоварыПоВидамЦен.Номенклатура
	|						ИЗ
	|							ТоварыПоВидамЦен КАК ТоварыПоВидамЦен)
	|					И Характеристика В
	|						(ВЫБРАТЬ РАЗЛИЧНЫЕ
	|							ТоварыПоВидамЦен.Характеристика
	|						ИЗ
	|							ТоварыПоВидамЦен КАК ТоварыПоВидамЦен)
	|					И ВидЦены В
	|						(ВЫБРАТЬ РАЗЛИЧНЫЕ
	|							ТоварыПоВидамЦен.ВидЦены
	|						ИЗ
	|							ТоварыПоВидамЦен КАК ТоварыПоВидамЦен)) КАК ЦеныНоменклатурыСрезПоследних
	|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КурсыВалют.СрезПоследних(&ТекущаяДата, ) КАК КурсыВалютСрезПоследних
	|			ПО ЦеныНоменклатурыСрезПоследних.Валюта = КурсыВалютСрезПоследних.Валюта
	|		ПО ТоварыПоВидамЦен.Номенклатура = ЦеныНоменклатурыСрезПоследних.Номенклатура
	|			И ТоварыПоВидамЦен.Характеристика = ЦеныНоменклатурыСрезПоследних.Характеристика
	|			И ТоварыПоВидамЦен.ВидЦены = ЦеныНоменклатурыСрезПоследних.ВидЦены,
	|	РегистрСведений.КурсыВалют.СрезПоследних(&ТекущаяДата, Валюта = &Валюта) КАК КурсыВалютСрезПоследнихСоглашение
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЦеныПоВидамЦен.Номенклатура,
	|	ЦеныПоВидамЦен.Характеристика,
	|	ЦеныПоВидамЦен.Упаковка,
	|	ЦеныПоВидамЦен.Цена,
	|	ЦеныПоВидамЦен.ВидЦены
	|ПОМЕСТИТЬ ВсеЦеныВВалютеСоглашения
	|ИЗ
	|	ЦеныПоВидамЦен КАК ЦеныПоВидамЦен
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЦенаПоТоваруСоглашение.Номенклатура,
	|	ЦенаПоТоваруСоглашение.Характеристика,
	|	ЦенаПоТоваруСоглашение.Упаковка,
	|	ЦенаПоТоваруСоглашение.Цена,
	|	ЦенаПоТоваруСоглашение.ВидЦены
	|ИЗ
	|	ЦенаПоТоваруСоглашение КАК ЦенаПоТоваруСоглашение
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ДанныеКорзины.Номенклатура,
	|	ДанныеКорзины.Характеристика,
	|	ДанныеКорзины.Упаковка,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(ВсеЦеныВВалютеСоглашения.Цена, 0) = 0
	|			ТОГДА 0
	|		ИНАЧЕ ВЫБОР
	|				КОГДА ДанныеКорзины.Упаковка = ВсеЦеныВВалютеСоглашения.Упаковка
	|					ТОГДА ЕСТЬNULL(ВсеЦеныВВалютеСоглашения.Цена, 0)
	|				ИНАЧЕ ВЫБОР
	|						КОГДА ДанныеКорзины.Упаковка = ЗНАЧЕНИЕ(Справочник.УпаковкиНоменклатуры.ПустаяСсылка)
	|							ТОГДА ВЫБОР
	|									КОГДА ЕСТЬNULL(УпаковкиНоменклатурыЦены.Коэффициент, 0) = 0
	|										ТОГДА 0
	|									ИНАЧЕ ЕСТЬNULL(ВсеЦеныВВалютеСоглашения.Цена, 0) / УпаковкиНоменклатурыЦены.Коэффициент
	|								КОНЕЦ
	|						КОГДА ВсеЦеныВВалютеСоглашения.Упаковка = ЗНАЧЕНИЕ(Справочник.УпаковкиНоменклатуры.ПустаяСсылка)
	|							ТОГДА ЕСТЬNULL(ВсеЦеныВВалютеСоглашения.Цена, 0) * ЕСТЬNULL(УпаковкиНоменклатурыКорзина.Коэффициент, 0)
	|						ИНАЧЕ ВЫБОР
	|								КОГДА ЕСТЬNULL(УпаковкиНоменклатурыЦены.Коэффициент, 0) = 0
	|									ТОГДА 0
	|								ИНАЧЕ ЕСТЬNULL(ВсеЦеныВВалютеСоглашения.Цена, 0) / ЕСТЬNULL(УпаковкиНоменклатурыЦены.Коэффициент, 0) * ЕСТЬNULL(УпаковкиНоменклатурыКорзина.Коэффициент, 0)
	|							КОНЕЦ
	|					КОНЕЦ
	|			КОНЕЦ
	|	КОНЕЦ КАК Цена,
	|	ВсеЦеныВВалютеСоглашения.ВидЦены
	|ПОМЕСТИТЬ ЦеныПоУпаковкамВВалютеСоглашения
	|ИЗ
	|	ДанныеКорзины КАК ДанныеКорзины
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.УпаковкиНоменклатуры КАК УпаковкиНоменклатурыКорзина
	|		ПО ДанныеКорзины.Упаковка = УпаковкиНоменклатурыКорзина.Ссылка
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВсеЦеныВВалютеСоглашения КАК ВсеЦеныВВалютеСоглашения
	|			ЛЕВОЕ СОЕДИНЕНИЕ Справочник.УпаковкиНоменклатуры КАК УпаковкиНоменклатурыЦены
	|			ПО ВсеЦеныВВалютеСоглашения.Упаковка = УпаковкиНоменклатурыЦены.Ссылка
	|		ПО ДанныеКорзины.Номенклатура = ВсеЦеныВВалютеСоглашения.Номенклатура
	|			И ДанныеКорзины.Характеристика = ВсеЦеныВВалютеСоглашения.Характеристика
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ДанныеКорзины.Номенклатура,
	|	ДанныеКорзины.Характеристика,
	|	ДанныеКорзины.Упаковка,
	|	ДанныеКорзины.КоличествоУпаковок,
	|	ДанныеКорзины.КОформлению,
	|	ЦеныПоУпаковкамВВалютеСоглашения.Цена,
	|	ДанныеКорзины.СтавкаНДС,
	|	ДанныеКорзины.Валюта,
	|	ДанныеКорзины.ДатаПомещения КАК ДатаПомещения,
	|	ДанныеКорзины.КоличествоУпаковок * ЕСТЬNULL(ЦеныПоУпаковкамВВалютеСоглашения.Цена, 0) КАК Сумма,
	|	ДанныеКорзины.ПодакцизныйТовар,
	|	ВЫБОР
	|		КОГДА &НалогообложениеНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаОблагаетсяНДС)
	|			ТОГДА ВЫБОР
	|					КОГДА &ЦенаВключаетНДС
	|						ТОГДА ЦеныПоУпаковкамВВалютеСоглашения.Цена * ДанныеКорзины.КоличествоУпаковок * ДанныеКорзины.ЗначениеСтавкиНДС / (1 + ДанныеКорзины.ЗначениеСтавкиНДС)
	|					ИНАЧЕ ЦеныПоУпаковкамВВалютеСоглашения.Цена * ДанныеКорзины.КоличествоУпаковок * ДанныеКорзины.ЗначениеСтавкиНДС
	|				КОНЕЦ
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК СуммаНДС,
	|	ДанныеКорзины.КоличествоУпаковок * ЦеныПоУпаковкамВВалютеСоглашения.Цена + ВЫБОР
	|		КОГДА &НалогообложениеНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаОблагаетсяНДС)
	|			ТОГДА ВЫБОР
	|					КОГДА &ЦенаВключаетНДС
	|						ТОГДА 0
	|					ИНАЧЕ ЦеныПоУпаковкамВВалютеСоглашения.Цена * ДанныеКорзины.КоличествоУпаковок * ДанныеКорзины.ЗначениеСтавкиНДС
	|				КОНЕЦ
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК СуммаСНДС,
	|	ЦеныПоУпаковкамВВалютеСоглашения.ВидЦены,
	|	ДанныеПоДоступности.Период,
	|	ДанныеПоДоступности.Доступно,
	|	ДанныеПоДоступности.Доступность,
	|	ВЫБОР
	|		КОГДА УпаковкиНоменклатуры.Ссылка ЕСТЬ NULL 
	|			ТОГДА ДанныеКорзины.КоличествоУпаковок
	|		ИНАЧЕ ДанныеКорзины.КоличествоУпаковок * УпаковкиНоменклатуры.Коэффициент
	|	КОНЕЦ КАК Количество
	|ИЗ
	|	ДанныеКорзины КАК ДанныеКорзины
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ЦеныПоУпаковкамВВалютеСоглашения КАК ЦеныПоУпаковкамВВалютеСоглашения
	|		ПО ДанныеКорзины.Номенклатура = ЦеныПоУпаковкамВВалютеСоглашения.Номенклатура
	|			И ДанныеКорзины.Характеристика = ЦеныПоУпаковкамВВалютеСоглашения.Характеристика
	|			И ДанныеКорзины.Упаковка = ЦеныПоУпаковкамВВалютеСоглашения.Упаковка
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ДанныеПоДоступности КАК ДанныеПоДоступности
	|		ПО ДанныеКорзины.Номенклатура = ДанныеПоДоступности.Номенклатура
	|			И ДанныеКорзины.Характеристика = ДанныеПоДоступности.Характеристика
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.УпаковкиНоменклатуры КАК УпаковкиНоменклатуры
	|		ПО ДанныеКорзины.Упаковка = УпаковкиНоменклатуры.Ссылка
	|
	|УПОРЯДОЧИТЬ ПО
	|	ДатаПомещения УБЫВ";
	
КонецФункции

////////////////////////////////////////////////////////////////////////////////
// Прочее

&НаСервере
Процедура КешироватьРеквизитыСклад()
	
	Если Склад.Пустая() Тогда
		
		СкладГраницаГрафикаДоступности = Дата(1,1,1);
		СкладСрокПоставки = 0;
		СкладВариантКонтроля = Перечисления.ВариантыКонтроля.ПустаяСсылка();
		
	Иначе
		
		Запрос = Новый Запрос;
		Запрос.Текст = "ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	Склады.ГраницаГрафикаДоступности,
		|	Склады.СрокПоставки,
		|	Склады.ВариантКонтроля
		|ИЗ
		|	Справочник.Склады КАК Склады
		|ГДЕ
		|	Склады.Ссылка = &Склад";
		
		Запрос.УстановитьПараметр("Склад",Склад);
		
		Выборка = Запрос.Выполнить().Выбрать();
		Если Выборка.Следующий() Тогда
			СкладГраницаГрафикаДоступности = Выборка.ГраницаГрафикаДоступности;
			СкладСрокПоставки = Выборка.СрокПоставки;
			СкладВариантКонтроля = Выборка.ВариантКонтроля;
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура УправлениеДоступностью()
	
	Элементы.ПодобратьТовары.Доступность = ЗначениеЗаполнено(Соглашение) И ЗначениеЗаполнено(Склад);
	Элементы.КорзинаПокупателяОформитьЗаказ.Доступность = ОформлениеЗаказаДоступно();
	
КонецПроцедуры

&НаСервере
Процедура УстановитьРеквизитыФормыПоВыборке(Выборка)
	
	Если НЕ Выборка = Неопределено Тогда
		
		Соглашение                       = Выборка.Ссылка;
		СоглашениеСтрока                 = Выборка.Наименование;
		Склад                            = Выборка.Склад;
		Валюта                           = Выборка.Валюта;
		НалогообложениеНДС               = Выборка.НалогообложениеНДС;
		ЦенаВключаетНДС                  = Выборка.ЦенаВключаетНДС;
		ИспользуютсяДоговорыКонтрагентов = Выборка.ИспользуютсяДоговорыКонтрагентов;
		СкладОпределенСоглашением        = ЗначениеЗаполнено(Выборка.Склад);
		
		Элементы.Склад.Доступность       = НЕ СкладОпределенСоглашением; 
		ХозяйственнаяОперация            =  Выборка.ХозяйственнаяОперация;
		
	Иначе
		Соглашение                       = Справочники.СоглашенияСКлиентами.ПустаяСсылка();
		СоглашениеСтрока                 = "";
		Склад                            = Справочники.Склады.ПустаяСсылка();
		Валюта                           = Справочники.Склады.ПустаяСсылка();
		НалогообложениеНДС               = Перечисления.ТипыНалогообложенияНДС.ПустаяСсылка();
		ЦенаВключаетНДС                  = Ложь;
		ИспользуютсяДоговорыКонтрагентов = Ложь;
		СкладОпределенСоглашением        = Ложь;
		ЗакупкаПоКомиссии                = Ложь;
		ХозяйственнаяОперация            = Перечисления.ХозяйственныеОперации.РеализацияКлиенту;
		
	КонецЕсли;
	
	Склад = ЗначениеНастроекПовтИсп.ПолучитьСкладПоУмолчанию(Склад);
	Валюта = ДоходыИРасходыСервер.ПолучитьВалютуУправленческогоУчета(Валюта);
	
КонецПроцедуры

&НаКлиенте
Функция ОформлениеЗаказаДоступно()
	
	Если НЕ ЗначениеЗаполнено(Соглашение) ИЛИ НЕ ЗначениеЗаполнено(Склад) Тогда
		Возврат Ложь;
	КонецЕсли;
	
	Для каждого Строка Из КорзинаПокупателя Цикл
		Если Строка.КОформлению И Строка.Цена > 0 Тогда
			Возврат Истина;
		КонецЕсли;
	КонецЦикла;
	
	Возврат Ложь;
	
КонецФункции

&НаСервере
Процедура ОбработкаПодбораНоменклатурыСервер(АдресТоваровВХранилище)
	
	ТаблицаТоваров = ПолучитьИзВременногоХранилища(АдресТоваровВХранилище);
	
	Если ТаблицаТоваров.Количество() > 0 Тогда
		
		ТаблицаКорзины = РеквизитФормыВЗначение("КорзинаПокупателя");
		
		Запрос = Новый Запрос;
		Запрос.Текст = "ВЫБРАТЬ
		               |	ДанныеПодбора.Номенклатура,
		               |	ДанныеПодбора.Характеристика,
		               |	ДанныеПодбора.Упаковка,
		               |	ДанныеПодбора.Количество,
		               |	ДанныеПодбора.Цена,
		               |	ДанныеПодбора.ВидЦены
		               |ПОМЕСТИТЬ НеСгруппированныеДанныеПодбора
		               |ИЗ
		               |	&ДанныеПодбора КАК ДанныеПодбора
		               |;
		               |
		               |////////////////////////////////////////////////////////////////////////////////
		               |ВЫБРАТЬ
		               |	ДанныеКорзины.Номенклатура,
		               |	ДанныеКорзины.Характеристика,
		               |	ДанныеКорзины.Упаковка,
		               |	ДанныеКорзины.КоличествоУпаковок,
		               |	ДанныеКорзины.Цена,
		               |	ДанныеКорзины.ДатаПомещения,
		               |	ДанныеКорзины.КОформлению,
		               |	ДанныеКорзины.ВидЦены
		               |ПОМЕСТИТЬ ДанныеКорзины
		               |ИЗ
		               |	&ДанныеКорзины КАК ДанныеКорзины
		               |;
		               |
		               |////////////////////////////////////////////////////////////////////////////////
		               |ВЫБРАТЬ
		               |	НеСгруппированныеДанныеПодбора.Номенклатура,
		               |	НеСгруппированныеДанныеПодбора.Характеристика,
		               |	НеСгруппированныеДанныеПодбора.Упаковка,
		               |	СУММА(НеСгруппированныеДанныеПодбора.Количество) КАК Количество,
		               |	МАКСИМУМ(НеСгруппированныеДанныеПодбора.Цена) КАК Цена,
		               |	МАКСИМУМ(НеСгруппированныеДанныеПодбора.ВидЦены) КАК ВидЦены
		               |ПОМЕСТИТЬ ДанныеПодбора
		               |ИЗ
		               |	НеСгруппированныеДанныеПодбора КАК НеСгруппированныеДанныеПодбора
		               |
		               |СГРУППИРОВАТЬ ПО
		               |	НеСгруппированныеДанныеПодбора.Номенклатура,
		               |	НеСгруппированныеДанныеПодбора.Характеристика,
		               |	НеСгруппированныеДанныеПодбора.Упаковка
		               |;
		               |
		               |////////////////////////////////////////////////////////////////////////////////
		               |ВЫБРАТЬ
		               |	ДанныеКорзины.Номенклатура КАК Номенклатура,
		               |	ДанныеКорзины.Характеристика КАК Характеристика,
		               |	ДанныеКорзины.Упаковка КАК Упаковка,
		               |	ДанныеКорзины.КОформлению КАК КОформлению,
		               |	ВЫБОР
		               |		КОГДА ДанныеПодбора.Номенклатура ЕСТЬ NULL 
		               |			ТОГДА ДанныеКорзины.Цена
		               |		ИНАЧЕ ДанныеПодбора.Цена
		               |	КОНЕЦ КАК Цена,
		               |	ВЫБОР
		               |		КОГДА ДанныеПодбора.Номенклатура ЕСТЬ NULL 
		               |			ТОГДА ДанныеКорзины.КоличествоУпаковок
		               |		ИНАЧЕ ДанныеКорзины.КоличествоУпаковок + ДанныеПодбора.Количество
		               |	КОНЕЦ КАК КоличествоУпаковок,
		               |	ДанныеКорзины.ДатаПомещения,
		               |	&Валюта,
		               |	ВЫБОР
		               |		КОГДА ДанныеПодбора.Номенклатура ЕСТЬ NULL 
		               |			ТОГДА ДанныеКорзины.ВидЦены
		               |		ИНАЧЕ ДанныеПодбора.Цена
		               |	КОНЕЦ КАК ВидЦены
		               |ПОМЕСТИТЬ ОбщиеДанные
		               |ИЗ
		               |	ДанныеКорзины КАК ДанныеКорзины
		               |		ЛЕВОЕ СОЕДИНЕНИЕ ДанныеПодбора КАК ДанныеПодбора
		               |		ПО ДанныеКорзины.Номенклатура = ДанныеПодбора.Номенклатура
		               |			И ДанныеКорзины.Характеристика = ДанныеПодбора.Характеристика
		               |			И ДанныеКорзины.Упаковка = ДанныеПодбора.Упаковка
		               |
		               |ОБЪЕДИНИТЬ ВСЕ
		               |
		               |ВЫБРАТЬ
		               |	ДанныеПодбора.Номенклатура,
		               |	ДанныеПодбора.Характеристика,
		               |	ДанныеПодбора.Упаковка,
		               |	ИСТИНА,
		               |	ДанныеПодбора.Цена,
		               |	ДанныеПодбора.Количество,
		               |	&ТекущаяДата,
		               |	&Валюта,
		               |	NULL
		               |ИЗ
		               |	ДанныеПодбора КАК ДанныеПодбора
		               |		ЛЕВОЕ СОЕДИНЕНИЕ ДанныеКорзины КАК ДанныеКорзины
		               |		ПО ДанныеПодбора.Номенклатура = ДанныеКорзины.Номенклатура
		               |			И ДанныеПодбора.Характеристика = ДанныеКорзины.Характеристика
		               |			И ДанныеПодбора.Упаковка = ДанныеКорзины.Упаковка
		               |ГДЕ
		               |	ДанныеКорзины.Номенклатура ЕСТЬ NULL 
		               |;
		               |
		               |////////////////////////////////////////////////////////////////////////////////
		               |ВЫБРАТЬ РАЗРЕШЕННЫЕ
		               |	Склады.Ссылка,
		               |	Склады.Наименование,
		               |	Склады.ВариантКонтроля,
		               |	Склады.ГраницаГрафикаДоступности,
		               |	Склады.СрокПоставки
		               |ПОМЕСТИТЬ Склады
		               |ИЗ
		               |	Справочник.Склады КАК Склады
		               |ГДЕ
		               |	Склады.Ссылка = &Склад
		               |;
		               |
		               |////////////////////////////////////////////////////////////////////////////////
		               |ВЫБРАТЬ
		               |	ОбщиеДанные.Номенклатура,
		               |	ОбщиеДанные.Характеристика,
		               |	&Склад КАК Склад,
		               |	ЕСТЬNULL(ДоступностьТоваровДляВнешнихПользователейСрезПервых.Доступно, 0) КАК Доступно,
		               |	ЕСТЬNULL(ДоступностьТоваровДляВнешнихПользователейСрезПервых.Период, ДАТАВРЕМЯ(1, 1, 1)) КАК Период,
		               |	ВЫБОР
		               |		КОГДА ПараметрыОбеспеченияТоварами.МетодУправления ЕСТЬ NULL 
		               |			ТОГДА ВЫБОР
		               |					КОГДА ЕСТЬNULL(XYZКлассификацияНоменклатурыСрезПоследних.Класс, ЗНАЧЕНИЕ(Перечисление.XYZКлассификация.НеКлассифицирован)) = ЗНАЧЕНИЕ(Перечисление.XYZКлассификация.НеКлассифицирован)
		               |							ИЛИ ЕСТЬNULL(XYZКлассификацияНоменклатурыСрезПоследних.Класс, ЗНАЧЕНИЕ(Перечисление.XYZКлассификация.НеКлассифицирован)) = ЗНАЧЕНИЕ(Перечисление.XYZКлассификация.ZКласс)
		               |							ИЛИ ЕСТЬNULL(ABCКлассификацияНоменклатурыСрезПоследних.Класс, ЗНАЧЕНИЕ(Перечисление.ABCКлассификация.НЕКлассифицирован)) = ЗНАЧЕНИЕ(Перечисление.ABCКлассификация.НЕКлассифицирован)
		               |						ТОГДА ЗНАЧЕНИЕ(Перечисление.МетодыУправленияЗапасами.ЗаказПодЗаказ)
		               |					ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.МетодыУправленияЗапасами.ПустаяСсылка)
		               |				КОНЕЦ
		               |		ИНАЧЕ ПараметрыОбеспеченияТоварами.МетодУправления
		               |	КОНЕЦ КАК МУЗ
		               |ПОМЕСТИТЬ ДанныеПоДоступностиИМУЗ
		               |ИЗ
		               |	ОбщиеДанные КАК ОбщиеДанные
		               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ДоступностьТоваровДляВнешнихПользователей.СрезПервых(
		               |				&ТекущаяДата,
		               |				Склад = &Склад
		               |					И Номенклатура В
		               |						(ВЫБРАТЬ РАЗЛИЧНЫЕ
		               |							ОбщиеДанные.Номенклатура
		               |						ИЗ
		               |							ОбщиеДанные КАК ОбщиеДанные)
		               |					И Характеристика В
		               |						(ВЫБРАТЬ РАЗЛИЧНЫЕ
		               |							ОбщиеДанные.Характеристика
		               |						ИЗ
		               |							ОбщиеДанные КАК ОбщиеДанные)) КАК ДоступностьТоваровДляВнешнихПользователейСрезПервых
		               |		ПО ОбщиеДанные.Номенклатура = ДоступностьТоваровДляВнешнихПользователейСрезПервых.Номенклатура
		               |			И ОбщиеДанные.Характеристика = ДоступностьТоваровДляВнешнихПользователейСрезПервых.Характеристика
		               |			И (&Склад = ДоступностьТоваровДляВнешнихПользователейСрезПервых.Склад)
		               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПараметрыОбеспеченияТоварами КАК ПараметрыОбеспеченияТоварами
		               |		ПО ОбщиеДанные.Номенклатура = ПараметрыОбеспеченияТоварами.Номенклатура
		               |			И ОбщиеДанные.Характеристика = ПараметрыОбеспеченияТоварами.Характеристика
		               |			И (&Склад = ПараметрыОбеспеченияТоварами.Склад)
		               |			И (ПараметрыОбеспеченияТоварами.МетодУправления <> ЗНАЧЕНИЕ(Перечисление.МетодыУправленияЗапасами.ПустаяСсылка))
		               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ABCXYZКлассификацияНоменклатуры.СрезПоследних(
		               |				&ТекущаяДата,
		               |				РазделКлассификации = &Склад
		               |					И Номенклатура В
		               |						(ВЫБРАТЬ РАЗЛИЧНЫЕ
		               |							ОбщиеДанные.Номенклатура
		               |						ИЗ
		               |							ОбщиеДанные КАК ОбщиеДанные)
		               |					И Характеристика В
		               |						(ВЫБРАТЬ РАЗЛИЧНЫЕ
		               |							ОбщиеДанные.Характеристика
		               |						ИЗ
		               |							ОбщиеДанные КАК ОбщиеДанные)
		               |					И ТипПараметраКлассификации = ЗНАЧЕНИЕ(Перечисление.ТипыПараметровКлассификации.Выручка)
		               |					И ТипКлассификации = ЗНАЧЕНИЕ(Перечисление.ТипыКлассификации.ABC)) КАК ABCКлассификацияНоменклатурыСрезПоследних
		               |		ПО ОбщиеДанные.Номенклатура = ABCКлассификацияНоменклатурыСрезПоследних.Номенклатура
		               |			И ОбщиеДанные.Характеристика = ABCКлассификацияНоменклатурыСрезПоследних.Характеристика
		               |			И (&Склад = ABCКлассификацияНоменклатурыСрезПоследних.РазделКлассификации)
		               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ABCXYZКлассификацияНоменклатуры.СрезПоследних(
		               |				&ТекущаяДата,
		               |				РазделКлассификации = &Склад
		               |					И Номенклатура В
		               |						(ВЫБРАТЬ РАЗЛИЧНЫЕ
		               |							ОбщиеДанные.Номенклатура
		               |						ИЗ
		               |							ОбщиеДанные КАК ОбщиеДанные)
		               |					И Характеристика В
		               |						(ВЫБРАТЬ РАЗЛИЧНЫЕ
		               |							ОбщиеДанные.Характеристика
		               |						ИЗ
		               |							ОбщиеДанные КАК ОбщиеДанные)
		               |					И ТипПараметраКлассификации = ЗНАЧЕНИЕ(Перечисление.ТипыПараметровКлассификации.Количество)
		               |					И ТипКлассификации = ЗНАЧЕНИЕ(Перечисление.ТипыКлассификации.XYZ)) КАК XYZКлассификацияНоменклатурыСрезПоследних
		               |		ПО ОбщиеДанные.Номенклатура = XYZКлассификацияНоменклатурыСрезПоследних.Номенклатура
		               |			И ОбщиеДанные.Характеристика = XYZКлассификацияНоменклатурыСрезПоследних.Характеристика
		               |			И (&Склад = XYZКлассификацияНоменклатурыСрезПоследних.РазделКлассификации)
		               |;
		               |
		               |////////////////////////////////////////////////////////////////////////////////
		               |ВЫБРАТЬ РАЗЛИЧНЫЕ
		               |	ДанныеПоДоступностиИМУЗ.Номенклатура КАК Номенклатура,
		               |	ДанныеПоДоступностиИМУЗ.Характеристика КАК Характеристика,
		               |	ДанныеПоДоступностиИМУЗ.Период КАК Период,
		               |	ДанныеПоДоступностиИМУЗ.Доступно КАК Доступно,
		               |	ВЫБОР
		               |		КОГДА ВидыНоменклатуры.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Услуга)
		               |			ТОГДА &СтрокаУслугаДоступна
		               |		ИНАЧЕ ВЫБОР
		               |				КОГДА &Склад = ЗНАЧЕНИЕ(Справочник.Склады.ПустаяСсылка)
		               |					ТОГДА &СтрокаВыберитеСклад
		               |				КОГДА ДанныеПоДоступностиИМУЗ.МУЗ = ЗНАЧЕНИЕ(Перечисление.МетодыУправленияЗапасами.ЗаказПодЗаказ)
		               |					ТОГДА &СтрокаДоступноПодЗаказ
		               |				ИНАЧЕ ВЫБОР
		               |						КОГДА Склады.ВариантКонтроля = ЗНАЧЕНИЕ(Перечисление.ВариантыКонтроля.НеКонтролировать)
		               |								ИЛИ Склады.ВариантКонтроля = ЗНАЧЕНИЕ(Перечисление.ВариантыКонтроля.Остатки)
		               |							ТОГДА &СтрокаВНаличии
		               |						КОГДА Склады.ВариантКонтроля = ЗНАЧЕНИЕ(Перечисление.ВариантыКонтроля.ОстаткиСУчетомРезерва)
		               |							ТОГДА ВЫБОР
		               |									КОГДА ДанныеПоДоступностиИМУЗ.Доступно > 0
		               |										ТОГДА &СтрокаВНаличии
		               |									ИНАЧЕ &СтрокаНетНаСкладе
		               |								КОНЕЦ
		               |						ИНАЧЕ &СтрокаСогласноГрафика
		               |					КОНЕЦ
		               |			КОНЕЦ
		               |	КОНЕЦ КАК Доступность
		               |ПОМЕСТИТЬ ДанныеПоДоступности
		               |ИЗ
		               |	ДанныеПоДоступностиИМУЗ КАК ДанныеПоДоступностиИМУЗ
		               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Склады КАК Склады
		               |		ПО ДанныеПоДоступностиИМУЗ.Склад = Склады.Ссылка
		               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ОбщиеДанные КАК ОбщиеДанные
		               |		ПО ДанныеПоДоступностиИМУЗ.Номенклатура = ОбщиеДанные.Номенклатура
		               |			И ДанныеПоДоступностиИМУЗ.Характеристика = ОбщиеДанные.Характеристика
		               |		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СправочникНоменклатура
		               |			ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ВидыНоменклатуры КАК ВидыНоменклатуры
		               |			ПО СправочникНоменклатура.ВидНоменклатуры = ВидыНоменклатуры.Ссылка
		               |		ПО ДанныеПоДоступностиИМУЗ.Номенклатура = СправочникНоменклатура.Ссылка
		               |;
		               |
		               |////////////////////////////////////////////////////////////////////////////////
		               |ВЫБРАТЬ
		               |	ОбщиеДанные.Номенклатура,
		               |	ОбщиеДанные.Характеристика,
		               |	ОбщиеДанные.Упаковка,
		               |	ОбщиеДанные.КОформлению,
		               |	ОбщиеДанные.КоличествоУпаковок,
		               |	ОбщиеДанные.Цена,
		               |	ОбщиеДанные.ДатаПомещения,
		               |	ОбщиеДанные.Валюта,
		               |	ВЫБОР
		               |		КОГДА &НалогообложениеНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаОблагаетсяНДС)
		               |			ТОГДА ВЫБОР
		               |					КОГДА СпрНоменклатура.СтавкаНДС = ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.НДС18)
		               |						ТОГДА 0.18
		               |					КОГДА СпрНоменклатура.СтавкаНДС = ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.НДС10)
		               |						ТОГДА 0.1
		               |					ИНАЧЕ 0
		               |				КОНЕЦ
		               |		ИНАЧЕ 0
		               |	КОНЕЦ КАК ЗначениеСтавкиНДС,
		               |	ВЫБОР
		               |		КОГДА &НалогообложениеНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаОблагаетсяНДС)
		               |			ТОГДА СпрНоменклатура.СтавкаНДС
		               |		КОГДА &НалогообложениеНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаНаЭкспорт)
		               |			ТОГДА ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.НДС0)
		               |		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.БезНДС)
		               |	КОНЕЦ КАК СтавкаНДС,
		               |	ОбщиеДанные.ВидЦены
		               |ПОМЕСТИТЬ ДанныеСНДС
		               |ИЗ
		               |	ОбщиеДанные КАК ОбщиеДанные
		               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СпрНоменклатура
		               |		ПО ОбщиеДанные.Номенклатура = СпрНоменклатура.Ссылка
		               |;
		               |
		               |////////////////////////////////////////////////////////////////////////////////
		               |ВЫБРАТЬ
		               |	ДанныеСНДС.Номенклатура,
		               |	ДанныеСНДС.Характеристика,
		               |	ДанныеСНДС.Упаковка,
		               |	ДанныеСНДС.КОформлению,
		               |	ДанныеСНДС.КоличествоУпаковок КАК КоличествоУпаковок,
		               |	ДанныеСНДС.Цена КАК Цена,
		               |	ДанныеСНДС.ДатаПомещения КАК ДатаПомещения,
		               |	ДанныеСНДС.Валюта КАК Валюта,
		               |	ДанныеСНДС.СтавкаНДС КАК СтавкаНДС,
		               |	ДанныеСНДС.Цена * ДанныеСНДС.КоличествоУпаковок КАК Сумма,
		               |	ВЫБОР
		               |		КОГДА &НалогообложениеНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаОблагаетсяНДС)
		               |			ТОГДА ВЫБОР
		               |					КОГДА &ЦенаВключаетНДС
		               |						ТОГДА ДанныеСНДС.Цена * ДанныеСНДС.КоличествоУпаковок * ДанныеСНДС.ЗначениеСтавкиНДС / (1 + ДанныеСНДС.ЗначениеСтавкиНДС)
		               |					ИНАЧЕ ДанныеСНДС.Цена * ДанныеСНДС.КоличествоУпаковок * ДанныеСНДС.ЗначениеСтавкиНДС
		               |				КОНЕЦ
		               |		ИНАЧЕ 0
		               |	КОНЕЦ КАК СуммаНДС,
		               |	ДанныеСНДС.КоличествоУпаковок * ДанныеСНДС.Цена + ВЫБОР
		               |		КОГДА &НалогообложениеНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаОблагаетсяНДС)
		               |			ТОГДА ВЫБОР
		               |					КОГДА &ЦенаВключаетНДС
		               |						ТОГДА 0
		               |					ИНАЧЕ ДанныеСНДС.Цена * ДанныеСНДС.КоличествоУпаковок * ДанныеСНДС.ЗначениеСтавкиНДС
		               |				КОНЕЦ
		               |		ИНАЧЕ 0
		               |	КОНЕЦ КАК СуммаСНДС,
		               |	ДанныеСНДС.ВидЦены КАК ВидЦены,
		               |	ВЫБОР
		               |		КОГДА УпаковкиНоменклатуры.Ссылка ЕСТЬ NULL 
		               |			ТОГДА ДанныеСНДС.КоличествоУпаковок
		               |		ИНАЧЕ ДанныеСНДС.КоличествоУпаковок * УпаковкиНоменклатуры.Коэффициент
		               |	КОНЕЦ КАК Количество,
		               |	ДанныеПоДоступности.Период,
		               |	ДанныеПоДоступности.Доступно,
		               |	ДанныеПоДоступности.Доступность,
		               |	СправочникНоменклатура.ПодакцизныйТовар
		               |ИЗ
		               |	ДанныеСНДС КАК ДанныеСНДС
		               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ДанныеПоДоступности КАК ДанныеПоДоступности
		               |		ПО ДанныеСНДС.Номенклатура = ДанныеПоДоступности.Номенклатура
		               |			И ДанныеСНДС.Характеристика = ДанныеПоДоступности.Характеристика
		               |		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.УпаковкиНоменклатуры КАК УпаковкиНоменклатуры
		               |		ПО ДанныеСНДС.Упаковка = УпаковкиНоменклатуры.Ссылка
		               |		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СправочникНоменклатура
		               |		ПО ДанныеСНДС.Номенклатура = СправочникНоменклатура.Ссылка";
		
		Запрос.УстановитьПараметр("ДанныеПодбора",ТаблицаТоваров);
		Запрос.УстановитьПараметр("ДанныеКорзины",ТаблицаКорзины);
		Запрос.УстановитьПараметр("Валюта",Валюта);
		Запрос.УстановитьПараметр("НалогообложениеНДС",НалогообложениеНДС);
		Запрос.УстановитьПараметр("ЦенаВключаетНДС",ЦенаВключаетНДС);
		Запрос.УстановитьПараметр("ТекущаяДата",НачалоДня(ТекущаяДата()));
		Запрос.УстановитьПараметр("Склад",Склад);
		Запрос.УстановитьПараметр("СтрокаВНаличии",НСтр("ru = 'В наличии'"));
		Запрос.УстановитьПараметр("СтрокаВыберитеСклад",НСтр("ru = 'Выберите склад'"));
		Запрос.УстановитьПараметр("СтрокаДоступноПодЗаказ",НСтр("ru = 'Доступно под заказ'"));  
		Запрос.УстановитьПараметр("СтрокаНетНаСкладе",НСтр("ru = 'Нет на складе'"));
		Запрос.УстановитьПараметр("СтрокаСогласноГрафика",НСтр("ru = 'Согласно графика'"));
		Запрос.УстановитьПараметр("СтрокаУслугаДоступна",НСтр("ru = 'Услуга доступна'"));
		
		КорзинаПокупателя.Загрузить(Запрос.Выполнить().Выгрузить());
		
		ОбработатьДанныеКорзины();
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ОбработатьДанныеКорзины()
	
	Если СкладВариантКонтроля = Перечисления.ВариантыКонтроля.ОстаткиСУчетомГрафика Тогда
		
		Для каждого Строка Из КорзинаПокупателя Цикл
			
			Если Строка.Доступность = НСтр("ru = 'Согласно графика'") Тогда
				Если Строка.Доступно > 0 Тогда
					Строка.Доступность = ?(Строка.Период = НачалоДня(ТекущаяДата()),НСтр("ru = 'В наличии'"),НСтр("ru = 'Ожидается '") + Формат(Строка.Период,"ДФ=dd.MM.yy"));
				Иначе
					Если СкладГраницаГрафикаДоступности > ТекущаяДата() Тогда
						Строка.Доступность = НСтр("ru = 'Ожидается '") + Формат(СкладГраницаГрафикаДоступности,"ДФ=dd.MM.yy");
					Иначе
						Строка.Доступность = НСтр("ru = 'Ожидается '") + Формат(ТекущаяДата() + СкладСрокПоставки * 86400,"ДФ=dd.MM.yy");
					КонецЕсли;
				КонецЕсли;
				
			КонецЕсли;
			
		КонецЦикла;
		
	ИначеЕсли СкладВариантКонтроля = Перечисления.ВариантыКонтроля.ОстаткиСУчетомРезерва Тогда
		
		Для каждого Строка Из КорзинаПокупателя Цикл
			
			Если Строка.Доступность = НСтр("ru = 'В наличии'") И Строка.Количество/Строка.Доступно > 0.5 Тогда
				
				Строка.Доступность = НСтр("ru = 'Требует уточнения'");
				
			КонецЕсли;
			
		КонецЦикла;
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаПодбораНоменклатурыКлиент(АдресТоваровВХранилище)
	
	ОбработкаПодбораНоменклатурыСервер(АдресТоваровВХранилище);
	ПересчитатьИтоги();
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьТаблицуКорзиныПоДаннымРегистра()
	
	Если ЗначениеЗаполнено(Соглашение) Тогда
		Запрос = Новый Запрос;
		Запрос.Текст = ТекстЗапросаДанныеКорзиныПоРегистру() + ТекстЗапросаДанныеПоДоступностиТоваровНаСкладе() + ТекстЗапросаПолучениеЦен();
		УстановитьЗначенияПараметровВыполнитьЗапрос(Запрос);
	Иначе
		
		Запрос = Новый Запрос;
		Запрос.Текст = "ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	КорзинаПокупателя.Партнер,
		|	КорзинаПокупателя.Номенклатура,
		|	КорзинаПокупателя.Характеристика,
		|	КорзинаПокупателя.Упаковка,
		|	КорзинаПокупателя.КоличествоУпаковок,
		|	КорзинаПокупателя.Цена,
		|	КорзинаПокупателя.ДатаПомещения,
		|	КорзинаПокупателя.Валюта,
		|	КорзинаПокупателя.КОформлению
		|ИЗ
		|	РегистрСведений.КорзинаПокупателя КАК КорзинаПокупателя
		|ГДЕ
		|	КорзинаПокупателя.Партнер = &Партнер";
		
		Запрос.УстановитьПараметр("Партнер",Партнер);
		
		КорзинаПокупателя.Загрузить(Запрос.Выполнить().Выгрузить());
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьТаблицуКорзиныПриИзмененииРеквизитовШапки()
	
	КешироватьРеквизитыСклад();
	
	Запрос = Новый Запрос;
	Запрос.Текст = ТекстЗапросаДанныеКорзиныПоТабличнойЧасти() + ТекстЗапросаДанныеПоДоступностиТоваровНаСкладе() + ТекстЗапросаПолучениеЦен();
	
	УстановитьЗначенияПараметровВыполнитьЗапрос(Запрос);
	
КонецПроцедуры

&НаСервере
Процедура УстановитьЗначенияПараметровВыполнитьЗапрос(Запрос)
	
	Запрос.УстановитьПараметр("ДанныеКорзины",РеквизитФормыВЗначение("КорзинаПокупателя"));
	Запрос.УстановитьПараметр("НалогообложениеНДС",НалогообложениеНДС);
	Запрос.УстановитьПараметр("ЦенаВключаетНДС",ЦенаВключаетНДС);
	Запрос.УстановитьПараметр("Соглашение",Соглашение);
	Запрос.УстановитьПараметр("Валюта",Валюта);
	Запрос.УстановитьПараметр("ТекущаяДата",НачалоДня(ТекущаяДата()));
	Запрос.УстановитьПараметр("Склад",Склад);
	Запрос.УстановитьПараметр("Партнер",Партнер);
	Запрос.УстановитьПараметр("СтрокаВНаличии",НСтр("ru = 'В наличии'"));
	Запрос.УстановитьПараметр("СтрокаВыберитеСклад",НСтр("ru = 'Выберите склад'"));
	Запрос.УстановитьПараметр("СтрокаДоступноПодЗаказ",НСтр("ru = 'Доступно под заказ'"));
	Запрос.УстановитьПараметр("СтрокаНетНаСкладе",НСтр("ru = 'Нет на складе'"));
	Запрос.УстановитьПараметр("СтрокаСогласноГрафика",НСтр("ru = 'Согласно графика'"));
	Запрос.УстановитьПараметр("СтрокаУслугаДоступна",НСтр("ru = 'Услуга доступна'"));
	
	КорзинаПокупателя.Загрузить(Запрос.Выполнить().Выгрузить());
	
	ОбработатьДанныеКорзины();
	
КонецПроцедуры

&НаСервере
Процедура ВыполнитьЗаписьРегистрКорзинаПокупателя()
	
	НаборЗаписей = РегистрыСведений.КорзинаПокупателя.СоздатьНаборЗаписей();
	НаборЗаписей.Отбор.Партнер.Установить(Партнер,Истина);
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	ТаблицаКорзины.Номенклатура,
	|	ТаблицаКорзины.КОформлению,
	|	ТаблицаКорзины.Характеристика,
	|	ТаблицаКорзины.Упаковка,
	|	ТаблицаКорзины.КоличествоУпаковок,
	|	ТаблицаКорзины.Цена,
	|	ТаблицаКорзины.ДатаПомещения,
	|	ТаблицаКорзины.Валюта
	|ПОМЕСТИТЬ ТаблицаКорзины
	|ИЗ
	|	&ТаблицаКорзины КАК ТаблицаКорзины
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаКорзины.Номенклатура,
	|	ТаблицаКорзины.Характеристика,
	|	ТаблицаКорзины.Упаковка,
	|	СУММА(ТаблицаКорзины.КоличествоУпаковок) КАК КоличествоУпаковок,
	|	МАКСИМУМ(ТаблицаКорзины.Цена) КАК Цена,
	|	МАКСИМУМ(ТаблицаКорзины.КОформлению) КАК КОформлению,
	|	МИНИМУМ(ТаблицаКорзины.ДатаПомещения) КАК ДатаПомещения,
	|	&Партнер,
	|	&Валюта
	|ИЗ
	|	ТаблицаКорзины КАК ТаблицаКорзины
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаКорзины.Номенклатура,
	|	ТаблицаКорзины.Характеристика,
	|	ТаблицаКорзины.Упаковка";
	
	Запрос.УстановитьПараметр("Партнер",Партнер);
	Запрос.УстановитьПараметр("Валюта",Валюта);
	Запрос.УстановитьПараметр("ТаблицаКорзины",РеквизитФормыВЗначение("КорзинаПокупателя"));
	
	НаборЗаписей.Загрузить(Запрос.Выполнить().Выгрузить());
	НаборЗаписей.Записать();
	
КонецПроцедуры

&НаСервере
Процедура ВыполнитьДействияПриЗакрытииФормыНаСервере()
	
	СохранитьНастройки();
	ВыполнитьЗаписьРегистрКорзинаПокупателя();
	
КонецПроцедуры

&НаКлиенте
Процедура ПересчитатьИтоги()
	
	ИтогоВКорзине = 0;
	ИтогоКОформлению = 0;
	
	Для каждого Строка Из КорзинаПокупателя Цикл
		
		ИтогоВКорзине = ИтогоВКорзине + Строка.СуммаСНДС;
		Если Строка.КОформлению Тогда
			ИтогоКОформлению = ИтогоКОформлению + Строка.СуммаСНДС;
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработатьИзмененииДанныхКорзины()
	
	Элементы.Склад.Доступность = (ЗначениеЗаполнено(Соглашение) И НЕ СкладОпределенСоглашением);
	
	ПересчитатьИтоги();
	УправлениеДоступностью();
	
КонецПроцедуры

&НаСервере
Функция АдресВременногоХранилищаСКорзиной()

	Возврат ПоместитьВоВременноеХранилище(КорзинаПокупателя.Выгрузить(), УникальныйИдентификатор); 

КонецФункции

&НаСервере
Процедура ЗакупкаПоКомиссииПриИзмененииСервер()
	
	УстановитьРеквизитыФормыПоВыборке(СамообслуживаниеСервер.ПолучитьСоглашениеПартнераПоУмолчанию(Партнер, ХозяйственнаяОперация));
	
КонецПроцедуры