////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	Элементы.СтраницыПоОргФормеПредпринимателя.ОтображениеСтраниц = ОтображениеСтраницФормы.Нет;
	Элементы.СтраницыСообщенияИННИП.ОтображениеСтраниц = ОтображениеСтраницФормы.Нет;
	Элементы.СтраницыСообщенияИННЮЛ.ОтображениеСтраниц = ОтображениеСтраницФормы.Нет;
	Элементы.СтраницыСообщенияКППЮЛ.ОтображениеСтраниц = ОтображениеСтраницФормы.Нет;
	Элементы.СтраницыСообщенияОКАТО.ОтображениеСтраниц = ОтображениеСтраницФормы.Нет;
	Элементы.СтраницыСообщенияОКПО.ОтображениеСтраниц = ОтображениеСтраницФормы.Нет;
	Элементы.СтраницыСообщенияОГРН.ОтображениеСтраниц = ОтображениеСтраницФормы.Нет;
	
	Если Параметры.ИндивидуальныйПредприниматель = 1 Тогда
		Элементы.СтраницыПоОргФормеПредпринимателя.ТекущаяСтраница = Элементы.СтраницаИндивидуальныйПредприниматель;
		Заголовок = НСтр("ru='Реквизиты индивидуального предпринимателя'");
	Иначе
		Элементы.СтраницыПоОргФормеПредпринимателя.ТекущаяСтраница = Элементы.СтраницаЮридическоеЛицо;
		Заголовок = НСтр("ru='Реквизиты юридического лица'");
	КонецЕсли;
	
	// Заполним значения реквизитов
	РеквизитыФормы = ПолучитьРеквизиты();
	Для Каждого РеквизитФормы Из РеквизитыФормы Цикл 
		Если Параметры.Свойство(РеквизитФормы.Имя) Тогда
			ЭтаФорма[РеквизитФормы.Имя] = Параметры[РеквизитФормы.Имя];
		КонецЕсли;
	КонецЦикла;
	
	ИННСоответствуетТребованиям = Истина;
	КППСоответствуетТребованиям = Истина;
	КодПоОКПОСоответствуетТребованиям = Истина;
	ОГРНСоответствуетТребованиям = Истина;
	
	УстановитьЦветЗаголовкаПоляОшибки();
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ ШАПКИ ФОРМЫ

&НаКлиенте
Процедура ИННИППриИзменении(Элемент)
	ИННПриИзменении();
КонецПроцедуры

&НаКлиенте
Процедура ИННЮЛПриИзменении(Элемент)
	ИННПриИзменении();
КонецПроцедуры

&НаКлиенте
Процедура КППЮЛПриИзменении(Элемент)
	ПриИзмененииКПП();
	ПроверитьКорректностьКПП();
КонецПроцедуры

&НаКлиенте
Процедура КодПоОКПОПриИзменении(Элемент)
	ПроверитьКорректностьКодПоОКПО();
КонецПроцедуры

&НаКлиенте
Процедура ОГРНПриИзменении(Элемент)
	ПроверитьКорректностьОГРН();
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ ТАБЛИЧНОЙ ЧАСТИ <ИМЯ ТАБЛИЧНОЙ ЧАСТИ>

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ КОМАНД ФОРМЫ

&НаКлиенте
Процедура ЗавершитьРедактирование(Команда)
	ПараметрыЗакрытия = Новый Структура("
		|ИндивидуальныйПредприниматель, 
		|ИНН, 
		|КодНалоговогоОргана, 
		|КодПоОКАТО, 
		|КодПоОКПО, 
		|КПП, 
		|ОГРН, 
		|Префикс");
	ЗаполнитьЗначенияСвойств(ПараметрыЗакрытия, ЭтаФорма);
	
	Закрыть(ПараметрыЗакрытия);
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

////////////////////////////////////////////////////////////////////////////////
// При изменении реквизитов

&НаКлиенте 
Процедура ИННПриИзменении()
	// Проверим корректность заполнения
	ПроверитьКорректностьИНН();
	
	// Заполним КПП
	Если ПустаяСтрока(ИНН) И НЕ ПустаяСтрока(КПП) Тогда
		КПП = "";
	КонецЕсли;	
	
	Если СтрДлина(ИНН) >= 4 
	 И ПустаяСтрока(КПП) Тогда
		
		КПП = Лев(ИНН, 4) + "01001";
		
		ПриИзмененииКПП();
		
		ПроверитьКорректностьКПП();
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ПриИзмененииКПП()
	Если СтрДлина(КПП) >= 4 
	 И ПустаяСтрока(КодНалоговогоОргана) Тогда
		
		КодНалоговогоОргана = Лев(КПП, 4);
		
	КонецЕсли;
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// Прочее

&НаКлиенте 
Процедура ПроверитьКорректностьИНН()
	СообщениеОшибки = "";
	
	ИННСоответствуетТребованиям = ПустаяСтрока(ИНН) ИЛИ РегламентированныеДанныеКлиентСервер.ИННСоответствуетТребованиям(ИНН, ИндивидуальныйПредприниматель = 0, СообщениеОшибки);
	
	ПозицияДолжен = Найти(СообщениеОшибки, НСтр("ru='должен'"));
	СообщениеОшибки = СтрЗаменить(СообщениеОшибки, НСтр("ru='должен'"), НСтр("ru='Должен'"));
	СообщениеОшибки = Прав(СообщениеОшибки, СтрДлина(СообщениеОшибки) - ПозицияДолжен + 1);
	ПозицияПервойТочки = Найти(СообщениеОшибки, ".");
	СообщениеОшибки = Лев(СообщениеОшибки, ПозицияПервойТочки);
	
	СообщениеИНН = СообщениеОшибки;
	
	Если Не ИННСоответствуетТребованиям Тогда
		Элементы.СтраницыСообщенияИННИП.ТекущаяСтраница = Элементы.ЕстьСообщенияИННИП;
		Элементы.СтраницыСообщенияИННЮЛ.ТекущаяСтраница = Элементы.ЕстьСообщенияИННЮЛ;
		Элементы.ИННИП.ЦветТекстаЗаголовка = ЦветЗаголовкаПоляОшибки;
		Элементы.ИННЮЛ.ЦветТекстаЗаголовка = ЦветЗаголовкаПоляОшибки;
	Иначе
		Элементы.СтраницыСообщенияИННИП.ТекущаяСтраница = Элементы.НетСообщенийИННИП;
		Элементы.СтраницыСообщенияИННЮЛ.ТекущаяСтраница = Элементы.НетСообщенийИННЮЛ;
		Элементы.ИННИП.ЦветТекстаЗаголовка = ЦветЗаголовкаАвто;
		Элементы.ИННЮЛ.ЦветТекстаЗаголовка = ЦветЗаголовкаАвто;
	КонецЕсли;
	Элементы.ЗавершитьРедактирование.Доступность = РеквизитыОрганизацииСоответствуютТребованиям();
КонецПроцедуры 

&НаКлиенте 
Процедура ПроверитьКорректностьКПП()
	СообщениеОшибки = "";
	
	КППСоответствуетТребованиям = ПустаяСтрока(КПП) ИЛИ РегламентированныеДанныеКлиентСервер.КППСоответствуетТребованиям(КПП, СообщениеОшибки);
	
	ПозицияДолжен = Найти(СообщениеОшибки, НСтр("ru='должен'"));
	СообщениеОшибки = СтрЗаменить(СообщениеОшибки, НСтр("ru='должен'"), НСтр("ru='Должен'"));
	СообщениеОшибки = Прав(СообщениеОшибки, СтрДлина(СообщениеОшибки) - ПозицияДолжен + 1);
	ПозицияПервойТочки = Найти(СообщениеОшибки, ".");
	СообщениеОшибки = Лев(СообщениеОшибки, ПозицияПервойТочки);
	
	СообщениеКПП = СообщениеОшибки;
	
	Если Не КППСоответствуетТребованиям Тогда
		Элементы.СтраницыСообщенияКППЮЛ.ТекущаяСтраница = Элементы.ЕстьСообщенияКППЮЛ;
		Элементы.КППЮЛ.ЦветТекстаЗаголовка = ЦветЗаголовкаПоляОшибки;
	Иначе
		Элементы.СтраницыСообщенияКППЮЛ.ТекущаяСтраница = Элементы.НетСообщенийКППЮЛ;
		Элементы.КППЮЛ.ЦветТекстаЗаголовка = ЦветЗаголовкаАвто;
	КонецЕсли;
	Элементы.ЗавершитьРедактирование.Доступность = РеквизитыОрганизацииСоответствуютТребованиям();
КонецПроцедуры

&НаКлиенте 
Процедура ПроверитьКорректностьКодПоОКПО()
	СообщениеОшибки = "";
	
	КодПоОКПОСоответствуетТребованиям = ПустаяСтрока(КодПоОКПО) ИЛИ РегламентированныеДанныеКлиентСервер.КодПоОКПОСоответствуетТребованиям(КодПоОКПО, ИндивидуальныйПредприниматель = 0, СообщениеОшибки);
	
	ПозицияДолжен = Найти(СообщениеОшибки, НСтр("ru='должен'"));
	СообщениеОшибки = СтрЗаменить(СообщениеОшибки, НСтр("ru='должен'"), НСтр("ru='Должен'"));
	СообщениеОшибки = Прав(СообщениеОшибки, СтрДлина(СообщениеОшибки) - ПозицияДолжен + 1);
	ПозицияПервойТочки = Найти(СообщениеОшибки, ".");
	СообщениеОшибки = Лев(СообщениеОшибки, ПозицияПервойТочки);
	
	СообщениеКодПоОКПО = СообщениеОшибки;
	
	Если Не КодПоОКПОСоответствуетТребованиям Тогда
		Элементы.СтраницыСообщенияОКПО.ТекущаяСтраница = Элементы.ЕстьСообщенияОКПО;
		Элементы.КодПоОКПО.ЦветТекстаЗаголовка = ЦветЗаголовкаПоляОшибки;
	Иначе
		Элементы.СтраницыСообщенияОКПО.ТекущаяСтраница = Элементы.НетСообщенийОКПО;
		Элементы.КодПоОКПО.ЦветТекстаЗаголовка = ЦветЗаголовкаАвто;
	КонецЕсли;
	Элементы.ЗавершитьРедактирование.Доступность = РеквизитыОрганизацииСоответствуютТребованиям();
КонецПроцедуры

&НаКлиенте 
Процедура ПроверитьКорректностьОГРН()
	СообщениеОшибки = "";
	
	ОГРНСоответствуетТребованиям = ПустаяСтрока(ОГРН) ИЛИ РегламентированныеДанныеКлиентСервер.ОГРНСоответствуетТребованиям(ОГРН, ИндивидуальныйПредприниматель = 0, СообщениеОшибки);
	
	ПозицияДолжен = Найти(СообщениеОшибки, НСтр("ru='должен'"));
	СообщениеОшибки = СтрЗаменить(СообщениеОшибки, НСтр("ru='должен'"), НСтр("ru='Должен'"));
	СообщениеОшибки = Прав(СообщениеОшибки, СтрДлина(СообщениеОшибки) - ПозицияДолжен + 1);
	ПозицияПервойТочки = Найти(СообщениеОшибки, ".");
	СообщениеОшибки = Лев(СообщениеОшибки, ПозицияПервойТочки);
	
	СообщениеОГРН = СообщениеОшибки;
	
	Если Не ОГРНСоответствуетТребованиям Тогда
		Элементы.СтраницыСообщенияОГРН.ТекущаяСтраница = Элементы.ЕстьСообщенияОГРН;
		Элементы.ОГРН.ЦветТекстаЗаголовка = ЦветЗаголовкаПоляОшибки;
	Иначе
		Элементы.СтраницыСообщенияОГРН.ТекущаяСтраница = Элементы.НетСообщенийОГРН;
		Элементы.ОГРН.ЦветТекстаЗаголовка = ЦветЗаголовкаАвто;
	КонецЕсли;
	Элементы.ЗавершитьРедактирование.Доступность = РеквизитыОрганизацииСоответствуютТребованиям();
КонецПроцедуры

&НаКлиенте 
Функция РеквизитыОрганизацииСоответствуютТребованиям()
	Возврат ИННСоответствуетТребованиям И КППСоответствуетТребованиям И КодПоОКПОСоответствуетТребованиям И ОГРНСоответствуетТребованиям;
КонецФункции

&НаСервере 
Процедура УстановитьЦветЗаголовкаПоляОшибки()
	ЦветЗаголовкаПоляОшибки = ЦветаСтиля.ПоясняющийОшибкуТекст;
	ЦветЗаголовкаАвто = ЦветаСтиля.ЦветТекстаФормы;
КонецПроцедуры
