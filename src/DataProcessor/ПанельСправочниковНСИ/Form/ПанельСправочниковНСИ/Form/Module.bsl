////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	УправлениеЭлементами();
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ КОМАНД ФОРМЫ

&НаКлиенте
Процедура ОткрытьВидыКонтактнойИнформации(Команда)
	
	ОткрытьФорму("Справочник.ВидыКонтактнойИнформации.ФормаСписка", , ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьСправочникБизнесРегионы(Команда)
	
	ОткрытьФорму("Справочник.БизнесРегионы.ФормаСписка", , ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьСправочникРолиКонтактныхЛиц(Команда)
	
	ОткрытьФорму("Справочник.РолиКонтактныхЛицПартнеров.ФормаСписка", , ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьСправочникВидыСвязейПартнеров(Команда)
	
	ОткрытьФорму("Справочник.ВидыСвязейМеждуПартнерами.ФормаСписка", , ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьСправочникГруппыДоступаПартнеров(Команда)
	
	ОткрытьФорму("Справочник.ГруппыДоступаПартнеров.ФормаСписка", , ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьСправочникВидыДокументовФизическихЛиц(Команда)
	
	ОткрытьФорму("Справочник.ВидыДокументовФизическихЛиц.ФормаСписка", , ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьСправочникГруппыДоступаФизическихЛиц(Команда)
	
	ОткрытьФорму("Справочник.ГруппыДоступаФизическихЛиц.ФормаСписка", , ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьСправочникВидыСвязейФизическихЛиц(Команда)
	
	ОткрытьФорму("Справочник.ВидыСвязейМеждуФизЛицами.ФормаСписка", , ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьНастройкиНоменклатурыПродаваемойСовместно(Команда)
	
	ОткрытьФормуМодально("РегистрСведений.НоменклатураПродаваемаяСовместно.Форма.НастройкаПоискаАссоциаций", Неопределено);
	
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьВариантыКлассификацииЗадолженности(Команда)
	
	ОткрытьФорму("Справочник.ВариантыКлассификацииЗадолженности.ФормаСписка", , ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьВидыНоменклатуры(Команда)
	
	ОткрытьФорму("Справочник.ВидыНоменклатуры.ФормаСписка", , ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьГруппыДоступаНоменклатуры(Команда)
	
	ОткрытьФорму("Справочник.ГруппыДоступаНоменклатуры.ФормаСписка", , ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьЕдиницыИзмерения(Команда)
	
	ОткрытьФорму("Справочник.ЕдиницыИзмерения.ФормаСписка", , ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьНаборыУпаковок(Команда)
	
	ОткрытьФорму("Справочник.НаборыУпаковок.ФормаСписка", , ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьПолитикиУчетаСерий(Команда)
	
	ОткрытьФорму("Справочник.ПолитикиУчетаСерий.ФормаСписка", , ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьСкладскиеГруппыНоменклатуры(Команда)
	
	ОткрытьФорму("Справочник.СкладскиеГруппыНоменклатуры.ФормаСписка", , ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьСкладскиеГруппыУпаковок(Команда)
	
	ОткрытьФорму("Справочник.СкладскиеГруппыУпаковок.ФормаСписка", , ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьТипоразмерыУпаковок(Команда)
	
	ОткрытьФорму("Справочник.ТипоразмерыУпаковок.ФормаСписка", , ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьТипоразмерыЯчеек(Команда)
	
	ОткрытьФорму("Справочник.ТипоразмерыЯчеек.ФормаСписка", , ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьЦеновыеГруппы(Команда)
	
	ОткрытьФорму("Справочник.ЦеновыеГруппы.ФормаСписка", , ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьСвойстваКлассификацииЗадолженности(Команда)
	
	ОткрытьФорму("Справочник.ВариантыКлассификацииЗадолженности.ФормаОбъекта",
		Новый Структура("Ключ",ПолучитьПервыйВариантКлассификацииЗадолженностиНаСервере()),
		ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьСклад(Команда)
	
	ОткрытьФорму("Справочник.Склады.ФормаОбъекта", Новый Структура("Ключ", Склад()));
	
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьВалюту(Команда)
	
	ОткрытьФорму("Справочник.Валюты.ФормаОбъекта", Новый Структура("Ключ", Валюта()));
	
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьОрганизацию(Команда)
	
	ОткрытьФорму("Справочник.Организации.ФормаОбъекта", Новый Структура("Ключ", Организация()));
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// Обмен электронными документами

&НаКлиенте
Процедура ОткрытьТиповыеСоглашенияОбЭД(Команда)
	
	ОткрытьФорму("Справочник.СоглашенияОбИспользованииЭД.Форма.ФормаСпискаТиповыхСоглашений", , ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьСоглашенияОбИспользованииЭД(Команда)
	
	ОткрытьФорму("Справочник.СоглашенияОбИспользованииЭД.Форма.ФормаСписка", , ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьНоменклатуруПродаваемуюСовместно(Команда)
	ОткрытьФорму("РегистрСведений.НоменклатураПродаваемаяСовместно.ФормаСписка", , ЭтаФорма);
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

////////////////////////////////////////////////////////////////////////////////
// Прочее

&НаСервере
Процедура УправлениеЭлементами()

	//Функциональные опции
	ИспользоватьГруппыДоступаПартнеров     = ПолучитьФункциональнуюОпцию("ИспользоватьГруппыДоступаПартнеров");
	ИспользоватьГруппыНоменклатуры         = ПолучитьФункциональнуюОпцию("ИспользоватьГруппыДоступаНоменклатуры");
	ИспользоватьРолиКонтактныхЛицПартнеров = ПолучитьФункциональнуюОпцию("ИспользоватьРолиКонтактныхЛицПартнеров");
	ИспользоватьБизнесРегионы              = ПолучитьФункциональнуюОпцию("ИспользоватьБизнесРегионы");
	ИспользоватьВидыСвязейПартнеров        = ПолучитьФункциональнуюОпцию("ИспользоватьВидыСвязейПартнеров");
	ИспользоватьОбменЭД                    = ПолучитьФункциональнуюОпцию("ИспользоватьОбменЭД");
	ИспользоватьУпаковкиНоменклатуры       = ПолучитьФункциональнуюОпцию("ИспользоватьУпаковкиНоменклатуры");
	ИспользоватьЦеновыеГруппы              = ПолучитьФункциональнуюОпцию("ИспользоватьЦеновыеГруппы");
	ИспользоватьГруппыДоступаНоменклатуры  = ПолучитьФункциональнуюОпцию("ИспользоватьГруппыДоступаНоменклатуры");
	ИспользоватьСерииНоменклатуры          = ПолучитьФункциональнуюОпцию("ИспользоватьСерииНоменклатуры");
	ИспользоватьАдресноеХранение           = ПолучитьФункциональнуюОпцию("ИспользоватьАдресноеХранение", Новый Структура);
	ИспользоватьНесколькоКлассификацийЗадолженности	= Константы.ИспользоватьНесколькоКлассификацийЗадолженности.Получить();
	ИспользоватьНесколькоОрганизаций       = ПолучитьФункциональнуюОпцию("ИспользоватьНесколькоОрганизаций");
	ИспользоватьНесколькоВалют             = ПолучитьФункциональнуюОпцию("ИспользоватьНесколькоВалют");
	ИспользоватьНесколькоСкладов           = ПолучитьФункциональнуюОпцию("ИспользоватьНесколькоСкладов");
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	Склады.Ссылка
	|ИЗ
	|	Справочник.Склады КАК Склады
	|ГДЕ
	|	Склады.ИспользоватьАдресноеХранение
	|	И НЕ Склады.ЭтоГруппа
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	СкладскиеПомещения.Ссылка
	|ИЗ
	|	Справочник.СкладскиеПомещения КАК СкладскиеПомещения
	|ГДЕ
	|	СкладскиеПомещения.ИспользоватьАдресноеХранение";
	
	ИспользоватьАдресноеХранение = Не Запрос.Выполнить().Пустой();
	
	ИспользоватьВидыСвязейМеждуФизическимиЛицами    = ПолучитьФункциональнуюОпцию("ИспользоватьВидыСвязейМеждуФизическимиЛицами");
	ИспользоватьНоменклатуруПродаваемуюСовместно    = ПолучитьФункциональнуюОпцию("ИспользоватьНоменклатуруПродаваемуюСовместно");
	
	//Право чтения
	ПравоДоступаГруппыДоступаПартнеров      = ПравоДоступа("Просмотр", Метаданные.Справочники.ГруппыДоступаПартнеров);
	ПравоДоступаРолиКонтактныхЛицПартнеров  = ПравоДоступа("Просмотр", Метаданные.Справочники.РолиКонтактныхЛицПартнеров);
	ПравоДоступаБизнесРегионы               = ПравоДоступа("Просмотр", Метаданные.Справочники.БизнесРегионы);
	ПравоДоступаГруппыДоступаФизическихЛиц  = ПравоДоступа("Просмотр", Метаданные.Справочники.ГруппыДоступаФизическихЛиц);
	ПравоДоступаСоглашенияОбИспользованииЭД = ПравоДоступа("Просмотр", Метаданные.Справочники.СоглашенияОбИспользованииЭД);
	ПравоДоступаУпаковки                    = ПравоДоступа("Просмотр", Метаданные.Справочники.УпаковкиНоменклатуры);
	ПравоДоступаНаборыУпаковок              = ПравоДоступа("Просмотр", Метаданные.Справочники.НаборыУпаковок);
	ПравоДоступаЕдиницыИзмерения            = ПравоДоступа("Просмотр", Метаданные.Справочники.ЕдиницыИзмерения);
	ПравоДоступаГруппыДоступаНоменклатуры   = ПравоДоступа("Просмотр", Метаданные.Справочники.ГруппыДоступаНоменклатуры);
	ПравоДоступаСкладскиеГруппыУпаковок     = ПравоДоступа("Просмотр", Метаданные.Справочники.СкладскиеГруппыУпаковок);
	ПравоДоступаВидыНоменклатуры            = ПравоДоступа("Просмотр", Метаданные.Справочники.ВидыНоменклатуры);
	ПравоДоступаПолитикиУчетаСерий          = ПравоДоступа("Просмотр", Метаданные.Справочники.ПолитикиУчетаСерий);
	ПравоДоступаТипоразмерыЯчеек            = ПравоДоступа("Просмотр", Метаданные.Справочники.ТипоразмерыЯчеек);
	ПравоДоступаТипоразмерыУпаковок         = ПравоДоступа("Просмотр", Метаданные.Справочники.ТипоразмерыУпаковок);
	ПравоДоступаЦеновыеГруппы               = ПравоДоступа("Просмотр", Метаданные.Справочники.ЦеновыеГруппы);
	ПравоДоступаВидыКонтактнойИнформации    = ПравоДоступа("Просмотр", Метаданные.Справочники.ВидыКонтактнойИнформации);
	
	ПравоДоступаВариантыКлассификацииЗадолженности = ПравоДоступа("Просмотр", Метаданные.Справочники.ВариантыКлассификацииЗадолженности);
	ПравоДоступаНоменклатураПродаваемаяСовместно   = ПравоДоступа("Просмотр", Метаданные.РегистрыСведений.НоменклатураПродаваемаяСовместно);
	ПравоДоступаВидыСвязейМеждуПартнерами          = ПравоДоступа("Просмотр", Метаданные.Справочники.ВидыСвязейМеждуПартнерами);
	ПравоДоступаВидыДокументовФизическихЛиц        = ПравоДоступа("Просмотр", Метаданные.Справочники.ВидыДокументовФизическихЛиц);
	ПравоДоступаВидыСвязейМеждуФизическимиЛицами   = ПравоДоступа("Просмотр", Метаданные.Справочники.ВидыСвязейМеждуФизЛицами);
	ПравоДоступаСкладскиеГруппыНоменклатуры        = ПравоДоступа("Просмотр", Метаданные.Справочники.СкладскиеГруппыНоменклатуры);
	ПравоДоступаСкладскиеГруппыДоступаНоменклатуры = ПравоДоступа("Просмотр", Метаданные.Справочники.ГруппыДоступаНоменклатуры);
	
	ПравоДоступаОрганизации = ПравоДоступа("Просмотр", Метаданные.Справочники.Организации);
	ПравоДоступаВалюты      = ПравоДоступа("Просмотр", Метаданные.Справочники.Валюты);
	ПравоДоступаСклады      = ПравоДоступа("Просмотр", Метаданные.Справочники.Склады);
	
	//Партнеры и контактные лица
	Элементы.ГруппаГруппыДоступаПартнеров.Видимость = ИспользоватьГруппыДоступаПартнеров
		И ПравоДоступаГруппыДоступаПартнеров;
	Элементы.ГруппаРолиКонтактныхЛиц.Видимость = ИспользоватьРолиКонтактныхЛицПартнеров
		И ПравоДоступаРолиКонтактныхЛицПартнеров;
	Элементы.ГруппаБизнесРегионы.Видимость = ИспользоватьБизнесРегионы
		И ПравоДоступаБизнесРегионы;
	Элементы.ГруппаВидыСвязейПартнеров.Видимость = ИспользоватьВидыСвязейПартнеров
		И ПравоДоступаВидыСвязейМеждуПартнерами;
	Элементы.ГруппаВариантыКлассификацииЗадолженности.Видимость	= ИспользоватьНесколькоКлассификацийЗадолженности 
		И ПравоДоступаВариантыКлассификацииЗадолженности;
	Элементы.ГруппаВариантКлассификацииЗадолженности.Видимость	= НЕ ИспользоватьНесколькоКлассификацийЗадолженности
		И ПравоДоступаВариантыКлассификацииЗадолженности;
	
	Если Не Элементы.ГруппаРолиКонтактныхЛиц.Видимость Тогда
		Элементы.ГруппаПартнерыКонтактныеЛица.Заголовок = НСтр("ru = 'Партнеры'");
	КонецЕсли;
	
	//Обмен электронными документами
	Если Не ИспользоватьОбменЭД Или Не ПравоДоступаСоглашенияОбИспользованииЭД Тогда
		Элементы.ГруппаСоглашенияОбИспользованииЭД.Видимость = Ложь;
		Элементы.ГруппаТиповыеСоглашенияОбИспользованииЭД.Видимость = Ложь;
	КонецЕсли;

	//Номенклатура
	Элементы.ГруппаНастройкиНоменклатурыПродаваемойСовместно.Видимость = ИспользоватьНоменклатуруПродаваемуюСовместно
		И ПравоДоступаНоменклатураПродаваемаяСовместно;
	Элементы.ГруппаНоменклатураПродаваемаяСовместно.Видимость = ИспользоватьНоменклатуруПродаваемуюСовместно
		И ПравоДоступаНоменклатураПродаваемаяСовместно;
		
	Элементы.ГруппаВидыНоменклатуры.Видимость = ПравоДоступаВидыНоменклатуры;
	Элементы.ГруппаПолитикиУчетаСерий.Видимость = ИспользоватьСерииНоменклатуры
		И ПравоДоступаПолитикиУчетаСерий;
	Элементы.ГруппаЕдиницыИзмерения.Видимость = ПравоДоступаЕдиницыИзмерения;
	Элементы.ГруппаНаборыУпаковок.Видимость = ИспользоватьУпаковкиНоменклатуры
		И ПравоДоступаНаборыУпаковок;
	Элементы.ГруппаСкладскиеГруппыНоменклатуры.Видимость = ИспользоватьАдресноеХранение
		И ПравоДоступаСкладскиеГруппыНоменклатуры;
	Элементы.ГруппаСкладскиеГруппыУпаковок.Видимость = ИспользоватьАдресноеХранение
		И ПравоДоступаСкладскиеГруппыУпаковок;
	Элементы.ГруппаТипоразмерыУпаковок.Видимость = ПравоДоступаТипоразмерыУпаковок;
	Элементы.ГруппаЦеновыеГруппы.Видимость = ИспользоватьЦеновыеГруппы
		И ПравоДоступаЦеновыеГруппы;
	Элементы.ГруппаГруппыДоступаНоменклатуры.Видимость = ИспользоватьГруппыДоступаНоменклатуры
		И ПравоДоступаГруппыДоступаНоменклатуры;
	
	//Физические лица
	Элементы.ГруппаВидыДокументовФизическихЛиц.Видимость = ПравоДоступаВидыДокументовФизическихЛиц;
	Элементы.ГруппаВидыСвязейМеждуФизическимиЛицами.Видимость = ПравоДоступаВидыСвязейМеждуФизическимиЛицами
		И ИспользоватьВидыСвязейМеждуФизическимиЛицами;
	Элементы.ГруппаГруппыДоступаФизическихЛиц.Видимость =
		ПравоДоступаГруппыДоступаФизическихЛиц
		;
	
	//Прочее
	Элементы.ГруппаВидыКонтактнойИнформации.Видимость = ПравоДоступаВидыКонтактнойИнформации;
	Элементы.ГруппаТипоразмерыЯчеек.Видимость = ИспользоватьАдресноеХранение И ПравоДоступаТипоразмерыЯчеек;
	
	ОбщегоНазначенияУТКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "ГруппаОрганизации",              "Видимость", Не ИспользоватьНесколькоОрганизаций И ПравоДоступаОрганизации);
	ОбщегоНазначенияУТКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "ГруппаВалюты",                   "Видимость", Не ИспользоватьНесколькоВалют И ПравоДоступаВалюты);
	ОбщегоНазначенияУТКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "ГруппаНастройкаСкладскогоУчета", "Видимость", Не ИспользоватьНесколькоСкладов И ПравоДоступаСклады);

КонецПроцедуры

&НаСервереБезКонтекста
Функция ПолучитьПервыйВариантКлассификацииЗадолженностиНаСервере()
	Возврат ДенежныеСредстваСервер.ПолучитьПервыйВариантКлассификацииЗадолженности();
КонецФункции // ПолучитьПервыйВариантКлассификацииЗадолженностиНаСервере()

&НаСервереБезКонтекста
Функция Склад()
	Возврат Справочники.Склады.СкладПоУмолчанию();
КонецФункции

&НаСервереБезКонтекста
Функция Валюта()
	Возврат ДоходыИРасходыСервер.ПолучитьВалютуУправленческогоУчета();
КонецФункции

&НаСервереБезКонтекста
Функция Организация()
	Возврат Справочники.Организации.ПолучитьОрганизациюПоУмолчанию();
КонецФункции
