////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	// Пропускаем инициализацию, чтобы гарантировать получение формы при передаче параметра "АвтоТест".
	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;
	КонецЕсли;
	
	Помещение = Параметры.Помещение;
	Склад = Параметры.Склад;
	
	ИдентификаторСкладаПомещения = Строка(Склад.УникальныйИдентификатор()) + Строка(Помещение.УникальныйИдентификатор());
	
	Настройки = ОбщегоНазначения.ХранилищеОбщихНастроекЗагрузить("ФормаУправлениеОтгрузкойФормаНастроекНастройкиФормы" + ИдентификаторСкладаПомещения);
	Если Настройки <> Неопределено Тогда
		Если Настройки.Свойство("ЗонаОтгрузки") Тогда	
			ЗонаОтгрузки = Настройки.ЗонаОтгрузки;		
		КонецЕсли;
		Если Настройки.Свойство("НазначитьЗонуОтгрузки") Тогда	
			НазначитьЗонуОтгрузки = Настройки.НазначитьЗонуОтгрузки;		
		КонецЕсли;
		Если Настройки.Свойство("ПоВсемРаспоряжениям") Тогда	
			ПоВсемРаспоряжениям = Настройки.ПоВсемРаспоряжениям;		
		КонецЕсли;
	КонецЕсли;
	
	УстановитьВидимость();
	УстановитьУмолчания();
	УстановитьДоступность();
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ ШАПКИ ФОРМЫ

&НаКлиенте
Процедура НазначитьЗонуОтгрузкиПриИзменении(Элемент)
	Элементы.ЗонаОтгрузки.Доступность           = НазначитьЗонуОтгрузки;
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ КОМАНД ФОРМЫ

&НаКлиенте
Процедура ЗакрытьБезСохранения(Команда)
	Закрыть(КодВозвратаДиалога.Отмена);
КонецПроцедуры

&НаКлиенте
Процедура ЗакрытьССохранением(Команда)
	
	ОчиститьСообщения();
	ОшибкаПроверки = Ложь;

	Если Элементы.ГруппаЗонаОтгрузки.Видимость
		И НазначитьЗонуОтгрузки
		И Не ЗначениеЗаполнено(ЗонаОтгрузки) Тогда
		
		ТекстСообщения = НСтр("ru='Поле ""Зона отгрузки"" не заполнено.'");
		
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения,,"ЗонаОтгрузки",);
		
		ОшибкаПроверки = Истина;
		
	КонецЕсли;
	
	Если ОшибкаПроверки Тогда
		Возврат;
	КонецЕсли;
	
	ЗаполнитьЗначенияСвойств(ВладелецФормы,ЭтаФорма,
		"ЗонаОтгрузки,НазначитьЗонуОтгрузки,ПоВсемРаспоряжениям");
	ИдентификаторСкладаПомещения = Строка(Склад.УникальныйИдентификатор()) + Строка(Помещение.УникальныйИдентификатор());

	ПараметрыЗакрытия = Новый Структура;
	ПараметрыЗакрытия.Вставить("ЗонаОтгрузки",ЗонаОтгрузки);
	ПараметрыЗакрытия.Вставить("НазначитьЗонуОтгрузки", НазначитьЗонуОтгрузки);
	ПараметрыЗакрытия.Вставить("ПоВсемРаспоряжениям", ПоВсемРаспоряжениям);
	
	ОбщегоНазначения.ХранилищеОбщихНастроекСохранить("ФормаУправлениеОтгрузкойФормаНастроекНастройкиФормы" + ИдентификаторСкладаПомещения
		,
		,
		ПараметрыЗакрытия);
	
	Закрыть(КодВозвратаДиалога.ОК);
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

////////////////////////////////////////////////////////////////////////////////
// Прочее

&НаСервере
Процедура УстановитьВидимость()
	
	Элементы.ПоВсемРаспоряжениям.Видимость 	    = (Параметры.Операция = "ФормированиеОрдеров")
												   Или (Параметры.Операция = "ФормированиеОрдеровАдресныйСклад");
	Элементы.ГруппаЗонаОтгрузки.Видимость       = (Параметры.Операция = "ВыборЗоныОтгрузки")
													Или (Параметры.Операция = "ФормированиеОрдеровАдресныйСклад")
													Или (Параметры.Операция = "ФормированиеЗаданий");		
КонецПроцедуры

&НаСервере
Процедура УстановитьУмолчания()
	
	Если Не ЗначениеЗаполнено(ЗонаОтгрузки) Тогда
		ЗонаОтгрузки = Справочники.СкладскиеЯчейки.ЗонаОтгрузкиПоУмолчанию(Склад,Помещение);
	КонецЕсли;
		
КонецПроцедуры

&НаСервере
Процедура УстановитьДоступность()
	Элементы.ЗонаОтгрузки.Доступность           = НазначитьЗонуОтгрузки;
КонецПроцедуры



