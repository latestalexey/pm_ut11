////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ИнициализироватьНачальныеЗначенияРеквизитов();
	
	УстановитьВидимостьДоступностьЗависимыхЭлементовФормы();
	
КонецПроцедуры

&НаКлиенте
Процедура ПриЗакрытии()
	
	Если ТребуетсяОбновлениеИнтерфейса Тогда
		ОбновитьИнтерфейс();
	КонецЕсли;
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБНОВЛЕНИЕ ИНТЕРФЕЙСА

&НаКлиенте 
Процедура ПодключитьОбработчикОжиданияОбновленияИнтерфейса()
	
	ТребуетсяОбновлениеИнтерфейса = Истина;
	
	#Если НЕ ВебКлиент Тогда
	ПодключитьОбработчикОжидания("ОбработчикОжиданияОбновленияИнтерфейса", 1, Истина);
	#КонецЕсли 
	
КонецПроцедуры

&НаКлиенте 
Процедура ОбработчикОжиданияОбновленияИнтерфейса()
	
	ОбновитьИнтерфейс();
	
	ТребуетсяОбновлениеИнтерфейса = Ложь;
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ ФОРМЫ

&НаКлиенте
Процедура ИспользоватьИнтеграциюС1СДокументооборотПриИзменении(Элемент)
	
	СохранитьЗначениеКонстанты("ИспользоватьИнтеграциюС1СДокументооборот");
	
	ПодключитьОбработчикОжиданияОбновленияИнтерфейса();
	
КонецПроцедуры

&НаКлиенте
Процедура ИспользоватьСогласованиеЧерез1СДокументооборотПриИзменении(Элемент)
	
	СохранитьЗначениеКонстанты(Элемент.Имя);

КонецПроцедуры

&НаКлиенте
Процедура АдресВебСервиса1СДокументооборотПриИзменении(Элемент)
	
	СохранитьЗначениеКонстанты("АдресВебСервиса1СДокументооборот");
	
	ПодключитьОбработчикОжиданияОбновленияИнтерфейса();
	
КонецПроцедуры

&НаКлиенте
Процедура КорневаяПапкаФайлов1СДокументооборотНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	Попытка
		
		Если ПользовательДокументооборот = Неопределено Или ПустаяСтрока(ПользовательДокументооборот) Тогда
			КодВозврата = ОткрытьФормуМодально("Обработка.ИнтеграцияС1СДокументооборот.Форма.АвторизацияВ1СДокументооборот");
			Если ТипЗнч(КодВозврата) = Тип("Структура") Тогда
				ПользовательДокументооборот = КодВозврата.Пользователь;
			Иначе
				Возврат;
			КонецЕсли;		
		КонецЕсли;	
		
		ПараметрыФормы = Новый Структура;
		ПараметрыФормы.Вставить("ТипОбъектаВыбора", "DMFileFolder");
		ПараметрыФормы.Вставить("Отбор", Неопределено);
		ПараметрыФормы.Вставить("ВыбранныйЭлемент", НаборКонстант.ИдентификаторКорневойПапкиФайлов1СДокументооборот);
		
		ЗаголовокФормы = НСтр("ru = 'Выбор папки файлов'");
		ПараметрыФормы.Вставить("Заголовок", ЗаголовокФормы);
		
		Результат = ОткрытьФормуМодально("Обработка.ИнтеграцияС1СДокументооборот.Форма.ВыборИзСписка", ПараметрыФормы, ЭтаФорма);
		
		Если ТипЗнч(Результат) = Тип("Структура") Тогда 
			НаборКонстант.ИдентификаторКорневойПапкиФайлов1СДокументооборот = Результат.РеквизитID;
			НаборКонстант.НаименованиеКорневойПапкиФайлов1СДокументооборот = Результат.РеквизитПредставление;
			
		КонецЕсли;	
		
	Исключение
		
		СтрокаОшибки = НСтр("ru='Не получается подключиться к базе 1С:Документооборот. 
								|Проверьте, что указан правильный адрес для подключения к базе 1С:Документооборота (в поле URL) 
								|и база 1С:Документооборота опубликована на веб сервере. 
								|
								|Подробное описание ошибки:'")
		+ Символы.ПС + Символы.ПС + Символы.ПС + ПодробноеПредставлениеОшибки(ИнформацияОбОшибке());
		Предупреждение(СтрокаОшибки);
		
	КонецПопытки;
	
	СохранитьЗначениеКонстанты("ИдентификаторКорневойПапкиФайлов1СДокументооборот");
	СохранитьЗначениеКонстанты("НаименованиеКорневойПапкиФайлов1СДокументооборот");
	
КонецПроцедуры

&НаКлиенте
Процедура КорневаяПапкаФайлов1СДокументооборотОчистка(Элемент, СтандартнаяОбработка)
	
	НаборКонстант.ИдентификаторКорневойПапкиФайлов1СДокументооборот = "";
	НаборКонстант.НаименованиеКорневойПапкиФайлов1СДокументооборот = "";
	
	СохранитьЗначениеКонстанты("ИдентификаторКорневойПапкиФайлов1СДокументооборот");
	СохранитьЗначениеКонстанты("НаименованиеКорневойПапкиФайлов1СДокументооборот");
	
КонецПроцедуры

&НаКлиенте
Процедура МаксимальныйРазмерФайлаДляПередачиПриИзменении(Элемент)
	
	НаборКонстант.МаксимальныйРазмерФайлаДляПередачиВ1СДокументооборот = МаксимальныйРазмерФайлаДляПередачи * (1024*1024);
	
	СохранитьЗначениеКонстанты("МаксимальныйРазмерФайлаДляПередачиВ1СДокументооборот");
	
КонецПроцедуры


////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ КОМАНД ФОРМЫ

 &НаКлиенте
Процедура НастройкиЗаполненияОбъектов1СДокументооборота(Команда)
	
	ОткрытьФорму("Справочник.НастройкиЗаполненияОбъектов1СДокументооборота.ФормаСписка",,ЭтаФорма);
	
КонецПроцедуры


////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

&НаСервере
Функция ПолучитьМаксимальныйРазмерПередаваемогоФайла()
	
	УстановитьПривилегированныйРежим(Истина);
	
	МаксимальныйРазмерФайлаПередачи = Константы.МаксимальныйРазмерФайлаДляПередачиВ1СДокументооборот.Получить();
	
	Если МаксимальныйРазмерФайлаПередачи = Неопределено Или МаксимальныйРазмерФайлаПередачи = 0 Тогда
		МаксимальныйРазмерФайлаПередачи = 10485760; // 10 мб
		Константы.МаксимальныйРазмерФайлаДляПередачиВ1СДокументооборот.Установить(МаксимальныйРазмерФайлаПередачи);
	КонецЕсли;
	
	Возврат МаксимальныйРазмерФайлаПередачи;
	
КонецФункции

&НаСервере
Процедура ИнициализироватьНачальныеЗначенияРеквизитов()
	
	// Инициализация набора констант
	НаборКонстантОбъект = ДанныеФормыВЗначение(НаборКонстант, Тип("КонстантыНабор"));
	НаборКонстантОбъект.Прочитать();
	ЗначениеВДанныеФормы(НаборКонстантОбъект, НаборКонстант);
	
	МаксимальныйРазмерФайлаДляПередачи  = ПолучитьМаксимальныйРазмерПередаваемогоФайла() / (1048576);
	ПользовательДокументооборот 		= ОбщегоНазначения.ХранилищеОбщихНастроекЗагрузить("ИнтеграцияС1СДокументооборот", "Пользователь");
	
КонецПроцедуры

&НаСервере 
Процедура СохранитьЗначениеКонстанты(ИмяКонстанты)
	
	УстановитьЗначениеКонстантыПоИмени(ИмяКонстанты);
	
	ОбновитьПовторноИспользуемыеЗначения();
	
КонецПроцедуры

&НаСервере 
Процедура УстановитьЗначениеКонстантыПоИмени(ИмяКонстанты)
	
	Если Константы[ИмяКонстанты].Получить() <> НаборКонстант[ИмяКонстанты] Тогда
		Константы[ИмяКонстанты].Установить(НаборКонстант[ИмяКонстанты]);
	КонецЕсли;
	
	УстановитьВидимостьДоступностьЗависимыхЭлементовФормы(ИмяКонстанты);
	
	УстановитьЗначенияЗависимыхКонстант(ИмяКонстанты);
	
КонецПроцедуры

&НаСервере 
Процедура УстановитьЗначенияЗависимыхКонстант(ИмяРодительскойКонстанты)
	
	Если ИмяРодительскойКонстанты = "ИспользоватьИнтеграциюС1СДокументооборот" Тогда
		
		Если НЕ НаборКонстант.ИспользоватьИнтеграциюС1СДокументооборот Тогда
			НаборКонстант.ИспользоватьСогласованиеЧерез1СДокументооборот = Ложь;
			УстановитьЗначениеКонстантыПоИмени("ИспользоватьСогласованиеЧерез1СДокументооборот");
		КонецЕсли;
		
	ИначеЕсли ИмяРодительскойКонстанты = "ИспользоватьСогласованиеЧерез1СДокументооборот" Тогда
		
		НаборКонстант.ИспользоватьВнутреннееСогласованиеЗаказовКлиентов = НЕ НаборКонстант.ИспользоватьСогласованиеЧерез1СДокументооборот И НаборКонстант.ИспользоватьСогласованиеЗаказовКлиентов;
		УстановитьЗначениеКонстантыПоИмени("ИспользоватьВнутреннееСогласованиеЗаказовКлиентов");
					
		НаборКонстант.ИспользоватьВнутреннееСогласованиеЗаявокНаВозвратТоваровОтКлиентов = НЕ НаборКонстант.ИспользоватьСогласованиеЧерез1СДокументооборот И НаборКонстант.ИспользоватьСогласованиеЗаявокНаВозвратТоваровОтКлиентов;
		УстановитьЗначениеКонстантыПоИмени("ИспользоватьВнутреннееСогласованиеЗаявокНаВозвратТоваровОтКлиентов");
		
		НаборКонстант.ИспользоватьВнутреннееСогласованиеКоммерческихПредложений = НЕ НаборКонстант.ИспользоватьСогласованиеЧерез1СДокументооборот И НаборКонстант.ИспользоватьСогласованиеКоммерческихПредложений;
		УстановитьЗначениеКонстантыПоИмени("ИспользоватьВнутреннееСогласованиеКоммерческихПредложений");
		
		НаборКонстант.ИспользоватьВнутреннееСогласованиеСоглашенийСКлиентами = НЕ НаборКонстант.ИспользоватьСогласованиеЧерез1СДокументооборот И НаборКонстант.ИспользоватьСогласованиеСоглашенийСКлиентами;
		УстановитьЗначениеКонстантыПоИмени("ИспользоватьВнутреннееСогласованиеСоглашенийСКлиентами");
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура УстановитьВидимостьДоступностьЗависимыхЭлементовФормы(ИмяКонстанты = Неопределено)
	
	// Настройки, выполняемые однократно, только при создании формы
	Если ИмяКонстанты = Неопределено Тогда
		
	КонецЕсли;
	
	Если ИмяКонстанты = "ИспользоватьИнтеграциюС1СДокументооборот" Или ИмяКонстанты = Неопределено Тогда
		Элементы.АдресВебСервиса1СДокументооборот.Доступность 				= НаборКонстант.ИспользоватьИнтеграциюС1СДокументооборот;
		Элементы.ИспользоватьСогласованиеЧерез1СДокументооборот.Доступность = НаборКонстант.ИспользоватьИнтеграциюС1СДокументооборот;
		Элементы.КорневаяПапкаФайлов1СДокументооборот.Доступность 			= НаборКонстант.ИспользоватьИнтеграциюС1СДокументооборот;
		Элементы.МаксимальныйРазмерФайлаДляПередачи.Доступность 			= НаборКонстант.ИспользоватьИнтеграциюС1СДокументооборот;
		Элементы.НастройкиЗаполненияОбъектов1СДокументооборота.Доступность 	= НаборКонстант.ИспользоватьИнтеграциюС1СДокументооборот;
		Элементы.КорневаяПапкаФайлов1СДокументооборот.ТолькоПросмотр 		= НЕ ЗначениеЗаполнено(НаборКонстант.АдресВебСервиса1СДокументооборот);
	КонецЕсли;
		
	Если ИмяКонстанты = "АдресВебСервиса1СДокументооборот" Или ИмяКонстанты = Неопределено Тогда
		Элементы.КорневаяПапкаФайлов1СДокументооборот.ТолькоПросмотр = Не ЗначениеЗаполнено(НаборКонстант.АдресВебСервиса1СДокументооборот);
	КонецЕсли;
	
КонецПроцедуры



