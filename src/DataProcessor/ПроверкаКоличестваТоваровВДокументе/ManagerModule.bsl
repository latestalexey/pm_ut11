#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

////////////////////////////////////////////////////////////////////////////////
// ПРОГРАММНЫЙ ИНТЕРФЕЙС

//Имена реквизитов, от значений которых зависят параметры указания серий
//
//	Возвращаемое значение:
//		Строка - имена реквизитов, перечисленные через запятую
//
Функция ИменаРеквизитовДляЗаполненияПараметровУказанияСерий() Экспорт
	ИменаРеквизитов = "Склад,Помещение,Ордер";
	
	Возврат ИменаРеквизитов;
КонецФункции

//Возвращает параметры указания серий для товаров, указанных в документе
//
//	Параметры
//			Объект - Структура - структура значений реквизитов объекта, необходимых для заполнения параметров указания серий
//	Возвращаемое значение
//			Тип Структура
//				Состав полей задается в функции ОбработкаТабличнойЧастиКлиентСервер.ПараметрыУказанияСерий
//
Функция ПараметрыУказанияСерий(Объект) Экспорт
	
	ПараметрыУказанияСерий = НоменклатураКлиентСервер.ПараметрыУказанияСерий();
	
	ПараметрыУказанияСерий.ИспользоватьСерииНоменклатуры =
						ПолучитьФункциональнуюОпцию("ИспользоватьСерииНоменклатурыСклад", Новый Структура("Склад",Объект.Склад));
						
	Если ТипЗнч(Объект.Ордер) = Тип("ДокументСсылка.ОрдерНаПеремещениеТоваров") Тогда
		СкладскаяОперация = Перечисления.СкладскиеОперации.ПеремещениеМеждуПомещениями;
	Иначе 
		СкладскаяОперация = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Объект.Ордер, "СкладскаяОперация");
	КонецЕсли;
	
	ПараметрыУказанияСерий.СкладскиеОперации.Добавить(СкладскаяОперация);
	
	Если СкладыСервер.ИспользоватьАдресноеХранение(Объект.Склад, Объект.Помещение) Тогда
		ПараметрыУказанияСерий.ПоляСвязи.Добавить("Упаковка");
	КонецЕсли;
	
	ПараметрыУказанияСерий.ЭтоОрдер = Истина;
	ПараметрыУказанияСерий.РегистрироватьСерии = Истина;
	ПараметрыУказанияСерий.ПроверкаДокумента = Истина;
	ПараметрыУказанияСерий.ФактОтбора = Истина;
	ПараметрыУказанияСерий.БлокироватьДанныеФормы = Ложь;
	
	Возврат ПараметрыУказанияСерий;
КонецФункции

////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

////////////////////////////////////////////////////////////////////////////////
// Печать

Процедура Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт
	
	ПараметрыВывода.ДоступнаПечатьПоКомплектно = Истина;
	
		Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "ЗаданиеНаДоборТоваровСправочно") Тогда
			УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм,
			"ЗаданиеНаДоборТоваровСправочно",
			"Задание на добор товаров",
			Обработки.ПечатьЗаданияНаОтборРазмещениеТоваров.СформироватьЗаданиеНаОтборРазмещениеТовара(Неопределено, ОбъектыПечати, ПараметрыПечати));
		ИначеЕсли  УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "ЗаданиеНаДоборТоваров") Тогда
			УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм,
			"ЗаданиеНаДоборТоваров",
			"Задание на добор товаров",
			СформироватьЗаданиеНаДоборТоваров(ОбъектыПечати, ПараметрыПечати));
		КонецЕсли;
	
КонецПроцедуры

Функция ПолучитьДанныеДляПечатнойФормыЗаданиеНаДоборТоваров(ПараметрыПечати, Документ) Экспорт
	Если ТипЗнч(Документ) = Тип("ДокументСсылка.РасходныйОрдерНаТовары") Тогда
		ВидПомещения = "";
		ВидДокумента = "РасходныйОрдерНаТовары"
	Иначе
		ВидПомещения = "Отправитель";
		ВидДокумента = "ОрдерНаПеремещениеТоваров"
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст =
		"ВЫБРАТЬ
		|   &ДокументОрдер КАК Ссылка,
		|	ВЫРАЗИТЬ(ТаблицаДобора.Номенклатура КАК Справочник.Номенклатура) КАК Номенклатура,
		|	ВЫРАЗИТЬ(ТаблицаДобора.Характеристика КАК Справочник.ХарактеристикиНоменклатуры) КАК Характеристика,
		|	ВЫРАЗИТЬ(ТаблицаДобора.Упаковка КАК Справочник.УпаковкиНоменклатуры) КАК Упаковка,
		|	ВЫРАЗИТЬ(ТаблицаДобора.Серия КАК Справочник.СерииНоменклатуры) КАК Серия,
		|	ТаблицаДобора.НомерСтроки КАК НомерСтроки,
		|	ТаблицаДобора.КоличествоУпаковокНедобор КАК КоличествоУпаковок,
		|	ТаблицаДобора.КоличествоНедобор КАК Количество
		|ПОМЕСТИТЬ ТаблицаДобора
		|ИЗ
		|	&ТаблицаТоваров КАК ТаблицаДобора
		|ГДЕ
		|	ТаблицаДобора.КоличествоНедобор > 0
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	Документ.Ссылка КАК Ссылка,
		|	ПРЕДСТАВЛЕНИЕ(Документ.Ссылка) КАК СсылкаПредставление,
		|	ПРЕДСТАВЛЕНИЕ(Документ.Склад) КАК СкладПредставление,
		|	ПРЕДСТАВЛЕНИЕ(Документ.Помещение" 	+ ВидПомещения + ") КАК ПомещениеПредставление,
		|	Документ.Дата КАК Дата,
		|	Документ.Номер КАК Номер,
		|	ЛОЖЬ КАК НарушенаОрдернаяСхема,
		|	ЛОЖЬ КАК СкладыВТЧ,
		|	ВЫБОР
		|		КОГДА Документ.Склад.ИспользоватьСкладскиеПомещения
		|			ТОГДА Документ.Помещение" 	+ ВидПомещения + ".ИспользоватьАдресноеХранениеСправочно
		|		ИНАЧЕ Документ.Склад.ИспользоватьАдресноеХранениеСправочно
		|	КОНЕЦ КАК ИспользуетсяСправочноеХранение,
		|	NULL КАК ВидОперации
		|ИЗ
		|	Документ." 	+ ВидДокумента + " КАК Документ
		|ГДЕ
		|	Документ.Ссылка = &ДокументОрдер
		|
		|УПОРЯДОЧИТЬ ПО
		|	Ссылка
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ТаблицаТовары.Ссылка КАК Ссылка,
		|	ТаблицаТовары.НомерСтроки КАК НомерСтроки,
		|	ТаблицаТовары.Номенклатура.Код КАК Код,
		|	ТаблицаТовары.Номенклатура.Артикул КАК Артикул,
		|	ТаблицаТовары.Номенклатура.НаименованиеПолное КАК ПредставлениеНоменклатуры,
		|	ПРЕДСТАВЛЕНИЕ(ТаблицаТовары.Номенклатура.ЕдиницаИзмерения) КАК ПредставлениеБазовойЕдиницыИзмерения,
		|	ТаблицаТовары.Характеристика.НаименованиеПолное КАК ПредставлениеХарактеристики,
		|	ПРЕДСТАВЛЕНИЕ(ТаблицаТовары.Серия) КАК ПредставлениеСерии,
		|	ВЫБОР
		|		КОГДА ТаблицаТовары.Упаковка = ЗНАЧЕНИЕ(Справочник.УпаковкиНоменклатуры.ПустаяСсылка)
		|			ТОГДА ПРЕДСТАВЛЕНИЕ(ТаблицаТовары.Номенклатура.ЕдиницаИзмерения)
		|		ИНАЧЕ ПРЕДСТАВЛЕНИЕ(ТаблицаТовары.Упаковка)
		|	КОНЕЦ КАК ПредставлениеЕдининицыИзмеренияУпаковки,
		|	ТаблицаТовары.КоличествоУпаковок КАК КоличествоУпаковок,
		|	ТаблицаТовары.Количество КАК Количество,
		|	ЕСТЬNULL(РазмещениеОсновнаяЯчейка.Ячейка.РабочийУчасток, ЗНАЧЕНИЕ(Справочник.РабочиеУчастки.ПустаяСсылка)) КАК РабочийУчасток,
		|	ЕСТЬNULL(РазмещениеОсновнаяЯчейка.Ячейка.ПорядокОбхода, 0) КАК ПорядокОбхода,
		|	ЕСТЬNULL(РазмещениеОсновнаяЯчейка.Ячейка.ПорядокОбхода, ЗНАЧЕНИЕ(Справочник.СкладскиеЯчейки.ПустаяСсылка)) КАК ОсновнаяЯчейка,
		|	ЕСТЬNULL(РазмещениеОстальныеЯчейки.Ячейка.ПорядокОбхода, 0) КАК ПорядокОбходаДополнительнаяЯчейка,
		|	ПРЕДСТАВЛЕНИЕ(РазмещениеОсновнаяЯчейка.Ячейка.РабочийУчасток) КАК ПредставлениеРабочегоУчастка,
		|	РазмещениеОсновнаяЯчейка.Ячейка.Код КАК ОсновнаяЯчейкаПредставление,
		|	РазмещениеОстальныеЯчейки.Ячейка.Код КАК ЯчейкаПредставление
		|ИЗ
		|	ТаблицаДобора КАК ТаблицаТовары
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РазмещениеНоменклатурыПоСкладскимЯчейкам КАК РазмещениеОсновнаяЯчейка
		|		ПО ТаблицаТовары.Номенклатура = РазмещениеОсновнаяЯчейка.Номенклатура
		|			И (РазмещениеОсновнаяЯчейка.ОсновнаяЯчейка = ИСТИНА)
		|			И (РазмещениеОсновнаяЯчейка.Склад = ТаблицаТовары.Ссылка.Склад)
		|			И (ВЫБОР
		|				КОГДА ТаблицаТовары.Ссылка.Склад.ИспользоватьСкладскиеПомещения
		|					ТОГДА РазмещениеОсновнаяЯчейка.Помещение = ТаблицаТовары.Ссылка.Помещение" 	+ ВидПомещения + "
		|			КОНЕЦ)
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РазмещениеНоменклатурыПоСкладскимЯчейкам КАК РазмещениеОстальныеЯчейки
		|		ПО ТаблицаТовары.Номенклатура = РазмещениеОстальныеЯчейки.Номенклатура
		|			И (РазмещениеОстальныеЯчейки.ОсновнаяЯчейка = ЛОЖЬ)
		|			И (РазмещениеОсновнаяЯчейка.Склад = ТаблицаТовары.Ссылка.Склад)
		|			И (ВЫБОР
		|				КОГДА ТаблицаТовары.Ссылка.Склад.ИспользоватьСкладскиеПомещения
		|					ТОГДА РазмещениеОсновнаяЯчейка.Помещение = ТаблицаТовары.Ссылка.Помещение" 	+ ВидПомещения + "
		|			КОНЕЦ)
		|
		|УПОРЯДОЧИТЬ ПО
		|	Ссылка,
		|	ПорядокОбхода,
		|	ОсновнаяЯчейкаПредставление,
		|	НомерСтроки,
		|	ПорядокОбходаДополнительнаяЯчейка,
		|	ЯчейкаПредставление
		|ИТОГИ ПО
		|	Ссылка,
		|	РабочийУчасток,
		|	ОсновнаяЯчейка,
		|	ТаблицаТовары.Номенклатура,
		|	ТаблицаТовары.Характеристика,
		|	ТаблицаТовары.Серия,
		|	ТаблицаТовары.Упаковка";
		
		Запрос.УстановитьПараметр("ДокументОрдер", Документ);
		Запрос.УстановитьПараметр("ТаблицаТоваров", ПараметрыПечати.ТаблицаТоваров.Выгрузить());
		МассивРезультатов 			= Запрос.ВыполнитьПакет();
		РезультатПоШапке			= МассивРезультатов[1];
		РезультатПоТабличнойЧасти 	= МассивРезультатов[2];
		
		СтруктураДанныхДляПечати 	= Новый Структура("РезультатПоШапке, РезультатПоТабличнойЧасти",РезультатПоШапке, РезультатПоТабличнойЧасти);
		
		Возврат СтруктураДанныхДляПечати;
	КонецФункции

Функция СформироватьЗаданиеНаДоборТоваров(ОбъектыПечати, ПараметрыПечати);
	ДокументОрдер = ПараметрыПечати.Ордер;
	ТабличныйДокумент = Новый ТабличныйДокумент;
	ТабличныйДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_РасходныйОрдерНаТовары_РасходныйОрдерНаТовары";
	
	КолонкаКодов = ФормированиеПечатныхФорм.ИмяДополнительнойКолонки();
	ВыводитьКоды = ЗначениеЗаполнено(КолонкаКодов);
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ВЫРАЗИТЬ(ТаблицаДобора.Номенклатура КАК Справочник.Номенклатура) КАК Номенклатура,
	|	ВЫРАЗИТЬ(ТаблицаДобора.Характеристика КАК Справочник.ХарактеристикиНоменклатуры) КАК Характеристика,
	|	ВЫРАЗИТЬ(ТаблицаДобора.Серия КАК Справочник.СерииНоменклатуры) КАК Серия,
	|	ТаблицаДобора.НомерСтроки КАК НомерСтроки,
	|	ТаблицаДобора.Упаковка КАК Упаковка,
	|	ТаблицаДобора.КоличествоУпаковокНедобор КАК КоличествоУпаковок,
	|	ТаблицаДобора.КоличествоНедобор КАК Количество
	|ПОМЕСТИТЬ ТаблицаТовары
	|ИЗ
	|	&ТаблицаТоваров КАК ТаблицаДобора
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаТовары.НомерСтроки КАК НомерСтроки,
	|	ТаблицаТовары.Номенклатура.НаименованиеПолное КАК ПредставлениеНоменклатуры,
	|	" + ?(ВыводитьКоды, "ТаблицаТовары.Номенклатура." + КолонкаКодов +" КАК Артикул,", "") + "
	|	ТаблицаТовары.Характеристика.НаименованиеПолное КАК ПредставлениеХарактеристики,
	|	ПРЕДСТАВЛЕНИЕ(ТаблицаТовары.Номенклатура.ЕдиницаИзмерения) КАК ПредставлениеБазовойЕдиницыИзмерения,
	|	ПРЕДСТАВЛЕНИЕ(ТаблицаТовары.Серия) КАК ПредставлениеСерии,
	|	ВЫБОР
	|		КОГДА ТаблицаТовары.Упаковка <> ЗНАЧЕНИЕ(Справочник.УпаковкиНоменклатуры.ПустаяСсылка)
	|			ТОГДА ПРЕДСТАВЛЕНИЕ(ТаблицаТовары.Упаковка)
	|		ИНАЧЕ ПРЕДСТАВЛЕНИЕ(ТаблицаТовары.Номенклатура.ЕдиницаИзмерения)
	|	КОНЕЦ КАК ПредставлениеЕдининицыИзмеренияУпаковки,
	|	ТаблицаТовары.КоличествоУпаковок КАК КоличествоУпаковок,
	|	ТаблицаТовары.Количество КАК Количество
	|ИЗ
	|	ТаблицаТовары КАК ТаблицаТовары";
	
	Запрос.УстановитьПараметр("ТаблицаТоваров", ПараметрыПечати.ТаблицаТоваров.Выгрузить());
	
	ВыводитьУпаковки = ПолучитьФункциональнуюОпцию("ИспользоватьУпаковкиНоменклатуры");
	
	Макет = УправлениеПечатью.ПолучитьМакет("Обработка.ПроверкаКоличестваТоваровВДокументе.ПФ_MXL_ЗаданиеНаДоборТовара");
	
	ОбластьЗаголовок 		= Макет.ПолучитьОбласть("Заголовок");
	ОбластьШапка 			= Макет.ПолучитьОбласть("Шапка");
	ШтрихкодированиеПечатныхФорм.ВывестиШтрихкодВТабличныйДокумент(ТабличныйДокумент, Макет, ОбластьШапка, ДокументОрдер);
	
	ОбластьШапкаТаблицыНачало 	= Макет.ПолучитьОбласть("ШапкаТаблицы|НачалоСтроки");
	ОбластьСтрокаТаблицыНачало 	= Макет.ПолучитьОбласть("СтрокаТаблицы|НачалоСтроки");
	ОбластьПодвалТаблицыНачало 	= Макет.ПолучитьОбласть("ПодвалТаблицы|НачалоСтроки");
	
	ОбластьШапкаТаблицыКолонкаКодов 	= Макет.ПолучитьОбласть("ШапкаТаблицы|КолонкаКодов");
	ОбластьСтрокаТаблицыКолонкаКодов 	= Макет.ПолучитьОбласть("СтрокаТаблицы|КолонкаКодов");
	ОбластьПодвалТаблицыКолонкаКодов 	= Макет.ПолучитьОбласть("ПодвалТаблицы|КолонкаКодов");
	
	ОбластьШапкаТаблицыКолонкаКодов.Параметры.ИмяКолонкиКодов = КолонкаКодов; 
	
	ОбластьШапкаТаблицыКолонкаУпаковок 		= Макет.ПолучитьОбласть("ШапкаТаблицы|КолонкаУпаковок");
	ОбластьСтрокаТаблицыКолонкаУпаковок 	= Макет.ПолучитьОбласть("СтрокаТаблицы|КолонкаУпаковок");
	ОбластьПодвалТаблицыКолонкаУпаковок		= Макет.ПолучитьОбласть("ПодвалТаблицы|КолонкаУпаковок");
	
	ОбластьКолонкаТоваров = Макет.Область("КолонкаТоваров");
	
	Если НЕ ВыводитьКоды Тогда
		ОбластьКолонкаТоваров.ШиринаКолонки = ОбластьКолонкаТоваров.ШиринаКолонки + Макет.Область("КолонкаКодов").ШиринаКолонки;
	КонецЕсли;
	
	Если НЕ ВыводитьУпаковки Тогда
		ОбластьКолонкаТоваров.ШиринаКолонки = ОбластьКолонкаТоваров.ШиринаКолонки + Макет.Область("КолонкаУпаковокКоличество").ШиринаКолонки
		+ Макет.Область("КолонкаУпаковокПредставление").ШиринаКолонки; 		
	КонецЕсли;
	
	ОбластьШапкаТаблицыКолонкаТоваров 	= Макет.ПолучитьОбласть("ШапкаТаблицы|КолонкаТоваров");
	ОбластьСтрокаТаблицыКолонкаТоваров 	= Макет.ПолучитьОбласть("СтрокаТаблицы|КолонкаТоваров");
	ОбластьПодвалТаблицыКолонкаТоваров 	= Макет.ПолучитьОбласть("ПодвалТаблицы|КолонкаТоваров");
	
	ОбластьШапкаТаблицыКонец 	= Макет.ПолучитьОбласть("ШапкаТаблицы|КонецСтроки");
	ОбластьСтрокаТаблицыКонец 	= Макет.ПолучитьОбласть("СтрокаТаблицы|КонецСтроки");
	ОбластьПодвалТаблицыКонец 	= Макет.ПолучитьОбласть("ПодвалТаблицы|КонецСтроки");
	
	
	ОбластьЗаголовок.Параметры.ТекстЗаголовка = "Задание на добор товаров";
	
	ТабличныйДокумент.Вывести(ОбластьЗаголовок);
	
	
	Если ТипЗнч(ДокументОрдер) = Тип("ДокументСсылка.РасходныйОрдерНаТовары") Тогда
		ПредставлениеДокумента = "Расходный ордер на товары";
		ПредставлениеПомещения = "Помещение";
	Иначе
		ПредставлениеДокумента = "Ордер на перемещение товаров";
		ПредставлениеПомещения = "ПомещениеОтправитель";
	КонецЕсли;
	
	РеквизитыДокумента = Новый Структура("Дата, Номер, Префикс");
	РеквизитыДокумента.Дата				= ДокументОрдер.Дата;
	РеквизитыДокумента.Номер			= ДокументОрдер.Номер;
	РеквизитыДокумента.Префикс			= "";
	
	ОбластьШапка.Параметры.ПредставлениеОснования 	= ОбщегоНазначенияУТКлиентСервер.СформироватьЗаголовокДокумента(РеквизитыДокумента, ПредставлениеДокумента);
	ОбластьШапка.Параметры.ПредставлениеСклада		= СкладыСервер.ПолучитьПредставлениеСклада(ДокументОрдер.Склад,ДокументОрдер[ПредставлениеПомещения]);
	
	ТабличныйДокумент.Вывести(ОбластьШапка);
	
	ТабличныйДокумент.Вывести(ОбластьШапкаТаблицыНачало);
	
	Если ВыводитьКоды Тогда
		ТабличныйДокумент.Присоединить(ОбластьШапкаТаблицыКолонкаКодов);
	КонецЕсли;
	
	ТабличныйДокумент.Присоединить(ОбластьШапкаТаблицыКолонкаТоваров);
	
	Если ВыводитьУпаковки Тогда
		ТабличныйДокумент.Присоединить(ОбластьШапкаТаблицыКолонкаУпаковок);
	КонецЕсли;
	
	ТабличныйДокумент.Присоединить(ОбластьШапкаТаблицыКонец);
	
	ВыборкаПоСтрокамТЧ = Запрос.Выполнить().Выбрать();
	
	Пока ВыборкаПоСтрокамТЧ.Следующий() Цикл
		
		ОбластьСтрокаТаблицыНачало.Параметры.НомерСтроки = ВыборкаПоСтрокамТЧ.НомерСтроки;
		ТабличныйДокумент.Вывести(ОбластьСтрокаТаблицыНачало);
		
		Если ВыводитьКоды Тогда
			ОбластьСтрокаТаблицыКолонкаКодов.Параметры.Артикул = ВыборкаПоСтрокамТЧ[КолонкаКодов];
			ТабличныйДокумент.Присоединить(ОбластьСтрокаТаблицыКолонкаКодов);
		КонецЕсли;
		
		ОбластьСтрокаТаблицыКолонкаТоваров.Параметры.Товар = 
				НоменклатураКлиентСервер.ПредставлениеНоменклатурыДляПечати(ВыборкаПоСтрокамТЧ.ПредставлениеНоменклатуры,
																					ВыборкаПоСтрокамТЧ.ПредставлениеХарактеристики,
																					,//
																					ВыборкаПоСтрокамТЧ.ПредставлениеСерии);
		ТабличныйДокумент.Присоединить(ОбластьСтрокаТаблицыКолонкаТоваров);
		
		Если ВыводитьУпаковки Тогда
			ОбластьСтрокаТаблицыКолонкаУпаковок.Параметры.Заполнить(ВыборкаПоСтрокамТЧ);
			ТабличныйДокумент.Присоединить(ОбластьСтрокаТаблицыКолонкаУпаковок);
		КонецЕсли;
		
		ОбластьСтрокаТаблицыКонец.Параметры.Заполнить(ВыборкаПоСтрокамТЧ);
		ТабличныйДокумент.Присоединить(ОбластьСтрокаТаблицыКонец);	
		
	КонецЦикла;
	
	ТабличныйДокумент.Вывести(ОбластьПодвалТаблицыНачало);
	Если ВыводитьКоды Тогда
		ТабличныйДокумент.Присоединить(ОбластьПодвалТаблицыКолонкаКодов);
	КонецЕсли;
	ТабличныйДокумент.Присоединить(ОбластьПодвалТаблицыКолонкаТоваров);
	Если ВыводитьУпаковки Тогда
		ТабличныйДокумент.Присоединить(ОбластьПодвалТаблицыКолонкаУпаковок);
	КонецЕсли;
	ТабличныйДокумент.Присоединить(ОбластьПодвалТаблицыКонец);
	
	ТабличныйДокумент.АвтоМасштаб = Истина;
	
	Возврат ТабличныйДокумент;	
	
КонецФункции


#КонецЕсли