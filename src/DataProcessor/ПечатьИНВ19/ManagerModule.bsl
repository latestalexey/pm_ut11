#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

////////////////////////////////////////////////////////////////////////////////
// Печать

Процедура Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт
	
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "ИНВ19") Тогда
		
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(
			КоллекцияПечатныхФорм,
			"ИНВ19",
			"Сличительная ведомость",
			СформироватьПечатнуюФормуИНВ19(МассивОбъектов[0], ОбъектыПечати, ПараметрыПечати)
		);
		
	КонецЕсли;
	
КонецПроцедуры


Функция СформироватьПечатнуюФормуИНВ19(ДокументОснование, ОбъектыПечати, ПараметрыПечати)
	
	ТабличныйДокумент = Новый ТабличныйДокумент;
	ТабличныйДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_ИНВ19";
	
	Если ПараметрыПечати.НетАктов Тогда
		ТекстСообщения = НСтр("ru='По распоряжению не оформлены складские акты. Нет данных для формирования печатной формы ""ИНВ-19""'");
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения);
		Возврат ТабличныйДокумент;
	КонецЕсли;
	
	УстановитьПривилегированныйРежим(Истина);
	
	МенеджерОбъекта = ОбщегоНазначения.МенеджерОбъектаПоПолномуИмени(ДокументОснование.Метаданные().ПолноеИмя());
	ДанныеДляПечати = МенеджерОбъекта.ПолучитьДанныеДляПечатнойФормыИНВ19(ПараметрыПечати, ДокументОснование);
	
	Если НЕ ЗначениеЗаполнено(ДанныеДляПечати) Тогда
		Возврат ТабличныйДокумент;
	КонецЕсли;
	
	ЗаполнитьТабличныйДокументИНВ19(ТабличныйДокумент, ДанныеДляПечати, ОбъектыПечати);
	
	УстановитьПривилегированныйРежим(Ложь);
	
	Возврат ТабличныйДокумент;
	
КонецФункции

Процедура ЗаполнитьТабличныйДокументИНВ19(ТабличныйДокумент, ДанныеДляПечати, ОбъектыПечати)
	
	ТабличныйДокумент.ПолеСверху = 10;
	ТабличныйДокумент.ПолеСлева = 10;
	ТабличныйДокумент.ПолеСнизу = 10;
	ТабличныйДокумент.ПолеСправа = 10;
	ТабличныйДокумент.РазмерКолонтитулаСверху = 0;
	ТабличныйДокумент.РазмерКолонтитулаСнизу = 0;
	ТабличныйДокумент.АвтоМасштаб = Ложь;
	ТабличныйДокумент.МасштабПечати = 89;
	ТабличныйДокумент.ОриентацияСтраницы = ОриентацияСтраницы.Ландшафт;
	
	Шапка = ДанныеДляПечати.РезультатПоШапке.Выбрать();
	ТаблицаТоваров = ДанныеДляПечати.РезультатПоТабличнойЧасти.Выгрузить();
	
	Если ДанныеДляПечати.РезультатКурсВалюты <> Неопределено И ДанныеДляПечати.РезультатСвязанныеТовары = Неопределено Тогда
		ПечатьПоВидуЦен = Истина;
		КурсВалюты = ДанныеДляПечати.РезультатКурсВалюты.Выбрать();
		Если КурсВалюты.Следующий() Тогда
			КоэффициентПересчета = КурсВалюты.КоэффициентПересчета;
		Иначе
			КоэффициентПересчета = 1;
		КонецЕсли;
	ИначеЕсли ДанныеДляПечати.РезультатКурсВалюты = Неопределено И ДанныеДляПечати.РезультатСвязанныеТовары <> Неопределено Тогда
		ПечатьПоВидуЦен = Ложь;
		КоэффициентПересчета = 1;
	Иначе       		
		ТекстСообщения = НСтр("ru='Неверные данные для печати.'");
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения);
		Возврат;		
	КонецЕсли;
	
	Если ТаблицаТоваров.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	НомерСтрокиНачало = ТабличныйДокумент.ВысотаТаблицы + 1;
	
	Макет = УправлениеПечатью.ПолучитьМакет("Обработка.ПечатьИНВ19.ПФ_MXL_ИНВ19");
	
	ОбластьЗаголовок = Макет.ПолучитьОбласть("Заголовок");
	ОбластьШапки = Макет.ПолучитьОбласть("ШапкаТаблицы");     
	ОбластьСтроки = Макет.ПолучитьОбласть("Строка");
	ОбластьПодвал = Макет.ПолучитьОбласть("Подвал");
	ОбластьШапки_Лист2 = Макет.ПолучитьОбласть("ШапкаТаблицы_Лист2");     
	ОбластьМассиваСтрок_Лист2 = Макет.ПолучитьОбласть("Строка_Лист2");
	ОбластьПодвал_Лист2 = Макет.ПолучитьОбласть("Подвал_Лист2");
	
	
	Шапка.Следующий();
	
	ОбластьЗаголовок.Параметры.Заполнить(Шапка);
	ОбластьЗаголовок.Параметры.ДолжностьМОЛ1  = Шапка.ДолжностьКладовщика;
	ОбластьЗаголовок.Параметры.ФИОМОЛ1        = ФизическиеЛица.ФамилияИнициалыФизЛица(Шапка.Кладовщик);
	ОбластьЗаголовок.Параметры.НомерДокумента = ПрефиксацияОбъектовКлиентСервер.ПолучитьНомерНаПечать(Шапка.НомерДокумента, Ложь, Истина);
	ОбластьЗаголовок.Параметры.ОснованиеНомер = ПрефиксацияОбъектовКлиентСервер.ПолучитьНомерНаПечать(Шапка.ОснованиеНомер, Ложь, Истина);
	
	ШтрихкодированиеПечатныхФорм.ВывестиШтрихкодВТабличныйДокумент(ТабличныйДокумент, Макет, ОбластьЗаголовок, Шапка.Ссылка);
	ТабличныйДокумент.Вывести(ОбластьЗаголовок);
	ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
	
	ИтоговыеСуммы = Новый Структура;
	
	ИтоговыеСуммы.Вставить("ИтогоРезультатИзлишекКолво",0);
	ИтоговыеСуммы.Вставить("ИтогоРезультатИзлишекСумма",0);
	ИтоговыеСуммы.Вставить("ИтогоРезультатНедостачаКолво",0);
	ИтоговыеСуммы.Вставить("ИтогоРезультатНедостачаСумма",0);
	
	ИтоговыеСуммы.Вставить("ИтогоПересортИзлишкиКолво",0);
	ИтоговыеСуммы.Вставить("ИтогоПересортИзлишкиСумма",0);
	ИтоговыеСуммы.Вставить("ИтогоПересортНедостачиКолво",0);
	ИтоговыеСуммы.Вставить("ИтогоПересортНедостачиСумма",0);
	
	ИтоговыеСуммы.Вставить("ИтогоПриходИзлишковКолво",0);
	ИтоговыеСуммы.Вставить("ИтогоПриходИзлишковСумма",0);
	ИтоговыеСуммы.Вставить("ИтогоСписаниеНедостачКолонкаКолво",0);
	ИтоговыеСуммы.Вставить("ИтогоСписаниеНедостачКолонкаСумма",0);
	
	НомерСтроки = 0;
	НомерСтраницы = 1;
	ПервыйНомерСтроки = 1;
	
	КоличествоСтрок = ТаблицаТоваров.Количество();
	
	Если Не ПечатьПоВидуЦен Тогда
		
		ТаблицаТоваровРезультат = Новый ТаблицаЗначений;
		ТаблицаТоваровРезультат.Колонки.Добавить("НомерСтроки");
		ТаблицаТоваровРезультат.Колонки.Добавить("НомерСвязаннойСтроки");
		ТаблицаТоваровРезультат.Колонки.Добавить("Номенклатура");
		ТаблицаТоваровРезультат.Колонки.Добавить("Характеристика");
		ТаблицаТоваровРезультат.Колонки.Добавить("ТоварНаименование");
		ТаблицаТоваровРезультат.Колонки.Добавить("ТоварКод");
		ТаблицаТоваровРезультат.Колонки.Добавить("ЕдиницаИзмеренияКод");
		ТаблицаТоваровРезультат.Колонки.Добавить("ЕдиницаИзмеренияНаименование");
		ТаблицаТоваровРезультат.Колонки.Добавить("КоличествоИзлишков");
		ТаблицаТоваровРезультат.Колонки.Добавить("СуммаИзлишков");
		ТаблицаТоваровРезультат.Колонки.Добавить("КоличествоНедостачи");
		ТаблицаТоваровРезультат.Колонки.Добавить("СуммаНедостачи");
		ТаблицаТоваровРезультат.Колонки.Добавить("ПересортИзлишкиКолво");
		ТаблицаТоваровРезультат.Колонки.Добавить("ПересортИзлишкиСумма");
		ТаблицаТоваровРезультат.Колонки.Добавить("ПересортИзлишкиНомер");
		ТаблицаТоваровРезультат.Колонки.Добавить("ПересортНедостачиКолво");
		ТаблицаТоваровРезультат.Колонки.Добавить("ПересортНедостачиСумма");
		ТаблицаТоваровРезультат.Колонки.Добавить("ПересортНедостачиНомер");
		ТаблицаТоваровРезультат.Колонки.Добавить("ПриходИзлишковКолво");
		ТаблицаТоваровРезультат.Колонки.Добавить("ПриходИзлишковСумма");
		ТаблицаТоваровРезультат.Колонки.Добавить("СписаниеНедостачКолонкаКолво");
		ТаблицаТоваровРезультат.Колонки.Добавить("СписаниеНедостачКолонкаСумма");
		
		ТаблицаСвязанныхТоваров = ДанныеДляПечати.РезультатСвязанныеТовары.Выгрузить();
		
		//Избавимся от одинаковых строк, объединив их в одну
		Для Каждого СтрокаТовар Из ТаблицаТоваров Цикл
			
			СтруктураПоиска = Новый Структура;
			СтруктураПоиска.Вставить("Номенклатура", СтрокаТовар.Номенклатура);
			СтруктураПоиска.Вставить("Характеристика", СтрокаТовар.Характеристика);
			СтруктураПоиска.Вставить("Операция", СтрокаТовар.Операция);
			СтруктураПоиска.Вставить("Стоимость", СтрокаТовар.Стоимость);
			
			МассивОдинаковыхТоваров = ТаблицаТоваров.НайтиСтроки(СтруктураПоиска);
			
			Если МассивОдинаковыхТоваров.Количество() > 1  Тогда
				Индекс = 1;
				Пока Индекс < МассивОдинаковыхТоваров.Количество() Цикл
					МассивОдинаковыхТоваров[0].Количество = МассивОдинаковыхТоваров[0].Количество + МассивОдинаковыхТоваров[Индекс].Количество;
					ТаблицаТоваров.Удалить(МассивОдинаковыхТоваров[Индекс]);
					Индекс = Индекс + 1;
				КонецЦикла;
			КонецЕсли;
			
		КонецЦикла;
		
		//Организовываем таблицу значений с товарами, организуя при этом связанные строки
		Для каждого СтрокаТоваров Из ТаблицаТоваров Цикл
			
			Если НомерСтроки = 0 Тогда // первая строка
				
				ТекстСтраница = НСтр("ru='Страница %НомерСтраницы%'");
				ТекстСтраница = СтрЗаменить(ТекстСтраница,"%НомерСтраницы%",2);
				ОбластьШапки.Параметры.НомерСтраницы = ТекстСтраница;
				
				ТабличныйДокумент.Вывести(ОбластьШапки);
				
			Иначе
				
				Если НомерСтроки <> 0 И Не ТабличныйДокумент.ПроверитьВывод(ОбластьСтроки) Тогда
			
					НомерСтраницы = НомерСтраницы + 1;
					ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
					
					ТекстСтраница = НСтр("ru='Страница %НомерСтраницы%'");
					ТекстСтраница = СтрЗаменить(ТекстСтраница,"%НомерСтраницы%",НомерСтраницы);
					ОбластьШапки.Параметры.НомерСтраницы = ТекстСтраница;
					ТабличныйДокумент.Вывести(ОбластьШапки);
					
				КонецЕсли;
				
			КонецЕсли;
			
			ОбластьСтроки.Параметры.Заполнить(СтрокаТоваров);
			
			ОбластьСтроки.Параметры.ТоварНаименование = НоменклатураКлиентСервер.ПредставлениеНоменклатурыДляПечати(
															СтрокаТоваров.ТоварНаименование,
															СтрокаТоваров.ХарактеристикаПредставление
														) + ?(СтрокаТоваров.ЭтоВозвратнаяТара, НСтр("ru=' (возвратная тара)'"), "");
			
			Если СтрокаТоваров.Операция = "1_Списание" Тогда
				
				НоваяСтрока = ТаблицаТоваровРезультат.Добавить();
				
				НоваяСтрока.Номенклатура = СтрокаТоваров.Номенклатура;
				НоваяСтрока.Характеристика = СтрокаТоваров.Характеристика;
				НоваяСтрока.ТоварНаименование = НоменклатураКлиентСервер.ПредставлениеНоменклатурыДляПечати(
													СтрокаТоваров.ТоварНаименование,
													СтрокаТоваров.ХарактеристикаПредставление
													) + ?(СтрокаТоваров.ЭтоВозвратнаяТара, НСтр("ru=' (возвратная тара)'"), "");
				НоваяСтрока.ТоварКод = СтрокаТоваров.ТоварКод;
				НоваяСтрока.ЕдиницаИзмеренияКод = СтрокаТоваров.ЕдиницаИзмеренияКод;
				НоваяСтрока.ЕдиницаИзмеренияНаименование = СтрокаТоваров.ЕдиницаИзмеренияНаименование;
				
				
				НомерСтроки = НомерСтроки + 1;
				НоваяСтрока.НомерСтроки = НомерСтроки;
				
				НоваяСтрока.КоличествоИзлишков = 0;	
				НоваяСтрока.СуммаИзлишков = 0;	
				
				НоваяСтрока.КоличествоНедостачи = СтрокаТоваров.Количество;	
				НоваяСтрока.СуммаНедостачи = СтрокаТоваров.Стоимость * СтрокаТоваров.Количество;	
				
				НоваяСтрока.ПересортИзлишкиКолво = 0;	
				НоваяСтрока.ПересортИзлишкиСумма = 0;	
				НоваяСтрока.ПересортИзлишкиНомер = 0;	
				
				НоваяСтрока.ПересортНедостачиКолво = 0;	
				НоваяСтрока.ПересортНедостачиСумма = 0;	
				НоваяСтрока.ПересортНедостачиНомер = 0;	
				
				НоваяСтрока.ПриходИзлишковКолво = 0;	
				НоваяСтрока.ПриходИзлишковСумма = 0;	
				
				НоваяСтрока.СписаниеНедостачКолонкаКолво = СтрокаТоваров.Количество;	
				НоваяСтрока.СписаниеНедостачКолонкаСумма = СтрокаТоваров.Стоимость * СтрокаТоваров.Количество;	
				
				ИтоговыеСуммы.ИтогоРезультатНедостачаКолво = 
										ИтоговыеСуммы.ИтогоРезультатНедостачаКолво + СтрокаТоваров.Количество;
										
				ИтоговыеСуммы.ИтогоРезультатНедостачаСумма = 
										ИтоговыеСуммы.ИтогоРезультатНедостачаСумма + СтрокаТоваров.Стоимость * СтрокаТоваров.Количество;
										
				ИтоговыеСуммы.ИтогоСписаниеНедостачКолонкаКолво = 
										ИтоговыеСуммы.ИтогоСписаниеНедостачКолонкаКолво + СтрокаТоваров.Количество;
										
				ИтоговыеСуммы.ИтогоСписаниеНедостачКолонкаСумма = 
										ИтоговыеСуммы.ИтогоСписаниеНедостачКолонкаСумма + СтрокаТоваров.Стоимость * СтрокаТоваров.Количество;
				
			ИначеЕсли СтрокаТоваров.Операция = "2_Оприходование" Тогда
				
				НоваяСтрока = ТаблицаТоваровРезультат.Добавить();
				
				НоваяСтрока.Номенклатура = СтрокаТоваров.Номенклатура;
				НоваяСтрока.Характеристика = СтрокаТоваров.Характеристика;
				НоваяСтрока.ТоварНаименование = НоменклатураКлиентСервер.ПредставлениеНоменклатурыДляПечати(
													СтрокаТоваров.ТоварНаименование,
													СтрокаТоваров.ХарактеристикаПредставление
													) + ?(СтрокаТоваров.ЭтоВозвратнаяТара, НСтр("ru=' (возвратная тара)'"), "");
				НоваяСтрока.ТоварКод = СтрокаТоваров.ТоварКод;
				НоваяСтрока.ЕдиницаИзмеренияКод = СтрокаТоваров.ЕдиницаИзмеренияКод;
				НоваяСтрока.ЕдиницаИзмеренияНаименование = СтрокаТоваров.ЕдиницаИзмеренияНаименование;
								
				НомерСтроки = НомерСтроки + 1;
				НоваяСтрока.НомерСтроки = НомерСтроки;
										
				НоваяСтрока.КоличествоИзлишков = СтрокаТоваров.Количество;	
				НоваяСтрока.СуммаИзлишков = СтрокаТоваров.Стоимость * СтрокаТоваров.Количество;	
				
				НоваяСтрока.КоличествоНедостачи = 0;	
				НоваяСтрока.СуммаНедостачи = 0;	
				
				НоваяСтрока.ПересортИзлишкиКолво = 0;	
				НоваяСтрока.ПересортИзлишкиСумма = 0;	
				НоваяСтрока.ПересортИзлишкиНомер = 0;	
				
				НоваяСтрока.ПересортНедостачиКолво = 0;	
				НоваяСтрока.ПересортНедостачиСумма = 0;	
				НоваяСтрока.ПересортНедостачиНомер = 0;	
				
				НоваяСтрока.ПриходИзлишковКолво = СтрокаТоваров.Количество;	
				НоваяСтрока.ПриходИзлишковСумма = СтрокаТоваров.Стоимость * СтрокаТоваров.Количество;	
				
				НоваяСтрока.СписаниеНедостачКолонкаКолво = 0;	
				НоваяСтрока.СписаниеНедостачКолонкаСумма = 0;
				
				ИтоговыеСуммы.ИтогоРезультатИзлишекКолво = 
										ИтоговыеСуммы.ИтогоРезультатИзлишекКолво + СтрокаТоваров.Количество;
										
				ИтоговыеСуммы.ИтогоРезультатИзлишекСумма = 
										ИтоговыеСуммы.ИтогоРезультатИзлишекСумма + СтрокаТоваров.Стоимость * СтрокаТоваров.Количество;
										
				ИтоговыеСуммы.ИтогоПриходИзлишковКолво = 
										ИтоговыеСуммы.ИтогоПриходИзлишковКолво + СтрокаТоваров.Количество;
										
				ИтоговыеСуммы.ИтогоПриходИзлишковСумма = 
										ИтоговыеСуммы.ИтогоПриходИзлишковСумма + СтрокаТоваров.Стоимость * СтрокаТоваров.Количество;
				
			ИначеЕсли СтрокаТоваров.Операция = "3_ПересортицаСписание" Тогда
				
				СтруктураПоиска = Новый Структура;
				СтруктураПоиска.Вставить("СвязаннаяНоменклатура", СтрокаТоваров.Номенклатура);
				СтруктураПоиска.Вставить("СвязаннаяХарактеристика", СтрокаТоваров.Характеристика);
				
				МассивСвязанныхТоваров = ТаблицаСвязанныхТоваров.НайтиСтроки(СтруктураПоиска);
				
				Индекс = 0;
				
				Пока СтрокаТоваров.Количество <> 0 Цикл
					
					ТекущийСвязанныйТовар = МассивСвязанныхТоваров[Индекс];
					
					Если ТекущийСвязанныйТовар.Количество = 0 Тогда
						Индекс = Индекс + 1;
						Продолжить;
					КонецЕсли;
					
					НоваяСтрока = ТаблицаТоваровРезультат.Добавить();
					НоваяСтрока.Номенклатура = СтрокаТоваров.Номенклатура;
					НоваяСтрока.Характеристика = СтрокаТоваров.Характеристика;
					НоваяСтрока.ТоварНаименование = НоменклатураКлиентСервер.ПредставлениеНоменклатурыДляПечати(
														СтрокаТоваров.ТоварНаименование,
														СтрокаТоваров.ХарактеристикаПредставление
														);
					НоваяСтрока.ТоварКод = СтрокаТоваров.ТоварКод;
					НоваяСтрока.ЕдиницаИзмеренияКод = СтрокаТоваров.ЕдиницаИзмеренияКод;
					НоваяСтрока.ЕдиницаИзмеренияНаименование = СтрокаТоваров.ЕдиницаИзмеренияНаименование;
					НомерСтроки = НомерСтроки + 1;				
					НоваяСтрока.НомерСтроки = НомерСтроки;
					НоваяСтрока.НомерСвязаннойСтроки = НомерСтроки + 1;
															
					Если СтрокаТоваров.Количество - ТекущийСвязанныйТовар.Количество >= 0 Тогда
						
						КоличествоНедостачи = ТекущийСвязанныйТовар.Количество;	
						СуммаНедостачи = СтрокаТоваров.Стоимость * КоличествоНедостачи;
						
						СтрокаТоваров.Количество = СтрокаТоваров.Количество - КоличествоНедостачи;
						ТекущийСвязанныйТовар.Количество = 0;						
						
					Иначе
						
						КоличествоНедостачи = СтрокаТоваров.Количество;	
						СуммаНедостачи = СтрокаТоваров.Стоимость * КоличествоНедостачи;
						
						ТекущийСвязанныйТовар.Количество = ТекущийСвязанныйТовар.Количество - КоличествоНедостачи;
						СтрокаТоваров.Количество = 0;
						
					КонецЕсли;
					
					НоваяСтрока.КоличествоНедостачи = КоличествоНедостачи;	
					НоваяСтрока.СуммаНедостачи = СуммаНедостачи;
					
					НоваяСтрока.КоличествоИзлишков = 0;	
					НоваяСтрока.СуммаИзлишков = 0;
					
					НоваяСтрока.ПересортНедостачиКолво = КоличествоНедостачи;	
					НоваяСтрока.ПересортНедостачиСумма = СуммаНедостачи;
					
					НоваяСтрока.ПересортИзлишкиКолво = 0;	
					НоваяСтрока.ПересортИзлишкиСумма = 0;	
					НоваяСтрока.ПересортИзлишкиНомер = 0;	
					
					НоваяСтрока.ПриходИзлишковКолво = 0;	
					НоваяСтрока.ПриходИзлишковСумма = 0;
					
					НоваяСтрока.СписаниеНедостачКолонкаКолво = 0;	
					НоваяСтрока.СписаниеНедостачКолонкаСумма = 0;
					
					//Найдем и добавим оприходованный товар в таблицу результата
					СтруктураПоиска = Новый Структура;
					СтруктураПоиска.Вставить("Номенклатура", ТекущийСвязанныйТовар.Номенклатура);
					СтруктураПоиска.Вставить("Характеристика", ТекущийСвязанныйТовар.Характеристика);
					СтруктураПоиска.Вставить("Операция", "4_ПересортицаОприходование");
					
					МассивОприходованныхТоваров = ТаблицаТоваров.НайтиСтроки(СтруктураПоиска);
					
					Для Каждого ОприходованныйТовар Из МассивОприходованныхТоваров Цикл
						Если ОприходованныйТовар.Количество <> 0 И ОприходованныйТовар.Количество >= КоличествоНедостачи Тогда
							СвободныйОприходованныйТовар = ОприходованныйТовар;
						    Прервать;
						КонецЕсли;
					КонецЦикла;
					
					НоваяСтрока = ТаблицаТоваровРезультат.Добавить();
					НоваяСтрока.Номенклатура = СвободныйОприходованныйТовар.Номенклатура;
					НоваяСтрока.Характеристика = СвободныйОприходованныйТовар.Характеристика;
					НоваяСтрока.ТоварНаименование = НоменклатураКлиентСервер.ПредставлениеНоменклатурыДляПечати(
														СвободныйОприходованныйТовар.ТоварНаименование,
														СвободныйОприходованныйТовар.ХарактеристикаПредставление
														) + ?(СвободныйОприходованныйТовар.ЭтоВозвратнаяТара, НСтр("ru=' (возвратная тара)'"), "");
					НоваяСтрока.ТоварКод = СвободныйОприходованныйТовар.ТоварКод;
					НоваяСтрока.ЕдиницаИзмеренияКод = СвободныйОприходованныйТовар.ЕдиницаИзмеренияКод;
					НоваяСтрока.ЕдиницаИзмеренияНаименование = СвободныйОприходованныйТовар.ЕдиницаИзмеренияНаименование;
					НомерСтроки = НомерСтроки + 1;				
					НоваяСтрока.НомерСтроки = НомерСтроки;
					НоваяСтрока.НомерСвязаннойСтроки = НомерСтроки - 1;
					
					КоличествоИзлишков = КоличествоНедостачи;	
					СуммаИзлишков = СвободныйОприходованныйТовар.Стоимость * КоличествоИзлишков;
					
					СвободныйОприходованныйТовар.Количество = СвободныйОприходованныйТовар.Количество - КоличествоИзлишков;
										
					НоваяСтрока.КоличествоИзлишков = КоличествоИзлишков;	
					НоваяСтрока.СуммаИзлишков = СуммаИзлишков;	
					
					НоваяСтрока.КоличествоНедостачи = 0;	
					НоваяСтрока.СуммаНедостачи = 0;
					
					НоваяСтрока.ПересортИзлишкиКолво = КоличествоИзлишков;	
					НоваяСтрока.ПересортИзлишкиСумма = СуммаИзлишков;
					
					НоваяСтрока.ПриходИзлишковКолво = 0;	
					НоваяСтрока.ПриходИзлишковСумма = 0;	
					
					НоваяСтрока.СписаниеНедостачКолонкаКолво = 0;	
					НоваяСтрока.СписаниеНедостачКолонкаСумма = 0;
					
					НоваяСтрока.ПересортНедостачиКолво = 0;	
					НоваяСтрока.ПересортНедостачиСумма = 0;	
					НоваяСтрока.ПересортНедостачиНомер = 0;
						
					ИтоговыеСуммы.ИтогоРезультатИзлишекКолво      = ИтоговыеСуммы.ИтогоРезультатИзлишекКолво + КоличествоИзлишков;
					ИтоговыеСуммы.ИтогоРезультатИзлишекСумма      = ИтоговыеСуммы.ИтогоРезультатИзлишекСумма + СуммаИзлишков;
					ИтоговыеСуммы.ИтогоПересортИзлишкиКолво       = ИтоговыеСуммы.ИтогоПересортИзлишкиКолво + КоличествоИзлишков;
					ИтоговыеСуммы.ИтогоПересортИзлишкиСумма       = ИтоговыеСуммы.ИтогоПересортИзлишкиСумма + СуммаИзлишков;
					
					ИтоговыеСуммы.ИтогоРезультатНедостачаКолво      = ИтоговыеСуммы.ИтогоРезультатНедостачаКолво + КоличествоНедостачи;
					ИтоговыеСуммы.ИтогоРезультатНедостачаСумма      = ИтоговыеСуммы.ИтогоРезультатНедостачаСумма + СуммаНедостачи;
					ИтоговыеСуммы.ИтогоПересортНедостачиКолво       = ИтоговыеСуммы.ИтогоПересортНедостачиКолво + КоличествоНедостачи;
					ИтоговыеСуммы.ИтогоПересортНедостачиСумма       = ИтоговыеСуммы.ИтогоПересортНедостачиСумма + СуммаНедостачи;
					
					Индекс = Индекс + 1;
					
				КонецЦикла;
								
			ИначеЕсли СтрокаТоваров.Операция = "4_ПересортицаОприходование" Тогда	
								
				МассивСвязанныхТоваров = Новый Массив;
							
				СтруктураПоиска = Новый Структура;
				СтруктураПоиска.Вставить("Номенклатура", СтрокаТоваров.Номенклатура);
				СтруктураПоиска.Вставить("Характеристика", СтрокаТоваров.Характеристика);
				
				МассивСвязанныхТоваров = ТаблицаСвязанныхТоваров.НайтиСтроки(СтруктураПоиска);
				
				Индекс = 0;
				
				Пока СтрокаТоваров.Количество <> 0 Цикл
					
					ТекущийСвязанныйТовар = МассивСвязанныхТоваров[Индекс];
					
					Если ТекущийСвязанныйТовар.Количество = 0 Тогда
						Индекс = Индекс + 1;
						Продолжить;
					КонецЕсли;
					
					НоваяСтрока = ТаблицаТоваровРезультат.Добавить();
					НоваяСтрока.Номенклатура = СтрокаТоваров.Номенклатура;
					НоваяСтрока.Характеристика = СтрокаТоваров.Характеристика;
					НоваяСтрока.ТоварНаименование = НоменклатураКлиентСервер.ПредставлениеНоменклатурыДляПечати(
					СтрокаТоваров.ТоварНаименование,
					СтрокаТоваров.ХарактеристикаПредставление
					) + ?(СтрокаТоваров.ЭтоВозвратнаяТара, НСтр("ru=' (возвратная тара)'"), "");
					НоваяСтрока.ТоварКод = СтрокаТоваров.ТоварКод;
					НоваяСтрока.ЕдиницаИзмеренияКод = СтрокаТоваров.ЕдиницаИзмеренияКод;
					НоваяСтрока.ЕдиницаИзмеренияНаименование = СтрокаТоваров.ЕдиницаИзмеренияНаименование;
					НомерСтроки = НомерСтроки + 1;				
					НоваяСтрока.НомерСтроки = НомерСтроки;
					НоваяСтрока.НомерСвязаннойСтроки = НомерСтроки + 1;
					
					Если СтрокаТоваров.Количество - ТекущийСвязанныйТовар.Количество >= 0 Тогда
						
						КоличествоИзлишков = ТекущийСвязанныйТовар.Количество;	
						СуммаИзлишков = СтрокаТоваров.Стоимость * КоличествоИзлишков;
						
						СтрокаТоваров.Количество = СтрокаТоваров.Количество - КоличествоИзлишков;
						ТекущийСвязанныйТовар.Количество = 0;
						
					Иначе 
						
						КоличествоИзлишков = СтрокаТоваров.Количество;	
						СуммаИзлишков = СтрокаТоваров.Стоимость * КоличествоИзлишков;
						
						СтрокаТоваров.Количество = 0;
						ТекущийСвязанныйТовар.Количество = ТекущийСвязанныйТовар.Количество - КоличествоИзлишков;
						
					КонецЕсли;
					
					НоваяСтрока.КоличествоИзлишков = КоличествоИзлишков;	
					НоваяСтрока.СуммаИзлишков = СуммаИзлишков;	
					
					НоваяСтрока.КоличествоНедостачи = 0;	
					НоваяСтрока.СуммаНедостачи = 0;
					
					НоваяСтрока.ПересортИзлишкиКолво = КоличествоИзлишков;	
					НоваяСтрока.ПересортИзлишкиСумма = СуммаИзлишков;
					
					НоваяСтрока.ПриходИзлишковКолво = 0;	
					НоваяСтрока.ПриходИзлишковСумма = 0;	
					
					НоваяСтрока.СписаниеНедостачКолонкаКолво = 0;	
					НоваяСтрока.СписаниеНедостачКолонкаСумма = 0;
					
					НоваяСтрока.ПересортНедостачиКолво = 0;	
					НоваяСтрока.ПересортНедостачиСумма = 0;	
					НоваяСтрока.ПересортНедостачиНомер = 0;
					
					//Найдем и добавим оприходованный товар в таблицу результата
					СтруктураПоиска = Новый Структура;
					СтруктураПоиска.Вставить("Номенклатура", ТекущийСвязанныйТовар.СвязаннаяНоменклатура);
					СтруктураПоиска.Вставить("Характеристика", ТекущийСвязанныйТовар.СвязаннаяХарактеристика);
					СтруктураПоиска.Вставить("Операция", "3_ПересортицаСписание");
					
					МассивСписанныхТоваров = ТаблицаТоваров.НайтиСтроки(СтруктураПоиска);
					
					Для Каждого СписанныйТовар Из МассивСписанныхТоваров Цикл
						Если СписанныйТовар.Количество <> 0 И СписанныйТовар.Количество >= КоличествоИзлишков Тогда
							СвободныйСписанныйТовар = СписанныйТовар;
							Прервать;
						КонецЕсли;
					КонецЦикла;
					
					НоваяСтрока = ТаблицаТоваровРезультат.Добавить();
					НоваяСтрока.Номенклатура = СвободныйСписанныйТовар.Номенклатура;
					НоваяСтрока.Характеристика = СвободныйСписанныйТовар.Характеристика;
					НоваяСтрока.ТоварНаименование = НоменклатураКлиентСервер.ПредставлениеНоменклатурыДляПечати(
														СвободныйСписанныйТовар.ТоварНаименование,
														СвободныйСписанныйТовар.ХарактеристикаПредставление
														) + ?(СвободныйСписанныйТовар.ЭтоВозвратнаяТара, НСтр("ru=' (возвратная тара)'"), "");
					НоваяСтрока.ТоварКод = СвободныйСписанныйТовар.ТоварКод;
					НоваяСтрока.ЕдиницаИзмеренияКод = СвободныйСписанныйТовар.ЕдиницаИзмеренияКод;
					НоваяСтрока.ЕдиницаИзмеренияНаименование = СвободныйСписанныйТовар.ЕдиницаИзмеренияНаименование;
					НомерСтроки = НомерСтроки + 1;				
					НоваяСтрока.НомерСтроки = НомерСтроки;
					НоваяСтрока.НомерСвязаннойСтроки = НомерСтроки - 1;
					
					КоличествоНедостачи = КоличествоИзлишков;	
					СуммаНедостачи = СвободныйСписанныйТовар.Стоимость * КоличествоНедостачи;
					
					СвободныйСписанныйТовар.Количество = СвободныйСписанныйТовар.Количество - КоличествоНедостачи;
					
					НоваяСтрока.КоличествоНедостачи = КоличествоНедостачи;	
					НоваяСтрока.СуммаНедостачи = СуммаНедостачи;
					
					НоваяСтрока.КоличествоИзлишков = 0;	
					НоваяСтрока.СуммаИзлишков = 0;
					
					НоваяСтрока.ПересортНедостачиКолво = КоличествоНедостачи;	
					НоваяСтрока.ПересортНедостачиСумма = СуммаНедостачи;
					
					НоваяСтрока.ПересортИзлишкиКолво = 0;	
					НоваяСтрока.ПересортИзлишкиСумма = 0;	
					НоваяСтрока.ПересортИзлишкиНомер = 0;	
					
					НоваяСтрока.ПриходИзлишковКолво = 0;	
					НоваяСтрока.ПриходИзлишковСумма = 0;
					
					НоваяСтрока.СписаниеНедостачКолонкаКолво = 0;	
					НоваяСтрока.СписаниеНедостачКолонкаСумма = 0;
					
					
					ИтоговыеСуммы.ИтогоРезультатИзлишекКолво      = ИтоговыеСуммы.ИтогоРезультатИзлишекКолво + КоличествоИзлишков;
					ИтоговыеСуммы.ИтогоРезультатИзлишекСумма      = ИтоговыеСуммы.ИтогоРезультатИзлишекСумма + СуммаИзлишков;
					ИтоговыеСуммы.ИтогоПересортИзлишкиКолво       = ИтоговыеСуммы.ИтогоПересортИзлишкиКолво + КоличествоИзлишков;
					ИтоговыеСуммы.ИтогоПересортИзлишкиСумма       = ИтоговыеСуммы.ИтогоПересортИзлишкиСумма + СуммаИзлишков;
					
					ИтоговыеСуммы.ИтогоРезультатНедостачаКолво      = ИтоговыеСуммы.ИтогоРезультатНедостачаКолво + КоличествоНедостачи;
					ИтоговыеСуммы.ИтогоРезультатНедостачаСумма      = ИтоговыеСуммы.ИтогоРезультатНедостачаСумма + СуммаНедостачи;
					ИтоговыеСуммы.ИтогоПересортНедостачиКолво       = ИтоговыеСуммы.ИтогоПересортНедостачиКолво + КоличествоНедостачи;
					ИтоговыеСуммы.ИтогоПересортНедостачиСумма       = ИтоговыеСуммы.ИтогоПересортНедостачиСумма + СуммаНедостачи;
					
					Индекс = Индекс + 1;
					
				КонецЦикла;
				
			КонецЕсли;
			
		КонецЦикла;
		
		ТаблицаТоваровРезультат.Сортировать("Номенклатура Возр, Характеристика Возр");
		
		//Вывод на макет
		Для Каждого СтрокаТовар Из ТаблицаТоваровРезультат Цикл
			
			СтрокаТоварНомер = ТаблицаТоваровРезультат.Индекс(СтрокаТовар) + 1;
			
			Если ЗначениеЗаполнено(СтрокаТовар.НомерСвязаннойСтроки) Тогда
				
				СтруктураПоиска = Новый Структура;
				СтруктураПоиска.Вставить("НомерСвязаннойСтроки", СтрокаТовар.НомерСтроки);
				
				СвязанныйТовар = ТаблицаТоваровРезультат.НайтиСтроки(СтруктураПоиска)[0];		
				СвязанныйТоварНомер = ТаблицаТоваровРезультат.Индекс(СвязанныйТовар) + 1;
				
				Если СтрокаТовар.ПересортНедостачиКолво <> 0 Тогда
					СтрокаТовар.ПересортНедостачиНомер = СвязанныйТоварНомер;
				ИначеЕсли СтрокаТовар.ПересортИзлишкиКолво <> 0 Тогда
					СтрокаТовар.ПересортИзлишкиНомер = СвязанныйТоварНомер; 
				КонецЕсли;
				
				Если СвязанныйТовар.ПересортНедостачиКолво <> 0 Тогда
					СвязанныйТовар.ПересортНедостачиНомер = СтрокаТоварНомер;
				ИначеЕсли СвязанныйТовар.ПересортИзлишкиКолво <> 0 Тогда
					СвязанныйТовар.ПересортИзлишкиНомер = СтрокаТоварНомер; 
				КонецЕсли;
				
			КонецЕсли;
			 			
			ОбластьСтроки_Лист2 = Макет.ПолучитьОбласть("Строка_Лист2");
			
 			ОбластьСтроки.Параметры.Заполнить(СтрокаТовар);
			ОбластьСтроки.Параметры.НомерСтроки = СтрокаТоварНомер;
			ОбластьСтроки_Лист2.Параметры.Заполнить(СтрокаТовар);
		
			ТабличныйДокумент.Вывести(ОбластьСтроки);
			
			ОбластьСтроки_Лист2.Области.Строка_Лист2.ВысотаСтроки = ОбластьСтроки.Области.Строка.ВысотаСтроки;
			
			Если СтрокаТовар.НомерСтроки = 1 Тогда
				ОбластьМассиваСтрок_Лист2 = ОбластьСтроки_Лист2;
			Иначе
				ОбластьМассиваСтрок_Лист2.Присоединить(ОбластьСтроки_Лист2);
			КонецЕсли;
			
		КонецЦикла;
		
	Иначе
		
		Для каждого СтрокаТоваров из ТаблицаТоваров Цикл
			
			ОбластьСтроки_Лист2 = Макет.ПолучитьОбласть("Строка_Лист2");
			НомерСтроки = НомерСтроки + 1;
			
			
			Если НомерСтроки = 1 Тогда // первая строка
				
				ТекстСтраница = НСтр("ru='Страница %НомерСтраницы%'");
				ТекстСтраница = СтрЗаменить(ТекстСтраница,"%НомерСтраницы%",2);
				ОбластьШапки.Параметры.НомерСтраницы = ТекстСтраница;
				
				ТабличныйДокумент.Вывести(ОбластьШапки);
				
			Иначе
				
				Если НомерСтроки <> 1 И Не ТабличныйДокумент.ПроверитьВывод(ОбластьСтроки) Тогда
					
					
					НомерСтраницы = НомерСтраницы + 1;
					ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
					
					ТекстСтраница = НСтр("ru='Страница %НомерСтраницы%'");
					ТекстСтраница = СтрЗаменить(ТекстСтраница,"%НомерСтраницы%",НомерСтраницы);
					ОбластьШапки.Параметры.НомерСтраницы = ТекстСтраница;
					ТабличныйДокумент.Вывести(ОбластьШапки);
					
				КонецЕсли;
				
			КонецЕсли;
			
			ОбластьСтроки.Параметры.Заполнить(СтрокаТоваров);
			
			ОбластьСтроки.Параметры.ТоварНаименование = НоменклатураКлиентСервер.ПредставлениеНоменклатурыДляПечати(
			СтрокаТоваров.ТоварНаименование,
			СтрокаТоваров.ХарактеристикаПредставление
			) + ?(СтрокаТоваров.ЭтоВозвратнаяТара, НСтр("ru=' (возвратная тара)'"), "");
			
			ОбластьСтроки.Параметры.НомерСтроки = ТаблицаТоваров.Индекс(СтрокаТоваров)+1;
			
			Если СтрокаТоваров.Операция = "1_Списание" Тогда
				
				ОбластьСтроки.Параметры.КоличествоИзлишков = 0;	
				ОбластьСтроки.Параметры.СуммаИзлишков = 0;	
				
				ОбластьСтроки.Параметры.КоличествоНедостачи = СтрокаТоваров.КоличествоНедостачи;	
				ОбластьСтроки.Параметры.СуммаНедостачи = СтрокаТоваров.СуммаНедостачи * КоэффициентПересчета;	
				
				ОбластьСтроки_Лист2.Параметры.ПересортИзлишкиКолво = 0;	
				ОбластьСтроки_Лист2.Параметры.ПересортИзлишкиСумма = 0;	
				ОбластьСтроки_Лист2.Параметры.ПересортИзлишкиНомер = 0;	
				
				ОбластьСтроки_Лист2.Параметры.ПересортНедостачиКолво = 0;	
				ОбластьСтроки_Лист2.Параметры.ПересортНедостачиСумма = 0;	
				ОбластьСтроки_Лист2.Параметры.ПересортНедостачиНомер = 0;	
				
				ОбластьСтроки_Лист2.Параметры.ПриходИзлишковКолво = 0;	
				ОбластьСтроки_Лист2.Параметры.ПриходИзлишковСумма = 0;	
				
				ОбластьСтроки_Лист2.Параметры.СписаниеНедостачКолонкаКолво = СтрокаТоваров.КоличествоНедостачи;	
				ОбластьСтроки_Лист2.Параметры.СписаниеНедостачКолонкаСумма = СтрокаТоваров.СуммаНедостачи * КоэффициентПересчета;	
				
				ИтоговыеСуммы.ИтогоРезультатНедостачаКолво      = ИтоговыеСуммы.ИтогоРезультатНедостачаКолво + СтрокаТоваров.КоличествоНедостачи;
				ИтоговыеСуммы.ИтогоРезультатНедостачаСумма      = ИтоговыеСуммы.ИтогоРезультатНедостачаСумма + СтрокаТоваров.СуммаНедостачи * КоэффициентПересчета;
				ИтоговыеСуммы.ИтогоСписаниеНедостачКолонкаКолво = ИтоговыеСуммы.ИтогоСписаниеНедостачКолонкаКолво + СтрокаТоваров.КоличествоНедостачи;
				ИтоговыеСуммы.ИтогоСписаниеНедостачКолонкаСумма = ИтоговыеСуммы.ИтогоСписаниеНедостачКолонкаСумма + СтрокаТоваров.СуммаНедостачи * КоэффициентПересчета;
				
			ИначеЕсли СтрокаТоваров.Операция = "2_Оприходование" Тогда
				ОбластьСтроки.Параметры.КоличествоИзлишков = СтрокаТоваров.КоличествоИзлишков;	
				ОбластьСтроки.Параметры.СуммаИзлишков = СтрокаТоваров.СуммаИзлишков * КоэффициентПересчета;	
				
				ОбластьСтроки.Параметры.КоличествоНедостачи = 0;	
				ОбластьСтроки.Параметры.СуммаНедостачи = 0;	
				
				ОбластьСтроки_Лист2.Параметры.ПересортИзлишкиКолво = 0;	
				ОбластьСтроки_Лист2.Параметры.ПересортИзлишкиСумма = 0;	
				ОбластьСтроки_Лист2.Параметры.ПересортИзлишкиНомер = 0;	
				
				ОбластьСтроки_Лист2.Параметры.ПересортНедостачиКолво = 0;	
				ОбластьСтроки_Лист2.Параметры.ПересортНедостачиСумма = 0;	
				ОбластьСтроки_Лист2.Параметры.ПересортНедостачиНомер = 0;	
				
				ОбластьСтроки_Лист2.Параметры.ПриходИзлишковКолво = СтрокаТоваров.КоличествоИзлишков;	
				ОбластьСтроки_Лист2.Параметры.ПриходИзлишковСумма = СтрокаТоваров.СуммаИзлишков * КоэффициентПересчета;	
				
				ОбластьСтроки_Лист2.Параметры.СписаниеНедостачКолонкаКолво = 0;	
				ОбластьСтроки_Лист2.Параметры.СписаниеНедостачКолонкаСумма = 0;
				
				ИтоговыеСуммы.ИтогоРезультатИзлишекКолво        = ИтоговыеСуммы.ИтогоРезультатИзлишекКолво + СтрокаТоваров.КоличествоИзлишков;
				ИтоговыеСуммы.ИтогоРезультатИзлишекСумма        = ИтоговыеСуммы.ИтогоРезультатИзлишекСумма + СтрокаТоваров.СуммаИзлишков * КоэффициентПересчета;
				ИтоговыеСуммы.ИтогоПриходИзлишковКолво          = ИтоговыеСуммы.ИтогоПриходИзлишковКолво + СтрокаТоваров.КоличествоИзлишков;
				ИтоговыеСуммы.ИтогоПриходИзлишковСумма          = ИтоговыеСуммы.ИтогоПриходИзлишковСумма + СтрокаТоваров.СуммаИзлишков * КоэффициентПересчета;
				
			ИначеЕсли СтрокаТоваров.Операция = "3_ПересортицаСписание" Тогда
				
				ОбластьСтроки.Параметры.КоличествоИзлишков = 0;	
				ОбластьСтроки.Параметры.СуммаИзлишков = 0;	
				
				ОбластьСтроки.Параметры.КоличествоНедостачи = СтрокаТоваров.КоличествоНедостачи;	
				ОбластьСтроки.Параметры.СуммаНедостачи = СтрокаТоваров.СуммаНедостачи * КоэффициентПересчета;	
				
				ОбластьСтроки_Лист2.Параметры.ПересортНедостачиКолво = СтрокаТоваров.КоличествоНедостачи;	
				ОбластьСтроки_Лист2.Параметры.ПересортНедостачиСумма = СтрокаТоваров.СуммаНедостачи * КоэффициентПересчета;
				
				ОбластьСтроки_Лист2.Параметры.ПересортИзлишкиКолво = 0;	
				ОбластьСтроки_Лист2.Параметры.ПересортИзлишкиСумма = 0;	
				ОбластьСтроки_Лист2.Параметры.ПересортИзлишкиНомер = 0;	
				
				ОбластьСтроки_Лист2.Параметры.ПриходИзлишковКолво = 0;	
				ОбластьСтроки_Лист2.Параметры.ПриходИзлишковСумма = 0;	
				
				ОбластьСтроки_Лист2.Параметры.СписаниеНедостачКолонкаКолво = 0;	
				ОбластьСтроки_Лист2.Параметры.СписаниеНедостачКолонкаСумма = 0;
				
				СтруктураПоиска = Новый Структура;
				СтруктураПоиска.Вставить("Номенклатура", СтрокаТоваров.СвязаннаяНоменклатура);
				СтруктураПоиска.Вставить("Характеристика", СтрокаТоваров.СвязаннаяХарактеристика);
				СтруктураПоиска.Вставить("Операция", "4_ПересортицаОприходование");
						
				СтрокаПересортицы = ТаблицаТоваров.НайтиСтроки(СтруктураПоиска)[0];
				
				ОбластьСтроки_Лист2.Параметры.ПересортНедостачиНомер = ТаблицаТоваров.Индекс(СтрокаПересортицы)+1;
				
				ИтоговыеСуммы.ИтогоРезультатНедостачаКолво      = ИтоговыеСуммы.ИтогоРезультатНедостачаКолво + СтрокаТоваров.КоличествоНедостачи;
				ИтоговыеСуммы.ИтогоРезультатНедостачаСумма      = ИтоговыеСуммы.ИтогоРезультатНедостачаСумма + СтрокаТоваров.СуммаНедостачи * КоэффициентПересчета;
				ИтоговыеСуммы.ИтогоПересортНедостачиКолво       = ИтоговыеСуммы.ИтогоПересортНедостачиКолво + СтрокаТоваров.КоличествоНедостачи;
				ИтоговыеСуммы.ИтогоПересортНедостачиСумма       = ИтоговыеСуммы.ИтогоПересортНедостачиСумма + СтрокаТоваров.СуммаНедостачи * КоэффициентПересчета;
				
			ИначеЕсли СтрокаТоваров.Операция = "4_ПересортицаОприходование" Тогда
				ОбластьСтроки.Параметры.КоличествоИзлишков = СтрокаТоваров.КоличествоИзлишков;	
				ОбластьСтроки.Параметры.СуммаИзлишков = СтрокаТоваров.СуммаИзлишков * КоэффициентПересчета;	
				
				ОбластьСтроки.Параметры.КоличествоНедостачи = 0;	
				ОбластьСтроки.Параметры.СуммаНедостачи = 0;	
				
				ОбластьСтроки_Лист2.Параметры.ПересортНедостачиКолво = 0;	
				ОбластьСтроки_Лист2.Параметры.ПересортНедостачиСумма = 0;	
				ОбластьСтроки_Лист2.Параметры.ПересортНедостачиНомер = 0;	
				
				ОбластьСтроки_Лист2.Параметры.ПересортИзлишкиКолво = СтрокаТоваров.КоличествоИзлишков;	
				ОбластьСтроки_Лист2.Параметры.ПересортИзлишкиСумма = СтрокаТоваров.СуммаИзлишков * КоэффициентПересчета;	
				
				СтруктураПоиска = Новый Структура;
				СтруктураПоиска.Вставить("Номенклатура",СтрокаТоваров.СвязаннаяНоменклатура);
				СтруктураПоиска.Вставить("Характеристика",СтрокаТоваров.СвязаннаяХарактеристика);
				СтруктураПоиска.Вставить("Операция","3_ПересортицаСписание");
				
				СтрокаПересортицы = ТаблицаТоваров.НайтиСтроки(СтруктураПоиска)[0];
								
				ОбластьСтроки_Лист2.Параметры.ПересортИзлишкиНомер = ТаблицаТоваров.Индекс(СтрокаПересортицы)+1;	
				
				ОбластьСтроки_Лист2.Параметры.ПриходИзлишковКолво = 0;	
				ОбластьСтроки_Лист2.Параметры.ПриходИзлишковСумма = 0;	
				
				ОбластьСтроки_Лист2.Параметры.СписаниеНедостачКолонкаКолво = 0;	
				ОбластьСтроки_Лист2.Параметры.СписаниеНедостачКолонкаСумма = 0;
				
				ИтоговыеСуммы.ИтогоРезультатИзлишекКолво      = ИтоговыеСуммы.ИтогоРезультатИзлишекКолво + СтрокаТоваров.КоличествоИзлишков;
				ИтоговыеСуммы.ИтогоРезультатИзлишекСумма      = ИтоговыеСуммы.ИтогоРезультатИзлишекСумма + СтрокаТоваров.СуммаИзлишков * КоэффициентПересчета;
				ИтоговыеСуммы.ИтогоПересортИзлишкиКолво       = ИтоговыеСуммы.ИтогоПересортИзлишкиКолво + СтрокаТоваров.КоличествоИзлишков;
				ИтоговыеСуммы.ИтогоПересортИзлишкиСумма       = ИтоговыеСуммы.ИтогоПересортИзлишкиСумма + СтрокаТоваров.СуммаИзлишков * КоэффициентПересчета;
				
			КонецЕсли;
			
			ТабличныйДокумент.Вывести(ОбластьСтроки);
			
			ОбластьСтроки_Лист2.Области.Строка_Лист2.ВысотаСтроки = ОбластьСтроки.Области.Строка.ВысотаСтроки;
			Если НомерСтроки = 1 Тогда
				ОбластьМассиваСтрок_Лист2 = ОбластьСтроки_Лист2;
			Иначе
				ОбластьМассиваСтрок_Лист2.Присоединить(ОбластьСтроки_Лист2);
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
	ОбластьПодвал.Параметры.Заполнить(ИтоговыеСуммы);
	ОбластьПодвал_Лист2.Параметры.Заполнить(ИтоговыеСуммы);
	
	ОбластьПодвал_Лист2.Параметры.ДолжностьМОЛ1      = Шапка.ДолжностьКладовщика;
	ОбластьПодвал_Лист2.Параметры.ФИОМОЛ1            = ФизическиеЛица.ФамилияИнициалыФизЛица(Шапка.Кладовщик);
	
	ОбластьПодвал.Параметры.ФИОБухгалтера		     = Шапка.ГлавныйБухгалтер;
	
	ТабличныйДокумент.Вывести(ОбластьПодвал);
	
	ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
	
	ТабличныйДокумент.Вывести(ОбластьШапки_Лист2);
	
	ТабличныйДокумент.Вывести(ОбластьМассиваСтрок_Лист2);
	
	ТабличныйДокумент.Вывести(ОбластьПодвал_Лист2);
	
	УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабличныйДокумент, НомерСтрокиНачало, ОбъектыПечати, Шапка.Ссылка);
		
КонецПроцедуры

#КонецЕсли