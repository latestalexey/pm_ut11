////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// Пропускаем инициализацию, чтобы гарантировать получение формы при передаче параметра "АвтоТест".
	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;
	КонецЕсли;
	
	Соглашение     = Параметры.Соглашение;
	Цена           = Параметры.Цена;
	Дата           = Параметры.Дата;
	Упаковка       = Параметры.Упаковка;
	СтараяУпаковка = Упаковка;
	Склад          = Параметры.Склад;
	Валюта         = Параметры.Валюта;
	Номенклатура   = Параметры.Номенклатура;
	Характеристика = Параметры.Характеристика;
	МаксПроцентРучнойСкидки = Параметры.МаксПроцентРучнойСкидки;
	
	Если МаксПроцентРучнойСкидки = 100 Тогда
		МаксПроцентРучнойСкидкиНеОграничена =  НСтр("ru = 'Не ограничена'");
		Элементы.МаксПроцентРучнойСкидкиНеОграничена.Видимость = Истина;
		Элементы.МаксПроцентРучнойСкидки.Видимость = Ложь;		
	КонецЕсли;	
	
	Элементы.Склад.СписокВыбора.ЗагрузитьЗначения(Параметры.Склады);
	Элементы.Склад.Видимость = (Параметры.Склады.Количество() > 1) И Параметры.ИспользоватьСкладыВТабличнойЧасти;
	
	ИспользоватьРучныеСкидкиВЗакупках = ПолучитьФункциональнуюОпцию("ИспользоватьРучныеСкидкиВЗакупках");
	
	Если Не ИспользоватьРучныеСкидкиВЗакупках ИЛИ Параметры.СкрыватьРучныеСкидки Тогда
		
		Элементы.ГруппаМаксимальныйПроцентРучнойСкидки.Видимость = Ложь;
		Элементы.ГруппаПроцентРучнойСкидки.Видимость = Ложь;	
		
	КонецЕсли; 
	
	КоличествоУпаковок = 1;
	
	Элементы.Цена.ТолькоПросмотр = НЕ Параметры.РедактироватьЦену;
	
	НаименованиеТовара = "" + Параметры.Номенклатура + ?(ЗначениеЗаполнено(Параметры.Характеристика), " (" + Параметры.Характеристика + ")","");
	
	Если Параметры.СкрытьЦену Тогда
		Элементы.Цена.Видимость    = Ложь;
		Элементы.Валюта.Видимость  = Ложь;
		ЭтаФорма.АвтоЗаголовок     = Ложь;
		ЭтаФорма.Заголовок         = НСтр("ru = 'Ввод количества'");
	КонецЕсли;
		
	ОбщегоНазначенияУТКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы,"УсловиеЦеныПоставщика", "Видимость", Параметры.РегистрироватьЦеныПоУсловиям);
	
	Элементы.Упаковка.Видимость = ЗначениеЗаполнено(Номенклатура.НаборУпаковок);
	Элементы.ЕдиницаИзмерения.Видимость = Не ЗначениеЗаполнено(Номенклатура.НаборУпаковок);
	Элементы.УсловиеЦеныПоставщика.Видимость = Не Соглашение.Пустая();

	Если Параметры.ЭтоУслуга Тогда
		Склад                    = ПредопределенноеЗначение("Справочник.Склады.ПустаяСсылка");
		Элементы.Склад.Видимость = Ложь;
	КонецЕсли;
	
	КоличествоУпаковок                      = 1;
	Элементы.КоличествоУпаковок.Доступность = Истина;
	
	СтруктураОтбораУпаковок = Новый Структура;
	СтруктураОтбораУпаковок.Вставить("Номенклатура", Номенклатура);
	СтруктураОтбораУпаковок.Вставить("ДобавлятьПустуюУпаковку", Ложь);
	
	СписокВыбораУпаковок = Справочники.УпаковкиНоменклатуры.ПолучитьДанныеВыбора(СтруктураОтбораУпаковок);
	
	Элементы.Упаковка.СписокВыбора.Очистить();
	
	УпаковкаХранения = Справочники.УпаковкиНоменклатуры.ПустаяСсылка();
	ДобавлятьПустую = Истина; 
	
	Для Каждого ЭлементСписка из СписокВыбораУпаковок Цикл
		Элементы.Упаковка.СписокВыбора.Добавить(ЭлементСписка.Значение, ЭлементСписка.Представление);
		Если ЭлементСписка.Значение.Пустая() Тогда
			ДобавлятьПустую = Ложь;
		КонецЕсли;	
		Если ЭлементСписка.Пометка Тогда
			УпаковкаХранения = ЭлементСписка.Значение;
		КонецЕсли;
	КонецЦикла;
	
	Если ДобавлятьПустую Тогда
		 ЕдиницаХранения = Строка(ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Номенклатура,"ЕдиницаИзмерения"));	
		 Элементы.Упаковка.СписокВыбора.Добавить(Справочники.УпаковкиНоменклатуры.ПустаяСсылка(), ЕдиницаХранения);
	КонецЕсли;	
	
	Если ЗначениеЗаполнено(Параметры.Упаковка) Тогда
		Упаковка = Параметры.Упаковка;
	Иначе
		Упаковка = УпаковкаХранения;
	КонецЕсли;
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ ШАПКИ ФОРМЫ

&НаСервере
Процедура УпаковкаПриИзмененииНаСервере(СтараяУпаковка)
	
	Цена = Цена * ?(ЗначениеЗаполнено(Упаковка.Коэффициент), Упаковка.Коэффициент, 1) / ?(ЗначениеЗаполнено(СтараяУпаковка.Коэффициент), СтараяУпаковка.Коэффициент, 1);
	
КонецПроцедуры

&НаКлиенте
Процедура УпаковкаПриИзменении(Элемент)
	
	УпаковкаПриИзмененииНаСервере(СтараяУпаковка);
	СтараяУпаковка = Упаковка;
	
КонецПроцедуры

&НаСервере
Процедура УсловиеЦеныПоставщикаПриИзмененииНаСервере()
	
	Запрос = Новый Запрос("
		|ВЫБРАТЬ
		|	ВЫРАЗИТЬ(ЦеныНоменклатурыСрезПоследних.Цена * КурсыСрезПоследних.Курс / КурсыСрезПоследних.Кратность
		|		/ КурсыСрезПоследнихВалютаЦены.Курс * КурсыСрезПоследнихВалютаЦены.Кратность
		|		* ЕСТЬNULL(ВЫРАЗИТЬ(&Упаковка КАК Справочник.УпаковкиНоменклатуры).Коэффициент, 1)
		|		/ ЕСТЬNULL(ЦеныНоменклатурыСрезПоследних.Упаковка.Коэффициент, 1) КАК ЧИСЛО(15, 2)) КАК Цена
		|ИЗ
		|	РегистрСведений.ЦеныНоменклатурыПоставщиков.СрезПоследних(КОНЕЦПЕРИОДА(&Дата, ДЕНЬ), Номенклатура = &Номенклатура
		|		И Характеристика = &Характеристика И Соглашение = &Соглашение И УсловиеЦеныПоставщика = &УсловиеЦеныПоставщика)
		|	КАК ЦеныНоменклатурыСрезПоследних
		|ЛЕВОЕ СОЕДИНЕНИЕ
		|	РегистрСведений.КурсыВалют.СрезПоследних(&Дата) КАК КурсыСрезПоследних
		|ПО
		|	КурсыСрезПоследних.Валюта = ЦеныНоменклатурыСрезПоследних.Валюта
		|ЛЕВОЕ СОЕДИНЕНИЕ
		|	РегистрСведений.КурсыВалют.СрезПоследних(&Дата, Валюта = &Валюта) КАК КурсыСрезПоследнихВалютаЦены
		|ПО
		|	ИСТИНА
		|");
	
	Запрос.УстановитьПараметр("Соглашение",             Соглашение);
	Запрос.УстановитьПараметр("УсловиеЦеныПоставщика" , УсловиеЦеныПоставщика);
	Запрос.УстановитьПараметр("Дата"          ,         Дата);
	Запрос.УстановитьПараметр("Номенклатура"  ,         Номенклатура);
	Запрос.УстановитьПараметр("Характеристика",         Характеристика);
	Запрос.УстановитьПараметр("Упаковка"      ,         Упаковка);
	Запрос.УстановитьПараметр("Валюта"        ,         Валюта);
	
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда
		Если ЗначениеЗаполнено(Выборка.Цена) Тогда
			Цена = Выборка.Цена;
		Иначе
			Цена = 0;
		КонецЕсли;
	Иначе
		Цена = 0;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура УсловиеЦеныПоставщикаПриИзменении(Элемент)
	
	УсловиеЦеныПоставщикаПриИзмененииНаСервере();
	
КонецПроцедуры

&НаКлиенте
Процедура УпаковкаОчистка(Элемент, СтандартнаяОбработка)
	
	УпаковкаПриИзмененииНаСервере(СтараяУпаковка);
	СтараяУпаковка = Упаковка;
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ КОМАНД ФОРМЫ

&НаКлиенте
Процедура ОК(Команда)
	
	Отказ = Ложь;
	ОчиститьСообщения();
	
	Если КоличествоУпаковок = 0 Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(НСтр("ru = 'Не заполнено количество'"),,"КоличествоУпаковок",,Отказ);
	КонецЕсли;
	
	Если Отказ Тогда
		Возврат;
	КонецЕсли;
	
	МассивСтруктур = Новый Массив;
	
	НоваяСтрока = Новый Структура;
	НоваяСтрока.Вставить("Номенклатура",          Номенклатура);
	НоваяСтрока.Вставить("Характеристика",        Характеристика);
	НоваяСтрока.Вставить("Соглашение",            Соглашение);
	НоваяСтрока.Вставить("УсловиеЦеныПоставщика", УсловиеЦеныПоставщика);
	НоваяСтрока.Вставить("Цена",                  Цена);
	
	НоваяСтрока.Вставить("Упаковка",              Упаковка);
	НоваяСтрока.Вставить("КоличествоУпаковок",    КоличествоУпаковок);
	НоваяСтрока.Вставить("Склад",                 Склад);
	НоваяСтрока.Вставить("ПроцентРучнойСкидки",                 ПроцентРучнойСкидки);	
	
	МассивСтруктур.Добавить(НоваяСтрока);
	
	Закрыть(МассивСтруктур);
	
КонецПроцедуры

&НаКлиенте
Процедура Отмена(Команда)
	
	Закрыть(Неопределено);
	
КонецПроцедуры
