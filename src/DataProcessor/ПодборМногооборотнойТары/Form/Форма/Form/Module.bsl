////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ТоварыДокумента.Загрузить(ПолучитьИзВременногоХранилища(Параметры.АдресТоваровВоВременномХранилище));
	
	ПоказыватьСклад = Параметры.ПоказыватьСклад;
	ПоказыватьДату = Параметры.ПоказыватьДату;
	
	ЗаполнитьДеревоМногооборотнойТары();
	ОбновитьПредупреждающуюНадпись(Элементы);
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытием(Отказ, СтандартнаяОбработка)
	
	Если Не ПеренестиВДокумент И Модифицированность Тогда
		
		ОтветНаВопрос = Вопрос(НСтр("ru = 'Многооборотная тара не перенесена в документ. Перенести?'"), РежимДиалогаВопрос.ДаНетОтмена);
		
		Если ОтветНаВопрос = КодВозвратаДиалога.Отмена Тогда
			Отказ = Истина;
		ИначеЕсли ОтветНаВопрос = КодВозвратаДиалога.Да Тогда
			ПеренестиВДокумент = Истина;
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриЗакрытии()
	
	Если ПеренестиВДокумент Тогда
		
		АдресМногооборотнойТарыВХранилище = ПоместитьТаруВХранилище();
		Структура = Новый Структура("ТараПодобрана,АдресМногооборотнойТарыВХранилище", Истина, АдресМногооборотнойТарыВХранилище);
		ПеренестиВДокумент = Истина;
		ОповеститьОВыборе(Структура);
		
	КонецЕсли;
	
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ ДЕРЕВА ФОРМЫ

&НаКлиенте
Процедура ТараВыбранаПриИзменении(Элемент)
	
	ОбновитьПредупреждающуюНадпись(Элементы, Элементы.Тара.ТекущиеДанные);
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ КОМАНД ФОРМЫ

&НаКлиенте
Процедура Завершить(Команда)
	
	ПеренестиВДокумент = Истина;
	Закрыть();
	
КонецПроцедуры

&НаКлиенте
Процедура Отмена(Команда)
	
	ПеренестиВДокумент = Ложь;
	Закрыть(Неопределено);
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

////////////////////////////////////////////////////////////////////////////////
// Прочее

&НаСервере
Процедура ЗаполнитьДеревоМногооборотнойТары()
	
	Запрос = Новый Запрос("
	|ВЫБРАТЬ
	|	ТоварыДокумента.Номенклатура       КАК Номенклатура,
	|	ТоварыДокумента.Характеристика     КАК Характеристика,
	|	ТоварыДокумента.Количество         КАК Количество,
	|	ТоварыДокумента.Склад              КАК Склад,
	|	ТоварыДокумента.Дата               КАК Дата
	|ПОМЕСТИТЬ
	|	ВтТоварыДокумента
	|ИЗ
	|	&ТоварыДокумента КАК ТоварыДокумента
	|ГДЕ
	|	ТоварыДокумента.Количество > 0
	|;
	|ВЫБРАТЬ
	|	ВтТоварыДокумента.Номенклатура                                  КАК Номенклатура,
	|	ВтТоварыДокумента.Характеристика                                КАК Характеристика,
	|	ВтТоварыДокумента.Склад                                         КАК Склад,
	|	ВтТоварыДокумента.Дата                                          КАК Дата,
	|	0                                                               КАК КоличествоНоменклатуры,
	|	ВтТоварыДокумента.Номенклатура.НоменклатураМногооборотнаяТара   КАК НоменклатураМногооборотнаяТара,
	|	ВтТоварыДокумента.Номенклатура.ХарактеристикаМногооборотнаяТара КАК ХарактеристикаМногооборотнаяТара,
	|	ЗНАЧЕНИЕ(Справочник.УпаковкиНоменклатуры.ПустаяСсылка)          КАК Упаковка,
	|	0                                                               КАК МинимальноеКоличествоУпаковокМногооборотнойТары
	|
	|ПОМЕСТИТЬ
	|	ВтТара
	|ИЗ
	|	ВтТоварыДокумента КАК ВтТоварыДокумента
	|ГДЕ
	|	ВтТоварыДокумента.Номенклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Товар)
	|	И ВтТоварыДокумента.Номенклатура.ПоставляетсяВМногооборотнойТаре
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ВтТоварыДокумента.Номенклатура                                  КАК Номенклатура,
	|	ВтТоварыДокумента.Характеристика                                КАК Характеристика,
	|	ВтТоварыДокумента.Склад                                         КАК Склад,
	|	ВтТоварыДокумента.Дата                                          КАК Дата,
	|	ВтТоварыДокумента.Количество                                    КАК КоличествоНоменклатуры,
	|	ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка)                  КАК НоменклатураМногооборотнаяТара,
	|	ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка)    КАК ХарактеристикаМногооборотнаяТара,
	|	ЗНАЧЕНИЕ(Справочник.УпаковкиНоменклатуры.ПустаяСсылка)          КАК Упаковка,
	|	0                                                               КАК МинимальноеКоличествоУпаковокМногооборотнойТары
	|ИЗ
	|	ВтТоварыДокумента КАК ВтТоварыДокумента
	|ГДЕ
	|	ВтТоварыДокумента.Номенклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Товар)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ВтТоварыДокумента.Номенклатура                                           КАК Номенклатура,
	|	ВтТоварыДокумента.Характеристика                                         КАК Характеристика,
	|	ВтТоварыДокумента.Склад                                                  КАК Склад,
	|	ВтТоварыДокумента.Дата                                                   КАК Дата,
	|	ВЫРАЗИТЬ(ВтТоварыДокумента.Количество / УпаковкиНоменклатуры.Коэффициент КАК ЧИСЛО(15,0)) КАК КоличествоНоменклатуры,
	|	УпаковкиНоменклатуры.НоменклатураМногооборотнаяТара                      КАК НоменклатураМногооборотнаяТара,
	|	УпаковкиНоменклатуры.ХарактеристикаМногооборотнаяТара                    КАК ХарактеристикаМногооборотнаяТара,
	|	ЕСТЬNULL(УпаковкиНоменклатуры.Ссылка, ЗНАЧЕНИЕ(Справочник.УпаковкиНоменклатуры.ПустаяСсылка)) КАК Упаковка,
	|	УпаковкиНоменклатуры.МинимальноеКоличествоУпаковокМногооборотнойТары     КАК МинимальноеКоличествоУпаковокМногооборотнойТары
	|ИЗ
	|	ВтТоварыДокумента КАК ВтТоварыДокумента
	|ЛЕВОЕ СОЕДИНЕНИЕ
	|	Справочник.УпаковкиНоменклатуры КАК УпаковкиНоменклатуры
	|ПО
	|	ВтТоварыДокумента.Номенклатура.НаборУпаковок = УпаковкиНоменклатуры.Владелец
	|	ИЛИ (ВтТоварыДокумента.Номенклатура.НаборУпаковок = ЗНАЧЕНИЕ(Справочник.НаборыУпаковок.ИндивидуальныйДляНоменклатуры)
	|		И ВтТоварыДокумента.Номенклатура = УпаковкиНоменклатуры.Владелец)
	|	И УпаковкиНоменклатуры.ПоставляетсяВМногооборотнойТаре
	|	И НЕ УпаковкиНоменклатуры.ПометкаУдаления
	|ГДЕ
	|	ВтТоварыДокумента.Номенклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Товар)
	|;
	|ВЫБРАТЬ
	|	втТара.Номенклатура                                                        КАК Номенклатура,
	|	втТара.Характеристика                                                      КАК Характеристика,
	|	втТара.Склад                                                               КАК Склад,
	|	втТара.Дата                                                                КАК Дата,
	|	втТара.Упаковка                                                            КАК Упаковка,
	|	ВЫБОР
	|		КОГДА
	|			втТара.Упаковка.СостоитИзДругихУпаковок
	|		ТОГДА
	|			втТара.Упаковка.КоличествоУпаковок
	|		ИНАЧЕ
	|			втТара.Упаковка.Коэффициент
	|	КОНЕЦ КАК КоличествоУпаковок,
	|	втТара.Упаковка.Родитель                                                   КАК Родитель,
	|	втТара.Номенклатура.ЕдиницаИзмерения                                       КАК ЕдиницаИзмерения,
	|	МАКСИМУМ(втТара.МинимальноеКоличествоУпаковокМногооборотнойТары)           КАК МинимальноеКоличествоУпаковокМногооборотнойТары,
	|	МАКСИМУМ(втТара.НоменклатураМногооборотнаяТара)                            КАК НоменклатураМногооборотнаяТара,
	|	МАКСИМУМ(втТара.ХарактеристикаМногооборотнаяТара)                          КАК ХарактеристикаМногооборотнаяТара,
	|	МАКСИМУМ(втТара.КоличествоНоменклатуры)                                    КАК КоличествоНоменклатуры
	|ИЗ
	|	втТара КАК втТара
	|СГРУППИРОВАТЬ ПО
	|	втТара.Номенклатура,
	|	втТара.Характеристика,
	|	втТара.Склад,
	|	втТара.Дата,
	|	втТара.Упаковка
	|УПОРЯДОЧИТЬ ПО
	|	втТара.Номенклатура,
	|	втТара.Характеристика,
	|	втТара.Склад,
	|	втТара.Дата,
	|	втТара.Упаковка
	|ИТОГИ
	|	МАКСИМУМ(НоменклатураМногооборотнаяТара),
	|	МАКСИМУМ(ХарактеристикаМногооборотнаяТара)
	|ПО
	|	втТара.Номенклатура,
	|	втТара.Характеристика,
	|	втТара.Склад,
	|	втТара.Дата
	|;
	|ВЫБРАТЬ
	|	ВтТоварыДокумента.Номенклатура      КАК Номенклатура,
	|	ВтТоварыДокумента.Характеристика    КАК Характеристика,
	|	ВтТоварыДокумента.Склад             КАК Склад,
	|	ВтТоварыДокумента.Дата              КАК Дата,
	|	СУММА(ВтТоварыДокумента.Количество) КАК НачальноеКоличествоТары,
	|	СУММА(ВтТоварыДокумента.Количество) КАК КоличествоТары,
	|	НЕОПРЕДЕЛЕНО                        КАК СтрокаДерева
	|ИЗ
	|	ВтТоварыДокумента КАК ВтТоварыДокумента
	|ГДЕ
	|	ВтТоварыДокумента.Номенклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара)
	|СГРУППИРОВАТЬ ПО
	|	ВтТоварыДокумента.Номенклатура,
	|	ВтТоварыДокумента.Характеристика,
	|	ВтТоварыДокумента.Склад,
	|	ВтТоварыДокумента.Дата
	|УПОРЯДОЧИТЬ ПО
	|	ВтТоварыДокумента.Номенклатура.Наименование,
	|	ВтТоварыДокумента.Характеристика.Наименование,
	|	ВтТоварыДокумента.Склад.Наименование,
	|	ВтТоварыДокумента.Дата
	|");

	Запрос.УстановитьПараметр("ТоварыДокумента", ТоварыДокумента.Выгрузить());
	РезультатЗапроса = Запрос.ВыполнитьПакет();
	ТараСтроки = Тара.ПолучитьЭлементы();
	ТараСтроки.Очистить();
	ДеревоТара = РеквизитФормыВЗначение("Тара");
	ВсяТараПодобрана = Истина;
	
	Если Не РезультатЗапроса[2].Пустой() Тогда
		
		ВыборкаНоменклатура = РезультатЗапроса[2].Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		ТараДокумента = РезультатЗапроса[3].Выгрузить();
		
		Пока ВыборкаНоменклатура.Следующий() Цикл
			
			ВыборкаХарактеристики = ВыборкаНоменклатура.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
			
			Пока ВыборкаХарактеристики.Следующий() Цикл
				
				ВыборкаСклады = ВыборкаХарактеристики.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
				
				Пока ВыборкаСклады.Следующий() Цикл
				
					ВыборкаДаты = ВыборкаСклады.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
					
					Пока ВыборкаДаты.Следующий() Цикл
						
						ВыборкаУпаковки = ВыборкаДаты.Выбрать();
						
						ТаблицаУпаковок = Новый ТаблицаЗначений();
						ТаблицаУпаковок.Колонки.Добавить("Номенклатура");
						ТаблицаУпаковок.Колонки.Добавить("Характеристика");
						ТаблицаУпаковок.Колонки.Добавить("Склад");
						ТаблицаУпаковок.Колонки.Добавить("Дата");
						ТаблицаУпаковок.Колонки.Добавить("Упаковка");
						ТаблицаУпаковок.Колонки.Добавить("Родитель");
						ТаблицаУпаковок.Колонки.Добавить("КоличествоНоменклатуры");
						ТаблицаУпаковок.Колонки.Добавить("КоличествоУпаковок");
						ТаблицаУпаковок.Колонки.Добавить("НоменклатураМногооборотнаяТара");
						ТаблицаУпаковок.Колонки.Добавить("ХарактеристикаМногооборотнаяТара");
						ТаблицаУпаковок.Колонки.Добавить("МинимальноеКоличествоУпаковокМногооборотнойТары");
						
						ТаблицаУпаковок.Сортировать("КоличествоНоменклатуры Убыв");
						
						Пока ВыборкаУпаковки.Следующий() Цикл
							
							Если ЗначениеЗаполнено(ВыборкаУпаковки.Упаковка) Тогда
								
								НоваяСтрокаУпаковка = ТаблицаУпаковок.Добавить();
								ЗаполнитьЗначенияСвойств(НоваяСтрокаУпаковка, ВыборкаУпаковки);
								
							Иначе
								
								НоваяСтрока = ДеревоТара.Строки.Добавить();
								ЗаполнитьЗначенияСвойств(НоваяСтрока, ВыборкаУпаковки);
								
								Если ЗначениеЗаполнено(НоваяСтрока.НоменклатураМногооборотнаяТара) Тогда
									
									НоваяСтрока.РекомендуемоеКоличествоТары = Цел(НоваяСтрока.КоличествоНоменклатуры);
									НоваяСтрока.ПодобранноеКоличествоТары = НоваяСтрока.РекомендуемоеКоличествоТары;
									
									ЗаполнитьКоличествоТарыИзДокумента(ТараДокумента, НоваяСтрока, ВсяТараПодобрана);
									
								КонецЕсли;
								
							КонецЕсли;
								
						КонецЦикла;
						
						ВывестиПодчиненныеУпаковки(
							НоваяСтрока.Строки,
							Справочники.УпаковкиНоменклатуры.ПустаяСсылка(),
							ТаблицаУпаковок,
							ТараДокумента,
							ВсяТараПодобрана
						);
								
					КонецЦикла;
					
				КонецЦикла;
				
			КонецЦикла;
			
		КонецЦикла;
		
		Для Каждого ТекСтрока Из ТараДокумента Цикл
			
			Если ТекСтрока.НачальноеКоличествоТары = ТекСтрока.КоличествоТары Тогда
				
				НоваяСтрока = ДеревоТара.Строки.Добавить();
				НоваяСтрока.НоменклатураМногооборотнаяТара = ТекСтрока.Номенклатура;
				НоваяСтрока.ХарактеристикаМногооборотнаяТара = ТекСтрока.Характеристика;
				НоваяСтрока.КоличествоТарыВДокументе = ТекСтрока.КоличествоТары;
				НоваяСтрока.Склад = ТекСтрока.Склад;
				НоваяСтрока.Дата = ТекСтрока.Дата;
				НоваяСтрока.Выбрана = Истина;
				ВсяТараПодобрана = Ложь;
				
			ИначеЕсли ТекСтрока.КоличествоТары > 0 И ТекСтрока.СтрокаДерева <> Неопределено Тогда
				
				ТекСтрока.СтрокаДерева.КоличествоТарыВДокументе = ТекСтрока.СтрокаДерева.КоличествоТарыВДокументе + ТекСтрока.КоличествоТары;
				
				Если ТекСтрока.СтрокаДерева.КоличествоТарыВДокументе <> ТекСтрока.СтрокаДерева.ПодобранноеКоличествоТары Тогда
					ТекСтрока.СтрокаДерева.Выбрана = Истина;
					ВсяТараПодобрана = Ложь;
				КонецЕсли;
				
			КонецЕсли;
			
		КонецЦикла;
		
	КонецЕсли;
	
	ЗначениеВРеквизитФормы(ДеревоТара, "Тара");
	
	Если РезультатЗапроса[2].Пустой() Тогда
		ИнформационнаяНадпись = НСтр("ru='В документе отсутствуют товары. Многооборотная тара не требуется.'");
	ИначеЕсли Тара.ПолучитьЭлементы().Количество() = 0 Тогда
		ИнформационнаяНадпись = НСтр("ru='Для указанных в документе товаров многооборотная тара не требуется.'");
	Иначе
		
		Если ВсяТараПодобрана Тогда
			ИнформационнаяНадпись = НСтр("ru='Вся необходимая многооборотная тара уже подобрана в документ.'");
		Иначе
			ИнформационнаяНадпись = НСтр("ru='Нажмите ""Завершить"" для переноса подобранной многооборотной тары в документ.'");
			Модифицированность = Истина;
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ВывестиПодчиненныеУпаковки(УпаковкиСтроки, УпаковкаУзел, ТаблицаУпаковок, ТараДокумента, ВсяТараПодобрана)
	
	ПодчиненныеУпаковки = ТаблицаУпаковок.НайтиСтроки(Новый Структура("Родитель", УпаковкаУзел));
	КоличествоНоменклатуры = УпаковкиСтроки.Родитель.КоличествоНоменклатуры;
	КоличествоНоменклатурыКРаспределению = КоличествоНоменклатуры;
	
	Для Каждого ТекСтрока Из ПодчиненныеУпаковки Цикл
		
		НоваяСтрокаУпаковка = УпаковкиСтроки.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрокаУпаковка, ТекСтрока);
		
		ОстатокУпаковок = Цел(КоличествоНоменклатуры % ТекСтрока.КоличествоУпаковок);
		НоваяСтрокаУпаковка.КоличествоНоменклатуры = НоваяСтрокаУпаковка.КоличествоНоменклатуры +
			?(ОстатокУпаковок > 0 И ОстатокУпаковок >= ТекСтрока.МинимальноеКоличествоУпаковокМногооборотнойТары, 1, 0);
			
		КоличествоТары = Цел(КоличествоНоменклатурыКРаспределению / ТекСтрока.КоличествоУпаковок);
		ОстатокТары = Цел(КоличествоНоменклатуры % ТекСтрока.КоличествоУпаковок);
		
		Если КоличествоТары > 0 Тогда
			НоваяСтрокаУпаковка.РекомендуемоеКоличествоТары = КоличествоТары;
			НоваяСтрокаУпаковка.ПодобранноеКоличествоТары = НоваяСтрокаУпаковка.РекомендуемоеКоличествоТары;
			КоличествоНоменклатурыКРаспределению = ОстатокТары;
		КонецЕсли;
			
		Если ТекСтрока = ПодчиненныеУпаковки[ПодчиненныеУпаковки.Количество()-1] И КоличествоНоменклатурыКРаспределению > 0 Тогда
			
			НоваяСтрокаУпаковка.РекомендуемоеКоличествоТары = НоваяСтрокаУпаковка.РекомендуемоеКоличествоТары +
				?(КоличествоНоменклатурыКРаспределению >= ТекСтрока.МинимальноеКоличествоУпаковокМногооборотнойТары, 1, 0);
			НоваяСтрокаУпаковка.ПодобранноеКоличествоТары = НоваяСтрокаУпаковка.РекомендуемоеКоличествоТары;
			
		КонецЕсли;
			
		ЗаполнитьКоличествоТарыИзДокумента(ТараДокумента, НоваяСтрокаУпаковка, ВсяТараПодобрана);
		ВывестиПодчиненныеУпаковки(
			НоваяСтрокаУпаковка.Строки,
			ТекСтрока.Упаковка,
			ТаблицаУпаковок,
			ТараДокумента,
			ВсяТараПодобрана
		);
		
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьКоличествоТарыИзДокумента(ТараДокумента, СтрокаДерева, ВсяТараПодобрана)
	
	ТараДокументаСтроки = ТараДокумента.НайтиСтроки(
		Новый Структура(
			"Номенклатура,Характеристика,Склад,Дата",
			СтрокаДерева.НоменклатураМногооборотнаяТара,
			СтрокаДерева.ХарактеристикаМногооборотнаяТара,
			СтрокаДерева.Склад,
			СтрокаДерева.Дата
		)
	);
	
	Если ТараДокументаСтроки.Количество() > 0 И ТараДокументаСтроки[0].КоличествоТары > 0  Тогда
		
		СтрокаДерева.КоличествоТарыВДокументе = Мин(СтрокаДерева.РекомендуемоеКоличествоТары, ТараДокументаСтроки[0].КоличествоТары);
		ТараДокументаСтроки[0].КоличествоТары = ТараДокументаСтроки[0].КоличествоТары - СтрокаДерева.КоличествоТарыВДокументе;
		ТараДокументаСтроки[0].СтрокаДерева = СтрокаДерева;
		
	КонецЕсли;
	
	Если СтрокаДерева.КоличествоТарыВДокументе <> СтрокаДерева.ПодобранноеКоличествоТары Тогда
		СтрокаДерева.Выбрана = Истина;
		ВсяТараПодобрана = Ложь;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Функция ПоместитьТаруВХранилище()
	
	ДеревоТара = РеквизитФормыВЗначение("Тара");
	
	ТаблицаТары = Новый ТаблицаЗначений();
	ТаблицаТары.Колонки.Добавить("Номенклатура");
	ТаблицаТары.Колонки.Добавить("Характеристика");
	ТаблицаТары.Колонки.Добавить("Количество");
	ТаблицаТары.Колонки.Добавить("Склад");
	ТаблицаТары.Колонки.Добавить("Дата");
	
	ДобавитьПодобраннуюТаруВТаблицу(ДеревоТара.Строки, ТаблицаТары);
	
	ТаблицаТары.Свернуть("Номенклатура,Характеристика,Склад,Дата", "Количество");
	
	АдресМногооборотнойТарыВХранилище = ПоместитьВоВременноеХранилище(ТаблицаТары, УникальныйИдентификатор);
	Возврат АдресМногооборотнойТарыВХранилище;
	
КонецФункции

&НаСервере
Процедура ДобавитьПодобраннуюТаруВТаблицу(СтрокиДерева, ТаблицаТары)
	
	Для Каждого ТекСтрока Из СтрокиДерева Цикл
		
		Если ТекСтрока.Выбрана Или (Не ТекСтрока.Выбрана И ТекСтрока.КоличествоТарыВДокументе > 0) Тогда
			
			НоваяСтрока = ТаблицаТары.Добавить();
			НоваяСтрока.Номенклатура = ТекСтрока.НоменклатураМногооборотнаяТара;
			НоваяСтрока.Характеристика = ТекСтрока.ХарактеристикаМногооборотнаяТара;
			НоваяСтрока.Количество = ТекСтрока.ПодобранноеКоличествоТары;
			НоваяСтрока.Склад = ТекСтрока.Склад;
			НоваяСтрока.Дата = ТекСтрока.Дата;
			
		КонецЕсли;
		
		ДобавитьПодобраннуюТаруВТаблицу(ТекСтрока.Строки, ТаблицаТары);
		
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура ТараВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	Если Поле = Элементы.ТараНоменклатура Тогда
		СтандартнаяОбработка = Ложь;
		Если ЗначениеЗаполнено(Элементы.Тара.ТекущиеДанные.Упаковка) Тогда
			ОткрытьЗначение(Элементы.Тара.ТекущиеДанные.Упаковка);
		Иначе
			ОткрытьЗначение(Элементы.Тара.ТекущиеДанные.Номенклатура);
		КонецЕсли;
	ИначеЕсли Поле = Элементы.ТараХарактеристика Тогда
		СтандартнаяОбработка = Ложь;
		ОткрытьЗначение(Элементы.Тара.ТекущиеДанные.Характеристика);
	ИначеЕсли Поле = Элементы.ТараНоменклатураМногооборотнаяТара Тогда
		СтандартнаяОбработка = Ложь;
		ОткрытьЗначение(Элементы.Тара.ТекущиеДанные.НоменклатураМногооборотнаяТара);
	ИначеЕсли Поле = Элементы.ТараХарактеристикаМногооборотнаяТара Тогда
		СтандартнаяОбработка = Ложь;
		ОткрытьЗначение(Элементы.Тара.ТекущиеДанные.ХарактеристикаМногооборотнаяТара);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ТараПриАктивизацииСтроки(Элемент)
	
	ОбновитьПредупреждающуюНадпись(Элементы, Элементы.Тара.ТекущиеДанные);
	
КонецПроцедуры

&НаКлиенте
Процедура ТараПодобранноеКоличествоТарыПриИзменении(Элемент)
	
	ОбновитьПредупреждающуюНадпись(Элементы, Элементы.Тара.ТекущиеДанные);
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура ОбновитьПредупреждающуюНадпись(Элементы, ТекущиеДанные = Неопределено)
	
	Если ТекущиеДанные <> Неопределено И
		((ТекущиеДанные.Выбрана И ТекущиеДанные.ПодобранноеКоличествоТары <> ТекущиеДанные.РекомендуемоеКоличествоТары)
		Или (Не ТекущиеДанные.Выбрана И ТекущиеДанные.КоличествоТарыВДокументе > 0 И
			ТекущиеДанные.КоличествоТарыВДокументе <> ТекущиеДанные.РекомендуемоеКоличествоТары)) Тогда
			
		Элементы.Страницы.ТекущаяСтраница = Элементы.СтраницаСПредупреждением;
		
	Иначе
		
		Элементы.Страницы.ТекущаяСтраница = Элементы.СтраницаБезПредупреждения;
		
	КонецЕсли;
	
КонецПроцедуры

