&НаКлиенте
Перем КэшированныеЗначения;  //используется механизмом обработки изменения реквизитов ТЧ

&НаКлиенте
Перем ТекущееКоличество; //кеш количества в текущей строке для расчета количества серий

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ
              
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)

	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;
	КонецЕсли;
	
	ТолькоПросмотр = Параметры.ТолькоПросмотр;
	
	Склад       = Параметры.Склад;
	Помещение   = Параметры.Помещение;
	Регистратор = Параметры.Регистратор;
	АдресВоВременномХранилище = Параметры.АдресВоВременномХранилище;
	ПараметрыУказанияСерий = Параметры.ПараметрыУказанияСерий;
	
	СтруктураИзХранилища = ПолучитьИзВременногоХранилища(Параметры.АдресВоВременномХранилище);
	
	Объект.ТоварыКешДокумента.Загрузить(СтруктураИзХранилища.ТаблицаТоваров);
	Объект.СерииКешДокумента.Загрузить(СтруктураИзХранилища.ТаблицаСерий);
	
	ПоляПоиска = "Номенклатура,Характеристика";
	
	Если ПараметрыУказанияСерий.ПоляСвязи.Найти("Склад") <> Неопределено Тогда
		ПоляПоиска = ПоляПоиска + ",Склад";
	КонецЕсли;
	
	Если ПараметрыУказанияСерий.ПоляСвязи.Найти("ДокументРезерваСерий") <> Неопределено Тогда
		ПоляПоиска = ПоляПоиска + ",ДокументРезерваСерий";
	КонецЕсли;
	
	Если ПараметрыУказанияСерий.ЭтоЗаказ Тогда
		ПоляПоиска = ПоляПоиска + ",КлючУникальности";
	КонецЕсли;
	
	Если ПараметрыУказанияСерий.ПоляСвязи.Найти("ВариантОформления") <> Неопределено Тогда
		ПоляПоиска = ПоляПоиска + ",ВариантОформления";
	КонецЕсли;
	
	СтруктураПоиска = Новый Структура(ПоляПоиска);

	ЗаполнитьЗначенияСвойств(СтруктураПоиска,Параметры);
	
	НомерТекущейСтрокиТоваров = Объект.ТоварыКешДокумента.НайтиСтроки(СтруктураПоиска)[0].НомерСтроки;
	
	Инициализировать();
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	УстановитьДоступностьКнопокВпередНазад();
КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытием(Отказ, СтандартнаяОбработка)

	Если Модифицированность Тогда

		Ответ = Вопрос(НСтр("ru = 'Список серий был изменен.
				|Сохранить изменения?'"), РежимДиалогаВопрос.ДаНетОтмена);

		Если Ответ = КодВозвратаДиалога.Да Тогда

			Отказ = Истина;
			СтандартнаяОбработка = Ложь;
			ЗавершитьВводСерий(Неопределено);// Сохранение результатов модификации.
			
		ИначеЕсли Ответ = КодВозвратаДиалога.Отмена Тогда

			Отказ = Истина;
			СтандартнаяОбработка = Ложь;

		КонецЕсли;
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	Если ИмяСобытия = "Запись_СерииНоменклатуры" Тогда
		ТекущиеДанные = Элементы.Серии.ТекущиеДанные;
		
		Если ТекущиеДанные = Неопределено Тогда
			Возврат;
		КонецЕсли;
		
		ТекущиеДанные.Серия = Источник;
		ЗаполнитьЗначенияСвойств(ТекущиеДанные,Параметр);
	КонецЕсли;
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ ТАБЛИЦЫ ФОРМЫ СЕРИИ

&НаКлиенте
Процедура СерииВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	Если Поле = Элементы.СерииСерия Тогда
		ИзменитьСериюКлиент();
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура СерииКоличествоУпаковокПриИзменении(Элемент)

	ТекущиеДанные = Элементы.Серии.ТекущиеДанные;
	ТекущиеДанные.Количество = ТекущиеДанные.КоличествоУпаковок;
	
КонецПроцедуры

&НаКлиенте
Процедура СерииПриНачалеРедактирования(Элемент, НоваяСтрока, Копирование)
	ТекущиеДанные = Элемент.ТекущиеДанные;
	
	Если Копирование Тогда
		ТекущееКоличество = 0;
	Иначе
		ТекущееКоличество =  ТекущиеДанные.КоличествоУпаковок;
	КонецЕсли;
	
	Если НоваяСтрока
		И Не ПараметрыУчетнойПолитикиСерий.ИспользоватьКоличествоСерии Тогда
		
		
		ТекущиеДанные.КоличествоУпаковок = 1;
		ТекущиеДанные.Количество         = 1;
		
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура СерииПередОкончаниемРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования, Отказ)
	Если Не ОтменаРедактирования Тогда
		Дельта = ТекущееКоличество - Элементы.Серии.ТекущиеДанные.КоличествоУпаковок;
		КоличествоСерий = КоличествоСерий - Дельта;
		Элементы.Серии.ТекущиеДанные.СвободныйОстаток = Элементы.Серии.ТекущиеДанные.СвободныйОстаток + Дельта;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура СерииПередУдалением(Элемент, Отказ)
	ТекущиеДанные = Элемент.ТекущиеДанные;
	ТекущееКоличество =  ТекущиеДанные.Количество;
КонецПроцедуры

&НаКлиенте
Процедура СерииПослеУдаления(Элемент)
	КоличествоСерий = КоличествоСерий - ТекущееКоличество;
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ КОМАНД ФОРМЫ

&НаКлиенте
Процедура Отмена(Команда)
	Модифицированность = Ложь;
	Закрыть();
КонецПроцедуры

&НаКлиенте
Процедура ЗавершитьВводСерий(Команда)
	ОчиститьСообщения();
    СохранитьВводСерийСервер();
	Если Не Модифицированность Тогда
		Закрыть(АдресВоВременномХранилище);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура СледующаяСтрока(Команда)
	ИзменитьТекущуюСтроку(1);
	УстановитьДоступностьКнопокВпередНазад();
КонецПроцедуры

&НаКлиенте
Процедура ПредыдущаяСтрока(Команда)
	ИзменитьТекущуюСтроку(-1);
	УстановитьДоступностьКнопокВпередНазад();
КонецПроцедуры

&НаКлиенте
Процедура РедактироватьДополнительныеРеквизиты(Команда)
	ТекущиеДанные = Элементы.Серии.ТекущиеДанные;
	
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ЗначенияЗаполненияСерии = Новый Структура;
	ЗначенияЗаполненияСерии.Вставить("ВидНоменклатуры", ПараметрыУчетнойПолитикиСерий.ВидНоменклатуры);
	ЗначенияЗаполненияСерии.Вставить("Номер", ТекущиеДанные.Номер);
	ЗначенияЗаполненияСерии.Вставить("ГоденДо", ТекущиеДанные.ГоденДо);
	
	ПараметрыФормыСерии = Новый Структура;
	ПараметрыФормыСерии.Вставить("ЗначенияЗаполнения",ЗначенияЗаполненияСерии);
	ПараметрыФормыСерии.Вставить("Ключ",ТекущиеДанные.Серия);
	
	ОткрытьФормуМодально("Справочник.СерииНоменклатуры.Форма.ФормаЭлемента",ПараметрыФормыСерии, ЭтаФорма);
		
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьПоFEFO(Команда)
	ЗаполнитьПоFEFOСервер();
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

////////////////////////////////////////////////////////////////////////////////
// Прочее

&НаСервере
Процедура ЗаполнитьПоFEFOСервер()
	КоличествоКРаспределению = Количество;
	Для Каждого СтрТабл из Объект.Серии Цикл
		Если КоличествоКРаспределению <= 0 Тогда
			Прервать;
		КонецЕсли;
		
		КоличествоПоСтроке =  Мин(СтрТабл.СвободныйОстаток + СтрТабл.КоличествоУпаковок, КоличествоКРаспределению);
		Если КоличествоПоСтроке < 0 Тогда
			СтрТабл.СвободныйОстаток   = СтрТабл.СвободныйОстаток + СтрТабл.КоличествоУпаковок;
			СтрТабл.КоличествоУпаковок = 0;
		Иначе
			СтрТабл.СвободныйОстаток   = СтрТабл.СвободныйОстаток + СтрТабл.КоличествоУпаковок - КоличествоПоСтроке;
			СтрТабл.КоличествоУпаковок = КоличествоПоСтроке;
			КоличествоКРаспределению = КоличествоКРаспределению - КоличествоПоСтроке; 
		КонецЕсли;
		
		СтрТабл.Количество = СтрТабл.КоличествоУпаковок;

	КонецЦикла;
	
	КоличествоСерий = Объект.Серии.Итог("КоличествоУпаковок");
	
КонецПроцедуры

&НаСервере
Процедура СохранитьВводСерийВКеше()
	
	ТаблицаСерий = Объект.Серии.Выгрузить();
	
	ТаблицаСерий.Свернуть("Серия,Номер,ГоденДо", "Количество,КоличествоУпаковок");
	
	Индекс = ТаблицаСерий.Количество();
	
	Пока Индекс > 0 Цикл
		Индекс = Индекс - 1;
		СтрТабл = ТаблицаСерий[Индекс];
		Если СтрТабл.КоличествоУпаковок = 0 Тогда
			ТаблицаСерий.Удалить(СтрТабл);
		КонецЕсли;
	КонецЦикла;
	
	СтрокаТоваров = Объект.ТоварыКешДокумента[НомерТекущейСтрокиТоваров-1];
	
	ТекстПоляПоиска = "";
	
	Для Каждого СтрМас из ПараметрыУказанияСерий.ПоляСвязи Цикл
		ТекстПоляПоиска = ТекстПоляПоиска + ", " + СтрМас;
	КонецЦикла;
	
	СтруктураПоиска = Новый Структура("Номенклатура,Характеристика" + ТекстПоляПоиска);
	
	ЗаполнитьЗначенияСвойств(СтруктураПоиска,СтрокаТоваров);
	
	НайденныеСтрокиСерий = Объект.СерииКешДокумента.НайтиСтроки(СтруктураПоиска);
	
	Для Каждого СтрТабл из НайденныеСтрокиСерий Цикл
		Объект.СерииКешДокумента.Удалить(СтрТабл);
	КонецЦикла;
	
	Для Каждого СтрТабл Из ТаблицаСерий Цикл
		НоваяСтрока = Объект.СерииКешДокумента.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока,СтрокаТоваров);
		ЗаполнитьЗначенияСвойств(НоваяСтрока,СтрТабл);
		Если ПараметрыУказанияСерий.ЭтоЗаказ Тогда
			НоваяСтрока.УказыватьСерии = Истина;
		КонецЕсли;
	КонецЦикла;
	
	Если ПараметрыУказанияСерий.ЭтоЗаказ Тогда
		Если ТаблицаСерий.Количество() > 0 Тогда
			СтрокаТоваров.УказыватьСерии = Истина;
		Иначе
			СтрокаТоваров.УказыватьСерии = Ложь;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура СохранитьВводСерийСервер()
	
 	СохранитьВводСерийВКеше();
	
	СтруктураВозврата = Новый Структура;
	ТаблицаСерий = Объект.СерииКешДокумента.Выгрузить();
	ТаблицаСерий.Свернуть("Номенклатура,Характеристика,НоменклатураОприходование,ХарактеристикаОприходование,Упаковка,Склад,ДокументРезерваСерий,ВариантОформления,УказыватьСерии,Серия", "Количество,КоличествоУпаковок");
	СтруктураВозврата.Вставить("ТаблицаСерий", ТаблицаСерий);
	
	Если ПараметрыУказанияСерий.ЭтоЗаказ Тогда
		СтруктураВозврата.Вставить("ТаблицаТоваров", Объект.ТоварыКешДокумента.Выгрузить());
	КонецЕсли;
	
	ПоместитьВоВременноеХранилище(СтруктураВозврата,АдресВоВременномХранилище);
	Модифицированность = Ложь;
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьДоступностьКнопокВпередНазад()
	Если  НомерТекущейСтрокиТоваров > 1 Тогда
		Элементы.ГруппаКнопкаНазад.ТекущаяСтраница = Элементы.СтраницаКнопкаНазад;
	Иначе
		Элементы.ГруппаКнопкаНазад.ТекущаяСтраница = Элементы.СтраницаКнопкаНазадПустая;
	КонецЕсли;
	
	Если НомерТекущейСтрокиТоваров < Объект.ТоварыКешДокумента.Количество() Тогда
		Элементы.ГруппаКнопкаВперед.ТекущаяСтраница = Элементы.СтраницаКнопкаВперед;
	Иначе
		Элементы.ГруппаКнопкаВперед.ТекущаяСтраница = Элементы.СтраницаКнопкаВпередПустая;
	КонецЕсли;	
КонецПроцедуры

&НаСервере
Процедура Инициализировать()
	Если НомерТекущейСтрокиТоваров < 1 
		Или НомерТекущейСтрокиТоваров > Объект.ТоварыКешДокумента.Количество() Тогда
		Возврат;
	КонецЕсли;
	
	СкладыВТЧ = ПараметрыУказанияСерий.ПоляСвязи.Найти("Склад") <> Неопределено;
	ЕстьУпаковки = ПараметрыУказанияСерий.ПоляСвязи.Найти("Упаковка") <> Неопределено;
	ЕстьПризнакУказанияСерий = ПараметрыУказанияСерий.ПоляСвязи.Найти("УказыватьСерии") <> Неопределено;
	ЕстьДокументРезерваСерий = ПараметрыУказанияСерий.ПоляСвязи.Найти("ДокументРезерваСерий") <> Неопределено;
	ЕстьВариантОформления = ПараметрыУказанияСерий.ПоляСвязи.Найти("ВариантОформления") <> Неопределено;
	
	СтрокаТоваров = Объект.ТоварыКешДокумента[НомерТекущейСтрокиТоваров-1];
	
	Количество = СтрокаТоваров.Количество;
	НомераСтрокПредставление = СтрокаТоваров.НомераСтрокДокумента;
	
	РеквизитыНоменклатуры = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(СтрокаТоваров.Номенклатура, 
	                        Новый Структура("ВидНоменклатуры, ЕдиницаИзмеренияПредставление","ВидНоменклатуры","ЕдиницаИзмерения.Наименование"));
							
	Если Не СкладыВТЧ Тогда
		ТекущийСклад = Склад;
	Иначе
		ТекущийСклад = СтрокаТоваров.Склад;
	КонецЕсли;
								
	ПараметрыУчетнойПолитикиСерий = Новый ФиксированнаяСтруктура(
		ЗначениеНастроекПовтИсп.ПараметрыПолитикиУчетаСерийПоВидуНоменклатуры(РеквизитыНоменклатуры.ВидНоменклатуры,ТекущийСклад));
	
	Если Не ПараметрыУчетнойПолитикиСерий.ИспользоватьСерии Тогда
		ТекстИсключения = НСтр("ru = 'Для вида номенклатуры ""%ВидНоменклатуры%"" серии не используются'");
		
		ТекстИсключения = СтрЗаменить(ТекстИсключения, "%ВидНоменклатуры%",РеквизитыНоменклатуры.ВидНоменклатуры);
		
		ВызватьИсключение ТекстИсключения;
	КонецЕсли;
	
	ЗаголовокКоличествоВДокументе = НСтр("ru = 'Необходимо для отгрузки, %ЕдиницаИзмерения%'");
	ЗаголовокКоличествоСерий      = НСтр("ru = 'Подобрано из серий, %ЕдиницаИзмерения% '");
	ЗаголовокКолонкиКоличество    = НСтр("ru = 'К отгрузке, %ЕдиницаИзмерения%'"); 
	
	ТоварПредставление = НСтр("ru = '%ПредставлениеТовара%'");
	
	ЗаголовокКолонкиКоличество    = СтрЗаменить(ЗаголовокКолонкиКоличество,"%ЕдиницаИзмерения%",РеквизитыНоменклатуры.ЕдиницаИзмеренияПредставление);
	ЗаголовокКоличествоВДокументе = СтрЗаменить(ЗаголовокКоличествоВДокументе,"%ЕдиницаИзмерения%",РеквизитыНоменклатуры.ЕдиницаИзмеренияПредставление);
	ЗаголовокКоличествоСерий      = СтрЗаменить(ЗаголовокКоличествоСерий,"%ЕдиницаИзмерения%",РеквизитыНоменклатуры.ЕдиницаИзмеренияПредставление);
	ЗаголовокКолонкиКоличество    = СтрЗаменить(ЗаголовокКолонкиКоличество,"%ЕдиницаИзмерения%",РеквизитыНоменклатуры.ЕдиницаИзмеренияПредставление);
	
	Если ПараметрыУказанияСерий.ЭтоОрдер Тогда
		Если ПараметрыУказанияСерий.СкладскиеОперации.Найти(Перечисления.СкладскиеОперации.ПеремещениеМеждуПомещениями) <> Неопределено
			Или Не ПараметрыУчетнойПолитикиСерий.УказыватьПриПланированииОтгрузки Тогда
			ВариантПолучениеДанныхИзРегистров = "ОрдерСерииИзОстатка";
		Иначе
			ВариантПолучениеДанныхИзРегистров = "ОрдерСерииИзНакладной";
		КонецЕсли;
	Иначе
		Если ЗначениеЗаполнено(СтрокаТоваров.ДокументРезерваСерий) Тогда
			ВариантПолучениеДанныхИзРегистров = "НакладнаяСерииИзЗаказа";
		Иначе
			ВариантПолучениеДанныхИзРегистров = "ЗаказНакладнаяСерииИзОстатка";
		КонецЕсли;
	КонецЕсли;
	
	Если ВариантПолучениеДанныхИзРегистров = "ОрдерСерииИзОстатка"
		Или ВариантПолучениеДанныхИзРегистров = "ЗаказНакладнаяСерииИзОстатка" Тогда
		
		ЗаголовокСвободногоОстатка = НСтр("ru = 'Свободный остаток, %ЕдиницаИзмерения%'");
		Заголовок                  = НСтр("ru = 'Подбор серий по остаткам на складе'");
		
	ИначеЕсли ВариантПолучениеДанныхИзРегистров = "НакладнаяСерииИзЗаказа" 	Тогда
		
		ЗаголовокСвободногоОстатка = НСтр("ru = 'Остаток по заказу, %ЕдиницаИзмерения%'");
		Заголовок                  = НСтр("ru = 'Подбор серий по заказу'");

	ИначеЕсли ВариантПолучениеДанныхИзРегистров = "ОрдерСерииИзНакладной" Тогда
		
		ЗаголовокСвободногоОстатка = НСтр("ru = 'Остаток по распоряжению, %ЕдиницаИзмерения%'");
		Заголовок                  = НСтр("ru = 'Подбор серий по распоряжению на отгрузку'");
		
	КонецЕсли;
		
		
	Если ПараметрыУчетнойПолитикиСерий.УчетСерийПоFEFO Тогда
		Элементы.СтраницыПоFEFO.ТекущаяСтраница = Элементы.СтраницаПоFEFO;
	Иначе
		Элементы.СтраницыПоFEFO.ТекущаяСтраница = Элементы.СтраницаПоFEFOПустая;
	КонецЕсли;
	
	ЗаголовокСвободногоОстатка = СтрЗаменить(ЗаголовокСвободногоОстатка,"%ЕдиницаИзмерения%",РеквизитыНоменклатуры.ЕдиницаИзмеренияПредставление);
	
	ТоварПредставление = СтрЗаменить(ТоварПредставление,"%ПредставлениеТовара%",НоменклатураКлиентСервер.ПредставлениеНоменклатуры(СтрокаТоваров.Номенклатура, СтрокаТоваров.Характеристика));
	
	Элементы.СерииКоличествоУпаковок.Заголовок = ЗаголовокКолонкиКоличество;
	Элементы.СерииСвободныйОстаток.Заголовок   = ЗаголовокСвободногоОстатка;
	Элементы.Количество.Заголовок              = ЗаголовокКоличествоВДокументе;
	Элементы.КоличествоСерий.Заголовок         = ЗаголовокКоличествоСерий;
	
	Элементы.СерииНомер.Видимость              = ПараметрыУчетнойПолитикиСерий.ИспользоватьНомерСерии;
	Элементы.СерииГоденДо.Видимость            = ПараметрыУчетнойПолитикиСерий.ИспользоватьСрокГодностиСерии;
	Элементы.СерииКоличествоУпаковок.Видимость = ПараметрыУчетнойПолитикиСерий.ИспользоватьКоличествоСерии;
	
	Если ПараметрыУчетнойПолитикиСерий.ИспользоватьСрокГодностиСерии Тогда
		Элементы.СерииГоденДо.Формат = ПараметрыУчетнойПолитикиСерий.ФорматнаяСтрокаСрокаГодности;
		Если ПараметрыУчетнойПолитикиСерий.ТочностьУказанияСрокаГодностиСерии = Перечисления.ТочностиУказанияСрокаГодности.СТочностьюДоДней Тогда
			Элементы.СерииГоденДо.Заголовок = НСтр("ru = 'Годен до (дата)'");
		Иначе
			Элементы.СерииГоденДо.Заголовок = НСтр("ru = 'Годен до (дата, час)'");
		КонецЕсли;
	КонецЕсли;
	
	Если ПараметрыУказанияСерий.ЭтоОрдер Тогда
		Если ПараметрыУказанияСерий.СкладскиеОперации.Найти(Перечисления.СкладскиеОперации.ПеремещениеМеждуПомещениями) <> Неопределено
			Или Не ПараметрыУчетнойПолитикиСерий.УказыватьПриПланированииОтгрузки Тогда
			ВариантПолучениеДанныхИзРегистров = "ОрдерСерииИзОстатка";
		Иначе
			ВариантПолучениеДанныхИзРегистров = "ОрдерСерииИзНакладной";
		КонецЕсли;
	Иначе
		Если ЗначениеЗаполнено(СтрокаТоваров.ДокументРезерваСерий) Тогда
			ВариантПолучениеДанныхИзРегистров = "НакладнаяСерииИзЗаказа";
		Иначе
			ВариантПолучениеДанныхИзРегистров = "ЗаказНакладнаяСерииИзОстатка";
		КонецЕсли;
	КонецЕсли;
	
	//Формирование таблицы ТаблицаСерий	

	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ТаблицаСерий.Серия,";
	Если ЕстьПризнакУказанияСерий Тогда
		ТекстЗапроса = ТекстЗапроса + "
		|  	ТаблицаСерий.УказыватьСерии, 
		|	ВЫБОР КОГДА ТаблицаСерий.УказыватьСерии = &УказыватьСерии
		|			ТОГДА ТаблицаСерий.Количество
		|			ИНАЧЕ 0
		|	КОНЕЦ КАК Количество,
		|	ВЫБОР КОГДА ТаблицаСерий.УказыватьСерии = &УказыватьСерии
		|			ТОГДА ТаблицаСерий.КоличествоУпаковок
		|			ИНАЧЕ 0
		|	КОНЕЦ КАК КоличествоУпаковок";
	ИначеЕсли ЕстьУпаковки Тогда
		ТекстЗапроса = ТекстЗапроса + "
		|	ТаблицаСерий.Количество,
		|	ТаблицаСерий.КоличествоУпаковок ";
	Иначе
		ТекстЗапроса = ТекстЗапроса + "
		|	ТаблицаСерий.Количество,
		|	ТаблицаСерий.Количество КАК КоличествоУпаковок ";
	КонецЕсли;
	ТекстЗапроса = ТекстЗапроса + "
	|ПОМЕСТИТЬ ТаблицаСерий
	|ИЗ
	|	&ТаблицаСерий КАК ТаблицаСерий
	|ГДЕ
	|  	ТаблицаСерий.Номенклатура = &Номенклатура
	|  	И ТаблицаСерий.Характеристика = &Характеристика";
	Если СкладыВТЧ Тогда
		ТекстЗапроса = ТекстЗапроса + "
		|  	И ТаблицаСерий.Склад = &Склад";
	КонецЕсли;
	Если ЕстьДокументРезерваСерий Тогда
		ТекстЗапроса = ТекстЗапроса + "
		|  	И ТаблицаСерий.ДокументРезерваСерий = &ДокументРезерваСерий";
	КонецЕсли;
	Если ЕстьВариантОформления Тогда
		ТекстЗапроса = ТекстЗапроса + "
		|  	И ТаблицаСерий.ВариантОформления = &ВариантОформления";
	КонецЕсли;
	
	ТекстЗапроса = ТекстЗапроса + "
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////";

	//Формирование таблицы ДанныеРегистров	
	
	Если ВариантПолучениеДанныхИзРегистров = "ЗаказНакладнаяСерииИзОстатка" Тогда
		
		//В накладной (или заказе) могут быть указаны любые незарезервированные серии
		//Из остатков серий нужно вычесть резервы серий
		
		ТекстЗапроса = ТекстЗапроса + "
		|ВЫБРАТЬ
		|	ДанныеРегистров.Серия КАК Серия,
		|	СУММА(ДанныеРегистров.СвободныйОстаток) КАК СвободныйОстаток
		|ПОМЕСТИТЬ ДанныеРегистров
		|ИЗ
		|	(ВЫБРАТЬ
		|		ТоварыНаСкладахОстатки.Серия КАК Серия,
		|		ТоварыНаСкладахОстатки.ВНаличииОстаток - ТоварыНаСкладахОстатки.КОтгрузкеОстаток КАК СвободныйОстаток
		|	ИЗ
		|		РегистрНакопления.ТоварыНаСкладах.Остатки(
		|				,
		|				Номенклатура = &Номенклатура
		|					И Характеристика = &Характеристика
		|					И Склад = &Склад) КАК ТоварыНаСкладахОстатки
		|	
		|	ОБЪЕДИНИТЬ ВСЕ
		|	
		|	ВЫБРАТЬ
		|		РезервыСерийТоваровОстатки.Серия,
		|		-РезервыСерийТоваровОстатки.КоличествоОстаток
		|	ИЗ
		|		РегистрНакопления.РезервыСерийТоваров.Остатки(
		|				,
		|				Номенклатура = &Номенклатура
		|					И Склад = &Склад
		|					И Характеристика = &Характеристика
		|					И Серия <> ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)) КАК РезервыСерийТоваровОстатки
		|	
		|	ОБЪЕДИНИТЬ ВСЕ
		|	
		|	ВЫБРАТЬ
		|		ТоварыНаСкладах.Серия,
		|		ВЫБОР
		|			КОГДА ТоварыНаСкладах.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
		|				ТОГДА -ТоварыНаСкладах.ВНаличии + ТоварыНаСкладах.КОтгрузке
		|			ИНАЧЕ ТоварыНаСкладах.ВНаличии - ТоварыНаСкладах.КОтгрузке
		|		КОНЕЦ
		|	ИЗ
		|		РегистрНакопления.ТоварыНаСкладах КАК ТоварыНаСкладах
		|	ГДЕ
		|		ТоварыНаСкладах.Номенклатура = &Номенклатура
		|		И ТоварыНаСкладах.Характеристика = &Характеристика
		|		И ТоварыНаСкладах.Склад = &Склад
		|		И ТоварыНаСкладах.Регистратор = &Регистратор
		|	
		|	ОБЪЕДИНИТЬ ВСЕ
		|	
		|	ВЫБРАТЬ
		|		РезервыСерий.Серия,
		|		ВЫБОР
		|			КОГДА РезервыСерий.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
		|				ТОГДА РезервыСерий.Количество
		|			ИНАЧЕ -РезервыСерий.Количество
		|		КОНЕЦ
		|	ИЗ
		|		РегистрНакопления.РезервыСерийТоваров КАК РезервыСерий
		|	ГДЕ
		|		РезервыСерий.Номенклатура = &Номенклатура
		|		И РезервыСерий.Характеристика = &Характеристика
		|		И РезервыСерий.Склад = &Склад
		|		И РезервыСерий.Регистратор = &Регистратор
		|		И РезервыСерий.Серия <> ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)) КАК ДанныеРегистров
		|
		|СГРУППИРОВАТЬ ПО
		|	ДанныеРегистров.Серия
		|
		|ИМЕЮЩИЕ
		|	СУММА(ДанныеРегистров.СвободныйОстаток) > 0";	
		
	ИначеЕсли ВариантПолучениеДанныхИзРегистров = "НакладнаяСерииИзЗаказа" Тогда
		
		//В накладной могут быть указаны только серии, указанные в заказе, по которым еще не выписаны накладные
		//Нужно взять остатки резервов серий по заказу
		
		ТекстЗапроса = ТекстЗапроса + "
		|ВЫБРАТЬ
		|	ДанныеРегистров.Серия КАК Серия,
		|	СУММА(ДанныеРегистров.СвободныйОстаток) КАК СвободныйОстаток
		|ПОМЕСТИТЬ ДанныеРегистров
		|ИЗ
		|	(ВЫБРАТЬ
		|		РезервыСерийТоваровОстатки.Серия КАК Серия,
		|		РезервыСерийТоваровОстатки.КоличествоОстаток КАК СвободныйОстаток
		|	ИЗ
		|		РегистрНакопления.РезервыСерийТоваров.Остатки(
		|				,
		|				Номенклатура = &Номенклатура
		|					И Склад = &Склад
		|					И Характеристика = &Характеристика
		|					И ДокументРезерва = &ДокументРезерваСерий
		|					И Серия <> ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)) КАК РезервыСерийТоваровОстатки
		|	
		|	ОБЪЕДИНИТЬ ВСЕ
		|	
		|	ВЫБРАТЬ
		|		РезервыСерий.Серия,
		|		ВЫБОР
		|			КОГДА РезервыСерий.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
		|				ТОГДА -РезервыСерий.Количество
		|			ИНАЧЕ РезервыСерий.Количество
		|		КОНЕЦ
		|	ИЗ
		|		РегистрНакопления.РезервыСерийТоваров КАК РезервыСерий
		|	ГДЕ
		|		РезервыСерий.Номенклатура = &Номенклатура
		|		И РезервыСерий.Характеристика = &Характеристика
		|		И РезервыСерий.Склад = &Склад
		|		И РезервыСерий.Регистратор = &Регистратор
		|		И РезервыСерий.ДокументРезерва = &ДокументРезерваСерий
		|		И РезервыСерий.Серия <> ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)) КАК ДанныеРегистров
		|
		|СГРУППИРОВАТЬ ПО
		|	ДанныеРегистров.Серия
		|
		|ИМЕЮЩИЕ
		|	СУММА(ДанныеРегистров.СвободныйОстаток) > 0";	
		
	ИначеЕсли ВариантПолучениеДанныхИзРегистров = "ОрдерСерииИзОстатка" Тогда
		
		//В ордере могут быть указаны любые серии, которые есть на остатке (еще не указаны в других ордерах)
		//Если серии указываются в ордере, а не в накладной, то регистр "РезервыСерий" не используется
		//и достаточно данных регистра "ТоварыНаСкладах"
		
		ТекстЗапроса = ТекстЗапроса + "
		|ВЫБРАТЬ
		|	ДанныеРегистров.Серия КАК Серия,
		|	СУММА(ДанныеРегистров.СвободныйОстаток) КАК СвободныйОстаток
		|ПОМЕСТИТЬ ДанныеРегистров
		|ИЗ
		|	(ВЫБРАТЬ
		|		ТоварыНаСкладахОстатки.Серия КАК Серия,
		|		ТоварыНаСкладахОстатки.ВНаличииОстаток - ТоварыНаСкладахОстатки.КОтгрузкеОстаток КАК СвободныйОстаток
		|	ИЗ
		|		РегистрНакопления.ТоварыНаСкладах.Остатки(
		|				,
		|				Номенклатура = &Номенклатура
		|					И Характеристика = &Характеристика
		|					И Склад = &Склад
		|					И Помещение = &Помещение) КАК ТоварыНаСкладахОстатки
		|	
		|	ОБЪЕДИНИТЬ ВСЕ
		|	
		|	ВЫБРАТЬ
		|		ТоварыНаСкладах.Серия,
		|		ВЫБОР
		|			КОГДА ТоварыНаСкладах.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
		|				ТОГДА -ТоварыНаСкладах.ВНаличии + ТоварыНаСкладах.КОтгрузке
		|			ИНАЧЕ ТоварыНаСкладах.ВНаличии - ТоварыНаСкладах.КОтгрузке
		|		КОНЕЦ
		|	ИЗ
		|		РегистрНакопления.ТоварыНаСкладах КАК ТоварыНаСкладах
		|	ГДЕ
		|		ТоварыНаСкладах.Номенклатура = &Номенклатура
		|		И ТоварыНаСкладах.Характеристика = &Характеристика
		|		И ТоварыНаСкладах.Склад = &Склад
		|		И ТоварыНаСкладах.Помещение = &Помещение
		|		И ТоварыНаСкладах.Регистратор = &Регистратор) КАК ДанныеРегистров
		|
		|СГРУППИРОВАТЬ ПО
		|	ДанныеРегистров.Серия
		|
		|ИМЕЮЩИЕ
		|	СУММА(ДанныеРегистров.СвободныйОстаток) > 0";	
		
	ИначеЕсли ВариантПолучениеДанныхИзРегистров = "ОрдерСерииИзНакладной" Тогда
		
		//Если серии указываются в накладной, то в ордере можно указывать только те серии, которые есть в накладной
		//Информация из накладной в ордер о том, какие серии отгружать передается через регистр "ТоварыКОтгрузке",
		//в нем же фиксируется, что серия уже указана в ордере, поэтому для получения информации, какие серии в накладной
		//нужно использовать регистр "ТоварыКОтгрузке"
		//Накладная резервирует серии в целом по складу без учета помещений, но в ордере нельзя указать больше,
		//чем есть в помещении - поэтому нужно дополнительно анализировать регистр "ТоварыНаСкладах"
		
		ТекстЗапроса = ТекстЗапроса + "
		|ВЫБРАТЬ
		|	ДанныеРегистраТоварыКОтрузке.Серия КАК Серия,
		|	СУММА(ДанныеРегистраТоварыКОтрузке.СвободныйОстаток) КАК СвободныйОстаток
		|ПОМЕСТИТЬ ДанныеРегистраТоварыКОтрузке
		|ИЗ
		|	(ВЫБРАТЬ
		|		ТоварыКОтгрузкеОстатки.Серия КАК Серия,
		|		ТоварыКОтгрузкеОстатки.КОтгрузкеОстаток - ТоварыКОтгрузкеОстатки.СобираетсяОстаток - ТоварыКОтгрузкеОстатки.СобраноОстаток КАК СвободныйОстаток
		|	ИЗ
		|		РегистрНакопления.ТоварыКОтгрузке.Остатки(
		|				,
		|				ДокументОтгрузки = &ДокументОтгрузки
		|					И Характеристика = &Характеристика
		|					И Номенклатура = &Номенклатура
		|					И Склад = &Склад
		|					И Серия = ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)) КАК ТоварыКОтгрузкеОстатки
		|	
		|	ОБЪЕДИНИТЬ ВСЕ
		|	
		|	ВЫБРАТЬ
		|		ТоварыКОтгрузке.Серия,
		|		ВЫБОР
		|			КОГДА ТоварыКОтгрузке.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
		|				ТОГДА -ТоварыКОтгрузке.КОтгрузке + ТоварыКОтгрузке.Собирается + ТоварыКОтгрузке.Собрано
		|			ИНАЧЕ ТоварыКОтгрузке.КОтгрузке - ТоварыКОтгрузке.Собирается - ТоварыКОтгрузке.Собрано
		|		КОНЕЦ
		|	ИЗ
		|		РегистрНакопления.ТоварыКОтгрузке КАК ТоварыКОтгрузке
		|	ГДЕ
		|		ТоварыКОтгрузке.Номенклатура = &Номенклатура
		|		И ТоварыКОтгрузке.Характеристика = &Характеристика
		|		И ТоварыКОтгрузке.Склад = &Склад
		|		И ТоварыКОтгрузке.Серия <> ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)
		|		И ТоварыКОтгрузке.Регистратор = &Регистратор
		|		И ТоварыКОтгрузке.ДокументОтгрузки = &ДокументОтгрузки) КАК ДанныеРегистраТоварыКОтрузке
		|
		|СГРУППИРОВАТЬ ПО
		|	ДанныеРегистраТоварыКОтрузке.Серия
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ДанныеРегистраТоварыНаСкладах.Серия КАК Серия,
		|	СУММА(ДанныеРегистраТоварыНаСкладах.СвободныйОстаток) КАК СвободныйОстаток
		|ПОМЕСТИТЬ ДанныеРегистраТоварыНаСкладах
		|ИЗ
		|	(ВЫБРАТЬ
		|		ТоварыНаСкладахОстатки.Серия КАК Серия,
		|		ТоварыНаСкладахОстатки.ВНаличииОстаток - ТоварыНаСкладахОстатки.КОтгрузкеОстаток КАК СвободныйОстаток
		|	ИЗ
		|		РегистрНакопления.ТоварыНаСкладах.Остатки(
		|				,
		|				Номенклатура = &Номенклатура
		|					И Характеристика = &Характеристика
		|					И Склад = &Склад
		|					И Помещение = &Помещение) КАК ТоварыНаСкладахОстатки
		|	
		|	ОБЪЕДИНИТЬ ВСЕ
		|	
		|	ВЫБРАТЬ
		|		ТоварыНаСкладах.Серия,
		|		ВЫБОР
		|			КОГДА ТоварыНаСкладах.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
		|				ТОГДА -ТоварыНаСкладах.ВНаличии + ТоварыНаСкладах.КОтгрузке
		|			ИНАЧЕ ТоварыНаСкладах.ВНаличии - ТоварыНаСкладах.КОтгрузке
		|		КОНЕЦ
		|	ИЗ
		|		РегистрНакопления.ТоварыНаСкладах КАК ТоварыНаСкладах
		|	ГДЕ
		|		ТоварыНаСкладах.Номенклатура = &Номенклатура
		|		И ТоварыНаСкладах.Характеристика = &Характеристика
		|		И ТоварыНаСкладах.Склад = &Склад
		|		И ТоварыНаСкладах.Помещение = &Помещение
		|		И ТоварыНаСкладах.Регистратор = &Регистратор) КАК ДанныеРегистраТоварыНаСкладах
		|
		|СГРУППИРОВАТЬ ПО
		|	ДанныеРегистраТоварыНаСкладах.Серия
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ДанныеРегистраТоварыКОтрузке.Серия,
		|	ВЫБОР
		|		КОГДА ДанныеРегистраТоварыКОтрузке.СвободныйОстаток < ЕСТЬNULL(ДанныеРегистраТоварыНаСкладах.СвободныйОстаток, 0)
		|			ТОГДА ДанныеРегистраТоварыКОтрузке.СвободныйОстаток
		|		ИНАЧЕ ЕСТЬNULL(ДанныеРегистраТоварыНаСкладах.СвободныйОстаток, 0)
		|	КОНЕЦ КАК СвободныйОстаток
		|ПОМЕСТИТЬ ДанныеРегистров
		|ИЗ
		|	ДанныеРегистраТоварыКОтрузке КАК ДанныеРегистраТоварыКОтрузке
		|		ЛЕВОЕ СОЕДИНЕНИЕ ДанныеРегистраТоварыНаСкладах КАК ДанныеРегистраТоварыНаСкладах
		|		ПО ДанныеРегистраТоварыКОтрузке.Серия = ДанныеРегистраТоварыНаСкладах.Серия
		|ГДЕ
		|	ВЫБОР
		|			КОГДА ДанныеРегистраТоварыКОтрузке.СвободныйОстаток < ЕСТЬNULL(ДанныеРегистраТоварыНаСкладах.СвободныйОстаток, 0)
		|				ТОГДА ДанныеРегистраТоварыКОтрузке.СвободныйОстаток
		|			ИНАЧЕ ЕСТЬNULL(ДанныеРегистраТоварыНаСкладах.СвободныйОстаток, 0)
		|		КОНЕЦ > 0";	
		
	КонецЕсли;
	
	ТекстЗапроса = ТекстЗапроса + "
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////";
	
	//Объединение таблиц ТаблицаСерий и ДанныеРегистров	
	
	ТекстЗапроса = ТекстЗапроса + "
	|ВЫБРАТЬ
	|	ТаблицаСерийСОстатками.Серия КАК Серия,
	|	ВЫРАЗИТЬ(ТаблицаСерийСОстатками.Серия КАК Справочник.СерииНоменклатуры).Номер КАК Номер,
	|	ВЫРАЗИТЬ(ТаблицаСерийСОстатками.Серия КАК Справочник.СерииНоменклатуры).ГоденДо КАК ГоденДо,
	|	СУММА(ТаблицаСерийСОстатками.СвободныйОстаток) КАК СвободныйОстаток,
	|	СУММА(ТаблицаСерийСОстатками.Количество) КАК Количество,
	|	СУММА(ТаблицаСерийСОстатками.КоличествоУпаковок) КАК КоличествоУпаковок
	|ИЗ
	|	(ВЫБРАТЬ
	|		ДанныеРегистров.Серия КАК Серия,
	|		ДанныеРегистров.СвободныйОстаток КАК СвободныйОстаток,
	|		0 КАК Количество,
	|		0 КАК КоличествоУпаковок
	|	ИЗ
	|		ДанныеРегистров КАК ДанныеРегистров
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ТаблицаСерий.Серия,
	|		-ТаблицаСерий.Количество,
	|		ТаблицаСерий.Количество,
	|		ТаблицаСерий.КоличествоУпаковок
	|	ИЗ
	|		ТаблицаСерий КАК ТаблицаСерий) КАК ТаблицаСерийСОстатками
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаСерийСОстатками.Серия,
	|	ВЫРАЗИТЬ(ТаблицаСерийСОстатками.Серия КАК Справочник.СерииНоменклатуры).Номер,
	|	ВЫРАЗИТЬ(ТаблицаСерийСОстатками.Серия КАК Справочник.СерииНоменклатуры).ГоденДо
	|
	|ИМЕЮЩИЕ
	|	(СУММА(ТаблицаСерийСОстатками.СвободныйОстаток) > 0
	|		ИЛИ СУММА(ТаблицаСерийСОстатками.Количество) > 0)
	|
	|УПОРЯДОЧИТЬ ПО
	|	ГоденДо,
	|	Номер";
	
	Запрос = Новый Запрос;
	Запрос.Текст = ТекстЗапроса;

	Запрос.УстановитьПараметр("ТаблицаСерий",Объект.СерииКешДокумента.Выгрузить());
	Запрос.УстановитьПараметр("Номенклатура",СтрокаТоваров.Номенклатура);
	Запрос.УстановитьПараметр("Характеристика",СтрокаТоваров.Характеристика);
	Если Не СкладыВТЧ Тогда
		Запрос.УстановитьПараметр("Склад",Склад);
	Иначе
		Запрос.УстановитьПараметр("Склад",СтрокаТоваров.Склад);
	КонецЕсли;
	
	Если ЕстьПризнакУказанияСерий Тогда
		Запрос.УстановитьПараметр("УказыватьСерии",СтрокаТоваров.УказыватьСерии);
	КонецЕсли;	
	
	Если ЕстьДокументРезерваСерий Тогда
		Запрос.УстановитьПараметр("ДокументРезерваСерий", СтрокаТоваров.ДокументРезерваСерий);
	КонецЕсли;
	
	Если ЕстьВариантОформления Тогда
		Запрос.УстановитьПараметр("ВариантОформления", СтрокаТоваров.ВариантОформления);
	КонецЕсли;
	
	Если ВариантПолучениеДанныхИзРегистров = "ОрдерСерииИзНакладной" Тогда
		Запрос.УстановитьПараметр("ДокументОтгрузки", ПараметрыУказанияСерий.ДокументОтгрузки);
	КонецЕсли;	
		
	Запрос.УстановитьПараметр("Помещение",Помещение);
	Запрос.УстановитьПараметр("Регистратор",Регистратор);
	Объект.Серии.Загрузить(Запрос.Выполнить().Выгрузить());
	
	КоличествоСерий = Объект.Серии.Итог("КоличествоУпаковок");
	
	Если Объект.Серии.Количество() = 0 Тогда
		Элементы.ГруппаСтраницыСерии.ТекущаяСтраница = Элементы.СтраницаНетОстатков;
	Иначе
		Элементы.ГруппаСтраницыСерии.ТекущаяСтраница = Элементы.СтраницаСерии;
	КонецЕсли;
		
	КоличествоСерий = Объект.Серии.Итог("КоличествоУпаковок");
	
	ПредставлениеОбъемаРаботы = НСтр("ru = 'Товар %НомерТекущейСтроки% из %ВсегоТоваров%:'");
	ПредставлениеОбъемаРаботы = СтрЗаменить(ПредставлениеОбъемаРаботы,"%НомерТекущейСтроки%",Строка(НомерТекущейСтрокиТоваров));
	ПредставлениеОбъемаРаботы = СтрЗаменить(ПредставлениеОбъемаРаботы,"%ВсегоТоваров%",Объект.ТоварыКешДокумента.Количество());
	
КонецПроцедуры

&НаСервере
Процедура ИзменитьТекущуюСтроку(Направление)
	СохранитьВводСерийВКеше();
	НомерТекущейСтрокиТоваров = НомерТекущейСтрокиТоваров + Направление;
	Инициализировать();
КонецПроцедуры

&НаКлиенте
Процедура ИзменитьСериюКлиент()
	ТекущиеДанные = Элементы.Серии.ТекущиеДанные;
	
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ЗначенияЗаполненияСерии = Новый Структура;
	ЗначенияЗаполненияСерии.Вставить("ВидНоменклатуры", ПараметрыУчетнойПолитикиСерий.ВидНоменклатуры);
	ЗначенияЗаполненияСерии.Вставить("Номер", ТекущиеДанные.Номер);
	ЗначенияЗаполненияСерии.Вставить("ГоденДо", ТекущиеДанные.ГоденДо);
	
	ПараметрыФормыСерии = Новый Структура;
	ПараметрыФормыСерии.Вставить("ЗначенияЗаполнения",ЗначенияЗаполненияСерии);
	ПараметрыФормыСерии.Вставить("Ключ",ТекущиеДанные.Серия);
	
	ОткрытьФормуМодально("Справочник.СерииНоменклатуры.Форма.ФормаЭлемента",ПараметрыФормыСерии, ЭтаФорма);
КонецПроцедуры
