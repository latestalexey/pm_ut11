&НаКлиенте
Перем КэшированныеЗначения; //используется механизмом обработки изменения реквизитов ТЧ

&НаКлиенте
Перем ТекущееКоличество; //кеш количества в текущей строке для расчета количества серий

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)

	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;
	КонецЕсли;
	
	Если Не ЭтоАдресВременногоХранилища(Параметры.АдресВоВременномХранилище) Тогда
		ТекстСообщения = НСтр("ru='Предусмотрено открытие обработки только из документов.'");
		
		ВызватьИсключение ТекстСообщения;
	КонецЕсли;
	
	ТолькоПросмотр = Параметры.ТолькоПросмотр;
	
	ОбщегоНазначенияУТ.НастроитьПодключаемоеОборудование(ЭтаФорма);
	
	Упаковка                  = Параметры.Упаковка;
	АдресВоВременномХранилище = Параметры.АдресВоВременномХранилище;
	ПараметрыУказанияСерий    = Параметры.ПараметрыУказанияСерий;
	Количество                = Параметры.Количество;
	НомераСтрокПредставление  = Параметры.НомераСтрокДокумента;
	
	РеквизитыНоменклатуры = Новый Структура;
	РеквизитыНоменклатуры.Вставить("ВидНоменклатуры", "ВидНоменклатуры");
	РеквизитыНоменклатуры.Вставить("ЕдиницаИзмеренияПредставление", "ЕдиницаИзмерения.Наименование");
	РеквизитыНоменклатуры.Вставить("ШаблонСерии", "ВидНоменклатуры.ШаблонЭтикеткиСерии");
	
	РеквизитыНоменклатуры = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Параметры.Номенклатура, РеквизитыНоменклатуры); 
	
	ШаблонСерии = РеквизитыНоменклатуры.ШаблонСерии;
	
	Если Не ЗначениеЗаполнено(ШаблонСерии) Тогда
		ШаблонСерии = Справочники.ШаблоныЭтикетокИЦенников.ШаблонПоУмолчанию(Перечисления.НазначенияШаблоновЭтикетокИЦенников.ЭтикеткаСерииНоменклатуры);
	КонецЕсли;
	
	ПараметрыУчетнойПолитикиСерий = Новый ФиксированнаяСтруктура(ЗначениеНастроекПовтИсп.
		ПараметрыПолитикиУчетаСерийПоВидуНоменклатуры(РеквизитыНоменклатуры.ВидНоменклатуры,Параметры.Склад));
	
	Если Не ПараметрыУчетнойПолитикиСерий.ИспользоватьСерии Тогда
		ТекстИсключения = НСтр("ru = 'Для вида номенклатуры ""%ВидНоменклатуры%"" серии не используются'");
		
		ТекстИсключения = СтрЗаменить(ТекстИсключения, "%ВидНоменклатуры%",ПараметрыУчетнойПолитикиСерий.ВидНоменклатуры);
		
		ВызватьИсключение ТекстИсключения;
	КонецЕсли;
	
	ЗаголовокКоличествоВДокументе = НСтр("ru = 'Необходимо зарегистрировать, %ЕдиницаИзмерения%'");
	ЗаголовокКоличествоСерий      = НСтр("ru = 'Зарегистрировано серий, %ЕдиницаИзмерения%'");
	ЗаголовокКолонкиКоличество    = НСтр("ru = 'Количество, %ЕдиницаИзмерения%'"); 
	Заголовок                     = НСтр("ru = 'Регистрация серий товаров'");
	ЗаголовокКомандыПечати        = НСтр("ru = 'Этикетки для каждой(ого) %ЕдиницаИзмерения%'");
	Если ЗначениеЗаполнено(Упаковка) Тогда
		ТоварПредставление = НСтр("ru = '%ПредставлениеТовара% в упаковке %Упаковка%'");
		ТоварПредставление = СтрЗаменить(ТоварПредставление,"%Упаковка%",Параметры.Упаковка);
		
		ЗаголовокКолонкиКоличество    = СтрЗаменить(ЗаголовокКолонкиКоличество,"%ЕдиницаИзмерения%",Параметры.Упаковка);
		ЗаголовокКоличествоВДокументе = СтрЗаменить(ЗаголовокКоличествоВДокументе,"%ЕдиницаИзмерения%",Параметры.Упаковка);
		ЗаголовокКоличествоСерий      = СтрЗаменить(ЗаголовокКоличествоСерий,"%ЕдиницаИзмерения%",Параметры.Упаковка);
		ЗаголовокКолонкиКоличество    = СтрЗаменить(ЗаголовокКолонкиКоличество,"%ЕдиницаИзмерения%",Параметры.Упаковка);
		ЗаголовокКомандыПечати        = СтрЗаменить(ЗаголовокКомандыПечати,"%ЕдиницаИзмерения%",Параметры.Упаковка);
		ЕдиницаИзмеренияСтр           = Параметры.Упаковка;
	    
	Иначе
		ТоварПредставление = НСтр("ru = '%ПредставлениеТовара%'");
		
		ЗаголовокКолонкиКоличество    = СтрЗаменить(ЗаголовокКолонкиКоличество,"%ЕдиницаИзмерения%",РеквизитыНоменклатуры.ЕдиницаИзмеренияПредставление);
		ЗаголовокКоличествоВДокументе = СтрЗаменить(ЗаголовокКоличествоВДокументе,"%ЕдиницаИзмерения%",РеквизитыНоменклатуры.ЕдиницаИзмеренияПредставление);
		ЗаголовокКоличествоСерий      = СтрЗаменить(ЗаголовокКоличествоСерий,"%ЕдиницаИзмерения%",РеквизитыНоменклатуры.ЕдиницаИзмеренияПредставление);
		ЗаголовокКолонкиКоличество    = СтрЗаменить(ЗаголовокКолонкиКоличество,"%ЕдиницаИзмерения%",РеквизитыНоменклатуры.ЕдиницаИзмеренияПредставление);
		ЗаголовокКомандыПечати        = СтрЗаменить(ЗаголовокКомандыПечати,"%ЕдиницаИзмерения%",РеквизитыНоменклатуры.ЕдиницаИзмеренияПредставление);
		ЕдиницаИзмеренияСтр 		  = РеквизитыНоменклатуры.ЕдиницаИзмеренияПредставление;	
	КонецЕсли;
	
	
	ТоварПредставление = СтрЗаменить(ТоварПредставление,"%ПредставлениеТовара%",НоменклатураКлиентСервер.ПредставлениеНоменклатуры(Параметры.Номенклатура, Параметры.Характеристика));
	
	Элементы.СерииКоличествоУпаковок.Заголовок = ЗаголовокКолонкиКоличество;
	Элементы.Количество.Заголовок              = ЗаголовокКоличествоВДокументе;
	Элементы.КоличествоСерий.Заголовок         = ЗаголовокКоличествоСерий;
	Элементы.ПечатьКаждойШт.Заголовок		   = ЗаголовокКомандыПечати;

	Элементы.Серии.ИзменятьСоставСтрок              = Не ТолькоПросмотр;
	Элементы.СерииКоличествоУпаковок.ТолькоПросмотр = ТолькоПросмотр;
	Элементы.ГруппаКоманднаяПанельТаблицы.Видимость = Не ТолькоПросмотр;
	
	Элементы.Количество.Видимость              = Не ТолькоПросмотр;
	
	Элементы.СерииНомер.Видимость                = ПараметрыУчетнойПолитикиСерий.ИспользоватьНомерСерии;
	Элементы.СерииЗагрузитьДанныеИзТСД.Видимость = ПараметрыУчетнойПолитикиСерий.ИспользоватьНомерСерии;
	
	Элементы.СерииГоденДо.Видимость            = ПараметрыУчетнойПолитикиСерий.ИспользоватьСрокГодностиСерии;
	
	Элементы.СерииКоличествоУпаковок.Видимость = ПараметрыУчетнойПолитикиСерий.ИспользоватьКоличествоСерии;
	
	Элементы.ГруппаКоличество.Видимость = Не Параметры.СерииВТЧТовары;
	
	Элементы.СгенерироватьНомер.Видимость = ПараметрыУчетнойПолитикиСерий.ИспользоватьНомерСерии;
	
	Элементы.СгенерироватьНомера.Видимость = ПараметрыУчетнойПолитикиСерий.ИспользоватьНомерСерии;
		
	Если ПараметрыУчетнойПолитикиСерий.ИспользоватьСрокГодностиСерии Тогда
		Элементы.СерииГоденДо.Формат               = ПараметрыУчетнойПолитикиСерий.ФорматнаяСтрокаСрокаГодности;
		Элементы.СерииГоденДо.ФорматРедактирования = ПараметрыУчетнойПолитикиСерий.ФорматнаяСтрокаСрокаГодности;
		
		Если ПараметрыУчетнойПолитикиСерий.ТочностьУказанияСрокаГодностиСерии = Перечисления.ТочностиУказанияСрокаГодности.СТочностьюДоДней Тогда
			Элементы.СерииГоденДо.Заголовок = НСтр("ru = 'Годен до (дата)'");
		Иначе
			Элементы.СерииГоденДо.Заголовок = НСтр("ru = 'Годен до (дата, час)'");
		КонецЕсли;
	КонецЕсли;
	
	ТаблицаСерий = ПолучитьИзВременногоХранилища(АдресВоВременномХранилище);
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ТаблицаСерий.Серия,
	|	ТаблицаСерий.Количество,
	|	ТаблицаСерий.КоличествоУпаковок
	|ПОМЕСТИТЬ ТаблицаСерий
	|ИЗ
	|	&ТаблицаСерий КАК ТаблицаСерий
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаСерий.Серия,
	|	ТаблицаСерий.Количество,
	|	ТаблицаСерий.КоличествоУпаковок,
	|	ВЫРАЗИТЬ(ТаблицаСерий.Серия КАК Справочник.СерииНоменклатуры).Номер КАК Номер,
	|	ВЫРАЗИТЬ(ТаблицаСерий.Серия КАК Справочник.СерииНоменклатуры).ГоденДо КАК ГоденДо
	|ИЗ
	|	ТаблицаСерий КАК ТаблицаСерий
	|
	|УПОРЯДОЧИТЬ ПО
	|	ГоденДо,
	|	Номер";
	Запрос.УстановитьПараметр("ТаблицаСерий",ТаблицаСерий);
	Объект.Серии.Загрузить(Запрос.Выполнить().Выгрузить());
	
	КоличествоСерий = Объект.Серии.Итог("КоличествоУпаковок");
	
	ОбновитьКартинкуПечати();
КонецПроцедуры

&НаСервере
Процедура ПриЗагрузкеДанныхИзНастроекНаСервере(Настройки)
	ОбновитьКартинкуПечати();
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	МенеджерОборудованияКлиент.ПодключитьОборудованиеПриОткрытииФормы(ЭтаФорма, "СканерШтрихкода");

КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытием(Отказ, СтандартнаяОбработка)

	Если Модифицированность Тогда

		Ответ = Вопрос(НСтр("ru = 'Список серий был изменен.
				|Сохранить изменения?'"), РежимДиалогаВопрос.ДаНетОтмена);

		Если Ответ = КодВозвратаДиалога.Да Тогда

			Отказ = Истина;
			СтандартнаяОбработка = Ложь;
			ЗавершитьВводСерий(Неопределено);// Сохранение результатов модификации.
			
		ИначеЕсли Ответ = КодВозвратаДиалога.Отмена Тогда

			Отказ = Истина;
			СтандартнаяОбработка = Ложь;

		КонецЕсли;
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ПриЗакрытии()

	МенеджерОборудованияКлиент.ОтключитьОборудованиеПриЗакрытииФормы(ЭтаФорма);

КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	// ПодключаемоеОборудование
	Если Источник = "ПодключаемоеОборудование" И ВводДоступен() И НЕ ТолькоПросмотр Тогда
		Если ИмяСобытия = "ScanData" Тогда
			
			ЗакрытьФорму = ОбработатьШтрихкодыСервер(МенеджерОборудованияКлиент.ПреобразоватьДанныеСоСканераВМассив(Параметр), КэшированныеЗначения);
			
			Если ЗакрытьФорму Тогда
				ПодключитьОбработчикОжидания("ЗакрытьФормуПриСканировании",0.1, Истина);
			КонецЕсли;
			
		КонецЕсли;
	КонецЕсли;
	// Конец ПодключаемоеОборудование

	Если ИмяСобытия = "Запись_СерииНоменклатуры" Тогда
		ТекущиеДанные = Элементы.Серии.ТекущиеДанные;
		
		Если ТекущиеДанные = Неопределено Тогда
			Возврат;
		КонецЕсли;
		
		ТекущиеДанные.Серия = Источник;
		ЗаполнитьЗначенияСвойств(ТекущиеДанные,Параметр);
	КонецЕсли;
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ ТАБЛИЦЫ ФОРМЫ СЕРИИ

&НаКлиенте
Процедура СерииСерияНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	
	ПараметрыФормыВыбора = Новый Структура;
	ПараметрыФормыВыбора.Вставить("ВидНоменклатуры",ПараметрыУчетнойПолитикиСерий.ВидНоменклатуры);
	Если ЗначениеЗаполнено(Элементы.Серии.ТекущиеДанные.Серия) Тогда
		ПараметрыФормыВыбора.Вставить("ТекущаяСтрока",Элементы.Серии.ТекущиеДанные.Серия);
	КонецЕсли;	
	
	ОткрытьФорму("Справочник.СерииНоменклатуры.ФормаВыбора", ПараметрыФормыВыбора, Элемент);
КонецПроцедуры

&НаКлиенте
Процедура СерииСерияОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	
	РеквизитыСерии = РеквизитыСерии(ВыбранноеЗначение);
	
	ТекущиеДанные = Элементы.Серии.ТекущиеДанные;
	
	ТекущиеДанные.Номер   = РеквизитыСерии.Номер;
	ТекущиеДанные.ГоденДо = РеквизитыСерии.ГоденДо;
	ТекущиеДанные.Серия   = ВыбранноеЗначение;
КонецПроцедуры

&НаКлиенте
Процедура СерииНомерПриИзменении(Элемент)
	ПодобратьСерию(Элемент,"Номер","ГоденДо");
КонецПроцедуры

&НаКлиенте
Процедура СерииГоденДоПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.Серии.ТекущиеДанные;
	
	Если ЗначениеЗаполнено(ТекущиеДанные.ГоденДо) Тогда
 		ПодобратьСерию(Элемент,"ГоденДо","Номер");
	Иначе
		ТекущиеДанные.Серия   = Неопределено;
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура СерииГоденДоНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ТекущиеДанные = Элементы.Серии.ТекущиеДанные;
	
	СтруктураПараметров = Новый Структура;
	СтруктураПараметров.Вставить("ФорматДаты",ПараметрыУчетнойПолитикиСерий.ФорматнаяСтрокаСрокаГодности);
	СтруктураПараметров.Вставить("ГоденДо",ТекущиеДанные.ГоденДо);
	
	ГоденДо = ОткрытьФормуМодально("Обработка.ПодборСерийВДокументы.Форма.ФормаУказанияДаты", СтруктураПараметров, Элемент);
	
	Если ЗначениеЗаполнено(ГоденДо)
		И ТипЗнч(ГоденДо) = Тип("Дата") Тогда
		
		ТекущиеДанные.ГоденДо = ГоденДо;
 		ПодобратьСерию(Элемент,"ГоденДо","Номер");
	Иначе
		ТекущиеДанные.Серия   = Неопределено;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура СерииКоличествоУпаковокПриИзменении(Элемент)
	СтруктураДействий = Новый Структура;
	СтруктураДействий.Вставить("ПересчитатьКоличествоЕдиниц");

	ТекущиеДанные = Элементы.Серии.ТекущиеДанные;
	
	ТекущаяСтрока = Новый Структура;
	ТекущаяСтрока.Вставить("Упаковка",Упаковка);
	ТекущаяСтрока.Вставить("Количество",ТекущиеДанные.Количество);
	ТекущаяСтрока.Вставить("КоличествоУпаковок",ТекущиеДанные.КоличествоУпаковок);
	
	ОбработкаТабличнойЧастиКлиент.ОбработатьСтрокуТЧ(ТекущаяСтрока, СтруктураДействий, КэшированныеЗначения);
	
	ЗаполнитьЗначенияСвойств(ТекущиеДанные,ТекущаяСтрока);
КонецПроцедуры

&НаКлиенте
Процедура СерииПриНачалеРедактирования(Элемент, НоваяСтрока, Копирование)
	ТекущиеДанные = Элемент.ТекущиеДанные;
	Если Копирование Тогда
		ТекущееКоличество = 0;
	Иначе
		ТекущееКоличество =  ТекущиеДанные.КоличествоУпаковок;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура СерииПередОкончаниемРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования, Отказ)
	Если Не ОтменаРедактирования Тогда
		Если Не ПараметрыУчетнойПолитикиСерий.ИспользоватьКоличествоСерии Тогда
			
			ТекущиеДанные = Элемент.ТекущиеДанные;
			
			Если ЗначениеЗаполнено(ТекущиеДанные.Номер) Тогда
				Если ТекущиеДанные.КоличествоУпаковок = 0 Тогда
					ТекущиеДанные.КоличествоУпаковок = 1;
					
					СтруктураДействий = Новый Структура;
					СтруктураДействий.Вставить("ПересчитатьКоличествоЕдиниц");
					
					ТекущиеДанные = Элементы.Серии.ТекущиеДанные;
					
					ТекущаяСтрока = Новый Структура;
					ТекущаяСтрока.Вставить("Упаковка",Упаковка);
					ТекущаяСтрока.Вставить("Количество",ТекущиеДанные.Количество);
					ТекущаяСтрока.Вставить("КоличествоУпаковок",ТекущиеДанные.КоличествоУпаковок);
					
					ОбработкаТабличнойЧастиКлиент.ОбработатьСтрокуТЧ(ТекущаяСтрока, СтруктураДействий, КэшированныеЗначения);
					
					ЗаполнитьЗначенияСвойств(ТекущиеДанные,ТекущаяСтрока);
				КонецЕсли;
			Иначе
				ТекущиеДанные.КоличествоУпаковок = 0;
				ТекущиеДанные.Количество         = 0;
			КонецЕсли;
		КонецЕсли;
		
		Дельта = ТекущееКоличество - Элементы.Серии.ТекущиеДанные.КоличествоУпаковок;
		КоличествоСерий = КоличествоСерий - Дельта;
		
		СтруктураПараметров = Новый Структура();
		СтруктураПараметров.Вставить("Номер",Элементы.Серии.ТекущиеДанные.Номер);
		СтруктураПараметров.Вставить("ГоденДо",Элементы.Серии.ТекущиеДанные.ГоденДо);
		СтруктураПараметров.Вставить("КоличествоУпаковок",Элементы.Серии.ТекущиеДанные.КоличествоУпаковок);
		СтруктураПараметров.Вставить("Количество",Элементы.Серии.ТекущиеДанные.Количество);
		
		Если ОбъединитьСтроки(СтруктураПараметров,Элементы.Серии.ТекущиеДанные.ПолучитьИдентификатор()) Тогда			
			Элементы.Серии.ТекущиеДанные.КоличествоУпаковок = 0;
			Элементы.Серии.ТекущиеДанные.Количество         = 0;
			Объект.Серии.Удалить(Элементы.Серии.ТекущиеДанные);
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура СерииПередУдалением(Элемент, Отказ)
	ТекущиеДанные = Элемент.ТекущиеДанные;
	ТекущееКоличество =  ТекущиеДанные.КоличествоУпаковок;
КонецПроцедуры

&НаКлиенте
Процедура СерииПослеУдаления(Элемент)
	КоличествоСерий = КоличествоСерий - ТекущееКоличество;
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ КОМАНД ФОРМЫ

&НаКлиенте
Процедура Отмена(Команда)
	Модифицированность = Ложь;
	Закрыть();
КонецПроцедуры

&НаКлиенте
Процедура ЗавершитьВводСерий(Команда)
	ОчиститьСообщения();
    СохранитьВводСерийСервер();
	Если Не Модифицированность Тогда
		Закрыть(АдресВоВременномХранилище);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ЗагрузитьДанныеИзТСД(Команда)
	Перем ТаблицаЗагрузкиИзТСД;
	
	МенеджерОборудованияКлиент.ЗагрузитьДанныеИзТСД(УникальныйИдентификатор, ТаблицаЗагрузкиИзТСД);
	
	ЗакрытьФорму = ОбработатьШтрихкодыСервер(ТаблицаЗагрузкиИзТСД, КэшированныеЗначения);

	Если ЗакрытьФорму Тогда
		Закрыть(АдресВоВременномХранилище);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура НастроитьПорядокСканированияСерий(Команда)
	Результат = ОткрытьФормуМодально("Обработка.ПодборСерийВДокументы.Форма.ФормаНастройки",
		Новый Структура("ЗакрыватьФормуПослеСканированияСерии,ПечатьНаПринтер",ЗакрыватьФормуПослеСканированияСерии,ПечатьНаПринтер),
		ЭтаФорма);
		
	Если Результат <> Неопределено Тогда
		ЗакрыватьФормуПослеСканированияСерии = Результат.ЗакрыватьФормуПослеСканированияСерии;
		Если Результат.ПечатьНаПринтер <> ПечатьНаПринтер Тогда
			ПечатьНаПринтер = Результат.ПечатьНаПринтер;
			ОбновитьКартинкуПечати();
		КонецЕсли;	
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ПоискПоШтрихкоду(Команда)
	ОчиститьСообщения();
	ТекШтрихкод = "";
	ЗаголовокФормыВводаСерий = НСтр("ru = 'Введите штрихкод серии'");
	Если ШтрихкодированиеНоменклатурыКлиент.ВвестиШтрихкод(ТекШтрихкод, ЗаголовокФормыВводаСерий) Тогда
		ЗакрытьФорму = ОбработатьШтрихкодыСервер(ШтрихкодированиеНоменклатурыКлиент.ПолучитьСтруктуруДанныхШтрихкода(ТекШтрихкод, 1),КэшированныеЗначения);
		Если ЗакрытьФорму Тогда
			Закрыть(АдресВоВременномХранилище);
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ИзменитьСерию(Команда)
	ИзменитьСериюКлиент();
КонецПроцедуры

&НаКлиенте
Процедура СгенерироватьНомер(Команда)
	
	Результат = ВычислитьМаксимальныйНомерИКоличество(ПараметрыУчетнойПолитикиСерий.ВидНоменклатуры,Упаковка,1);
	ТекущаяСтрока = Результат.ТекущаяСтрока;
	Номер = Результат.Номер;	
	
	Номер = Номер+1;
	Элементы.Серии.ДобавитьСтроку();
	ТекущиеДанные = Элементы.Серии.ТекущиеДанные;

	ТекущиеДанные.Номер =  Формат(Номер, "ЧЦ=8; ЧВН=; ЧГ=");	
	
	ЗаполнитьЗначенияСвойств(ТекущиеДанные,ТекущаяСтрока); 
	
	Если ПараметрыУчетнойПолитикиСерий.ИспользоватьСрокГодностиСерии Тогда
		Элементы.Серии.ТекущийЭлемент = Элементы.СерииГоденДо;		
	ИначеЕсли ПараметрыУчетнойПолитикиСерий.ИспользоватьКоличествоСерии Тогда
		Элементы.Серии.ТекущийЭлемент = Элементы.СерииКоличествоУпаковок;
	КонецЕсли;		

КонецПроцедуры

&НаКлиенте
Процедура СгенерироватьНомера(Команда)
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("КоличествоСерий",Макс(Количество - КоличествоСерий,0)); 
	ПараметрыФормы.Вставить("ИспользоватьКоличество",ПараметрыУчетнойПолитикиСерий.ИспользоватьКоличествоСерии); 
	ПараметрыФормы.Вставить("ВКаждойСерии",ВКаждойСерии); 
	ПараметрыФормы.Вставить("ЕдиницаИзмеренияСтр",ЕдиницаИзмеренияСтр); 
	
	Результат = ОткрытьФормуМодально("Обработка.ПодборСерийВДокументы.Форма.ФормаНастройкиГенерацииНомеров",ПараметрыФормы,ЭтаФорма);
	
	Если Результат <> Неопределено Тогда
		ВКаждойСерии = Результат.ВКаждойСерии;
		
		КолСерий = Результат.КоличествоСерий;
		ВКаждойСерииКоличество = Результат.ВКаждойСерииКоличество;
				
		СтруктураВозврата = ВычислитьМаксимальныйНомерИКоличество(ПараметрыУчетнойПолитикиСерий.ВидНоменклатуры,Упаковка, ВКаждойСерииКоличество);
		ТекущаяСтрока = СтруктураВозврата.ТекущаяСтрока;
		Номер = СтруктураВозврата.Номер;
		
		АктивнаяСтрокаНеВыбрана = Истина;
		
		Пока КолСерий > 0 Цикл
			
			КолСерий = КолСерий-1;
			Номер = Номер+1;
			Элементы.Серии.ДобавитьСтроку();
			ТекущиеДанные = Элементы.Серии.ТекущиеДанные;
			
			Если АктивнаяСтрокаНеВыбрана Тогда
				АктивнаяСтрока = Элементы.Серии.ТекущиеДанные.ПолучитьИдентификатор();
				АктивнаяСтрокаНеВыбрана = Ложь;
			КонецЕсли;
			
			ТекущиеДанные.Номер =  Формат(Номер, "ЧЦ=8; ЧВН=; ЧГ=");
						
			ЗаполнитьЗначенияСвойств(ТекущиеДанные,ТекущаяСтрока); 
			
		КонецЦикла;
		
	КонецЕсли;
	

	Если ПараметрыУчетнойПолитикиСерий.ИспользоватьСрокГодностиСерии Тогда
		Элементы.Серии.ТекущаяСтрока = АктивнаяСтрока;
		Элементы.Серии.ТекущийЭлемент = Элементы.СерииГоденДо;	
	ИначеЕсли ПараметрыУчетнойПолитикиСерий.ИспользоватьКоличествоСерии Тогда
		Элементы.Серии.ТекущаяСтрока = АктивнаяСтрока;
		Элементы.Серии.ТекущийЭлемент = Элементы.СерииКоличествоУпаковок;
	КонецЕсли;	
	
КонецПроцедуры

&НаКлиенте
Процедура ПечатьКаждойШт(Команда)
	
	ПечатьКаждойШт = Истина;
	Печать(ПечатьКаждойШт);

КонецПроцедуры

&НаКлиенте
Процедура ПечатьКаждойСерии(Команда)
	ПечатьКаждойШт = Ложь;
	Печать(ПечатьКаждойШт);
КонецПроцедуры


////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

////////////////////////////////////////////////////////////////////////////////
// Штрихкоды и торговое оборудование

&НаСервере
Функция ОбработатьШтрихкодыСервер(ДанныеШтрихкодов,КэшированныеЗначения)
	
	ТаблицаШтрихКодов = Новый ТаблицаЗначений;
	ТаблицаШтрихКодов.Колонки.Добавить("Номер",Новый ОписаниеТипов("Строка",,Новый КвалификаторыСтроки(50)));
	ТаблицаШтрихКодов.Колонки.Добавить("ГоденДо",Новый ОписаниеТипов("Дата"));
	ТаблицаШтрихКодов.Колонки.Добавить("Количество",Новый ОписаниеТипов("Число",Новый КвалификаторыЧисла(15,3,ДопустимыйЗнак.Неотрицательный)));
	
	ЕстьОшибки = Ложь;
	
	Если ТипЗнч(ДанныеШтрихкодов) = Тип("Массив") Тогда
		Для Каждого СтрМас из ДанныеШтрихкодов Цикл
			НоваяСтрока            = ТаблицаШтрихКодов.Добавить();
			НоваяСтрока.Количество = СтрМас.Количество;
			
			ПоляИзШтрихкода = Справочники.СерииНоменклатуры.ИнформацияИзШтрихкода(СтрМас.Штрихкод, 
													ПараметрыУчетнойПолитикиСерий.ИспользоватьНомерСерии,
													ПараметрыУчетнойПолитикиСерий.ИспользоватьСрокГодностиСерии);
			
			НоваяСтрока.Номер   = ПоляИзШтрихкода.Номер;
			НоваяСтрока.ГоденДо = ПоляИзШтрихкода.ГоденДо;
			
			Если Не ЗначениеЗаполнено(НоваяСтрока.Номер)
				И Не ЗначениеЗаполнено(НоваяСтрока.ГоденДо) Тогда
				
				Если ПараметрыУчетнойПолитикиСерий.ИспользоватьСрокГодностиСерии
					И ПараметрыУчетнойПолитикиСерий.ИспользоватьНомерСерии Тогда
					ТекстСообщения = НСтр("ru = 'Ошибка преобразования штрихкода %Штрихкод% в номер серии и срок годности. Попробуйте повторийть сканирование.'");
				ИначеЕсли ПараметрыУчетнойПолитикиСерий.ИспользоватьНомерСерии Тогда
					ТекстСообщения = НСтр("ru = 'Ошибка преобразования штрихкода %Штрихкод% в номер серии. Попробуйте повторийть сканирование.'");
				Иначе 
					ТекстСообщения = НСтр("ru = 'Ошибка преобразования штрихкода %Штрихкод% в срок годности. Попробуйте повторийть сканирование.'");
				КонецЕсли;
				
				ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Штрихкод%", СтрМас.Штрихкод);
				
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения,,,,ЕстьОшибки);
				
			КонецЕсли;
			
		КонецЦикла;
	Иначе
		НоваяСтрока            = ТаблицаШтрихКодов.Добавить();
		НоваяСтрока.Количество = ДанныеШтрихкодов.Количество;
		
		ПоляИзШтрихкода = Справочники.СерииНоменклатуры.ИнформацияИзШтрихкода(ДанныеШтрихкодов.Штрихкод, 
												ПараметрыУчетнойПолитикиСерий.ИспользоватьНомерСерии,
												ПараметрыУчетнойПолитикиСерий.ИспользоватьСрокГодностиСерии);
		
		НоваяСтрока.Номер   = ПоляИзШтрихкода.Номер;;
		НоваяСтрока.ГоденДо = ПоляИзШтрихкода.ГоденДо;
		
		Если Не ЗначениеЗаполнено(НоваяСтрока.Номер)
			И Не ЗначениеЗаполнено(НоваяСтрока.ГоденДо) Тогда
			
			Если ПараметрыУчетнойПолитикиСерий.ИспользоватьСрокГодностиСерии
				И ПараметрыУчетнойПолитикиСерий.ИспользоватьНомерСерии Тогда
				ТекстСообщения = НСтр("ru = 'Ошибка преобразования штрихкода %Штрихкод% в номер серии и срок годности. Попробуйте повторийть сканирование.'");
			ИначеЕсли ПараметрыУчетнойПолитикиСерий.ИспользоватьНомерСерии Тогда
				ТекстСообщения = НСтр("ru = 'Ошибка преобразования штрихкода %Штрихкод% в номер серии. Попробуйте повторийть сканирование.'");
			Иначе 
				ТекстСообщения = НСтр("ru = 'Ошибка преобразования штрихкода %Штрихкод% в срок годности. Попробуйте повторийть сканирование.'");
			КонецЕсли;
			
			ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Штрихкод%", СтрМас.Штрихкод);
			
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения,,,,ЕстьОшибки);
			
		КонецЕсли;
		
	КонецЕсли;
	
	Если Не ЕстьОшибки Тогда
		
		Запрос = Новый Запрос;
		Запрос.Текст =
		"ВЫБРАТЬ
		|	Штрихкоды.Номер КАК Номер,
		|	Штрихкоды.ГоденДо КАК ГоденДо,
		|	Штрихкоды.Количество КАК Количество
		|ПОМЕСТИТЬ Штрихкоды
		|ИЗ
		|	&Штрихкоды КАК Штрихкоды
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ЕСТЬNULL(СерииНоменклатуры.Ссылка, ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)) КАК Серия,
		|	Штрихкоды.ГоденДо КАК ГоденДо,
		|	Штрихкоды.Номер,
		|	Штрихкоды.Количество
		|ПОМЕСТИТЬ НайденныеНомераДляЗапроса
		|ИЗ
		|	Штрихкоды КАК Штрихкоды
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.СерииНоменклатуры КАК СерииНоменклатуры
		|		ПО Штрихкоды.Номер = СерииНоменклатуры.Номер
		|			И (Штрихкоды.ГоденДо = СерииНоменклатуры.ГоденДо
		|				ИЛИ Штрихкоды.ГоденДо = ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0))
		|			И (СерииНоменклатуры.ВидНоменклатуры = &ВидНоменклатуры)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	СУММА(1) КАК КоличествоНайденныхСерий,
		|	НайденныеНомераДляЗапроса.Номер
		|ПОМЕСТИТЬ КоличествоСерийПоНомеру
		|ИЗ
		|	НайденныеНомераДляЗапроса КАК НайденныеНомераДляЗапроса
		|
		|СГРУППИРОВАТЬ ПО
		|	НайденныеНомераДляЗапроса.Номер
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ВЫБОР
		|		КОГДА КоличествоСерийПоНомеру.КоличествоНайденныхСерий > 1
		|			ТОГДА ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)
		|		ИНАЧЕ НайденныеНомераДляЗапроса.Серия
		|	КОНЕЦ КАК Серия,
		|	ВЫБОР
		|		КОГДА КоличествоСерийПоНомеру.КоличествоНайденныхСерий > 1
		|			ТОГДА ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
		|		ИНАЧЕ НайденныеНомераДляЗапроса.ГоденДо
		|	КОНЕЦ КАК ГоденДо,
		|	НайденныеНомераДляЗапроса.Номер,
		|	НайденныеНомераДляЗапроса.Количество
		|ИЗ
		|	НайденныеНомераДляЗапроса КАК НайденныеНомераДляЗапроса
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ КоличествоСерийПоНомеру КАК КоличествоСерийПоНомеру
		|		ПО НайденныеНомераДляЗапроса.Номер = КоличествоСерийПоНомеру.Номер
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ Штрихкоды
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ НайденныеНомераДляЗапроса
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ КоличествоСерийПоНомеру";
		
		Запрос.УстановитьПараметр("ВидНоменклатуры",ПараметрыУчетнойПолитикиСерий.ВидНоменклатуры);
		Запрос.УстановитьПараметр("Штрихкоды",ТаблицаШтрихКодов);
		
		Выборка = Запрос.Выполнить().Выбрать();
		
		СрокГодностиЗаполнен = Истина;
		
		Пока Выборка.Следующий() Цикл
			СтруктураПоиска = Новый Структура("Номер,ГоденДо,Серия",Выборка.Номер, Выборка.ГоденДо, Выборка.Серия);
			
			НайденныеСтроки = Объект.Серии.НайтиСтроки(СтруктураПоиска);
			
			Если НайденныеСтроки.Количество() = 0 Тогда
				НоваяСтрока = Объект.Серии.Добавить();
				ЗаполнитьЗначенияСвойств(НоваяСтрока, Выборка);
				
				Если ПараметрыУчетнойПолитикиСерий.ИспользоватьКоличествоСерии Тогда
					НоваяСтрока.КоличествоУпаковок = Выборка.Количество;
				Иначе
					НоваяСтрока.КоличествоУпаковок = 1;
				КонецЕсли;
				
				СтруктураДействий = Новый Структура;
				СтруктураДействий.Вставить("ПересчитатьКоличествоЕдиниц");
				
				ТекущаяСтрока = Новый Структура;
				ТекущаяСтрока.Вставить("Упаковка",Упаковка);
				ТекущаяСтрока.Вставить("Количество",НоваяСтрока.Количество);
				ТекущаяСтрока.Вставить("КоличествоУпаковок",НоваяСтрока.КоличествоУпаковок);
				
				ОбработкаТабличнойЧастиСервер.ОбработатьСтрокуТЧ(ТекущаяСтрока, СтруктураДействий, КэшированныеЗначения);
				
				ЗаполнитьЗначенияСвойств(НоваяСтрока,ТекущаяСтрока);
				
				КоличествоСерий = КоличествоСерий + ТекущаяСтрока.КоличествоУпаковок;
				
				Модифицированность   = Истина;
				
				Если Не ЗначениеЗаполнено(НоваяСтрока.ГоденДо) Тогда
					СрокГодностиЗаполнен = Ложь;
				КонецЕсли;
			Иначе
				СтрокаТЧ = НайденныеСтроки[0];
				Если ПараметрыУчетнойПолитикиСерий.ИспользоватьКоличествоСерии Тогда
					
					ТекущееКоличество = СтрокаТЧ.КоличествоУпаковок;
					
					СтрокаТЧ.КоличествоУпаковок = СтрокаТЧ.КоличествоУпаковок + Выборка.Количество;
					
					ТекущаяСтрока = Новый Структура;
					ТекущаяСтрока.Вставить("Упаковка",Упаковка);
					ТекущаяСтрока.Вставить("Количество",СтрокаТЧ.Количество);
					ТекущаяСтрока.Вставить("КоличествоУпаковок",СтрокаТЧ.КоличествоУпаковок);
					
					СтруктураДействий = Новый Структура;
					СтруктураДействий.Вставить("ПересчитатьКоличествоЕдиниц");
					ОбработкаТабличнойЧастиСервер.ОбработатьСтрокуТЧ(ТекущаяСтрока, СтруктураДействий, КэшированныеЗначения);
					
					ЗаполнитьЗначенияСвойств(СтрокаТЧ,ТекущаяСтрока);
					
					Дельта = ТекущееКоличество - СтрокаТЧ.КоличествоУпаковок;
					КоличествоСерий = КоличествоСерий - Дельта;				
					
					Модифицированность = Истина;
					
				Иначе
					ТекстСообщения = НСтр("ru = 'Серия с номером %НомерСерии% уже присутствует в списке серий'");
					ТекстСообщения = СтрЗаменить(ТекстСообщения,"%НомерСерии%",Выборка.Номер);
					Поле = ОбщегоНазначенияКлиентСервер.ПутьКТабличнойЧасти("Серии",НайденныеСтроки[0].НомерСтроки,"Номер");
					ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения,,Поле,"Объект",ЕстьОшибки);
				КонецЕсли;
				
				Если Не ЗначениеЗаполнено(СтрокаТЧ.ГоденДо) Тогда
					СрокГодностиЗаполнен = Ложь;
				КонецЕсли;
			КонецЕсли;
			
		КонецЦикла;
		
	КонецЕсли;
	
	ЗакрытьФорму = Ложь;
	
	Если Не ЕстьОшибки
		И ЗакрыватьФормуПослеСканированияСерии
		И (СрокГодностиЗаполнен
		Или Не ПараметрыУчетнойПолитикиСерий.ИспользоватьСрокГодностиСерии) Тогда
		СохранитьВводСерийСервер();
		Если Не Модифицированность Тогда
			ЗакрытьФорму = Истина;
		КонецЕсли;
	КонецЕсли;

	Возврат ЗакрытьФорму;
	
КонецФункции

////////////////////////////////////////////////////////////////////////////////
// Печать

 &НаКлиенте
Процедура Печать(ПечатьКаждойШт)
	
	Если Не ЗначениеЗаполнено(ШаблонСерии) Тогда
		ПараметрыФормы = Новый Структура();
		Отбор = Новый Структура();
		Отбор.Вставить("Назначение",ПредопределенноеЗначение("Перечисление.НазначенияШаблоновЭтикетокИЦенников.ЭтикеткаСерииНоменклатуры"));
		ПараметрыФормы.Вставить("Отбор",Отбор);
		ШаблонСерии = ОткрытьФормуМодально("Справочник.ШаблоныЭтикетокИЦенников.ФормаВыбора",ПараметрыФормы,ЭтаФорма);
		
		Если Не ЗначениеЗаполнено(ШаблонСерии) Тогда
			Возврат;
		КонецЕсли;
	КонецЕсли;
	
	СтруктураПараметров = Новый Структура();
	
	Если Модифицированность Тогда
		
		Если СохранитьВводСерийСервер() Тогда
			СтруктураПараметров.Вставить("АдресВХранилище",ПодготовитьДанныеДляПечати(ПечатьКаждойШт,Элементы.Серии.ВыделенныеСтроки));	
		Иначе
			Возврат;
		КонецЕсли;
		
	ИначеЕсли Элементы.Серии.ТекущиеДанные <> Неопределено Тогда
		СтруктураПараметров.Вставить("АдресВХранилище",ПодготовитьДанныеДляПечати(ПечатьКаждойШт,Элементы.Серии.ВыделенныеСтроки));	
	Иначе
		Возврат;		
	КонецЕсли;
	
	СтруктураПараметров.Вставить("ШаблонЭтикетки",ШаблонСерии); 
	СтруктураПараметров.Вставить("НазначениеШаблона",ПредопределенноеЗначение("Перечисление.НазначенияШаблоновЭтикетокИЦенников.ЭтикеткаСерииНоменклатуры"));
	СтруктураПараметров.Вставить("КоличествоЭкземпляров",1);
	
	ПараметрКоманды = Новый Массив;   
	ПараметрКоманды.Добавить(СтруктураПараметров);
	
	Если ПечатьНаПринтер Тогда
		УправлениеПечатьюКлиент.ВыполнитьКомандуПечатиНаПринтер(
		"Обработка.ПечатьЭтикетокИЦенников", // Для вызова метода менеджера обработки "Печать".
		"ЭтикеткаСерииНоменклатуры",
		ПараметрКоманды,
		);
		
	Иначе
		УправлениеПечатьюКлиент.ВыполнитьКомандуПечати(
		"Обработка.ПечатьЭтикетокИЦенников", // Для вызова метода менеджера обработки "Печать".
		"ЭтикеткаСерииНоменклатуры",
		ПараметрКоманды,
		ЭтаФорма, // Форма владелец
		);
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Функция ПодготовитьДанныеДляПечати(ПечатьКаждойШт,Знач ВыделенныеСтроки)
			
	СерииНоменклатуры = Новый ТаблицаЗначений;
	СерииНоменклатуры.Колонки.Добавить("Серия",Новый ОписаниеТипов("СправочникСсылка.СерииНоменклатуры"));
	СерииНоменклатуры.Колонки.Добавить("Штрихкод",Новый ОписаниеТипов("Строка",,Новый КвалификаторыСтроки(16)));
	
	Для Каждого Идентификатор Из ВыделенныеСтроки Цикл
		Строка = Объект.Серии.НайтиПоИдентификатору(Идентификатор);
		
		Если ПечатьКаждойШт Тогда
			КоличествоЭкз = Строка.КоличествоУпаковок;
		Иначе
			КоличествоЭкз = 1;
		КонецЕсли;
		
		Пока КоличествоЭкз > 0 Цикл
			КоличествоЭкз = КоличествоЭкз - 1;
			НоваяСтрока = СерииНоменклатуры.Добавить();
			НоваяСтрока.Серия    = Строка.Серия;
			Если ПараметрыУчетнойПолитикиСерий.ИспользоватьСрокГодностиСерии 
				И ПараметрыУчетнойПолитикиСерий.ИспользоватьНомерСерии Тогда
				НоваяСтрока.ШтрихКод = СокрЛП(Строка.Номер) + Формат(Строка.ГоденДо, "ДФ=""ддММггЧЧ""");
			ИначеЕсли ПараметрыУчетнойПолитикиСерий.ИспользоватьНомерСерии Тогда
				НоваяСтрока.ШтрихКод = СокрЛП(Строка.Номер);
			Иначе
				НоваяСтрока.ШтрихКод = Формат(Строка.ГоденДо, "ДФ=""ддММггЧЧ""");
			КонецЕсли;
		КонецЦикла;
		
	КонецЦикла;
	
	Возврат ПоместитьВоВременноеХранилище(СерииНоменклатуры);;	
КонецФункции

////////////////////////////////////////////////////////////////////////////////
// Генерация серий

&НаСервере
Функция ВычислитьМаксимальныйНомерИКоличество(ВидНоменклатуры,Упаковка,Количество)
	
	Номер = Справочники.СерииНоменклатуры.ВычислитьМаксимальныйНомерСерии(ВидНоменклатуры,Объект.Серии.Выгрузить());
	
	СтруктураДействий = Новый Структура;
	СтруктураДействий.Вставить("ПересчитатьКоличествоЕдиниц");
	
	ТекущаяСтрока = Новый Структура;
	ТекущаяСтрока.Вставить("Упаковка",Упаковка);
	ТекущаяСтрока.Вставить("Количество",Количество);
	ТекущаяСтрока.Вставить("КоличествоУпаковок",Количество);
	
	ОбработкаТабличнойЧастиСервер.ОбработатьСтрокуТЧ(ТекущаяСтрока, СтруктураДействий, Неопределено);

	Результат = Новый Структура();
	
	Результат.Вставить("Номер",Номер);
	Результат.Вставить("ТекущаяСтрока",ТекущаяСтрока);
	
	Возврат Результат;
КонецФункции


////////////////////////////////////////////////////////////////////////////////
// Прочее

&НаСервере
Функция СохранитьВводСерийСервер()
	
	Если Объект.Серии.Количество() > 0 Тогда
		ПоследняяСтрока = Объект.Серии[Объект.Серии.Количество()-1];
		Если Не ЗначениеЗаполнено(ПоследняяСтрока.Серия)
			И Не ЗначениеЗаполнено(ПоследняяСтрока.Номер)
			И Не ЗначениеЗаполнено(ПоследняяСтрока.ГоденДо)
			И (ПоследняяСтрока.КоличествоУпаковок = 1
			Или ПоследняяСтрока.КоличествоУпаковок = 0) Тогда
			
			Объект.Серии.Удалить(ПоследняяСтрока);
		КонецЕсли;
	КонецЕсли;
	
	Объект.ПараметрыПроверки = ПараметрыУчетнойПолитикиСерий;
	
	Если Не ПроверитьЗаполнение() Тогда
		Возврат Ложь;
	КонецЕсли;	
	
	ТаблицаВозврата = Новый ТаблицаЗначений;
	ТаблицаВозврата.Колонки.Добавить("Серия",Новый ОписаниеТипов("СправочникСсылка.СерииНоменклатуры"));
	ТаблицаВозврата.Колонки.Добавить("Количество",Новый ОписаниеТипов("Число",Новый КвалификаторыЧисла(15,3,ДопустимыйЗнак.Неотрицательный)));
	ТаблицаВозврата.Колонки.Добавить("КоличествоУпаковок",Новый ОписаниеТипов("Число",Новый КвалификаторыЧисла(15,3,ДопустимыйЗнак.Неотрицательный)));

	Для Каждого СтрТабл Из Объект.Серии Цикл
		
		Если СтрТабл.Количество > 0 Тогда
		
			Если Не ЗначениеЗаполнено(СтрТабл.Серия) Тогда
				
				СправочникОбъект                 = Справочники.СерииНоменклатуры.СоздатьЭлемент();
				СправочникОбъект.ВидНоменклатуры = ПараметрыУчетнойПолитикиСерий.ВидНоменклатуры;
				СправочникОбъект.Номер           = СтрТабл.Номер;
				СправочникОбъект.ГоденДо         = СтрТабл.ГоденДо;
				СправочникОбъект.Записать();
				
				СтрТабл.Серия = СправочникОбъект.Ссылка; 
			КонецЕсли;
			
			ЗаполнитьЗначенияСвойств(ТаблицаВозврата.Добавить(), СтрТабл);
			
		КонецЕсли;
	КонецЦикла;
	
	
	ПоместитьВоВременноеХранилище(ТаблицаВозврата,АдресВоВременномХранилище);
	Модифицированность = Ложь;
	
	Возврат Истина
КонецФункции

&НаКлиенте
Процедура ПодобратьСерию(Элемент,ВводимыйРеквизит,ПроверяемыйРеквизит)
	ТекущиеДанные = Элементы.Серии.ТекущиеДанные;
	
	ПараметрыПоиска = Новый Структура;
	ПараметрыПоиска.Вставить(ВводимыйРеквизит,ТекущиеДанные[ВводимыйРеквизит]);
	ПараметрыПоиска.Вставить(ПроверяемыйРеквизит,Неопределено);
	ПараметрыПоиска.Вставить("ВидНоменклатуры",ПараметрыУчетнойПолитикиСерий.ВидНоменклатуры);
	ПараметрыПоиска.Вставить("Отбор",Новый Структура);
	ПараметрыПоиска.Вставить("СтрокаПоиска ",Неопределено);
	
	СписокВыбора = ПолучитьДанныеВыбора(Тип("СправочникСсылка.СерииНоменклатуры"),ПараметрыПоиска);
	
	ВыбранныйЭлемент = Неопределено;
		
	Значение = Новый Структура;
	Значение.Вставить("Серия", Неопределено);
	Значение.Вставить("Номер",ТекущиеДанные.Номер);
	Значение.Вставить("ГоденДо",ТекущиеДанные.ГоденДо);
	
	Наименование = "<Новая>" + ТекущиеДанные.Номер + " " + Формат(ТекущиеДанные.ГоденДо,ПараметрыУчетнойПолитикиСерий.ФорматнаяСтрокаСрокаГодности);
	
	СписокВыбора.Вставить(0,Значение,Наименование);
		
	Если СписокВыбора.Количество() = 1 Тогда
		ВыбранныйЭлемент = СписокВыбора[0];
	ИначеЕсли СписокВыбора.Количество() = 2 Тогда
		Если СокрЛП(СписокВыбора[0].Значение.Номер) <> СокрЛП(СписокВыбора[1].Значение.Номер)
			Или (СписокВыбора[0].Значение.ГоденДо <> СписокВыбора[1].Значение.ГоденДо
			     И ЗначениеЗаполнено(СписокВыбора[0].Значение.ГоденДо))Тогда
			ВыбранныйЭлемент = ВыбратьИзСписка(СписокВыбора,Элемент);
		Иначе
			ВыбранныйЭлемент = СписокВыбора[1];
		КонецЕсли;
	ИначеЕсли СписокВыбора.Количество() > 0 Тогда
		ВыбранныйЭлемент = ВыбратьИзСписка(СписокВыбора,Элемент);
	КонецЕсли;
	
	Если ВыбранныйЭлемент <> Неопределено Тогда
		ТекущиеДанные.Серия         = ВыбранныйЭлемент.Значение.Серия; 
		ТекущиеДанные.Номер         = ВыбранныйЭлемент.Значение.Номер; 
		ТекущиеДанные.ГоденДо       = ВыбранныйЭлемент.Значение.ГоденДо;
	Иначе 
		ТекущиеДанные.Серия   = Неопределено; 
	КонецЕсли;
КонецПроцедуры

&НаКлиенте                             
Процедура ИзменитьСериюКлиент()
	ТекущиеДанные = Элементы.Серии.ТекущиеДанные;
	
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ЗначенияЗаполненияСерии = Новый Структура;
	ЗначенияЗаполненияСерии.Вставить("ВидНоменклатуры", ПараметрыУчетнойПолитикиСерий.ВидНоменклатуры);
	ЗначенияЗаполненияСерии.Вставить("Номер", ТекущиеДанные.Номер);
	ЗначенияЗаполненияСерии.Вставить("ГоденДо", ТекущиеДанные.ГоденДо);
	
	ПараметрыФормыСерии = Новый Структура;
	ПараметрыФормыСерии.Вставить("ЗначенияЗаполнения",ЗначенияЗаполненияСерии);
	ПараметрыФормыСерии.Вставить("Ключ",ТекущиеДанные.Серия);
	
	ОткрытьФормуМодально("Справочник.СерииНоменклатуры.Форма.ФормаЭлемента",ПараметрыФормыСерии, ЭтаФорма);
КонецПроцедуры

&НаКлиенте
Процедура ЗакрытьФормуПриСканировании()
	Закрыть(АдресВоВременномХранилище);
КонецПроцедуры

&НаСервере
Функция ОбъединитьСтроки(СтруктураПараметров,Идентификатор)
	
	Для Каждого Строка Из Объект.Серии Цикл
		
		Если Строка.Номер = СтруктураПараметров.Номер И 
			Строка.ГоденДо = СтруктураПараметров.ГоденДо И
			Строка.ПолучитьИдентификатор() <> Идентификатор  Тогда
			Строка.Количество = Строка.Количество + СтруктураПараметров.Количество;
			Строка.КоличествоУпаковок = Строка.КоличествоУпаковок + СтруктураПараметров.КоличествоУпаковок;
			Возврат Истина;	
		КонецЕсли;	
		
	КонецЦикла;	
	Возврат Ложь;
КонецФункции

&НаСервере
Процедура ОбновитьКартинкуПечати()
	Если ПечатьНаПринтер Тогда
		Элементы.ГруппаПечать.Картинка = БиблиотекаКартинок.ПечатьСразу;
	Иначе
	    Элементы.ГруппаПечать.Картинка = БиблиотекаКартинок.Печать;
	КонецЕсли;
КонецПроцедуры

&НаСервереБезКонтекста
Функция  РеквизитыСерии(Серия)
	
	Возврат ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Серия, "Номер,ГоденДо");
	
КонецФункции

