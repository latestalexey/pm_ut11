////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Параметры.ЗакрыватьПриВыборе = Истина;
	Параметры.ЗакрыватьПриЗакрытииВладельца = Ложь;
	ЗаполнитьЗначенияСвойств(ЭтаФорма, Параметры);
	ЭтапыГрафикаОплаты.Очистить();
	ИдентификаторВызывающейФормы = Параметры.УникальныйИдентификатор;
	ТолькоПросмотр = Параметры.ТолькоПросмотр;
	ИспользоватьОтрицательныеСуммыПлатежа = Параметры.ИспользоватьОтрицательныеСуммыПлатежа;
	ДобавитьКолонкуСуммаПлатежа();
	ЗаполнитьЭтапыОплатыИзВременногоХранилищаСервер(Параметры.АдресВоВременномХранилище);
	РассчитатьИтоговыеПоказатели(ЭтаФорма);
	УчитыватьВариантОплаты = Параметры.УчитыватьВариантОплаты;
	НеПроверятьКорректностьЭтаповОплаты = Параметры.НеПроверятьКорректностьЭтаповОплаты;
	
	Заголовок = ТекстЗаголовкаФормы(ГрафикОплаты, ЭтапыГрафикаОплаты.Количество());

	Если ТолькоПросмотр Тогда
		
		ОбщегоНазначенияУТКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "ЭтапыГрафикаОплаты", "ТолькоПросмотр", Истина);
		ОбщегоНазначенияУТКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "ЭтапыГрафикаОплатыЗаполнитьЭтапыГрафикаОплаты", "Доступность", Ложь);
		
	КонецЕсли;
	
	Если Не УчитыватьВариантОплаты Тогда
		ОбщегоНазначенияУТКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "ЭтапыОплатыВариантОплаты", "Видимость", Ложь);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытием(Отказ, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	Если Модифицированность И Не Готово Тогда
		
		СписокКнопок = Новый СписокЗначений();
		СписокКнопок.Добавить("Закрыть", НСтр("ru = 'Закрыть'"));
		СписокКнопок.Добавить("НеЗакрывать", НСтр("ru = 'Не закрывать'"));
		
		ОтветНаВопрос = Вопрос(НСтр("ru = 'Все измененные данные будут потеряны. Закрыть форму?'"), СписокКнопок);
		
		Если ОтветНаВопрос = "НеЗакрывать" Тогда
			Отказ = Истина;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ КОМАНД

&НаКлиенте
Процедура ЗаполнитьЭтапыГрафикаОплаты()
	
	СуммаЭтаповОплаты = ЭтапыГрафикаОплаты.Итог("СуммаПлатежа");
	
	ГрафикСоглашенияЗаполнен = ПродажиВызовСервера.ГрафикСоглашенияЗаполнен(Соглашение);
	ГрафикЗаполнен = ЗначениеЗаполнено(ГрафикОплаты);
	
	Если СуммаДокумента = 0 Тогда
		
		Если ЭтапыГрафикаОплаты.Количество() = 0 Тогда
			
			Предупреждение(НСтр("ru='Сумма заказанных строк нулевая. Заполнение этапов оплаты не требуется.'"));
			Возврат;
			
		КонецЕсли;
		
		ЭтапыГрафикаОплаты.Очистить();
		ЦенообразованиеКлиент.ОповеститьОНевозможностиЗаполненияЭтаповГрафикаОплаты();
		ПронумероватьТаблицуЭтапов();
		РассчитатьИтоговыеПоказатели(ЭтаФорма);
		Возврат;
		
	КонецЕсли;
	
	ВариантыОтветов = Новый СписокЗначений;
	ВариантыОтветов.Добавить(КодВозвратаДиалога.Да, НСтр("ru='Перезаполнить таблицу'"));
	ВариантыОтветов.Добавить(КодВозвратаДиалога.Отмена, НСтр("ru='Отменить'"));
	
	ЕстьВопросКПользователю = Истина;
	ТекстВопроса = "";
	ПерезаполнитьЭтапы = Ложь;
	РаспределитьСумму = Ложь;
	
	Если СуммаДокумента = СуммаЭтаповОплаты Тогда
		
		ТекстВопроса = НСтр("ru='Сумма заказанных строк совпадает с суммой этапов оплаты'") + Символы.ПС +
							НСтр("ru='Перезаполнить этапы оплаты %ИсточникЗаполнения%?'");
		
	ИначеЕсли ЭтапыГрафикаОплаты.Количество() > 0 Тогда
		
		ВариантыОтветов.Вставить(1, КодВозвратаДиалога.Нет, НСтр("ru='Распределить сумму'"));
		
		ТекстВопроса = НСтр("ru='Таблица этапов оплаты заполнена'")+ Символы.ПС +
							НСтр("ru='Перезаполнить этапы оплаты %ИсточникЗаполнения% или распределить сумму по имеющимся этапам?'");
		
	Иначе
		
		ПерезаполнитьЭтапы = Истина;
		ЕстьВопросКПользователю = Ложь;
		
	КонецЕсли;
	
	Если ЕстьВопросКПользователю Тогда
		
		Если ГрафикСоглашенияЗаполнен Тогда
			ТекстВопроса = СтрЗаменить(ТекстВопроса, "%ИсточникЗаполнения%", НСтр("ru='по соглашению'"));
		ИначеЕсли ГрафикЗаполнен Тогда
			ТекстВопроса = СтрЗаменить(ТекстВопроса, "%ИсточникЗаполнения%", НСтр("ru='по графику'"));
		Иначе
			ТекстВопроса = СтрЗаменить(ТекстВопроса, "%ИсточникЗаполнения%", НСтр("ru='по умолчанию'"));
		КонецЕсли;
		
		ОтветНаВопрос = Вопрос(ТекстВопроса, ВариантыОтветов);
		
		Если ОтветНаВопрос = КодВозвратаДиалога.Да Тогда
			ПерезаполнитьЭтапы = Истина;
		ИначеЕсли ОтветНаВопрос = КодВозвратаДиалога.Нет Тогда
			РаспределитьСумму = Истина;
		Иначе
			Возврат;
		КонецЕсли;
		
	КонецЕсли;
	
	Если ПерезаполнитьЭтапы Тогда
		
		Если ГрафикСоглашенияЗаполнен Тогда
			
			ЗаполнитьЭтапыОплатыПоСоглашениюСервер();
			ЦенообразованиеКлиент.ОповеститьОбОкончанииЗаполненияЭтаповГрафикаОплаты();
			
		ИначеЕсли ГрафикЗаполнен Тогда
			
			ЗаполнитьЭтапыОплатыПоГрафикуСервер();
			ЦенообразованиеКлиент.ОповеститьОбОкончанииЗаполненияЭтаповГрафикаОплаты();
			
		Иначе
			
			Если ЖелаемаяДатаОтгрузкиКорректна() Тогда
				
				ЦенообразованиеКлиент.ДобавитьЭтапОплатыПоУмолчанию(
					ЭтапыГрафикаОплаты,
					ЖелаемаяДатаОтгрузки,
					СуммаДокумента,
					?(УчитыватьВариантОплаты, ПредопределенноеЗначение("Перечисление.ВариантыОплатыКлиентом.ПредоплатаДоОтгрузки"), Неопределено)
				);
				ЦенообразованиеКлиент.ОповеститьОбОкончанииЗаполненияЭтаповГрафикаОплаты();
				
			Иначе
				Возврат;
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЕсли;
	
	Если РаспределитьСумму Тогда
		
		ЦенообразованиеКлиентСервер.РаспределитьСуммуПоЭтапамГрафикаОплаты(ЭтапыГрафикаОплаты, СуммаДокумента);
		ЦенообразованиеКлиент.ОповеститьОбОкончанииЗаполненияЭтаповГрафикаОплаты();
		
	КонецЕсли;
	
	ПронумероватьТаблицуЭтапов();
	РассчитатьИтоговыеПоказатели(ЭтаФорма);
	Заголовок = ТекстЗаголовкаФормы(ГрафикОплаты, ЭтапыГрафикаОплаты.Количество());

Конецпроцедуры

&НаКлиенте
Процедура ОК(Команда)
	
	ОчиститьСообщения();
	
	Если ТолькоПросмотр Тогда
		
		Закрыть();
		
	ИначеЕсли ОплатаКорректна() Тогда
		
		Готово = Истина;
		СтруктураОбъекта = Новый Структура();
		СтруктураОбъекта.Вставить("АдресВоВременномХранилище", ПоместитьВоВременноеХранилищеНаСервере());
		
		Закрыть(СтруктураОбъекта);
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура Отмена(Команда)
	
	Закрыть();
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ ТАБЛИЦЫ ФОРМЫ ЭТАПЫ ГРАФИКА ОПЛАТЫ

&НаКлиенте
Процедура ЭтапыГрафикаОплатыПослеУдаления(Элемент)
	
	ПронумероватьТаблицуЭтапов();
	РассчитатьИтоговыеПоказатели(ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура ЭтапыГрафикаОплатыПриОкончанииРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования)
	
	СортироватьЭтапыОплаты();
	ПронумероватьТаблицуЭтапов();
	РассчитатьИтоговыеПоказатели(ЭтаФорма);

КонецПроцедуры

&НаКлиенте
Процедура ЭтапыГрафикаОплатыПроцентПлатежаПриИзменении(Элемент)

	ЦенообразованиеКлиент.ЭтапыГрафикаОплатыПроцентПлатежаПриИзменении(
		Элементы.ЭтапыГрафикаОплаты.ТекущиеДанные,
		ЭтапыГрафикаОплаты,
		СуммаДокумента
	);

КонецПроцедуры

&НаКлиенте
Процедура ЭтапыГрафикаОплатыСуммаПлатежаПриИзменении(Элемент)

	ЦенообразованиеКлиент.ЭтапыГрафикаОплатыСуммаПлатежаПриИзменении(
		Элементы.ЭтапыГрафикаОплаты.ТекущиеДанные,
		ЭтапыГрафикаОплаты,
		СуммаДокумента
	);

КонецПроцедуры

&НаКлиенте
Процедура ЭтапыГрафикаОплатыПриИзменении(Элемент)
	
	Заголовок = ТекстЗаголовкаФормы(ГрафикОплаты, ЭтапыГрафикаОплаты.Количество());
	ПронумероватьТаблицуЭтапов();
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

////////////////////////////////////////////////////////////////////////////////
// График оплаты

&НаСервере
Процедура ЗаполнитьЭтапыОплатыПоСоглашениюСервер()
	
	ПараметрыЗаполнения = Новый Структура;
	ПараметрыЗаполнения.Вставить("ГрафикОплаты", ГрафикОплаты);
	ПараметрыЗаполнения.Вставить("ФормаОплаты", ФормаОплаты);
	ПараметрыЗаполнения.Вставить("ЭтапыГрафикаОплаты", ЭтапыГрафикаОплаты);
	ПараметрыЗаполнения.Вставить("Дата", Дата);
	ПараметрыЗаполнения.Вставить("ЖелаемаяДатаОтгрузки", ЖелаемаяДатаОтгрузки);
	ПараметрыЗаполнения.Вставить("Соглашение", Соглашение);

	ПродажиСервер.ЗаполнитьЭтапыГрафикаОплатыПоСоглашению(ПараметрыЗаполнения, СуммаДокумента);
	
КонецПроцедуры

&НаКлиенте
Функция ЖелаемаяДатаОтгрузкиКорректна()
	
	ДатаДокумента = НачалоДня(Дата);
		
	Если ЗначениеЗаполнено(ЖелаемаяДатаОтгрузки) И ЖелаемаяДатаОтгрузки < ДатаДокумента Тогда
			
		ТекстВопроса = НСтр("ru='Желаемая дата отгрузки меньше даты документа. Необходимо ввести корректную желаемую дату.'");
		ОтветНаВопрос = Вопрос(ТекстВопроса, РежимДиалогаВопрос.ОКОтмена);
		
		Если ОтветНаВопрос = КодВозвратаДиалога.Отмена Тогда
			Возврат Ложь;
		КонецЕсли;
			
		ЖелаемаяДата  = ДатаДокумента;
		
		Если Не РаботаСДиалогамиКлиент.ВвестиДатуСКонтролемПустогоЗначения(ЖелаемаяДата, НСтр("ru='Введите желаемую дату отгрузки'"), ЧастиДаты.Дата) Тогда
			Возврат Ложь;
		КонецЕсли;
			
		Если ЖелаемаяДата < ДатаДокумента Тогда
			Предупреждение( НСтр("ru='Желаемая дата отгрузки меньше даты документа. Этапы оплаты не могут быть заполнены.'"));
			Возврат Ложь;
		Иначе
			ЖелаемаяДатаОтгрузки = ЖелаемаяДата;
			Возврат Истина;
		КонецЕсли;
		
	Иначе
		
		Возврат Истина;
		
	КонецЕсли;
		
КонецФункции

&НаСервере
Функция ОплатаКорректна()
	
	Отказ = Ложь;
	Если Не НеПроверятьКорректностьЭтаповОплаты Тогда
		СтруктураПараметров = Новый Структура;
		СтруктураПараметров.Вставить("ЖелаемаяДатаОтгрузки", ЖелаемаяДатаОтгрузки);
		СтруктураПараметров.Вставить("Дата", Дата);
		СтруктураПараметров.Вставить("Валюта", Валюта);
		ПродажиСервер.ПроверитьКорректностьЭтаповГрафикаОплатыПоТаблицеЗначений(ЭтапыГрафикаОплаты, СуммаДокумента, УчитыватьВариантОплаты, Отказ, , СтруктураПараметров);
	КонецЕсли;
	Возврат Не Отказ;
	
КонецФункции

&НаСервере
Процедура ЗаполнитьЭтапыОплатыПоГрафикуСервер()
	
	ПараметрыЗаполнения = Новый Структура;
	ПараметрыЗаполнения.Вставить("ГрафикОплаты", ГрафикОплаты);
	ПараметрыЗаполнения.Вставить("ФормаОплаты", ФормаОплаты);
	ПараметрыЗаполнения.Вставить("ЭтапыГрафикаОплаты", ЭтапыГрафикаОплаты);
	ПараметрыЗаполнения.Вставить("Дата", Дата);
	ПараметрыЗаполнения.Вставить("ЖелаемаяДатаОтгрузки", ЖелаемаяДатаОтгрузки);

	ПродажиСервер.ЗаполнитьЭтапыГрафикаОплаты(ПараметрыЗаполнения, СуммаДокумента);
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьЭтапыОплатыИзВременногоХранилищаСервер(АдресВоВременномХранилище)
	
	ЭтапыОплаты = ПолучитьИзВременногоХранилища(АдресВоВременномХранилище);
	
	Для Каждого ТекСтрока Из ЭтапыОплаты Цикл
		НоваяСтрока = ЭтапыГрафикаОплаты.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, ТекСтрока);
	КонецЦикла;
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// Прочее

&НаСервере
Функция ПоместитьВоВременноеХранилищеНаСервере()
	
	Возврат ПоместитьВоВременноеХранилище(ЭтапыГрафикаОплаты.Выгрузить(), ИдентификаторВызывающейФормы);
	
КонецФункции

&НаКлиентеНаСервереБезКонтекста
Процедура РассчитатьИтоговыеПоказатели(Форма)
	
	ПредыдущееЗначениеДаты = Дата(1,1,1);
	Форма.НомерСтрокиПолнойОплаты = 0;
	ПроцентПлатежейОбщий = 0;
	
	СоответствиеВариантовОплаты = Новый Соответствие;
	СоответствиеВариантовОплаты.Вставить(ПредопределенноеЗначение("Перечисление.ВариантыОплатыКлиентом.АвансДоОбеспечения"),
		Новый Структура("Сумма, Проценты", "СуммаАвансаДоОбеспечения", "ПроцентАвансаДоОбеспечения")
	);
	СоответствиеВариантовОплаты.Вставить(ПредопределенноеЗначение("Перечисление.ВариантыОплатыКлиентом.ПредоплатаДоОтгрузки"),
		Новый Структура("Сумма, Проценты", "СуммаПредоплатыДоОтгрузки", "ПроцентПредоплатыДоОтгрузки")
	);
	СоответствиеВариантовОплаты.Вставить(ПредопределенноеЗначение("Перечисление.ВариантыОплатыКлиентом.КредитПослеОтгрузки"),
		Новый Структура("Сумма, Проценты", "СуммаКредитаПослеОтгрузки", "ПроцентКредитаПослеОтгрузки")
	);
	
	Для Каждого ТекСтрока Из Форма.ЭтапыГрафикаОплаты Цикл
		ПроцентПлатежейОбщий = ПроцентПлатежейОбщий + ТекСтрока.ПроцентПлатежа;
		ТекСтрока.ПроцентЗаполненНеВерно = (ПроцентПлатежейОбщий > 100);
		ТекСтрока.ДатаЗаполненаНеВерно = (ПредыдущееЗначениеДаты > ТекСтрока.ДатаПлатежа);
		ПредыдущееЗначениеДаты = ТекСтрока.ДатаПлатежа;
		Если ПроцентПлатежейОбщий = 100 Тогда
			Форма.НомерСтрокиПолнойОплаты = ТекСтрока.НомерСтроки;
		КонецЕсли;
		ИменаЭлементов = СоответствиеВариантовОплаты[ТекСтрока.ВариантОплаты];
		Если ИменаЭлементов <> Неопределено Тогда
			Форма[ИменаЭлементов.Сумма] = Форма[ИменаЭлементов.Сумма] + ТекСтрока.СуммаПлатежа;
			Форма[ИменаЭлементов.Проценты] = Форма[ИменаЭлементов.Проценты] + ТекСтрока.ПроцентПлатежа;
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Функция ТекстЗаголовкаФормы(ГрафикОплаты, КоличествоЭтаповОплаты)
	
	Если КоличествоЭтаповОплаты > 0 Тогда
		Если ЗначениеЗаполнено(ГрафикОплаты) Тогда
			ТекстЗаголовка = НСтр("ru = 'Этапы оплаты (%КоличествоЭтаповОплаты%) - %ГрафикОплаты%'");
		Иначе
			ТекстЗаголовка = НСтр("ru = 'Этапы оплаты (%КоличествоЭтаповОплаты%)'");
		КонецЕсли;
	Иначе
		Если ЗначениеЗаполнено(ГрафикОплаты) Тогда
			ТекстЗаголовка = НСтр("ru = 'Этапы оплаты - %ГрафикОплаты%'");
		Иначе
			ТекстЗаголовка = НСтр("ru = 'Этапы оплаты'");
		КонецЕсли;
	КонецЕсли;
	
	ТекстЗаголовка = СтрЗаменить(ТекстЗаголовка, "%ГрафикОплаты%", ГрафикОплаты);
	ТекстЗаголовка = СтрЗаменить(ТекстЗаголовка, "%КоличествоЭтаповОплаты%", КоличествоЭтаповОплаты);
	
	Возврат ТекстЗаголовка;
	
КонецФункции

&НаСервере
Процедура СортироватьЭтапыОплаты()
	Если УчитыватьВариантОплаты Тогда
		АдресВоВременномХранилище = ПоместитьВоВременноеХранилищеНаСервере();
		ЭтапыГрафикаОплаты.Загрузить(ВзаиморасчетыСервер.СортироватьЭтапыОплатыКлиентом(АдресВоВременномХранилище));
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ПронумероватьТаблицуЭтапов()
	НомерСтроки = 1;
	Для каждого СтрокаТаблицы Из ЭтапыГрафикаОплаты Цикл
		СтрокаТаблицы.НомерСтроки = НомерСтроки;
		НомерСтроки = НомерСтроки + 1;
	КонецЦикла;
КонецПроцедуры

&НаСервере
Процедура ДобавитьКолонкуСуммаПлатежа()
	
	ЭтапыГрафикаОплатыЗначение = РеквизитФормыВЗначение("ЭтапыГрафикаОплаты");
	ЭтапыГрафикаОплатыЗначение.Колонки.Добавить("СуммаПлатежа", Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(15, 2, 
										?(ИспользоватьОтрицательныеСуммыПлатежа, ДопустимыйЗнак.Любой, ДопустимыйЗнак.Неотрицательный))));
										
	ДобавляемыеКолонки = Новый Массив();
	ДобавляемыеКолонки.Добавить(Новый РеквизитФормы("СуммаПлатежа", Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(15, 2, 
										?(ИспользоватьОтрицательныеСуммыПлатежа, ДопустимыйЗнак.Любой, ДопустимыйЗнак.Неотрицательный))),
										"ЭтапыГрафикаОплаты", "СуммаПлатежа", Истина));
	ИзменитьРеквизиты(ДобавляемыеКолонки,);
	ЗначениеВРеквизитФормы(ЭтапыГрафикаОплатыЗначение, "ЭтапыГрафикаОплаты");
	
	НовоеПоле = Элементы.Добавить("ЭтапыГрафикаОплатыСуммаПлатежа", Тип("ПолеФормы"),Элементы.ЭтапыГрафикаОплаты);
	НовоеПоле.ПутьКДанным         = "ЭтапыГрафикаОплаты.СуммаПлатежа";
	НовоеПоле.РежимРедактирования = РежимРедактированияКолонки.ВходПриВводе;
	НовоеПоле.Вид                 = ВидПоляФормы.ПолеВвода;
	НовоеПоле.ТолькоПросмотр      = ТолькоПросмотр;
	НовоеПоле.УстановитьДействие("ПриИзменении","ЭтапыГрафикаОплатыСуммаПлатежаПриИзменении");
	НовоеПоле.Заголовок = "Сумма платежа";
	НовоеПоле.Видимость = Истина;
	
КонецПроцедуры