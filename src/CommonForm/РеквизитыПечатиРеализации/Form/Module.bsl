////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	МассивЭлементов = Новый Массив();
	ЗаполнитьЗначенияСвойств(ЭтаФорма, Параметры,,"ЗакрыватьПриВыборе,ЗакрыватьПриЗакрытииВладельца,КлючНазначенияИспользования");
	
	Если ТолькоПросмотр Тогда
		
		СтруктураПараметров = ИзменяемыеРеквизиты(Параметры);
		МассивЭлементов = Новый Массив();
		
		Для Каждого ЭлементСтруктуры из СтруктураПараметров Цикл
			МассивЭлементов.Добавить(ЭлементСтруктуры.Ключ);
		КонецЦикла;
		
		ОбщегоНазначенияУТКлиентСервер.УстановитьСвойствоЭлементовФормы(Элементы, МассивЭлементов, "ТолькоПросмотр", Истина);
		
	КонецЕсли;
	
	Если Параметры.НеПоказыватьРеквизиты <> Неопределено Тогда
		ОбщегоНазначенияУТКлиентСервер.УстановитьСвойствоЭлементовФормы(Элементы, Параметры.НеПоказыватьРеквизиты, "Видимость", Ложь);
	КонецЕсли;
	
	Если Параметры.ТипОбъекта = "ВозвратТоваровМеждуОрганизациями"
		Или Параметры.ТипОбъекта = "ПередачаТоваровМеждуОрганизациями" Тогда
		ОбщегоНазначенияУТКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "БанковскийСчетОрганизацииПолучателя", "Видимость", Параметры.РасчетыЧерезОрганизацию);
		ОбщегоНазначенияУТКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "БанковскийСчетКонтрагента", "Видимость", Не Параметры.РасчетыЧерезОрганизацию);
	КонецЕсли;
	
		Если Не ПолучитьФункциональнуюОпцию("ИспользоватьТТН") 
		Или Не Параметры.ПоказыватьРеквизитыТТН Тогда
		ОбщегоНазначенияУТКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "ГруппаТТН", "Видимость", Ложь);
	Иначе
		Заголовок = НСтр("ru='Реквизиты печати ТТН'");
		Если Параметры.ИспользуетсяДоставка Тогда
			АвтомобильНадпись = НСтр("ru = '<указывается в задании на перевозку>'");
			ВодительНадпись   = НСтр("ru = '<указывается в задании на перевозку>'");
			ОбщегоНазначенияУТКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "Автомобиль", "Видимость", Ложь);
			ОбщегоНазначенияУТКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "Водитель", "Видимость", Ложь);
		Иначе
			ОбщегоНазначенияУТКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "АвтомобильНадпись", "Видимость", Ложь);
			ОбщегоНазначенияУТКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "ВодительНадпись", "Видимость", Ложь);
		КонецЕсли;
	КонецЕсли;
	
	Если ПолучитьФункциональнуюОпцию("ИспользоватьУправлениеДоставкой") Тогда
		ОбщегоНазначенияУТКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "АдресДоставки", "Видимость", Ложь);
		ОбщегоНазначенияУТКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "ДекорацияОтступПечатьЛево", "Видимость", Ложь);
		Если ЗначениеЗаполнено(ПеревозчикПартнер) Тогда
			НоваяСвязь = Новый СвязьПараметраВыбора("Отбор.Партнер", "ПеревозчикПартнер");
			НовыйМассив = Новый Массив();
			НовыйМассив.Добавить(НоваяСвязь);
			НовыеСвязи = Новый ФиксированныйМассив(НовыйМассив);
			Элементы.Перевозчик.СвязиПараметровВыбора = НовыеСвязи;
			Перевозчик = ПартнерыИКонтрагенты.ПолучитьКонтрагентаПартнераПоУмолчанию(ПеревозчикПартнер);
			Если ЗначениеЗаполнено(Перевозчик) Тогда
				ПеревозчикПриИзмененииСервер();
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
		
КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытием(Отказ, СтандартнаяОбработка)
	
	Если Модифицированность И Не СохранитьПараметры Тогда
		
		СписокКнопок = Новый СписокЗначений();
		СписокКнопок.Добавить("Закрыть", НСтр("ru = 'Закрыть'"));
		СписокКнопок.Добавить("НеЗакрывать", НСтр("ru = 'Не закрывать'"));
		
		ОтветНаВопрос = Вопрос(НСтр("ru = 'Реквизиты печати реализации товаров и услуг были изменены. Закрыть форму без сохранения реквизитов?'"), СписокКнопок);
		
		Если ОтветНаВопрос = "НеЗакрывать" Тогда
			Отказ = Истина;
			СохранитьПараметры = Ложь;
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриЗакрытии()
	
	Если СохранитьПараметры Тогда
		
		СтруктураПараметров = ИзменяемыеРеквизиты(ЭтаФорма);
		ОповеститьОВыборе(СтруктураПараметров);
		
	КонецЕсли;
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ ШАПКИ ФОРМЫ

&НаКлиенте
Процедура ОснованиеПриИзменении(Элемент)
	
	Если ЗначениеЗаполнено(ОбъектОснование) Тогда
		ОснованиеИзменено = (СокрЛП(Основание) <> СокрЛП(ОбъектОснование));
	Иначе
		ОснованиеИзменено = Ложь;
	КонецЕсли;
	ОбъектОснование = Основание;
	
КонецПроцедуры

&НаКлиенте
Процедура ОснованиеНачалоВыбораИзСписка(Элемент, СтандартнаяОбработка)
	
	Элемент.СписокВыбора.Очистить();
	Для Каждого ЗначениеОснования Из ПолучитьСписокВыбораОснования() Цикл
		Элемент.СписокВыбора.Добавить(ЗначениеОснования.Значение);
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Функция ПолучитьСписокВыбораОснования()
	
	Если ТипОбъекта = "ПомощникПродаж" Тогда
		Возврат Обработки.ПомощникПродаж.ПолучитьСписокВыбораОснованияДляПечати(Новый Структура("ХозяйственнаяОперация,Договор", ХозяйственнаяОперация, Договор));
	ИначеЕсли ТипОбъекта = "РеализацияТоваровУслуг" Тогда
		Объект = ПолучитьИзВременногоХранилища(АдресОбъектаВоВременномХранилище);
		Возврат Документы.РеализацияТоваровУслуг.ПолучитьСписокВыбораОснованияДляПечати(Объект);
	ИначеЕсли ТипОбъекта = "ВыкупВозвратнойТарыКлиентом" Тогда
		Объект = ПолучитьИзВременногоХранилища(АдресОбъектаВоВременномХранилище);
		Возврат Документы.ВыкупВозвратнойТарыКлиентом.ПолучитьСписокВыбораОснованияДляПечати(Объект);
	ИначеЕсли ТипОбъекта = "КорректировкаРеализации" Тогда
		Объект = ПолучитьИзВременногоХранилища(АдресОбъектаВоВременномХранилище);
		Возврат Документы.КорректировкаРеализации.ПолучитьСписокВыбораОснованияДляПечати(Объект);
	ИначеЕсли ТипОбъекта = "РеализацияУслугПрочихАктивов" Тогда
		Объект = ПолучитьИзВременногоХранилища(АдресОбъектаВоВременномХранилище);
		Возврат Документы.РеализацияУслугПрочихАктивов.ПолучитьСписокВыбораОснованияДляПечати(Объект);
	КонецЕсли;
	
КонецФункции

&НаКлиенте
Процедура АдресДоставкиНачалоВыбораИзСписка(Элемент, СтандартнаяОбработка)
	
	ПродажиКлиент.ЗаполнитьСписокВыбораАдреса(Элемент, Партнер);
	
КонецПроцедуры

&НаКлиенте
Процедура ГрузоотправительПриИзменении(Элемент)
	
	Если ЗначениеЗаполнено(Грузоотправитель) Тогда
		БанковскийСчетГрузоотправителя = ПолучитьБанковскийСчетКонтрагентаПоУмолчаниюСервер(Грузоотправитель);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ГрузополучательПриИзменении(Элемент)
	
	Если ЗначениеЗаполнено(Грузополучатель) Тогда
		БанковскийСчетГрузополучателя = ПолучитьБанковскийСчетКонтрагентаПоУмолчаниюСервер(Грузополучатель);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПеревозчикПриИзменении(Элемент)
	
	ПеревозчикПриИзмененииСервер();
	
КонецПроцедуры

&НаКлиенте
Процедура АвтомобильПриИзменении(Элемент)
	
	АвтомобильПриИзмененииСервер();
	
КонецПроцедуры

&НаКлиенте
Процедура АвтомобильОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	Если ТипЗнч(ВыбранноеЗначение) = Тип("Строка") Тогда
		
		СтандартнаяОбработка = Ложь;
		СтруктураОснования = Новый Структура;
		СтруктураОснования.Вставить("Код",ВыбранноеЗначение);
		СтруктураОснования.Вставить("Наименование",ВыбранноеЗначение);
		
		Форма = ПолучитьФорму("Справочник.ТранспортныеСредства.ФормаОбъекта", Новый Структура("Основание, ИспользоватьВДоставке", СтруктураОснования, Ложь));
		Форма.ОткрытьМодально();
		
		Автомобиль = Форма.Объект.Ссылка;
		
		Модифицированность = Истина;
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура АвтомобильАвтоПодбор(Элемент, Текст, ДанныеВыбора, Ожидание, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	ПараметрыПодбора = Новый Структура("Отбор,СтрокаПоиска,ВыборГруппИЭлементов");
	ПараметрыПодбора.СтрокаПоиска = Текст;
	
	ДанныеВыбора = ПолучитьДанныеВыбора(Тип("СправочникСсылка.ТранспортныеСредства"), ПараметрыПодбора);
	ДанныеВыбора.Вставить(0,Текст, НСтр("ru = '<Создать новый>'"));
	
КонецПроцедуры 

&НаКлиенте
Процедура ВодительОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	Если ТипЗнч(ВыбранноеЗначение) = Тип("Строка") Тогда
		
		СтандартнаяОбработка = Ложь;
		ПараметрыФормы = Новый Структура;
		ПараметрыФормы.Вставить("ВидДокумента", ПредопределенноеЗначение("Справочник.ВидыДокументовФизическихЛиц.ВодительскоеУдостоверение"));
		
		СтруктураОснования = Новый Структура;
		СтруктураОснования.Вставить("Наименование",ВыбранноеЗначение);
		
		ПараметрыФормы.Вставить("Основание", СтруктураОснования);
		
		Форма = ПолучитьФорму("Справочник.ФизическиеЛица.Форма.ФормаНового", ПараметрыФормы ,Элементы.Водитель);
		Форма.ОткрытьМодально();
		
		Водитель = Форма.ВозращаемаяСсылка;
		
		Модифицированность = Истина;
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ВодительАвтоПодбор(Элемент, Текст, ДанныеВыбора, Ожидание, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	ПараметрыПодбора = Новый Структура("Отбор,СтрокаПоиска,ВыборГруппИЭлементов");
	ПараметрыПодбора.СтрокаПоиска = Текст;
	
	ДанныеВыбора = ПолучитьДанныеВыбора(Тип("СправочникСсылка.ФизическиеЛица"), ПараметрыПодбора);
	ДанныеВыбора.Вставить(0,Текст, НСтр("ru = '<Создать новый>'"));
	
КонецПроцедуры

&НаКлиенте
Процедура АвтомобильОкончаниеВводаТекста(Элемент, Текст, ДанныеВыбора, СтандартнаяОбработка)
	
	Если ЗначениеЗаполнено(Текст) Тогда
		
		СтандартнаяОбработка = Ложь;
		ПараметрыПодбора = Новый Структура("Отбор,СтрокаПоиска,ВыборГруппИЭлементов");
		ПараметрыПодбора.СтрокаПоиска = Текст;
		
		ДанныеВыбора = ПолучитьДанныеВыбора(Тип("СправочникСсылка.ТранспортныеСредства"), ПараметрыПодбора);
		ДанныеВыбора.Вставить(0,Текст, НСтр("ru = '<Создать новый>'"));
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ВодительОкончаниеВводаТекста(Элемент, Текст, ДанныеВыбора, СтандартнаяОбработка)
	
	Если ЗначениеЗаполнено(Текст) Тогда
		
		СтандартнаяОбработка = Ложь;
		ПараметрыПодбора = Новый Структура("Отбор,СтрокаПоиска,ВыборГруппИЭлементов");
		ПараметрыПодбора.СтрокаПоиска = Текст;
		
		ДанныеВыбора = ПолучитьДанныеВыбора(Тип("СправочникСсылка.ФизическиеЛица"), ПараметрыПодбора);
		ДанныеВыбора.Вставить(0,Текст, НСтр("ru = '<Создать новый>'"));
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура АвтомобильНачалоВыбораИзСписка(Элемент, СтандартнаяОбработка)
	
	Если Элементы.Автомобиль.СписокВыбора.Количество() = 0 Тогда
		ЗаполнитьСписокАвтомобилейПоДругимДокументам();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ВодительНачалоВыбораИзСписка(Элемент, СтандартнаяОбработка)
	
	Если Элементы.Водитель.СписокВыбора.Количество() = 0 Тогда
		ЗаполнитьСпискокВодителейПоАвтомобилю();
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура АвтомобильПриИзмененииСервер()
	
	ЗаполнитьСпискокВодителейПоАвтомобилю();
	Водитель = ПоследнийВодитель();
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ КОМАНД ФОРМЫ

&НаКлиенте
Процедура ОК(Команда)
	
	Если Не ТолькоПросмотр Тогда
		СохранитьПараметры = Истина;
	КонецЕсли;
	
	Закрыть();
	
КонецПроцедуры

&НаКлиенте
Процедура Отмена(Команда)
	
	Закрыть();
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

////////////////////////////////////////////////////////////////////////////////
// Прочее

&НаКлиентеНаСервереБезКонтекста
Функция ИзменяемыеРеквизиты(Источник)                              
	
	СтруктураПараметров = Новый Структура();
	СтруктураПараметров.Вставить("АдресДоставки",                  Источник.АдресДоставки);
	СтруктураПараметров.Вставить("БанковскийСчетГрузоотправителя", Источник.БанковскийСчетГрузоотправителя);
	СтруктураПараметров.Вставить("БанковскийСчетГрузополучателя",  Источник.БанковскийСчетГрузополучателя);
	СтруктураПараметров.Вставить("БанковскийСчетКонтрагента",      Источник.БанковскийСчетКонтрагента);
	СтруктураПараметров.Вставить("БанковскийСчетОрганизацииПолучателя", Источник.БанковскийСчетОрганизацииПолучателя);
	СтруктураПараметров.Вставить("Грузоотправитель",               Источник.Грузоотправитель);
	СтруктураПараметров.Вставить("Грузополучатель",                Источник.Грузополучатель);
	СтруктураПараметров.Вставить("ДоверенностьВыдана",             Источник.ДоверенностьВыдана);
	СтруктураПараметров.Вставить("ДоверенностьДата",               Источник.ДоверенностьДата);
	СтруктураПараметров.Вставить("ДоверенностьЛицо",               Источник.ДоверенностьЛицо);
	СтруктураПараметров.Вставить("ДоверенностьНомер",              Источник.ДоверенностьНомер);
	СтруктураПараметров.Вставить("Основание",                      Источник.Основание);
	СтруктураПараметров.Вставить("Отпустил",                       Источник.Отпустил);
	СтруктураПараметров.Вставить("ОтпустилДолжность",              Источник.ОтпустилДолжность);
	СтруктураПараметров.Вставить("Перевозчик",                     Источник.Перевозчик);
	СтруктураПараметров.Вставить("БанковскийСчетПеревозчика",      Источник.БанковскийСчетПеревозчика);
	СтруктураПараметров.Вставить("СрокДоставки",                   Источник.СрокДоставки);
	СтруктураПараметров.Вставить("Автомобиль",                     Источник.Автомобиль);
	СтруктураПараметров.Вставить("Водитель",                       Источник.Водитель);
	СтруктураПараметров.Вставить("Руководитель",                   Источник.Руководитель);
	СтруктураПараметров.Вставить("ГлавныйБухгалтер",               Источник.ГлавныйБухгалтер);
	СтруктураПараметров.Вставить("БанковскийСчетОрганизации",      Источник.БанковскийСчетОрганизации);
	
	Возврат СтруктураПараметров;
	
КонецФункции

&НаСервереБезКонтекста
Функция ПолучитьБанковскийСчетКонтрагентаПоУмолчаниюСервер(Контрагент)
	
	Возврат ЗначениеНастроекПовтИсп.ПолучитьБанковскийСчетКонтрагентаПоУмолчанию(Контрагент);
	
КонецФункции

&НаСервере
Процедура ЗаполнитьСписокАвтомобилейПоДругимДокументам()
	
	Если ТипОбъекта = "РеализацияТоваровУслуг" Тогда
		
		Запрос = Новый Запрос;
		Запрос.Текст =
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	РеализацияТоваровУслуг.Автомобиль КАК Ссылка,
		|	РеализацияТоваровУслуг.Автомобиль.Наименование КАК Наименование
		|ИЗ
		|	Документ.РеализацияТоваровУслуг КАК РеализацияТоваровУслуг
		|ГДЕ
		|	РеализацияТоваровУслуг.Проведен
		|	И (Не РеализацияТоваровУслуг.Автомобиль.ПометкаУдаления)
		|	И РеализацияТоваровУслуг.Партнер = &Партнер
		|
		|УПОРЯДОЧИТЬ ПО
		|	РеализацияТоваровУслуг.Автомобиль.Наименование";
		
		Запрос.УстановитьПараметр("Партнер", Партнер);
		
	ИначеЕсли ТипОбъекта = "ПеремещениеТоваров" Тогда
		Запрос = Новый Запрос;
		Запрос.Текст =
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ПеремещениеТоваров.Автомобиль КАК Ссылка,
		|	ПеремещениеТоваров.Автомобиль.Наименование КАК Наименование
		|ИЗ
		|	Документ.ПеремещениеТоваров КАК ПеремещениеТоваров
		|ГДЕ
		|	ПеремещениеТоваров.Проведен
		|	И (НЕ ПеремещениеТоваров.Автомобиль.ПометкаУдаления)
		|
		|УПОРЯДОЧИТЬ ПО
		|	ПеремещениеТоваров.Автомобиль.Наименование";
		
	КонецЕсли;
	
	Элементы.Автомобиль.СписокВыбора.Очистить();
	
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		
		Элементы.Автомобиль.СписокВыбора.Добавить(Выборка.Ссылка, Выборка.Наименование);
		
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьСпискокВодителейПоАвтомобилю()
	
	Элементы.Водитель.СписокВыбора.Очистить();
	
	Если Не ЗначениеЗаполнено(Автомобиль) Тогда
		Возврат;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Если ТипОбъекта = "РеализацияТоваровУслуг" Тогда
		
		Запрос.Текст =
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
		|	РеализацияТоваровУслуг.Водитель КАК Ссылка,
		|	РеализацияТоваровУслуг.Водитель.Наименование КАК Наименование
		|ИЗ
		|	Документ.РеализацияТоваровУслуг КАК РеализацияТоваровУслуг
		|ГДЕ
		|	РеализацияТоваровУслуг.Автомобиль = &Автомобиль
		|	И РеализацияТоваровУслуг.Проведен
		|
		|УПОРЯДОЧИТЬ ПО
		|	Наименование";
	ИначеЕсли ТипОбъекта = "ПеремещениеТоваров" Тогда
		
		Запрос.Текст =
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
		|	ПеремещениеТоваров.Водитель КАК Ссылка,
		|	ПеремещениеТоваров.Водитель.Наименование КАК Наименование
		|ИЗ
		|	Документ.ПеремещениеТоваров КАК ПеремещениеТоваров
		|ГДЕ
		|	ПеремещениеТоваров.Автомобиль = &Автомобиль
		|	И ПеремещениеТоваров.Проведен
		|
		|УПОРЯДОЧИТЬ ПО
		|	Наименование";
	КонецЕсли;	
	
	Запрос.УстановитьПараметр("Автомобиль", Автомобиль);
	
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		
		Элементы.Водитель.СписокВыбора.Добавить(Выборка.Ссылка, Выборка.Наименование);
		
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Функция ПоследнийВодитель()
	
	Если Не ЗначениеЗаполнено(Автомобиль) Тогда
		Возврат Справочники.ФизическиеЛица.ПустаяСсылка();
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ ПЕРВЫЕ 1
	|	РеализацияТоваровУслуг.Водитель КАК Ссылка
	|ИЗ
	|	Документ.РеализацияТоваровУслуг КАК РеализацияТоваровУслуг
	|ГДЕ
	|	РеализацияТоваровУслуг.Автомобиль = &Автомобиль
	|	И РеализацияТоваровУслуг.Проведен
	|
	|УПОРЯДОЧИТЬ ПО
	|	РеализацияТоваровУслуг.Дата УБЫВ";
	
	Запрос.УстановитьПараметр("Автомобиль", Автомобиль);
	Выборка = Запрос.Выполнить().Выбрать();
	
	Если Выборка.Следующий() Тогда
		Возврат Выборка.Ссылка;
	Иначе
		Возврат Справочники.ФизическиеЛица.ПустаяСсылка();
	КонецЕсли;
	
КонецФункции

&НаСервере
Процедура ПеревозчикПриИзмененииСервер()
	
	БанковскийСчетПеревозчика = Справочники.БанковскиеСчетаКонтрагентов.ПолучитьБанковскийСчетПоУмолчанию(Перевозчик);
	
КонецПроцедуры


