
///////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)

	// Пропускаем инициализацию, чтобы гарантировать получение формы при передаче параметра "АвтоТест"
	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;
	КонецЕсли;

	Параметры.Свойство("Идентификатор", Идентификатор);
	Заголовок = НСтр("ru='ДП'") + " """ + Строка(Идентификатор) + """";

	ЦветТекста = ЦветаСтиля.ЦветТекстаФормы;
	ЦветОшибки = ЦветаСтиля.ЦветОтрицательногоЧисла;

	СпИнтерфейс = Элементы.Интерфейс.СписокВыбора;
  	СпИнтерфейс.Добавить(0,  "RS-232");
	СпИнтерфейс.Добавить(1,  "Ethernet");
	                                             
	СпПорт = Элементы.Порт.СписокВыбора;
	Для Номер = 1 По 32 Цикл
		СпПорт.Добавить(Номер, "COM" + Формат(Номер, "ЧЦ=2; ЧДЦ=0; ЧН=0; ЧГ=0"));
	КонецЦикла;

	СпСкорость = Элементы.Скорость.СписокВыбора;
	СпСкорость.Добавить(1200	, "1200");
	СпСкорость.Добавить(2400	, "2400");
	СпСкорость.Добавить(4800	, "4800");
	СпСкорость.Добавить(9600	, "9600");
	СпСкорость.Добавить(14400	, "14400");
	СпСкорость.Добавить(19200	, "19200");  

	времНаименование = Неопределено;
	времИнтерфейс	 = Неопределено;
	времПорт         = Неопределено;
	времСкорость     = Неопределено;
	времIPАдрес      = Неопределено;
	времIPПорт       = Неопределено;
	
	Параметры.Свойство("Интерфейс"     	, времИнтерфейс);
	Параметры.Свойство("Порт"     	 	, времПорт);
	Параметры.Свойство("Скорость"   	, времСкорость);
	Параметры.Свойство("IPАдрес"		, времIPАдрес);
	Параметры.Свойство("IPПорт"      	, времIPПорт);
	Параметры.Свойство("Наименование"	, времНаименование);
	
	Интерфейс    = ?(времИнтерфейс    = Неопределено, 0				, времИнтерфейс);
	Порт         = ?(времПорт         = Неопределено, 1				, времПорт);
	Скорость     = ?(времСкорость     = Неопределено, 9600			, времСкорость);
	IPАдрес		 = ?(времIPАдрес	  = Неопределено, "192.168.1.2"	, времIPАдрес);
	IPПорт		 = ?(времIPПорт       = Неопределено, 20304			, времIPПорт);
	Наименование = ?(времНаименование = Неопределено, "CAS CL5000J"	, времНаименование);

	Элементы.ТестУстройства.Видимость    = (ПараметрыСеанса.РабочееМестоКлиента
	                                        = Идентификатор.РабочееМесто);
	Элементы.УстановитьДрайвер.Видимость = (ПараметрыСеанса.РабочееМестоКлиента
	                                        = Идентификатор.РабочееМесто);

КонецПроцедуры

// Процедура - обработчик события "Перед открытием" формы.
//
// Параметры:
//  Отказ                - <Булево>
//                       - Признак отказа от открытия формы. Если в теле
//                         процедуры-обработчика установить данному параметру
//                         значение Истина, открытие формы выполнено не будет.
//                         Значение по умолчанию: Ложь 
//
//  СтандартнаяОбработка - <Булево>
//                       - В данный параметр передается признак выполнения
//                         стандартной (системной) обработки события. Если в
//                         теле процедуры-обработчика установить данному
//                         параметру значение Ложь, стандартная обработка
//                         события производиться не будет. Отказ от стандартной
//                         обработки не отменяет открытие формы.
//                         Значение по умолчанию: Истина 
//
&НаКлиенте
Процедура ПриОткрытии(Отказ)

	ОбновитьИнформациюОДрайвере();

КонецПроцедуры

///////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ ШАПКИ ФОРМЫ

&НаКлиенте
Процедура ИнтерфейсПриИзменении(Элемент)
	
	ПроверкаДоступности();

КонецПроцедуры

///////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ КОМАНД ФОРМЫ

// Процедура представляет обработчик события "Нажатие" кнопки
// "ОК" командной панели "ОсновныеДействияФормы".
//
// Параметры:
//  Кнопка - <КнопкаКоманднойПанели>
//         - Кнопка, с которой связано данное событие (кнопка "ОК").
//
&НаКлиенте
Процедура ЗаписатьИЗакрытьВыполнить()

	Параметры.ПараметрыНастройки.Добавить(Интерфейс   	, "Интерфейс");	
	Параметры.ПараметрыНастройки.Добавить(Порт        	, "Порт");
	Параметры.ПараметрыНастройки.Добавить(Скорость    	, "Скорость");
	Параметры.ПараметрыНастройки.Добавить(IPАдрес     	, "IPАдрес");
	Параметры.ПараметрыНастройки.Добавить(IPПорт      	, "IPПорт");
	Параметры.ПараметрыНастройки.Добавить(Наименование	, "Наименование");
	
	ОчиститьСообщения();
	Закрыть(КодВозвратаДиалога.ОК);

КонецПроцедуры

&НаКлиенте
Процедура УстановитьДрайвер(Команда)

	МенеджерОборудованияКлиент.УстановитьДрайвер(Идентификатор);

	ОбновитьИнформациюОДрайвере();

КонецПроцедуры

&НаКлиенте
Процедура ТестУстройства(Команда)

	РезультатТеста = Неопределено;

	ВходныеПараметры  = Неопределено;
	ВыходныеПараметры = Неопределено; 

	времПараметрыУстройства = Новый Структура();
	времПараметрыУстройства.Вставить("Интерфейс"   	, Интерфейс);
    времПараметрыУстройства.Вставить("Порт"      	, Порт);
	времПараметрыУстройства.Вставить("Скорость"   	, Скорость);
	времПараметрыУстройства.Вставить("IPАдрес"		, IPАдрес);
	времПараметрыУстройства.Вставить("IPПорт"      	, IPПорт);
	времПараметрыУстройства.Вставить("Наименование"	, Наименование);

	Результат = МенеджерОборудованияКлиент.ВыполнитьДополнительнуюКоманду("CheckHealth",
	                                                                      ВходныеПараметры,
	                                                                      ВыходныеПараметры,
	                                                                      Идентификатор,
	                                                                      времПараметрыУстройства);

	Если Результат Тогда
		ТекстСообщения = НСтр("ru = 'Тест успешно выполнен.'");
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения);
	Иначе
		ДополнительноеОписание = ?(ТипЗнч(ВыходныеПараметры) = Тип("Массив")
		                           И ВыходныеПараметры.Количество() >= 2,
		                           НСтр("ru = 'Дополнительное описание:'") + " " + ВыходныеПараметры[1],
		                           "");


		ТекстСообщения = НСтр("ru = 'Тест не пройден.%ПереводСтроки%%ДополнительноеОписание%'");
		ТекстСообщения = СтрЗаменить(ТекстСообщения, "%ПереводСтроки%", ?(ПустаяСтрока(ДополнительноеОписание),
		                                                                  "",
		                                                                  Символы.ПС));
		ТекстСообщения = СтрЗаменить(ТекстСообщения, "%ДополнительноеОписание%", ?(ПустаяСтрока(ДополнительноеОписание),
		                                                                           "",
		                                                                           ДополнительноеОписание));
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения);
	КонецЕсли;

КонецПроцедуры

///////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

&НаКлиенте
Процедура ОбновитьИнформациюОДрайвере()

	ВходныеПараметры  = Неопределено;
	ВыходныеПараметры = Неопределено;

	времПараметрыУстройства = Новый Структура();
	времПараметрыУстройства.Вставить("Интерфейс"   	, Интерфейс);
    времПараметрыУстройства.Вставить("Порт"      	, Порт);
	времПараметрыУстройства.Вставить("Скорость"   	, Скорость);
	времПараметрыУстройства.Вставить("IPАдрес"		, IPАдрес);
	времПараметрыУстройства.Вставить("IPПорт"      	, IPПорт);
	времПараметрыУстройства.Вставить("Наименование"	, Наименование);
		

	Если МенеджерОборудованияКлиент.ВыполнитьДополнительнуюКоманду("ПолучитьВерсиюДрайвера",
	                                                               ВходныеПараметры,
	                                                               ВыходныеПараметры,
	                                                               Идентификатор,
	                                                               времПараметрыУстройства) Тогда
		Драйвер = ВыходныеПараметры[0];
		Версия  = ВыходныеПараметры[1];
	Иначе
		Драйвер = ВыходныеПараметры[2];
		Версия  = НСтр("ru='Не определена'");
	КонецЕсли;

	Элементы.Драйвер.ЦветТекста = ?(Драйвер = НСтр("ru='Не установлен'"), ЦветОшибки, ЦветТекста);
	Элементы.Версия.ЦветТекста  = ?(Версия  = НСтр("ru='Не определена'"), ЦветОшибки, ЦветТекста);

	Элементы.УстановитьДрайвер.Доступность = Не (Драйвер = НСтр("ru='Установлен'"));
    ПроверкаДоступности();

КонецПроцедуры

&НаКлиенте
Процедура ПроверкаДоступности()

	Элементы.Порт.Доступность          = (Интерфейс = 0);
	Элементы.Скорость.Доступность      = (Интерфейс = 0);
	Элементы.IPадрес.Доступность       = Не (Интерфейс = 0);
	Элементы.IPПорт.Доступность        = Не (Интерфейс = 0);

КонецПроцедуры
