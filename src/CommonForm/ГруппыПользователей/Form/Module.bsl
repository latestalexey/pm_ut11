////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("АвтоТест") Тогда // Возврат при получении формы для анализа.
		Возврат;
	КонецЕсли;
	
	Если Параметры.Пользователь <> Неопределено Тогда
		МассивПользователей = Новый Массив;
		МассивПользователей.Добавить(Параметры.Пользователь);
		
		ВнешниеПользователи = ?(
			ТипЗнч(Параметры.Пользователь) = Тип("СправочникСсылка.ВнешниеПользователи"), Истина, Ложь);
		
		Элементы.ФормаЗаписатьИЗакрыть.Заголовок = НСтр("ru = 'Записать'");
		
		РежимОткрытияИзКарточкиПользователя = Истина;
		Элементы.ДеревоГруппПометка.ТриСостояния = Ложь;
	Иначе
		МассивПользователей = Параметры.Пользователи;
		ВнешниеПользователи = Параметры.ВнешниеПользователи;
		РежимОткрытияИзКарточкиПользователя = Ложь;
	КонецЕсли;
	
	КоличествоПользователей = МассивПользователей.Количество();
	Если КоличествоПользователей > 1
		И Параметры.Пользователь = Неопределено Тогда
		Заголовок = НСтр("ru = 'Группы пользователей'");
		Элементы.ДеревоГруппПометка.ТриСостояния = Истина;
	КонецЕсли;
	
	СписокПользователей = Новый Структура;
	СписокПользователей.Вставить("МассивПользователей", МассивПользователей);
	СписокПользователей.Вставить("КоличествоПользователей", КоличествоПользователей);
	ЗаполнитьДеревоГрупп();
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ТАБЛИЦЫ ФОРМЫ ДеревоГрупп

&НаКлиенте
Процедура ДеревоГруппВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	ОткрытьЗначение(Элемент.ТекущиеДанные.Группа);
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ КОМАНД ФОРМЫ

&НаКлиенте
Процедура ЗаписатьИЗакрыть(Команда)
	
	СообщениеПользователю = Неопределено;
	ЗаписатьИзменения(СообщениеПользователю);
	Оповестить("РазмещениеПользователейВГруппах");
	Если Не РежимОткрытияИзКарточкиПользователя Тогда
		Закрыть();
	КонецЕсли;
	
	Если СообщениеПользователю <> Неопределено Тогда
		ПоказатьОповещениеПользователя(
			НСтр("ru = 'Перемещение пользователей'"), , СообщениеПользователю, БиблиотекаКартинок.Информация32);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура СнятьФлажки(Команда)
	
	ЗаполнитьДеревоГрупп(Истина);
	РазвернутьДеревоЗначений();
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

&НаСервере
Процедура ЗаполнитьДеревоГрупп(ТолькоСнятьФлажки = Ложь)
	
	ДеревоГруппПриемник = РеквизитФормыВЗначение("ДеревоГрупп");
	
	Если ТолькоСнятьФлажки Тогда
		
		Найденные = ДеревоГруппПриемник.Строки.НайтиСтроки(Новый Структура("Пометка", 1), Истина);
		Для Каждого СтрокаДерева Из Найденные Цикл
			СтрокаДерева.Пометка = 0;
		КонецЦикла; 
		
		Найденные = ДеревоГруппПриемник.Строки.НайтиСтроки(Новый Структура("Пометка", 2), Истина);
		Для Каждого СтрокаДерева Из Найденные Цикл
			СтрокаДерева.Пометка = 0;
		КонецЦикла;
		
		ЗначениеВРеквизитФормы(ДеревоГруппПриемник, "ДеревоГрупп");
		Возврат;
	КонецЕсли;
	
	ГруппыПользователей = Неопределено;
	ПодчиненныеГруппы = Новый Массив;
	МассивРодителей = Новый Массив;
	
	Если ВнешниеПользователи Тогда
		ПустаяГруппа = Справочники.ГруппыВнешнихПользователей.ПустаяСсылка();
		ПолучитьГруппыВнешнихПользователей(ГруппыПользователей);
	Иначе
		ПустаяГруппа = Справочники.ГруппыПользователей.ПустаяСсылка();
		ПолучитьГруппыПользователей(ГруппыПользователей);
	КонецЕсли;
	
	ПолучитьПодчиненныеГруппы(ГруппыПользователей, ПодчиненныеГруппы, ПустаяГруппа);
	
	Если ТипЗнч(СписокПользователей.МассивПользователей[0]) = Тип("СправочникСсылка.Пользователи") Тогда
		ТипПользователя = "Пользователь";
	Иначе
		ТипПользователя = "ВнешнийПользователь";
	КонецЕсли;
	
	Пока ПодчиненныеГруппы.Количество() > 0 Цикл
		МассивРодителей.Очистить();
		
		Для Каждого Группа Из ПодчиненныеГруппы Цикл
			
			Если Группа.Родитель = ПустаяГруппа Тогда
				НоваяСтрокаГрупп = ДеревоГруппПриемник.Строки.Добавить();
				НоваяСтрокаГрупп.Группа = Группа.Ссылка;
				НоваяСтрокаГрупп.Картинка = 3;
				
				Если СписокПользователей.КоличествоПользователей = 1 Тогда
					НоваяСтрокаГрупп.Пометка = ?(Группа.Ссылка.Состав.Найти(
						СписокПользователей.МассивПользователей[0], ТипПользователя) = Неопределено, 0, 1);
				Иначе
					НоваяСтрокаГрупп.Пометка = 2;
				КонецЕсли;
				
			Иначе
				ГруппаРодитель = 
					ДеревоГруппПриемник.Строки.НайтиСтроки(Новый Структура("Группа", Группа.Родитель), Истина);
				НоваяСтрокаПодчиненныхГрупп = ГруппаРодитель[0].Строки.Добавить();
				НоваяСтрокаПодчиненныхГрупп.Группа = Группа.Ссылка;
				НоваяСтрокаПодчиненныхГрупп.Картинка = 3;
				
				Если СписокПользователей.КоличествоПользователей = 1 Тогда
					НоваяСтрокаПодчиненныхГрупп.Пометка = ?(Группа.Ссылка.Состав.Найти(
						СписокПользователей.МассивПользователей[0], ТипПользователя) = Неопределено, 0, 1);
				Иначе
					НоваяСтрокаПодчиненныхГрупп.Пометка = 2;
				КонецЕсли;
				
			КонецЕсли;
			
			МассивРодителей.Добавить(Группа.Ссылка);
		КонецЦикла;
		ПодчиненныеГруппы.Очистить();
		
		Для Каждого Элемент Из МассивРодителей Цикл
			ПолучитьПодчиненныеГруппы(ГруппыПользователей, ПодчиненныеГруппы, Элемент);
		КонецЦикла;
		
	КонецЦикла;
	
	ЗначениеВРеквизитФормы(ДеревоГруппПриемник, "ДеревоГрупп");
	
КонецПроцедуры

&НаСервере
Процедура ПолучитьГруппыПользователей(ГруппыПользователей)
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	ГруппыПользователей.Ссылка,
	|	ГруппыПользователей.Родитель
	|ИЗ
	|	Справочник.ГруппыПользователей КАК ГруппыПользователей";
	
	ГруппыПользователей = Запрос.Выполнить().Выгрузить();
	
КонецПроцедуры

&НаСервере
Процедура ПолучитьГруппыВнешнихПользователей(ГруппыПользователей)
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	ГруппыВнешнихПользователей.Ссылка,
	|	ГруппыВнешнихПользователей.Родитель
	|ИЗ
	|	Справочник.ГруппыВнешнихПользователей КАК ГруппыВнешнихПользователей";
	
	ГруппыПользователей = Запрос.Выполнить().Выгрузить();
	
КонецПроцедуры

&НаСервере
Процедура ПолучитьПодчиненныеГруппы(ГруппыПользователей, ПодчиненныеГруппы, ГруппаРодитель)
	
	ПараметрыОтбора = Новый Структура("Родитель", ГруппаРодитель);
	ОтобранныеСтроки = ГруппыПользователей.НайтиСтроки(ПараметрыОтбора);
	
	Для Каждого Элемент Из ОтобранныеСтроки Цикл
		
		Если Элемент.Ссылка = Справочники.ГруппыПользователей.ВсеПользователи
			Или Элемент.Ссылка = Справочники.ГруппыВнешнихПользователей.ВсеВнешниеПользователи Тогда
			Продолжить;
		КонецЕсли;
		
		ПодчиненныеГруппы.Добавить(Элемент);
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ЗаписатьИзменения(СообщениеПользователю)
	
	МассивПользователей = Неопределено;
	ДеревоГруппИсточник = ДеревоГрупп.ПолучитьЭлементы();
	ПерезаполнитьСоставГрупп(ДеревоГруппИсточник, МассивПользователей);
	СформироватьТекстСообщения(МассивПользователей, СообщениеПользователю)
	
КонецПроцедуры

&НаСервере
Процедура ПерезаполнитьСоставГрупп(ДеревоГруппИсточник, МассивПеремещенныхПользователей)
	
	МассивПользователей = СписокПользователей.МассивПользователей;
	Если МассивПеремещенныхПользователей = Неопределено Тогда
		МассивПеремещенныхПользователей = Новый Массив;
	КонецЕсли;
	
	Для Каждого СтрокаДерева Из ДеревоГруппИсточник Цикл
		
		Если СтрокаДерева.Пометка = 1 Тогда
			
			Для Каждого ПользовательСсылка Из МассивПользователей Цикл
				
				Если ТипЗнч(ПользовательСсылка) = Тип("СправочникСсылка.Пользователи") Тогда
					ТипПользователя = "Пользователь";
				Иначе
					ТипПользователя = "ВнешнийПользователь";
				КонецЕсли;
				
				Добавлять = ?(СтрокаДерева.Группа.Состав.Найти(
					ПользовательСсылка, ТипПользователя) = Неопределено, Истина, Ложь);
				Если Добавлять Тогда
					ПользователиСлужебный.ДобавитьПользователяВГруппу(СтрокаДерева.Группа, ПользовательСсылка, ТипПользователя);
					
					Если МассивПеремещенныхПользователей.Найти(ПользовательСсылка) = Неопределено Тогда
						МассивПеремещенныхПользователей.Добавить(ПользовательСсылка);
					КонецЕсли;
					
				КонецЕсли;
				
			КонецЦикла;
			
		ИначеЕсли СтрокаДерева.Пометка = 0 Тогда
			
			Для Каждого ПользовательСсылка Из МассивПользователей Цикл
				
				Если ТипЗнч(ПользовательСсылка) = Тип("СправочникСсылка.Пользователи") Тогда
					ТипПользователя = "Пользователь";
				Иначе
					ТипПользователя = "ВнешнийПользователь";
				КонецЕсли;
				
				Удалять = ?(СтрокаДерева.Группа.Состав.Найти(
					ПользовательСсылка, ТипПользователя) <> Неопределено, Истина, Ложь);
				Если Удалять Тогда
					ПользователиСлужебный.УдалитьПользователяИзГруппы(СтрокаДерева.Группа, ПользовательСсылка, ТипПользователя);
					
					Если МассивПеремещенныхПользователей.Найти(ПользовательСсылка) = Неопределено Тогда
						МассивПеремещенныхПользователей.Добавить(ПользовательСсылка);
					КонецЕсли;
					
				КонецЕсли;
				
			КонецЦикла;
			
		КонецЕсли;
		
		ЭлементыСтрокиДерева = СтрокаДерева.ПолучитьЭлементы();
		// Рекурсия
		ПерезаполнитьСоставГрупп(ЭлементыСтрокиДерева, МассивПеремещенныхПользователей);
		
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура СформироватьТекстСообщения(МассивПеремещенныхПользователей, СообщениеПользователю)
	
	КоличествоПользователей = МассивПеремещенныхПользователей.Количество();
	Если КоличествоПользователей = 1 Тогда
		НаименованиеПользователя = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(МассивПеремещенныхПользователей[0], "Наименование");
		СообщениеПользователю = НСтр("ru = 'Изменен состав групп у пользователя ""%1""'");
		СообщениеПользователю = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			СообщениеПользователю, НаименованиеПользователя);
	ИначеЕсли КоличествоПользователей > 1 Тогда
		
		СообщениеПользователю = НСтр("ru = 'Изменен состав групп у %1'");
		СтрокаОбъект = ПользователиСлужебный.ФормированиеОкончанияСлова(
			КоличествоПользователей, НСтр("ru = 'пользователя,пользователей,пользователей,,,,,,0'"));
		СообщениеПользователю = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			СообщениеПользователю, СтрокаОбъект);
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура РазвернутьДеревоЗначений()
	
	Строки = ДеревоГрупп.ПолучитьЭлементы();
	Для Каждого Строка Из Строки Цикл
		Элементы.ДеревоГрупп.Развернуть(Строка.ПолучитьИдентификатор(), Истина);
	КонецЦикла;
	
КонецПроцедуры

