
///////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ          

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)

	// Пропускаем инициализацию, чтобы гарантировать получение формы при передаче параметра "АвтоТест"
	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;
	КонецЕсли;
	
	ЗначениеПараметров  = Параметры.ПараметрыОбработки;
	
	Параметры.Свойство("Идентификатор", Идентификатор);
	Заголовок = НСтр("ru='ДП'") + " """ + Строка(Идентификатор) + """";

	ЦветТекста = ЦветаСтиля.ЦветТекстаФормы;
	ЦветОшибки = ЦветаСтиля.ЦветОтрицательногоЧисла;
	
	Элементы.ТестУстройства.Видимость    = (ПараметрыСеанса.РабочееМестоКлиента = Идентификатор.РабочееМесто);
	Элементы.УстановитьДрайвер.Видимость = (ПараметрыСеанса.РабочееМестоКлиента = Идентификатор.РабочееМесто);
	
КонецПроцедуры

// Процедура - обработчик события "Перед открытием" формы.
//
&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	ОбновитьИнформациюОДрайвере();
	
КонецПроцедуры

///////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ КОМАНД ФОРМЫ

&НаКлиенте
Процедура УстановитьДрайвер(Команда)
	
	Если ИнтеграционнаяБиблиотека Тогда
		Текст = "ru = 'Для установки драйвера необходимо подключение к Интернету.
			|Продолжить выполнение операции?'";
    	Ответ = Вопрос(НСтр(Текст), РежимДиалогаВопрос.ДаНет, 0);
		Если Ответ = КодВозвратаДиалога.Да Тогда
			ЗапуститьПриложение(АдресЗагрузкиДрайвера, , Истина);
		КонецЕсли;
	Иначе
		МенеджерОборудованияКлиент.УстановитьДрайвер(Идентификатор);
	КонецЕсли;
	
	ОбновитьИнформациюОДрайвере();

КонецПроцедуры

&НаКлиенте
Процедура ТестУстройства(Команда)
    
	РезультатТеста = Неопределено;
	ДемонстрационныйРежим = "";
	Элементы.ГруппаДемонстрационныйРежим.Видимость = Ложь;

	ВходныеПараметры  = Неопределено;
	ВыходныеПараметры = Неопределено;
	ПараметрыУстройства = Неопределено;

	Результат = МенеджерОборудованияКлиент.ВыполнитьДополнительнуюКоманду("CheckHealth", 
																			ВходныеПараметры, 
																			ВыходныеПараметры, 
																			Идентификатор, 
																			ПолучитьНастройки());
	
	ДополнительноеОписание = "";
	Если ТипЗнч(ВыходныеПараметры) = Тип("Массив") Тогда
		
		Если  ВыходныеПараметры.Количество() >= 2 Тогда
			ДополнительноеОписание = ДополнительноеОписание + НСтр("ru = 'Дополнительное описание:'") + " " + ВыходныеПараметры[1];
		КонецЕсли;
		
		Если  ВыходныеПараметры.Количество() >= 3 И НЕ ПустаяСтрока(ВыходныеПараметры[2])  Тогда
			ДемонстрационныйРежим = ВыходныеПараметры[2];
			// ДополнительноеОписание = ДополнительноеОписание + Символы.ПС + НСтр("ru = 'Ограничение:'") + " " + ВыходныеПараметры[2];
			Элементы.ГруппаДемонстрационныйРежим.Видимость = Истина;
		КонецЕсли;
		
	КонецЕсли;
		
	ТекстСообщения = ?(Результат,  НСтр("ru = 'Тест успешно выполнен.%ДополнительноеОписание%'"),
	                               НСтр("ru = 'Тест не пройден.%ДополнительноеОписание%'"));
	ТекстСообщения = СтрЗаменить(ТекстСообщения, "%ДополнительноеОписание%", ?(ПустаяСтрока(ДополнительноеОписание),
	                             "", Символы.ПС + ДополнительноеОписание));
	ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения);

КонецПроцедуры

// Процедура представляет обработчик события "Нажатие" кнопки
//
&НаКлиенте
Процедура ЗаписатьИЗакрытьВыполнить()
	
	Закрыть(ПолучитьНастройки());   

КонецПроцедуры

///////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

&НаСервере
Функция ПолучитьНастройки()
	            
	ПараметрыДрайвера = ПолучитьРеквизиты();

	ЗначениеПараметров = Новый Структура;
	Для Каждого Параметр из ПараметрыДрайвера Цикл
		Если Лев(Параметр.Имя, 2) = "P_" Тогда
			ЗначениеПараметров.Вставить(Параметр.Имя, ЭтаФорма[Параметр.Имя]);
		КонецЕсли;
	КонецЦикла;

	Возврат ЗначениеПараметров;
	
КонецФункции

&НаСервере
Процедура ОбновитьНастраиваемыйИнтерфейс(ОписаниеИнтрефейса)
	
	БазоваяГруппа = Неопределено;
	Элемент = Неопределено;
	ИндексГруппы = 0;
	
    ЧтениеXML = Новый ЧтениеXML; 
	ЧтениеXML.УстановитьСтроку(ОписаниеИнтрефейса);
	ЧтениеXML.ПерейтиКСодержимому();
    
	Если ЧтениеXML.Имя = "Settings" и ЧтениеXML.ТипУзла = ТипУзлаXML.НачалоЭлемента Тогда  
		Пока ЧтениеXML.Прочитать() Цикл  
			
			Если ЧтениеXML.Имя = "Parameter" и ЧтениеXML.ТипУзла = ТипУзлаXML.НачалоЭлемента Тогда  
				
				ПараметрИмя       = "P_" +ЧтениеXML.ЗначениеАтрибута("Name");
				ПараметрЗаголовок = ЧтениеXML.ЗначениеАтрибута("Caption");
				ПараметрТип       = ВРег(ЧтениеXML.ЗначениеАтрибута("TypeValue"));
				ПараметрТип       = ?(НЕ ПустаяСтрока(ПараметрТип), ПараметрТип, "STRING");
				ПараметрЗначение  = ЧтениеXML.ЗначениеАтрибута("DefaultValue");
				
				// Добавляем новый реквизит в форму
				ДобавляемыеРеквизиты = Новый Массив;
				
				Если ПараметрТип = "NUMBER" Тогда 
					Реквизит = Новый РеквизитФормы(ПараметрИмя, Новый ОписаниеТипов("Число"), , ПараметрЗаголовок, Истина);
				ИначеЕсли ПараметрТип = "BOOLEAN" Тогда 
					Реквизит = Новый РеквизитФормы(ПараметрИмя, Новый ОписаниеТипов("Булево"), , ПараметрЗаголовок, Истина);
				Иначе
					Реквизит = Новый РеквизитФормы(ПараметрИмя, Новый ОписаниеТипов("Строка"), , ПараметрЗаголовок, Истина);
				КонецЕсли;
				ДобавляемыеРеквизиты.Добавить(Реквизит);
				ИзменитьРеквизиты(ДобавляемыеРеквизиты);
				
				Если Элементы.Найти(ПараметрИмя) = Неопределено Тогда
					// Если не было создано не одной группы
					Если БазоваяГруппа = Неопределено Тогда
						БазоваяГруппа = Элементы.Добавить("БазоваяГруппа", Тип("ГруппаФормы"), ЭтаФорма.Элементы.Параметры);
						БазоваяГруппа.Вид = ВидГруппыФормы.ОбычнаяГруппа;
						БазоваяГруппа.Отображение = ОтображениеОбычнойГруппы.РамкаГруппы;
						БазоваяГруппа.Заголовок = НСтр("ru = 'Параметры'");
					КонецЕсли;
					// Добавляем новое поле ввода на форму
					Элемент = Элементы.Добавить(ПараметрИмя, Тип("ПолеФормы"), БазоваяГруппа);
					Если ПараметрТип = "BOOLEAN" Тогда 
						Элемент.Вид = ВидПоляФормы.ПолеФлажка
					Иначе
						Элемент.Вид = ВидПоляФормы.ПолеВвода;
						Элемент.РастягиватьПоГоризонтали = Истина;
					КонецЕсли;
					Элемент.ПутьКДанным = ПараметрИмя;
				КонецЕсли;
				
				ХранимоеЗначение = Неопределено;
				Если ЗначениеПараметров.Свойство(ПараметрИмя, ХранимоеЗначение) Тогда
					ПараметрЗначение = ХранимоеЗначение
				Иначе
					Если НЕ ПустаяСтрока(ПараметрЗначение) Тогда
						Если ПараметрТип = "BOOLEAN" Тогда
							ПараметрЗначение = ?(ВРег(ПараметрЗначение) = "TRUE", Истина, Ложь) ИЛИ  ?(ВРег(ПараметрЗначение) = "ИСТИНА", Истина, Ложь);
						ИначеЕсли ПараметрТип = "STRING" Тогда
							ПараметрЗначение = Строка(ПараметрЗначение);
						КонецЕсли;
					КонецЕсли;
				КонецЕсли;
				
				ЭтаФорма[ПараметрИмя] = ПараметрЗначение;
				
			КонецЕсли;
			
			Если ЧтениеXML.Имя = "ChoiceList" и ЧтениеXML.ТипУзла = ТипУзлаXML.НачалоЭлемента Тогда 
				
				Если НЕ (Элемент = Неопределено) и НЕ (Элемент.Вид = ВидПоляФормы.ПолеФлажка) Тогда   
					Элемент.РежимВыбораИзСписка  = Истина; 
					Элемент.РедактированиеТекста = Ложь; 
				КонецЕсли;
				
				Пока ЧтениеXML.Прочитать() и не (ЧтениеXML.Имя = "ChoiceList") Цикл   
					Если ЧтениеXML.Имя = "Item" и ЧтениеXML.ТипУзла = ТипУзлаXML.НачалоЭлемента Тогда  
						ЗначениеАтрибута = ЧтениеXML.ЗначениеАтрибута("Value"); 
						Если ЧтениеXML.Прочитать() Тогда
							ПредставлениеАтрибута = ЧтениеXML.Значение;
						КонецЕсли;
						Если ПустаяСтрока(ЗначениеАтрибута) Тогда
							ЗначениеАтрибута = ПредставлениеАтрибута;
						КонецЕсли;
						
						Если ПараметрТип = "NUMBER" Тогда 
							Элемент.СписокВыбора.Добавить(Число(ЗначениеАтрибута), ПредставлениеАтрибута)
						Иначе	
							Элемент.СписокВыбора.Добавить(ЗначениеАтрибута, ПредставлениеАтрибута)
						КонецЕсли;
						
					КонецЕсли;
				КонецЦикла; 
				
			КонецЕсли;
			
			Если ЧтениеXML.Имя = "Group" и ЧтениеXML.ТипУзла = ТипУзлаXML.НачалоЭлемента Тогда  
				
				ЗаголовокГруппы = ЧтениеXML.ЗначениеАтрибута("Caption");
				Если ПустаяСтрока(ЗаголовокГруппы) Тогда
					ЗаголовокГруппы = НСтр("ru = 'Параметры'");
				КонецЕсли;
				
				БазоваяГруппа = Элементы.Добавить("Группа" + ИндексГруппы, Тип("ГруппаФормы"), ЭтаФорма.Элементы.Параметры);
				БазоваяГруппа.Вид = ВидГруппыФормы.ОбычнаяГруппа;
				БазоваяГруппа.Отображение = ОтображениеОбычнойГруппы.РамкаГруппы;
				БазоваяГруппа.Заголовок = ЗаголовокГруппы;
				ИндексГруппы = ИндексГруппы + 1;
				
			КонецЕсли;
			
		КонецЦикла;  
		
	//	Элементы.Параметры.Высота = 16;
		
	КонецЕсли;
	
	
КонецПроцедуры                   

&НаКлиенте
Процедура ОбновитьИнформациюОДрайвере()

	ВходныеПараметры  = Неопределено;
	ВыходныеПараметры = Неопределено;
	ПараметрыУстройства = Неопределено;
	
	Если МенеджерОборудованияКлиент.ВыполнитьДополнительнуюКоманду("ПолучитьОписаниеДрайвера",
																   ВходныеПараметры,
																   ВыходныеПараметры,
																   Идентификатор,
																   ПараметрыУстройства) Тогда
		ДрайверУстановлен         = ВыходныеПараметры[0];
		ВерсияДрайвера            = ВыходныеПараметры[1];
		
		НаименованиеДрайвера      = ВыходныеПараметры[2];
		ОписаниеДрайвера          = ВыходныеПараметры[3];
		ТипОборудования           = ВыходныеПараметры[4];
		РевизияИнтерфейса         = ВыходныеПараметры[5];
		ИнтеграционнаяБиблиотека  = ВыходныеПараметры[6];
		ОсновнойДрайверУстановлен = ВыходныеПараметры[7];
		АдресЗагрузкиДрайвера     = ВыходныеПараметры[8];
		ПараметрыДравера          = ВыходныеПараметры[9];
		
		Если (ИнтеграционнаяБиблиотека И ОсновнойДрайверУстановлен) ИЛИ (НЕ ИнтеграционнаяБиблиотека) Тогда
			Если НЕ ПустаяСтрока(ПараметрыДравера) Тогда
				ОбновитьНастраиваемыйИнтерфейс(ПараметрыДравера);
			КонецЕсли;
		КонецЕсли;
		
		Если ИнтеграционнаяБиблиотека И НЕ ОсновнойДрайверУстановлен Тогда
			ДрайверУстановлен = НСтр("ru='Установлена интеграционная библиотека'");
			ВерсияДрайвера = НСтр("ru='Не определена'");
			Элементы.УстановитьДрайвер.Заголовок = НСтр("ru='Установить основную поставку драйвера'");		
		КонецЕсли
		
	Иначе
		ДрайверУстановлен = ВыходныеПараметры[2];
		ВерсияДрайвера  = НСтр("ru='Не определена'");
	КонецЕсли;
	
	Элементы.Драйвер.ЦветТекста = ?(ВерсияДрайвера = НСтр("ru='Не определена'"), ЦветОшибки, ЦветТекста);
	Элементы.Версия.ЦветТекста  = Элементы.Драйвер.ЦветТекста ;
	Элементы.НаименованиеДрайвера.ЦветТекста = ?(НаименованиеДрайвера = НСтр("ru='Не определено'"), ЦветОшибки, ЦветТекста);
	Элементы.ОписаниеДрайвера.ЦветТекста     = ?(ОписаниеДрайвера     = НСтр("ru='Не определено'"), ЦветОшибки, ЦветТекста);
	Элементы.ОписаниеДрайвера.Видимость = НЕ ПустаяСтрока(ОписаниеДрайвера);
	
	Элементы.УстановитьДрайвер.Доступность = Не (ДрайверУстановлен = НСтр("ru='Установлен'"));
	Элементы.ТестУстройства.Доступность = (НЕ ДрайверУстановлен = НСтр("ru='Не установлен'")) 
	                                      И (НЕ ИнтеграционнаяБиблиотека ИЛИ (ИнтеграционнаяБиблиотека И ОсновнойДрайверУстановлен))
   
КонецПроцедуры
