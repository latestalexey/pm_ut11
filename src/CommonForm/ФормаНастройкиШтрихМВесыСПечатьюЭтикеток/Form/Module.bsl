
///////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)

	// Пропускаем инициализацию, чтобы гарантировать получение формы при передаче параметра "АвтоТест"
	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;
	КонецЕсли;

	Параметры.Свойство("Идентификатор", Идентификатор);
	Заголовок = НСтр("ru='ДП'") + " """ + Строка(Идентификатор) + """";

	ЦветТекста = ЦветаСтиля.ЦветТекстаФормы;
	ЦветОшибки = ЦветаСтиля.ЦветОтрицательногоЧисла;

	СпПорт = Элементы.Порт.СписокВыбора;
	Для Номер = 1 По 32 Цикл
		СпПорт.Добавить(Номер, "COM" + Формат(Номер, "ЧЦ=2; ЧДЦ=0; ЧН=0; ЧГ=0"));
	КонецЦикла;  
	
	СпИнтерфейс = Элементы.Интерфейс.СписокВыбора;
  	СпИнтерфейс.Добавить(0,  "RS-232");
	СпИнтерфейс.Добавить(1,  "Ethernet");

    СпСкорость = Элементы.Скорость.СписокВыбора; 
	СпСкорость.Добавить(0,  "2400");
	СпСкорость.Добавить(1,  "4800");
	СпСкорость.Добавить(2,  "9600");
	СпСкорость.Добавить(3, "19200");
	СпСкорость.Добавить(4, "38400");
	СпСкорость.Добавить(5, "57600");
	СпСкорость.Добавить(6,"115200");

    времНаименование 		= Неопределено;
	времИнтерфейс	 		= Неопределено;
	времПорт         		= Неопределено;
	времСкорость     		= Неопределено;
	времТаймаут      		= Неопределено;
	времIPАдрес      		= Неопределено;
    времUDPПортПолучателя 	= Неопределено;
    времUDPТаймаут  		= Неопределено;
	времПароль              = Неопределено;
	времБыстраяЗагрузка     = Неопределено;
	
	Параметры.Свойство("Интерфейс"     		, времИнтерфейс);
	Параметры.Свойство("Порт"     	 		, времПорт);
	Параметры.Свойство("Скорость"   		, времСкорость);
	Параметры.Свойство("Таймаут"			, времТаймаут);	
	Параметры.Свойство("IPАдрес"			, времIPАдрес);
	Параметры.Свойство("UDPПортПолучателя" 	, времUDPПортПолучателя);
	Параметры.Свойство("UDPТаймаут"      	, времUDPТаймаут);
	Параметры.Свойство("Пароль"				, времПароль);
	Параметры.Свойство("БыстраяЗагрузка"	, времБыстраяЗагрузка);
	Параметры.Свойство("Наименование"		, времНаименование);
	                          
	Интерфейс           = ?(времИнтерфейс           = Неопределено, 0, времИнтерфейс);
	Порт                = ?(времПорт                = Неопределено, 1, времПорт);
	Скорость            = ?(времСкорость            = Неопределено, 2, времСкорость);
	Таймаут             = ?(времТаймаут             = Неопределено, 50, времТаймаут);
	IPадрес             = ?(времIPадрес             = Неопределено, "192.168.0.1", времIPадрес);
	UDPПортПолучателя   = ?(времUDPПортПолучателя   = Неопределено, 1111, времUDPПортПолучателя);
	UDPТаймаут          = ?(времUDPТаймаут          = Неопределено, 500, времUDPТаймаут);
	Пароль              = ?(времПароль              = Неопределено, "0030", времПароль);
    БыстраяЗагрузка		= ?(времБыстраяЗагрузка     = Неопределено, Ложь, времБыстраяЗагрузка);
	
	Наименование = ?(времНаименование = Неопределено, НСтр("ru = 'ШТРИХ-ПРИНТ'"), времНаименование);
	
	Элементы.ТестУстройства.Видимость    = (ПараметрыСеанса.РабочееМестоКлиента
	                                        = Идентификатор.РабочееМесто);
	Элементы.УстановитьДрайвер.Видимость = (ПараметрыСеанса.РабочееМестоКлиента
	                                        = Идентификатор.РабочееМесто); 
КонецПроцедуры

// Процедура - обработчик события "Перед открытием" формы.
//
// Параметры:
//  Отказ                - <Булево>
//                       - Признак отказа от открытия формы. Если в теле
//                         процедуры-обработчика установить данному параметру
//                         значение Истина, открытие формы выполнено не будет.
//                         Значение по умолчанию: Ложь 
//
//  СтандартнаяОбработка - <Булево>
//                       - В данный параметр передается признак выполнения
//                         стандартной (системной) обработки события. Если в
//                         теле процедуры-обработчика установить данному
//                         параметру значение Ложь, стандартная обработка
//                         события производиться не будет. Отказ от стандартной
//                         обработки не отменяет открытие формы.
//                         Значение по умолчанию: Истина 
//
&НаКлиенте
Процедура ПриОткрытии(Отказ)

	ОбновитьИнформациюОДрайвере();

КонецПроцедуры

///////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ ШАПКИ ФОРМЫ

&НаКлиенте
Процедура ИнтерфейсПриИзменении(Элемент)
	
	ПроверкаДоступности();
	
КонецПроцедуры

///////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ КОМАНД ФОРМЫ

// Процедура представляет обработчик события "Нажатие" кнопки
// "ОК" командной панели "ОсновныеДействияФормы".
//
// Параметры:
//  Кнопка - <КнопкаКоманднойПанели>
//         - Кнопка, с которой связано данное событие (кнопка "ОК").
//
&НаКлиенте
Процедура ЗаписатьИЗакрытьВыполнить()

	Параметры.ПараметрыНастройки.Добавить(Интерфейс    		, "Интерфейс");
	Параметры.ПараметрыНастройки.Добавить(Порт     	 		, "Порт");
	Параметры.ПараметрыНастройки.Добавить(Скорость   		, "Скорость");
	Параметры.ПараметрыНастройки.Добавить(Таймаут			, "Таймаут");	
	Параметры.ПараметрыНастройки.Добавить(IPАдрес			, "IPАдрес");
	Параметры.ПараметрыНастройки.Добавить(UDPПортПолучателя	, "UDPПортПолучателя");
	Параметры.ПараметрыНастройки.Добавить(UDPТаймаут      	, "UDPТаймаут");
	Параметры.ПараметрыНастройки.Добавить(Пароль			, "Пароль");
	Параметры.ПараметрыНастройки.Добавить(БыстраяЗагрузка	, "БыстраяЗагрузка");
	Параметры.ПараметрыНастройки.Добавить(Наименование		, "Наименование");
	
	ОчиститьСообщения();
	Закрыть(КодВозвратаДиалога.ОК);

КонецПроцедуры

&НаКлиенте
Процедура УстановитьДрайвер(Команда)

	МенеджерОборудованияКлиент.УстановитьДрайвер(Идентификатор);

	ОбновитьИнформациюОДрайвере();

КонецПроцедуры

&НаКлиенте
Процедура ТестУстройства(Команда)

	РезультатТеста = Неопределено;

	ВходныеПараметры  = Неопределено;
	ВыходныеПараметры = Неопределено;

	времПараметрыУстройства = Новый Структура();
	времПараметрыУстройства.Вставить("Интерфейс"    		, Интерфейс);
	времПараметрыУстройства.Вставить("Порт"     	 		, Порт);
	времПараметрыУстройства.Вставить("Скорость" 	  		, Скорость);
	времПараметрыУстройства.Вставить("Таймаут"				, Таймаут);	
	времПараметрыУстройства.Вставить("IPАдрес"				, IPАдрес);
	времПараметрыУстройства.Вставить("UDPПортПолучателя"	, UDPПортПолучателя);
	времПараметрыУстройства.Вставить("UDPТаймаут"      		, UDPТаймаут);
	времПараметрыУстройства.Вставить("Пароль"				, Пароль);
	времПараметрыУстройства.Вставить("Наименование"			, Наименование);
	времПараметрыУстройства.Вставить("БыстраяЗагрузка"		, БыстраяЗагрузка);

	Результат = МенеджерОборудованияКлиент.ВыполнитьДополнительнуюКоманду("CheckHealth",
	                                                                      ВходныеПараметры,
	                                                                      ВыходныеПараметры,
	                                                                      Идентификатор,
	                                                                      времПараметрыУстройства);

	Если Результат Тогда
		ТекстСообщения = НСтр("ru = 'Тест успешно выполнен.'");
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения);
	Иначе
		ДополнительноеОписание = ?(ТипЗнч(ВыходныеПараметры) = Тип("Массив")
		                           И ВыходныеПараметры.Количество() >= 2,
		                           НСтр("ru = 'Дополнительное описание:'") + " " + ВыходныеПараметры[1],
		                           "");


		ТекстСообщения = НСтр("ru = 'Тест не пройден.%ПереводСтроки%%ДополнительноеОписание%'");
		ТекстСообщения = СтрЗаменить(ТекстСообщения, "%ПереводСтроки%", ?(ПустаяСтрока(ДополнительноеОписание),
		                                                                  "",
		                                                                  Символы.ПС));
		ТекстСообщения = СтрЗаменить(ТекстСообщения, "%ДополнительноеОписание%", ?(ПустаяСтрока(ДополнительноеОписание),
		                                                                           "",
		                                                                           ДополнительноеОписание));
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения);
	КонецЕсли;

КонецПроцедуры

///////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

&НаКлиенте
Процедура ПроверкаДоступности()

	Элементы.Порт.Доступность          		= (Интерфейс = 0);
	Элементы.Скорость.Доступность      		= (Интерфейс = 0);
	Элементы.Таймаут.Доступность      		= (Интерфейс = 0);
	Элементы.IPАдрес.Доступность       		= Не (Интерфейс = 0);
	Элементы.UDPПортПолучателя.Доступность  = Не (Интерфейс = 0);
	Элементы.UDPТаймаут.Доступность         = Не (Интерфейс = 0);
           
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьИнформациюОДрайвере()

	ВходныеПараметры  = Неопределено;
	ВыходныеПараметры = Неопределено;

	времПараметрыУстройства = Новый Структура();
	времПараметрыУстройства.Вставить("Интерфейс"    		, Интерфейс);
	времПараметрыУстройства.Вставить("Порт"     	 		, Порт);
	времПараметрыУстройства.Вставить("Скорость" 	  		, Скорость);
	времПараметрыУстройства.Вставить("Таймаут"				, Таймаут);	
	времПараметрыУстройства.Вставить("IPАдрес"				, IPАдрес);
	времПараметрыУстройства.Вставить("UDPПортПолучателя"	, UDPПортПолучателя);
	времПараметрыУстройства.Вставить("UDPТаймаут"      		, UDPТаймаут);
	времПараметрыУстройства.Вставить("Пароль"				, Пароль);
	времПараметрыУстройства.Вставить("Наименование"			, Наименование);
	времПараметрыУстройства.Вставить("БыстраяЗагрузка"		, БыстраяЗагрузка);
	
	Если МенеджерОборудованияКлиент.ВыполнитьДополнительнуюКоманду("ПолучитьВерсиюДрайвера",
	                                                               ВходныеПараметры,
	                                                               ВыходныеПараметры,
	                                                               Идентификатор,
	                                                               времПараметрыУстройства) Тогда
		Драйвер = ВыходныеПараметры[0];
		Версия  = ВыходныеПараметры[1];
	Иначе
		Драйвер = ВыходныеПараметры[2];
		Версия  = НСтр("ru='Не определена'");
	КонецЕсли;

	Элементы.Драйвер.ЦветТекста = ?(Драйвер = НСтр("ru='Не установлен'"), ЦветОшибки, ЦветТекста);
	Элементы.Версия.ЦветТекста  = ?(Версия  = НСтр("ru='Не определена'"), ЦветОшибки, ЦветТекста);

	Элементы.УстановитьДрайвер.Доступность = Не (Драйвер = НСтр("ru='Установлен'"));

	ПроверкаДоступности();
	
КонецПроцедуры
