
///////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)

	СуммаВсего = Параметры.СуммаВсего;
	Партнер = Параметры.Партнер;
	Контрагент = Параметры.Контрагент;
	Валюта = Параметры.Валюта;
	ЭтоРасчетыСКлиентами = Параметры.ЭтоРасчетыСКлиентами;
	АдресПлатежейВХранилище = Параметры.АдресПлатежейВХранилище;
	
	Если Не ПустаяСтрока(АдресПлатежейВХранилище) Тогда
		ПолучитьРасшифровкуПлатежаИзХранилища();
	КонецЕсли;
		
КонецПроцедуры

///////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ ТАБЛИЦЫ ФОРМЫ РАСШИФРОВКА ПЛАТЕЖА

&НаКлиенте
Процедура РасшифровкаПлатежаПриНачалеРедактирования(Элемент, НоваяСтрока, Копирование)
	
	СтрокаТаблицы = Элементы.РасшифровкаПлатежа.ТекущиеДанные;
	ФинансыКлиент.УстановитьПустуюСсылкуНаЗаказ(
		СтрокаТаблицы.Заказ,
		ЭтоРасчетыСКлиентами
	);
	
	Если НоваяСтрока И Не Копирование Тогда
		
		СуммаОстаток = СуммаВсего - РасшифровкаПлатежа.Итог("Сумма");
		СтрокаТаблицы.Сумма = СуммаОстаток;
		
	КонецЕсли;
	
	Распределено = РасшифровкаПлатежа.Итог("Сумма");
	
КонецПроцедуры

&НаКлиенте
Процедура РасшифровкаПлатежаЗаказПриИзменении(Элемент)
	
	СтрокаТаблицы = Элементы.РасшифровкаПлатежа.ТекущиеДанные;
	СтрокаТаблицы.СуммаВзаиморасчетов  = 0;
	СтрокаТаблицы.ВалютаВзаиморасчетов = Неопределено;
	
КонецПроцедуры

&НаКлиенте
Процедура РасшифровкаПлатежаЗаказНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтрокаТаблицы = Элементы.РасшифровкаПлатежа.ТекущиеДанные;
	ФинансыКлиент.ДокументРасчетовНачалоВыбора(
		ПредопределенноеЗначение("Справочник.Организации.УправленческаяОрганизация"),
		Партнер,
		Контрагент,
		Неопределено, // Соглашение
		ЭтоРасчетыСКлиентами,
		Ложь, // ВыборОснованияПлатежа
		Элемент,
		СтандартнаяОбработка
	);
	
КонецПроцедуры

&НаКлиенте
Процедура РасшифровкаПлатежаЗаказОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	СтрокаТаблицы = Элементы.РасшифровкаПлатежа.ТекущиеДанные;	
	Если ТипЗнч(ВыбранноеЗначение) = Тип("Структура") Тогда
		ЗаполнитьЗначенияСвойств(СтрокаТаблицы, ВыбранноеЗначение);
	КонецЕсли; 
	
КонецПроцедуры

&НаКлиенте
Процедура РасшифровкаПлатежаСуммаПриИзменении(Элемент)

	СтрокаТаблицы = Элементы.РасшифровкаПлатежа.ТекущиеДанные;
	СтрокаТаблицы.СуммаВзаиморасчетов = 0;
	
	Распределено = РасшифровкаПлатежа.Итог("Сумма");
	
КонецПроцедуры

&НаКлиенте
Процедура РасшифровкаПлатежаВалютаВзаиморасчетовПриИзменении(Элемент)
	
	СтрокаТаблицы = Элементы.РасшифровкаПлатежа.ТекущиеДанные;
	СтрокаТаблицы.СуммаВзаиморасчетов = 0;
	
КонецПроцедуры

///////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ КОМАНД ФОРМЫ

&НаКлиенте
Процедура ПеренестиВДокументВыполнить()

	ПоместитьРасшифровкуПлатежаВХранилище();
	Закрыть(КодВозвратаДиалога.OK);
	
	Структура = Новый Структура("АдресПлатежейВХранилище", АдресПлатежейВХранилище);
	ОповеститьОВыборе(Структура);
	
КонецПроцедуры

///////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

///////////////////////////////////////////////////////////////////////////////
// Прочее

&НаСервере
Процедура ПолучитьРасшифровкуПлатежаИзХранилища()

	РасшифровкаПлатежа.Загрузить(ПолучитьИзВременногоХранилища(АдресПлатежейВХранилище));
	Распределено = РасшифровкаПлатежа.Итог("Сумма");
	
КонецПроцедуры

&НаСервере
Процедура ПоместитьРасшифровкуПлатежаВХранилище() 
	
	Платежи = РасшифровкаПлатежа.Выгрузить(, "Заказ, Сумма, ВалютаВзаиморасчетов, СуммаВзаиморасчетов");
	АдресПлатежейВХранилище = ПоместитьВоВременноеХранилище(Платежи, УникальныйИдентификатор);
	
КонецПроцедуры
