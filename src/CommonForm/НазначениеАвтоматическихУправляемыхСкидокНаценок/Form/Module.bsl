
////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;
	КонецЕсли;
	
	ПримененныеСкидки = ПолучитьИзВременногоХранилища(Параметры.АдресВоВременномХранилище);
	
	ДеревоСкидок = ПримененныеСкидки.ДеревоСкидок.Скопировать();
	ДеревоСкидок.Колонки.Добавить("ИндексКартинки",   Новый ОписаниеТипов("Число"));
	ДеревоСкидок.Колонки.Добавить("Действует",        Новый ОписаниеТипов("Булево"));
	ДеревоСкидок.Колонки.Добавить("УсловияВыполнены", Новый ОписаниеТипов("Булево"));
	ДеревоСкидок.Колонки.Добавить("Разворачивать",  Новый ОписаниеТипов("Булево"));
	ДеревоСкидок.Колонки.Добавить("ЭтоУсловие",     Новый ОписаниеТипов("Булево"));
	ДеревоСкидок.Колонки.Добавить("Значение",       Новый ОписаниеТипов("СправочникСсылка.СкидкиНаценки, СправочникСсылка.УсловияПредоставленияСкидокНаценок"));
	
	РассчитатьИнформациюОРасчетеСкидокПоДокументу(ДеревоСкидок);
	
	// Если скидок для назначения нет, изменим заголовок.
	Если ДеревоСкидок.Строки.НайтиСтроки(Новый Структура("Управляемая", Истина), Истина).Количество() = 0 Тогда
		Элементы.Описание.Видимость = Ложь;
		Элементы.ОписаниеНетСкидокДляНазначения.Видимость = Истина;
	КонецЕсли;
	
	ЗначениеВРеквизитФормы(ДеревоСкидок, "ИнформацияОРасчетеСкидокПоДокументуВЦелом");
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	РазвернутьДеревоДоУсловийРекурсивно(ИнформацияОРасчетеСкидокПоДокументуВЦелом, Элементы.ИнформацияОРасчетеСкидокПоДокументуВЦелом);
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ КОМАНД ФОРМЫ

&НаКлиенте
Процедура Рассчитать(Команда)
	
	Закрыть(СписокНазначенныхСкидок());
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

////////////////////////////////////////////////////////////////////////////////
// Прочее

&НаСервере
Процедура РассчитатьИнформациюОРасчетеСкидокПоДокументу(ДеревоСкидок)
	
	Для Каждого СтрокаДерева Из ДеревоСкидок.Строки Цикл
		
		Если СтрокаДерева.ЭтоГруппа Тогда
			
			РассчитатьИнформациюОРасчетеСкидокПоДокументу(СтрокаДерева);
			
			СтрокаДерева.ИндексКартинки = СкидкиНаценкиСервер.ПолучитьИндексКартинкиДляГруппы(СтрокаДерева);
			СтрокаДерева.Значение       = СтрокаДерева.СкидкаНаценка;
			СтрокаДерева.Разворачивать  = Истина;
			
			Для каждого Стр Из СтрокаДерева.Строки Цикл
				Если Стр.Действует Тогда
					СтрокаДерева.Действует        = Истина;
					СтрокаДерева.УсловияВыполнены = Истина;
					Прервать;
				КонецЕсли;
			КонецЦикла;
			
		Иначе
			
			СтрокаДерева.ИндексКартинки = СкидкиНаценкиСервер.ПолучитьИндексКартинкиДляСкидки(СтрокаДерева);
			СтрокаДерева.Значение = СтрокаДерева.СкидкаНаценка;
		
			ВсеУсловияВыполнены = Истина;
			Для каждого СтрокаУсловие Из СтрокаДерева.ПараметрыУсловий.ТаблицаУсловий Цикл
				
				НоваяСтрокаУсловие = СтрокаДерева.Строки.Добавить();
				НоваяСтрокаУсловие.Значение         = СтрокаУсловие.УсловиеПредоставления;
				НоваяСтрокаУсловие.Действует        = СтрокаУсловие.Выполнено;
				НоваяСтрокаУсловие.УсловияВыполнены = СтрокаУсловие.Выполнено;
				НоваяСтрокаУсловие.ИндексКартинки   = -1;
				
				Если НЕ НоваяСтрокаУсловие.Действует Тогда
					ВсеУсловияВыполнены = Ложь;
				КонецЕсли;
				
			КонецЦикла;
			
			Если ВсеУсловияВыполнены Тогда
				СтрокаДерева.Действует = Истина;
				СтрокаДерева.УсловияВыполнены = Истина;
			Иначе
				СтрокаДерева.УсловияВыполнены = Ложь;
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Функция СписокНазначенныхСкидок()
	
	УправляемыеСкидки = Новый СписокЗначений;
	
	ДеревоСкидок = РеквизитФормыВЗначение("ИнформацияОРасчетеСкидокПоДокументуВЦелом");
	НайденныеСтроки = ДеревоСкидок.Строки.НайтиСтроки(Новый Структура("НазначенаПользователем", Истина), Истина);
	Для каждого НайденнаяСтрока Из НайденныеСтроки Цикл
		УправляемыеСкидки.Добавить(НайденнаяСтрока.Значение);
	КонецЦикла;
	
	Возврат УправляемыеСкидки;
	
КонецФункции

&НаКлиенте
Процедура РазвернутьДеревоДоУсловийРекурсивно(СтрокаДерева, ЭлементФормы)
	
	КоллекцияЭлементов = СтрокаДерева.ПолучитьЭлементы();
	Для каждого Элемент Из КоллекцияЭлементов Цикл
	
		Если Элемент.Разворачивать Тогда
			ЭлементФормы.Развернуть(Элемент.ПолучитьИдентификатор());
			РазвернутьДеревоДоУсловийРекурсивно(Элемент, ЭлементФормы);
		КонецЕсли;
	
	КонецЦикла;
	
КонецПроцедуры

