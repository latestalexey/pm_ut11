////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Объект.Ссылка.Пустая() Тогда
		ИнициализацияФормы();
	КонецЕсли;	
	   ЗаказыПоставщиков.Параметры.УстановитьЗначениеПараметра("ДокументОснование",Объект.Предмет);	   	  
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	Заголовок=Объект.Наименование;	
	//{ ООО "АСТЭК" Разработчик: Бурыкин Александр  15.11.2013
	 ПредметСуммаДокумента = ПолучитьСуммуДокументаПредмета(Объект.Предмет);
	 акДатаПроверки =  ПолучитьПоследнююДатуИсполненияПроверки(Объект.БизнесПроцесс);	 
	//}
	
КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	

	// запись объекта бизнес-процесса
	ЗаписатьРеквизитыБизнесПроцесса(ТекущийОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	БизнесПроцессыИЗадачиКлиент.ФормаЗадачиОбработкаОповещения(ЭтаФорма, ИмяСобытия, Параметр, Источник);
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
	ИнициализацияФормы();
	
КонецПроцедуры


////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ ШАПКИ ФОРМЫ


////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ КОМАНД ФОРМЫ

&НаКлиенте
Процедура ЗаписатьИЗакрытьВыполнить()
	БизнесПроцессыИЗадачиКлиент.ЗаписатьИЗакрытьВыполнить(ЭтаФорма);
КонецПроцедуры

&НаКлиенте
Процедура Выполнено(Команда)
		БизнесПроцессыИЗадачиКлиент.ЗаписатьИЗакрытьВыполнить(ЭтаФорма, Истина);	
КонецПроцедуры


////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

&НаСервере
Процедура ИнициализацияФормы()
	
    НачальныйПризнакВыполнения = Объект.Выполнена;
	ПрочитатьРеквизитыБизнесПроцесса();	
	УстановитьСостояниеЭлементов();
	            
	ИспользоватьДатуИВремяВСрокахЗадач = ПолучитьФункциональнуюОпцию("ИспользоватьДатуИВремяВСрокахЗадач");
	БизнесПроцессыИЗадачиСервер.УстановитьФорматДаты(Элементы.СрокИсполнения);
	БизнесПроцессыИЗадачиСервер.УстановитьФорматДаты(Элементы.Дата);
	
	БизнесПроцессыИЗадачиСервер.ФормаЗадачиПриСозданииНаСервере(ЭтаФорма, Объект, 
		Элементы.ГруппаСостояние, Элементы.ДатаИсполнения);
		
	Элементы.ОписаниеРезультата.ТолькоПросмотр = Объект.Выполнена;
	
	Если Объект.Выполнена Тогда
		Элементы.Выполнено.Доступность=Ложь;
		Элементы.ДатаИсполнения.Видимость=Истина;
		Элементы.ДатаИсполненияВремя.Видимость=Истина;
		
	Иначе
		Элементы.Выполнено.Доступность=Истина;
		Элементы.ДатаИсполнения.Видимость=Ложь;
		Элементы.ДатаИсполненияВремя.Видимость=Ложь;		
	КонецЕсли;
	
	
КонецПроцедуры	
 
&НаСервере
Процедура ПрочитатьРеквизитыБизнесПроцесса()
	
	ЗадачаОбъект = РеквизитФормыВЗначение("Объект");
	
	УстановитьПривилегированныйРежим(Истина);
	ЗакупкаТовараОбъект = ЗадачаОбъект.БизнесПроцесс.ПолучитьОбъект();
	
	РезультатПроверки = ЗакупкаТовараОбъект.РезультатПроверки;
	
КонецПроцедуры	     

&НаСервере
Процедура ЗаписатьРеквизитыБизнесПроцесса(ЗадачаОбъект)
	
	УстановитьПривилегированныйРежим(Истина);
	ЗакупкаТовараОбъект = ЗадачаОбъект.БизнесПроцесс.ПолучитьОбъект();
	ЗаблокироватьДанныеДляРедактирования(ЗакупкаТовараОбъект.Ссылка);

	ЗакупкаТовараОбъект.Записать();
	
КонецПроцедуры

&НаСервере
Процедура УстановитьСостояниеЭлементов()
	
	ЗадачаОбъект = РеквизитФормыВЗначение("Объект");
	Клиент=ЗадачаОбъект.Предмет.Партнер;
	Проект=ЗадачаОбъект.Предмет.Сделка;
    ДатаОтгрузки=ЗадачаОбъект.Предмет.ДатаОтгрузки;
	БизнесПроцессы.акЗакупкаТовара.УстановитьСостояниеЭлементовФормыЗадачи(ЭтаФорма);
	
КонецПроцедуры


//{ ООО "АСТЭК" Разработчик: Бурыкин Александр  15.11.2013
 &НаСервере
функция ПолучитьСуммуДокументаПредмета(Предмет)

	ОбъектПредмет = Предмет.получитьОбъект();
	 возврат  ОбъектПредмет.суммаДокумента;
	
КонецФункции


Функция  ПолучитьПоследнююДатуИсполненияПроверки(БизнесПроцесс) 
	
	ЗАпрос = новый ЗАпрос;
	ЗАпрос.Текст = "ВЫБРАТЬ
	|	ЗадачаЗадачаИсполнителя.БизнесПроцесс,
	|	ЗадачаЗадачаИсполнителя.Наименование,
	|	ЗадачаЗадачаИсполнителя.Выполнена,
	|	МАКСИМУМ(ЗадачаЗадачаИсполнителя.ДатаИсполнения) КАК ДатаИсполнения
	|ИЗ
	|	Задача.ЗадачаИсполнителя КАК ЗадачаЗадачаИсполнителя
	|ГДЕ
	|	ЗадачаЗадачаИсполнителя.БизнесПроцесс.Ссылка = &БизнесПроцесс
	|	И ЗадачаЗадачаИсполнителя.Наименование ПОДОБНО ""%Проверить%""
	|
	|СГРУППИРОВАТЬ ПО
	|	ЗадачаЗадачаИсполнителя.БизнесПроцесс,
	|	ЗадачаЗадачаИсполнителя.Наименование,
	|	ЗадачаЗадачаИсполнителя.Выполнена";
	
	Запрос.УстановитьПараметр("БизнесПроцесс",БизнесПроцесс);
	Результат = Запрос.Выполнить().Выгрузить();
	
	Возврат Результат.Получить(0).датаИсполнения;
	
КонецФункции
//}   

