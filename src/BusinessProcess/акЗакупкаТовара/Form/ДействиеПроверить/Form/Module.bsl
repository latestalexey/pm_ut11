////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Объект.Ссылка.Пустая() Тогда
		ИнициализацияФормы();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	Заголовок=Объект.Наименование;
КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	Если НЕ ЗаказПроверен И НЕ ЗначениеЗаполнено(ТекущийОбъект.РезультатВыполнения) Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
			НСтр("ru = 'Укажите причину, по которой заказ вовращается менедежеру.'"),,
			"Объект.РезультатВыполнения",,
			Отказ);
		Возврат;
	КонецЕсли;
	
	// запись объекта бизнес-процесса
	ЗаписатьРеквизитыБизнесПроцесса(ТекущийОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	БизнесПроцессыИЗадачиКлиент.ФормаЗадачиОбработкаОповещения(ЭтаФорма, ИмяСобытия, Параметр, Источник);
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
	ИнициализацияФормы();
	
КонецПроцедуры


////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ ШАПКИ ФОРМЫ


////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ КОМАНД ФОРМЫ

&НаКлиенте
Процедура ЗаписатьИЗакрытьВыполнить()
	БизнесПроцессыИЗадачиКлиент.ЗаписатьИЗакрытьВыполнить(ЭтаФорма);
КонецПроцедуры

&НаКлиенте
Процедура Выполнено(Команда)
	
	Если  НЕ ПроверкаЗаполненияТоваров(Объект.Предмет) и НЕ ВыполнитьЗадачу()  тогда
		ЗаказПроверен = Истина;
		БизнесПроцессыИЗадачиКлиент.ЗаписатьИЗакрытьВыполнить(ЭтаФорма, Истина);	
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура Возвращено(Команда)
	
	ЗаказПроверен = Ложь;
	БизнесПроцессыИЗадачиКлиент.ЗаписатьИЗакрытьВыполнить(ЭтаФорма, Истина);	
	
КонецПроцедуры



&наСервере
Функция  ПроверкаЗаполненияТоваров(ДанныеВвода)   Экспорт
	
	
	мЗаказКлиента = ДанныеВвода.ПолучитьОбъект();
	
	Если НЕ ДанныеВвода.АК_ПризнакРекламация И ТипЗнч(мЗаказКлиента.ДокументОснование) = Тип("Неопределено") ТОГДА
		
		Сообщить("Не заполнена ни рекламация, ни Коммерческое предложение!");
		Отказ=Истина;
		
	ИначеЕсли НЕ ДанныеВвода.АК_ПризнакРекламация И ТипЗнч(мЗаказКлиента) <> Тип("Неопределено") Тогда
		
		Запрос = новый Запрос;
		Запрос.Текст = " 
		|Выбрать 
		| * ИЗ Документ.ЗаказКлиента.Товары
		|Где документ.заказКлиента.Товары.ссылка = &ЗаказаКлиента
		|;	
		| ////////////////////////////////////////////
		|
		|Выбрать 
		|*  ИЗ Документ.КоммерческоеПредложениеКлиенту.Товары
		|Где Документ.КоммерческоеПредложениеКлиенту.Товары.Ссылка = &КоммерческоеПредложение";	
		
		Запрос.УстановитьПараметр("ЗаказаКлиента", ДанныеВвода);
		Запрос.УстановитьПараметр("КоммерческоеПредложение", ДанныеВвода.ДокументОснование);
		

		РезультатЗапроса = Запрос.ВыполнитьПакет();
		
		тЗаказКлиент = РезультатЗапроса[0].Выгрузить();
		тКоммерческоеПредложение = РезультатЗапроса[1].Выгрузить();
		
		
		МассивОшибок = Новый Массив;
		
		ТекстОшибки = "";
		
		Если тЗаказКлиент.Количество()<>тКоммерческоеПредложение.Количество() Тогда
			
			ТекстОшибки = "Количество товаров не совпадает!";
			Объект.РезультатВыполнения = Объект.РезультатВыполнения + ТекстОшибки ;
			Отказ = Истина;
			возврат отказ;	
			
		КонецЕсли;
		
		ТаблицаСоответсвий = новый соответствие; 
		ТаблицаСоответсвий.Вставить("Ссылка",1);
		ТаблицаСоответсвий.Вставить("КлючСвязи",1);
		
		
		Для каждого строка из тЗаказКлиент Цикл
			Для каждого колонка из тЗаказКлиент.Колонки Цикл
				Имя = Колонка.Имя;
				Если ТаблицаСоответсвий[имя]=1 тогда
					Продолжить; 
				Иначе
					Индекс=тЗаказКлиент.Индекс(строка);
					Если  тКоммерческоеПредложение.Колонки.Найти(Имя)=Неопределено ТОгда
						Продолжить;
					КонецЕсли;
					
					Если строка[Имя]=тКоммерческоеПредложение[Индекс][имя] тогда
						Продолжить;
					Иначе
						ТекстОшибки = Символы.ПС + "Строка: " + (Индекс+1)  + " в столбце: " + Имя   ; 
						Если Имя <> "АК_ИнформацияДляОтделаЗакупки" тогда
							МассивОшибок.Добавить(ТекстОшибки); 
						КонецЕсли;
					КонецЕсли;
				КонецЕсли;
			КонецЦикла;
		КонецЦикла;
		
		ТекстОшибки = "";
		Для каждого ЭлементМассива из МассивОшибок Цикл
			ТекстОшибки = ТекстОшибки + " " + ЭлементМассива;
		КонецЦикла;
		
		Отказ = Ложь;	
		Если ТекстОшибки <> ""  Тогда
			Объект.РезультатВыполнения = "Были обнаружены ошибки заполнения: ";
			Отказ=Истина;
		КонецЕсли;
		
		Если Отказ Тогда
			Объект.РезультатВыполнения = Объект.РезультатВыполнения + ТекстОшибки ;
			
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
			НСтр("ru = 'Задание не может быть выполнено пока не верно заполнены табличные части товаров, указанных в заказе или комерческом предложении. Верните заказ на доработку менеджеру.'"),,
			"Объект.Предмет",,
			Отказ);
			
		КонецЕсли;
	Иначе
		Отказ=Ложь;
	КонецЕсли;
	
	Возврат Отказ;
КонецФункции

	


&НаСервере
Функция  ВыполнитьЗадачу()
	
	Запрос	=	Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Товары.Номенклатура,
	|	НоменклатураДополнительныеРеквизиты.Значение КАК производитель
	|ИЗ
	|	Документ.ЗаказКлиента.Товары КАК Товары
	|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	|			НоменклатураДополнительныеРеквизиты.Значение КАК Значение,
	|			НоменклатураДополнительныеРеквизиты.Ссылка КАК Ссылка
	|		ИЗ
	|			Справочник.Номенклатура.ДополнительныеРеквизиты КАК НоменклатураДополнительныеРеквизиты
	|		ГДЕ
	|			НоменклатураДополнительныеРеквизиты.Свойство = &Производитель) КАК НоменклатураДополнительныеРеквизиты
	|		ПО (НоменклатураДополнительныеРеквизиты.Ссылка = Товары.Номенклатура)
	|ГДЕ
	|	Товары.Ссылка = &Предмет";
	Запрос.УстановитьПараметр("Производитель",ПланыВидовХарактеристик.ДополнительныеРеквизитыИСведения.АК_Производитель);
	Запрос.УстановитьПараметр("Предмет",Объект.Предмет);
	Номенклатура=Запрос.Выполнить().Выгрузить();
	Отказ=Ложь;
	
	ТекстСообщения =
	НСтр("ru='Пожалуйста заполните производителя в указанных позициях :'");
	
	Для каждого строка из Номенклатура Цикл
		Если Строка.Номенклатура.ВидНоменклатуры=Справочники.ВидыНоменклатуры.НайтиПоНаименованию("Услуга") Тогда
			Продолжить;
		КонецЕсли;
		Если НЕ ЗначениеЗаполнено(Строка.Производитель) Тогда
			ТекстСообщения=ТекстСообщения+строка.Номенклатура.Наименование+",";
			Отказ=Истина;
		КонецЕсли;
	КонецЦикла;
	Если Отказ Тогда
		Объект.РезультатВыполнения=ТекстСообщения;
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
		НСтр("ru = 'Задание не может быть выполнено пока не известны все поставщики для товаров, указанных в заказе. Верните заказ на доработку менеджеру.'"),,
		"Объект.Предмет",,
		Отказ);
	Конецесли;
	Возврат Отказ;
КонецФункции


////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

&НаСервере
Процедура ИнициализацияФормы()
	
    НачальныйПризнакВыполнения = Объект.Выполнена;

	ПрочитатьРеквизитыБизнесПроцесса();	
	УстановитьСостояниеЭлементов();
	            
	ИспользоватьДатуИВремяВСрокахЗадач = ПолучитьФункциональнуюОпцию("ИспользоватьДатуИВремяВСрокахЗадач");
	БизнесПроцессыИЗадачиСервер.УстановитьФорматДаты(Элементы.СрокИсполнения);
	БизнесПроцессыИЗадачиСервер.УстановитьФорматДаты(Элементы.Дата);
	
	БизнесПроцессыИЗадачиСервер.ФормаЗадачиПриСозданииНаСервере(ЭтаФорма, Объект, 
		Элементы.ГруппаСостояние, Элементы.ДатаИсполнения);
		
	Элементы.ОписаниеРезультата.ТолькоПросмотр = Объект.Выполнена;
	
	Если Объект.Выполнена Тогда
		Элементы.Выполнено.Доступность=Ложь;
		Элементы.Возвращено.Доступность=Ложь;
		Элементы.ДатаИсполнения.Видимость=Истина;
		Элементы.ДатаИсполненияВремя.Видимость=Истина;
		
	Иначе
		Элементы.Выполнено.Доступность=Истина;
		Элементы.Возвращено.Доступность=Истина;
		Элементы.ДатаИсполнения.Видимость=Ложь;
		Элементы.ДатаИсполненияВремя.Видимость=Ложь;		
	КонецЕсли;
	
	
КонецПроцедуры	
 
&НаСервере
Процедура ПрочитатьРеквизитыБизнесПроцесса()
	
	ЗадачаОбъект = РеквизитФормыВЗначение("Объект");
	
	УстановитьПривилегированныйРежим(Истина);
	ЗакупкаТовараОбъект = ЗадачаОбъект.БизнесПроцесс.ПолучитьОбъект();
	
	ЗаказПроверен = ЗакупкаТовараОбъект.ЗаказПроверен;
	РезультатПроверки = ЗакупкаТовараОбъект.РезультатПроверки;
	
КонецПроцедуры	

&НаСервере
Процедура ЗаписатьРеквизитыБизнесПроцесса(ЗадачаОбъект)
	
	УстановитьПривилегированныйРежим(Истина);
	ЗакупкаТовараОбъект = ЗадачаОбъект.БизнесПроцесс.ПолучитьОбъект();
	ЗаблокироватьДанныеДляРедактирования(ЗакупкаТовараОбъект.Ссылка);
	ЗакупкаТовараОбъект.ЗаказПроверен = ЗаказПроверен;
	ЗакупкаТовараОбъект.ДатаПроверки = ЗадачаОбъект.ДатаИсполнения;	
	ЗакупкаТовараОбъект.Записать();
	
КонецПроцедуры

&НаСервере
Процедура УстановитьСостояниеЭлементов()
	
	ЗадачаОбъект = РеквизитФормыВЗначение("Объект");
	Клиент=ЗадачаОбъект.Предмет.Партнер;
	Проект=ЗадачаОбъект.Предмет.Сделка;
	// Доработка +
    ДатаОтгрузки=ЗадачаОбъект.Предмет.ЖелаемаяДатаОтгрузки;  //ДатаОтгрузки
    // Доработка -
	БизнесПроцессы.акЗакупкаТовара.УстановитьСостояниеЭлементовФормыЗадачи(ЭтаФорма);
	
КонецПроцедуры
