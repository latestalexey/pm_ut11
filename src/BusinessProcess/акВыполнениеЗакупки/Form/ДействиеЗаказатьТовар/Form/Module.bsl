////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Объект.Ссылка.Пустая() Тогда
		ИнициализацияФормы();
	КонецЕсли;
	
//	ТекущийПользователь = Пользователи.ТекущийПользователь();
		
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	Заголовок=Объект.Наименование;	
		Если ЭтаФорма.ЕстьКорректировочныйЗаказ = Истина Тогда
		 ЭтаФорма.Элементы.КорректировочныйЗаказ.Доступность = Истина;
	 Иначе 
		ЭтаФорма.Элементы.КорректировочныйЗаказ.Доступность = Ложь; 
      КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	//Если  НЕ ЗначениеЗаполнено(ТекущийОбъект.Предмет) Тогда
	//	ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
	//		НСтр("ru = 'Отсутсвуют заказы по указанному поставщику для данного заказа клиента.'"),,
	//		"Объект.Предмет",,
	//		Отказ);
	//	Возврат;
	//КонецЕсли;
	//
	// запись объекта бизнес-процесса
	ЗаписатьРеквизитыБизнесПроцесса(ТекущийОбъект);

	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	БизнесПроцессыИЗадачиКлиент.ФормаЗадачиОбработкаОповещения(ЭтаФорма, ИмяСобытия, Параметр, Источник);
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
	ИнициализацияФормы();
	
КонецПроцедуры


////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ ШАПКИ ФОРМЫ


////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ КОМАНД ФОРМЫ

&НаКлиенте
Процедура ЗаписатьИЗакрытьВыполнить()
	БизнесПроцессыИЗадачиКлиент.ЗаписатьИЗакрытьВыполнить(ЭтаФорма);
КонецПроцедуры

&НаКлиенте
Процедура Выполнено(Команда)
	Если  НЕ ЗначениеЗаполнено(Объект.Предмет) Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
			НСтр("ru = 'Отсутсвуют заказы по указанному поставщику для данного заказа клиента.'"),,
			"Объект.Предмет",,
			Истина);
		Возврат;
	КонецЕсли;

	ЗаданиеВыполнено=Истина;
	
	Если   ЕстьКорректировочныйЗаказ И  ЗначениеЗаполнено(КорректировочныйЗаказ) Тогда
		ЗаданиеВыполнено=Истина;
	ИначеЕсли не  ЕстьКорректировочныйЗаказ И не ЗначениеЗаполнено(КорректировочныйЗаказ) тогда
		  ЗаданиеВыполнено=Истина;
	Иначе
		ЗаданиеВыполнено=Ложь;
		Возврат;
    КонецЕсли;
	
	БизнесПроцессыИЗадачиКлиент.ЗаписатьИЗакрытьВыполнить(ЭтаФорма, Истина);	
КонецПроцедуры

 &НаКлиенте
Процедура СменитьПоставщика(Команда)
	// Вставить содержимое обработчика.
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

&НаСервере
Процедура ИнициализацияФормы()
	
    НачальныйПризнакВыполнения = Объект.Выполнена;
	ПрочитатьРеквизитыБизнесПроцесса();	
	УстановитьСостояниеЭлементов();
	            
	ИспользоватьДатуИВремяВСрокахЗадач = ПолучитьФункциональнуюОпцию("ИспользоватьДатуИВремяВСрокахЗадач");
	БизнесПроцессыИЗадачиСервер.УстановитьФорматДаты(Элементы.СрокИсполнения);
	БизнесПроцессыИЗадачиСервер.УстановитьФорматДаты(Элементы.Дата);
	
	БизнесПроцессыИЗадачиСервер.ФормаЗадачиПриСозданииНаСервере(ЭтаФорма, Объект, 
		Элементы.ГруппаСостояние, Элементы.ДатаИсполнения);
		
	Элементы.ОписаниеРезультата.ТолькоПросмотр = Объект.Выполнена;
	
	Если Объект.Выполнена Тогда
		Элементы.Выполнено.Доступность=Ложь;
		Элементы.ДатаИсполнения.Видимость=Истина;
		Элементы.ДатаИсполненияВремя.Видимость=Истина;
		
	Иначе
		Элементы.Выполнено.Доступность=Истина;
		Элементы.ДатаИсполнения.Видимость=Ложь;
		Элементы.ДатаИсполненияВремя.Видимость=Ложь;		
	КонецЕсли;
	
	
КонецПроцедуры	
 
&НаСервере
Процедура ПрочитатьРеквизитыБизнесПроцесса()
	
	ЗадачаОбъект = РеквизитФормыВЗначение("Объект");
	
	УстановитьПривилегированныйРежим(Истина);
	ВыполнениеЗакупкиОбъект = ЗадачаОбъект.БизнесПроцесс.ПолучитьОбъект();
	ДатаОтгрузки	= ВыполнениеЗакупкиОбъект.ЗаказКлиента.ДатаОтгрузки;
	ЗаказКлиента	= ВыполнениеЗакупкиОбъект.ЗаказКлиента;
	Клиент			=  ВыполнениеЗакупкиОбъект.ЗаказКлиента.Партнер;
	Проект			=  ВыполнениеЗакупкиОбъект.ЗаказКлиента.Сделка;
	Поставщик		=  ВыполнениеЗакупкиОбъект.Поставщик;
	КорректировочныйЗаказ = ВыполнениеЗакупкиОбъект.КорректировочныйЗаказ; 
	ЕстьКорректировочныйЗаказ = ВыполнениеЗакупкиОбъект.ЕстьКорректировочныйЗаказ; 	
	//Если Не ЗначениеЗаполнено(ЗадачаОбъект.Предмет) Тогда
	//Запрос			= Новый Запрос;
	//Запрос.Текст="ВЫБРАТЬ
	//			 |	ЗаказПоставщику.Ссылка
	//			 |ИЗ
	//			 |	Документ.ЗаказПоставщику КАК ЗаказПоставщику
	//			 |ГДЕ
	//			 |	ЗаказПоставщику.ДокументОснование = &ЗаказКлиента
	//			 |	И ЗаказПоставщику.Партнер = &Поставщик
	//			 |	И ЗаказПоставщику.ПометкаУдаления = ЛОЖЬ
	//			 |	И ЗаказПоставщику.Проведен = ИСТИНА";
	//			 
	//Запрос.УстановитьПараметр("Поставщик",Поставщик);
	//Запрос.УстановитьПараметр("ЗаказКлиента",ЗаказКлиента);
	//
	//Результат=Запрос.Выполнить().Выгрузить();
	//Если Результат.Количество()>0 Тогда
	//	ЗадачаОбъект.Предмет=Результат[0].Ссылка;
	//	ЗадачаОбъект.Записать();
	//
	//КонецЕсли;
	//конецесли;
	РезультатВыполнения = ВыполнениеЗакупкиОбъект.РезультатВыполнения;
	
КонецПроцедуры	     

&НаСервере
Процедура ЗаписатьРеквизитыБизнесПроцесса(ЗадачаОбъект)
	
	УстановитьПривилегированныйРежим(Истина);
	ВыполнениеЗакупкиОбъект = ЗадачаОбъект.БизнесПроцесс.ПолучитьОбъект();
	ЗаблокироватьДанныеДляРедактирования(ВыполнениеЗакупкиОбъект.Ссылка);
	ВыполнениеЗакупкиОбъект.Поставщик=Поставщик;
    ВыполнениеЗакупкиОбъект.КорректировочныйЗаказ = КорректировочныйЗаказ;
	ВыполнениеЗакупкиОбъект.ЕстьКорректировочныйЗаказ = ЕстьКорректировочныйЗаказ;
	Если ЗаданиеВыполнено Тогда
		ВыполнениеЗакупкиОбъект.ЗаказСоздан=Истина;
		ВыполнениеЗакупкиОбъект.ДатаСозданияЗаказа=ТекущаяДата();
	КонецЕсли;
	ВыполнениеЗакупкиОбъект.Записать();
	
КонецПроцедуры

&НаСервере
Процедура УстановитьСостояниеЭлементов()
	
	ЗадачаОбъект = РеквизитФормыВЗначение("Объект");
	БизнесПроцессы.акЗакупкаТовара.УстановитьСостояниеЭлементовФормыЗадачи(ЭтаФорма);
	
КонецПроцедуры


&НаКлиенте
Процедура ЕстьКорректировочныйЗаказПриИзменении(Элемент)
	
	Если ЭтаФорма.ЕстьКорректировочныйЗаказ = Истина Тогда
		 ЭтаФорма.Элементы.КорректировочныйЗаказ.Доступность = Истина;
	 Иначе 
		ЭтаФорма.Элементы.КорректировочныйЗаказ.Доступность = Ложь; 
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура КорректировочныйЗаказНачалоВыбора(Элемент, ДанныеВыбора,СтандартнаяОбработка )
	// Вставить содержимое обработчика.
	СтандартнаяОбработка =ЛОЖЬ ;
	ПараметрФормы = Новый Структура("ЗаказКлиента , ЗаказПоставщика" , ЗаказКлиента, объект.предмет);
	//ОткрытьФорму("БизнесПроцесс.акВыполнениеЗакупки.форма.формаВыбора", ПараметрФормы,);
   КорректировочныйЗаказ =ОткрытьФормуМодально("БизнесПроцесс.акВыполнениеЗакупки.форма.формаВыбора", ПараметрФормы,);
КонецПроцедуры

