////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Объект.Ссылка.Пустая() Тогда
		ИнициализацияФормы();
	КонецЕсли;
	
//	ТекущийПользователь = Пользователи.ТекущийПользователь();
		
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	Заголовок=Объект.Наименование;	
КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	

	// запись объекта бизнес-процесса
	ЗаписатьРеквизитыБизнесПроцесса(ТекущийОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	БизнесПроцессыИЗадачиКлиент.ФормаЗадачиОбработкаОповещения(ЭтаФорма, ИмяСобытия, Параметр, Источник);
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
	ИнициализацияФормы();
	
КонецПроцедуры


////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ ШАПКИ ФОРМЫ


////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ КОМАНД ФОРМЫ

&НаКлиенте
Процедура ЗаписатьИЗакрытьВыполнить()
	БизнесПроцессыИЗадачиКлиент.ЗаписатьИЗакрытьВыполнить(ЭтаФорма);
КонецПроцедуры

&НаКлиенте
Процедура Выполнено(Команда)
	ЗаданиеВыполнено=Истина;
		БизнесПроцессыИЗадачиКлиент.ЗаписатьИЗакрытьВыполнить(ЭтаФорма, Истина);	
КонецПроцедуры


////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

&НаСервере
Процедура ИнициализацияФормы()
	
    НачальныйПризнакВыполнения = Объект.Выполнена;
	ПрочитатьРеквизитыБизнесПроцесса();	
	УстановитьСостояниеЭлементов();
	            
	ИспользоватьДатуИВремяВСрокахЗадач = ПолучитьФункциональнуюОпцию("ИспользоватьДатуИВремяВСрокахЗадач");
	БизнесПроцессыИЗадачиСервер.УстановитьФорматДаты(Элементы.СрокИсполнения);
	БизнесПроцессыИЗадачиСервер.УстановитьФорматДаты(Элементы.Дата);
	
	БизнесПроцессыИЗадачиСервер.ФормаЗадачиПриСозданииНаСервере(ЭтаФорма, Объект, 
		Элементы.ГруппаСостояние, Элементы.ДатаИсполнения);
		
	Элементы.ОписаниеРезультата.ТолькоПросмотр = Объект.Выполнена;
	
	Если Объект.Выполнена Тогда
		Элементы.Выполнено.Доступность=Ложь;
		Элементы.ДатаИсполнения.Видимость=Истина;
		Элементы.ДатаИсполненияВремя.Видимость=Истина;
		
	Иначе
		Элементы.Выполнено.Доступность=Истина;
		Элементы.ДатаИсполнения.Видимость=Ложь;
		Элементы.ДатаИсполненияВремя.Видимость=Ложь;		
	КонецЕсли;
	
	
КонецПроцедуры	
 
&НаСервере
Процедура ПрочитатьРеквизитыБизнесПроцесса()
	
	ЗадачаОбъект = РеквизитФормыВЗначение("Объект");
	
	УстановитьПривилегированныйРежим(Истина);
	
	ВыполнениеЗакупкиОбъект = ЗадачаОбъект.БизнесПроцесс.ПолучитьОбъект();
	ДатаОтгрузки	= ВыполнениеЗакупкиОбъект.ЗаказКлиента.ДатаОтгрузки;
	ЗаказКлиента	= ВыполнениеЗакупкиОбъект.ЗаказКлиента;
	Клиент			=  ВыполнениеЗакупкиОбъект.ЗаказКлиента.Партнер;
	Проект			=  ВыполнениеЗакупкиОбъект.ЗаказКлиента.Сделка;
	Поставщик		=  ВыполнениеЗакупкиОбъект.Поставщик;
	РезультатВыполнения = ВыполнениеЗакупкиОбъект.РезультатВыполнения;
    КорректировочныйЗаказ = ВыполнениеЗакупкиОбъект.КорректировочныйЗаказ;
	ЕстьКорректировочныйЗаказ = ВыполнениеЗакупкиОбъект.ЕстьКорректировочныйЗаказ;

	
КонецПроцедуры	     

&НаСервере
Процедура ЗаписатьРеквизитыБизнесПроцесса(ЗадачаОбъект)
	
	УстановитьПривилегированныйРежим(Истина);
	ВыполнениеЗакупкиОбъект = ЗадачаОбъект.БизнесПроцесс.ПолучитьОбъект();
	ЗаблокироватьДанныеДляРедактирования(ВыполнениеЗакупкиОбъект.Ссылка);
 	Если ЗаданиеВыполнено Тогда
		ВыполнениеЗакупкиОбъект.ЗаказПодтвержден=Истина;

	КонецЕсли;
	ВыполнениеЗакупкиОбъект.Записать();
	
КонецПроцедуры

&НаСервере
Процедура УстановитьСостояниеЭлементов()
	
	ЗадачаОбъект = РеквизитФормыВЗначение("Объект");

	БизнесПроцессы.акЗакупкаТовара.УстановитьСостояниеЭлементовФормыЗадачи(ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура ЕстьКорректировочныйЗаказПриИзменении(Элемент)
	
	Если ЭтаФорма.ЕстьКорректировочныйЗаказ = Истина Тогда
		 ЭтаФорма.Элементы.КорректировочныйЗаказ.Доступность = Истина;
	 Иначе 
		ЭтаФорма.Элементы.КорректировочныйЗаказ.Доступность = Ложь; 
	КонецЕсли;

КонецПроцедуры
