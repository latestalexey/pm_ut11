#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда


///////////////////////////////////////////////////////////////////////////////
// ПРОГРАММНЫЙ ИНТЕРФЕЙС

// СтандартныеПодсистемы.ВариантыОтчетов

// Настройки вариантов этого отчета.
// Подробнее - см. ВариантыОтчетовПереопределяемый.НастроитьВариантыОтчетов.
//
Процедура НастроитьВариантыОтчета(Настройки, ОписаниеОтчета) Экспорт
	
	// Отключение контекстных вариантов
	ВариантыОтчетовУТПереопределяемый.ОтключитьВариантОтчета(Настройки, ОписаниеОтчета, "ДинамикаПродажКонтекст");
	ВариантыОтчетовУТПереопределяемый.ОтключитьВариантОтчета(Настройки, ОписаниеОтчета, "ПоНоменклатуреКонтекст");
	ВариантыОтчетовУТПереопределяемый.ОтключитьВариантОтчета(Настройки, ОписаниеОтчета, "ПродажиПоЗаказуКонтекст");
	
	// Настройка размещения, видимости по умолчанию, важности
	ОписаниеВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, ОписаниеОтчета, "ПродажиПоПартнерам");
	ОписаниеВарианта.Размещение.Удалить(Метаданные.Подсистемы.Продажи.Подсистемы.РозничныеПродажи);
	ВариантыОтчетовУТПереопределяемый.УстановитьВажностьВариантаОтчета(ОписаниеВарианта, "Важный");
	
	ОписаниеВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, ОписаниеОтчета, "ДинамикаПродаж");
	ОписаниеВарианта.Размещение.Удалить(Метаданные.Подсистемы.Продажи.Подсистемы.РозничныеПродажи);
	ВариантыОтчетовУТПереопределяемый.УстановитьВажностьВариантаОтчета(ОписаниеВарианта, "Важный");
	
	ОписаниеВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, ОписаниеОтчета, "ПродажиПоМенеджерам");
	ОписаниеВарианта.Размещение.Удалить(Метаданные.Подсистемы.Продажи.Подсистемы.РозничныеПродажи);               
	
	ОписаниеВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, ОписаниеОтчета, "ПродажиПоПодразделениям");
	ОписаниеВарианта.Размещение.Удалить(Метаданные.Подсистемы.Продажи.Подсистемы.РозничныеПродажи);
	
	ОписаниеВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, ОписаниеОтчета, "ПродажиПоСделкам");
	ОписаниеВарианта.Размещение.Удалить(Метаданные.Подсистемы.Продажи.Подсистемы.РозничныеПродажи);
	ОписаниеВарианта.ВидимостьПоУмолчанию = Ложь;
	
	ОписаниеВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, ОписаниеОтчета, "ПродажиПоПоставщикам");
	ОписаниеВарианта.Размещение.Удалить(Метаданные.Подсистемы.Продажи.Подсистемы.РозничныеПродажи);
	
	ОписаниеВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, ОписаниеОтчета, "АнализПродажПоБизнесРегионам");
	ОписаниеВарианта.Размещение.Удалить(Метаданные.Подсистемы.Продажи.Подсистемы.РозничныеПродажи);
	
	ОписаниеВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, ОписаниеОтчета, "ПродажиРозницыПоПодразделениям");
	ОписаниеВарианта.Размещение.Удалить(Метаданные.Подсистемы.Продажи.Подсистемы.ПродажиИВозвраты);
	ОписаниеВарианта.Размещение.Удалить(Метаданные.Подсистемы.Финансы.Подсистемы.ФинансовыйРезультат);
	ВариантыОтчетовУТПереопределяемый.УстановитьВажностьВариантаОтчета(ОписаниеВарианта, "Важный");
	
	ОписаниеВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, ОписаниеОтчета, "ПродажиРозницыПоПоставщикам");
	ОписаниеВарианта.Размещение.Удалить(Метаданные.Подсистемы.Продажи.Подсистемы.ПродажиИВозвраты);
	ОписаниеВарианта.ВидимостьПоУмолчанию = Ложь;
	
	ОписаниеВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, ОписаниеОтчета, "ДинамикаПродажРозницы");
	ОписаниеВарианта.Размещение.Удалить(Метаданные.Подсистемы.Продажи.Подсистемы.ПродажиИВозвраты);
	ОписаниеВарианта.Размещение.Удалить(Метаданные.Подсистемы.Финансы.Подсистемы.ФинансовыйРезультат);
	ВариантыОтчетовУТПереопределяемый.УстановитьВажностьВариантаОтчета(ОписаниеВарианта, "Важный");
	
КонецПроцедуры

Функция ФункциональныеОпцииВариантовОтчетов() Экспорт
	ФункциональныеОпцииВариантовОтчетов = ВариантыОтчетовУТПереопределяемый.ИнициализироватьФункциональныеОпцииВариантовОтчетов();
	
	// Вариант "ПродажиПоСделкам" зависит от 3-х ФО одновременно
	ВариантыОтчетовУТПереопределяемый.ДобавитьФункциональнуюОпциюВариантаОтчета(ФункциональныеОпцииВариантовОтчетов, 
		"ПродажиПоСделкам", "ИспользоватьСделкиСКлиентами");
	ВариантыОтчетовУТПереопределяемый.ДобавитьФункциональнуюОпциюВариантаОтчета(ФункциональныеОпцииВариантовОтчетов, 
		"ПродажиПоСделкам", "ИспользоватьУправлениеСделками");
	ВариантыОтчетовУТПереопределяемый.ДобавитьФункциональнуюОпциюВариантаОтчета(ФункциональныеОпцииВариантовОтчетов, 
		"ПродажиПоСделкам", "ИспользоватьЗаказыКлиентов");
	
	ВариантыОтчетовУТПереопределяемый.ДобавитьФункциональнуюОпциюВариантаОтчета(ФункциональныеОпцииВариантовОтчетов, 
		"ПродажиПоПоставщикам", "ФормироватьВидыЗапасовПоПоставщикам");
		
	ВариантыОтчетовУТПереопределяемый.ДобавитьФункциональнуюОпциюВариантаОтчета(ФункциональныеОпцииВариантовОтчетов, 
		"ПродажиРозницыПоПоставщикам", "ФормироватьВидыЗапасовПоПоставщикам");
	ВариантыОтчетовУТПереопределяемый.ДобавитьФункциональнуюОпциюВариантаОтчета(ФункциональныеОпцииВариантовОтчетов, 
		"ПродажиРозницыПоПоставщикам", "ИспользоватьРозничныеПродажи");
		
	ВариантыОтчетовУТПереопределяемый.ДобавитьФункциональнуюОпциюВариантаОтчета(ФункциональныеОпцииВариантовОтчетов, 
		"ПродажиРозницыПоПодразделениям", "ИспользоватьРозничныеПродажи");
		
	ВариантыОтчетовУТПереопределяемый.ДобавитьФункциональнуюОпциюВариантаОтчета(ФункциональныеОпцииВариантовОтчетов, 
		"ДинамикаПродажРозницы", "ИспользоватьРозничныеПродажи");
		
	ВариантыОтчетовУТПереопределяемый.ДобавитьФункциональнуюОпциюВариантаОтчета(ФункциональныеОпцииВариантовОтчетов, 
		"АнализПродажПоБизнесРегионам", "ИспользоватьБизнесРегионы");
	
	Возврат ФункциональныеОпцииВариантовОтчетов;
КонецФункции
// Конец СтандартныеПодсистемы.ВариантыОтчетов

// Методы расширения общей формы отчетов
//

// Вызывается в одноименном обработчике формы отчета после выполнения кода формы.
//
// Подробнее - см. ФормаОтчетаПереопределяемый.ПриСозданииНаСервере
//
Процедура ПриСозданииНаСервере(ЭтаФорма, Отказ, СтандартнаяОбработка) Экспорт
	// Дополнительные команды
	КомпоновщикНастроек = ЭтаФорма.Отчет.КомпоновщикНастроек;
	Параметры = ЭтаФорма.Параметры;
	
	Если Параметры.Свойство("РасширенныйОтбор") Тогда
		РасширенныйОтбор = КомпоновщикНастроек.ФиксированныеНастройки.Отбор.Элементы.Добавить(
			Тип("ЭлементОтбораКомпоновкиДанных")
		);
		РасширенныйОтбор.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Партнер");
		Если ТипЗнч(Параметры.РасширенныйОтбор) = Тип("Массив") Тогда
			ЭтоМассив = Истина;
			Если Параметры.РасширенныйОтбор.Количество() > 0 Тогда
				ПервыйЭлемент = Параметры.РасширенныйОтбор[0];
			Иначе
				ПервыйЭлемент = Неопределено;
			КонецЕсли;
		Иначе
			ЭтоМассив = Ложь;
			ПервыйЭлемент = Параметры.РасширенныйОтбор;
		КонецЕсли;
		Если ТипЗнч(ПервыйЭлемент) = Тип("СправочникСсылка.Партнеры") Тогда
			Если ЭтоМассив Тогда
				ЕстьПодчиненныеПартнеры = Ложь;
				Для Каждого ЭлементПараметраКоманды Из Параметры.РасширенныйОтбор Цикл
					Если ПартнерыИКонтрагенты.ЕстьПодчиненныеПартнеры(ЭлементПараметраКоманды) Тогда
						ЕстьПодчиненныеПартнеры = Истина;
						Прервать;
					КонецЕсли;
				КонецЦикла;
			Иначе
				ЕстьПодчиненныеПартнеры = ПартнерыИКонтрагенты.ЕстьПодчиненныеПартнеры(Параметры.РасширенныйОтбор);
			КонецЕсли;
			Если ЕстьПодчиненныеПартнеры И ЭтоМассив Тогда
				РасширенныйОтбор.ВидСравнения = ВидСравненияКомпоновкиДанных.ВСпискеПоИерархии;
			ИначеЕсли ЕстьПодчиненныеПартнеры Тогда
				РасширенныйОтбор.ВидСравнения = ВидСравненияКомпоновкиДанных.ВИерархии;
			ИначеЕсли ЭтоМассив Тогда
				РасширенныйОтбор.ВидСравнения = ВидСравненияКомпоновкиДанных.ВСписке;
			Иначе
				РасширенныйОтбор.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
			КонецЕсли;
			РасширенныйОтбор.ПравоеЗначение = Параметры.РасширенныйОтбор;
		ИначеЕсли ТипЗнч(Параметры.РасширенныйОтбор) = Тип("СправочникСсылка.СегментыПартнеров") Тогда
			РасширенныйОтбор.ВидСравнения = ВидСравненияКомпоновкиДанных.ВСписке;
			РасширенныйОтбор.ПравоеЗначение = СегментыСервер.МассивЭлементов(
				ПервыйЭлемент
			);
		КонецЕсли;
		РасширенныйОтбор.Использование = Истина;
	КонецЕсли;
	
КонецПроцедуры

// Вызывается в одноименном обработчике формы отчета после выполнения кода формы.
//
// Подробнее - см. ФормаОтчетаПереопределяемый.ПриЗагрузкеВариантаНаСервере
//
Процедура ПриЗагрузкеВариантаНаСервере(ЭтаФорма, НовыеНастройкиКД) Экспорт
	
	Отчет = ЭтаФорма.Отчет;
	Параметры = ЭтаФорма.Параметры;
	КомпоновщикНастроек = Отчет.КомпоновщикНастроек;
	
	Если Параметры.Свойство("Расшифровка") И Параметры.Расшифровка <> Неопределено
		И Параметры.Расшифровка.ПрименяемыеНастройки.ДополнительныеСвойства.Свойство("ФиксированныеНастройки") Тогда
		КомпоновщикНастроек.ЗагрузитьНастройки(Параметры.Расшифровка.ПрименяемыеНастройки);
	КонецЕсли;
	
	// Установка значений по умолчанию
	СегментыСервер.ВключитьОтборПоСегментуПартнеровВСКД(КомпоновщикНастроек);
	СегментыСервер.ВключитьОтборПоСегментуНоменклатурыВСКД(КомпоновщикНастроек);

	Параметр = НастройкаПараметра(КомпоновщикНастроек, "ПоказыватьПродажи");
	Параметр.Использование = Истина;

	НовыеНастройкиКД = КомпоновщикНастроек.Настройки;
	
КонецПроцедуры

///////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

Функция НастройкаПараметра(КомпоновщикНастроек, ИмяПараметра, Пользовательский = Ложь)
	
	ПараметрДанных = КомпоновщикНастроек.Настройки.ПараметрыДанных.Элементы.Найти(ИмяПараметра);
	Если ПараметрДанных <> Неопределено Тогда
		ПараметрПользовательскойНастройки = КомпоновщикНастроек.ПользовательскиеНастройки.Элементы.Найти(ПараметрДанных.ИдентификаторПользовательскойНастройки);
		Если Пользовательский И ПараметрПользовательскойНастройки <> Неопределено Тогда
			Возврат ПараметрПользовательскойНастройки;
		Иначе
			Возврат ПараметрДанных;
		КонецЕсли;
	КонецЕсли;
	Возврат Неопределено;
	
КонецФункции

// Конец СтандартныеПодсистемы.ВариантыОтчетов

#КонецЕсли