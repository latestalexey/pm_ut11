
////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	РисункиТабличногоДокумента = Таб1.Рисунки;
	Для Каждого РисунокТабличногоДокумента Из РисункиТабличногоДокумента Цикл 
		Попытка
			РисунокОбъект = РисунокТабличногоДокумента.Объект;
			Если ТипЗнч(РисунокОбъект) = Тип("Диаграмма") Тогда
				РисунокОбъект.ОбластьЛегенды.Прокрутка = Истина;
				
			КонецЕсли;
		Исключение
		КонецПопытки;
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ОбновитьСервер();
	
	Копии = 1;
	
	ПараметрыВывода = УправлениеПечатью.ПодготовитьСтруктуруПараметровВывода();
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ ШАПКИ ФОРМЫ

&НаКлиенте
Процедура КопииПриИзменении(Элемент)
	
	Копии = ЭтаФорма[Элемент.Имя];
	ИмяТабДока = "Таб" + ?(Элемент.Имя = "Копии", "1", Сред(Элемент.Имя, 6));
	ТабДок = ЭтаФорма[ИмяТабДока];
	ТабДок.КоличествоЭкземпляров = Копии;
	НужноСохранитьНастройкиКопий = Истина;
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ КОМАНД ФОРМЫ

&НаКлиенте
Процедура Обновить(Команда)
	
	ОбновитьСервер(Истина);
	
КонецПроцедуры

&НаКлиенте
Процедура Сохранить(Команда)
	НастройкиСохранения = ОткрытьФормуМодально("ОбщаяФорма.СохранениеПечатнойФормы", Новый Структура("ОбъектыПечати", ОбъектыПечати));
	Если НастройкиСохранения <> Неопределено И НастройкиСохранения <> КодВозвратаДиалога.Отмена Тогда
		ФайлыВоВременномХранилище = ПоместитьТабличныеДокументыВоВременноеХранилище(НастройкиСохранения);
		Если НастройкиСохранения.ВариантСохранения = "СохранитьВПапку" Тогда
			СохранитьПечатныеФормыВПапку(ФайлыВоВременномХранилище, НастройкиСохранения.ПапкаДляСохранения);
		Иначе
			ПрисоединитьПечатныеФормыКОбъекту(ФайлыВоВременномХранилище, НастройкиСохранения.ОбъектДляПрикрепления);
			Состояние(НСтр("ru = 'Сохранение успешно завершено.'"));
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура Отправить(Команда)
	
	ПараметрыОткрытия = Новый Структура;
	ИмяОткрываемойФормы = "ОбщаяФорма.ВыборФорматаВложений";
	Если ПолучателейБольшеОдного(ПараметрыВывода.ПараметрыОтправки.Получатель) Тогда
		ПараметрыОткрытия.Вставить("Получатели", ПараметрыВывода.ПараметрыОтправки.Получатель);
		ИмяОткрываемойФормы = "ОбщаяФорма.ОтправкаПечатнойФормыПоПочте";
	КонецЕсли;
	
	НастройкиСохранения = ОткрытьФормуМодально(ИмяОткрываемойФормы, ПараметрыОткрытия);
	Если НастройкиСохранения <> Неопределено И НастройкиСохранения <> КодВозвратаДиалога.Отмена Тогда
		СписокВложений = ПоместитьТабличныеДокументыВоВременноеХранилище(НастройкиСохранения);
		ПараметрыОтправки = ПараметрыВывода.ПараметрыОтправки;
		Получатели = ПараметрыОтправки.Получатель;
		Если НастройкиСохранения.Свойство("Получатели") Тогда
			Получатели = НастройкиСохранения.Получатели;
		КонецЕсли;
		РаботаСПочтовымиСообщениямиКлиент.ОткрытьФормуОтправкиПочтовогоСообщения( , Получатели, ПараметрыОтправки.Тема, ПараметрыОтправки.Текст, СписокВложений, Истина);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПечатьВыполнить()
	
	ТабличныеДокументы = Новый СписокЗначений;
	
	Для Каждого ТабДокумент Из ИменаТабДокументов Цикл
		ТабличныеДокументы.Добавить(ЭтаФорма["Таб" + ТабДокумент.Значение], ТабДокумент.Представление);
	КонецЦикла;
	
	УправлениеПечатьюКлиент.РаспечататьТабличныеДокументы(ТабличныеДокументы, ОбъектыПечати, Ложь);
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

////////////////////////////////////////////////////////////////////////////////
// Подготовка табличных документов к отправке

&НаСервере
Функция ПоместитьТабличныеДокументыВоВременноеХранилище(НастройкиСохранения)
	Перем ЗаписьZipФайла, ИмяАрхива;
	
	Результат = Новый СписокЗначений;
	
	// подготовка архива
	Если НастройкиСохранения.УпаковатьВАрхив Тогда
		ИмяАрхива = ПолучитьИмяВременногоФайла("zip");
		ЗаписьZipФайла = Новый ЗаписьZipФайла(ИмяАрхива);
	КонецЕсли;
	
	// подготовка временной папки
	ИмяВременнойПапки = ПолучитьИмяВременногоФайла();
	СоздатьКаталог(ИмяВременнойПапки);
	ИспользованныеИменаФайлов = Новый Соответствие;
	
	ВыбранныеФорматыСохранения = НастройкиСохранения.ФорматыСохранения;
	ТаблицаФорматов = УправлениеПечатью.НастройкиФорматовСохраненияТабличногоДокумента();
	
	// сохранение печатных форм
	ПечатнаяФорма = ЭтаФорма.Таб1;
	
	НомерПечатнойФормы = 1;
	Для Каждого ТипФайла Из ВыбранныеФорматыСохранения Цикл
		НастройкиФормата = ТаблицаФорматов.НайтиСтроки(Новый Структура("ТипФайлаТабличногоДокумента", ТипФайла))[0];
		
		ИмяФайла = ПолучитьИмяВременногоФайлаДляПечатнойФормы(ВариантыАнализаОтчета[0].ВариантАнализа.Владелец.ЦелевойПоказатель,
		НастройкиФормата.Расширение,ИспользованныеИменаФайлов);
		ПолноеИмяФайла = ОбщегоНазначенияКлиентСервер.ДобавитьКонечныйРазделительПути(ИмяВременнойПапки) + ИмяФайла;
		
		ПечатнаяФорма.Записать(ПолноеИмяФайла, ТипФайла);
		
		Если ТипФайла = ТипФайлаТабличногоДокумента.HTML Тогда
			ВставитьКартинкиВHTML(ПолноеИмяФайла);
		КонецЕсли;
		
		Если ЗаписьZipФайла <> Неопределено Тогда 
			ЗаписьZipФайла.Добавить(ПолноеИмяФайла);
		Иначе
			ДвоичныеДанные = Новый ДвоичныеДанные(ПолноеИмяФайла);
			ПутьВоВременномХранилище = ПоместитьВоВременноеХранилище(ДвоичныеДанные, ЭтаФорма.УникальныйИдентификатор);
			Результат.Добавить(ПутьВоВременномХранилище, ИмяФайла);
		КонецЕсли;
	КонецЦикла;
	
	// если архив подготовлен, записываем и помещаем его во временное хранилище
	Если ЗаписьZipФайла <> Неопределено Тогда 
		ЗаписьZipФайла.Записать();
		ФайлАрхива = Новый Файл(ИмяАрхива);
		ДвоичныеДанные = Новый ДвоичныеДанные(ИмяАрхива);
		ПутьВоВременномХранилище = ПоместитьВоВременноеХранилище(ДвоичныеДанные, ЭтаФорма.УникальныйИдентификатор);
		Результат.Добавить(ПутьВоВременномХранилище, ПолучитьИмяФайлаДляАрхива());
	КонецЕсли;
	
	УдалитьФайлы(ИмяВременнойПапки);
	
	Возврат Результат;
	
КонецФункции

&НаСервере
Процедура ВставитьКартинкиВHTML(ИмяФайлаHTML)
	
	ТекстовыйДокумент = Новый ТекстовыйДокумент();
	ТекстовыйДокумент.Прочитать(ИмяФайлаHTML, КодировкаТекста.UTF8);
	ТекстHTML = ТекстовыйДокумент.ПолучитьТекст();
	
	ФайлHTML = Новый Файл(ИмяФайлаHTML);
	
	ИмяПапкиКартинок = ФайлHTML.ИмяБезРасширения + "_files";
	ПутьКПапкеКартинок = СтрЗаменить(ФайлHTML.ПолноеИмя, ФайлHTML.Имя, ИмяПапкиКартинок);
	
	// ожидается, что в папке будут только картинки
	ФайлыКартинок = НайтиФайлы(ПутьКПапкеКартинок, "*");
	
	Для Каждого ФайлКартинки Из ФайлыКартинок Цикл
		КартинкаТекстом = Base64Строка(Новый ДвоичныеДанные(ФайлКартинки.ПолноеИмя));
		КартинкаТекстом = "data:image/" + Сред(ФайлКартинки.Расширение,2) + ";base64," + Символы.ПС + КартинкаТекстом;
		
		ТекстHTML = СтрЗаменить(ТекстHTML, ИмяПапкиКартинок + "\" + ФайлКартинки.Имя, КартинкаТекстом);
	КонецЦикла;
	
	ТекстовыйДокумент.УстановитьТекст(ТекстHTML);
	ТекстовыйДокумент.Записать(ИмяФайлаHTML, КодировкаТекста.UTF8);
	
КонецПроцедуры

&НаСервере
Функция ПолучитьИмяВременногоФайлаДляПечатнойФормы(ИмяМакета, Расширение, ИспользованныеИменаФайлов)
	
	ШаблонИмениФайла = "%1%2.%3";
	
	ИмяВременногоФайла = ОбщегоНазначенияКлиентСервер.ЗаменитьНедопустимыеСимволыВИмениФайла(
	СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ШаблонИмениФайла, ИмяМакета, "", Расширение));
	
	НомерИспользования = ?(ИспользованныеИменаФайлов[ИмяВременногоФайла] <> Неопределено,
	ИспользованныеИменаФайлов[ИмяВременногоФайла] + 1,
	1);
	
	ИспользованныеИменаФайлов.Вставить(ИмяВременногоФайла, НомерИспользования);
	
	// если имя уже было ранее использовано, прибавляем счётчик в конце имени
	Если НомерИспользования > 1 Тогда
		ИмяВременногоФайла = ОбщегоНазначенияКлиентСервер.ЗаменитьНедопустимыеСимволыВИмениФайла(
		СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
		ШаблонИмениФайла,
		ИмяМакета,
		" (" + НомерИспользования + ")",
		Расширение));
	КонецЕсли;
	
	Возврат ИмяВременногоФайла;
	
КонецФункции

&НаСервере
Функция ПолучитьИмяФайлаДляАрхива()
	
	Возврат НСтр("ru= 'Целевые показатели'") + Символы.НПП + Формат(ТекущаяДата(), "ДЛФ=D") + ".zip";
	
КонецФункции

&НаКлиенте
Функция ПолучателейБольшеОдного(Получатель)
	Если ТипЗнч(Получатель) = Тип("Массив") Или ТипЗнч(Получатель) = Тип("СписокЗначений") Тогда
		Возврат Получатель.Количество() > 1;
	Иначе
		Возврат ОбщегоНазначенияКлиентСервер.АдресаЭлектроннойПочтыИзСтроки(Получатель).Количество() > 1;
	КонецЕсли;
КонецФункции

&НаКлиенте
Процедура СохранитьПечатныеФормыВПапку(СписокФайловВоВременномХранилище, Папка = "")
	
	Если Не ПодключитьРасширениеРаботыСФайлами() Тогда
		Для Каждого ФайлДляЗаписи Из СписокФайловВоВременномХранилище Цикл
			ПолучитьФайл(ФайлДляЗаписи.Значение, ФайлДляЗаписи.Представление);
		КонецЦикла;
		Возврат;
	КонецЕсли;
	
	БольшеНеЗадаватьЭтотВопрос = Ложь;
	ОтветПользователя = "Отмена";
	
	Для Каждого ФайлДляЗаписи Из СписокФайловВоВременномХранилище Цикл
		ПолноеИмяФайла = ОбщегоНазначенияКлиентСервер.ДобавитьКонечныйРазделительПути(Папка) + ФайлДляЗаписи.Представление;
		
		// проверка существования файла с таким же именем
		ПроверяемыйФайл = Новый Файл(ПолноеИмяФайла);
		Если ПроверяемыйФайл.Существует() Тогда
			СписокКнопок = Новый СписокЗначений;
			СписокКнопок.Добавить("Заменить", НСтр("ru = 'Заменить'"));
			СписокКнопок.Добавить("Пропустить", НСтр("ru = 'Пропустить'"));
			СписокКнопок.Добавить("Отмена", НСтр("ru = 'Отмена'"));
			
			ТекстВопроса = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = 'Файл %1 уже существует в указанной папке. Заменить?'"),  """" + ПолноеИмяФайла + """" + Символы.ПС);
			
			Если Не БольшеНеЗадаватьЭтотВопрос Тогда
				ОтветПользователя = СтандартныеПодсистемыКлиент.ВопросПользователю(ТекстВопроса, СписокКнопок, , "Отмена",
				НСтр("ru = 'Сохранение печатной формы'"),,БольшеНеЗадаватьЭтотВопрос);
			КонецЕсли;
			
			Если ОтветПользователя = "Отмена" Тогда
				Возврат;
			ИначеЕсли ОтветПользователя = "Пропустить" Тогда
				Продолжить;
			КонецЕсли;
		КонецЕсли;
		
		ДвоичныеДанные = ПолучитьИзВременногоХранилища(ФайлДляЗаписи.Значение);
		ДвоичныеДанные.Записать(ПолноеИмяФайла);
	КонецЦикла;
	
	Состояние(НСтр("ru = 'Сохранение успешно завершено'"), , НСтр("ru = 'в папку:'") + " " + Папка);
	
КонецПроцедуры

&НаСервере
Процедура ПрисоединитьПечатныеФормыКОбъекту(ФайлыВоВременномХранилище, ОбъектДляПрисоединения)
	Для Каждого Файл Из ФайлыВоВременномХранилище Цикл
		СтандартныеПодсистемыПереопределяемый.ПриПрисоединенииПечатнойФормыКОбъекту(ОбъектДляПрисоединения, Файл.Представление, Файл.Значение);
	КонецЦикла;
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// Прочее

&НаСервере 
Процедура ОбновитьСервер(ПринудительноОбновитьДанные = Ложь)
	
	Если Параметры.Свойство("ВариантыАнализа") Тогда
		
		ВариантыАнализа = Параметры.ВариантыАнализа;
		
		Если ТипЗнч(ВариантыАнализа) = Тип("ДанныеФормыКоллекция") Тогда
			Для Каждого ВариантАнализа Из ВариантыАнализа Цикл 
				НовыйВариант = ВариантыАнализаОтчета.Добавить();
				ЗаполнитьЗначенияСвойств(НовыйВариант, ВариантАнализа);
				
			КонецЦикла;
			
		ИначеЕсли ТипЗнч(ВариантыАнализа) = Тип("Массив") Тогда
			Для Каждого ВариантАнализа Из ВариантыАнализа Цикл 
				НовыйВариант = ВариантыАнализаОтчета.Добавить();
				НовыйВариант.ВариантАнализа = ВариантАнализа;
				
			КонецЦикла;
		КонецЕсли;
		
	КонецЕсли;
	
	Таб1 = МониторингЦелевыхПоказателей.ЗаполнитьСводныйОтчетДаннымиПоказателя(Таб1, ВариантыАнализаОтчета,, ПринудительноОбновитьДанные);
	
	Таб1.КоличествоЭкземпляров = Копии;
	
	ИменаТабДокументов.Добавить(1, НСтр("ru='Справка по показателю'"));
	ОбъектыПечати.Добавить(ВариантыАнализаОтчета[0].ВариантАнализа.Владелец, ВариантыАнализаОтчета[0].ВариантАнализа.Владелец.ЦелевойПоказатель);
	
КонецПроцедуры


