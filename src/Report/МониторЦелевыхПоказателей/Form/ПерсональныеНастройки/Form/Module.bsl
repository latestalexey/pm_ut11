////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

&НаКлиенте
Процедура ПередЗакрытием(Отказ, СтандартнаяОбработка)
	
	Если Модифицированность Тогда
		Ответ = Вопрос(НСтр("ru='Настройки были изменены. Записать изменения настроек?'"), РежимДиалогаВопрос.ДаНетОтмена);
		
		Если Ответ = КодВозвратаДиалога.Да Тогда
			ЗаписатьНастройки();
			
		ИначеЕсли Ответ = КодВозвратаДиалога.Отмена Тогда
			Отказ = Истина;
			
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	СтруктураНастроек = МониторингЦелевыхПоказателей.ПолучитьНастройкиМонитораЦелевыхПоказателей();
	
	ТекущийПользователь = Пользователи.ТекущийПользователь();
	
	ЗаполнитьЗначенияСвойств(ЭтаФорма, СтруктураНастроек);
	
	УстановитьНадписьКоличествоКолонокМонитораПоказателей(КоличествоКолонокМонитораПоказателей, Элементы);
	
	ЗаполнитьВариантыАнализа();
	
	Если ВариантыАнализа.ПолучитьЭлементы().Количество() = 0 Тогда
		Элементы.Страницы.ТекущаяСтраница = Элементы.СтраницаСообщения;
	Иначе
		Элементы.Страницы.ТекущаяСтраница = Элементы.СтраницаНастроекВариантовАнализа;
	КонецЕсли;
	
	// Кэшируем варианты отображения и тип анализа, так как потребуется сравнение с ними на клиенте
	ВариантОтображенияКратко = Перечисления.ВариантыОтображенияВариантовАнализа.Кратко;
	ВариантОтображенияДиаграмма = Перечисления.ВариантыОтображенияВариантовАнализа.Диаграмма;
	ВариантОтображенияТаблица = Перечисления.ВариантыОтображенияВариантовАнализа.Таблица;
	ТипАнализаПокомпонентноеСравнение = Перечисления.ТипыАнализаПоказателей.ПокомпонентноеСравнение;
	
	// Если нет права, то настройки по умолчанию покажем, но изменить или записать их будет нельзя
	ТолькоПросмотр = НЕ ПравоДоступа("СохранениеДанныхПользователя", Метаданные);
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ ШАПКИ ФОРМЫ

&НаКлиенте
Процедура ВариантГруппировкиПоказателейПриИзменении(Элемент)
	
	Модифицированность = Истина;
	
КонецПроцедуры

&НаКлиенте
Процедура ВариантОтображенияДеталейПриИзменении(Элемент)
	
	Модифицированность = Истина;
	
КонецПроцедуры

&НаКлиенте
Процедура КоличествоКолонокМонитораПоказателейПриИзменении(Элемент)
	
	УстановитьНадписьКоличествоКолонокМонитораПоказателей(КоличествоКолонокМонитораПоказателей, Элементы);
	
	Модифицированность = Истина;
	
КонецПроцедуры

&НаКлиенте
Процедура ПериодАвтообновленияПриИзменении(Элемент)
	
	Модифицированность = Истина;
	
КонецПроцедуры

&НаКлиенте
Процедура РазмерДиаграммПриИзменении(Элемент)
	
	Модифицированность = Истина;
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ ТАБЛИЦЫ ФОРМЫ ВАРИАНТЫ АНАЛИЗА

&НаКлиенте
Процедура ВариантыАнализаДоступностьПоЦелиПриИзменении(Элемент)
	
	Если Элементы.ВариантыАнализа.ТекущиеДанные <> Неопределено Тогда
		ОбновитьСоставДоступностиВниз(Элементы.ВариантыАнализа.ТекущаяСтрока, Элементы.ВариантыАнализа.ТекущиеДанные.ДоступностьПоЦели);
		ОбновитьСоставДоступностиВверх(Элементы.ВариантыАнализа.ТекущаяСтрока);
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ВариантыАнализаДоступностьПриИзменении(Элемент)
	
	Если Элементы.ВариантыАнализа.ТекущиеДанные <> Неопределено Тогда
		ОбновитьСоставДоступностиВверх(Элементы.ВариантыАнализа.ТекущаяСтрока);
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ВариантыАнализаПередНачаломИзменения(Элемент, Отказ)
	
	СписокВыбора = Элементы.ВариантыАнализаВариантОтображения.СписокВыбора;
	
	СписокВыбора.Очистить();
	
	СписокВыбора.Добавить(ВариантОтображенияКратко);
	СписокВыбора.Добавить(ВариантОтображенияДиаграмма);
	
	Если Элемент.ТекущиеДанные.ТипАнализа = ТипАнализаПокомпонентноеСравнение Тогда 
		СписокВыбора.Добавить(ВариантОтображенияТаблица);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ВариантыАнализаПриИзменении(Элемент)
	
	Модифицированность = Истина;
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ ТАБЛИЦЫ ФОРМЫ ВЫБРАННЫЕ ВАРИАНТЫ АНАЛИЗА

&НаКлиенте
Процедура ВыбранныеВариантыАнализаВариантОтображенияПриИзменении(Элемент)
	
	ВыбранныйВариантАнализа = Элементы.ВыбранныеВариантыАнализа.ТекущиеДанные;
	
	ОбновляемаяСтрока = ВариантыАнализа.НайтиПоИдентификатору(ВыбранныйВариантАнализа.ИдентификаторНастройкиДоступности);
	ОбновляемаяСтрока.ВариантОтображения = ВыбранныйВариантАнализа.ВариантОтображения;
	
КонецПроцедуры

&НаКлиенте
Процедура ВыбранныеВариантыАнализаДеталиПриИзменении(Элемент)
	
	ВыбранныйВариантАнализа = Элементы.ВыбранныеВариантыАнализа.ТекущиеДанные;
	
	ОбновляемаяСтрока = ВариантыАнализа.НайтиПоИдентификатору(ВыбранныйВариантАнализа.ИдентификаторНастройкиДоступности);
	ОбновляемаяСтрока.Детали = ВыбранныйВариантАнализа.Детали;
	
КонецПроцедуры

&НаКлиенте
Процедура ВыбранныеВариантыАнализаДоступностьПриИзменении(Элемент)
	
	ВыбранныйВариантАнализа = Элементы.ВыбранныеВариантыАнализа.ТекущиеДанные;
	
	ОбновляемаяСтрока = ВариантыАнализа.НайтиПоИдентификатору(ВыбранныйВариантАнализа.ИдентификаторНастройкиДоступности);
	ОбновляемаяСтрока.Доступность = ВыбранныйВариантАнализа.Доступность;
	
	ОбновитьСоставДоступностиВверх(ВыбранныйВариантАнализа.ИдентификаторНастройкиДоступности);
			
	Если НЕ ВыбранныйВариантАнализа.Доступность Тогда
		
		ВыбранныеВариантыАнализа.Удалить(ВыбранныеВариантыАнализа.Индекс(ВыбранныйВариантАнализа));
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ВыбранныеВариантыАнализаИтогТаблицыПриИзменении(Элемент)
	
	ВыбранныйВариантАнализа = Элементы.ВыбранныеВариантыАнализа.ТекущиеДанные;
	
	ОбновляемаяСтрока = ВариантыАнализа.НайтиПоИдентификатору(ВыбранныйВариантАнализа.ИдентификаторНастройкиДоступности);
	ОбновляемаяСтрока.ИтогТаблицы = ВыбранныйВариантАнализа.ИтогТаблицы;
	
КонецПроцедуры

&НаКлиенте
Процедура ВыбранныеВариантыАнализаПередНачаломИзменения(Элемент, Отказ)
	
	СписокВыбора = Элементы.ВыбранныеВариантыАнализаВариантОтображения.СписокВыбора;
	
	СписокВыбора.Очистить();
	
	СписокВыбора.Добавить(ВариантОтображенияКратко);
	СписокВыбора.Добавить(ВариантОтображенияДиаграмма);
	
	Если Элемент.ТекущиеДанные.ТипАнализа = ТипАнализаПокомпонентноеСравнение Тогда 
		СписокВыбора.Добавить(ВариантОтображенияТаблица);
	КонецЕсли;
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ КОМАНД ФОРМЫ

&НаКлиенте
Процедура ЗаписатьНастройкиИЗакрыть(Команда)
	
	ЗаписатьНастройки();
	
	Модифицированность = Ложь;
	
	Закрыть();
	
КонецПроцедуры

&НаКлиенте
Процедура ОтметитьВсе(Команда)
	
	ОбновитьСоставДоступностиВниз(Неопределено, Истина);
	
	ОбновитьВыбранныеВариантыАнализа();
	
	Модифицированность = Истина;
	
КонецПроцедуры

&НаКлиенте
Процедура ПоказатьТолькоВыбранныеВариантыАнализа(Команда)
	
	ТолькоВыбранные = Элементы.ПоказатьТолькоВыбранныеВариантыАнализа.Пометка;
	
	Если ТолькоВыбранные Тогда
		
		Для Каждого ВыбранныйВариантАнализа Из ВыбранныеВариантыАнализа Цикл 
			
			ОбновитьВариантАнализаДерево(ВыбранныйВариантАнализа);
			
		КонецЦикла;
		
		Элементы.СтраницыВариантовАнализа.ТекущаяСтраница = Элементы.СтраницаВариантовАнализаПоЦелям;
		
	Иначе
		
		ВыбранныеВариантыАнализа.Очистить();
		
		ЗаполнитьВыбранныеВариантыАнализа(ВыбранныеВариантыАнализа);
		
		ВыбранныеВариантыАнализа.Сортировать("ВариантАнализа");
	
		Элементы.СтраницыВариантовАнализа.ТекущаяСтраница = Элементы.СтраницаВыбранныхВариантовАнализа;
		
	КонецЕсли;
	
	Элементы.ПоказатьТолькоВыбранныеВариантыАнализа.Пометка = Не ТолькоВыбранные;
	
КонецПроцедуры

&НаКлиенте
Процедура СнятьОтметки(Команда)
	
	ОбновитьСоставДоступностиВниз(Неопределено, Ложь);
	
	ОбновитьВыбранныеВариантыАнализа();
	
	Модифицированность = Истина;
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьСтандартныеНастройки(Команда)
	
	НастройкиПоУмолчанию = ОбщегоНазначенияУТКлиентСервер.ПолучитьПерсональныеНастройкиМонитораЦелевыхПоказателейПоУмолчанию();
	
	ЗаполнитьЗначенияСвойств(ЭтаФорма, НастройкиПоУмолчанию);
	
	ЗаполнитьВариантыАнализа(Истина);
	
	ЭлементыДерева = ВариантыАнализа.ПолучитьЭлементы();
	Для Каждого ЭлементДерева Из ЭлементыДерева Цикл 
		Элементы.ВариантыАнализа.Развернуть(ЭлементДерева.ПолучитьИдентификатор(), Истина);
	КонецЦикла;
	
	ОбновитьВыбранныеВариантыАнализа();
	
	Модифицированность = Истина;
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

////////////////////////////////////////////////////////////////////////////////
// При изменении реквизитов

&НаКлиенте 
Процедура ОбновитьСоставДоступностиВверх(ИдентификаторСтроки)
	
	ТекущиеДанные = ВариантыАнализа.НайтиПоИдентификатору(ИдентификаторСтроки);
	
	ТекущиеДанныеРодитель = ТекущиеДанные.ПолучитьРодителя();
	
	Если НЕ ТекущиеДанныеРодитель = Неопределено Тогда
		ЭлементыРодителя = ТекущиеДанныеРодитель.ПолучитьЭлементы();
		
		КоличествоНулей = 0;
		КоличествоЕдиниц = 0;
		КоличествоДвоек = 0;
		Для Каждого ЭлементРодителя Из ЭлементыРодителя Цикл 
			Если ЭлементРодителя.ТипСтроки = 0 Тогда 
				ЗначениеДоступности = ЭлементРодителя.ДоступностьПоЦели;
				
			ИначеЕсли ЭлементРодителя.ТипСтроки = 1 Тогда 
				ЗначениеДоступности = ЭлементРодителя.Доступность;
				
			КонецЕсли;
			
			Если ЗначениеДоступности = 0 Тогда
				КоличествоНулей = КоличествоНулей + 1;
				
			ИначеЕсли ЗначениеДоступности = 1 Тогда
				КоличествоЕдиниц = КоличествоЕдиниц + 1;
				
			ИначеЕсли ЗначениеДоступности = 2 Тогда
				КоличествоДвоек = КоличествоДвоек + 1;
				
			КонецЕсли;
			
		КонецЦикла;
		
		КоличествоЭлементов = ЭлементыРодителя.Количество();
		
		Если КоличествоНулей = 0 Тогда
			Если КоличествоЕдиниц = КоличествоЭлементов Тогда
				ТекущиеДанныеРодитель.ДоступностьПоЦели = 1;
				
			Иначе
				ТекущиеДанныеРодитель.ДоступностьПоЦели = 2;
				
			КонецЕсли;
		Иначе
			Если КоличествоНулей = КоличествоЭлементов Тогда
				ТекущиеДанныеРодитель.ДоступностьПоЦели = 0;
				
			Иначе
				ТекущиеДанныеРодитель.ДоступностьПоЦели = 2;
				
			КонецЕсли;
		КонецЕсли;
		
		ОбновитьСоставДоступностиВверх(ТекущиеДанныеРодитель.ПолучитьИдентификатор());
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте 
Процедура ОбновитьСоставДоступностиВниз(ИдентификаторСтроки, Состояние)
	
	Если ИдентификаторСтроки = Неопределено Тогда
		КоллекцияВариантовАнализа = ВариантыАнализа.ПолучитьЭлементы();
		
	Иначе
		ТекущиеДанные = ВариантыАнализа.НайтиПоИдентификатору(ИдентификаторСтроки);
		
		Состояние = ?(Состояние = 2, 0, Состояние);
		
		Если ТекущиеДанные.ТипСтроки = 0 Тогда
			ТекущиеДанные.ДоступностьПоЦели = Состояние;
			
		ИначеЕсли ТекущиеДанные.ТипСтроки = 1 Тогда
			ТекущиеДанные.Доступность = Состояние;
			
		КонецЕсли;
		
		КоллекцияВариантовАнализа = ТекущиеДанные.ПолучитьЭлементы();
		
	КонецЕсли;
	
	Для каждого ЭлементКоллекцииВариантовАнализа Из КоллекцияВариантовАнализа Цикл
		Если ЭлементКоллекцииВариантовАнализа.ТипСтроки = 0 Тогда
			ЭлементКоллекцииВариантовАнализа.ДоступностьПоЦели = Состояние;
			
			ОбновитьСоставДоступностиВниз(ЭлементКоллекцииВариантовАнализа.ПолучитьИдентификатор(), Состояние);
			
		ИначеЕсли ЭлементКоллекцииВариантовАнализа.ТипСтроки = 1 Тогда
			ЭлементКоллекцииВариантовАнализа.Доступность = Состояние;
			
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// Прочее

&НаКлиенте 
Процедура ЗаписатьНастройки()
	
	ЗаполнитьВыбранныеВариантыАнализа(СохраняемыеВариантыАнализа, , Истина);
	
	Если ЗаписатьНастройкиСервер() Тогда 
		Оповестить("ИзменениеНастроекМонитораПоказателей", , ЭтаФорма);
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере 
Функция ЗаписатьНастройкиСервер()
	МассивСтруктур = Новый Массив;
	
	ОповещатьОИзмененииНастроек = Ложь;
	
	// порядок вывода показателей
	Элемент = Новый Структура;
	Элемент.Вставить("Объект", "НастройкиМонитораЦелевыхПоказателей");
	Элемент.Вставить("Настройка", "ВариантГруппировкиПоказателей");
	Элемент.Вставить("Значение", ВариантГруппировкиПоказателей);
	МассивСтруктур.Добавить(Элемент);
	
	Если ВариантГруппировкиПоказателей <> СтруктураНастроек.ВариантГруппировкиПоказателей Тогда
		ОповещатьОИзмененииНастроек = Истина;
		
	КонецЕсли;
	
	Элемент = Новый Структура;
	Элемент.Вставить("Объект", "НастройкиМонитораЦелевыхПоказателей");
	Элемент.Вставить("Настройка", "КоличествоКолонокМонитораПоказателей");
	Элемент.Вставить("Значение", КоличествоКолонокМонитораПоказателей);
	МассивСтруктур.Добавить(Элемент);
	
	Если КоличествоКолонокМонитораПоказателей <> СтруктураНастроек.КоличествоКолонокМонитораПоказателей Тогда
		ОповещатьОИзмененииНастроек = Истина;
		
	КонецЕсли;
	
	// Внешний вид показателей
	Элемент = Новый Структура;
	Элемент.Вставить("Объект", "НастройкиМонитораЦелевыхПоказателей");
	Элемент.Вставить("Настройка", "РазмерДиаграмм");
	Элемент.Вставить("Значение", РазмерДиаграмм);
	МассивСтруктур.Добавить(Элемент);
	
	Если РазмерДиаграмм <> СтруктураНастроек.РазмерДиаграмм Тогда
		ОповещатьОИзмененииНастроек = Истина;
		
	КонецЕсли;
	
	Элемент = Новый Структура;
	Элемент.Вставить("Объект", "НастройкиМонитораЦелевыхПоказателей");
	Элемент.Вставить("Настройка", "ВариантОтображенияДеталей");
	Элемент.Вставить("Значение", ВариантОтображенияДеталей);
	МассивСтруктур.Добавить(Элемент);
	
	Если ВариантОтображенияДеталей <> СтруктураНастроек.ВариантОтображенияДеталей Тогда
		ОповещатьОИзмененииНастроек = Истина;
		
	КонецЕсли;
	
	// Обновление данных
	Элемент = Новый Структура;
	Элемент.Вставить("Объект", "НастройкиМонитораЦелевыхПоказателей");
	Элемент.Вставить("Настройка", "ПериодАвтообновления");
	Элемент.Вставить("Значение", ПериодАвтообновления);
	МассивСтруктур.Добавить(Элемент);
	
	Если ПериодАвтообновления <> СтруктураНастроек.ПериодАвтообновления Тогда
		ОповещатьОИзмененииНастроек = Истина;
		
	КонецЕсли;
	
	ХранилищеЗначенияСохраняемыеВариантыАнализа = ПреобразоватьТаблицуСохраняемыхВариантовАнализаВХранилищеЗначения();
	
	Элемент = Новый Структура;
	Элемент.Вставить("Объект", "НастройкиМонитораЦелевыхПоказателей");
	Элемент.Вставить("Настройка", "ВариантыАнализаПользовательскиеНастройки");
	Элемент.Вставить("Значение", ХранилищеЗначенияСохраняемыеВариантыАнализа);
	МассивСтруктур.Добавить(Элемент);
	
	Если ПолучитьXML(СтруктураНастроек.ВариантыАнализаПользовательскиеНастройки) <>
		ПолучитьXML(ХранилищеЗначенияСохраняемыеВариантыАнализа) Тогда
		
		ОповещатьОИзмененииНастроек = Истина;
		
	КонецЕсли;
	
	ОбщегоНазначения.ХранилищеОбщихНастроекСохранитьМассив(МассивСтруктур);
	
	Возврат ОповещатьОИзмененииНастроек;
	
КонецФункции

&НаСервере 
Процедура ЗаполнитьВариантыАнализа(ВариантыАнализаПоУмолчанию = Ложь)
	
	Запрос = Новый Запрос;
	
	Запрос.УстановитьПараметр("Пользователь", ТекущийПользователь);
	Если НЕ СтруктураНастроек.ВариантыАнализаПользовательскиеНастройки = Неопределено
		И НЕ СтруктураНастроек.ВариантыАнализаПользовательскиеНастройки.Получить() = Неопределено
		И НЕ ВариантыАнализаПоУмолчанию Тогда
		Запрос.УстановитьПараметр("ВариантыАнализа", СтруктураНастроек.ВариантыАнализаПользовательскиеНастройки.Получить());
		Запрос.Текст = "ВЫБРАТЬ
		               |	ПользовательскиеНастройкиВариантовАнализа.ВариантАнализа,
		               |	ПользовательскиеНастройкиВариантовАнализа.Доступность,
		               |	ПользовательскиеНастройкиВариантовАнализа.ВариантОтображения,
		               |	ПользовательскиеНастройкиВариантовАнализа.Детали,
		               |	ПользовательскиеНастройкиВариантовАнализа.ИтогТаблицы
		               |ПОМЕСТИТЬ ПользовательскиеНастройкиВариантовАнализа
		               |ИЗ
		               |	&ВариантыАнализа КАК ПользовательскиеНастройкиВариантовАнализа
		               |;
		               |
		               |////////////////////////////////////////////////////////////////////////////////
		               |ВЫБРАТЬ
		               |	ВариантыАнализаЦелевыхПоказателейНастройкиДоступности.Ссылка.Владелец КАК Цель,
		               |	ЛОЖЬ КАК ДоступностьПоЦели,
		               |	ВариантыАнализаЦелевыхПоказателейНастройкиДоступности.Ссылка КАК ВариантАнализа,
		               |	ВЫБОР
		               |		КОГДА ПользовательскиеНастройкиВариантовАнализа.Доступность ЕСТЬ NULL 
		               |			ТОГДА ИСТИНА
		               |		ИНАЧЕ ПользовательскиеНастройкиВариантовАнализа.Доступность
		               |	КОНЕЦ КАК Доступность,
		               |	ВЫБОР
		               |		КОГДА ПользовательскиеНастройкиВариантовАнализа.ВариантОтображения ЕСТЬ NULL 
		               |			ТОГДА ВариантыАнализаЦелевыхПоказателейНастройкиДоступности.ВариантОтображения
		               |		ИНАЧЕ ПользовательскиеНастройкиВариантовАнализа.ВариантОтображения
		               |	КОНЕЦ КАК ВариантОтображения,
		               |	ВЫБОР
		               |		КОГДА ПользовательскиеНастройкиВариантовАнализа.Детали ЕСТЬ NULL 
		               |			ТОГДА ЛОЖЬ
		               |		ИНАЧЕ ПользовательскиеНастройкиВариантовАнализа.Детали
		               |	КОНЕЦ КАК Детали,
		               |	ВЫБОР
		               |		КОГДА ПользовательскиеНастройкиВариантовАнализа.ИтогТаблицы ЕСТЬ NULL 
		               |			ТОГДА ЛОЖЬ
		               |		ИНАЧЕ ПользовательскиеНастройкиВариантовАнализа.ИтогТаблицы
		               |	КОНЕЦ КАК ИтогТаблицы,
		               |	1 КАК ТипСтроки,
		               |	ВариантыАнализаЦелевыхПоказателейНастройкиДоступности.Ссылка.ТипАнализа
		               |ИЗ
		               |	Справочник.ВариантыАнализаЦелевыхПоказателей.НастройкиДоступности КАК ВариантыАнализаЦелевыхПоказателейНастройкиДоступности
		               |		ЛЕВОЕ СОЕДИНЕНИЕ ПользовательскиеНастройкиВариантовАнализа КАК ПользовательскиеНастройкиВариантовАнализа
		               |		ПО ВариантыАнализаЦелевыхПоказателейНастройкиДоступности.Ссылка = ПользовательскиеНастройкиВариантовАнализа.ВариантАнализа
		               |ГДЕ
		               |	ВариантыАнализаЦелевыхПоказателейНастройкиДоступности.Пользователь = &Пользователь
		               |	И (НЕ ВариантыАнализаЦелевыхПоказателейНастройкиДоступности.Ссылка.ПометкаУдаления)
		               |
		               |УПОРЯДОЧИТЬ ПО
		               |	ВариантыАнализаЦелевыхПоказателейНастройкиДоступности.Ссылка.Владелец.РеквизитДопУпорядочивания,
		               |	ВариантыАнализаЦелевыхПоказателейНастройкиДоступности.Ссылка.РеквизитДопУпорядочивания
		               |ИТОГИ
		               |	ВЫБОР
		               |		КОГДА МАКСИМУМ(Доступность) = ИСТИНА
		               |				И МИНИМУМ(Доступность) = ИСТИНА
		               |			ТОГДА 1
		               |		КОГДА МАКСИМУМ(Доступность) = ЛОЖЬ
		               |				И МИНИМУМ(Доступность) = ЛОЖЬ
		               |			ТОГДА 0
		               |		КОГДА МАКСИМУМ(Доступность) = ИСТИНА
		               |				И МИНИМУМ(Доступность) = ЛОЖЬ
		               |			ТОГДА 2
		               |	КОНЕЦ КАК ДоступностьПоЦели,
		               |	СРЕДНЕЕ(ВЫБОР
		               |			КОГДА Цель ЕСТЬ NULL 
		               |				ТОГДА 1
		               |			ИНАЧЕ 0
		               |		КОНЕЦ) КАК ТипСтроки
		               |ПО
		               |	Цель ИЕРАРХИЯ";
	Иначе
		Запрос.Текст = "ВЫБРАТЬ
		               |	ВариантыАнализаЦелевыхПоказателейНастройкиДоступности.Ссылка.Владелец КАК Цель,
		               |	ЛОЖЬ КАК ДоступностьПоЦели,
		               |	ВариантыАнализаЦелевыхПоказателейНастройкиДоступности.Ссылка КАК ВариантАнализа,
		               |	ИСТИНА КАК Доступность,
		               |	ЛОЖЬ КАК Детали,
		               |	ЛОЖЬ КАК ИтогТаблицы,
		               |	1 КАК ТипСтроки,
		               |	ВариантыАнализаЦелевыхПоказателейНастройкиДоступности.ВариантОтображения,
		               |	ВариантыАнализаЦелевыхПоказателейНастройкиДоступности.Ссылка.ТипАнализа
		               |ИЗ
		               |	Справочник.ВариантыАнализаЦелевыхПоказателей.НастройкиДоступности КАК ВариантыАнализаЦелевыхПоказателейНастройкиДоступности
		               |ГДЕ
		               |	ВариантыАнализаЦелевыхПоказателейНастройкиДоступности.Пользователь = &Пользователь
		               |	И (НЕ ВариантыАнализаЦелевыхПоказателейНастройкиДоступности.Ссылка.ПометкаУдаления)
		               |
		               |УПОРЯДОЧИТЬ ПО
		               |	ВариантыАнализаЦелевыхПоказателейНастройкиДоступности.Ссылка.Владелец.РеквизитДопУпорядочивания,
		               |	ВариантыАнализаЦелевыхПоказателейНастройкиДоступности.Ссылка.РеквизитДопУпорядочивания
		               |ИТОГИ
		               |	ВЫБОР
		               |		КОГДА МАКСИМУМ(Доступность) = ИСТИНА
		               |				И МИНИМУМ(Доступность) = ИСТИНА
		               |			ТОГДА 1
		               |		КОГДА МАКСИМУМ(Доступность) = ЛОЖЬ
		               |				И МИНИМУМ(Доступность) = ЛОЖЬ
		               |			ТОГДА 0
		               |		КОГДА МАКСИМУМ(Доступность) = ИСТИНА
		               |				И МИНИМУМ(Доступность) = ЛОЖЬ
		               |			ТОГДА 2
		               |	КОНЕЦ КАК ДоступностьПоЦели,
		               |	СРЕДНЕЕ(ВЫБОР
		               |			КОГДА Цель ЕСТЬ NULL 
		               |				ТОГДА 1
		               |			ИНАЧЕ 0
		               |		КОНЕЦ) КАК ТипСтроки
		               |ПО
		               |	Цель ИЕРАРХИЯ";
	КонецЕсли;
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Если НЕ РезультатЗапроса.Пустой() Тогда
		ВариантыАнализаЗначение = РезультатЗапроса.Выгрузить(ОбходРезультатаЗапроса.ПоГруппировкамСИерархией);
		
		ПодготовитьДеревоВариантовАнализа(ВариантыАнализаЗначение);
		
		УдалитьСтрокиБезПодчиненных(ВариантыАнализаЗначение);
		
		ЗначениеВДанныеФормы(ВариантыАнализаЗначение, ВариантыАнализа);
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте 
Процедура ЗаполнитьВыбранныеВариантыАнализа(ДанныеФормы, ИдентификаторСтроки = Неопределено, ВключаяНедоступные = Ложь)
	
	Если ИдентификаторСтроки = Неопределено Тогда
		// Обработка всех
		КоллекцияВариантовАнализа = ВариантыАнализа.ПолучитьЭлементы();
		
	Иначе
		ТекущиеДанные = ВариантыАнализа.НайтиПоИдентификатору(ИдентификаторСтроки);
		
		КоллекцияВариантовАнализа = ТекущиеДанные.ПолучитьЭлементы();
		
	КонецЕсли;
	
	Для каждого ЭлементКоллекцииВариантовАнализа Из КоллекцияВариантовАнализа Цикл
		
		ИдентификаторЭлемента = ЭлементКоллекцииВариантовАнализа.ПолучитьИдентификатор();
		
		Если ЭлементКоллекцииВариантовАнализа.ТипСтроки = 0 Тогда
			ЗаполнитьВыбранныеВариантыАнализа(ДанныеФормы, ИдентификаторЭлемента, ВключаяНедоступные);
			
		ИначеЕсли ЭлементКоллекцииВариантовАнализа.ТипСтроки = 1 И (ЭлементКоллекцииВариантовАнализа.Доступность ИЛИ ВключаяНедоступные) Тогда
			НовыйВыбранныйВариантАнализа = ДанныеФормы.Добавить();
			НовыйВыбранныйВариантАнализа.ВариантАнализа = ЭлементКоллекцииВариантовАнализа.ВариантАнализа;
			НовыйВыбранныйВариантАнализа.Доступность = ЭлементКоллекцииВариантовАнализа.Доступность;
			НовыйВыбранныйВариантАнализа.ВариантОтображения = ЭлементКоллекцииВариантовАнализа.ВариантОтображения;
			НовыйВыбранныйВариантАнализа.Детали = ЭлементКоллекцииВариантовАнализа.Детали;
			НовыйВыбранныйВариантАнализа.ИтогТаблицы = ЭлементКоллекцииВариантовАнализа.ИтогТаблицы;
			НовыйВыбранныйВариантАнализа.ТипАнализа = ЭлементКоллекцииВариантовАнализа.ТипАнализа;
			
			НовыйВыбранныйВариантАнализа.ИдентификаторНастройкиДоступности = ИдентификаторЭлемента;
			
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте 
Процедура ОбновитьВариантАнализаДерево(ВариантАнализа)
	
	ОбновляемыйЭлементДерева = ВариантыАнализа.НайтиПоИдентификатору(ВариантАнализа.ИдентификаторНастройкиДоступности);
	ЗаполнитьЗначенияСвойств(ОбновляемыйЭлементДерева, ВариантАнализа);
	
	ОбновитьСоставДоступностиВверх(ВариантАнализа.ИдентификаторНастройкиДоступности);
	
КонецПроцедуры

&НаКлиенте 
Процедура ОбновитьВыбранныеВариантыАнализа()
	
	ВыбранныеВариантыАнализа.Очистить();
	
	ЗаполнитьВыбранныеВариантыАнализа(ВыбранныеВариантыАнализа);
	
	ВыбранныеВариантыАнализа.Сортировать("ВариантАнализа");
	
КонецПроцедуры

&НаСервере 
Процедура ПодготовитьДеревоВариантовАнализа(ДеревоВариантовАнализа, НачальнаяСтрокаПроверки = Неопределено)
	
	Если НачальнаяСтрокаПроверки = Неопределено Тогда
		СтрокиДерева = ДеревоВариантовАнализа.Строки;
	Иначе
		СтрокиДерева = НачальнаяСтрокаПроверки.Строки;
	КонецЕсли;
	
	Для Каждого СтрокаДерева Из СтрокиДерева Цикл 
		Если СтрокаДерева.Строки.Количество() Тогда
			ПодготовитьДеревоВариантовАнализа(ДеревоВариантовАнализа, СтрокаДерева);
			
		КонецЕсли;
		
		Если НЕ СтрокаДерева.Родитель = Неопределено И СтрокаДерева.Цель = СтрокаДерева.Родитель.Цель Тогда
			СтрокиТекущейСтрокиДерева = СтрокаДерева.Строки;
			
			ПозицияВставки = СтрокиДерева.Индекс(СтрокаДерева);
			Для Каждого СтрокаТекущейСтрокиДерева Из СтрокиТекущейСтрокиДерева Цикл 
				ПеренесеннаяСтрока = СтрокаДерева.Родитель.Строки.Вставить(ПозицияВставки);
				ЗаполнитьЗначенияСвойств(ПеренесеннаяСтрока, СтрокаТекущейСтрокиДерева);
				
				ПозицияВставки = ПозицияВставки + 1;
				
			КонецЦикла;
			
			СтрокаДерева.Строки.Очистить();
			
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Функция ПолучитьXML(Значение)
	
	Запись = Новый ЗаписьXML();
	Запись.УстановитьСтроку();
	СериализаторXDTO.ЗаписатьXML(Запись, Значение);
	Возврат Запись.Закрыть();
	
КонецФункции

&НаСервере 
Функция ПреобразоватьТаблицуСохраняемыхВариантовАнализаВХранилищеЗначения()
	
	Возврат Новый ХранилищеЗначения(СохраняемыеВариантыАнализа.Выгрузить(,"ВариантАнализа, Доступность, ВариантОтображения, Детали, ИтогТаблицы"));
	
КонецФункции

&НаСервере 
Процедура УдалитьСтрокиБезПодчиненных(ДеревоВариантовАнализа, НачальнаяСтрокаПроверки = Неопределено)
	
	Если НачальнаяСтрокаПроверки = Неопределено Тогда
		СтрокиДерева = ДеревоВариантовАнализа.Строки;
	Иначе
		СтрокиДерева = НачальнаяСтрокаПроверки.Строки;
	КонецЕсли;
	
	ИндексСтроки = СтрокиДерева.Количество() - 1;
	Пока ИндексСтроки >= 0 Цикл 
		ПроверяемаяСтрока = СтрокиДерева[ИндексСтроки];
		
		Если ПроверяемаяСтрока.ТипСтроки = 1 Тогда
			ИндексСтроки = ИндексСтроки - 1;
			Продолжить;
		
		КонецЕсли;
		
		Если ПроверяемаяСтрока.Строки.Количество() Тогда
			УдалитьСтрокиБезПодчиненных(ДеревоВариантовАнализа, ПроверяемаяСтрока);
			
		Иначе
			СтрокиДерева.Удалить(ПроверяемаяСтрока);
			
		КонецЕсли;
		
		ИндексСтроки = ИндексСтроки - 1;
		
	КонецЦикла;
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста 
Процедура УстановитьНадписьКоличествоКолонокМонитораПоказателей(КоличествоКолонокМонитораПоказателей, Элементы)
	
	Если КоличествоКолонокМонитораПоказателей = 1 Тогда
		Элементы.НадписьКоличествоКолонокМонитораПоказателей.Заголовок = "колонку";
		
	Иначе
		Элементы.НадписьКоличествоКолонокМонитораПоказателей.Заголовок = 
		МониторингЦелевыхПоказателейКлиентСервер.ПолучитьСклонениеСлова(КоличествоКолонокМонитораПоказателей, "колонка", "колонки", "колонок", "ж");
		
	КонецЕсли;
КонецПроцедуры
