////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если ИмяСобытия = "ИзменениеНастроекМонитораПоказателей" Тогда
		
		ОбновлениеСтруктурыНастроекСервер();
		
		ИнициализироватьОбработчикАвтообновления(СтруктураНастроек.ПериодАвтообновления * 60);
		
		ОбновитьСоставМонитораКлиент();
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	Если НЕ СтандартныеПодсистемыКлиентПовтИсп.ПараметрыРаботыКлиентаПриЗапуске().НеобходимоОбновлениеИнформационнойБазы Тогда
		ИнициализироватьОбработчикАвтообновления();
		
		Состояние(НСтр("ru='Пожалуйста подождите, идет пересчет показателей...'"));
		ОбновитьСоставМонитора();
		Состояние();
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	СтруктураНастроек = МониторингЦелевыхПоказателей.ПолучитьНастройкиМонитораЦелевыхПоказателей();
	
	ТекущийПользователь = Пользователи.ТекущийПользователь();
	
	ЗаполнитьСписокВыбораОтбораПоСтатусу();
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ ШАПКИ ФОРМЫ

&НаКлиенте
Процедура ОтборСтатусПриИзменении(Элемент)
	
	ОбновитьСоставМонитораКлиент();
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ ТАБЛИЦЫ ФОРМЫ ДЕРЕВО ПОКАЗАТЕЛЕЙ

&НаКлиенте
Процедура ДеревоПоказателейВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	Если НЕ Элемент.ТекущиеДанные.ЭтоГруппа Тогда
		
		Отбор = Новый Структура("ВариантАнализа", Элемент.ТекущиеДанные.ВариантАнализа);
		НайденныеСтроки = СоставМонитора.НайтиСтроки(Отбор);
		
		ВариантыАнализаДляПечати.Очистить();
		
		Для Каждого НайденнаяСтрока Из НайденныеСтроки Цикл 
			НовыйВариант = ВариантыАнализаДляПечати.Добавить();
			ЗаполнитьЗначенияСвойств(НовыйВариант, НайденнаяСтрока);
			
		КонецЦикла;
		
		ПараметрыФормы = Новый Структура("ВариантыАнализа", ВариантыАнализаДляПечати);
		
		ОткрытьФорму("Отчет.МониторЦелевыхПоказателей.Форма.ПечатнаяФормаВариантаАнализа", 
		ПараметрыФормы, 
		ЭтаФорма, 
		Новый УникальныйИдентификатор());
		
	КонецЕсли;
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ КОМАНД ФОРМЫ

&НаКлиенте
Процедура Настроить(Команда)
	
	ПараметрыФормы = Новый Структура("ТекущийПользователь", ТекущийПользователь);
	ОткрытьФорму("Отчет.МониторЦелевыхПоказателей.Форма.ПерсональныеНастройки", 
	ПараметрыФормы, ЭтаФорма, ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура Обновить(Команда)
	
	ИнициализироватьОбработчикАвтообновления();
	
	ОбновитьСоставМонитораКлиент(Истина);
	
КонецПроцедуры

&НаКлиенте
Процедура СводныйОтчет(Команда)
	
	Если СоставМонитораНеопределен Тогда
		Предупреждение(НСтр("ru='Сформировать сводный отчет невозможно, т.к. монитор показателей не настроен.'"),, НСтр("ru='Ошибка формирования сводного отчета'"));
		
	ИначеЕсли СоставМонитораПустойПоОтбору Тогда
		Предупреждение(НСтр("ru='Сформировать сводный отчет невозможно, т.к. в текущий отбор не входит ни один показатель.'"),, НСтр("ru='Ошибка формирования сводного отчета'"));
		
	Иначе 
		ВариантыАнализаДляПечати.Очистить();
		
		Для Каждого ЭлементМонитора Из СоставМонитора Цикл 
			НовыйВариант = ВариантыАнализаДляПечати.Добавить();
			ЗаполнитьЗначенияСвойств(НовыйВариант, ЭлементМонитора);
			
		КонецЦикла;
		
		ПараметрыФормы = Новый Структура("ВариантыАнализа", ВариантыАнализаДляПечати);
		
		ОткрытьФорму("Отчет.МониторЦелевыхПоказателей.Форма.ПечатнаяФормаВариантаАнализа", 
		ПараметрыФормы, 
		ЭтаФорма, 
		Новый УникальныйИдентификатор());
		
	КонецЕсли;
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

////////////////////////////////////////////////////////////////////////////////
// Заполнение дерева целевых показателей

&НаСервере
Функция ДобавитьГруппирующуюСтроку(ДеревоПоказателейЗначение, РодительскаяСтрока = Неопределено, СтруктураЗначенийСтроки, ЭтоГруппа)
	
	Если РодительскаяСтрока = Неопределено Тогда
		ГруппирующаяСтрока = ДеревоПоказателейЗначение.Строки.Добавить();
	Иначе 
		ГруппирующаяСтрока = РодительскаяСтрока.Строки.Добавить();
	КонецЕсли;
	
	ЗаполнитьЗначенияСвойств(ГруппирующаяСтрока, СтруктураЗначенийСтроки);
	ГруппирующаяСтрока.ЭтоГруппа = ЭтоГруппа;
	ГруппирующаяСтрока.КартинкаСостояния = 4;
	ГруппирующаяСтрока.КартинкаТренда = 8;
	
	Возврат ГруппирующаяСтрока;
	
КонецФункции

&НаСервере
Процедура ДобавитьЭлементыМонитора(ДеревоПоказателейЗначение, СоставМонитора)
	
	ЗоныВнимания = Перечисления.ЗоныВниманияВариантовАнализа;
	
	СоздатьБазовуюСтруктуруДереваПоказателей(ДеревоПоказателейЗначение, СоставМонитора);
	
	НаборИсточниковДанных = СоставМонитора.НаборИсточниковДанных;
	
	Если СтруктураНастроек.ВариантГруппировкиПоказателей = "ПоВажности" Тогда
		ОтборКритическоеСостояние = Новый Структура("ЗонаВнимания", ЗоныВнимания.КритическоеСостояние);
		ПоказателиСКритическимСостоянием = НаборИсточниковДанных.НайтиСтроки(ОтборКритическоеСостояние);
		
		Если ПоказателиСКритическимСостоянием.Количество() > 0 Тогда
			ДобавитьЭлементыМонитораСУчетомЗоныВнимания(ДеревоПоказателейЗначение, ПоказателиСКритическимСостоянием, ЗоныВнимания.КритическоеСостояние);
		КонецЕсли;
		
		ОтборВажно = Новый Структура("ЗонаВнимания", ЗоныВнимания.Важно);
		ВажныеПоказатели = НаборИсточниковДанных.НайтиСтроки(ОтборВажно);
		
		Если ВажныеПоказатели.Количество() > 0 Тогда
			ДобавитьЭлементыМонитораСУчетомЗоныВнимания(ДеревоПоказателейЗначение, ВажныеПоказатели, ЗоныВнимания.Важно);
		КонецЕсли;
		
		ОтборКСведению = Новый Структура("ЗонаВнимания", ЗоныВнимания.КСведению);
		ПоказателиКСведению = НаборИсточниковДанных.НайтиСтроки(ОтборКСведению);
		
		Если ПоказателиКСведению.Количество() > 0 Тогда
			ДобавитьЭлементыМонитораСУчетомЗоныВнимания(ДеревоПоказателейЗначение, ПоказателиКСведению, ЗоныВнимания.КСведению);
		КонецЕсли;
		
		ОтборПоРассчитаннымСОшибками = Новый Структура("ЗонаВнимания", ЗоныВнимания.РассчитанныеСОшибками);
		РассчитанныеСОшибками = НаборИсточниковДанных.НайтиСтроки(ОтборПоРассчитаннымСОшибками);
		
		Если РассчитанныеСОшибками.Количество() > 0 Тогда
			ДобавитьЭлементыМонитораСУчетомЗоныВнимания(ДеревоПоказателейЗначение, РассчитанныеСОшибками, ЗоныВнимания.РассчитанныеСОшибками);
		КонецЕсли;
		
		ЗначениеВДанныеФормы(ДеревоПоказателейЗначение, ДеревоПоказателей);
		
	ИначеЕсли СтруктураНастроек.ВариантГруппировкиПоказателей = "ПоКатегориямЦелей"  Тогда
		ГруппыПоказателей = НаборИсточниковДанных.Скопировать();
		ГруппыПоказателей.Свернуть("Группа");
		
		Для Каждого ГруппаПоказателей Из ГруппыПоказателей Цикл 
			ПоГруппе = Новый Структура("Группа", ГруппаПоказателей.Группа);
			ПоказателиГруппы = НаборИсточниковДанных.НайтиСтроки(ПоГруппе);
		
			ДобавитьЭлементыМонитораСУчетомГруппы(ДеревоПоказателейЗначение, ПоказателиГруппы, ГруппаПоказателей.Группа);
			
		КонецЦикла;
		
		ЗначениеВДанныеФормы(ДеревоПоказателейЗначение, ДеревоПоказателей);
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере 
Процедура ДобавитьЭлементыМонитораСУчетомГруппы(ДеревоПоказателейЗначение, КоллекцияПоказателей, ГруппаПоказателей)
	
	СтрокаГруппы = ДеревоПоказателейЗначение.Строки.Найти(ГруппаПоказателей, "ВариантАнализа");
	
	ВидыПредставленияЧисел = Перечисления.ВидыПредставленияЧисел;
	
	СчетчикСтрок = 1;
	СчетчикЭлементовСтроки = 0;
	Для Каждого ЭлементМонитора Из КоллекцияПоказателей Цикл 
		ВариантАнализа = ЭлементМонитора.ВариантАнализа; 
		ИсточникДанных = ЭлементМонитора.ИсточникДанных.Получить();
		ДинамическиеСвойстваВариантаАнализа = ИсточникДанных.ДинамическиеСвойстваВариантаАнализа;
		ВидПредставленияЧисел = ВариантАнализа.КратностьЗначений;
		
		ПоказыватьТекущееЗначениеИДеталиПоказателя = (НЕ ВариантыАнализаСПодробностями.НайтиПоЗначению(ВариантАнализа) = Неопределено);
		ИспользоватьНарастающийИтог = (НЕ ВариантыАнализаСНарастающимИтогом.НайтиПоЗначению(ВариантАнализа) = Неопределено);
	
		ТочностьРасчетаДробнойЧасти = ВариантАнализа.ТочностьРасчетаДробнойЧасти;
		
		СтрокаПоказателя = СтрокаГруппы.Строки.Добавить();
		СтрокаПоказателя.ВариантАнализа = ВариантАнализа;
		СтрокаПоказателя.КраткоеНаименование = ВариантАнализа.Владелец.КраткоеНаименованиеЦелевогоПоказателя + " " + ВариантАнализа.Наименование + " (" + Формат(ИсточникДанных.СвойстваДанныхПоПериодам.ДатаПоследнегоЗначения, "Л=ru; ДФ=dd.MM.yy") + ")";
		СтрокаПоказателя.Период = Формат(ИсточникДанных.СвойстваДанныхПоПериодам.ДатаПоследнегоЗначения, "Л=ru; ДФ=dd.MM.yy");
		СтрокаПоказателя.КартинкаСостояния = МониторингЦелевыхПоказателей.ПолучитьИндексКартинкиСостоянияДляПоказателя(ВариантАнализа, ИсточникДанных);
		СтрокаПоказателя.КартинкаТренда = МониторингЦелевыхПоказателей.ПолучитьИндексКартинкиТрендаДляПоказателя(ВариантАнализа, ИсточникДанных);
		
		СтрокаПоказателя.ЗонаВнимания = ЭлементМонитора.ЗонаВнимания;
		
		Если НЕ ИсточникДанных.Пустой И НЕ ИсточникДанных.ОшибкаРасчета Тогда
			ПоследнееЗначение	 = Окр(ИсточникДанных.СвойстваДанныхПоПериодам.ПоследнееЗначение, ТочностьРасчетаДробнойЧасти);
			ОтображаемоеЗначение = ПоследнееЗначение;
			
			ПоследнееЦелевоеЗначение		 = Окр(ИсточникДанных.СвойстваДанныхПоПериодам.ЦелевоеЗначение, ТочностьРасчетаДробнойЧасти);
			ПредпоследнееЗначение = Окр(ИсточникДанных.СвойстваДанныхПоПериодам.ПредпоследнееЗначение, ТочностьРасчетаДробнойЧасти);
			
			РазмерностьПоказателя = СокрЛП(Строка(ДинамическиеСвойстваВариантаАнализа.Размерность));
			
			Если ЗначениеЗаполнено(РазмерностьПоказателя) Тогда
				СтрокаРазмерности = " " + РазмерностьПоказателя;
			Иначе
				СтрокаРазмерности = "";
			КонецЕсли;
			
			СтрокаПоказателя.ТекущееЗначение = МониторингЦелевыхПоказателей.ПолучитьСокращенноеПредставлениеЧисла(ОтображаемоеЗначение, ТочностьРасчетаДробнойЧасти, ВидПредставленияЧисел) + СтрокаРазмерности;
			
			Если ПоказыватьТекущееЗначениеИДеталиПоказателя И СтруктураНастроек.ВариантОтображенияДеталей = "ПоказыватьТекущееЗначениеИДетали" Тогда
				Если НЕ ПредпоследнееЗначение = 0 Тогда
					ОтносительноеИзменение = Окр(100 * (ПоследнееЗначение - ПредпоследнееЗначение)/ПредпоследнееЗначение, ТочностьРасчетаДробнойЧасти);
					
					Если ОтносительноеИзменение > 0 Тогда
						ЗнакИзменения = "+";
					ИначеЕсли ОтносительноеИзменение = 0 Тогда
						ЗнакИзменения = "";
					ИначеЕсли ОтносительноеИзменение < 0 Тогда
						ЗнакИзменения = "-";
					КонецЕсли;
				
					СтрокаПоказателя.ОтнИзменение = ЗнакИзменения + ОтносительноеИзменение + " %";
				Иначе
					СтрокаПоказателя.ОтнИзменение = "---";
				КонецЕсли; 
				
				АбсолютноеИзменение = ПоследнееЗначение - ПредпоследнееЗначение;
				
				Если АбсолютноеИзменение > 0 Тогда
					ЗнакИзменения = "+";
				ИначеЕсли АбсолютноеИзменение = 0 Тогда
					ЗнакИзменения = "";
				ИначеЕсли АбсолютноеИзменение < 0 Тогда
					ЗнакИзменения = "-";
				КонецЕсли;
				
				СтрокаПоказателя.АбсИзменение = ЗнакИзменения
												+ МониторингЦелевыхПоказателей.ПолучитьСокращенноеПредставлениеЧисла(АбсолютноеИзменение, ТочностьРасчетаДробнойЧасти, ВидПредставленияЧисел) + СтрокаРазмерности;
				
			КонецЕсли;
			
		Иначе 
			Если ИсточникДанных.Свойство("ОписаниеОшибки") Тогда
				СтрокаПоказателя.ТекущееЗначение = ИсточникДанных.ОписаниеОшибки;
				
			Иначе
				СтрокаПоказателя.ТекущееЗначение = НСтр("ru='Ошибка расчета показателя'");
				
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

&НаСервере 
Процедура ДобавитьЭлементыМонитораСУчетомЗоныВнимания(ДеревоПоказателейЗначение, КоллекцияПоказателей, ЗонаВнимания)
	
	СтрокаЗоныВнимания = ДеревоПоказателейЗначение.Строки.Найти(ЗонаВнимания, "ЗонаВнимания");
	
	ВидыПредставленияЧисел = Перечисления.ВидыПредставленияЧисел;
	
	СчетчикСтрок = 1;
	СчетчикЭлементовСтроки = 0;
	Для Каждого ЭлементМонитора Из КоллекцияПоказателей Цикл 
		ВариантАнализа = ЭлементМонитора.ВариантАнализа; 
		ИсточникДанных = ЭлементМонитора.ИсточникДанных.Получить();
		ДинамическиеСвойстваВариантаАнализа = ИсточникДанных.ДинамическиеСвойстваВариантаАнализа;
		ВидПредставленияЧисел = ВариантАнализа.КратностьЗначений;
		
		ПоказыватьТекущееЗначениеИДеталиПоказателя = (НЕ ВариантыАнализаСПодробностями.НайтиПоЗначению(ВариантАнализа) = Неопределено);
		ИспользоватьНарастающийИтог = (НЕ ВариантыАнализаСНарастающимИтогом.НайтиПоЗначению(ВариантАнализа) = Неопределено);
	
		ТочностьРасчетаДробнойЧасти = ВариантАнализа.ТочностьРасчетаДробнойЧасти;
		
		СтрокаПоказателя = СтрокаЗоныВнимания.Строки.Добавить();
		СтрокаПоказателя.ВариантАнализа = ВариантАнализа;
		СтрокаПоказателя.КраткоеНаименование = ВариантАнализа.Владелец.КраткоеНаименованиеЦелевогоПоказателя + " " + ВариантАнализа.Наименование + " (" + Формат(ИсточникДанных.СвойстваДанныхПоПериодам.ДатаПоследнегоЗначения, "Л=ru; ДФ=dd.MM.yy") + ")";
		СтрокаПоказателя.Период = Формат(ИсточникДанных.СвойстваДанныхПоПериодам.ДатаПоследнегоЗначения, "Л=ru; ДФ=dd.MM.yy");
		СтрокаПоказателя.КартинкаСостояния = МониторингЦелевыхПоказателей.ПолучитьИндексКартинкиСостоянияДляПоказателя(ВариантАнализа, ИсточникДанных);
		СтрокаПоказателя.КартинкаТренда = МониторингЦелевыхПоказателей.ПолучитьИндексКартинкиТрендаДляПоказателя(ВариантАнализа, ИсточникДанных);
		
		СтрокаПоказателя.ЗонаВнимания = ЗонаВнимания;
		
		Если НЕ ИсточникДанных.Пустой И НЕ ИсточникДанных.ОшибкаРасчета Тогда
			ПоследнееЗначение	 = Окр(ИсточникДанных.СвойстваДанныхПоПериодам.ПоследнееЗначение, ТочностьРасчетаДробнойЧасти);
			ОтображаемоеЗначение = ПоследнееЗначение;
			
			ПоследнееЦелевоеЗначение		 = Окр(ИсточникДанных.СвойстваДанныхПоПериодам.ЦелевоеЗначение, ТочностьРасчетаДробнойЧасти);
			ПредпоследнееЗначение = Окр(ИсточникДанных.СвойстваДанныхПоПериодам.ПредпоследнееЗначение, ТочностьРасчетаДробнойЧасти);
			
			РазмерностьПоказателя = СокрЛП(Строка(ДинамическиеСвойстваВариантаАнализа.Размерность));
			
			Если ЗначениеЗаполнено(РазмерностьПоказателя) Тогда
				СтрокаРазмерности = " " + РазмерностьПоказателя;
			Иначе
				СтрокаРазмерности = "";
			КонецЕсли;
		
			СтрокаПоказателя.ТекущееЗначение = МониторингЦелевыхПоказателей.ПолучитьСокращенноеПредставлениеЧисла(ОтображаемоеЗначение, ТочностьРасчетаДробнойЧасти, ВидПредставленияЧисел) + СтрокаРазмерности;
			
			Если ПоказыватьТекущееЗначениеИДеталиПоказателя И СтруктураНастроек.ВариантОтображенияДеталей = "ПоказыватьТекущееЗначениеИДетали" Тогда
				Если НЕ ПредпоследнееЗначение = 0 Тогда
					ОтносительноеИзменение = Окр(100 * (ПоследнееЗначение - ПредпоследнееЗначение)/ПредпоследнееЗначение, ТочностьРасчетаДробнойЧасти);
					
					Если ОтносительноеИзменение > 0 Тогда
						ЗнакИзменения = "+";
					ИначеЕсли ОтносительноеИзменение = 0 Тогда
						ЗнакИзменения = "";
					ИначеЕсли ОтносительноеИзменение < 0 Тогда
						ЗнакИзменения = "-";
					КонецЕсли;
				
					СтрокаПоказателя.ОтнИзменение = ЗнакИзменения + ОтносительноеИзменение + " %";
				Иначе
					СтрокаПоказателя.ОтнИзменение = "---";
				КонецЕсли; 
				
				АбсолютноеИзменение = ПоследнееЗначение - ПредпоследнееЗначение;
				
				Если АбсолютноеИзменение > 0 Тогда
					ЗнакИзменения = "+";
				ИначеЕсли АбсолютноеИзменение = 0 Тогда
					ЗнакИзменения = "";
				ИначеЕсли АбсолютноеИзменение < 0 Тогда
					ЗнакИзменения = "-";
				КонецЕсли;
				
				СтрокаПоказателя.АбсИзменение = ЗнакИзменения
												+ МониторингЦелевыхПоказателей.ПолучитьСокращенноеПредставлениеЧисла(АбсолютноеИзменение, ТочностьРасчетаДробнойЧасти, ВидПредставленияЧисел) + СтрокаРазмерности;
				
			КонецЕсли;
			
		Иначе 
			Если ИсточникДанных.Свойство("ОписаниеОшибки") Тогда
				СтрокаПоказателя.ТекущееЗначение = ИсточникДанных.ОписаниеОшибки;
				
			Иначе
				СтрокаПоказателя.ТекущееЗначение = НСтр("ru='Ошибка расчета показателя'");
				
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура СоздатьБазовуюСтруктуруДереваПоказателей(ДеревоПоказателейЗначение, ПолученныйСоставМонитора)
	
	ЗоныВнимания = Перечисления.ЗоныВниманияВариантовАнализа;
	
	СтатистикаПоСтрокам = ПолученныйСоставМонитора.СтатистикаПоСтрокам;
	НаборИсточниковДанных = ПолученныйСоставМонитора.НаборИсточниковДанных;
	Если СтруктураНастроек.ВариантГруппировкиПоказателей = "ПоВажности" Тогда
		Если СтатистикаПоСтрокам.КритическоеСостояние > 0 Тогда
			
			СтруктураЗначений = Новый Структура("КраткоеНаименование, КартинкаСостояния, КартинкаТренда, ЗонаВнимания");
			СтруктураЗначений.Вставить("КраткоеНаименование", ЗоныВнимания.КритическоеСостояние);
			СтруктураЗначений.Вставить("ЗонаВнимания", ЗоныВнимания.КритическоеСостояние);

			ГруппаКритическоеСостояние = ДобавитьГруппирующуюСтроку(ДеревоПоказателейЗначение, , СтруктураЗначений, Истина); 
			
		КонецЕсли;
		
		Если СтатистикаПоСтрокам.Важно > 0 Тогда
			
			СтруктураЗначений = Новый Структура("КраткоеНаименование, КартинкаСостояния, КартинкаТренда, ЗонаВнимания");
			СтруктураЗначений.Вставить("КраткоеНаименование", ЗоныВнимания.Важно);
			СтруктураЗначений.Вставить("ЗонаВнимания", ЗоныВнимания.Важно);
			
			ГруппаВажно = ДобавитьГруппирующуюСтроку(ДеревоПоказателейЗначение, , СтруктураЗначений, Истина); 
			
		КонецЕсли;
		
		Если СтатистикаПоСтрокам.КСведению > 0 Тогда
			
			СтруктураЗначений = Новый Структура("КраткоеНаименование, КартинкаСостояния, КартинкаТренда, ЗонаВнимания");
			СтруктураЗначений.Вставить("КраткоеНаименование", ЗоныВнимания.КСведению);
			СтруктураЗначений.Вставить("ЗонаВнимания", ЗоныВнимания.КСведению);
			
			ГруппаКСведению = ДобавитьГруппирующуюСтроку(ДеревоПоказателейЗначение, , СтруктураЗначений, Истина); 
			
		КонецЕсли;
		
		Если СтатистикаПоСтрокам.РассчитанныеСОшибками > 0 Тогда
			
			СтруктураЗначений = Новый Структура("КраткоеНаименование, КартинкаСостояния, КартинкаТренда, ЗонаВнимания");
			СтруктураЗначений.Вставить("КраткоеНаименование", ЗоныВнимания.РассчитанныеСОшибками);
			СтруктураЗначений.Вставить("ЗонаВнимания", ЗоныВнимания.РассчитанныеСОшибками);
			
			ГруппаРассчитанныеСОшибками = ДобавитьГруппирующуюСтроку(ДеревоПоказателейЗначение, , СтруктураЗначений, Истина); 
			
		КонецЕсли;
		
	ИначеЕсли СтруктураНастроек.ВариантГруппировкиПоказателей = "ПоКатегориямЦелей"  Тогда
		
		ГруппыПоказателей = ПолученныйСоставМонитора.НаборИсточниковДанных.Скопировать();
		ГруппыПоказателей.Свернуть("Группа");
		
		Для Каждого ГруппаПоказателей Из ГруппыПоказателей Цикл 
			СтруктураЗначений = Новый Структура("ВариантАнализа, КраткоеНаименование", ГруппаПоказателей.Группа, ГруппаПоказателей.Группа.Наименование);
			
			ДобавитьГруппирующуюСтроку(ДеревоПоказателейЗначение, , СтруктураЗначений, Истина); 
			
		КонецЦикла;
		
	КонецЕсли;

КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// Прочее

&НаКлиенте 
Процедура ИнициализироватьОбработчикАвтообновления(ПериодАвтообновления = Неопределено)
	
	Если ПериодАвтообновления = Неопределено Тогда
		ПериодАвтообновления = СтруктураНастроек.ПериодАвтообновления * 60;
	КонецЕсли;
	
	Если ПериодАвтообновления > 0 Тогда
		ОтключитьОбработчикОжидания("ОбработчикОжидания_ОбновитьСоставМонитораКлиент");
		ПодключитьОбработчикОжидания("ОбработчикОжидания_ОбновитьСоставМонитораКлиент", ПериодАвтообновления);
	КонецЕсли;
	
КонецПроцедуры

&НаСервере 
Процедура ЗаполнитьСписокВыбораОтбораПоСтатусу()
	
	СписокВыбора = Элементы.ОтборСтатус.СписокВыбора;
	
	СписокВыбора.Добавить(0, "Все");
	СписокВыбора.Добавить(1, "Критические");
	СписокВыбора.Добавить(2, "Важные");
	СписокВыбора.Добавить(3, "Критические и важные");
	СписокВыбора.Добавить(4, "К сведению");
	СписокВыбора.Добавить(5, "Рассчитанные с ошибками");
	
КонецПроцедуры

&НаСервере 
Процедура ОбновитьСоставМонитора(ПринудительноОбновитьДанные = Ложь)
	
	Элементы.ПояснениеПриЗапуске.Видимость = Ложь;
	
	ДеревоПоказателейЗначение = ДанныеФормыВЗначение(ДеревоПоказателей, Тип("ДеревоЗначений"));
	
	// Удалим ранее заполненные показатели
	ДеревоПоказателейЗначение.Строки.Очистить();
	
	// Получить список состава монитора (показатель, тип, позиция)
	ПолученныйСоставМонитора = ПолучитьСоставМонитора(ПринудительноОбновитьДанные);
	
	СоставМонитораНеопределен = (ПолученныйСоставМонитора.НаборИсточниковДанных = Неопределено);
	СоставМонитораПустойПоОтбору = ПолученныйСоставМонитора.Пустой;
	
	УстановитьВидимостьПредложенияДобавитьПоказателиВСоставМонитора(СоставМонитораНеопределен);
	УстановитьВидимостьСообщенияПустойРезультатОтбора(СоставМонитораПустойПоОтбору);

	Если НЕ СоставМонитораНеопределен И НЕ СоставМонитораПустойПоОтбору Тогда
		// Создать реквизиты формы по составу монитора
		// К имени элементов добавляется строка "__"+ID_Элемента, где
		// ID_Элемента = ВариантАнализа.УникальныйИдентификатор() + Позиция, т.е. уникален
		ДобавитьЭлементыМонитора(ДеревоПоказателейЗначение, ПолученныйСоставМонитора);
		
	КонецЕсли;
	
	Элементы.ДеревоПоказателей.Видимость = (НЕ СоставМонитораНеопределен И НЕ СоставМонитораПустойПоОтбору);
	
КонецПроцедуры

&НаКлиенте 
Процедура ОбновитьСоставМонитораКлиент(ПринудительноОбновитьДанные = Ложь)
	
	Состояние(НСтр("ru='Пожалуйста подождите, идет пересчет показателей...'"));
	
	ОбновитьСоставМонитора(ПринудительноОбновитьДанные);
	РазвернутьГруппыПоказателей();
	
	Состояние();
	
КонецПроцедуры

&НаСервере 
Процедура ОбновлениеСтруктурыНастроекСервер()
	
	СтруктураНастроек = МониторингЦелевыхПоказателей.ПолучитьНастройкиМонитораЦелевыхПоказателей();
	
КонецПроцедуры

&НаКлиенте 
Процедура ОбработчикОжидания_ОбновитьСоставМонитораКлиент()

	ОбновитьСоставМонитораКлиент();

КонецПроцедуры

&НаСервере
Функция ПолучитьСоставМонитора(ПринудительноОбновитьДанные = Ложь)
	
	ПолученныйСоставМонитора	= Новый Структура("НаборИсточниковДанных, СтатистикаПоСтрокам, Пустой", , , Ложь);
	НаборИсточниковДанных		= Новый ТаблицаЗначений;
	ТекущийПользователь			= Пользователи.ТекущийПользователь();
	ЗоныВнимания				= Перечисления.ЗоныВниманияВариантовАнализа;
	
	ЗапросСостава = Новый Запрос;
	ЗапросСостава.УстановитьПараметр("ТекущийПользователь", ТекущийПользователь);
	
	Если НЕ СтруктураНастроек.ВариантыАнализаПользовательскиеНастройки = Неопределено
		И НЕ СтруктураНастроек.ВариантыАнализаПользовательскиеНастройки.Получить() = Неопределено Тогда
		ЗапросСостава.УстановитьПараметр("ВариантыАнализа", СтруктураНастроек.ВариантыАнализаПользовательскиеНастройки.Получить());
		ЗапросСостава.Текст = "ВЫБРАТЬ
		                      |	ПользовательскиеНастройкиВариантовАнализа.ВариантАнализа,
		                      |	ПользовательскиеНастройкиВариантовАнализа.Доступность,
		                      |	ПользовательскиеНастройкиВариантовАнализа.Детали,
		                      |	ПользовательскиеНастройкиВариантовАнализа.ИтогТаблицы
		                      |ПОМЕСТИТЬ ПользовательскиеНастройкиВариантовАнализа
		                      |ИЗ
		                      |	&ВариантыАнализа КАК ПользовательскиеНастройкиВариантовАнализа
		                      |;
		                      |
		                      |////////////////////////////////////////////////////////////////////////////////
		                      |ВЫБРАТЬ
		                      |	ВариантыАнализа.Цель,
		                      |	ВариантыАнализа.ЦелевойПоказатель,
		                      |	ВариантыАнализа.ВариантАнализа,
		                      |	ВариантыАнализа.ВыводитьПодробности,
		                      |	ВариантыАнализа.ВыводитьИтогТаблицы,
		                      |	ВариантыАнализа.СостояниеПоНарастающемуИтогу,
		                      |	ВариантыАнализа.Группа,
		                      |	ВариантыАнализа.КраткоеНаименованиеЦелевогоПоказателя
		                      |ИЗ
		                      |	(ВЫБРАТЬ
		                      |		ВариантыАнализаЦелевыхПоказателейНастройкиДоступности.Ссылка.Владелец КАК Цель,
		                      |		ВариантыАнализаЦелевыхПоказателейНастройкиДоступности.Ссылка.Владелец.ЦелевойПоказатель КАК ЦелевойПоказатель,
		                      |		ВариантыАнализаЦелевыхПоказателейНастройкиДоступности.Ссылка КАК ВариантАнализа,
		                      |		ВЫБОР
		                      |			КОГДА ПользовательскиеНастройкиВариантовАнализа.Доступность ЕСТЬ NULL 
		                      |				ТОГДА ИСТИНА
		                      |			ИНАЧЕ ПользовательскиеНастройкиВариантовАнализа.Доступность
		                      |		КОНЕЦ КАК Доступность,
		                      |		ВЫБОР
		                      |			КОГДА ПользовательскиеНастройкиВариантовАнализа.Детали ЕСТЬ NULL 
		                      |				ТОГДА ЛОЖЬ
		                      |			ИНАЧЕ ПользовательскиеНастройкиВариантовАнализа.Детали
		                      |		КОНЕЦ КАК ВыводитьПодробности,
		                      |		ВЫБОР
		                      |			КОГДА ПользовательскиеНастройкиВариантовАнализа.ИтогТаблицы ЕСТЬ NULL 
		                      |				ТОГДА ЛОЖЬ
		                      |			ИНАЧЕ ПользовательскиеНастройкиВариантовАнализа.ИтогТаблицы
		                      |		КОНЕЦ КАК ВыводитьИтогТаблицы,
		                      |		ВЫБОР
		                      |			КОГДА ВариантыАнализаЦелевыхПоказателейНастройкиДоступности.Ссылка.МетодРасчетаЗначений = ЗНАЧЕНИЕ(Перечисление.МетодыРасчетаВариантовАнализаЦелевыхПоказателей.СуммаНарастающимИтогом)
		                      |				ТОГДА ИСТИНА
		                      |			ИНАЧЕ ЛОЖЬ
		                      |		КОНЕЦ КАК СостояниеПоНарастающемуИтогу,
		                      |		ВариантыАнализаЦелевыхПоказателейНастройкиДоступности.Ссылка.Владелец.КатегорияЦели КАК Группа,
		                      |		ВариантыАнализаЦелевыхПоказателейНастройкиДоступности.Ссылка.Владелец.КраткоеНаименованиеЦелевогоПоказателя КАК КраткоеНаименованиеЦелевогоПоказателя
		                      |	ИЗ
		                      |		Справочник.ВариантыАнализаЦелевыхПоказателей.НастройкиДоступности КАК ВариантыАнализаЦелевыхПоказателейНастройкиДоступности
		                      |			ЛЕВОЕ СОЕДИНЕНИЕ ПользовательскиеНастройкиВариантовАнализа КАК ПользовательскиеНастройкиВариантовАнализа
		                      |			ПО ВариантыАнализаЦелевыхПоказателейНастройкиДоступности.Ссылка = ПользовательскиеНастройкиВариантовАнализа.ВариантАнализа
		                      |	ГДЕ
		                      |		ВариантыАнализаЦелевыхПоказателейНастройкиДоступности.Пользователь = &ТекущийПользователь
		                      |		И (НЕ ВариантыАнализаЦелевыхПоказателейНастройкиДоступности.Ссылка.ПометкаУдаления)) КАК ВариантыАнализа
		                      |ГДЕ
		                      |	ВариантыАнализа.Доступность
		                      |
		                      |УПОРЯДОЧИТЬ ПО
		                      |	ВариантыАнализа.Цель.РеквизитДопУпорядочивания,
		                      |	ВариантыАнализа.ВариантАнализа.РеквизитДопУпорядочивания";
	Иначе
		ЗапросСостава.Текст = "ВЫБРАТЬ
		                      |	ВариантыАнализаЦелевыхПоказателейНастройкиДоступности.Ссылка.Владелец КАК Цель,
		                      |	ВариантыАнализаЦелевыхПоказателейНастройкиДоступности.Ссылка.Владелец.ЦелевойПоказатель КАК ЦелевойПоказатель,
		                      |	ВариантыАнализаЦелевыхПоказателейНастройкиДоступности.Ссылка КАК ВариантАнализа,
		                      |	ЛОЖЬ КАК ВыводитьПодробности,
		                      |	ЛОЖЬ КАК ВыводитьИтогТаблицы,
		                      |	ВЫБОР
		                      |		КОГДА ВариантыАнализаЦелевыхПоказателейНастройкиДоступности.Ссылка.МетодРасчетаЗначений = ЗНАЧЕНИЕ(Перечисление.МетодыРасчетаВариантовАнализаЦелевыхПоказателей.СуммаНарастающимИтогом)
		                      |			ТОГДА ИСТИНА
		                      |		ИНАЧЕ ЛОЖЬ
		                      |	КОНЕЦ КАК СостояниеПоНарастающемуИтогу,
		                      |	ВариантыАнализаЦелевыхПоказателейНастройкиДоступности.Ссылка.Владелец.КатегорияЦели КАК Группа,
		                      |	ВариантыАнализаЦелевыхПоказателейНастройкиДоступности.Ссылка.Владелец.КраткоеНаименованиеЦелевогоПоказателя КАК КраткоеНаименованиеЦелевогоПоказателя
		                      |ИЗ
		                      |	Справочник.ВариантыАнализаЦелевыхПоказателей.НастройкиДоступности КАК ВариантыАнализаЦелевыхПоказателейНастройкиДоступности
		                      |ГДЕ
		                      |	ВариантыАнализаЦелевыхПоказателейНастройкиДоступности.Пользователь = &ТекущийПользователь
		                      |	И (НЕ ВариантыАнализаЦелевыхПоказателейНастройкиДоступности.Ссылка.ПометкаУдаления)
		                      |
		                      |УПОРЯДОЧИТЬ ПО
		                      |	ВариантыАнализаЦелевыхПоказателейНастройкиДоступности.Ссылка.Владелец.РеквизитДопУпорядочивания,
		                      |	ВариантыАнализаЦелевыхПоказателейНастройкиДоступности.Ссылка.РеквизитДопУпорядочивания";
	КонецЕсли;
	
	РезультатЗапросаСостава = ЗапросСостава.Выполнить();
	
	Если НЕ РезультатЗапросаСостава.Пустой() Тогда
		
		НаборИсточниковДанных = РезультатЗапросаСостава.Выгрузить();	
		
		// Дополним таблицу источниками данных, состоянием и трендом
		НаборИсточниковДанных.Колонки.Добавить("ИсточникДанных"	, МониторингЦелевыхПоказателей.ПолучитьОписаниеТиповХранилищаЗначения());
		НаборИсточниковДанных.Колонки.Добавить("ЗонаВнимания");
		НаборИсточниковДанных.Колонки.Добавить("Пустой");
		НаборИсточниковДанных.Колонки.Добавить("ОшибкаРасчета");
		НаборИсточниковДанных.Колонки.Добавить("ПорядокЗоныВнимания");
		НаборИсточниковДанных.Колонки.Добавить("Позиция");
		
		Позиция = 1;
		Для Каждого ЭлементНабора Из НаборИсточниковДанных Цикл 
			ВариантАнализа = ЭлементНабора.ВариантАнализа;
			
			// Получим данные варианта анализа
			ИсточникДанныхВариантаАнализа = МониторингЦелевыхПоказателей.ПолучитьИсточникДанныхВариантаАнализа(ВариантАнализа, Перечисления.ВариантыОтображенияВариантовАнализа.Кратко, ПринудительноОбновитьДанные);
			ЭлементНабора.ИсточникДанных = Новый ХранилищеЗначения(ИсточникДанныхВариантаАнализа);
			
			ЭлементНабора.Пустой = ИсточникДанныхВариантаАнализа.Пустой;
			ЭлементНабора.ОшибкаРасчета = ИсточникДанныхВариантаАнализа.ОшибкаРасчета;
			// Получим зону внимания
			ЭлементНабора.ЗонаВнимания = ИсточникДанныхВариантаАнализа.СвойстваЗоныАнализаИТренда.ЗонаВнимания;
			ЭлементНабора.ПорядокЗоныВнимания = ИсточникДанныхВариантаАнализа.СвойстваЗоныАнализаИТренда.ПорядокЗоныВнимания;
			ЭлементНабора.Позиция = Позиция;
			
			Позиция = Позиция + 1;
			
		КонецЦикла;
		
		// Установим отбор
		Если ОтборСтатус = 1 Тогда
			
			ОтборКритических = Новый Структура("ЗонаВнимания", ЗоныВнимания.КритическоеСостояние);
			НаборИсточниковДанных = НаборИсточниковДанных.Скопировать(ОтборКритических);
			
		ИначеЕсли ОтборСтатус = 2 Тогда
			
			ОтборВажных = Новый Структура("ЗонаВнимания", ЗоныВнимания.Важно);
			НаборИсточниковДанных = НаборИсточниковДанных.Скопировать(ОтборВажных);
			
		ИначеЕсли ОтборСтатус = 3 Тогда
			
			ОтборКСведению = Новый Структура("ЗонаВнимания", ЗоныВнимания.КСведению);
			ЭлементыМонитораКУдалению = НаборИсточниковДанных.НайтиСтроки(ОтборКСведению);
			
			Для Каждого ЭлементМонитораКУдалению Из ЭлементыМонитораКУдалению Цикл 
				
				НаборИсточниковДанных.Удалить(ЭлементМонитораКУдалению);
				
			КонецЦикла;
			
			ОтборПоРассчитаннымСОшибками = Новый Структура("ЗонаВнимания", ЗоныВнимания.РассчитанныеСОшибками);
			ЭлементыМонитораКУдалению = НаборИсточниковДанных.НайтиСтроки(ОтборПоРассчитаннымСОшибками);
			
			Для Каждого ЭлементМонитораКУдалению Из ЭлементыМонитораКУдалению Цикл 
				
				НаборИсточниковДанных.Удалить(ЭлементМонитораКУдалению);
				
			КонецЦикла;
			
		ИначеЕсли ОтборСтатус = 4 Тогда
			
			ОтборКСведению = Новый Структура("ЗонаВнимания", ЗоныВнимания.КСведению);
			НаборИсточниковДанных = НаборИсточниковДанных.Скопировать(ОтборКСведению);
			
		ИначеЕсли ОтборСтатус = 5 Тогда
			
			ОтборПоРассчитаннымСОшибками = Новый Структура("ЗонаВнимания", ЗоныВнимания.РассчитанныеСОшибками);
			НаборИсточниковДанных = НаборИсточниковДанных.Скопировать(ОтборПоРассчитаннымСОшибками);
			
		КонецЕсли;
		
		ПолученныйСоставМонитора.Пустой = (НаборИсточниковДанных.Количество() = 0);
		
		ПолученныйСоставМонитора.Вставить("НаборИсточниковДанных", НаборИсточниковДанных);
		
		ПолученныйСоставМонитора.Вставить("СтатистикаПоСтрокам", МониторингЦелевыхПоказателей.СтатистикаИсточниковДанныхПоЗонамВнимания(НаборИсточниковДанных));
		
		ВариантыАнализаСПодробностями.Очистить();
		ОтборПоПодробным = Новый Структура("ВыводитьПодробности", Истина);
		НайденныеПоказатели = НаборИсточниковДанных.НайтиСтроки(ОтборПоПодробным);
		Для Каждого НайденныйВариантАнализа Из НайденныеПоказатели Цикл 
			ВариантыАнализаСПодробностями.Добавить(НайденныйВариантАнализа.ВариантАнализа);
			
		КонецЦикла;
		
		Если НЕ ВариантыАнализаСПодробностями.Количество() = 0 Тогда
			ЕстьПодробности = Истина;
		Иначе 
			ЕстьПодробности = Ложь;
		КонецЕсли;
		
		ВариантыАнализаСНарастающимИтогом.Очистить();
		ОтборПоНарастающемуИтогу = Новый Структура("СостояниеПоНарастающемуИтогу", Истина);
		НайденныеПоказатели = НаборИсточниковДанных.НайтиСтроки(ОтборПоНарастающемуИтогу);
		Для Каждого НайденныйВариантАнализа Из НайденныеПоказатели Цикл 
			ВариантыАнализаСНарастающимИтогом.Добавить(НайденныйВариантАнализа.ВариантАнализа);
			
		КонецЦикла;
		
		СоставМонитораОбъект = НаборИсточниковДанных.Скопировать(,"ВариантАнализа");
		СоставМонитораОбъект.Колонки.Добавить("АдресДинамическихПараметров");
		ЗначениеВДанныеФормы(СоставМонитораОбъект, СоставМонитора);
		
	Иначе
		ВариантыАнализаСПодробностями.Очистить();
		ЕстьПодробности = Ложь;
		
		ВариантыАнализаСНарастающимИтогом.Очистить();
		
		ДеревоПоказателейЗначение = ДанныеФормыВЗначение(ДеревоПоказателей, Тип("ДеревоЗначений"));
		ДеревоПоказателейЗначение.Строки.Очистить();
		ЗначениеВДанныеФормы(ДеревоПоказателейЗначение, ДеревоПоказателей);
		
	КонецЕсли;
	
	Возврат ПолученныйСоставМонитора;
	
КонецФункции

&НаКлиенте 
Процедура РазвернутьГруппыПоказателей()
	
	ЭлементыДерева = ДеревоПоказателей.ПолучитьЭлементы();
	Для Каждого ЭлементДерева Из ЭлементыДерева Цикл 
		Если ЭлементДерева.ЭтоГруппа Тогда 
			
			ИдентификаторЭлемента = ЭлементДерева.ПолучитьИдентификатор();
			Элементы.ДеревоПоказателей.Развернуть(ИдентификаторЭлемента);
			
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

&НаСервере 
Процедура УстановитьВидимостьПредложенияДобавитьПоказателиВСоставМонитора(Видимость)
	
	Элементы.ГруппаПриПустомСоставеМонитора.Видимость = Видимость;
	Элементы.СводныйОтчет.Доступность = НЕ Видимость;
	Элементы.ДеревоПоказателей.Видимость = НЕ Видимость;
	
КонецПроцедуры

&НаСервере 
Процедура УстановитьВидимостьСообщенияПустойРезультатОтбора(Видимость)
	
	Элементы.ГруппаПриПустомРезультатеОтбора.Видимость = Видимость;
	Элементы.ДеревоПоказателей.Видимость = НЕ Видимость;
	
КонецПроцедуры

