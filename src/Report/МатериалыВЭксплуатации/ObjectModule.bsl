#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда


///////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ

Процедура ПриКомпоновкеРезультата(ДокументРезультат, ДанныеРасшифровки, СтандартнаяОбработка)

	// Настройка по данным документа.
	
	ПараметрДанныхПоДаннымДокумента = КомпоновщикНастроек.Настройки.ПараметрыДанных.Элементы.Найти("ПоДаннымДокумента");
	ПользовательскаяНастройкаПоДаннымДокумента = КомпоновщикНастроек.ПользовательскиеНастройки.Элементы.Найти(ПараметрДанныхПоДаннымДокумента.ИдентификаторПользовательскойНастройки);
	
	// Настройка условного оформления номенклатуры документа.
	МассивТоваров = ПолучитьМассивТоваровПоДокументу(ПользовательскаяНастройкаПоДаннымДокумента.Значение);
	Для Каждого ВложенныйОтчет Из КомпоновщикНастроек.Настройки.Структура Цикл
		НастройкаУсловногоОформленияНоменклатуры(ВложенныйОтчет, МассивТоваров, ПользовательскаяНастройкаПоДаннымДокумента.Использование);
	КонецЦикла;
	
	// Установка отбора по физическим лицам документа.
	УстановкаОтбораПоФизЛицам(ПользовательскаяНастройкаПоДаннымДокумента, ВложенныйОтчет);
	
	// Отключение отбора "Только находящиеся в эксплуатации".
	ПараметрДанныхНаходитсяВЭксплуатации = КомпоновщикНастроек.Настройки.ПараметрыДанных.Элементы.Найти("НаходитсяВЭксплуатации");
	ПользовательскаяНастройкаНаходитсяВЭксплуатации = КомпоновщикНастроек.ПользовательскиеНастройки.Элементы.Найти(ПараметрДанныхНаходитсяВЭксплуатации.ИдентификаторПользовательскойНастройки);
	
	Если ПользовательскаяНастройкаПоДаннымДокумента.Использование Тогда
		ПользовательскаяНастройкаНаходитсяВЭксплуатации.Значение = Ложь;
	КонецЕсли;	
	
КонецПроцедуры

///////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

Процедура УстановкаОтбораПоФизЛицам(ПараметрПоДаннымДокумента, ВложенныйОтчет)
	
	КоллекцияЭлементовОтбора = ВложенныйОтчет.Настройки.Отбор.Элементы;
	
	ЭлементОтбораПоФизЛицам = Неопределено;
	Для Каждого ЭлементОтбора Из КоллекцияЭлементовОтбора Цикл
		Если ЭлементОтбора.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("ФизическоеЛицо") Тогда
			ЭлементОтбораПоФизЛицам = ЭлементОтбора;
			Прервать;
		КонецЕсли;
	КонецЦикла;
	
	Если ЭлементОтбораПоФизЛицам <> Неопределено Тогда
		
		ПользовательскаяНастройкаОтбораПоФизЛицам = КомпоновщикНастроек.ПользовательскиеНастройки.Элементы.Найти(
			ЭлементОтбораПоФизЛицам.ИдентификаторПользовательскойНастройки);
			
		Если ПараметрПоДаннымДокумента.Использование Тогда
			ПользовательскаяНастройкаОтбораПоФизЛицам.Использование  = ПараметрПоДаннымДокумента.Использование;
			ПользовательскаяНастройкаОтбораПоФизЛицам.ВидСравнения   = ВидСравненияКомпоновкиДанных.ВСписке;
			ПользовательскаяНастройкаОтбораПоФизЛицам.ПравоеЗначение = ПолучитьМассивФизЛицПоДокументу(ПараметрПоДаннымДокумента.Значение);
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

Процедура НастройкаУсловногоОформленияНоменклатуры(ВложенныйОтчет, МассивНоменклатуры, Использование)
	
	КоллекцияЭлементовУсловногоОформления = ВложенныйОтчет.Настройки.УсловноеОформление.Элементы;
	
	ЭлементОтбораУсловногоОформленияНоменклатуры = Неопределено;
	Для Каждого ЭлементУсловногоОформления Из КоллекцияЭлементовУсловногоОформления Цикл
		Для Каждого ЭлементОтбораУсловногоОформления Из ЭлементУсловногоОформления.Отбор.Элементы Цикл
			Если ЭлементОтбораУсловногоОформления.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Номенклатура") Тогда
				ЭлементУсловногоОформления.Использование = Использование;
				ЭлементОтбораУсловногоОформленияНоменклатуры = ЭлементОтбораУсловногоОформления;
				Прервать;
			КонецЕсли;
		КонецЦикла;
	КонецЦикла;
	
	Если Использование И ЭлементОтбораУсловногоОформленияНоменклатуры <> Неопределено Тогда
		ЭлементОтбораУсловногоОформленияНоменклатуры.Использование  = Использование;
		ЭлементОтбораУсловногоОформленияНоменклатуры.ВидСравнения   = ВидСравненияКомпоновкиДанных.ВСписке;
		ЭлементОтбораУсловногоОформленияНоменклатуры.ПравоеЗначение = МассивНоменклатуры;
	КонецЕсли;
		
КонецПроцедуры

Функция ПолучитьМассивФизЛицПоДокументу(Ссылка)
	
	Запрос = Новый Запрос("
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
	|	ТаблицаТовары.ФизическоеЛицо КАК ФизическоеЛицо
	|ИЗ
	|	Документ.ВнутреннееПотреблениеТоваров.Товары КАК ТаблицаТовары
	|ГДЕ
	|	ТаблицаТовары.Ссылка = &Ссылка
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ТаблицаТовары.ФизическоеЛицо
	|ИЗ
	|	Документ.ЗаказНаВнутреннееПотребление.Товары КАК ТаблицаТовары
	|ГДЕ
	|	ТаблицаТовары.Ссылка = &Ссылка
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ТаблицаТовары.ФизическоеЛицо
	|ИЗ
	|	Документ.ПрочееОприходованиеТоваров.Товары КАК ТаблицаТовары
	|ГДЕ
	|	ТаблицаТовары.Ссылка = &Ссылка");
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	
	СписокЗначений = Новый СписокЗначений;
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		СписокЗначений.Добавить(Выборка.ФизическоеЛицо);
	КонецЦикла;
	
	Возврат СписокЗначений;
	
КонецФункции

Функция ПолучитьМассивТоваровПоДокументу(Ссылка)
	
	Запрос = Новый Запрос("
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
	|	ТаблицаТовары.Номенклатура КАК Номенклатура
	|ИЗ
	|	Документ.ВнутреннееПотреблениеТоваров.Товары КАК ТаблицаТовары
	|ГДЕ
	|	ТаблицаТовары.Ссылка = &Ссылка
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ТаблицаТовары.Номенклатура КАК Номенклатура
	|ИЗ
	|	Документ.ЗаказНаВнутреннееПотребление.Товары КАК ТаблицаТовары
	|ГДЕ
	|	ТаблицаТовары.Ссылка = &Ссылка
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ТаблицаТовары.Номенклатура КАК Номенклатура
	|ИЗ
	|	Документ.ПрочееОприходованиеТоваров.Товары КАК ТаблицаТовары
	|ГДЕ
	|	ТаблицаТовары.Ссылка = &Ссылка
	|");
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	
	СписокЗначений = Новый СписокЗначений;
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		СписокЗначений.Добавить(Выборка.Номенклатура);
	КонецЦикла;
	
	Возврат СписокЗначений;
	
КонецФункции

#КонецЕсли