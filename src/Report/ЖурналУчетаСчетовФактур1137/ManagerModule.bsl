#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

Процедура СформироватьОтчет(ПараметрыОтчета, АдресХранилища) Экспорт
	
	Макет = ПолучитьМакет("Макет");
	ТабДокумент = Новый ТабличныйДокумент;
	ТабДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_ЖурналУчетаСчетовФактур";

	Данные = ПолучитьДанныеДляОтчета(ПараметрыОтчета);
	
	СведенияОрганизации = БухгалтерскийУчетВызовСервераПереопределяемый.СведенияОЮрФизЛице(ПараметрыОтчета.Организация);
	НаименованиеОрганизацииДляПечатныхФорм = ОбщегоНазначенияБПВызовСервера.ОписаниеОрганизации(СведенияОрганизации, "НаименованиеДляПечатныхФорм,");
	
	Отступ = Макет.ПолучитьОбласть("Отступ");
	
	// ШАПКА
	
	Если ПараметрыОтчета.СформироватьОтчетПоСтандартнойФорме Тогда
		Секция = Макет.ПолучитьОбласть("ШапкаИнформация");
		ТабДокумент.Вывести(Секция);
	КонецЕсли;
	
	Шапка = Макет.ПолучитьОбласть("Шапка");
	ЗаполнитьШапкуОтчета(Шапка, ПараметрыОтчета);
	ТабДокумент.Вывести(Шапка);
	
	ТабДокумент.Вывести(Отступ);
	
	// ЧАСТЬ 1
	
	Часть1Заголовок = Макет.ПолучитьОбласть("Часть1Заголовок");	
	ТабДокумент.Вывести(Часть1Заголовок);
	
	Часть1Строка = Макет.ПолучитьОбласть("Часть1Строка");
	
	СтрокиЧасть1 = Данные.ВыставленныеСчетаФактуры;
	
	НомерПП = 1;
	
	Если НЕ ПараметрыОтчета.СформироватьОтчетПоСтандартнойФорме И ПараметрыОтчета.ГруппироватьПоКонтрагентам Тогда
		//Режим построения с группировкой по контрагенту
		СекцияКонтрагента = Макет.ПолучитьОбласть("Контрагент");
		ГруппировкаПоКонтрагенту = СтрокиЧасть1.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		Если ГруппировкаПоКонтрагенту.Количество() > 0 Тогда
			ТабДокумент.НачатьАвтогруппировкуСтрок();
			Пока ГруппировкаПоКонтрагенту.Следующий() Цикл
				СекцияКонтрагента.Параметры.Заполнить(ГруппировкаПоКонтрагенту);
				ТабДокумент.Вывести(СекцияКонтрагента, 1);	
				ГруппировкаПоСчетуФактуре = ГруппировкаПоКонтрагенту.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
				Пока ГруппировкаПоСчетуФактуре.Следующий() Цикл
					ЗаполнитьСтрокуОтчета(Часть1Строка, ГруппировкаПоСчетуФактуре, НаименованиеОрганизацииДляПечатныхФорм);
					ТабДокумент.Вывести(Часть1Строка, 2);
					НомерПП = НомерПП + 1;
				КонецЦикла; 
			КонецЦикла;	
			ТабДокумент.ЗакончитьАвтогруппировкуСтрок();
		КонецЕсли;	
	Иначе
		Выборка = СтрокиЧасть1.Выбрать();
		Пока Выборка.Следующий() Цикл
			ЗаполнитьСтрокуОтчета(Часть1Строка, Выборка, НаименованиеОрганизацииДляПечатныхФорм);
			Часть1Строка.Параметры.Номер = НомерПП;
			ТабДокумент.Вывести(Часть1Строка);
			НомерПП = НомерПП + 1;
		КонецЦикла;
	КонецЕсли;	
		
	ТабДокумент.Вывести(Отступ);
	
	// ЧАСТЬ 2
	
	Часть2Заголовок = Макет.ПолучитьОбласть("Часть2Заголовок");	
	ТабДокумент.Вывести(Часть2Заголовок);
	
	Часть2Строка = Макет.ПолучитьОбласть("Часть2Строка");
	
	СтрокиЧасть2 = Данные.ПолученныеСчетаФактуры;
	
    НомерПП = 1;
	
	Если НЕ ПараметрыОтчета.СформироватьОтчетПоСтандартнойФорме И ПараметрыОтчета.ГруппироватьПоКонтрагентам Тогда
		//Режим построения с группировкой по контрагенту
		СекцияКонтрагента = Макет.ПолучитьОбласть("Контрагент");
		ГруппировкаПоКонтрагенту = СтрокиЧасть2.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		Если ГруппировкаПоКонтрагенту.Количество() > 0 Тогда
			ТабДокумент.НачатьАвтогруппировкуСтрок();
			Пока ГруппировкаПоКонтрагенту.Следующий() Цикл
				СекцияКонтрагента.Параметры.Заполнить(ГруппировкаПоКонтрагенту);
				ТабДокумент.Вывести(СекцияКонтрагента, 1);	
				ГруппировкаПоСчетуФактуре = ГруппировкаПоКонтрагенту.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
				Пока ГруппировкаПоСчетуФактуре.Следующий() Цикл
					ЗаполнитьСтрокуОтчета(Часть2Строка, ГруппировкаПоСчетуФактуре, НаименованиеОрганизацииДляПечатныхФорм);
					ТабДокумент.Вывести(Часть2Строка, 2);
					НомерПП = НомерПП + 1;
				КонецЦикла; 
			КонецЦикла;	
			ТабДокумент.ЗакончитьАвтогруппировкуСтрок();
		КонецЕсли;	
	Иначе
		Выборка = СтрокиЧасть2.Выбрать();
		Пока Выборка.Следующий() Цикл
			ЗаполнитьСтрокуОтчета(Часть2Строка, Выборка, НаименованиеОрганизацииДляПечатныхФорм);
			Часть2Строка.Параметры.Номер = НомерПП;
			ТабДокумент.Вывести(Часть2Строка);
			НомерПП = НомерПП + 1;
		КонецЦикла;
	КонецЕсли;	
		
	ТабДокумент.Вывести(Отступ);
	
	// ПОДВАЛ
	
	Подвал = Макет.ПолучитьОбласть("Подвал");
	ЗаполнитьПодвалОтчета(Подвал, ПараметрыОтчета);
	ТабДокумент.Вывести(Подвал);
	
	ПоместитьВоВременноеХранилище(ТабДокумент, АдресХранилища);
	
КонецПроцедуры

Функция ПолучитьДанныеДляОтчета(ПараметрыОтчета)
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("Организация", ПараметрыОтчета.Организация);
	Запрос.УстановитьПараметр("Квартал", НачалоКвартала(ПараметрыОтчета.Период));
	Запрос.УстановитьПараметр("Контрагент", ПараметрыОтчета.КонтрагентДляОтбора);
	
	// Определим список документов счетов-фактур, которые являются корректировочными.
	Отбор = Новый Структура();
	Отбор.Вставить("Организация", ПараметрыОтчета.Организация);
	Если НЕ ПараметрыОтчета.СформироватьОтчетПоСтандартнойФорме Тогда
		Если ПараметрыОтчета.ОтбиратьПоКонтрагенту Тогда
			ОтборПоКонтрагенту = Новый Структура;
			ОтборПоКонтрагенту.Вставить("ВидСравнения", ВидСравнения.ВИерархии);
			ОтборПоКонтрагенту.Вставить("Значение", ПараметрыОтчета.КонтрагентДляОтбора);
			Отбор.Вставить("Контрагент", ОтборПоКонтрагенту);
		КонецЕсли;
	КонецЕсли;
	
	ТекстКорректировочныеСчетаФактуры = УчетНДСПереопределяемый.ТекстЗапросаКорректировочныеСчетаФактуры(Запрос, КонецКвартала(ПараметрыОтчета.Период), Отбор);
	Запрос.Текст = "
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	КорректировочныеСчетаФактуры.СчетФактура КАК СчетФактура,
	|	КорректировочныеСчетаФактуры.Организация КАК Организация
	|	
	|ПОМЕСТИТЬ ВТ_КорректировочныеСчетаФактуры
	|ИЗ
	|	(" + ТекстКорректировочныеСчетаФактуры + ") КАК КорректировочныеСчетаФактуры
	|ИНДЕКСИРОВАТЬ ПО
	|	СчетФактура,
	|	Организация
	|";
	
	Запрос.Выполнить();
	
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ЖурналУчетаСчетовФактурСрезПоследних.Организация КАК Организация,
	|	ЖурналУчетаСчетовФактурСрезПоследних.СчетФактура КАК СчетФактураДокумент,
	|	ЖурналУчетаСчетовФактурСрезПоследних.ДатаВыставленияПолучения КАК ДатаПередачиПолучения,
	|	ЖурналУчетаСчетовФактурСрезПоследних.ДатаСчетаФактуры КАК ДатаСчетаФактуры,
	|	ЖурналУчетаСчетовФактурСрезПоследних.НомерСчетаФактуры КАК НомерСчетаФактуры,
	|	ЖурналУчетаСчетовФактурСрезПоследних.Контрагент КАК Контрагент,
	|	ЖурналУчетаСчетовФактурСрезПоследних.Контрагент.ИНН КАК КонтрагентИНН,
	|	ЖурналУчетаСчетовФактурСрезПоследних.Контрагент.КПП КАК КонтрагентКПП,
	|	ВЫБОР
	|		КОГДА ПОДСТРОКА(ЖурналУчетаСчетовФактурСрезПоследних.Контрагент.НаименованиеПолное, 1, 250) = """"
	|			ТОГДА ЖурналУчетаСчетовФактурСрезПоследних.Контрагент.Наименование
	|		ИНАЧЕ ПОДСТРОКА(ЖурналУчетаСчетовФактурСрезПоследних.Контрагент.НаименованиеПолное, 1, 250)
	|	КОНЕЦ КАК КонтрагентНаименование,
	|	ЖурналУчетаСчетовФактурСрезПоследних.Валюта.НаименованиеПолное КАК НаименованиеВалюты,
	|	ЖурналУчетаСчетовФактурСрезПоследних.Валюта.Код КАК КодВалюты,
	|	ЖурналУчетаСчетовФактурСрезПоследних.СуммаПоСчетуФактуре КАК СуммаДокумента,
	|	ЖурналУчетаСчетовФактурСрезПоследних.СуммаНДС КАК СуммаНДС,
	|	ЖурналУчетаСчетовФактурСрезПоследних.ЧастьЖурнала КАК ЧастьЖурнала,
	|	ЖурналУчетаСчетовФактурСрезПоследних.КодВидаОперации КАК КодВидаОперации,
	|	ЖурналУчетаСчетовФактурСрезПоследних.СуммаПоСчетуФактуреРазницаУменьшение КАК СуммаПоСчетуФактуреРазницаУменьшение,
	|	ЖурналУчетаСчетовФактурСрезПоследних.СуммаПоСчетуФактуреРазницаУвеличение КАК СуммаПоСчетуФактуреРазницаУвеличение,
	|	ЖурналУчетаСчетовФактурСрезПоследних.СуммаНДСРазницаУменьшение КАК СуммаНДСРазницаУменьшение,
	|	ЖурналУчетаСчетовФактурСрезПоследних.СуммаНДСРазницаУвеличение КАК СуммаНДСРазницаУвеличение,
	|	ЖурналУчетаСчетовФактурСрезПоследних.ПоСтавкеБезНДС КАК СчетФактураБезНДС,
	|	ЖурналУчетаСчетовФактурСрезПоследних.КодСпособаВыставленияПолучения КАК КодСпособаВыставления,
	|	ЖурналУчетаСчетовФактурСрезПоследних.НомерКорректировочногоСчетаФактуры КАК НомерКорректировочногоСчетаФактуры,
	|	ЖурналУчетаСчетовФактурСрезПоследних.ДатаКорректировочногоСчетаФактуры КАК ДатаКорректировочногоСчетаФактуры,
	|	ЖурналУчетаСчетовФактурСрезПоследних.НомерИсправления КАК НомерИсправления,
	|	ЖурналУчетаСчетовФактурСрезПоследних.ДатаИсправления КАК ДатаИсправления,
	|	ЖурналУчетаСчетовФактурСрезПоследних.СчетФактураНеВыставляется КАК СчетФактураНеВыставляется,
	|	ВЫБОР
	|		КОГДА НЕ (ВТ_КорректировочныеСчетаФактуры.СчетФактура ЕСТЬ NULL)
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК КорректировочныйСчетФактура
	|ПОМЕСТИТЬ ЗаписиРегистраЖурналУчетаСчетовФактур
	|ИЗ
	|	РегистрСведений.ЖурналУчетаСчетовФактур.СрезПоследних(
	|			&Квартал,
	|			Организация = &Организация
	|				И Период = &Квартал
	|				И ДатаВыставленияПолучения <> ДАТАВРЕМЯ(1, 1, 1)) КАК ЖурналУчетаСчетовФактурСрезПоследних
	|	ЛЕВОЕ СОЕДИНЕНИЕ ВТ_КорректировочныеСчетаФактуры
	|		ПО ЖурналУчетаСчетовФактурСрезПоследних.СчетФактура = ВТ_КорректировочныеСчетаФактуры.СчетФактура
	|			И ЖурналУчетаСчетовФактурСрезПоследних.Организация = ВТ_КорректировочныеСчетаФактуры.Организация";
	
	Если НЕ ПараметрыОтчета.СформироватьОтчетПоСтандартнойФорме Тогда
		Если ПараметрыОтчета.ОтбиратьПоКонтрагенту Тогда
			Запрос.Текст = СтрЗаменить(Запрос.Текст, "И Период = &Квартал", "И Период = &Квартал И Контрагент В ИЕРАРХИИ (&Контрагент)");
		КонецЕсли;
	КонецЕсли;	
	
	Запрос.Выполнить();
		
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ЗаписиРегистраЖурналУчетаСчетовФактур.Организация,
	|	ЗаписиРегистраЖурналУчетаСчетовФактур.СчетФактураДокумент,
	|	ЗаписиРегистраЖурналУчетаСчетовФактур.КодВидаОперации,
	|	ЗаписиРегистраЖурналУчетаСчетовФактур.ДатаПередачиПолучения КАК ДатаПередачиПолучения,
	|	ЗаписиРегистраЖурналУчетаСчетовФактур.ДатаСчетаФактуры КАК ДатаСчетаФактуры,
	|	ЗаписиРегистраЖурналУчетаСчетовФактур.НомерСчетаФактуры,
	|	ЗаписиРегистраЖурналУчетаСчетовФактур.Контрагент КАК Контрагент,
	|	ЗаписиРегистраЖурналУчетаСчетовФактур.КонтрагентНаименование КАК КонтрагентНаименование,
	|	ЗаписиРегистраЖурналУчетаСчетовФактур.НаименованиеВалюты,
	|	ЗаписиРегистраЖурналУчетаСчетовФактур.КодВалюты,
	|	ЗаписиРегистраЖурналУчетаСчетовФактур.СуммаДокумента КАК СуммаДокумента,
	|	ЗаписиРегистраЖурналУчетаСчетовФактур.СуммаНДС КАК СуммаНДС,
	|	ЗаписиРегистраЖурналУчетаСчетовФактур.СчетФактураБезНДС,
	|	ЗаписиРегистраЖурналУчетаСчетовФактур.ЧастьЖурнала,
	|	ЗаписиРегистраЖурналУчетаСчетовФактур.КонтрагентИНН,
	|	ЗаписиРегистраЖурналУчетаСчетовФактур.КонтрагентКПП,
	|	ЗаписиРегистраЖурналУчетаСчетовФактур.СуммаПоСчетуФактуреРазницаУменьшение,
	|	ЗаписиРегистраЖурналУчетаСчетовФактур.СуммаПоСчетуФактуреРазницаУвеличение,
	|	ЗаписиРегистраЖурналУчетаСчетовФактур.СуммаНДСРазницаУменьшение,
	|	ЗаписиРегистраЖурналУчетаСчетовФактур.СуммаНДСРазницаУвеличение,
	|	ЗаписиРегистраЖурналУчетаСчетовФактур.КодСпособаВыставления,
	|	ЗаписиРегистраЖурналУчетаСчетовФактур.НомерКорректировочногоСчетаФактуры,
	|	ЗаписиРегистраЖурналУчетаСчетовФактур.ДатаКорректировочногоСчетаФактуры,
	|	ЗаписиРегистраЖурналУчетаСчетовФактур.НомерИсправления,
	|	ЗаписиРегистраЖурналУчетаСчетовФактур.ДатаИсправления,
	|	ЗаписиРегистраЖурналУчетаСчетовФактур.СчетФактураНеВыставляется,
	|	ЗаписиРегистраЖурналУчетаСчетовФактур.КорректировочныйСчетФактура
	|ИЗ
	|	ЗаписиРегистраЖурналУчетаСчетовФактур КАК ЗаписиРегистраЖурналУчетаСчетовФактур
	|ГДЕ
	|	ЗаписиРегистраЖурналУчетаСчетовФактур.ЧастьЖурнала = ЗНАЧЕНИЕ(Перечисление.ЧастиЖурналаУчетаСчетовФактур.ВыставленныеСчетаФактуры)
	|
	|УПОРЯДОЧИТЬ ПО
	|	ДатаПередачиПолучения";
	
	Если НЕ ПараметрыОтчета.СформироватьОтчетПоСтандартнойФорме И ПараметрыОтчета.ГруппироватьПоКонтрагентам Тогда
		Запрос.Текст = Запрос.Текст + "
			|ИТОГИ
			|	СУММА(СуммаДокумента),
			|	СУММА(СуммаНДС),
			| 	МАКСИМУМ(КонтрагентНаименование)
			|ПО
			|	Контрагент";
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "УПОРЯДОЧИТЬ ПО", "УПОРЯДОЧИТЬ ПО
			|КонтрагентНаименование, ");	
			
	КонецЕсли;		
			
	ВыставленныеСчетаФактуры = Запрос.Выполнить();
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ЗаписиРегистраЖурналУчетаСчетовФактур.Организация,
	|	ЗаписиРегистраЖурналУчетаСчетовФактур.СчетФактураДокумент,
	|	ЗаписиРегистраЖурналУчетаСчетовФактур.КодВидаОперации,
	|	ЗаписиРегистраЖурналУчетаСчетовФактур.ДатаПередачиПолучения КАК ДатаПередачиПолучения,
	|	ЗаписиРегистраЖурналУчетаСчетовФактур.ДатаСчетаФактуры КАК ДатаСчетаФактуры,
	|	ЗаписиРегистраЖурналУчетаСчетовФактур.НомерСчетаФактуры,
	|	ЗаписиРегистраЖурналУчетаСчетовФактур.Контрагент КАК Контрагент,
	|	ЗаписиРегистраЖурналУчетаСчетовФактур.КонтрагентНаименование КАК КонтрагентНаименование,
	|	ЗаписиРегистраЖурналУчетаСчетовФактур.НаименованиеВалюты,
	|	ЗаписиРегистраЖурналУчетаСчетовФактур.КодВалюты,
	|	ЗаписиРегистраЖурналУчетаСчетовФактур.СуммаДокумента КАК СуммаДокумента,
	|	ЗаписиРегистраЖурналУчетаСчетовФактур.СуммаНДС КАК СуммаНДС,
	|	ЗаписиРегистраЖурналУчетаСчетовФактур.СчетФактураБезНДС,
	|	ЗаписиРегистраЖурналУчетаСчетовФактур.ЧастьЖурнала,
	|	ЗаписиРегистраЖурналУчетаСчетовФактур.КонтрагентИНН,
	|	ЗаписиРегистраЖурналУчетаСчетовФактур.КонтрагентКПП,
	|	ЗаписиРегистраЖурналУчетаСчетовФактур.СуммаПоСчетуФактуреРазницаУменьшение,
	|	ЗаписиРегистраЖурналУчетаСчетовФактур.СуммаПоСчетуФактуреРазницаУвеличение,
	|	ЗаписиРегистраЖурналУчетаСчетовФактур.СуммаНДСРазницаУменьшение,
	|	ЗаписиРегистраЖурналУчетаСчетовФактур.СуммаНДСРазницаУвеличение,
	|	ЗаписиРегистраЖурналУчетаСчетовФактур.КодСпособаВыставления,
	|	ЗаписиРегистраЖурналУчетаСчетовФактур.НомерКорректировочногоСчетаФактуры,
	|	ЗаписиРегистраЖурналУчетаСчетовФактур.ДатаКорректировочногоСчетаФактуры,
	|	ЗаписиРегистраЖурналУчетаСчетовФактур.НомерИсправления,
	|	ЗаписиРегистраЖурналУчетаСчетовФактур.ДатаИсправления,
	|	ЗаписиРегистраЖурналУчетаСчетовФактур.СчетФактураНеВыставляется,
	|	ЗаписиРегистраЖурналУчетаСчетовФактур.КорректировочныйСчетФактура
	|ИЗ
	|	ЗаписиРегистраЖурналУчетаСчетовФактур КАК ЗаписиРегистраЖурналУчетаСчетовФактур
	|ГДЕ
	|	ЗаписиРегистраЖурналУчетаСчетовФактур.ЧастьЖурнала = ЗНАЧЕНИЕ(Перечисление.ЧастиЖурналаУчетаСчетовФактур.ПолученныеСчетаФактуры)
	|
	|УПОРЯДОЧИТЬ ПО
	|	ДатаПередачиПолучения";
	
	Если НЕ ПараметрыОтчета.СформироватьОтчетПоСтандартнойФорме И ПараметрыОтчета.ГруппироватьПоКонтрагентам Тогда
		Запрос.Текст = Запрос.Текст + "
			|ИТОГИ
			|	СУММА(СуммаДокумента),
			|	СУММА(СуммаНДС),
			| 	МАКСИМУМ(КонтрагентНаименование)
			|ПО
			|	Контрагент";
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "УПОРЯДОЧИТЬ ПО", "УПОРЯДОЧИТЬ ПО
			|КонтрагентНаименование, ");	
	КонецЕсли;	
	
	ПолученныеСчетаФактуры = Запрос.Выполнить();

	Возврат Новый Структура("ВыставленныеСчетаФактуры, ПолученныеСчетаФактуры", ВыставленныеСчетаФактуры, ПолученныеСчетаФактуры);
	
КонецФункции

Процедура ЗаполнитьШапкуОтчета(Шапка, ПараметрыОтчета)
	
	СведенияОрганизации = БухгалтерскийУчетВызовСервераПереопределяемый.СведенияОЮрФизЛице(ПараметрыОтчета.Организация);
	Шапка.Параметры.Организация = ОбщегоНазначенияБПВызовСервера.ОписаниеОрганизации(СведенияОрганизации, "НаименованиеДляПечатныхФорм");
	Шапка.Параметры.ИННКПП  = "" + СведенияОрганизации.ИНН + ?(НЕ ЗначениеЗаполнено(СведенияОрганизации.КПП), "", ("/" + СведенияОрганизации.КПП));
	Шапка.Параметры.Квартал = Формат(ПараметрыОтчета.Период, "ДФ = к");
	Шапка.Параметры.Год     = Формат(ПараметрыОтчета.Период, "ДФ = гггг");
	
КонецПроцедуры

Процедура ЗаполнитьПодвалОтчета(Подвал, ПараметрыОтчета);
	
	ОтветственныеЛица = ОбщегоНазначенияБПВызовСервера.ОтветственныеЛица(ПараметрыОтчета.Организация, ПараметрыОтчета.Период);
	Если ОбщегоНазначенияБПВызовСервераПовтИсп.ЭтоЮрЛицо(ПараметрыОтчета.Организация) Тогда
		ИмяОрг = "";
		Свидетельство = "";
	Иначе
		ИмяОрг = ОтветственныеЛица.РуководительПредставление;
		СведенияОЮрФизЛице = БухгалтерскийУчетВызовСервераПереопределяемый.СведенияОЮрФизЛице(ПараметрыОтчета.Организация);
		Свидетельство = СведенияОЮрФизЛице.Свидетельство;
	КонецЕсли;
	
	Подвал.Параметры.ИмяРук = ОтветственныеЛица.РуководительПредставление;
	Подвал.Параметры.ИмяОрг = ИмяОрг;
	Подвал.Параметры.Свидетельство = Свидетельство;

КонецПроцедуры

Процедура ЗаполнитьСтрокуОтчета(СтрокаОтчета, СтрокаДанных, НаименованиеОрганизацииДляПечатныхФорм)
	
	ЗаполнитьЗначенияСвойств(СтрокаОтчета.Параметры, СтрокаДанных);
	
	Если НЕ ЗначениеЗаполнено(СтрокаДанных.КонтрагентИНН) 
		И НЕ ЗначениеЗаполнено(СтрокаДанных.КонтрагентКПП) Тогда
		СтрокаОтчета.Параметры.КонтрагентИННКПП = "";
	Иначе
		Если НЕ ЗначениеЗаполнено(СтрокаДанных.КонтрагентКПП) Тогда
			СтрокаОтчета.Параметры.КонтрагентИННКПП = СтрокаДанных.КонтрагентИНН;
		Иначе
			СтрокаОтчета.Параметры.КонтрагентИННКПП = СтрокаДанных.КонтрагентИНН + "/" + СтрокаДанных.КонтрагентКПП;
		КонецЕсли;
	КонецЕсли;
	
	Если СтрокаДанных.Контрагент = СтрокаДанных.Организация Тогда
		СтрокаОтчета.Параметры.КонтрагентНаименование = НаименованиеОрганизацииДляПечатныхФорм;
	КонецЕсли;
	
	СтрокаОтчета.Параметры.Валюта = "" + СтрокаДанных.НаименованиеВалюты + ", " + СтрокаДанных.КодВалюты;
	
	Если СтрокаДанных.СчетФактураБезНДС Тогда
		
		Если СтрокаДанных.КорректировочныйСчетФактура Тогда
			СтрокаОтчета.Параметры.СуммаНДСРазницаУменьшение = "без НДС";
			СтрокаОтчета.Параметры.СуммаНДСРазницаУвеличение = "без НДС";
		Иначе
			СтрокаОтчета.Параметры.СуммаНДС = "без НДС";
		КонецЕсли;
		
	КонецЕсли;
	
	// Выводим незаполненные значения в графах в соответствии с Постановлением 1137
	
	Если СтрокаДанных.СчетФактураНеВыставляется Тогда
		СтрокаОтчета.Параметры.ДатаПередачиПолучения = "";
	КонецЕсли;
	
	Если СтрокаДанных.КорректировочныйСчетФактура Тогда
		
		СтрокаОтчета.Параметры.СуммаДокумента = "";
		СтрокаОтчета.Параметры.СуммаНДС       = "";
		
	Иначе
		
		СтрокаОтчета.Параметры.НомерКорректировочногоСчетаФактуры = "";
		СтрокаОтчета.Параметры.ДатаКорректировочногоСчетаФактуры  = "";
		
		СтрокаОтчета.Параметры.СуммаПоСчетуФактуреРазницаУменьшение = "";
		СтрокаОтчета.Параметры.СуммаПоСчетуФактуреРазницаУвеличение = "";
		СтрокаОтчета.Параметры.СуммаНДСРазницаУменьшение = "";
		СтрокаОтчета.Параметры.СуммаНДСРазницаУвеличение = "";
		
	КонецЕсли;

КонецПроцедуры


#КонецЕсли