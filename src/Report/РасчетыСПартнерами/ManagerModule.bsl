#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда


///////////////////////////////////////////////////////////////////////////////
// ПРОГРАММНЫЙ ИНТЕРФЕЙС

// СтандартныеПодсистемы.ВариантыОтчетов

// Настройки вариантов этого отчета.
// Подробнее - см. ВариантыОтчетовПереопределяемый.НастроитьВариантыОтчетов.
//
Процедура НастроитьВариантыОтчета(Настройки, ОписаниеОтчета) Экспорт
	
	// Отключение контекстных вариантов
	ВариантыОтчетовУТПереопределяемый.ОтключитьВариантОтчета(Настройки, ОписаниеОтчета, "ПоКонтрагентамКонтекст");
	ВариантыОтчетовУТПереопределяемый.ОтключитьВариантОтчета(Настройки, ОписаниеОтчета, "ПоПартнерамКонтекст");
	ВариантыОтчетовУТПереопределяемый.ОтключитьВариантОтчета(Настройки, ОписаниеОтчета, "ПоСверкеВзаиморасчетовКонтекст");
	
	// Настройка размещения, видимости по умолчанию, важности
	ОписаниеВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, ОписаниеОтчета, "РасчетыСПартнерами");
	ВариантыОтчетовУТПереопределяемый.УстановитьВажностьВариантаОтчета(ОписаниеВарианта, "Важный");
	
КонецПроцедуры // НастроитьВариантыОтчета

// Методы расширения общей формы отчетов
//

// Вызывается в одноименном обработчике формы отчета после выполнения кода формы.
//
// Подробнее - см. ФормаОтчетаПереопределяемый.ПриСозданииНаСервере
//
Процедура ПриСозданииНаСервере(ЭтаФорма, Отказ, СтандартнаяОбработка) Экспорт
	Параметры = ЭтаФорма.Параметры;
	
	Если Параметры.Свойство("Отбор")
	 И Параметры.Отбор.Свойство("СверкаВзаиморасчетов") Тогда
	   
		Реквизиты = Документы.СверкаВзаиморасчетов.ПолучитьРеквизитыДокумента(Параметры.Отбор.СверкаВзаиморасчетов);
		Если Реквизиты <> Неопределено Тогда
			Если ЗначениеЗаполнено(Реквизиты.Организация) Тогда	
				Параметры.Отбор.Вставить("Организация", Реквизиты.Организация);
			КонецЕсли;
			Если ЗначениеЗаполнено(Реквизиты.Контрагент) Тогда	
				Параметры.Отбор.Вставить("Контрагент", Реквизиты.Контрагент);
			КонецЕсли;
			Параметры.Период.ДатаНачала = Реквизиты.НачалоПериода;
			Параметры.Период.ДатаОкончания = Реквизиты.КонецПериода;
			Параметры.Отбор.Вставить("Период", Параметры.Период);
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

// Вызывается в одноименном обработчике формы отчета после выполнения кода формы.
//
// Подробнее - см. ФормаОтчетаПереопределяемый.ПередЗагрузкойВариантаНаСервере
//
Процедура ПередЗагрузкойВариантаНаСервере(ЭтаФорма, НовыеНастройкиКД) Экспорт
	Отчет = ЭтаФорма.Отчет;
	КомпоновщикНастроек = Отчет.КомпоновщикНастроек;
	
	// Изменение настроек по функциональным опциям
	НастроитьПараметрыОтборыПоФункциональнымОпциям(КомпоновщикНастроек);
	
	// Установка значений по умолчанию
	НастроитьПараметрыОтборыПоУмолчанию(КомпоновщикНастроек);
	
	НовыеНастройкиКД = КомпоновщикНастроек.Настройки;
КонецПроцедуры

// Вызывается в одноименном обработчике формы отчета после выполнения кода формы.
//
// Подробнее - см. ФормаОтчетаПереопределяемый.ПередЗагрузкойПользовательскихНастроекНаСервере
//
Процедура ПередЗагрузкойПользовательскихНастроекНаСервере(ЭтаФорма, НовыеПользовательскиеНастройкиКД) Экспорт
	Отчет = ЭтаФорма.Отчет;
	КомпоновщикНастроек = Отчет.КомпоновщикНастроек;
	
	// Установка значений по умолчанию
	НастроитьПараметрыОтборыПоУмолчанию(КомпоновщикНастроек, Истина);
	
	НовыеПользовательскиеНастройкиКД = КомпоновщикНастроек.ПользовательскиеНастройки;
КонецПроцедуры


///////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

Процедура НастроитьПараметрыОтборыПоФункциональнымОпциям(КомпоновщикНастроек)
	
	Если ПолучитьФункциональнуюОпцию("ИспользоватьПартнеровКакКонтрагентов") Тогда
		ВариантыОтчетовУТПереопределяемый.УдалитьЭлементОтбораИзВсехНастроекОтчета(КомпоновщикНастроек, "Контрагент");
	КонецЕсли;
	
КонецПроцедуры

Процедура НастроитьПараметрыОтборыПоУмолчанию(КомпоновщикНастроек, ПользовательскиеНастройки = Ложь)
	ФиксНастройкаПериода = ФиксированнаяНастройкаПараметра(КомпоновщикНастроек, "Период");
	
	Если ФиксНастройкаПериода.Использование = Истина Тогда
		
		ПользНастройкаПериода = ПользовательскаяНастройкаПараметра(КомпоновщикНастроек, "Период");
		ПользНастройкаПериода.Использование = Истина;
		ПользНастройкаПериода.Значение.ДатаНачала = ФиксНастройкаПериода.Значение.ДатаНачала;
		ПользНастройкаПериода.Значение.ДатаОкончания = ФиксНастройкаПериода.Значение.ДатаОкончания;
		
		ФиксНастройкаПериода.Использование = Ложь;
		
	КонецЕсли;
КонецПроцедуры

Функция ФиксированнаяНастройкаПараметра(КомпоновщикНастроек, ИмяПараметра)

	ПараметрДанных = КомпоновщикНастроек.ФиксированныеНастройки.ПараметрыДанных.Элементы.Найти(ИмяПараметра);
	
	Возврат ПараметрДанных;

КонецФункции

Функция ПользовательскаяНастройкаПараметра(КомпоновщикНастроек, ИмяПараметра)

	ПараметрДанных = КомпоновщикНастроек.Настройки.ПараметрыДанных.Элементы.Найти(ИмяПараметра);
	Если ПараметрДанных <> Неопределено Тогда
		ПараметрПользовательскойНастройки = КомпоновщикНастроек.ПользовательскиеНастройки.Элементы.Найти(ПараметрДанных.ИдентификаторПользовательскойНастройки);
		Если ПараметрПользовательскойНастройки <> Неопределено Тогда
			Возврат ПараметрПользовательскойНастройки;
		Иначе
			Возврат ПараметрДанных;
		КонецЕсли;
	КонецЕсли;
	Возврат Неопределено;

КонецФункции

// Конец СтандартныеПодсистемы.ВариантыОтчетов
 
#КонецЕсли