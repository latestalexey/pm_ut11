#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда


////////////////////////////////////////////////////////////////////////////////
// ПРОГРАММНЫЙ ИНТЕРФЕЙС

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ

Процедура ПриКомпоновкеРезультата(ДокументРезультат, ДанныеРасшифровки, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ТабличныйДокументРезультат = СформироватьОтчет();
	ДокументРезультат.АвтоМасштаб = Истина;
	ДокументРезультат.Вывести(ТабличныйДокументРезультат);
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

Функция СформироватьОтчет()
	
	ТабличныйДокументРезультат = Новый ТабличныйДокумент;
	
	Запрос=Новый Запрос;
	ПроверятьМарку = Ложь;
	Если ВыбранныйВариант = "Присутствие марки в категориях" Тогда
		ПроверятьМарку = Истина;
		ТекстЗапросаКвоты = "ВЫБРАТЬ
		|	Номенклатура.ТоварнаяКатегория КАК ТоварнаяКатегория,
		|	Номенклатура.Марка КАК Марка
		|ПОМЕСТИТЬ втВсеКатегорииМарки
		|ИЗ
		|	Справочник.Номенклатура КАК Номенклатура
		|%УсловиеМаркаНоменклатура%
		|
		|СГРУППИРОВАТЬ ПО
		|	Номенклатура.ТоварнаяКатегория,
		|	Номенклатура.Марка
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	Квоты.ОбъектПланирования КАК ФорматМагазина,
		|	Квоты.ТоварнаяКатегория.Владелец КАК ВидНоменклатуры,
		|	Квоты.ТоварнаяКатегория КАК ТоварнаяКатегория,
		|	Квоты.Марка КАК Марка,
		|	Квоты.Квота КАК Квота,
		|	Квоты.ПроцентОтклонения КАК ПроцентОтклонения
		|ПОМЕСТИТЬ втТекущиеКвотыОбычные
		|ИЗ
		|	РегистрСведений.КвотыАссортимента.СрезПоследних(&Период, %УсловиеКвоты%
		|	) КАК Квоты
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ФорматыМагазинов КАК Форматы
		|		ПО Квоты.ОбъектПланирования = Форматы.Ссылка
		|			И (Квоты.Период В
		|				(ВЫБРАТЬ
		|					МАКСИМУМ(К.Период)
		|				ИЗ
		|					РегистрСведений.КвотыАссортимента КАК К
		|				ГДЕ
		|					К.Период <= &Период
		|					И К.ОбъектПланирования = Форматы.Ссылка))
		|
		|ОБЪЕДИНИТЬ
		|
		|ВЫБРАТЬ
		|	ФорматыМагазинов.Ссылка,
		|	втВсеКатегорииМарки.ТоварнаяКатегория.Владелец,
		|	втВсеКатегорииМарки.ТоварнаяКатегория,
		|	втВсеКатегорииМарки.Марка,
		|	0,
		|	0
		|ИЗ
		|	втВсеКатегорииМарки КАК втВсеКатегорииМарки
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ФорматыМагазинов КАК ФорматыМагазинов
		|		ПО НЕ ФорматыМагазинов.ЭтоГруппа
		|%УсловиеФорматы%
		|;
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ФорматыМагазинов.Ссылка КАК ФорматМагазина
		|ПОМЕСТИТЬ втВсеФорматы
		|ИЗ
		|	Справочник.ФорматыМагазинов КАК ФорматыМагазинов
		|ГДЕ
		|	НЕ ФорматыМагазинов.ЭтоГруппа
		|	%УсловиеФорматы%
		|
		|";
	Иначе
		ТекстЗапросаКвоты = "ВЫБРАТЬ
		|	Квоты.ОбъектПланирования КАК ФорматМагазина,
		|	Квоты.ТоварнаяКатегория.Владелец КАК ВидНоменклатуры,
		|	Квоты.ТоварнаяКатегория КАК ТоварнаяКатегория,
		|	Квоты.Марка КАК Марка,
		|	Квоты.Квота КАК Квота,
		|	Квоты.ПроцентОтклонения КАК ПроцентОтклонения
		|ПОМЕСТИТЬ втТекущиеКвотыОбычные
		|ИЗ
		|	РегистрСведений.КвотыАссортимента.СрезПоследних(&Период, %УсловиеКвоты%
		|	) КАК Квоты
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ФорматыМагазинов КАК Форматы
		|		ПО Квоты.ОбъектПланирования = Форматы.Ссылка
		|			И (Квоты.Период В
		|				(ВЫБРАТЬ
		|					МАКСИМУМ(К.Период)
		|				ИЗ
		|					РегистрСведений.КвотыАссортимента КАК К
		|				ГДЕ
		|					К.Период <= &Период
		|					И К.ОбъектПланирования = Форматы.Ссылка))
		|
		|;
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ТекущиеКвотыОбычные.ФорматМагазина КАК ФорматМагазина
		|ПОМЕСТИТЬ втВсеФорматы
		|ИЗ
		|	втТекущиеКвотыОбычные КАК ТекущиеКвотыОбычные
		|";
	КонецЕсли;
	
	ТекстЗапроса = ТекстЗапросаКвоты +"
	|;
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	втВсеФорматы.ФорматМагазина,
	|	втТекущиеКвотыОбычные.ВидНоменклатуры,
	|	втТекущиеКвотыОбычные.ТоварнаяКатегория,
	|	втТекущиеКвотыОбычные.Марка,
	|	втТекущиеКвотыОбычные.Квота,
	|	втТекущиеКвотыОбычные.ПроцентОтклонения
	|ПОМЕСТИТЬ втОбратныеКвоты
	|ИЗ
	|	втТекущиеКвотыОбычные КАК втТекущиеКвотыОбычные
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ втВсеФорматы КАК втВсеФорматы
	|		ПО (втВсеФорматы.ФорматМагазина <> втТекущиеКвотыОбычные.ФорматМагазина)
	|;
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	втТекущиеКвотыОбычные.ФорматМагазина,
	|	втТекущиеКвотыОбычные.ВидНоменклатуры,
	|	втТекущиеКвотыОбычные.ТоварнаяКатегория,
	|	втТекущиеКвотыОбычные.Марка,
	|	втТекущиеКвотыОбычные.Квота,
	|	втТекущиеКвотыОбычные.ПроцентОтклонения
	|ПОМЕСТИТЬ
	|	втТекущиеКвоты
	|ИЗ
	|	втТекущиеКвотыОбычные КАК втТекущиеКвотыОбычные

	|ОБЪЕДИНИТЬ ВСЕ

	|ВЫБРАТЬ
	|	втОбратныеКвоты.ФорматМагазина,
	|	втОбратныеКвоты.ВидНоменклатуры,
	|	втОбратныеКвоты.ТоварнаяКатегория,
	|	втОбратныеКвоты.Марка,
	|	0,
	|	0
	|ИЗ
	|	втОбратныеКвоты КАК втОбратныеКвоты
	|		ЛЕВОЕ СОЕДИНЕНИЕ втТекущиеКвотыОбычные КАК втТекущиеКвотыОбычные
	|		ПО (втТекущиеКвотыОбычные.ТоварнаяКатегория = втОбратныеКвоты.ТоварнаяКатегория)
	|			И (втТекущиеКвотыОбычные.Марка = втОбратныеКвоты.Марка)
	|			И (втТекущиеКвотыОбычные.ФорматМагазина = втОбратныеКвоты.ФорматМагазина)
	|ГДЕ
	|	втТекущиеКвотыОбычные.ФорматМагазина ЕСТЬ NULL
	|;
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Квоты.ВидНоменклатуры КАК ВидНоменклатуры,
	|	Квоты.ТоварнаяКатегория КАК ТоварнаяКатегория,
	|	Квоты.ФорматМагазина КАК ФорматМагазина,
	|	СУММА(Квоты.Квота) КАК Квота,
	|	СРЕДНЕЕ(Квоты.ПроцентОтклонения) КАК ПроцентОтклонения
	|ПОМЕСТИТЬ втТекущиеКвотыФорматВидКатегория
	|ИЗ
	|	втТекущиеКвоты КАК Квоты
	|
	|СГРУППИРОВАТЬ ПО
	|	Квоты.ВидНоменклатуры,
	|	Квоты.ТоварнаяКатегория,
	|	Квоты.ФорматМагазина
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Квоты.ВидНоменклатуры КАК ВидНоменклатуры,
	|	Квоты.ФорматМагазина КАК ФорматМагазина,
	|	СУММА(Квоты.Квота) КАК Квота,
	|	СРЕДНЕЕ(Квоты.ПроцентОтклонения) КАК ПроцентОтклонения
	|ПОМЕСТИТЬ втТекущиеКвотыФорматВид
	|ИЗ
	|	втТекущиеКвотыФорматВидКатегория КАК Квоты
	|
	|СГРУППИРОВАТЬ ПО
	|	Квоты.ВидНоменклатуры,
	|	Квоты.ФорматМагазина
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Квоты.ФорматМагазина КАК ФорматМагазина,
	|	СУММА(Квоты.Квота) КАК Квота,
	|	СРЕДНЕЕ(Квоты.ПроцентОтклонения) КАК ПроцентОтклонения
	|ПОМЕСТИТЬ втТекущиеКвотыФормат
	|ИЗ
	|	втТекущиеКвотыФорматВид КАК Квоты
	|
	|СГРУППИРОВАТЬ ПО
	|	Квоты.ФорматМагазина
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	т.ФорматМагазина КАК ФорматМагазина,
	|	т.ФорматМагазина.Наименование КАК НаименованиеФорматМагазина
	|
	|ИЗ
	|	втВсеФорматы КАК т
	|УПОРЯДОЧИТЬ ПО
	|	НаименованиеФорматМагазина
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Подзапрос.ВидНоменклатуры,
	|	Подзапрос.ТоварнаяКатегория,
	|	Подзапрос.Марка,
	|	Подзапрос.ВидНоменклатуры.Наименование КАК НаименованиеВидНоменклатуры,
	|	Подзапрос.ТоварнаяКатегория.Наименование КАК НаименованиеТоварнаяКатегория,
	|	ЕСТЬNULL(Подзапрос.Марка.Наименование, ""Прочие марки"") КАК НаименованиеМарка,
	|	Подзапрос.ФорматМагазина,
	|	Подзапрос.ФорматМагазина.Наименование КАК НаименованиеФорматМагазина,
	|	Подзапрос.НомерГруппировки,
	|	Подзапрос.ВспомогательныйНомерГруппировки,
	|	Подзапрос.Квота,
	|	Подзапрос.ПроцентОтклонения
	|ИЗ
	|	(ВЫБРАТЬ
	|		Квоты.ФорматМагазина КАК ФорматМагазина,
	|		Квоты.ВидНоменклатуры КАК ВидНоменклатуры,
	|		Квоты.ТоварнаяКатегория КАК ТоварнаяКатегория,
	|		Квоты.Марка КАК Марка,
	|		СУММА(Квоты.Квота) КАК Квота,
	|		ВЫРАЗИТЬ(СРЕДНЕЕ(Квоты.ПроцентОтклонения) КАК ЧИСЛО(15, 2)) КАК ПроцентОтклонения,
	|		3 КАК НомерГруппировки,
	|		0 КАК ВспомогательныйНомерГруппировки
	|	ИЗ
	|		втТекущиеКвоты КАК Квоты
	|	
	|	СГРУППИРОВАТЬ ПО
	|		Квоты.ФорматМагазина,
	|		Квоты.ВидНоменклатуры,
	|		Квоты.ТоварнаяКатегория,
	|		Квоты.Марка
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		Квоты.ФорматМагазина,
	|		Квоты.ВидНоменклатуры,
	|		Квоты.ТоварнаяКатегория,
	|		NULL,
	|		СУММА(Квоты.Квота),
	|		ВЫРАЗИТЬ(СРЕДНЕЕ(Квоты.ПроцентОтклонения) КАК ЧИСЛО(15, 2)),
	|		2,
	|		0
	|	ИЗ
	|		втТекущиеКвотыФорматВидКатегория КАК Квоты
	|	
	|	СГРУППИРОВАТЬ ПО
	|		Квоты.ФорматМагазина,
	|		Квоты.ВидНоменклатуры,
	|		Квоты.ТоварнаяКатегория
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		Квоты.ФорматМагазина,
	|		Квоты.ВидНоменклатуры,
	|		NULL,
	|		NULL,
	|		СУММА(Квоты.Квота),
	|		ВЫРАЗИТЬ(СРЕДНЕЕ(Квоты.ПроцентОтклонения) КАК ЧИСЛО(15, 2)),
	|		1,
	|		0
	|	ИЗ
	|		втТекущиеКвотыФорматВид КАК Квоты
	|	
	|	СГРУППИРОВАТЬ ПО
	|		Квоты.ФорматМагазина,
	|		Квоты.ВидНоменклатуры
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		Квоты.ФорматМагазина,
	|		NULL,
	|		NULL,
	|		NULL,
	|		СУММА(Квоты.Квота),
	|		ВЫРАЗИТЬ(СРЕДНЕЕ(Квоты.ПроцентОтклонения) КАК ЧИСЛО(15, 2)),
	|		4,
	|		1
	|	ИЗ
	|		втТекущиеКвотыФормат КАК Квоты
	|	
	|	СГРУППИРОВАТЬ ПО
	|		Квоты.ФорматМагазина) КАК Подзапрос
	|УПОРЯДОЧИТЬ ПО
	|	ВспомогательныйНомерГруппировки,
	|	ВидНоменклатуры.Родитель.Родитель.Наименование,
	|	ВидНоменклатуры.Родитель.Родитель,
	|	ВидНоменклатуры.Родитель.Наименование,
	|	ВидНоменклатуры.Родитель,
	|	НаименованиеВидНоменклатуры,
	|	ВидНоменклатуры,
	|	ТоварнаяКатегория.Родитель.Родитель.Наименование,
	|	ТоварнаяКатегория.Родитель.Родитель,
	|	ТоварнаяКатегория.Родитель.Наименование,
	|	ТоварнаяКатегория.Родитель,
	|	НаименованиеТоварнаяКатегория,
	|	ТоварнаяКатегория,
	|	НомерГруппировки,
	|	НаименованиеМарка,
	|	Марка,
	|	НаименованиеФорматМагазина,
	|	ФорматМагазина
	|";
	
	ЭлементПараметров = Неопределено;
	ПараметрПериод = "";
	Для Каждого ЭлементНастроек ИЗ КомпоновщикНастроек.ПользовательскиеНастройки.Элементы Цикл
		Если ТипЗнч(ЭлементНастроек) = Тип("ЗначениеПараметраНастроекКомпоновкиДанных") Тогда
			Если СокрЛП(ЭлементНастроек.Параметр) = "Период" Тогда
				ЭлементПараметров = ЭлементНастроек;
				Прервать;
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	Если ЭлементПараметров <> Неопределено Тогда
		Если ЭлементПараметров.Использование Тогда
			Если ТипЗнч(ЭлементПараметров.Значение) = Тип("Дата") Тогда
				ПараметрПериод = ЭлементПараметров.Значение;
			Иначе
				ПараметрПериод = ЭлементПараметров.Значение.Дата;
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	Если НЕ ЗначениеЗаполнено(ПараметрПериод) Тогда
		СтрокаСообщения = НСтр("ru='Не установлено значение параметра ""Дата отчета"".'");
		ВызватьИсключение СтрокаСообщения;
	КонецЕсли;
	Запрос.Параметры.Вставить(СокрЛП(ЭлементПараметров.Параметр),ПараметрПериод);
	
	ВесьОтбор = Неопределено;
	ЭлементыОтбора = Новый Массив;
	Для Каждого ЭлементНастроек ИЗ КомпоновщикНастроек.ПользовательскиеНастройки.Элементы Цикл
		Если ТипЗнч(ЭлементНастроек) = Тип("ОтборКомпоновкиДанных") Тогда
			ВесьОтбор = ЭлементНастроек;
		ИначеЕсли ТипЗнч(ЭлементНастроек) = Тип("ЭлементОтбораКомпоновкиДанных") Тогда
			Если ЭлементНастроек.Использование Тогда
				ЭлементыОтбора.Добавить(ЭлементНастроек);
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	Если ВесьОтбор <> Неопределено Тогда
		Для Каждого ЭлементВсегоОтбора ИЗ ВесьОтбор.Элементы Цикл
			Если ЭлементВсегоОтбора.Использование Тогда
				Если ЭлементыОтбора.Найти(ЭлементВсегоОтбора) = Неопределено Тогда
					ЭлементыОтбора.Добавить(ЭлементВсегоОтбора);
				КонецЕсли;
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	ДобавитьУсловияИПараметры(Запрос, ТекстЗапроса, ЭлементыОтбора);
	
	СоответствиеПоказателей=Новый Соответствие;
	СоответствиеПоказателей.Вставить("Квота","Квота");
	СоответствиеПоказателей.Вставить("ПроцентОтклонения","ПроцентОтклонения");
	
	СоответствиеПоказателей0=Новый Соответствие;
	СоответствиеПоказателей0.Вставить("Квота","КвотаОбщие");
	СоответствиеПоказателей0.Вставить("ПроцентОтклонения","ПроцентОтклоненияОбщие");
	
	Макет=ПолучитьМакет("Макет");
	ОбластьЗаголовок=Макет.ПолучитьОбласть("Заголовок");
	ОбластьЗаголовок.Параметры.ЗаголовокОтчета = ВыбранныйВариант;
	ТабличныйДокументРезультат.Вывести(ОбластьЗаголовок);
	
	ТабличныйДокументРезультат.НачатьАвтогруппировкуСтрок();
	ОбластьПараметрыОтчета=Макет.ПолучитьОбласть("ПараметрыОтчета");
	ТекстПараметров= НСтр("ru = 'Дата отчета: " + ПараметрПериод+"'");
	ОбластьПараметрыОтчета.Параметры.ПараметрыОтчета=ТекстПараметров;
	ТабличныйДокументРезультат.Вывести(ОбластьПараметрыОтчета,1);
	
	ЕстьОтборПоМарке = Ложь;
	Если ЭлементыОтбора.Количество() > 0 Тогда
		ПредставлениеОтбора = "";
		Для Каждого ЭлементОтбора ИЗ ЭлементыОтбора Цикл
			ЛевоеЗначение = СокрЛП(ЭлементОтбора.ЛевоеЗначение);
			Если ПустаяСтрока(ЛевоеЗначение) Тогда
				Для Каждого ЭлементБазовый ИЗ КомпоновщикНастроек.Настройки.Отбор.Элементы Цикл
					Если ЭлементБазовый.ИдентификаторПользовательскойНастройки = ЭлементОтбора.ИдентификаторПользовательскойНастройки Тогда
						ЛевоеЗначение = СокрЛП(ЭлементБазовый.ПредставлениеПользовательскойНастройки);
						Прервать;
					КонецЕсли;
				КонецЦикла;
			КонецЕсли;
			ПравоеЗначение = СокрЛП(ЭлементОтбора.ПравоеЗначение);
			ТекущийВидСравнения = СокрЛП(ЭлементОтбора.ВидСравнения);
			Если ЭлементОтбора.ВидСравнения = ВидСравненияКомпоновкиДанных.Заполнено
				ИЛИ ЭлементОтбора.ВидСравнения = ВидСравненияКомпоновкиДанных.НеЗаполнено Тогда
				
				СтрокаСообщения = НСтр("ru='Вид сравнения ""%1"" не может быть использован в данном варианте отчета.'");
				СтрокаСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(СтрокаСообщения, ТекущийВидСравнения);
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю(СтрокаСообщения, , , , Истина);
				Возврат ТабличныйДокументРезультат;
				
			КонецЕсли;
			ПредставлениеОтбора = ПредставлениеОтбора + ЛевоеЗначение + " " + ТекущийВидСравнения + " """ + ПравоеЗначение + """" + Символы.ПС;
			Если ПроверятьМарку И Найти(ЛевоеЗначение, "Марка") > 0 Тогда
				ЕстьОтборПоМарке = Истина;
			КонецЕсли;
		КонецЦикла;
		ОбластьОтборыОтчета=Макет.ПолучитьОбласть("ОтборыОтчета");
		ОбластьОтборыОтчета.Параметры.ОтборыОтчета = ПредставлениеОтбора;
		ТабличныйДокументРезультат.Вывести(ОбластьОтборыОтчета,1);
	КонецЕсли;
	Если ПроверятьМарку И НЕ ЕстьОтборПоМарке Тогда
		СтрокаСообщения = НСтр("ru='Не задано значение параметра ""Марка"".'");
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(СтрокаСообщения, , , , Истина);
		Возврат ТабличныйДокументРезультат;
	КонецЕсли;
	
	Запрос.Текст=ТекстЗапроса;
	Результат=Запрос.ВыполнитьПакет();
	ИндексПоследнего = Результат.Количество()-1;
	
	РезультатФорматы = Результат[ИндексПоследнего-1];
	Если РезультатФорматы.Пустой() Тогда
		Возврат ТабличныйДокументРезультат;
	КонецЕсли;
	ОбластьШапка=Макет.ПолучитьОбласть("Шапка|Группировки");
	ОбластьШапка.Параметры.ЗаголовокГруппировок = НСтр("ru = 'Вид номенклатуры / Товарная категория / Марка'");
	ТабличныйДокументРезультат.Вывести(ОбластьШапка,0);
	ОбластьШапкаПоказатели=Макет.ПолучитьОбласть("Шапка|Показатели");
	ВыборкаФорматы = РезультатФорматы.Выбрать();
	Пока ВыборкаФорматы.Следующий() Цикл
		ОбластьШапкаПоказатели.Параметры.ЗаголовокПоказателей = ВыборкаФорматы.НаименованиеФорматМагазина;
		ОбластьШапкаПоказатели.Параметры.РасшифровкаЗаголовка = ВыборкаФорматы.ФорматМагазина;
		ТабличныйДокументРезультат.Присоединить(ОбластьШапкаПоказатели);
	КонецЦикла;
	
	ОбластьВидГруппировки = Макет.ПолучитьОбласть("ОбластьУровень1|Группировки");
	ОбластьВидПоказатели = Макет.ПолучитьОбласть("ОбластьУровень1|Показатели");
	ОбластьКатегорияГруппировки = Макет.ПолучитьОбласть("ОбластьУровень2|Группировки");
	ОбластьКатегорияПоказатели = Макет.ПолучитьОбласть("ОбластьУровень2|Показатели");
	ОбластьМаркаГруппировки = Макет.ПолучитьОбласть("ОбластьУровень3|Группировки");
	ОбластьМаркаПоказатели = Макет.ПолучитьОбласть("ОбластьУровень3|Показатели");
	ОбластьИтогоГруппировки = Макет.ПолучитьОбласть("Итого|Группировки");
	ОбластьИтогоПоказатели = Макет.ПолучитьОбласть("Итого|Показатели");
	
	Выборка=Результат[ИндексПоследнего].Выбрать();
	
	ПредыдущаяГруппировка = 0;
	ПредыдущаяМарка = "";
	
	Пока Выборка.Следующий() Цикл
		
		НачинатьНовуюСтроку = Истина;
		Если ПредыдущаяГруппировка = Выборка.НомерГруппировки Тогда
			Если Выборка.НомерГруппировки = 3 Тогда
				Если ПредыдущаяМарка = Выборка.Марка Тогда
					НачинатьНовуюСтроку = Ложь;
				КонецЕсли;
			Иначе
				НачинатьНовуюСтроку = Ложь;
			КонецЕсли;
		КонецЕсли;
		ПредыдущаяГруппировка = Выборка.НомерГруппировки;
		
		Если Выборка.НомерГруппировки = 1 Тогда
			
			ЗаполнитьПараметрыИВывестиОбласть(ТабличныйДокументРезультат,
											  "ВидНоменклатуры",
											  ОбластьВидГруппировки,
											  ОбластьВидПоказатели,
											  Выборка,
											  НачинатьНовуюСтроку);
			
		ИначеЕсли Выборка.НомерГруппировки = 2 Тогда
			
			ЗаполнитьПараметрыИВывестиОбласть(ТабличныйДокументРезультат,
											  "ТоварнаяКатегория",
											  ОбластьКатегорияГруппировки,
											  ОбластьКатегорияПоказатели,
											  Выборка,
											  НачинатьНовуюСтроку);
			
		ИначеЕсли Выборка.НомерГруппировки = 3 Тогда
			
			ПредыдущаяМарка = Выборка.Марка;
			Если Выборка.НаименованиеМарка <> "Прочие марки" Тогда
				ЗаполнитьПараметрыИВывестиОбласть(ТабличныйДокументРезультат,
												  "Марка",
												  ОбластьМаркаГруппировки,
												  ОбластьМаркаПоказатели,
												  Выборка,
												  НачинатьНовуюСтроку);
			КонецЕсли;
			
		ИначеЕсли Выборка.НомерГруппировки = 4 Тогда
			
			ЗаполнитьПараметрыИВывестиОбласть(ТабличныйДокументРезультат,
											  "",
											  ОбластьИтогоГруппировки,
											  ОбластьИтогоПоказатели,
											  Выборка,
											  НачинатьНовуюСтроку);
			
		КонецЕсли;
		
	КонецЦикла;
	ТабличныйДокументРезультат.ЗакончитьАвтогруппировкуСтрок();

	Возврат ТабличныйДокументРезультат;
КонецФункции

Процедура ЗаполнитьПараметрыИВывестиОбласть(ТабличныйДокументРезультат,
	ИмяГруппировки,
	ОбластьГруппировки,
	ОбластьПоказатели,
	Выборка,
	НачинатьНовуюСтроку)
	
	УровеньГруппировки = Выборка.НомерГруппировки;
	ОбластьПоказатели.Параметры.Заполнить(Выборка);
	Если НачинатьНовуюСтроку Тогда 
		Если НЕ ПустаяСтрока(ИмяГруппировки) Тогда
			ОбластьГруппировки.Параметры.ПредставлениеГруппировки = Выборка["Наименование"+ИмяГруппировки];
			ОбластьГруппировки.Параметры.ЗначениеГруппировки = Выборка[ИмяГруппировки];
		КонецЕсли;
		ТабличныйДокументРезультат.Вывести(ОбластьГруппировки, УровеньГруппировки);
		ТабличныйДокументРезультат.Присоединить(ОбластьПоказатели);
	Иначе
		ТабличныйДокументРезультат.Присоединить(ОбластьПоказатели);
	КонецЕсли;
	
КонецПроцедуры

Процедура ДобавитьУсловияИПараметры(Запрос, ТекстЗапроса, ЭлементыОтбора)
	ТекстУсловия = "";
	
	СчетчикУсловий = 0;
	СчетчикПараметров = 0;
	
	// %УсловиеКвоты%
	СоответствиеПолейУсловия = Новый Соответствие;
	СоответствиеПолейУсловия.Вставить("ФорматМагазина", "ОбъектПланирования");
	СоответствиеПолейУсловия.Вставить("ВидНоменклатуры", "ТоварнаяКатегория.Владелец");
	СоответствиеПолейУсловия.Вставить("ТоварнаяКатегория", "ТоварнаяКатегория");
	СоответствиеПолейУсловия.Вставить("Марка", "Марка");
	ТекстНачальногоУсловия = "";
	УсловиеГруппы = "";
	ТекстУсловия = "";
	СформироватьТекстУсловия(Запрос,
							 ЭлементыОтбора,
							 ТекстУсловия,
							 СчетчикУсловий,
							 СчетчикПараметров,
							 ТекстНачальногоУсловия,
							 УсловиеГруппы,
							 СоответствиеПолейУсловия);
	ТекстЗапроса=СтрЗаменить(ТекстЗапроса,"%УсловиеКвоты%", СокрЛП(ТекстУсловия));
	
	// %УсловиеМаркаНоменклатура%
	СчетчикУсловий = 0;
	СоответствиеПолейУсловия = Новый Соответствие;
	СоответствиеПолейУсловия.Вставить("ВидНоменклатуры", "ВидНоменклатуры");
	СоответствиеПолейУсловия.Вставить("ТоварнаяКатегория", "ТоварнаяКатегория");
	СоответствиеПолейУсловия.Вставить("Марка", "Марка");
	ТекстНачальногоУсловия = "ГДЕ";
	УсловиеГруппы = "";
	ТекстУсловия = "";
	СформироватьТекстУсловия(Запрос,
							 ЭлементыОтбора,
							 ТекстУсловия,
							 СчетчикУсловий,
							 СчетчикПараметров,
							 ТекстНачальногоУсловия,
							 УсловиеГруппы,
							 СоответствиеПолейУсловия);
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса,"%УсловиеМаркаНоменклатура%", СокрЛП(ТекстУсловия));
	
	// %УсловиеФорматы%
	СчетчикУсловий = 0;
	СоответствиеПолейУсловия = Новый Соответствие;
	СоответствиеПолейУсловия.Вставить("ФорматМагазина", "ФорматыМагазинов.Ссылка");
	СоответствиеПолейУсловия.Вставить("ФорматМагазина.", "ФорматыМагазинов.");
	ТекстНачальногоУсловия = "И";
	УсловиеГруппы = "";
	ТекстУсловия = "";
	СформироватьТекстУсловия(Запрос,
							 ЭлементыОтбора,
							 ТекстУсловия,
							 СчетчикУсловий,
							 СчетчикПараметров,
							 ТекстНачальногоУсловия,
							 УсловиеГруппы,
							 СоответствиеПолейУсловия);
	ТекстЗапроса=СтрЗаменить(ТекстЗапроса,"%УсловиеФорматы%", СокрЛП(ТекстУсловия));
	
КонецПроцедуры

Процедура СформироватьТекстУсловия(Запрос,
	ЭлементыОтбора,
	ТекстУсловия,
	СчетчикУсловий,
	СчетчикПараметров,
	ТекстНачальногоУсловия,
	УсловиеГруппы,
	СоответствиеПолейУсловия)
	
	СчетчикВнутренний = 0;
	Если ПустаяСтрока(УсловиеГруппы) Тогда
		УсловиеГруппы = "И";
		СчетчикВнутренний = 1;
	КонецЕсли;
	Для Каждого ЭлементОтбора ИЗ ЭлементыОтбора Цикл
		Если НЕ ЭлементОтбора.Использование Тогда
			Продолжить;
		КонецЕсли;
		Если ТипЗнч(ЭлементОтбора) = Тип("ГруппаЭлементовОтбораКомпоновкиДанных") Тогда
			
			Если ЭлементОтбора.ТипГруппы = ТипГруппыЭлементовОтбораКомпоновкиДанных.ГруппаИ Тогда
				УсловиеГруппы2 = "И";
				НачалоГруппы = "(";
			ИначеЕсли ЭлементОтбора.ТипГруппы = ТипГруппыЭлементовОтбораКомпоновкиДанных.ГруппаНе Тогда
				УсловиеГруппы2 = "И";
				НачалоГруппы = "НЕ (";
			ИначеЕсли ЭлементОтбора.ТипГруппы = ТипГруппыЭлементовОтбораКомпоновкиДанных.ГруппаИли Тогда
				УсловиеГруппы2 = "ИЛИ";
				НачалоГруппы = "(";
			КонецЕсли;
			ТекстУсловияВложенный = "";
			СчетчикУсловийДоВложенного = СчетчикУсловий;
			СформироватьТекстУсловия(Запрос,
									 ЭлементОтбора.Элементы,
									 ТекстУсловияВложенный,
									 СчетчикУсловий,
									 СчетчикПараметров,
									 "",
									 УсловиеГруппы2,
									 СоответствиеПолейУсловия);
			Если НЕ ПустаяСтрока(ТекстУсловияВложенный) Тогда
				Если СчетчикУсловийДоВложенного = 0 Тогда
					ТекстУсловия = ТекстУсловия + ТекстНачальногоУсловия + НачалоГруппы;
				Иначе
					ТекстУсловия = ТекстУсловия + УсловиеГруппы+ " " + НачалоГруппы;
				КонецЕсли;
				ТекстУсловия = ТекстУсловия + ТекстУсловияВложенный + ")" + Символы.ПС;
			КонецЕсли;
		ИначеЕсли ТипЗнч(ЭлементОтбора) = Тип("ЭлементОтбораКомпоновкиДанных") Тогда
			ПутьКДанным = СокрЛП(ЭлементОтбора.ЛевоеЗначение);
			Если ПустаяСтрока(ПутьКДанным) Тогда
				Для Каждого ЭлементБазовый ИЗ КомпоновщикНастроек.Настройки.Отбор.Элементы Цикл
					Если ЭлементБазовый.ИдентификаторПользовательскойНастройки = ЭлементОтбора.ИдентификаторПользовательскойНастройки Тогда
						ПутьКДанным = СокрЛП(ЭлементБазовый.ЛевоеЗначение);
						Прервать;
					КонецЕсли;
				КонецЦикла;
			КонецЕсли;
			
			ПоложениеПервойТочки = Найти(ПутьКДанным,".");
			Если ПоложениеПервойТочки = 0 Тогда
				ПутьДляПоиска = ПутьКДанным;
				ОкончаниеПути = "";
				НовоеНачалоПути = СоответствиеПолейУсловия.Получить(ПутьДляПоиска);
			Иначе
				ПутьДляПоиска = Лев(ПутьКДанным, ПоложениеПервойТочки);
				НовоеНачалоПути = СоответствиеПолейУсловия.Получить(ПутьДляПоиска);
				Если НовоеНачалоПути = Неопределено Тогда
					ПутьДляПоиска = Лев(ПутьКДанным, ПоложениеПервойТочки-1);
					НовоеНачалоПути = СоответствиеПолейУсловия.Получить(ПутьДляПоиска);
					ДлинаПути = СтрДлина(ПутьКДанным);
					ОкончаниеПути = Прав(ПутьКДанным, ДлинаПути-ПоложениеПервойТочки+1);
				Иначе
					ДлинаПути = СтрДлина(ПутьКДанным);
					ОкончаниеПути = Прав(ПутьКДанным, ДлинаПути-ПоложениеПервойТочки);
				КонецЕсли;
			КонецЕсли;
			Если НовоеНачалоПути = Неопределено Тогда
				Продолжить;
			Иначе
				ПутьКДанным = НовоеНачалоПути + ОкончаниеПути;
			КонецЕсли;
			ИмяПараметра = СтрЗаменить(ПутьКДанным, ".", "")+Формат(СчетчикПараметров, "ЧН=0; ЧГ=0");
			ТекстУсловияВнутренний = "";
			УсловиеПодобно = Ложь;
			Если ЭлементОтбора.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно Тогда
				ТекстУсловияВнутренний = ""+ПутьКДанным+" = &"+ИмяПараметра;
			ИначеЕсли ЭлементОтбора.ВидСравнения = ВидСравненияКомпоновкиДанных.НеРавно Тогда
				ТекстУсловияВнутренний = ""+ПутьКДанным+" <> &"+ИмяПараметра;
			ИначеЕсли ЭлементОтбора.ВидСравнения = ВидСравненияКомпоновкиДанных.Больше Тогда
				ТекстУсловияВнутренний = ""+ПутьКДанным+" > &"+ИмяПараметра;
			ИначеЕсли ЭлементОтбора.ВидСравнения = ВидСравненияКомпоновкиДанных.БольшеИлиРавно Тогда
				ТекстУсловияВнутренний = ""+ПутьКДанным+" >= &"+ИмяПараметра;
			ИначеЕсли ЭлементОтбора.ВидСравнения = ВидСравненияКомпоновкиДанных.Меньше Тогда
				ТекстУсловияВнутренний = ""+ПутьКДанным+" < &"+ИмяПараметра;
			ИначеЕсли ЭлементОтбора.ВидСравнения = ВидСравненияКомпоновкиДанных.МеньшеИлиРавно Тогда
				ТекстУсловияВнутренний = ""+ПутьКДанным+" <= &"+ИмяПараметра;
			ИначеЕсли ЭлементОтбора.ВидСравнения = ВидСравненияКомпоновкиДанных.Содержит Тогда
				ТекстУсловияВнутренний = ""+ПутьКДанным+" ПОДОБНО &"+ИмяПараметра;
				УсловиеПодобно = Истина;
			ИначеЕсли ЭлементОтбора.ВидСравнения = ВидСравненияКомпоновкиДанных.ВСписке Тогда
				ТекстУсловияВнутренний = ""+ПутьКДанным+" В (&"+ИмяПараметра+")";
			ИначеЕсли ЭлементОтбора.ВидСравнения = ВидСравненияКомпоновкиДанных.ВИерархии
				ИЛИ ЭлементОтбора.ВидСравнения = ВидСравненияКомпоновкиДанных.ВСпискеПоИерархии Тогда
				ТекстУсловияВнутренний = ""+ПутьКДанным+" В ИЕРАРХИИ(&"+ИмяПараметра+")";
			ИначеЕсли ЭлементОтбора.ВидСравнения = ВидСравненияКомпоновкиДанных.НеВСписке Тогда
				ТекстУсловияВнутренний = "НЕ "+ПутьКДанным+" В (&"+ИмяПараметра+")";
			ИначеЕсли ЭлементОтбора.ВидСравнения = ВидСравненияКомпоновкиДанных.НеВИерархии
				ИЛИ ЭлементОтбора.ВидСравнения = ВидСравненияКомпоновкиДанных.НеВСпискеПоИерархии Тогда
				ТекстУсловияВнутренний = "НЕ "+ПутьКДанным+" В ИЕРАРХИИ(&"+ИмяПараметра+")";
			ИначеЕсли ЭлементОтбора.ВидСравнения = ВидСравненияКомпоновкиДанных.Содержит Тогда
				ТекстУсловияВнутренний = "НЕ "+ПутьКДанным+" ПОДОБНО &"+ИмяПараметра;
				УсловиеПодобно = Истина;
			КонецЕсли;
			Если УсловиеПодобно Тогда
				Запрос.УстановитьПараметр(ИмяПараметра, "%"+ЭлементОтбора.ПравоеЗначение+"%");
			Иначе
				Запрос.УстановитьПараметр(ИмяПараметра, ЭлементОтбора.ПравоеЗначение);
			КонецЕсли;
			
			Если СчетчикВнутренний = 0 Тогда
				//Группа условий
				ТекстУсловия = ТекстУсловия + "" + ТекстНачальногоУсловия + "	(" + ТекстУсловияВнутренний + ")"  + Символы.ПС;
			Иначе
				Если СчетчикУсловий = 0 Тогда
					ТекстУсловия = ТекстУсловия + "" + ТекстНачальногоУсловия + "	(" + ТекстУсловияВнутренний + ")"  + Символы.ПС;
				Иначе
					ТекстУсловия = ТекстУсловия + "	"+УсловиеГруппы+" (" + ТекстУсловияВнутренний + ")" + Символы.ПС;
				КонецЕсли;
			КонецЕсли;
			СчетчикУсловий = СчетчикУсловий + 1;
			СчетчикПараметров = СчетчикПараметров + 1;
			СчетчикВнутренний = СчетчикВнутренний + 1;
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры


#КонецЕсли