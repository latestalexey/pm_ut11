Процедура СформироватьОтчет(Знач ПараметрыОтчета, АдресХранилища) Экспорт

	Если ЗначениеЗаполнено(ПараметрыОтчета.КонтрагентДляОтбора)
		ИЛИ ПараметрыОтчета.ВыводитьПокупателейПоАвансам
		ИЛИ ПараметрыОтчета.ГруппироватьПоКонтрагентам Тогда
		СтандартнаяФорма = Ложь;
	Иначе
		СтандартнаяФорма = Истина;
	КонецЕсли;

	ПараметрыОтчета.СписокСформированныхЛистов.Очистить();
	СписокСообщений = Новый СписокЗначений();
	
	Если Не ПараметрыОтчета.ВключатьОбособленныеПодразделения Тогда
		СписокОрганизаций = Новый СписокЗначений;
		СписокОрганизаций.Добавить(ПараметрыОтчета.Организация);
	Иначе
		СписокОрганизаций = ОбщегоНазначенияБПВызовСервераПовтИсп.ПолучитьСписокОбособленныхПодразделений(ПараметрыОтчета.Организация);
	КонецЕсли;

	Если Не ПараметрыОтчета.ВыводитьТолькоДопЛисты Тогда
		СформироватьОсновнойРаздел(СписокОрганизаций, ПараметрыОтчета, СтандартнаяФорма);
	КонецЕсли;
	
	СформироватьДополнительныеЛисты(СписокОрганизаций, ПараметрыОтчета, СтандартнаяФорма, СписокСообщений);

	Результат = Новый Структура("СписокСформированныхЛистов, СписокСообщений", ПараметрыОтчета.СписокСформированныхЛистов,
		СписокСообщений);
	
	ПоместитьВоВременноеХранилище(Результат, АдресХранилища);
	
КонецПроцедуры

Процедура СформироватьОсновнойРаздел(СписокОрганизаций, ПараметрыОтчета, СтандартнаяФорма)
	
	ТабличныйДокумент = Новый ТабличныйДокумент;
	ТабличныйДокумент.ОриентацияСтраницы = ОриентацияСтраницы.Ландшафт;
	ТабличныйДокумент.АвтоМасштаб = Истина;
	ТабличныйДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_КнигаПокупок";
	
	
	СписокСчетовФактур = Неопределено;
	Результат = ПолучитьЗаписиКнигиПокупок(СписокОрганизаций, ПараметрыОтчета, СписокСчетовФактур, СтандартнаяФорма);
	
	Макет = ПолучитьМакет("КнигаПокупок");
	
	/////////////////////////////////////////////////////////////////////////
	// Вывод шапки книги покупок
	Если СтандартнаяФорма Тогда
		Секция = Макет.ПолучитьОбласть("ШапкаИнформация");
		ТабличныйДокумент.Вывести(Секция);
	КонецЕсли;
	
	Секция = Макет.ПолучитьОбласть("Шапка");
	Секция.Параметры.УстановленныйОтбор = "";
	Секция.Параметры.НачалоПериода = Формат(ПараметрыОтчета.НачалоПериода, "ДФ=dd.MM.yyyy");
	Секция.Параметры.КонецПериода = Формат(ПараметрыОтчета.КонецПериода, "ДФ=dd.MM.yyyy");
	СведенияОбОрганизации = БухгалтерскийУчетВызовСервераПереопределяемый.СведенияОЮрФизЛице(ПараметрыОтчета.Организация);
	НазваниеОрганизации = ОбщегоНазначенияБПВызовСервера.ОписаниеОрганизации(СведенияОбОрганизации, "НаименованиеДляПечатныхФорм");
	Секция.Параметры.НазваниеОрганизации = НазваниеОрганизации;
	Секция.Параметры.ИННКППОрганизации = "" + СведенияОбОрганизации.ИНН 
		+ ?(НЕ ЗначениеЗаполнено(СведенияОбОрганизации.КПП), "", ("/" + СведенияОбОрганизации.КПП));
	Если Не СтандартнаяФорма И ЗначениеЗаполнено(ПараметрыОтчета.КонтрагентДляОтбора) Тогда
		Если ПараметрыОтчета.КонтрагентДляОтбора.ЭтоГруппа Тогда
			НадписьОтбор = НСтр("ru='Отбор: Контрагент в группе %1'");
		Иначе
			НадписьОтбор = НСтр("ru='Отбор: Контрагент = %1'");
		КонецЕсли;
		Секция.Параметры.УстановленныйОтбор = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			НадписьОтбор, ПараметрыОтчета.КонтрагентДляОтбора);
	КонецЕсли;
	ТабличныйДокумент.Вывести(Секция);
	// Вывод шапки книги покупок
	/////////////////////////////////////////////////////////////////////////
	
	/////////////////////////////////////////////////////////////////////////
	// Вывод пустой книги покупок, если данных нет
	Если Результат.Пустой() Тогда
		
		Секция = Макет.ПолучитьОбласть("Всего");
		ТабличныйДокумент.Вывести(Секция);
		
		/////////////////////////////////////////////////////////////////////////
		// Вывод подвала
		ВывестиПодвал(ПараметрыОтчета, ТабличныйДокумент, Макет);
		// Вывод подвала
		/////////////////////////////////////////////////////////////////////////
		
		БухгалтерскиеОтчетыВызовСервера.УстановитьКолонтитулыПоУмолчанию(
			ТабличныйДокумент, , Строка(Пользователи.ТекущийПользователь()));
		Возврат;
	КонецЕсли; 
	// Вывод пустой книги покупок, если данных нет
	/////////////////////////////////////////////////////////////////////////
	
	ДеревоЗаписей = Результат.Выгрузить(ОбходРезультатаЗапроса.ПоГруппировкам);
	ИтогПоОрганизации = ДеревоЗаписей.Строки[0];
	
	СоответствиеСтрокиДопИнформацииПоСчетуФактуре = Новый Соответствие;
	ТаблицаДополнительнойИнформацииПоСФ = ПолучитьДополнительнуюИнформациюПоСФ(
		ПараметрыОтчета, СписокОрганизаций, СписокСчетовФактур, , СоответствиеСтрокиДопИнформацииПоСчетуФактуре);
	
	Секция = Макет.ПолучитьОбласть("Строка");
	Если ПараметрыОтчета.ГруппироватьПоКонтрагентам Тогда
		СекцияКонтрагент = Макет.ПолучитьОбласть("Контрагент");
		СекцияВсегоКонтрагент = Макет.ПолучитьОбласть("ВсегоКонтрагент");
	КонецЕсли;
	
	Счетчик = 0; // Счетчик строк книги покупок
	
	Если ПараметрыОтчета.ГруппироватьПоКонтрагентам И Не СтандартнаяФорма Тогда
		Для Каждого ИтогПоКонтрагенту Из ИтогПоОрганизации.Строки Цикл
			СекцияКонтрагент.Параметры.Контрагент = ИтогПоКонтрагенту.Продавец;
			ТабличныйДокумент.Вывести(СекцияКонтрагент);
			ТабличныйДокумент.НачатьГруппуСтрок();
			Для Каждого ИтогПоНалоговыйПериод Из ИтогПоКонтрагенту.Строки Цикл
				Для Каждого ИтогПоДокументу Из ИтогПоНалоговыйПериод.Строки Цикл
					Для Каждого ИтогПоИсправлению Из ИтогПоДокументу.Строки Цикл
						Для Каждого ЗаписьКниги Из ИтогПоИсправлению.Строки Цикл
							
							Счетчик = Счетчик + 1;
							Секция.Параметры.Ном = Счетчик;
							
							ЗаполнитьСтрокуКнигиПокупок(Секция, ЗаписьКниги, 
								СоответствиеСтрокиДопИнформацииПоСчетуФактуре, ПараметрыОтчета);
							
							ТабличныйДокумент.Вывести(Секция);
							
						КонецЦикла; 
					КонецЦикла; 
				КонецЦикла; 
			КонецЦикла;
			ТабличныйДокумент.ЗакончитьГруппуСтрок();
			СекцияВсегоКонтрагент.Параметры.Заполнить(ИтогПоКонтрагенту);
			ТабличныйДокумент.Вывести(СекцияВсегоКонтрагент);
		КонецЦикла;
	Иначе
		Для Каждого ИтогПоНалоговыйПериод Из ИтогПоОрганизации.Строки Цикл
			Для каждого ИтогПоДокументу Из ИтогПоНалоговыйПериод.Строки Цикл
				Для Каждого ИтогПоИсправлению Из ИтогПоДокументу.Строки Цикл
					Для каждого ЗаписьКниги Из ИтогПоИсправлению.Строки Цикл
						
						Счетчик = Счетчик + 1;
						Секция.Параметры.Ном = Счетчик;
						
						ЗаполнитьСтрокуКнигиПокупок(Секция, ЗаписьКниги, 
							СоответствиеСтрокиДопИнформацииПоСчетуФактуре, ПараметрыОтчета);
						
						ТабличныйДокумент.Вывести(Секция);
					КонецЦикла; 	
				КонецЦикла; 	
			КонецЦикла; 
		КонецЦикла;
	КонецЕсли;
	// Вывод всего
	Секция = Макет.ПолучитьОбласть("Всего");
	Секция.Параметры.Заполнить(ИтогПоОрганизации);
	
	ТабличныйДокумент.Вывести(Секция);
	
	/////////////////////////////////////////////////////////////////////////
	// Вывод подвала
	ВывестиПодвал(ПараметрыОтчета, ТабличныйДокумент, Макет);
	// Вывод подвала
	/////////////////////////////////////////////////////////////////////////
	
	/////////////////////////////////////////////////////////////////////////
	// Повтор шапки таблицы на каждой строке
	ТабличныйДокумент.ПовторятьПриПечатиСтроки = ТабличныйДокумент.Область("СтрокиДляПовтора");
	// Повтор шапки таблицы на каждой строке
	/////////////////////////////////////////////////////////////////////////
	
	БухгалтерскиеОтчетыВызовСервера.УстановитьКолонтитулыПоУмолчанию(ТабличныйДокумент, , Строка(Пользователи.ТекущийПользователь()));
	ПараметрыОтчета.СписокСформированныхЛистов.Добавить(ТабличныйДокумент, "Основной раздел");
	
КонецПроцедуры

Процедура СформироватьДополнительныеЛисты(СписокОрганизаций, ПараметрыОтчета, СтандартнаяФорма, СписокСообщений)

	// Проверка наличия дополнительных листов за текущий период
	СтруктураПараметров = ПроверитьНаличиеДопЛистов(
		СписокОрганизаций, ПараметрыОтчета.НачалоПериода, ПараметрыОтчета.КонецПериода);
	
	Если ПараметрыОтчета.ДополнительныеЛистыЗаТекущийПериод Или Не ПараметрыОтчета.ФормироватьДополнительныеЛисты Тогда
		Если СтруктураПараметров.КорректируемыйПериод Тогда
			СписокСообщений.Добавить(НСтр("ru = 'В указанном периоде отчета были внесены изменения в предшествующие налоговые периоды. 
					|Дополнительные листы по корректируемым налоговым периодам, в которые внесены изменения, можно построить в текущем отчете. 
					|Для этого необходимо взвести флажок ""Формировать дополнительные листы"" и выбрать значение ""за корректируемый период""'"));
		КонецЕсли;
		Если ПараметрыОтчета.ФормироватьДополнительныеЛисты И Не СтруктураПараметров.ТекущийПериод Тогда
			СписокСообщений.Добавить(НСтр("ru = 'В указанном периоде отчета не вносились изменения в последующих налоговых периодах. 
					|Построение дополнительных листов за текущий налоговый период не требуется'"));
			Возврат;
		КонецЕсли;
	КонецЕсли;
	Если Не ПараметрыОтчета.ДополнительныеЛистыЗаТекущийПериод Или Не ПараметрыОтчета.ФормироватьДополнительныеЛисты Тогда
		Если СтруктураПараметров.ТекущийПериод Тогда
			СписокСообщений.Добавить(НСтр("ru = 'В указанном периоде отчета есть изменения, внесенные в последующих налоговых периодах. 
					|Дополнительные листы по текущему налоговому периоду можно построить в текущем отчете.
					|Для этого необходимо взвести флажок ""Формировать дополнительные листы"" и выбрать значение ""за текущий период""!'"));
		КонецЕсли;
		Если ПараметрыОтчета.ФормироватьДополнительныеЛисты И Не СтруктураПараметров.КорректируемыйПериод Тогда
			СписокСообщений.Добавить(НСтр("ru = 'В указанном периоде отчета не вносились изменения в предыдущие налоговые периоды. 
					|Построение дополнительных листов за корректируемый налоговый период не требуется'"));
			Возврат;
		КонецЕсли;
	КонецЕсли;
	
	// Если флажок ФормироватьДополнительныеЛисты не установлен, продолжать не надо
	// При этом, если доп. листы есть, об этом было сообщено пользователю
	Если Не ПараметрыОтчета.ФормироватьДополнительныеЛисты Тогда
		Возврат;
	КонецЕсли;
	
	СписокСчетовФактур = Неопределено;
	// Получение записей дополнительных листов
	Результат = ПолучитьЗаписиДополнительныхЛистов(
		СписокОрганизаций, ПараметрыОтчета, СписокСчетовФактур, СтандартнаяФорма);
	
	Если Результат.Пустой() Тогда
		Возврат;
	КонецЕсли; 
	
	НомерОтображаемогоПериода = 0;
	
	Макет = ПолучитьМакет("ДополнительныйЛист");
	Секция = Макет.ПолучитьОбласть("Строка");
	СтрокаИтого = Макет.ПолучитьОбласть("Итого");
	СтрокаВсего = Макет.ПолучитьОбласть("Всего");
	Подвал = Макет.ПолучитьОбласть("Подвал");
	
	Если ПараметрыОтчета.ГруппироватьПоКонтрагентам Тогда
		СекцияКонтрагент = Макет.ПолучитьОбласть("Контрагент");
		СекцияВсегоКонтрагент = Макет.ПолучитьОбласть("ВсегоКонтрагент");
	КонецЕсли;
	
	ДеревоЗаписей = Результат.Выгрузить(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	СоответствиеСтрокиДопИнформацииПоСчетуФактуре = Новый Соответствие;
	ТаблицаДополнительнойИнформацииПоСФ = ПолучитьДополнительнуюИнформациюПоСФ(
		ПараметрыОтчета, СписокОрганизаций, СписокСчетовФактур, Истина, СоответствиеСтрокиДопИнформацииПоСчетуФактуре);
	
	Для Каждого ИтогПоПериодам ИЗ ДеревоЗаписей.Строки Цикл;
		
		НомерЛиста = 0;
		
		/////////////////////////////////////////////////////////////////////////
		// Добавление новой страницы панели разделов для вывода доп. листа
		НомерОтображаемогоПериода = НомерОтображаемогоПериода + 1;
		НалоговыйПериод = ПредставлениеПериода(
			ИтогПоПериодам.НалоговыйПериод, КонецДня(ИтогПоПериодам.КонецНалоговогоПериода), "ФП = Истина");

		ТабличныйДокумент = Новый ТабличныйДокумент;
		ТабличныйДокумент.ОриентацияСтраницы = ОриентацияСтраницы.Ландшафт;
		ТабличныйДокумент.АвтоМасштаб = Истина;
		ТабличныйДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_КнигаПокупокДопЛист";

		// Добавление новой страницы панели разделов для вывода доп. листа
		/////////////////////////////////////////////////////////////////////////
		
		Для Каждого ИтогПоПериодамКорректировки ИЗ ИтогПоПериодам.Строки Цикл;
			// Формирование шапки доп. листа
			ОкончаниеПредыдущегоРаздела = ТабличныйДокумент.ВысотаТаблицы;
			НомерЛиста = НомерЛиста + 1;
				
			ВывестиШапкуДопЛиста(ПараметрыОтчета, ТабличныйДокумент, Макет, 
				ИтогПоПериодамКорректировки, НомерЛиста, СтандартнаяФорма);

			ИтогЗаПериод = ПолучитьИтогиЗаПериод(СписокОрганизаций, ИтогПоПериодамКорректировки.НалоговыйПериод, 
				КонецДня(ИтогПоПериодамКорректировки.КонецНалоговогоПериода), ИтогПоПериодамКорректировки.ДатаОформления);
			Если Не ИтогЗаПериод.Пустой() Тогда
				ИтогЗаПериод = ИтогЗаПериод.Выгрузить()[0];
			Иначе
				ИтогЗаПериод = Новый Структура;
				ИтогЗаПериод.Вставить("ВсегоПокупок", ОбщегоНазначенияБПКлиентСервер.ПолучитьОписаниеТиповЧисла(15, 2));
				ИтогЗаПериод.Вставить("СуммаБезНДС10", ОбщегоНазначенияБПКлиентСервер.ПолучитьОписаниеТиповЧисла(15, 2));
				ИтогЗаПериод.Вставить("НДС10", ОбщегоНазначенияБПКлиентСервер.ПолучитьОписаниеТиповЧисла(15, 2));
				ИтогЗаПериод.Вставить("СуммаБезНДС18", ОбщегоНазначенияБПКлиентСервер.ПолучитьОписаниеТиповЧисла(15, 2));
				ИтогЗаПериод.Вставить("НДС18", ОбщегоНазначенияБПКлиентСервер.ПолучитьОписаниеТиповЧисла(15, 2));
				ИтогЗаПериод.Вставить("НДС0", ОбщегоНазначенияБПКлиентСервер.ПолучитьОписаниеТиповЧисла(15, 2));
				ИтогЗаПериод.Вставить("СуммаСовсемБезНДС", ОбщегоНазначенияБПКлиентСервер.ПолучитьОписаниеТиповЧисла(15, 2));
			КонецЕсли;
			СтрокаИтого.Параметры.Заполнить(ИтогЗаПериод);
			
			ТабличныйДокумент.Вывести(СтрокаИтого);

			Счетчик = 0;

			Если ПараметрыОтчета.ГруппироватьПоКонтрагентам И Не СтандартнаяФорма Тогда
				Для Каждого ИтогПоКонтрагенту Из ИтогПоПериодамКорректировки.Строки Цикл
					СекцияКонтрагент.Параметры.Контрагент = ИтогПоКонтрагенту.Продавец;
					ТабличныйДокумент.Вывести(СекцияКонтрагент);
					ТабличныйДокумент.НачатьГруппуСтрок();
					Для Каждого ЗаписьПоСФ Из ИтогПоКонтрагенту.Строки Цикл
						Для Каждого РазделениеПоСтавкамДляАванса Из ЗаписьПоСФ.Строки Цикл
							Для каждого ИтогПоИсправлениям Из РазделениеПоСтавкамДляАванса.Строки Цикл
								Для каждого ЗаписьКниги Из ИтогПоИсправлениям.Строки Цикл
									
									Счетчик = Счетчик + 1;
									Секция.Параметры.Ном = Счетчик;
									
									ЗаполнитьСтрокуДополнительногоЛиста(Секция, ЗаписьКниги, 
										СоответствиеСтрокиДопИнформацииПоСчетуФактуре, ПараметрыОтчета);
									
									ТабличныйДокумент.Вывести(Секция);
									
									ИтогЗаПериод.ВсегоПокупок = ИтогЗаПериод.ВсегоПокупок + ЗаписьКниги.ВсегоПокупок;
									ИтогЗаПериод.СуммаБезНДС10 = ИтогЗаПериод.СуммаБезНДС10 + ЗаписьКниги.СуммаБезНДС10;
									ИтогЗаПериод.НДС10 = ИтогЗаПериод.НДС10 + ЗаписьКниги.НДС10;
									ИтогЗаПериод.СуммаБезНДС18 = ИтогЗаПериод.СуммаБезНДС18 + ЗаписьКниги.СуммаБезНДС18;
									ИтогЗаПериод.НДС18 = ИтогЗаПериод.НДС18 + ЗаписьКниги.НДС18;
									ИтогЗаПериод.НДС0 = ИтогЗаПериод.НДС0 + ЗаписьКниги.НДС0;
									ИтогЗаПериод.СуммаСовсемБезНДС = ИтогЗаПериод.СуммаСовсемБезНДС + ЗаписьКниги.СуммаСовсемБезНДС;
								КонецЦикла; 
							КонецЦикла; 
						КонецЦикла; 
					КонецЦикла; 
					ТабличныйДокумент.ЗакончитьГруппуСтрок();
					СекцияВсегоКонтрагент.Параметры.Заполнить(ИтогПоКонтрагенту);
					ТабличныйДокумент.Вывести(СекцияВсегоКонтрагент);
				КонецЦикла;
			Иначе
				Для Каждого ЗаписьПоСФ Из ИтогПоПериодамКорректировки.Строки Цикл
					Для Каждого РазделениеПоСтавкамДляАванса Из ЗаписьПоСФ.Строки Цикл
						Для каждого ИтогПоИсправлениям Из РазделениеПоСтавкамДляАванса.Строки Цикл
							Для каждого ЗаписьКниги Из ИтогПоИсправлениям.Строки Цикл
								
								Счетчик = Счетчик + 1;
								Секция.Параметры.Ном = Счетчик;
								
								ЗаполнитьСтрокуДополнительногоЛиста(Секция, ЗаписьКниги, 
									СоответствиеСтрокиДопИнформацииПоСчетуФактуре, ПараметрыОтчета);
								
								ТабличныйДокумент.Вывести(Секция);
								
								ИтогЗаПериод.ВсегоПокупок = ИтогЗаПериод.ВсегоПокупок + ЗаписьКниги.ВсегоПокупок;
								ИтогЗаПериод.СуммаБезНДС10 = ИтогЗаПериод.СуммаБезНДС10 + ЗаписьКниги.СуммаБезНДС10;
								ИтогЗаПериод.НДС10 = ИтогЗаПериод.НДС10 + ЗаписьКниги.НДС10;
								ИтогЗаПериод.СуммаБезНДС18 = ИтогЗаПериод.СуммаБезНДС18 + ЗаписьКниги.СуммаБезНДС18;
								ИтогЗаПериод.НДС18 = ИтогЗаПериод.НДС18 + ЗаписьКниги.НДС18;
								ИтогЗаПериод.НДС0 = ИтогЗаПериод.НДС0 + ЗаписьКниги.НДС0;
								ИтогЗаПериод.СуммаСовсемБезНДС = ИтогЗаПериод.СуммаСовсемБезНДС + ЗаписьКниги.СуммаСовсемБезНДС;
							КонецЦикла; 
						КонецЦикла; 
					КонецЦикла; 
				КонецЦикла; 
			КонецЕсли;
			СтрокаВсего.Параметры.Заполнить(ИтогЗаПериод);
			ТабличныйДокумент.Вывести(СтрокаВсего);
					
			/////////////////////////////////////////////////////////////////////////
			// Вывод подвала
			ВывестиПодвал(ПараметрыОтчета, ТабличныйДокумент, Макет);
			// Вывод подвала
			/////////////////////////////////////////////////////////////////////////
			
		КонецЦикла; 
		
		ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		
		ПараметрыОтчета.СписокСформированныхЛистов.Добавить(ТабличныйДокумент, "Доп.листы за " + НалоговыйПериод);
		
	КонецЦикла;
	
КонецПроцедуры

Функция ПолучитьЗаписиКнигиПокупок(СписокОрганизаций, ПараметрыОтчета, СписокСчетовФактур, СтандартнаяФорма)
	
	// Создаем запрос по счетам-фактурам
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	
	УстановитьПараметрыЗапросаКнигиПокупок(ПараметрыОтчета, Запрос, СписокОрганизаций, СтандартнаяФорма);
	
	// Определим документы корректировки реализации.
	ТекстОрганизацияЯвляетсяПоставщиком = УчетНДСПереопределяемый.ТекстЗапросаСчетаФактурыПолученныеГдеОрганизацияЯвляетсяПоставщиком(
												Запрос, 
												СписокОрганизаций, 
												КонецДня(ПараметрыОтчета.КонецПериода));
	Запрос.Текст = "
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ТаблицаОрганизацияЯвляетсяПоставщиком.СчетФактура,
	|	ТаблицаОрганизацияЯвляетсяПоставщиком.Организация,
	|	ТаблицаОрганизацияЯвляетсяПоставщиком.ГоловнаяОрганизация,
	|	ТаблицаОрганизацияЯвляетсяПоставщиком.ЭтоКорректировкаРеализации
	|
	|ПОМЕСТИТЬ ВТ_ТаблицаОрганизацияЯвляетсяПоставщиком
	|ИЗ
	|	(" + ТекстОрганизацияЯвляетсяПоставщиком + ") КАК ТаблицаОрганизацияЯвляетсяПоставщиком
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	СчетФактура,
	|	ГоловнаяОрганизация
	|";
	
	Запрос.Выполнить();
	
	// Определим счетам-фактуры, которые являются исправлением в книге покупок.
	ТекстСчетаФактурыИсправленияКнигиПокупок = УчетНДСПереопределяемый.ТекстЗапросаСчетаФактурыИсправленияКнигиПокупок(
														Запрос,
														СписокОрганизаций,
														КонецДня(ПараметрыОтчета.КонецПериода));
	
	Запрос.Текст = "
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ТаблицаСчетаФактурыИсправления.СчетФактура,
	|	ТаблицаСчетаФактурыИсправления.Организация,
	|	ТаблицаСчетаФактурыИсправления.ГоловнаяОрганизация,
	|	ТаблицаСчетаФактурыИсправления.ЭтоКорректировкаПоступления
	|
	|ПОМЕСТИТЬ ВТ_ТаблицаСчетаФактурыИсправления
	|ИЗ
	|	(" + ТекстСчетаФактурыИсправленияКнигиПокупок + ") КАК ТаблицаСчетаФактурыИсправления
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	СчетФактура,
	|	ГоловнаяОрганизация
	|";
														
	Запрос.Выполнить();
	
	Запрос.Текст = 
	 "ВЫБРАТЬ РАЗРЕШЕННЫЕ
	 |	НДСЗаписиКнигиПокупок.Период,
	 |	НДСЗаписиКнигиПокупок.Регистратор,
	 |	НДСЗаписиКнигиПокупок.Организация,
	 |	ВЫБОР
	 |		КОГДА НДСЗаписиКнигиПокупок.Организация.ГоловнаяОрганизация = ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)
	 |			ТОГДА НДСЗаписиКнигиПокупок.Организация
	 |		ИНАЧЕ НДСЗаписиКнигиПокупок.Организация.ГоловнаяОрганизация
	 |	КОНЕЦ КАК ГоловнаяОрганизация,
	 |	НДСЗаписиКнигиПокупок.Поставщик,
	 |	НДСЗаписиКнигиПокупок.СчетФактура,
	 |	НДСЗаписиКнигиПокупок.ВидЦенности,
	 |	НДСЗаписиКнигиПокупок.СтавкаНДС,
	 |	НДСЗаписиКнигиПокупок.ДатаОплаты,
	 |	НДСЗаписиКнигиПокупок.ДокументОплаты,
	 |	НДСЗаписиКнигиПокупок.Событие,
	 |	НДСЗаписиКнигиПокупок.ДатаСобытия,
	 |	НДСЗаписиКнигиПокупок.ДоговорКонтрагента,
	 |	НДСЗаписиКнигиПокупок.ИсправленныйСчетФактура,
	 |	НДСЗаписиКнигиПокупок.СуммаБезНДС,
	 |	НДСЗаписиКнигиПокупок.НДС
	 |	
	 |ПОМЕСТИТЬ ВТ_НДСЗаписиКнигиПокупок
	 |ИЗ
	 |	РегистрНакопления.НДСЗаписиКнигиПокупок КАК НДСЗаписиКнигиПокупок
	 |ГДЕ
	 |	НДСЗаписиКнигиПокупок.Период МЕЖДУ &НачалоПериода И &КонецПериода
	 |	И НДСЗаписиКнигиПокупок.Организация В(&Организация)
	 |	И (НЕ НДСЗаписиКнигиПокупок.ЗаписьДополнительногоЛиста)
	 |	И ВЫБОР
	 |			КОГДА &ОтбиратьПоКонтрагенту = ИСТИНА
	 |				ТОГДА НДСЗаписиКнигиПокупок.Поставщик = &КонтрагентДляОтбора
	 |			ИНАЧЕ ИСТИНА
	 |		КОНЕЦ
	 |;
	 |
	 |ВЫБРАТЬ РАЗРЕШЕННЫЕ
	 |	НДСЗаписиКнигиПокупок.Период КАК Период,
	 |	НДСЗаписиКнигиПокупок.ВидЦенности,
	 |	НДСЗаписиКнигиПокупок.Организация КАК Организация,
	 |	НДСЗаписиКнигиПокупок.ГоловнаяОрганизация КАК ГоловнаяОрганизация,
	 |	ВЫБОР
	 |		КОГДА ЕСТЬNULL(ВТ_ТаблицаОрганизацияЯвляетсяПоставщиком.ЭтоКорректировкаРеализации, ЛОЖЬ)
	 |			ТОГДА НДСЗаписиКнигиПокупок.Организация
	 |		КОГДА НДСЗаписиКнигиПокупок.ВидЦенности В (&ВидыЦенностей_СобственныеСФ)
	 |				И ((НЕ НДСЗаписиКнигиПокупок.ВидЦенности В (&ВидыЦенностей_АвансыПолученные))
	 |					ИЛИ (НЕ &ВыводитьПокупателейПоАвансам))
	 |			ТОГДА НДСЗаписиКнигиПокупок.Организация
	 |		КОГДА НДСЗаписиКнигиПокупок.ВидЦенности В (&ВидыЦенностей_АвансыПолученные)
	 |			ТОГДА НДСЗаписиКнигиПокупок.Поставщик
	 |		КОГДА НДСЗаписиКнигиПокупок.ВидЦенности = ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.Возврат)
	 |				И (НЕ(ВТ_ТаблицаОрганизацияЯвляетсяПоставщиком.СчетФактура ЕСТЬ NULL))
	 |			ТОГДА НДСЗаписиКнигиПокупок.Организация
	 |		ИНАЧЕ НДСЗаписиКнигиПокупок.Поставщик
	 |	КОНЕЦ КАК Контрагент,
	 |	ВЫБОР
	 |		КОГДА ЕСТЬNULL(ВТ_ТаблицаОрганизацияЯвляетсяПоставщиком.ЭтоКорректировкаРеализации, ЛОЖЬ)
	 |			ТОГДА НДСЗаписиКнигиПокупок.Организация.ИНН
	 |		КОГДА НДСЗаписиКнигиПокупок.ВидЦенности В (&ВидыЦенностей_СобственныеСФ)
	 |				И ((НЕ НДСЗаписиКнигиПокупок.ВидЦенности В (&ВидыЦенностей_АвансыПолученные))
	 |					ИЛИ (НЕ &ВыводитьПокупателейПоАвансам))
	 |			ТОГДА НДСЗаписиКнигиПокупок.Организация.ИНН
	 |		КОГДА НДСЗаписиКнигиПокупок.ВидЦенности В (&ВидыЦенностей_АвансыПолученные)
	 |			ТОГДА НДСЗаписиКнигиПокупок.Поставщик.ИНН
	 |		КОГДА НДСЗаписиКнигиПокупок.ВидЦенности = ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.Возврат)
	 |				И (НЕ(ВТ_ТаблицаОрганизацияЯвляетсяПоставщиком.СчетФактура ЕСТЬ NULL))
	 |			ТОГДА НДСЗаписиКнигиПокупок.Организация.ИНН
	 |		ИНАЧЕ НДСЗаписиКнигиПокупок.Поставщик.ИНН
	 |	КОНЕЦ КАК ПродавецИНН,
	 |	ВЫБОР
	 |		КОГДА ЕСТЬNULL(ВТ_ТаблицаОрганизацияЯвляетсяПоставщиком.ЭтоКорректировкаРеализации, ЛОЖЬ)
	 |			ТОГДА НДСЗаписиКнигиПокупок.Организация.КПП
	 |		КОГДА НДСЗаписиКнигиПокупок.ВидЦенности В (&ВидыЦенностей_СобственныеСФ)
	 |				И ((НЕ НДСЗаписиКнигиПокупок.ВидЦенности В (&ВидыЦенностей_АвансыПолученные))
	 |					ИЛИ (НЕ &ВыводитьПокупателейПоАвансам))
	 |			ТОГДА НДСЗаписиКнигиПокупок.Организация.КПП
	 |		КОГДА НДСЗаписиКнигиПокупок.ВидЦенности В (&ВидыЦенностей_АвансыПолученные)
	 |			ТОГДА НДСЗаписиКнигиПокупок.Поставщик.КПП
	 |		КОГДА НДСЗаписиКнигиПокупок.ВидЦенности = ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.Возврат)
	 |				И (НЕ(ВТ_ТаблицаОрганизацияЯвляетсяПоставщиком.СчетФактура ЕСТЬ NULL))
	 |			ТОГДА НДСЗаписиКнигиПокупок.Организация.КПП
	 |		ИНАЧЕ НДСЗаписиКнигиПокупок.Поставщик.КПП
	 |	КОНЕЦ КАК ПродавецКПП,
	 |	ВЫБОР
	 |		КОГДА (НЕ НДСЗаписиКнигиПокупок.ИсправленныйСчетФактура В (&ПустыеДокументыИсправления))
	 |			ТОГДА НДСЗаписиКнигиПокупок.ИсправленныйСчетФактура
	 |		ИНАЧЕ НДСЗаписиКнигиПокупок.СчетФактура
	 |	КОНЕЦ КАК СчетФактура,
	 |	НДСЗаписиКнигиПокупок.ДатаОплаты КАК ДатаОплаты, // преобразование ДатыОплаты перенесено в таблицу счетов-фактур и производится в следующем запросе
	 |	НДСЗаписиКнигиПокупок.ДокументОплаты,
	 |	НАЧАЛОПЕРИОДА(НДСЗаписиКнигиПокупок.СчетФактура.Дата, МЕСЯЦ) КАК ПорядокОтраженияПоДатам,
	 |	СУММА(ЕСТЬNULL(НДСЗаписиКнигиПокупок.СуммаБезНДС, 0) + ЕСТЬNULL(НДСЗаписиКнигиПокупок.НДС, 0)) КАК ВсегоПокупок,
	 |	СУММА(ВЫБОР
	 |			КОГДА НДСЗаписиКнигиПокупок.СтавкаНДС В (&СтавкиНДС18)
	 |					И (НЕ НДСЗаписиКнигиПокупок.ВидЦенности В (&ВидыЦенностей_АвансыПолученные))
	 |				ТОГДА НДСЗаписиКнигиПокупок.СуммаБезНДС
	 |			ИНАЧЕ 0
	 |		КОНЕЦ) КАК СуммаБезНДС18,
	 |	СУММА(ВЫБОР
	 |			КОГДА НДСЗаписиКнигиПокупок.СтавкаНДС В (&СтавкиНДС18)
	 |				ТОГДА НДСЗаписиКнигиПокупок.НДС
	 |			ИНАЧЕ 0
	 |		КОНЕЦ) КАК НДС18,
	 |	СУММА(ВЫБОР
	 |			КОГДА НДСЗаписиКнигиПокупок.СтавкаНДС В (&СтавкиНДС10)
	 |					И (НЕ НДСЗаписиКнигиПокупок.ВидЦенности В (&ВидыЦенностей_АвансыПолученные))
	 |				ТОГДА НДСЗаписиКнигиПокупок.СуммаБезНДС
	 |			ИНАЧЕ 0
	 |		КОНЕЦ) КАК СуммаБезНДС10,
	 |	СУММА(ВЫБОР
	 |			КОГДА НДСЗаписиКнигиПокупок.СтавкаНДС В (&СтавкиНДС10)
	 |				ТОГДА НДСЗаписиКнигиПокупок.НДС
	 |			ИНАЧЕ 0
	 |		КОНЕЦ) КАК НДС10,
	 |	СУММА(ВЫБОР
	 |			КОГДА НДСЗаписиКнигиПокупок.СтавкаНДС = &СтавкаНДС0
	 |				ТОГДА НДСЗаписиКнигиПокупок.СуммаБезНДС + НДСЗаписиКнигиПокупок.НДС
	 |			ИНАЧЕ 0
	 |		КОНЕЦ) КАК НДС0,
	 |	СУММА(ВЫБОР
	 |			КОГДА НДСЗаписиКнигиПокупок.СтавкаНДС = &СтавкаБезНДС
	 |				ТОГДА НДСЗаписиКнигиПокупок.СуммаБезНДС + НДСЗаписиКнигиПокупок.НДС
	 |			ИНАЧЕ 0
	 |		КОНЕЦ) КАК СуммаСовсемБезНДС,
	 |	ЕСТЬNULL(НДСЗаписиКнигиПокупок.СчетФактура.Дата, ДАТАВРЕМЯ(1, 1, 1)) КАК СчетФактураДата,
	 |	ВЫБОР
	 |		КОГДА ЕСТЬNULL(ВТ_ТаблицаОрганизацияЯвляетсяПоставщиком.ЭтоКорректировкаРеализации, ЛОЖЬ)
	 |			ТОГДА ПОДСТРОКА(НДСЗаписиКнигиПокупок.Организация.НаименованиеПолное, 1, 250)
	 |		КОГДА НДСЗаписиКнигиПокупок.ВидЦенности В (&ВидыЦенностей_СобственныеСФ)
	 |					И ((НЕ НДСЗаписиКнигиПокупок.ВидЦенности В (&ВидыЦенностей_АвансыПолученные))
	 |						ИЛИ (НЕ &ВыводитьПокупателейПоАвансам))
	 |				ИЛИ НДСЗаписиКнигиПокупок.ВидЦенности = ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.Возврат)
	 |					И (НЕ(ВТ_ТаблицаОрганизацияЯвляетсяПоставщиком.СчетФактура ЕСТЬ NULL))
	 |			ТОГДА ПОДСТРОКА(НДСЗаписиКнигиПокупок.Организация.НаименованиеПолное, 1, 250)
	 |		ИНАЧЕ ВЫБОР
	 |				КОГДА ПОДСТРОКА(НДСЗаписиКнигиПокупок.Поставщик.НаименованиеПолное, 1, 250) = """"
	 |					ТОГДА НДСЗаписиКнигиПокупок.Поставщик.Наименование
	 |				ИНАЧЕ ПОДСТРОКА(НДСЗаписиКнигиПокупок.Поставщик.НаименованиеПолное, 1, 250)
	 |			КОНЕЦ
	 |	КОНЕЦ КАК Продавец,
	 |	// ДатаОприходования Получение даты оприходования перенесено в таблицу счетов-фактур и производится в следующем запросе
	 |	ВЫБОР
	 |		КОГДА НДСЗаписиКнигиПокупок.ВидЦенности В (&ВидыЦенностей_АвансыПолученные)
	 |			ТОГДА ИСТИНА
	 |		ИНАЧЕ ЛОЖЬ
	 |	КОНЕЦ КАК НаАванс,
	 |	ВЫБОР
	 |		КОГДА НДСЗаписиКнигиПокупок.ВидЦенности В (&ВидыЦенностей_АвансыПолученные)
	 |				ИЛИ НДСЗаписиКнигиПокупок.ВидЦенности В (&ВидыЦенностей_СуммовыеРазницы)
	 |			ТОГДА НДСЗаписиКнигиПокупок.СтавкаНДС
	 |		ИНАЧЕ НЕОПРЕДЕЛЕНО
	 |	КОНЕЦ КАК СтавкаНДС_Аванс,
	 |	ВЫБОР
	 |		КОГДА НДСЗаписиКнигиПокупок.ДоговорКонтрагента = ЗНАЧЕНИЕ(Справочник.ДоговорыКонтрагентов.ПустаяСсылка)
	 |			ТОГДА НЕОПРЕДЕЛЕНО
	 |		ИНАЧЕ НДСЗаписиКнигиПокупок.ДоговорКонтрагента
	 |	КОНЕЦ КАК ДоговорАванса,
	 |	ВЫБОР
	 |		КОГДА (НЕ НДСЗаписиКнигиПокупок.ИсправленныйСчетФактура В (&ПустыеДокументыИсправления))
	 |			ТОГДА НДСЗаписиКнигиПокупок.ИсправленныйСчетФактура
	 |		ИНАЧЕ ВЫБОР
	 |				КОГДА НДСЗаписиКнигиПокупок.ВидЦенности В (&ВидыЦенностей_НалоговыйАгент)
	 |						И (НЕ НДСЗаписиКнигиПокупок.ДоговорКонтрагента = ЗНАЧЕНИЕ(Справочник.ДоговорыКонтрагентов.ПустаяСсылка))
	 |					ТОГДА НДСЗаписиКнигиПокупок.ДокументОплаты
	 |				ИНАЧЕ НДСЗаписиКнигиПокупок.СчетФактура
	 |			КОНЕЦ
	 |	КОНЕЦ КАК ДокументОснованиеСчетаФактуры,
	 |	ВЫБОР
	 |		КОГДА ЕСТЬNULL(ВТ_ТаблицаСчетаФактурыИсправления.ЭтоКорректировкаПоступления, ЛОЖЬ)
	 |				И НДСЗаписиКнигиПокупок.ИсправленныйСчетФактура В (&ПустыеДокументыИсправления)
	 |			ТОГДА ИСТИНА
	 |		КОГДА НЕ (ВТ_ТаблицаСчетаФактурыИсправления.СчетФактура ЕСТЬ NULL)
	 |				И НДСЗаписиКнигиПокупок.ИсправленныйСчетФактура В (&ПустыеДокументыИсправления)
	 |				И ЕСТЬNULL(НДСЗаписиКнигиПокупок.СуммаБезНДС, 0) + ЕСТЬNULL(НДСЗаписиКнигиПокупок.НДС, 0) < 0
	 |			ТОГДА ИСТИНА
	 |		КОГДА НЕ (ВТ_ТаблицаСчетаФактурыИсправления.СчетФактура ЕСТЬ NULL)
	 |				И (НЕ НДСЗаписиКнигиПокупок.ИсправленныйСчетФактура В (&ПустыеДокументыИсправления))
	 |				И ЕСТЬNULL(НДСЗаписиКнигиПокупок.СуммаБезНДС, 0) + ЕСТЬNULL(НДСЗаписиКнигиПокупок.НДС, 0) < 0
	 |			ТОГДА ИСТИНА
	 |		ИНАЧЕ ЛОЖЬ
	 |	КОНЕЦ КАК Исправление,
	 |	НДСЗаписиКнигиПокупок.ИсправленныйСчетФактура КАК ИсправленныйСчетФактура,
	 |	ВЫБОР
	 |		КОГДА НДСЗаписиКнигиПокупок.ДатаСобытия = ДАТАВРЕМЯ(1, 1, 1)
	 |			ТОГДА НДСЗаписиКнигиПокупок.СчетФактура.Дата
	 |		ИНАЧЕ НДСЗаписиКнигиПокупок.ДатаСобытия
	 |	КОНЕЦ КАК ДатаСобытия,
	 |	ВЫБОР
	 |		КОГДА НДСЗаписиКнигиПокупок.ВидЦенности В (&ВидыЦенностей_АвансыПолученные)
	 |			ТОГДА ИСТИНА
	 |		ИНАЧЕ ЛОЖЬ
	 |	КОНЕЦ КАК ЭтоАвансыПолученные,
	 |	ВЫБОР
	 |		КОГДА НДСЗаписиКнигиПокупок.ВидЦенности = &ВидыЦенностей_АвансыВыданные
	 |			ТОГДА ИСТИНА
	 |		ИНАЧЕ ЛОЖЬ
	 |	КОНЕЦ КАК ЭтоАвансыВыданные
	 |ПОМЕСТИТЬ ЗаписиКнигиПокупок
	 |ИЗ
	 |	ВТ_НДСЗаписиКнигиПокупок КАК НДСЗаписиКнигиПокупок
	 |
	 | 	ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ТаблицаОрганизацияЯвляетсяПоставщиком
	 |		ПО НДСЗаписиКнигиПокупок.СчетФактура = ВТ_ТаблицаОрганизацияЯвляетсяПоставщиком.СчетФактура
	 |			И НДСЗаписиКнигиПокупок.ГоловнаяОрганизация = ВТ_ТаблицаОрганизацияЯвляетсяПоставщиком.ГоловнаяОрганизация
	 |
	 |	ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ТаблицаСчетаФактурыИсправления
	 |		ПО НДСЗаписиКнигиПокупок.Регистратор = ВТ_ТаблицаСчетаФактурыИсправления.СчетФактура
	 |			И НДСЗаписиКнигиПокупок.ГоловнаяОрганизация = ВТ_ТаблицаСчетаФактурыИсправления.ГоловнаяОрганизация
	 |	
	 |СГРУППИРОВАТЬ ПО
	 |	НДСЗаписиКнигиПокупок.ВидЦенности,
	 |	НДСЗаписиКнигиПокупок.Период,
	 |	НДСЗаписиКнигиПокупок.Организация,
	 |	НДСЗаписиКнигиПокупок.ГоловнаяОрганизация,
	 |	НДСЗаписиКнигиПокупок.ДокументОплаты,
	 |	НДСЗаписиКнигиПокупок.ДатаОплаты,
	 |	ЕСТЬNULL(НДСЗаписиКнигиПокупок.СчетФактура.Дата, ДАТАВРЕМЯ(1, 1, 1)),
	 |	ВЫБОР
	 |		КОГДА НДСЗаписиКнигиПокупок.ВидЦенности В (&ВидыЦенностей_АвансыПолученные)
	 |				ИЛИ НДСЗаписиКнигиПокупок.ВидЦенности В (&ВидыЦенностей_СуммовыеРазницы)
	 |			ТОГДА НДСЗаписиКнигиПокупок.СтавкаНДС
	 |		ИНАЧЕ НЕОПРЕДЕЛЕНО
	 |	КОНЕЦ,
	 |	ВЫБОР
	 |		КОГДА НДСЗаписиКнигиПокупок.ДоговорКонтрагента = ЗНАЧЕНИЕ(Справочник.ДоговорыКонтрагентов.ПустаяСсылка)
	 |			ТОГДА НЕОПРЕДЕЛЕНО
	 |		ИНАЧЕ НДСЗаписиКнигиПокупок.ДоговорКонтрагента
	 |	КОНЕЦ,
	 |	НДСЗаписиКнигиПокупок.ИсправленныйСчетФактура,
	 |	ВЫБОР
	 |		КОГДА (НЕ НДСЗаписиКнигиПокупок.ИсправленныйСчетФактура В (&ПустыеДокументыИсправления))
	 |			ТОГДА НДСЗаписиКнигиПокупок.ИсправленныйСчетФактура
	 |		ИНАЧЕ НДСЗаписиКнигиПокупок.СчетФактура
	 |	КОНЕЦ,
	 |	ВЫБОР
	 |		КОГДА (НЕ НДСЗаписиКнигиПокупок.ИсправленныйСчетФактура В (&ПустыеДокументыИсправления))
	 |			ТОГДА НДСЗаписиКнигиПокупок.ИсправленныйСчетФактура
	 |		ИНАЧЕ ВЫБОР
	 |				КОГДА НДСЗаписиКнигиПокупок.ВидЦенности В (&ВидыЦенностей_НалоговыйАгент)
	 |						И (НЕ НДСЗаписиКнигиПокупок.ДоговорКонтрагента = ЗНАЧЕНИЕ(Справочник.ДоговорыКонтрагентов.ПустаяСсылка))
	 |					ТОГДА НДСЗаписиКнигиПокупок.ДокументОплаты
	 |				ИНАЧЕ НДСЗаписиКнигиПокупок.СчетФактура
	 |			КОНЕЦ
	 |	КОНЕЦ,
	 |	ВЫБОР
	 |		КОГДА ЕСТЬNULL(ВТ_ТаблицаСчетаФактурыИсправления.ЭтоКорректировкаПоступления, ЛОЖЬ)
	 |				И НДСЗаписиКнигиПокупок.ИсправленныйСчетФактура В (&ПустыеДокументыИсправления)
	 |			ТОГДА ИСТИНА
	 |		КОГДА НЕ (ВТ_ТаблицаСчетаФактурыИсправления.СчетФактура ЕСТЬ NULL)
	 |				И НДСЗаписиКнигиПокупок.ИсправленныйСчетФактура В (&ПустыеДокументыИсправления)
	 |				И ЕСТЬNULL(НДСЗаписиКнигиПокупок.СуммаБезНДС, 0) + ЕСТЬNULL(НДСЗаписиКнигиПокупок.НДС, 0) < 0
	 |			ТОГДА ИСТИНА
	 |		КОГДА НЕ (ВТ_ТаблицаСчетаФактурыИсправления.СчетФактура ЕСТЬ NULL)
	 |				И (НЕ НДСЗаписиКнигиПокупок.ИсправленныйСчетФактура В (&ПустыеДокументыИсправления))
	 |				И ЕСТЬNULL(НДСЗаписиКнигиПокупок.СуммаБезНДС, 0) + ЕСТЬNULL(НДСЗаписиКнигиПокупок.НДС, 0) < 0
	 |			ТОГДА ИСТИНА
	 |		ИНАЧЕ ЛОЖЬ
	 |	КОНЕЦ,
	 |	ВЫБОР
	 |		КОГДА ЕСТЬNULL(ВТ_ТаблицаОрганизацияЯвляетсяПоставщиком.ЭтоКорректировкаРеализации, ЛОЖЬ)
	 |			ТОГДА НДСЗаписиКнигиПокупок.Организация
	 |		КОГДА НДСЗаписиКнигиПокупок.ВидЦенности В (&ВидыЦенностей_СобственныеСФ)
	 |				И ((НЕ НДСЗаписиКнигиПокупок.ВидЦенности В (&ВидыЦенностей_АвансыПолученные))
	 |					ИЛИ (НЕ &ВыводитьПокупателейПоАвансам))
	 |			ТОГДА НДСЗаписиКнигиПокупок.Организация
	 |		КОГДА НДСЗаписиКнигиПокупок.ВидЦенности В (&ВидыЦенностей_АвансыПолученные)
	 |			ТОГДА НДСЗаписиКнигиПокупок.Поставщик
	 |		КОГДА НДСЗаписиКнигиПокупок.ВидЦенности = ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.Возврат)
	 |				И (НЕ(ВТ_ТаблицаОрганизацияЯвляетсяПоставщиком.СчетФактура ЕСТЬ NULL))
	 |			ТОГДА НДСЗаписиКнигиПокупок.Организация
	 |		ИНАЧЕ НДСЗаписиКнигиПокупок.Поставщик
	 |	КОНЕЦ,
	 |	ВЫБОР
	 |		КОГДА ЕСТЬNULL(ВТ_ТаблицаОрганизацияЯвляетсяПоставщиком.ЭтоКорректировкаРеализации, ЛОЖЬ)
	 |			ТОГДА НДСЗаписиКнигиПокупок.Организация.ИНН
	 |		КОГДА НДСЗаписиКнигиПокупок.ВидЦенности В (&ВидыЦенностей_СобственныеСФ)
	 |				И ((НЕ НДСЗаписиКнигиПокупок.ВидЦенности В (&ВидыЦенностей_АвансыПолученные))
	 |					ИЛИ (НЕ &ВыводитьПокупателейПоАвансам))
	 |			ТОГДА НДСЗаписиКнигиПокупок.Организация.ИНН
	 |		КОГДА НДСЗаписиКнигиПокупок.ВидЦенности В (&ВидыЦенностей_АвансыПолученные)
	 |			ТОГДА НДСЗаписиКнигиПокупок.Поставщик.ИНН
	 |		КОГДА НДСЗаписиКнигиПокупок.ВидЦенности = ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.Возврат)
	 |				И (НЕ(ВТ_ТаблицаОрганизацияЯвляетсяПоставщиком.СчетФактура ЕСТЬ NULL))
	 |			ТОГДА НДСЗаписиКнигиПокупок.Организация.ИНН
	 |		ИНАЧЕ НДСЗаписиКнигиПокупок.Поставщик.ИНН
	 |	КОНЕЦ,
	 |	ВЫБОР
	 |		КОГДА ЕСТЬNULL(ВТ_ТаблицаОрганизацияЯвляетсяПоставщиком.ЭтоКорректировкаРеализации, ЛОЖЬ)
	 |			ТОГДА НДСЗаписиКнигиПокупок.Организация.КПП
	 |		КОГДА НДСЗаписиКнигиПокупок.ВидЦенности В (&ВидыЦенностей_СобственныеСФ)
	 |				И ((НЕ НДСЗаписиКнигиПокупок.ВидЦенности В (&ВидыЦенностей_АвансыПолученные))
	 |					ИЛИ (НЕ &ВыводитьПокупателейПоАвансам))
	 |			ТОГДА НДСЗаписиКнигиПокупок.Организация.КПП
	 |		КОГДА НДСЗаписиКнигиПокупок.ВидЦенности В (&ВидыЦенностей_АвансыПолученные)
	 |			ТОГДА НДСЗаписиКнигиПокупок.Поставщик.КПП
	 |		КОГДА НДСЗаписиКнигиПокупок.ВидЦенности = ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.Возврат)
	 |				И (НЕ(ВТ_ТаблицаОрганизацияЯвляетсяПоставщиком.СчетФактура ЕСТЬ NULL))
	 |			ТОГДА НДСЗаписиКнигиПокупок.Организация.КПП
	 |		ИНАЧЕ НДСЗаписиКнигиПокупок.Поставщик.КПП
	 |	КОНЕЦ,
	 |	ВЫБОР
	 |		КОГДА ЕСТЬNULL(ВТ_ТаблицаОрганизацияЯвляетсяПоставщиком.ЭтоКорректировкаРеализации, ЛОЖЬ)
	 |			ТОГДА ПОДСТРОКА(НДСЗаписиКнигиПокупок.Организация.НаименованиеПолное, 1, 250)
	 |		КОГДА НДСЗаписиКнигиПокупок.ВидЦенности В (&ВидыЦенностей_СобственныеСФ)
	 |					И ((НЕ НДСЗаписиКнигиПокупок.ВидЦенности В (&ВидыЦенностей_АвансыПолученные))
	 |						ИЛИ (НЕ &ВыводитьПокупателейПоАвансам))
	 |				ИЛИ НДСЗаписиКнигиПокупок.ВидЦенности = ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.Возврат)
	 |					И (НЕ(ВТ_ТаблицаОрганизацияЯвляетсяПоставщиком.СчетФактура ЕСТЬ NULL))
	 |			ТОГДА ПОДСТРОКА(НДСЗаписиКнигиПокупок.Организация.НаименованиеПолное, 1, 250)
	 |		ИНАЧЕ ВЫБОР
	 |				КОГДА ПОДСТРОКА(НДСЗаписиКнигиПокупок.Поставщик.НаименованиеПолное, 1, 250) = """"
	 |					ТОГДА НДСЗаписиКнигиПокупок.Поставщик.Наименование
	 |				ИНАЧЕ ПОДСТРОКА(НДСЗаписиКнигиПокупок.Поставщик.НаименованиеПолное, 1, 250)
	 |			КОНЕЦ
	 |	КОНЕЦ,
	 |	НАЧАЛОПЕРИОДА(НДСЗаписиКнигиПокупок.СчетФактура.Дата, МЕСЯЦ),
	 |	ВЫБОР
	 |		КОГДА НДСЗаписиКнигиПокупок.ДатаСобытия = ДАТАВРЕМЯ(1, 1, 1)
	 |			ТОГДА НДСЗаписиКнигиПокупок.СчетФактура.Дата
	 |		ИНАЧЕ НДСЗаписиКнигиПокупок.ДатаСобытия
	 |	КОНЕЦ,
	 |	ВЫБОР
	 |		КОГДА НДСЗаписиКнигиПокупок.ВидЦенности В (&ВидыЦенностей_АвансыПолученные)
	 |			ТОГДА ИСТИНА
	 |		ИНАЧЕ ЛОЖЬ
	 |	КОНЕЦ,
	 |	ВЫБОР
	 |		КОГДА НДСЗаписиКнигиПокупок.ВидЦенности = &ВидыЦенностей_АвансыВыданные
	 |			ТОГДА ИСТИНА
	 |		ИНАЧЕ ЛОЖЬ
	 |	КОНЕЦ";
	 
	
	 Если Не СтандартнаяФорма И ЗначениеЗаполнено(ПараметрыОтчета.КонтрагентДляОтбора) 
		 	И ПараметрыОтчета.КонтрагентДляОтбора.ЭтоГруппа Тогда
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "Поставщик = &КонтрагентДляОтбора", "Поставщик В ИЕРАРХИИ(&КонтрагентДляОтбора)");
	КонецЕсли;
	
	// Подставим полное наименование организации.
	Запрос.Текст = СтрЗаменить(Запрос.Текст,
								"НДСЗаписиКнигиПокупок.Организация.НаименованиеПолное",
								БухгалтерскийУчетВызовСервераПереопределяемый.ТекстЗапросаВариантНаименованияОрганизацииДляПечатныхФорм("НДСЗаписиКнигиПокупок.Организация"));
	
	Запрос.Выполнить();
	
	УчетНДСПереопределяемый.ПодготовитьВременнуюТаблицуСчетаФактурыПолученные(Запрос.МенеджерВременныхТаблиц, СписокОрганизаций, "ЗаписиКнигиПокупок");	
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	НАЧАЛОПЕРИОДА(ЗаписиКнигиПокупок.Период, КВАРТАЛ) КАК НалоговыйПериод,
	|	ЗаписиКнигиПокупок.ПорядокОтраженияПоДатам КАК ПорядокОтраженияПоДатам,
	|	ЗаписиКнигиПокупок.Организация КАК Организация,
	|	ЗаписиКнигиПокупок.ГоловнаяОрганизация КАК ГоловнаяОрганизация,
	|	ЗаписиКнигиПокупок.Продавец КАК Продавец,
	|	ЗаписиКнигиПокупок.Контрагент КАК Контрагент,
	|	ЗаписиКнигиПокупок.ПродавецИНН КАК ПродавецИНН,
	|	ЗаписиКнигиПокупок.ПродавецКПП КАК ПродавецКПП,
	|	ЗаписиКнигиПокупок.СчетФактура КАК СчетФактура,
	|	ВЫБОР
	|		КОГДА ЗаписиКнигиПокупок.ЭтоАвансыПолученные
	|			ТОГДА ЕСТЬNULL(ТаблицаСчетаФактурыДокументы.ДатаДокументаОснования, ЗаписиКнигиПокупок.СчетФактура.Дата)
	|		ИНАЧЕ ЗаписиКнигиПокупок.ДатаОплаты
	|	КОНЕЦ КАК ДатаОплаты,
	|	ЗаписиКнигиПокупок.СчетФактураДата КАК СчетФактураДата,
	|
	|	ВЫБОР
	|		КОГДА ЗаписиКнигиПокупок.ЭтоАвансыВыданные
	|			ТОГДА """"
	|		КОГДА ЗаписиКнигиПокупок.ЭтоАвансыПолученные
	|			ТОГДА ЗаписиКнигиПокупок.ДатаОплаты
	|		ИНАЧЕ ЕСТЬNULL(ТаблицаСчетаФактурыДокументы.ДатаДокументаОснования, ЗаписиКнигиПокупок.СчетФактура.Дата)
	|	КОНЕЦ КАК ДатаОприходования,
	|	ЕСТЬNULL(ТаблицаСчетаФактурыДокументы.СчетФактураДокумент, ЗаписиКнигиПокупок.СчетФактура) КАК СчетФактураДокумент,
	|	ТаблицаСчетаФактурыДокументы.НомерСчетаФактуры КАК НомерСчетаФактуры, // получение номера сф в случае NULL перенесено в ф-ю ОпределитьДатуИНомерСФ()
	|	ТаблицаСчетаФактурыДокументы.ДатаСчетаФактуры КАК ДатаСчетаФактуры, // получение даты сф в случае NULL перенесено в ф-ю ОпределитьДатуИНомерСФ()
	|	ЗаписиКнигиПокупок.НаАванс КАК НаАванс,
	|	ЗаписиКнигиПокупок.СтавкаНДС_Аванс КАК СтавкаНДС_Аванс,
	|	ЗаписиКнигиПокупок.ДоговорАванса КАК ДоговорАванса,
	|	ЗаписиКнигиПокупок.ВсегоПокупок КАК ВсегоПокупок,
	|	ВЫБОР
	|		КОГДА ЗаписиКнигиПокупок.НаАванс
	|			ТОГДА 0
	|		ИНАЧЕ ЗаписиКнигиПокупок.СуммаБезНДС18
	|	КОНЕЦ КАК СуммаБезНДС18,
	|	ЗаписиКнигиПокупок.НДС18 КАК НДС18,
	|	ВЫБОР
	|		КОГДА ЗаписиКнигиПокупок.НаАванс
	|			ТОГДА 0
	|		ИНАЧЕ ЗаписиКнигиПокупок.СуммаБезНДС10
	|	КОНЕЦ КАК СуммаБезНДС10,
	|	ЗаписиКнигиПокупок.НДС10 КАК НДС10,
	|	ЗаписиКнигиПокупок.НДС0 КАК НДС0,
	|	ЗаписиКнигиПокупок.СуммаСовсемБезНДС КАК СуммаСовсемБезНДС,
	|	ЕСТЬNULL(ТаблицаСчетаФактурыДокументы.СчетФактураДокументРасшифровка, ЗаписиКнигиПокупок.СчетФактура) КАК СчетФактураДокументРасшифровка,
	|	ТаблицаСчетаФактурыДокументы.ОъединятьСчетФактуры КАК ОъединятьСчетФактуры,
	|	ЗаписиКнигиПокупок.ИсправленныйСчетФактура КАК ИсправленныйСчетФактура,
	|	ТаблицаСчетаФактурыДокументы.ДатаИсправления КАК ДатаИсправления,
	|	ТаблицаСчетаФактурыДокументы.НомерИсправления КАК НомерИсправления,
	|	ТаблицаСчетаФактурыДокументы.ДатаКорректировки КАК ДатаКорректировки,
	|	ТаблицаСчетаФактурыДокументы.НомерКорректировки КАК НомерКорректировки,
	|	ТаблицаСчетаФактурыДокументы.ДатаИсправленияКорректировки КАК ДатаИсправленияКорректировки,
	|	ТаблицаСчетаФактурыДокументы.НомерИсправленияКорректировки КАК НомерИсправленияКорректировки,
	|	ЗаписиКнигиПокупок.Исправление КАК Исправление,
	|	ЗаписиКнигиПокупок.ДокументОснованиеСчетаФактуры КАК ДокументОснованиеСчетаФактуры,
	|	ЕСТЬNULL(ТаблицаСчетаФактурыДокументы.ОбрабатыватьНомерДокумента, ЛОЖЬ) КАК ОбрабатыватьНомерДокумента,
	|	ЗаписиКнигиПокупок.ДатаСобытия КАК ДатаСобытия
	|ИЗ
	|	ЗаписиКнигиПокупок КАК ЗаписиКнигиПокупок
	|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	|			ТаблицаСчетаФактурыДокументы.СчетФактура КАК СчетФактура,
	|			ТаблицаСчетаФактурыДокументы.ГоловнаяОрганизация КАК ГоловнаяОрганизация,
	|			ТаблицаСчетаФактурыДокументы.ДоговорАванса КАК ДоговорАванса,
	|			ТаблицаСчетаФактурыДокументы.СтавкаНДСАванса КАК СтавкаНДСАванса,
	|			МИНИМУМ(ТаблицаСчетаФактурыДокументы.Приоритет) КАК МинимумПриоритет
	|		ИЗ
	|			ТаблицаСчетаФактурыДокументы КАК ТаблицаСчетаФактурыДокументы
	|		
	|		СГРУППИРОВАТЬ ПО
	|			ТаблицаСчетаФактурыДокументы.СчетФактура,
	|			ТаблицаСчетаФактурыДокументы.ГоловнаяОрганизация,
	|			ТаблицаСчетаФактурыДокументы.ДоговорАванса,
	|			ТаблицаСчетаФактурыДокументы.СтавкаНДСАванса) КАК Приоритеты
	|		ПО ЗаписиКнигиПокупок.ДокументОснованиеСчетаФактуры = Приоритеты.СчетФактура
	|			И ЗаписиКнигиПокупок.ГоловнаяОрганизация = Приоритеты.ГоловнаяОрганизация
	|			И ЗаписиКнигиПокупок.ДоговорАванса = Приоритеты.ДоговорАванса
	|			И ЗаписиКнигиПокупок.СтавкаНДС_Аванс = Приоритеты.СтавкаНДСАванса
	|		ЛЕВОЕ СОЕДИНЕНИЕ ТаблицаСчетаФактурыДокументы КАК ТаблицаСчетаФактурыДокументы
	|		ПО (Приоритеты.СчетФактура = ТаблицаСчетаФактурыДокументы.СчетФактура)
	|			И (Приоритеты.ГоловнаяОрганизация = ТаблицаСчетаФактурыДокументы.ГоловнаяОрганизация)
	|			И (Приоритеты.МинимумПриоритет = ТаблицаСчетаФактурыДокументы.Приоритет)
	|			И (Приоритеты.ДоговорАванса = ТаблицаСчетаФактурыДокументы.ДоговорАванса)
	|			И (Приоритеты.СтавкаНДСАванса = ТаблицаСчетаФактурыДокументы.СтавкаНДСАванса)
	|
	|УПОРЯДОЧИТЬ ПО
	|	НалоговыйПериод,
	|	ПорядокОтраженияПоДатам,
	|	ДатаСобытия,
	|	СчетФактура,
	|	ДатаОплаты
	|ИТОГИ
	|	МАКСИМУМ(Продавец),
	|	МИНИМУМ(СчетФактураДата),
	|	МИНИМУМ(ДатаОприходования),
	|	МАКСИМУМ(НаАванс),
	|	СУММА(ВсегоПокупок),
	|	СУММА(СуммаБезНДС18),
	|	СУММА(НДС18),
	|	СУММА(СуммаБезНДС10),
	|	СУММА(НДС10),
	|	СУММА(НДС0),
	|	СУММА(СуммаСовсемБезНДС),
	|	МАКСИМУМ(ОъединятьСчетФактуры)
	|ПО
	|	ОБЩИЕ,
	|	ПорядокОтраженияПоДатам,
	|	СчетФактураДокумент,
	|	ИсправленныйСчетФактура,
	|	Исправление";
	
	Если ПараметрыОтчета.ГруппироватьПоКонтрагентам И Не СтандартнаяФорма Тогда
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "ПО
	               |	ОБЩИЕ,", "ПО
	               |	ОБЩИЕ, Контрагент, ");
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "УПОРЯДОЧИТЬ ПО", "УПОРЯДОЧИТЬ ПО Продавец, ");
	КонецЕсли;
	
	Возврат Запрос.Выполнить();
	
КонецФункции

Функция ПолучитьЗаписиДополнительныхЛистов(СписокОрганизаций, ПараметрыОтчета, СписокСчетовФактур, СтандартнаяФорма)
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	
	УстановитьПараметрыЗапросаКнигиПокупок(ПараметрыОтчета, Запрос, СписокОрганизаций, СтандартнаяФорма);
	
	// Определим документы корректировки реализации.
	ТекстОрганизацияЯвляетсяПоставщиком = УчетНДСПереопределяемый.ТекстЗапросаСчетаФактурыПолученныеГдеОрганизацияЯвляетсяПоставщиком(
												Запрос, 
												СписокОрганизаций, 
												КонецДня(ПараметрыОтчета.КонецПериода));
	Запрос.Текст = "
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ТаблицаОрганизацияЯвляетсяПоставщиком.СчетФактура,
	|	ТаблицаОрганизацияЯвляетсяПоставщиком.Организация,
	|	ТаблицаОрганизацияЯвляетсяПоставщиком.ГоловнаяОрганизация,
	|	ТаблицаОрганизацияЯвляетсяПоставщиком.ЭтоКорректировкаРеализации
	|
	|ПОМЕСТИТЬ ВТ_ТаблицаОрганизацияЯвляетсяПоставщиком
	|ИЗ
	|	(" + ТекстОрганизацияЯвляетсяПоставщиком + ") КАК ТаблицаОрганизацияЯвляетсяПоставщиком
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	СчетФактура,
	|	ГоловнаяОрганизация
	|";
	
	Запрос.Выполнить();
	
	// Определим счетам-фактуры, которые являются исправлением в книге покупок.
	ТекстСчетаФактурыИсправленияКнигиПокупок = УчетНДСПереопределяемый.ТекстЗапросаСчетаФактурыИсправленияКнигиПокупок(
														Запрос,
														СписокОрганизаций,
														КонецДня(ПараметрыОтчета.КонецПериода));
	
	Запрос.Текст = "
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ТаблицаСчетаФактурыИсправления.СчетФактура,
	|	ТаблицаСчетаФактурыИсправления.Организация,
	|	ТаблицаСчетаФактурыИсправления.ГоловнаяОрганизация,
	|	ТаблицаСчетаФактурыИсправления.ЭтоКорректировкаПоступления
	|
	|ПОМЕСТИТЬ ВТ_ТаблицаСчетаФактурыИсправления
	|ИЗ
	|	(" + ТекстСчетаФактурыИсправленияКнигиПокупок + ") КАК ТаблицаСчетаФактурыИсправления
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	СчетФактура,
	|	ГоловнаяОрганизация
	|";
														
	Запрос.Выполнить();
	
	Запрос.Текст = 
	 "ВЫБРАТЬ РАЗРЕШЕННЫЕ
	 |	НДСЗаписиКнигиПокупок.Период,
	 |	НДСЗаписиКнигиПокупок.Регистратор,
	 |	НДСЗаписиКнигиПокупок.Организация,
	 |	ВЫБОР
	 |		КОГДА НДСЗаписиКнигиПокупок.Организация.ГоловнаяОрганизация = ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)
	 |			ТОГДА НДСЗаписиКнигиПокупок.Организация
	 |		ИНАЧЕ НДСЗаписиКнигиПокупок.Организация.ГоловнаяОрганизация
	 |	КОНЕЦ КАК ГоловнаяОрганизация,
	 |	НДСЗаписиКнигиПокупок.Поставщик,
	 |	НДСЗаписиКнигиПокупок.СчетФактура,
	 |	НДСЗаписиКнигиПокупок.ВидЦенности,
	 |	НДСЗаписиКнигиПокупок.СтавкаНДС,
	 |	НДСЗаписиКнигиПокупок.ДатаОплаты,
	 |	НДСЗаписиКнигиПокупок.ДокументОплаты,
	 |	НДСЗаписиКнигиПокупок.Событие,
	 |	НДСЗаписиКнигиПокупок.ДатаСобытия,
	 |	НДСЗаписиКнигиПокупок.КорректируемыйПериод,
	 |	НДСЗаписиКнигиПокупок.ДоговорКонтрагента,
	 |	НДСЗаписиКнигиПокупок.ИсправленныйСчетФактура,
	 |	НДСЗаписиКнигиПокупок.СуммаБезНДС,
	 |	НДСЗаписиКнигиПокупок.НДС
	 |	
	 |ПОМЕСТИТЬ ВТ_НДСЗаписиКнигиПокупок
	 |ИЗ
	 |	РегистрНакопления.НДСЗаписиКнигиПокупок КАК НДСЗаписиКнигиПокупок
	 |ГДЕ
	 |	НДСЗаписиКнигиПокупок.Период МЕЖДУ &НачалоПериода И &КонецПериода
	 |	И НДСЗаписиКнигиПокупок.Организация В(&Организация)
	 |	И НДСЗаписиКнигиПокупок.ЗаписьДополнительногоЛиста = ИСТИНА
	 |	И ВЫБОР
	 |			КОГДА &ОтбиратьПоКонтрагенту = ИСТИНА
	 |				ТОГДА НДСЗаписиКнигиПокупок.Поставщик = &КонтрагентДляОтбора
	 |			ИНАЧЕ ИСТИНА
	 |		КОНЕЦ
	 |;
	 |
	 |ВЫБРАТЬ РАЗРЕШЕННЫЕ
	 |	ВЫБОР
	 |		КОГДА ЕСТЬNULL(ВТ_ТаблицаОрганизацияЯвляетсяПоставщиком.ЭтоКорректировкаРеализации, ЛОЖЬ)
	 |			ТОГДА НДСЗаписиКнигиПокупок.Организация
	 |		КОГДА НДСЗаписиКнигиПокупок.ВидЦенности В (&ВидыЦенностей_СобственныеСФ)
	 |				И ((НЕ НДСЗаписиКнигиПокупок.ВидЦенности В (&ВидыЦенностей_АвансыПолученные))
	 |					ИЛИ (НЕ &ВыводитьПокупателейПоАвансам))
	 |			ТОГДА НДСЗаписиКнигиПокупок.Организация
	 |		КОГДА НДСЗаписиКнигиПокупок.ВидЦенности В (&ВидыЦенностей_АвансыПолученные)
	 |			ТОГДА НДСЗаписиКнигиПокупок.Поставщик
	 |		КОГДА НДСЗаписиКнигиПокупок.ВидЦенности = ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.Возврат)
	 |				И (НЕ(ВТ_ТаблицаОрганизацияЯвляетсяПоставщиком.СчетФактура ЕСТЬ NULL))
	 |			ТОГДА НДСЗаписиКнигиПокупок.Организация
	 |		ИНАЧЕ НДСЗаписиКнигиПокупок.Поставщик
	 |	КОНЕЦ КАК Контрагент,
	 |	ВЫБОР
	 |		КОГДА ЕСТЬNULL(ВТ_ТаблицаОрганизацияЯвляетсяПоставщиком.ЭтоКорректировкаРеализации, ЛОЖЬ)
	 |			ТОГДА НДСЗаписиКнигиПокупок.Организация.ИНН
	 |		КОГДА НДСЗаписиКнигиПокупок.ВидЦенности В (&ВидыЦенностей_СобственныеСФ)
	 |				И ((НЕ НДСЗаписиКнигиПокупок.ВидЦенности В (&ВидыЦенностей_АвансыПолученные))
	 |					ИЛИ (НЕ &ВыводитьПокупателейПоАвансам))
	 |			ТОГДА НДСЗаписиКнигиПокупок.Организация.ИНН
	 |		КОГДА НДСЗаписиКнигиПокупок.ВидЦенности В (&ВидыЦенностей_АвансыПолученные)
	 |			ТОГДА НДСЗаписиКнигиПокупок.Поставщик.ИНН
	 |		КОГДА НДСЗаписиКнигиПокупок.ВидЦенности = ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.Возврат)
	 |				И (НЕ(ВТ_ТаблицаОрганизацияЯвляетсяПоставщиком.СчетФактура ЕСТЬ NULL))
	 |			ТОГДА НДСЗаписиКнигиПокупок.Организация.ИНН
	 |		ИНАЧЕ НДСЗаписиКнигиПокупок.Поставщик.ИНН
	 |	КОНЕЦ КАК ПродавецИНН,
	 |	ВЫБОР
	 |		КОГДА ЕСТЬNULL(ВТ_ТаблицаОрганизацияЯвляетсяПоставщиком.ЭтоКорректировкаРеализации, ЛОЖЬ)
	 |			ТОГДА НДСЗаписиКнигиПокупок.Организация.КПП
	 |		КОГДА НДСЗаписиКнигиПокупок.ВидЦенности В (&ВидыЦенностей_СобственныеСФ)
	 |				И ((НЕ НДСЗаписиКнигиПокупок.ВидЦенности В (&ВидыЦенностей_АвансыПолученные))
	 |					ИЛИ (НЕ &ВыводитьПокупателейПоАвансам))
	 |			ТОГДА НДСЗаписиКнигиПокупок.Организация.КПП
	 |		КОГДА НДСЗаписиКнигиПокупок.ВидЦенности В (&ВидыЦенностей_АвансыПолученные)
	 |			ТОГДА НДСЗаписиКнигиПокупок.Поставщик.КПП
	 |		КОГДА НДСЗаписиКнигиПокупок.ВидЦенности = ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.Возврат)
	 |				И (НЕ(ВТ_ТаблицаОрганизацияЯвляетсяПоставщиком.СчетФактура ЕСТЬ NULL))
	 |			ТОГДА НДСЗаписиКнигиПокупок.Организация.КПП
	 |		ИНАЧЕ НДСЗаписиКнигиПокупок.Поставщик.КПП
	 |	КОНЕЦ КАК ПродавецКПП,
	 |	ВЫБОР
	 |		КОГДА (НЕ НДСЗаписиКнигиПокупок.ИсправленныйСчетФактура В (&ПустыеДокументыИсправления))
	 |			ТОГДА НДСЗаписиКнигиПокупок.ИсправленныйСчетФактура
	 |		ИНАЧЕ НДСЗаписиКнигиПокупок.СчетФактура
	 |	КОНЕЦ КАК СчетФактура,
	 |	НДСЗаписиКнигиПокупок.ДатаОплаты, // Определение даты оплаты сделано из исходных документов и перенесено в следующий запрос
	 |	НДСЗаписиКнигиПокупок.ДокументОплаты,
	 |	НАЧАЛОПЕРИОДА(ВЫБОР
	 |			КОГДА НДСЗаписиКнигиПокупок.СчетФактура.Дата >= ДАТАВРЕМЯ(2006, 1, 1)
	 |				ТОГДА НДСЗаписиКнигиПокупок.СчетФактура.Дата
	 |			КОГДА (НЕ НДСЗаписиКнигиПокупок.ДатаСобытия = ДАТАВРЕМЯ(1, 1, 1))
	 |				ТОГДА НДСЗаписиКнигиПокупок.ДатаСобытия
	 |			КОГДА (НЕ НДСЗаписиКнигиПокупок.ДатаОплаты = ДАТАВРЕМЯ(1, 1, 1))
	 |				ТОГДА НДСЗаписиКнигиПокупок.ДатаОплаты
	 |			ИНАЧЕ НДСЗаписиКнигиПокупок.СчетФактура.Дата
	 |		КОНЕЦ, ДЕНЬ) КАК ПорядокОтраженияПоДатам,
	 |	СУММА(ЕСТЬNULL(НДСЗаписиКнигиПокупок.СуммаБезНДС, 0) + ЕСТЬNULL(НДСЗаписиКнигиПокупок.НДС, 0)) КАК ВсегоПокупок,
	 |	СУММА(ВЫБОР
	 |			КОГДА НДСЗаписиКнигиПокупок.СтавкаНДС В (&СтавкиНДС18)
	 |					И (НЕ НДСЗаписиКнигиПокупок.ВидЦенности В (&ВидыЦенностей_АвансыПолученные))
	 |				ТОГДА НДСЗаписиКнигиПокупок.СуммаБезНДС
	 |			ИНАЧЕ 0
	 |		КОНЕЦ) КАК СуммаБезНДС18,
	 |	СУММА(ВЫБОР
	 |			КОГДА НДСЗаписиКнигиПокупок.СтавкаНДС В (&СтавкиНДС18)
	 |				ТОГДА НДСЗаписиКнигиПокупок.НДС
	 |			ИНАЧЕ 0
	 |		КОНЕЦ) КАК НДС18,
	 |	СУММА(ВЫБОР
	 |			КОГДА НДСЗаписиКнигиПокупок.СтавкаНДС В (&СтавкиНДС10)
	 |					И (НЕ НДСЗаписиКнигиПокупок.ВидЦенности В (&ВидыЦенностей_АвансыПолученные))
	 |				ТОГДА НДСЗаписиКнигиПокупок.СуммаБезНДС
	 |			ИНАЧЕ 0
	 |		КОНЕЦ) КАК СуммаБезНДС10,
	 |	СУММА(ВЫБОР
	 |			КОГДА НДСЗаписиКнигиПокупок.СтавкаНДС В (&СтавкиНДС10)
	 |				ТОГДА НДСЗаписиКнигиПокупок.НДС
	 |			ИНАЧЕ 0
	 |		КОНЕЦ) КАК НДС10,
	 |	СУММА(ВЫБОР
	 |			КОГДА НДСЗаписиКнигиПокупок.СтавкаНДС = &СтавкаНДС0
	 |				ТОГДА НДСЗаписиКнигиПокупок.СуммаБезНДС + НДСЗаписиКнигиПокупок.НДС
	 |			ИНАЧЕ 0
	 |		КОНЕЦ) КАК НДС0,
	 |	СУММА(ВЫБОР
	 |			КОГДА НДСЗаписиКнигиПокупок.СтавкаНДС = &СтавкаБезНДС
	 |				ТОГДА НДСЗаписиКнигиПокупок.СуммаБезНДС + НДСЗаписиКнигиПокупок.НДС
	 |			ИНАЧЕ 0
	 |		КОНЕЦ) КАК СуммаСовсемБезНДС,
	 |	НДСЗаписиКнигиПокупок.Организация КАК Организация,
	 |	НДСЗаписиКнигиПокупок.ГоловнаяОрганизация КАК ГоловнаяОрганизация,
	 |	НДСЗаписиКнигиПокупок.СчетФактура.Дата КАК СчетФактураДата,
	 |	ВЫБОР
	 |		КОГДА ЕСТЬNULL(ВТ_ТаблицаОрганизацияЯвляетсяПоставщиком.ЭтоКорректировкаРеализации, ЛОЖЬ)
	 |			ТОГДА ПОДСТРОКА(НДСЗаписиКнигиПокупок.Организация.НаименованиеПолное, 1, 250)
	 |		КОГДА НДСЗаписиКнигиПокупок.ВидЦенности В (&ВидыЦенностей_СобственныеСФ)
	 |					И ((НЕ НДСЗаписиКнигиПокупок.ВидЦенности В (&ВидыЦенностей_АвансыПолученные))
	 |						ИЛИ (НЕ &ВыводитьПокупателейПоАвансам))
	 |				ИЛИ НДСЗаписиКнигиПокупок.ВидЦенности = ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.Возврат)
	 |					И (НЕ(ВТ_ТаблицаОрганизацияЯвляетсяПоставщиком.СчетФактура ЕСТЬ NULL))
	 |			ТОГДА ПОДСТРОКА(НДСЗаписиКнигиПокупок.Организация.НаименованиеПолное, 1, 250)
	 |		ИНАЧЕ ВЫБОР
	 |				КОГДА ПОДСТРОКА(НДСЗаписиКнигиПокупок.Поставщик.НаименованиеПолное, 1, 250) = """"
	 |					ТОГДА НДСЗаписиКнигиПокупок.Поставщик.Наименование
	 |				ИНАЧЕ ПОДСТРОКА(НДСЗаписиКнигиПокупок.Поставщик.НаименованиеПолное, 1, 250)
	 |			КОНЕЦ
	 |	КОНЕЦ КАК Продавец,
	 |	// ДатаОприходования - определение перенесено в таблицу счетов-фактур и назначается в следующем запросе
	 |	ВЫБОР
	 |		КОГДА НДСЗаписиКнигиПокупок.ВидЦенности В (&ВидыЦенностей_АвансыПолученные)
	 |			ТОГДА ИСТИНА
	 |		ИНАЧЕ ЛОЖЬ
	 |	КОНЕЦ КАК НаАванс,
	 |	ВЫБОР
	 |		КОГДА НДСЗаписиКнигиПокупок.ВидЦенности В (&ВидыЦенностей_АвансыПолученные)
	 |				ИЛИ НДСЗаписиКнигиПокупок.ВидЦенности В (&ВидыЦенностей_СуммовыеРазницы)
	 |			ТОГДА НДСЗаписиКнигиПокупок.СтавкаНДС
	 |		ИНАЧЕ НЕОПРЕДЕЛЕНО
	 |	КОНЕЦ КАК СтавкаНДС_Аванс,
	 |	ВЫБОР
	 |		КОГДА НДСЗаписиКнигиПокупок.ДоговорКонтрагента = ЗНАЧЕНИЕ(Справочник.ДоговорыКонтрагентов.ПустаяСсылка)
	 |			ТОГДА НЕОПРЕДЕЛЕНО
	 |		ИНАЧЕ НДСЗаписиКнигиПокупок.ДоговорКонтрагента
	 |	КОНЕЦ КАК ДоговорАванса,
	 |	НАЧАЛОПЕРИОДА(НДСЗаписиКнигиПокупок.КорректируемыйПериод, КВАРТАЛ) КАК НалоговыйПериод,
	 |	КОНЕЦПЕРИОДА(НДСЗаписиКнигиПокупок.КорректируемыйПериод, КВАРТАЛ) КАК КонецНалоговогоПериода,
	 |	НДСЗаписиКнигиПокупок.Период КАК ДатаОформления,
	 |	НДСЗаписиКнигиПокупок.ВидЦенности,
	 |	ВЫБОР
	 |		КОГДА (НЕ НДСЗаписиКнигиПокупок.ИсправленныйСчетФактура В (&ПустыеДокументыИсправления))
	 |			ТОГДА НДСЗаписиКнигиПокупок.ИсправленныйСчетФактура
	 |		ИНАЧЕ ВЫБОР
	 |				КОГДА НДСЗаписиКнигиПокупок.ВидЦенности В (&ВидыЦенностей_НалоговыйАгент)
	 |						И (НЕ НДСЗаписиКнигиПокупок.ДоговорКонтрагента = ЗНАЧЕНИЕ(Справочник.ДоговорыКонтрагентов.ПустаяСсылка))
	 |					ТОГДА НДСЗаписиКнигиПокупок.ДокументОплаты
	 |				ИНАЧЕ НДСЗаписиКнигиПокупок.СчетФактура
	 |			КОНЕЦ
	 |	КОНЕЦ КАК ДокументОснованиеСчетаФактуры,
	 |	ВЫБОР
	 |		КОГДА ЕСТЬNULL(ВТ_ТаблицаСчетаФактурыИсправления.ЭтоКорректировкаПоступления, ЛОЖЬ)
	 |				И НДСЗаписиКнигиПокупок.ИсправленныйСчетФактура В (&ПустыеДокументыИсправления)
	 |			ТОГДА ИСТИНА
	 |		КОГДА НЕ (ВТ_ТаблицаСчетаФактурыИсправления.СчетФактура ЕСТЬ NULL)
	 |				И НДСЗаписиКнигиПокупок.ИсправленныйСчетФактура В (&ПустыеДокументыИсправления)
	 |				И ЕСТЬNULL(НДСЗаписиКнигиПокупок.СуммаБезНДС, 0) + ЕСТЬNULL(НДСЗаписиКнигиПокупок.НДС, 0) < 0
	 |			ТОГДА ИСТИНА
	 |		КОГДА НЕ (ВТ_ТаблицаСчетаФактурыИсправления.СчетФактура ЕСТЬ NULL)
	 |				И (НЕ НДСЗаписиКнигиПокупок.ИсправленныйСчетФактура В (&ПустыеДокументыИсправления))
	 |				И ЕСТЬNULL(НДСЗаписиКнигиПокупок.СуммаБезНДС, 0) + ЕСТЬNULL(НДСЗаписиКнигиПокупок.НДС, 0) < 0
	 |			ТОГДА ИСТИНА
	 |		ИНАЧЕ ЛОЖЬ
	 |	КОНЕЦ КАК Исправление,
	 |	НДСЗаписиКнигиПокупок.ИсправленныйСчетФактура КАК ИсправленныйСчетФактура,
	 |	ВЫБОР
	 |		КОГДА НДСЗаписиКнигиПокупок.ДатаСобытия = ДАТАВРЕМЯ(1, 1, 1)
	 |			ТОГДА НДСЗаписиКнигиПокупок.СчетФактура.Дата
	 |		ИНАЧЕ НДСЗаписиКнигиПокупок.ДатаСобытия
	 |	КОНЕЦ КАК ДатаСобытия,
	 |	ВЫБОР
	 |		КОГДА НДСЗаписиКнигиПокупок.ВидЦенности В (&ВидыЦенностей_АвансыПолученные)
	 |			ТОГДА ИСТИНА
	 |		ИНАЧЕ ЛОЖЬ
	 |	КОНЕЦ КАК ЭтоАвансыПолученные
	 |ПОМЕСТИТЬ ЗаписиКнигиПокупок
	 |ИЗ
	 |	ВТ_НДСЗаписиКнигиПокупок КАК НДСЗаписиКнигиПокупок
	 |
	 |	ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ТаблицаОрганизацияЯвляетсяПоставщиком 
	 |		ПО НДСЗаписиКнигиПокупок.СчетФактура = ВТ_ТаблицаОрганизацияЯвляетсяПоставщиком.СчетФактура
	 |			И НДСЗаписиКнигиПокупок.ГоловнаяОрганизация = ВТ_ТаблицаОрганизацияЯвляетсяПоставщиком.ГоловнаяОрганизация
	 |
	 |	ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ТаблицаСчетаФактурыИсправления
	 |		ПО НДСЗаписиКнигиПокупок.Регистратор = ВТ_ТаблицаСчетаФактурыИсправления.СчетФактура
	 |			И НДСЗаписиКнигиПокупок.ГоловнаяОрганизация = ВТ_ТаблицаСчетаФактурыИсправления.ГоловнаяОрганизация
	 |
	 |СГРУППИРОВАТЬ ПО
	 |	НДСЗаписиКнигиПокупок.ДокументОплаты,
	 |	НДСЗаписиКнигиПокупок.Событие,
	 |	НДСЗаписиКнигиПокупок.Организация,
	 |	НДСЗаписиКнигиПокупок.ГоловнаяОрганизация,
	 |	НДСЗаписиКнигиПокупок.СчетФактура.Дата,
	 |	НДСЗаписиКнигиПокупок.Период,
	 |	НДСЗаписиКнигиПокупок.ВидЦенности,
	 |	НДСЗаписиКнигиПокупок.ИсправленныйСчетФактура,
	 |	НДСЗаписиКнигиПокупок.ДатаОплаты,
	 |	НАЧАЛОПЕРИОДА(ВЫБОР
	 |			КОГДА НДСЗаписиКнигиПокупок.СчетФактура.Дата >= ДАТАВРЕМЯ(2006, 1, 1)
	 |				ТОГДА НДСЗаписиКнигиПокупок.СчетФактура.Дата
	 |			КОГДА (НЕ НДСЗаписиКнигиПокупок.ДатаСобытия = ДАТАВРЕМЯ(1, 1, 1))
	 |				ТОГДА НДСЗаписиКнигиПокупок.ДатаСобытия
	 |			КОГДА (НЕ НДСЗаписиКнигиПокупок.ДатаОплаты = ДАТАВРЕМЯ(1, 1, 1))
	 |				ТОГДА НДСЗаписиКнигиПокупок.ДатаОплаты
	 |			ИНАЧЕ НДСЗаписиКнигиПокупок.СчетФактура.Дата
	 |		КОНЕЦ, ДЕНЬ),
	 |	ВЫБОР
	 |		КОГДА НДСЗаписиКнигиПокупок.ВидЦенности В (&ВидыЦенностей_АвансыПолученные)
	 |				ИЛИ НДСЗаписиКнигиПокупок.ВидЦенности В (&ВидыЦенностей_СуммовыеРазницы)
	 |			ТОГДА НДСЗаписиКнигиПокупок.СтавкаНДС
	 |		ИНАЧЕ НЕОПРЕДЕЛЕНО
	 |	КОНЕЦ,
	 |	ВЫБОР
	 |		КОГДА НДСЗаписиКнигиПокупок.ДоговорКонтрагента = ЗНАЧЕНИЕ(Справочник.ДоговорыКонтрагентов.ПустаяСсылка)
	 |			ТОГДА НЕОПРЕДЕЛЕНО
	 |		ИНАЧЕ НДСЗаписиКнигиПокупок.ДоговорКонтрагента
	 |	КОНЕЦ,
	 |	НАЧАЛОПЕРИОДА(НДСЗаписиКнигиПокупок.КорректируемыйПериод, КВАРТАЛ),
	 |	КОНЕЦПЕРИОДА(НДСЗаписиКнигиПокупок.КорректируемыйПериод, КВАРТАЛ),
	 |	ВЫБОР
	 |		КОГДА (НЕ НДСЗаписиКнигиПокупок.ИсправленныйСчетФактура В (&ПустыеДокументыИсправления))
	 |			ТОГДА НДСЗаписиКнигиПокупок.ИсправленныйСчетФактура
	 |		ИНАЧЕ НДСЗаписиКнигиПокупок.СчетФактура
	 |	КОНЕЦ,
	 |	ВЫБОР
	 |		КОГДА (НЕ НДСЗаписиКнигиПокупок.ИсправленныйСчетФактура В (&ПустыеДокументыИсправления))
	 |			ТОГДА НДСЗаписиКнигиПокупок.ИсправленныйСчетФактура
	 |		ИНАЧЕ ВЫБОР
	 |				КОГДА НДСЗаписиКнигиПокупок.ВидЦенности В (&ВидыЦенностей_НалоговыйАгент)
	 |						И (НЕ НДСЗаписиКнигиПокупок.ДоговорКонтрагента = ЗНАЧЕНИЕ(Справочник.ДоговорыКонтрагентов.ПустаяСсылка))
	 |					ТОГДА НДСЗаписиКнигиПокупок.ДокументОплаты
	 |				ИНАЧЕ НДСЗаписиКнигиПокупок.СчетФактура
	 |			КОНЕЦ
	 |	КОНЕЦ,
	 |	ВЫБОР
	 |		КОГДА ЕСТЬNULL(ВТ_ТаблицаСчетаФактурыИсправления.ЭтоКорректировкаПоступления, ЛОЖЬ)
	 |				И НДСЗаписиКнигиПокупок.ИсправленныйСчетФактура В (&ПустыеДокументыИсправления)
	 |			ТОГДА ИСТИНА
	 |		КОГДА НЕ (ВТ_ТаблицаСчетаФактурыИсправления.СчетФактура ЕСТЬ NULL)
	 |				И НДСЗаписиКнигиПокупок.ИсправленныйСчетФактура В (&ПустыеДокументыИсправления)
	 |				И ЕСТЬNULL(НДСЗаписиКнигиПокупок.СуммаБезНДС, 0) + ЕСТЬNULL(НДСЗаписиКнигиПокупок.НДС, 0) < 0
	 |			ТОГДА ИСТИНА
	 |		КОГДА НЕ (ВТ_ТаблицаСчетаФактурыИсправления.СчетФактура ЕСТЬ NULL)
	 |				И (НЕ НДСЗаписиКнигиПокупок.ИсправленныйСчетФактура В (&ПустыеДокументыИсправления))
	 |				И ЕСТЬNULL(НДСЗаписиКнигиПокупок.СуммаБезНДС, 0) + ЕСТЬNULL(НДСЗаписиКнигиПокупок.НДС, 0) < 0
	 |			ТОГДА ИСТИНА
	 |		ИНАЧЕ ЛОЖЬ
	 |	КОНЕЦ,
	 |	ВЫБОР
	 |		КОГДА ЕСТЬNULL(ВТ_ТаблицаОрганизацияЯвляетсяПоставщиком.ЭтоКорректировкаРеализации, ЛОЖЬ)
	 |			ТОГДА НДСЗаписиКнигиПокупок.Организация
	 |		КОГДА НДСЗаписиКнигиПокупок.ВидЦенности В (&ВидыЦенностей_СобственныеСФ)
	 |				И ((НЕ НДСЗаписиКнигиПокупок.ВидЦенности В (&ВидыЦенностей_АвансыПолученные))
	 |					ИЛИ (НЕ &ВыводитьПокупателейПоАвансам))
	 |			ТОГДА НДСЗаписиКнигиПокупок.Организация
	 |		КОГДА НДСЗаписиКнигиПокупок.ВидЦенности В (&ВидыЦенностей_АвансыПолученные)
	 |			ТОГДА НДСЗаписиКнигиПокупок.Поставщик
	 |		КОГДА НДСЗаписиКнигиПокупок.ВидЦенности = ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.Возврат)
	 |				И (НЕ(ВТ_ТаблицаОрганизацияЯвляетсяПоставщиком.СчетФактура ЕСТЬ NULL))
	 |			ТОГДА НДСЗаписиКнигиПокупок.Организация
	 |		ИНАЧЕ НДСЗаписиКнигиПокупок.Поставщик
	 |	КОНЕЦ,
	 |	ВЫБОР
	 |		КОГДА ЕСТЬNULL(ВТ_ТаблицаОрганизацияЯвляетсяПоставщиком.ЭтоКорректировкаРеализации, ЛОЖЬ)
	 |			ТОГДА НДСЗаписиКнигиПокупок.Организация.ИНН
	 |		КОГДА НДСЗаписиКнигиПокупок.ВидЦенности В (&ВидыЦенностей_СобственныеСФ)
	 |				И ((НЕ НДСЗаписиКнигиПокупок.ВидЦенности В (&ВидыЦенностей_АвансыПолученные))
	 |					ИЛИ (НЕ &ВыводитьПокупателейПоАвансам))
	 |			ТОГДА НДСЗаписиКнигиПокупок.Организация.ИНН
	 |		КОГДА НДСЗаписиКнигиПокупок.ВидЦенности В (&ВидыЦенностей_АвансыПолученные)
	 |			ТОГДА НДСЗаписиКнигиПокупок.Поставщик.ИНН
	 |		КОГДА НДСЗаписиКнигиПокупок.ВидЦенности = ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.Возврат)
	 |				И (НЕ(ВТ_ТаблицаОрганизацияЯвляетсяПоставщиком.СчетФактура ЕСТЬ NULL))
	 |			ТОГДА НДСЗаписиКнигиПокупок.Организация.ИНН
	 |		ИНАЧЕ НДСЗаписиКнигиПокупок.Поставщик.ИНН
	 |	КОНЕЦ,
	 |	ВЫБОР
	 |		КОГДА ЕСТЬNULL(ВТ_ТаблицаОрганизацияЯвляетсяПоставщиком.ЭтоКорректировкаРеализации, ЛОЖЬ)
	 |			ТОГДА НДСЗаписиКнигиПокупок.Организация.КПП
	 |		КОГДА НДСЗаписиКнигиПокупок.ВидЦенности В (&ВидыЦенностей_СобственныеСФ)
	 |				И ((НЕ НДСЗаписиКнигиПокупок.ВидЦенности В (&ВидыЦенностей_АвансыПолученные))
	 |					ИЛИ (НЕ &ВыводитьПокупателейПоАвансам))
	 |			ТОГДА НДСЗаписиКнигиПокупок.Организация.КПП
	 |		КОГДА НДСЗаписиКнигиПокупок.ВидЦенности В (&ВидыЦенностей_АвансыПолученные)
	 |			ТОГДА НДСЗаписиКнигиПокупок.Поставщик.КПП
	 |		КОГДА НДСЗаписиКнигиПокупок.ВидЦенности = ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.Возврат)
	 |				И (НЕ(ВТ_ТаблицаОрганизацияЯвляетсяПоставщиком.СчетФактура ЕСТЬ NULL))
	 |			ТОГДА НДСЗаписиКнигиПокупок.Организация.КПП
	 |		ИНАЧЕ НДСЗаписиКнигиПокупок.Поставщик.КПП
	 |	КОНЕЦ,
	 |	ВЫБОР
	 |		КОГДА ЕСТЬNULL(ВТ_ТаблицаОрганизацияЯвляетсяПоставщиком.ЭтоКорректировкаРеализации, ЛОЖЬ)
	 |			ТОГДА ПОДСТРОКА(НДСЗаписиКнигиПокупок.Организация.НаименованиеПолное, 1, 250)
	 |		КОГДА НДСЗаписиКнигиПокупок.ВидЦенности В (&ВидыЦенностей_СобственныеСФ)
	 |					И ((НЕ НДСЗаписиКнигиПокупок.ВидЦенности В (&ВидыЦенностей_АвансыПолученные))
	 |						ИЛИ (НЕ &ВыводитьПокупателейПоАвансам))
	 |				ИЛИ НДСЗаписиКнигиПокупок.ВидЦенности = ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.Возврат)
	 |					И (НЕ(ВТ_ТаблицаОрганизацияЯвляетсяПоставщиком.СчетФактура ЕСТЬ NULL))
	 |			ТОГДА ПОДСТРОКА(НДСЗаписиКнигиПокупок.Организация.НаименованиеПолное, 1, 250)
	 |		ИНАЧЕ ВЫБОР
	 |				КОГДА ПОДСТРОКА(НДСЗаписиКнигиПокупок.Поставщик.НаименованиеПолное, 1, 250) = """"
	 |					ТОГДА НДСЗаписиКнигиПокупок.Поставщик.Наименование
	 |				ИНАЧЕ ПОДСТРОКА(НДСЗаписиКнигиПокупок.Поставщик.НаименованиеПолное, 1, 250)
	 |			КОНЕЦ
	 |	КОНЕЦ,
	 |	ВЫБОР
	 |		КОГДА НДСЗаписиКнигиПокупок.ДатаСобытия = ДАТАВРЕМЯ(1, 1, 1)
	 |			ТОГДА НДСЗаписиКнигиПокупок.СчетФактура.Дата
	 |		ИНАЧЕ НДСЗаписиКнигиПокупок.ДатаСобытия
	 |	КОНЕЦ,
 	 |	ВЫБОР
	 |		КОГДА НДСЗаписиКнигиПокупок.ВидЦенности В (&ВидыЦенностей_АвансыПолученные)
	 |			ТОГДА ИСТИНА
	 |		ИНАЧЕ ЛОЖЬ
	 |	КОНЕЦ";	 
	 
	Если ПараметрыОтчета.ДополнительныеЛистыЗаТекущийПериод Тогда
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "Период МЕЖДУ &НачалоПериода И &КонецПериода", "Период >= &НачалоПериода");
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "ЗаписьДополнительногоЛиста = ИСТИНА", 
								"ЗаписьДополнительногоЛиста = ИСТИНА 
								|И НДСЗаписиКнигиПокупок.КорректируемыйПериод >= &НачалоПериода 
								|И НДСЗаписиКнигиПокупок.КорректируемыйПериод <= &КонецПериода");
	КонецЕсли;
	
	Если Не СтандартнаяФорма И ЗначениеЗаполнено(ПараметрыОтчета.КонтрагентДляОтбора) 
			И ПараметрыОтчета.КонтрагентДляОтбора.ЭтоГруппа Тогда
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "Поставщик = &КонтрагентДляОтбора", "Поставщик В ИЕРАРХИИ(&КонтрагентДляОтбора)");
	КонецЕсли;
	
	// Подставим полное наименование организации.
	Запрос.Текст = СтрЗаменить(Запрос.Текст,
								"НДСЗаписиКнигиПокупок.Организация.НаименованиеПолное",
								БухгалтерскийУчетВызовСервераПереопределяемый.ТекстЗапросаВариантНаименованияОрганизацииДляПечатныхФорм("НДСЗаписиКнигиПокупок.Организация"));
	
	Запрос.Выполнить();
	
	УчетНДСПереопределяемый.ПодготовитьВременнуюТаблицуСчетаФактурыПолученные(Запрос.МенеджерВременныхТаблиц, СписокОрганизаций, "ЗаписиКнигиПокупок");	
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	НАЧАЛОПЕРИОДА(ЗаписиКнигиПокупок.НалоговыйПериод, КВАРТАЛ) КАК НалоговыйПериод,
	|	ЗаписиКнигиПокупок.ПорядокОтраженияПоДатам КАК ПорядокОтраженияПоДатам,
	|	ЗаписиКнигиПокупок.Организация КАК Организация,
	|	ЗаписиКнигиПокупок.Продавец КАК Продавец,
	|	ЗаписиКнигиПокупок.Контрагент КАК Контрагент,
	|	ЗаписиКнигиПокупок.ПродавецИНН КАК ПродавецИНН,
	|	ЗаписиКнигиПокупок.ПродавецКПП КАК ПродавецКПП,
	|	ЗаписиКнигиПокупок.СчетФактура КАК СчетФактура,
	|	ВЫБОР
	|		КОГДА ЗаписиКнигиПокупок.ЭтоАвансыПолученные
	|			ТОГДА ЕСТЬNULL(ТаблицаСчетаФактурыДокументы.ДатаДокументаОснования, ЗаписиКнигиПокупок.СчетФактура.Дата)
	|		ИНАЧЕ ЗаписиКнигиПокупок.ДатаОплаты
	|	КОНЕЦ КАК ДатаОплаты,
	|	ЗаписиКнигиПокупок.СчетФактураДата КАК СчетФактураДата,
	|	ВЫБОР 
	|		КОГДА ЗаписиКнигиПокупок.ЭтоАвансыПолученные
	|			ТОГДА ЗаписиКнигиПокупок.ДатаОплаты
	|		ИНАЧЕ ЕСТЬNULL(ТаблицаСчетаФактурыДокументы.ДатаДокументаОснования, ЗаписиКнигиПокупок.СчетФактура.Дата)
	|	КОНЕЦ КАК ДатаОприходования,
	|	ЕСТЬNULL(ТаблицаСчетаФактурыДокументы.СчетФактураДокумент, ЗаписиКнигиПокупок.СчетФактура) КАК СчетФактураДокумент,
	|	ТаблицаСчетаФактурыДокументы.НомерСчетаФактуры КАК НомерСчетаФактуры,
	|	ТаблицаСчетаФактурыДокументы.ДатаСчетаФактуры КАК ДатаСчетаФактуры,
	|	ЗаписиКнигиПокупок.НаАванс КАК НаАванс,
	|	ЗаписиКнигиПокупок.СтавкаНДС_Аванс КАК СтавкаНДС_Аванс,
	|	ЗаписиКнигиПокупок.ДоговорАванса КАК ДоговорАванса,
	|	ЗаписиКнигиПокупок.ВсегоПокупок КАК ВсегоПокупок,
	|	ВЫБОР
	|		КОГДА ЗаписиКнигиПокупок.НаАванс
	|			ТОГДА 0
	|		ИНАЧЕ ЗаписиКнигиПокупок.СуммаБезНДС18
	|	КОНЕЦ КАК СуммаБезНДС18,
	|	ЗаписиКнигиПокупок.НДС18 КАК НДС18,
	|	ВЫБОР
	|		КОГДА ЗаписиКнигиПокупок.НаАванс
	|			ТОГДА 0
	|		ИНАЧЕ ЗаписиКнигиПокупок.СуммаБезНДС10
	|	КОНЕЦ КАК СуммаБезНДС10,
	|	ЗаписиКнигиПокупок.НДС10 КАК НДС10,
	|	ЗаписиКнигиПокупок.НДС0 КАК НДС0,
	|	ЗаписиКнигиПокупок.СуммаСовсемБезНДС КАК СуммаСовсемБезНДС,
	|	ЗаписиКнигиПокупок.ДатаОформления КАК ДатаОформления,
	|	ЗаписиКнигиПокупок.КонецНалоговогоПериода КАК КонецНалоговогоПериода,
	|	ЗаписиКнигиПокупок.ИсправленныйСчетФактура КАК ИсправленныйСчетФактура,
	|	ТаблицаСчетаФактурыДокументы.НомерИсправления КАК НомерИсправления,
	|	ТаблицаСчетаФактурыДокументы.ДатаИсправления КАК ДатаИсправления,
	|	ТаблицаСчетаФактурыДокументы.НомерКорректировки КАК НомерКорректировки,
	|	ТаблицаСчетаФактурыДокументы.ДатаКорректировки КАК ДатаКорректировки,
	|	ТаблицаСчетаФактурыДокументы.НомерИсправленияКорректировки КАК НомерИсправленияКорректировки,
	|	ТаблицаСчетаФактурыДокументы.ДатаИсправленияКорректировки КАК ДатаИсправленияКорректировки,
	|	ЕСТЬNULL(ТаблицаСчетаФактурыДокументы.ОбрабатыватьНомерДокумента, ЛОЖЬ) КАК ОбрабатыватьНомерДокумента,
	|	ЗаписиКнигиПокупок.ДатаСобытия КАК ДатаСобытия
	|ИЗ
	|	ЗаписиКнигиПокупок КАК ЗаписиКнигиПокупок
	|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	|			ТаблицаСчетаФактурыДокументы.СчетФактура КАК СчетФактура,
	|			ТаблицаСчетаФактурыДокументы.ГоловнаяОрганизация КАК ГоловнаяОрганизация,
	|			ТаблицаСчетаФактурыДокументы.ДоговорАванса КАК ДоговорАванса,
	|			ТаблицаСчетаФактурыДокументы.СтавкаНДСАванса КАК СтавкаНДСАванса,
	|			МИНИМУМ(ТаблицаСчетаФактурыДокументы.Приоритет) КАК МинимумПриоритет
	|		ИЗ
	|			ТаблицаСчетаФактурыДокументы КАК ТаблицаСчетаФактурыДокументы
	|		
	|		СГРУППИРОВАТЬ ПО
	|			ТаблицаСчетаФактурыДокументы.СчетФактура,
	|			ТаблицаСчетаФактурыДокументы.ГоловнаяОрганизация,
	|			ТаблицаСчетаФактурыДокументы.ДоговорАванса,
	|			ТаблицаСчетаФактурыДокументы.СтавкаНДСАванса,
	|			ТаблицаСчетаФактурыДокументы.ОбрабатыватьНомерДокумента) КАК Приоритеты
	|		ПО ЗаписиКнигиПокупок.ДокументОснованиеСчетаФактуры = Приоритеты.СчетФактура
	|			И ЗаписиКнигиПокупок.ГоловнаяОрганизация = Приоритеты.ГоловнаяОрганизация
	|			И ЗаписиКнигиПокупок.ДоговорАванса = Приоритеты.ДоговорАванса
	|			И ЗаписиКнигиПокупок.СтавкаНДС_Аванс = Приоритеты.СтавкаНДСАванса
	|		ЛЕВОЕ СОЕДИНЕНИЕ ТаблицаСчетаФактурыДокументы КАК ТаблицаСчетаФактурыДокументы
	|		ПО (Приоритеты.СчетФактура = ТаблицаСчетаФактурыДокументы.СчетФактура)
	|			И (Приоритеты.ГоловнаяОрганизация = ТаблицаСчетаФактурыДокументы.ГоловнаяОрганизация)
	|			И (Приоритеты.МинимумПриоритет = ТаблицаСчетаФактурыДокументы.Приоритет)
	|			И (Приоритеты.ДоговорАванса = ТаблицаСчетаФактурыДокументы.ДоговорАванса)
	|			И (Приоритеты.СтавкаНДСАванса = ТаблицаСчетаФактурыДокументы.СтавкаНДСАванса)
	|
	|УПОРЯДОЧИТЬ ПО
	|	НалоговыйПериод,
	|	ДатаСобытия,
	|	ДатаОформления,
	|	СчетФактура,
	|	ДатаОплаты
	|ИТОГИ
	|	МАКСИМУМ(Продавец),
	|	МИНИМУМ(СчетФактураДата),
	|	МИНИМУМ(ДатаОприходования),
	|	МАКСИМУМ(НаАванс),
	|	СУММА(ВсегоПокупок),
	|	СУММА(СуммаБезНДС18),
	|	СУММА(НДС18),
	|	СУММА(СуммаБезНДС10),
	|	СУММА(НДС10),
	|	СУММА(НДС0),
	|	СУММА(СуммаСовсемБезНДС),
	|	МАКСИМУМ(КонецНалоговогоПериода)
	|ПО
	|	НалоговыйПериод,
	|	ДатаОформления,
	|	СчетФактураДокумент,
	|	СтавкаНДС_Аванс,
	|	ДоговорАванса,
	|	ИсправленныйСчетФактура";
	
	Если ПараметрыОтчета.ГруппироватьПоКонтрагентам И Не СтандартнаяФорма Тогда
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "ПО
	               |	НалоговыйПериод,
	               |	ДатаОформления,", "ПО
	               |	НалоговыйПериод,
	               |	ДатаОформления, Контрагент, ");
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "УПОРЯДОЧИТЬ ПО", "УПОРЯДОЧИТЬ ПО Продавец, ");
	КонецЕсли;
	
	Возврат Запрос.Выполнить();

КонецФункции

Функция ПолучитьДополнительнуюИнформациюПоСФ(ПараметрыОтчета, СписокОрганизаций, СписокСчетовФактур, ЗаписьДополнительногоЛиста = Ложь, СоответствиеСтрокиДопИнформацииПоСчетуФактуре)

	// Определить частичные оплаты
	// Определяем полную сумму по СФ
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	НЕОПРЕДЕЛЕНО КАК СчетФактура,
	|	ВЫРАЗИТЬ(0 КАК ЧИСЛО(15, 2)) КАК СуммаСНДС
	|ГДЕ
	|	ЛОЖЬ
	|ИТОГИ ПО
	|	СчетФактура";
	
	Запрос.УстановитьПараметр("Организация",        СписокОрганизаций);
	Запрос.УстановитьПараметр("КонецПериода",       КонецДня(ПараметрыОтчета.КонецПериода));
	Запрос.УстановитьПараметр("СписокСчетовФактур", СписокСчетовФактур);

	// Виды ценностей с особым порядком распределения оплат - по НДС выплаченному в бюджет
	ВидыЦенностей_ОплатаПоНДС = Новый СписокЗначений;
	ВидыЦенностей_ОплатаПоНДС.Добавить(Перечисления.ВидыЦенностей.НалоговыйАгентАренда);
	ВидыЦенностей_ОплатаПоНДС.Добавить(Перечисления.ВидыЦенностей.НалоговыйАгентРеализацияИмущества);
	ВидыЦенностей_ОплатаПоНДС.Добавить(Перечисления.ВидыЦенностей.НалоговыйАгентИностранцы);
	ВидыЦенностей_ОплатаПоНДС.Добавить(Перечисления.ВидыЦенностей.НалоговыйАгентКомитент);
	ВидыЦенностей_ОплатаПоНДС.Добавить(Перечисления.ВидыЦенностей.ВнутреннееПотребление);
	ВидыЦенностей_ОплатаПоНДС.Добавить(Перечисления.ВидыЦенностей.СМРСобственнымиСилами);
	
	// Виды ценностей с особым порядком распределения оплат - оплата не определяется
	ВидыЦенностей_БезОплаты = Новый СписокЗначений;
	ВидыЦенностей_БезОплаты.Добавить(Перечисления.ВидыЦенностей.ТаможенныеПлатежи);
	ВидыЦенностей_БезОплаты.Добавить(Перечисления.ВидыЦенностей.ТаможенныеПлатежиОС);
	ВидыЦенностей_БезОплаты.Добавить(Перечисления.ВидыЦенностей.АвансыПолученные);
	ВидыЦенностей_БезОплаты.Добавить(Перечисления.ВидыЦенностей.АвансыПолученные0);
	ВидыЦенностей_БезОплаты.Добавить(Перечисления.ВидыЦенностей.Возврат);
	
	Запрос.УстановитьПараметр("ВидыЦенностей_ОплатаПоНДС", ВидыЦенностей_ОплатаПоНДС);
	Запрос.УстановитьПараметр("ВидыЦенностей_БезОплаты",   ВидыЦенностей_БезОплаты);
	
	ДополнительнаяИнформацияПоСФ = Запрос.Выполнить().Выгрузить(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	ДополнительнаяИнформацияПоСФ.Колонки.Добавить("IDСчетФактура", ОбщегоНазначенияБПКлиентСервер.ПолучитьОписаниеТиповСтроки(0));
	Для Каждого СтрокаИнформации Из ДополнительнаяИнформацияПоСФ.Строки Цикл
		Если ЗначениеЗаполнено(СтрокаИнформации.СчетФактура) Тогда
			СоответствиеСтрокиДопИнформацииПоСчетуФактуре.Вставить(Строка(СтрокаИнформации.СчетФактура.УникальныйИдентификатор()), СтрокаИнформации);
		КонецЕсли; 
	КонецЦикла; 
	ДополнительнаяИнформацияПоСФ.Колонки.Добавить("ГТДиСтрана", ОбщегоНазначенияБПКлиентСервер.ПолучитьОписаниеТиповСтроки(0));
	
	// Дополнение по ГТД и стране происхождения
	Запрос = Новый Запрос;
	
	ТекстНомераГТДпоСчетамФактурам = УчетНДСПереопределяемый.ТекстЗапросаНомераГТДпоСчетамФактурам(Запрос, СписокСчетовФактур);
	
	Запрос.Текст =
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ТаблицаТоваров.СчетФактура КАК СчетФактура,
	|	ТаблицаТоваров.СтранаПроисхождения.Код КАК СтранаПроисхождения,
	|	ТаблицаТоваров.НомерГТД,
	|	1 КАК КоличествоЭлементов
	|ИЗ
	|	(" + ТекстНомераГТДпоСчетамФактурам + ") КАК ТаблицаТоваров
	|ИТОГИ
	|	СУММА(КоличествоЭлементов)
	|ПО
	|	СчетФактура,
	|	СтранаПроисхождения";
	
	ГТДпоСФ =  Запрос.Выполнить().Выгрузить(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	Для Каждого СтрокаСФ Из ГТДпоСФ.Строки Цикл
		Если Не ЗначениеЗаполнено(СтрокаСФ.СчетФактура) Тогда
			Продолжить;
		КонецЕсли;
		
		СтрокиИнформацииСФ = СоответствиеСтрокиДопИнформацииПоСчетуФактуре[Строка(СтрокаСФ.СчетФактура.УникальныйИдентификатор())];
		Если СтрокиИнформацииСФ = Неопределено Тогда
			НоваяСтрокаИнформацииСФ  = ДополнительнаяИнформацияПоСФ.Строки.Добавить();
			НоваяРазвернутаяСтрокаИнформацииСФ = НоваяСтрокаИнформацииСФ.Строки.Добавить();
			НоваяСтрокаИнформацииСФ.СчетФактура = СтрокаСФ.СчетФактура;
			НоваяРазвернутаяСтрокаИнформацииСФ.СчетФактура = СтрокаСФ.СчетФактура;
			
			СоответствиеСтрокиДопИнформацииПоСчетуФактуре.Вставить(Строка(СтрокаСФ.СчетФактура.УникальныйИдентификатор()), НоваяСтрокаИнформацииСФ);
			
			СтрокиИнформацииСФ = НоваяСтрокаИнформацииСФ.Строки;
		Иначе
			СтрокиИнформацииСФ = СтрокиИнформацииСФ.Строки;
		КонецЕсли; 
		
		СтрокаИнформации = "";
		Для Каждого СтрокаСтраныПроисхождения Из СтрокаСФ.Строки Цикл
			СтрокаИнформации = СтрокаИнформации + ?(ПустаяСтрока(СтрокаИнформации), "", Символы.ПС) + СокрЛП(СтрокаСтраныПроисхождения.СтранаПроисхождения);
			ГТДРез = "";
			Для каждого СтрокаНомерГТД Из СтрокаСтраныПроисхождения.Строки Цикл
				ГТДРез = ГТДРез+ ?(ГТДРез = "","",";") + СокрЛП(СтрокаНомерГТД.НомерГТД)
			КонецЦикла; 
			
			СтрокаИнформации = СтрокаИнформации + ?(СтрокаИнформации = "","",?(ГТДРез = "","",";")) + ГТДРез;
		КонецЦикла; 
		
		Для Каждого СтрокаИнформацииСФ Из СтрокиИнформацииСФ Цикл
			СтрокаИнформацииСФ.ГТДиСтрана = СтрокаИнформации;
		КонецЦикла; 
		
	КонецЦикла; 
	
	// дополняем информацию датами оплаты,
    // отраженными в регистре записей книг отдельно от сумм
	ДополнительнаяИнформацияПоСФ.Колонки.Добавить("ДатыОплаты");

	Запрос = Новый Запрос;

	Запрос.Текст = 
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	НДСЗаписиКнигиПокупок.СчетФактура КАК СчетФактура,
		|	НДСЗаписиКнигиПокупок.ДатаОплаты
		|ИЗ
		|	РегистрНакопления.НДСЗаписиКнигиПокупок КАК НДСЗаписиКнигиПокупок
		|ГДЕ
		|	НДСЗаписиКнигиПокупок.Организация В (&Организация)
		|	И ВЫБОР
		|			КОГДА &ЗаписьДополнительногоЛиста
		|					И &ДополнительныеЛистыЗаТекущийПериод
		|				ТОГДА НДСЗаписиКнигиПокупок.Период >= &НачалоПериода
		|						И (НДСЗаписиКнигиПокупок.КорректируемыйПериод МЕЖДУ &НачалоПериода И &КонецПериода)
		|			ИНАЧЕ НДСЗаписиКнигиПокупок.Период МЕЖДУ &НачалоПериода И &КонецПериода
		|		КОНЕЦ
		|	И НДСЗаписиКнигиПокупок.СчетФактура В(&СписокСчетовФактур)
		|	И НДСЗаписиКнигиПокупок.СуммаБезНДС = 0
		|	И НДСЗаписиКнигиПокупок.НДС = 0
		|	И (НЕ НДСЗаписиКнигиПокупок.ДатаОплаты = ДАТАВРЕМЯ(1, 1, 1))
		|	И НДСЗаписиКнигиПокупок.ЗаписьДополнительногоЛиста = &ЗаписьДополнительногоЛиста
		|ИТОГИ ПО
		|	СчетФактура";
	
	Запрос.УстановитьПараметр("НачалоПериода", ПараметрыОтчета.НачалоПериода);
	Запрос.УстановитьПараметр("КонецПериода",  КонецДня(ПараметрыОтчета.КонецПериода));
	Запрос.УстановитьПараметр("Организация",   СписокОрганизаций);
	Запрос.УстановитьПараметр("ЗаписьДополнительногоЛиста", ЗаписьДополнительногоЛиста);
	Запрос.УстановитьПараметр("ДополнительныеЛистыЗаТекущийПериод", ПараметрыОтчета.ДополнительныеЛистыЗаТекущийПериод);
	Запрос.УстановитьПараметр("СписокСчетовФактур", СписокСчетовФактур);
	
	ДатыОплатСФ = Запрос.Выполнить().Выгрузить(ОбходРезультатаЗапроса.ПоГруппировкам);

	Для Каждого СтрокаСФ Из ДатыОплатСФ.Строки Цикл
		
		Если Не ЗначениеЗаполнено(СтрокаСФ.СчетФактура) Тогда
			Продолжить;
		КонецЕсли;
		
		СтрокиИнформацииСФ = СоответствиеСтрокиДопИнформацииПоСчетуФактуре[Строка(СтрокаСФ.СчетФактура.УникальныйИдентификатор())];
		Если СтрокиИнформацииСФ = Неопределено Тогда
			НоваяСтрокаИнформацииСФ  = ДополнительнаяИнформацияПоСФ.Строки.Добавить();
			НоваяРазвернутаяСтрокаИнформацииСФ = НоваяСтрокаИнформацииСФ.Строки.Добавить();
			НоваяСтрокаИнформацииСФ.СчетФактура = СтрокаСФ.СчетФактура;
			НоваяРазвернутаяСтрокаИнформацииСФ.СчетФактура = СтрокаСФ.СчетФактура;
			СоответствиеСтрокиДопИнформацииПоСчетуФактуре.Вставить(Строка(СтрокаСФ.СчетФактура.УникальныйИдентификатор()), НоваяСтрокаИнформацииСФ);
			СтрокиИнформацииСФ = НоваяСтрокаИнформацииСФ.Строки;
		Иначе
			СтрокиИнформацииСФ = СтрокиИнформацииСФ.Строки;
		КонецЕсли; 
		
		Для каждого СтрокаИнформацииСФ Из СтрокиИнформацииСФ Цикл
			СтрокаИнформацииСФ.ДатыОплаты = СтрокаСФ.Строки.ВыгрузитьКолонку("ДатаОплаты");;
		КонецЦикла; 
		
	КонецЦикла; 
	
	Возврат ДополнительнаяИнформацияПоСФ;
	
КонецФункции

Функция ПолучитьИтогиЗаПериод(СписокОрганизаций, НачалоПериода, КонецПериода, ДатаФормированияДопЛиста)
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	 "ВЫБРАТЬ РАЗРЕШЕННЫЕ
	 |	ЕСТЬNULL(СУММА(ИтогиКнигиПокупок.ВсегоПокупок), 0) КАК ВсегоПокупок,
	 |	ЕСТЬNULL(СУММА(ИтогиКнигиПокупок.СуммаБезНДС18), 0) КАК СуммаБезНДС18,
	 |	ЕСТЬNULL(СУММА(ИтогиКнигиПокупок.НДС18), 0) КАК НДС18,
	 |	ЕСТЬNULL(СУММА(ИтогиКнигиПокупок.СуммаБезНДС10), 0) КАК СуммаБезНДС10,
	 |	ЕСТЬNULL(СУММА(ИтогиКнигиПокупок.НДС10), 0) КАК НДС10,
	 |	ЕСТЬNULL(СУММА(ИтогиКнигиПокупок.НДС0), 0) КАК НДС0,
	 |	ЕСТЬNULL(СУММА(ИтогиКнигиПокупок.СуммаСовсемБезНДС), 0) КАК СуммаСовсемБезНДС
	 |ИЗ
	 |	(ВЫБРАТЬ
	 |		НДСЗаписиКнигиПокупокОбороты.СуммаБезНДСОборот + НДСЗаписиКнигиПокупокОбороты.НДСОборот КАК ВсегоПокупок,
	 |		ВЫБОР
	 |			КОГДА НДСЗаписиКнигиПокупокОбороты.СтавкаНДС В (&СтавкиНДС18)
	 |					И (НЕ НДСЗаписиКнигиПокупокОбороты.ВидЦенности В (&ВидыЦенностей_Авансы))
	 |				ТОГДА НДСЗаписиКнигиПокупокОбороты.СуммаБезНДСОборот
	 |			ИНАЧЕ 0
	 |		КОНЕЦ КАК СуммаБезНДС18,
	 |		ВЫБОР
	 |			КОГДА НДСЗаписиКнигиПокупокОбороты.СтавкаНДС В (&СтавкиНДС18)
	 |				ТОГДА НДСЗаписиКнигиПокупокОбороты.НДСОборот
	 |			ИНАЧЕ 0
	 |		КОНЕЦ КАК НДС18,
	 |		ВЫБОР
	 |			КОГДА НДСЗаписиКнигиПокупокОбороты.СтавкаНДС В (&СтавкиНДС10)
	 |					И (НЕ НДСЗаписиКнигиПокупокОбороты.ВидЦенности В (&ВидыЦенностей_Авансы))
	 |				ТОГДА НДСЗаписиКнигиПокупокОбороты.СуммаБезНДСОборот
	 |			ИНАЧЕ 0
	 |		КОНЕЦ КАК СуммаБезНДС10,
	 |		ВЫБОР
	 |			КОГДА НДСЗаписиКнигиПокупокОбороты.СтавкаНДС В (&СтавкиНДС10)
	 |				ТОГДА НДСЗаписиКнигиПокупокОбороты.НДСОборот
	 |			ИНАЧЕ 0
	 |		КОНЕЦ КАК НДС10,
	 |		ВЫБОР
	 |			КОГДА НДСЗаписиКнигиПокупокОбороты.СтавкаНДС = &СтавкаНДС0
	 |				ТОГДА НДСЗаписиКнигиПокупокОбороты.СуммаБезНДСОборот + НДСЗаписиКнигиПокупокОбороты.НДСОборот
	 |			ИНАЧЕ 0
	 |		КОНЕЦ КАК НДС0,
	 |		ВЫБОР
	 |			КОГДА НДСЗаписиКнигиПокупокОбороты.СтавкаНДС = &СтавкаБезНДС
	 |				ТОГДА НДСЗаписиКнигиПокупокОбороты.СуммаБезНДСОборот + НДСЗаписиКнигиПокупокОбороты.НДСОборот
	 |			ИНАЧЕ 0
	 |		КОНЕЦ КАК СуммаСовсемБезНДС
	 |	ИЗ
	 |		РегистрНакопления.НДСЗаписиКнигиПокупок.Обороты(
	 |			&НачалоПериода,
	 |			&КонецПериода,
	 |			Период,
	 |			Организация В (&Организация)
	 |			    И (НЕ ЗаписьДополнительногоЛиста = ИСТИНА)) КАК НДСЗаписиКнигиПокупокОбороты
	 |	
	 |	ОБЪЕДИНИТЬ ВСЕ
	 |	
	 |	ВЫБРАТЬ
	 |		НДСЗаписиКнигиПокупокОбороты.СуммаБезНДСОборот + НДСЗаписиКнигиПокупокОбороты.НДСОборот,
	 |		ВЫБОР
	 |			КОГДА НДСЗаписиКнигиПокупокОбороты.СтавкаНДС В (&СтавкиНДС18)
	 |					И (НЕ НДСЗаписиКнигиПокупокОбороты.ВидЦенности В (&ВидыЦенностей_Авансы))
	 |				ТОГДА НДСЗаписиКнигиПокупокОбороты.СуммаБезНДСОборот
	 |			ИНАЧЕ 0
	 |		КОНЕЦ,
	 |		ВЫБОР
	 |			КОГДА НДСЗаписиКнигиПокупокОбороты.СтавкаНДС В (&СтавкиНДС18)
	 |				ТОГДА НДСЗаписиКнигиПокупокОбороты.НДСОборот
	 |			ИНАЧЕ 0
	 |		КОНЕЦ,
	 |		ВЫБОР
	 |			КОГДА НДСЗаписиКнигиПокупокОбороты.СтавкаНДС В (&СтавкиНДС10)
	 |					И (НЕ НДСЗаписиКнигиПокупокОбороты.ВидЦенности В (&ВидыЦенностей_Авансы))
	 |				ТОГДА НДСЗаписиКнигиПокупокОбороты.СуммаБезНДСОборот
	 |			ИНАЧЕ 0
	 |		КОНЕЦ,
	 |		ВЫБОР
	 |			КОГДА НДСЗаписиКнигиПокупокОбороты.СтавкаНДС В (&СтавкиНДС10)
	 |				ТОГДА НДСЗаписиКнигиПокупокОбороты.НДСОборот
	 |			ИНАЧЕ 0
	 |		КОНЕЦ,
	 |		ВЫБОР
	 |			КОГДА НДСЗаписиКнигиПокупокОбороты.СтавкаНДС = &СтавкаНДС0
	 |				ТОГДА НДСЗаписиКнигиПокупокОбороты.СуммаБезНДСОборот + НДСЗаписиКнигиПокупокОбороты.НДСОборот
	 |			ИНАЧЕ 0
	 |		КОНЕЦ,
	 |		ВЫБОР
	 |			КОГДА НДСЗаписиКнигиПокупокОбороты.СтавкаНДС = &СтавкаБезНДС
	 |				ТОГДА НДСЗаписиКнигиПокупокОбороты.СуммаБезНДСОборот + НДСЗаписиКнигиПокупокОбороты.НДСОборот
	 |			ИНАЧЕ 0
	 |		КОНЕЦ
	 |	ИЗ
	 |		РегистрНакопления.НДСЗаписиКнигиПокупок.Обороты(
	 |			&НачалоПериода,
	 |			&МоментФормированияДопЛиста,
	 |			Период,
	 |			Организация В (&Организация)
	 |			    И ЗаписьДополнительногоЛиста = ИСТИНА
	 |			    И КорректируемыйПериод >= &НачалоПериода
	 |			    И КорректируемыйПериод <= &КонецПериода) КАК НДСЗаписиКнигиПокупокОбороты) КАК ИтогиКнигиПокупок";
	 
	Запрос.УстановитьПараметр("НачалоПериода"	, НачалоПериода);
	Запрос.УстановитьПараметр("КонецПериода"	, КонецДня(КонецПериода));
	Запрос.УстановитьПараметр("МоментФормированияДопЛиста",
		Новый Граница(НачалоДня(ДатаФормированияДопЛиста),ВидГраницы.Исключая));
	Запрос.УстановитьПараметр("Организация"	, СписокОрганизаций);

	СтавкиНДС18 = новый массив();
	СтавкиНДС18.Добавить(Перечисления.СтавкиНДС.НДС18);
	СтавкиНДС18.Добавить(Перечисления.СтавкиНДС.НДС18_118);

	СтавкиНДС10 = новый массив();
	СтавкиНДС10.Добавить(Перечисления.СтавкиНДС.НДС10);
	СтавкиНДС10.Добавить(Перечисления.СтавкиНДС.НДС10_110);

	СтавкаНДС0 = Перечисления.СтавкиНДС.НДС0;
	СтавкаБезНДС = Перечисления.СтавкиНДС.БезНДС;

	Запрос.УстановитьПараметр("СтавкиНДС18"	, СтавкиНДС18);
	Запрос.УстановитьПараметр("СтавкиНДС10"	, СтавкиНДС10);
	Запрос.УстановитьПараметр("СтавкаНДС0"	, СтавкаНДС0);
	Запрос.УстановитьПараметр("СтавкаБезНДС", СтавкаБезНДС);
	 
	ВидыЦенностей_Авансы = Новый Массив;
	ВидыЦенностей_Авансы.Добавить(Перечисления.ВидыЦенностей.АвансыПолученные);
	ВидыЦенностей_Авансы.Добавить(Перечисления.ВидыЦенностей.АвансыПолученные0);
	ВидыЦенностей_Авансы.Добавить(Перечисления.ВидыЦенностей.АвансыВыданные);
	
	Запрос.УстановитьПараметр("ВидыЦенностей_Авансы", ВидыЦенностей_Авансы);
	
	Запрос.Текст = СтрЗаменить(Запрос.Текст,"Месяц,", "Квартал,");
	
	Возврат Запрос.Выполнить();
	
КонецФункции

Процедура УстановитьПараметрыЗапросаКнигиПокупок(ПараметрыОтчета, Запрос, СписокОрганизаций, СтандартнаяФорма)
	
	Запрос.УстановитьПараметр("НачалоПериода", ПараметрыОтчета.НачалоПериода);
	Запрос.УстановитьПараметр("КонецПериода", КонецДня(ПараметрыОтчета.КонецПериода));
	Запрос.УстановитьПараметр("Организация", СписокОрганизаций);
	Запрос.УстановитьПараметр("ОтбиратьПоКонтрагенту",
		Не СтандартнаяФорма И ЗначениеЗаполнено(ПараметрыОтчета.КонтрагентДляОтбора));
	Запрос.УстановитьПараметр("КонтрагентДляОтбора", ПараметрыОтчета.КонтрагентДляОтбора);
	Запрос.УстановитьПараметр("ВыводитьПокупателейПоАвансам", ПараметрыОтчета.ВыводитьПокупателейПоАвансам);

	СтавкиНДС18 = новый массив();
	СтавкиНДС18.Добавить(Перечисления.СтавкиНДС.НДС18);
	СтавкиНДС18.Добавить(Перечисления.СтавкиНДС.НДС18_118);

	СтавкиНДС10 = новый массив();
	СтавкиНДС10.Добавить(Перечисления.СтавкиНДС.НДС10);
	СтавкиНДС10.Добавить(Перечисления.СтавкиНДС.НДС10_110);

	СтавкаНДС0 = Перечисления.СтавкиНДС.НДС0;
	СтавкаБезНДС = Перечисления.СтавкиНДС.БезНДС;

	Запрос.УстановитьПараметр("СтавкиНДС18"	, СтавкиНДС18);
	Запрос.УстановитьПараметр("СтавкиНДС10"	, СтавкиНДС10);
	Запрос.УстановитьПараметр("СтавкаНДС0"	, СтавкаНДС0);
	Запрос.УстановитьПараметр("СтавкаБезНДС", СтавкаБезНДС);
	 
	ВидыЦенностей_СобственныеСФ = новый массив;
	ВидыЦенностей_СобственныеСФ.Добавить(Перечисления.ВидыЦенностей.ВнутреннееПотребление);
	ВидыЦенностей_СобственныеСФ.Добавить(Перечисления.ВидыЦенностей.СМРСобственнымиСилами);
	ВидыЦенностей_СобственныеСФ.Добавить(Перечисления.ВидыЦенностей.АвансыПолученные);
	ВидыЦенностей_СобственныеСФ.Добавить(Перечисления.ВидыЦенностей.АвансыПолученные0);

	Запрос.УстановитьПараметр("ВидыЦенностей_СобственныеСФ" , ВидыЦенностей_СобственныеСФ);

	ВидыЦенностей_АвансыПолученные = новый массив;
	ВидыЦенностей_АвансыПолученные.Добавить(Перечисления.ВидыЦенностей.АвансыПолученные);
	ВидыЦенностей_АвансыПолученные.Добавить(Перечисления.ВидыЦенностей.АвансыПолученные0);
	ВидыЦенностей_АвансыПолученные.Добавить(Перечисления.ВидыЦенностей.АвансыВыданные);
	
	Запрос.УстановитьПараметр("ВидыЦенностей_АвансыПолученные", ВидыЦенностей_АвансыПолученные);
	Запрос.УстановитьПараметр("ВидыЦенностей_АвансыВыданные", Перечисления.ВидыЦенностей.АвансыВыданные);
	ВидыЦенностей_СуммовыеРазницы = новый массив;
	ВидыЦенностей_СуммовыеРазницы.Добавить(Перечисления.ВидыЦенностей.СуммыСвязанныеСРасчетамиПоОплате);
	
	Запрос.УстановитьПараметр("ВидыЦенностей_СуммовыеРазницы", ВидыЦенностей_СуммовыеРазницы);
	
	ВидыЦенностей_АвансСобственные = Новый Массив;
	ВидыЦенностей_АвансСобственные.Добавить(Перечисления.ВидыЦенностей.АвансыПолученные);
	ВидыЦенностей_АвансСобственные.Добавить(Перечисления.ВидыЦенностей.АвансыПолученные0);
	
	Запрос.УстановитьПараметр("ВидыЦенностей_АвансСобственные"	, ВидыЦенностей_АвансСобственные);
	
	ВидыЦенностей_НалоговыйАгент = Новый Массив;
	ВидыЦенностей_НалоговыйАгент.Добавить(Перечисления.ВидыЦенностей.НалоговыйАгентАренда);
	ВидыЦенностей_НалоговыйАгент.Добавить(Перечисления.ВидыЦенностей.НалоговыйАгентИностранцы);
	ВидыЦенностей_НалоговыйАгент.Добавить(Перечисления.ВидыЦенностей.НалоговыйАгентРеализацияИмущества);

	Запрос.УстановитьПараметр("ВидыЦенностей_НалоговыйАгент", ВидыЦенностей_НалоговыйАгент);
	
	Запрос.УстановитьПараметр("ПустыеДокументыИсправления", УчетНДСПереопределяемый.ПолучитьМассивПустыхИсправленныхСчетовФактур());
	
КонецПроцедуры

Процедура ВывестиШапкуДопЛиста(ПараметрыОтчета, ТабличныйДокумент, Макет, ЗаписьКниги, НомерЛиста, СтандартнаяФорма)
	
	ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();

	Если СтандартнаяФорма Тогда
		Секция = Макет.ПолучитьОбласть("ШапкаИнформация");
		ТабличныйДокумент.Вывести(Секция);
	КонецЕсли;

	Секция = Макет.ПолучитьОбласть("Шапка");
	Если ПараметрыОтчета.ДополнительныеЛистыЗаТекущийПериод Тогда
		Секция.Параметры.НомерЛиста = НомерЛиста;
	КонецЕсли;
	Секция.Параметры.УстановленныйОтбор = "";
	Секция.Параметры.Период = ПредставлениеПериода(
		ЗаписьКниги.НалоговыйПериод, КонецДня(ЗаписьКниги.КонецНалоговогоПериода), "ФП = Истина");
	СведенияОбОрганизации = БухгалтерскийУчетВызовСервераПереопределяемый.СведенияОЮрФизЛице(ПараметрыОтчета.Организация);
	НазваниеОрганизации = ОбщегоНазначенияБПВызовСервера.ОписаниеОрганизации(СведенияОбОрганизации, "НаименованиеДляПечатныхФорм");;
	Секция.Параметры.НазваниеОрганизации = НазваниеОрганизации;
	Секция.Параметры.ИННКППОрганизации = "" + ПараметрыОтчета.Организация.ИНН 
		+ ?(НЕ ЗначениеЗаполнено(ПараметрыОтчета.Организация.КПП), "", ("/" + ПараметрыОтчета.Организация.КПП));
	Секция.Параметры.ДатаСоставления = Формат(ЗаписьКниги.ДатаОформления, "ДФ=dd.MM.yyyy");

	Если Не СтандартнаяФорма И ЗначениеЗаполнено(ПараметрыОтчета.КонтрагентДляОтбора) Тогда
		Секция.Параметры.УстановленныйОтбор = "Отбор: Контрагент " 
			+ ?(ПараметрыОтчета.КонтрагентДляОтбора.ЭтоГруппа, "в группе ", "= ") + ПараметрыОтчета.КонтрагентДляОтбора;
	КонецЕсли;
	ТабличныйДокумент.Вывести(Секция);
	
КонецПроцедуры

Процедура ЗаполнитьСтрокуКнигиПокупок(Секция, ЗаписьКниги, СоответствиеСтрокиДопИнформацииПоСчетуФактуре, ПараметрыОтчета)

	Секция.Параметры.Заполнить(ЗаписьКниги.Строки[0]);
	Секция.Параметры.ВсегоПокупок = 	ЗаписьКниги.ВсегоПокупок;
	Секция.Параметры.СуммаБезНДС18 = 	ЗаписьКниги.СуммаБезНДС18;
	Секция.Параметры.НДС18 = 			ЗаписьКниги.НДС18;
	Секция.Параметры.СуммаБезНДС10 = 	ЗаписьКниги.СуммаБезНДС10;
	Секция.Параметры.НДС10 = 			ЗаписьКниги.НДС10;
	Секция.Параметры.НДС0 = 			ЗаписьКниги.НДС0;
	Секция.Параметры.СуммаСовсемБезНДС= ЗаписьКниги.СуммаСовсемБезНДС;
	Если ЗначениеЗаполнено(ЗаписьКниги.СчетФактураДокумент) Тогда
		Если ЗаписьКниги.ОъединятьСчетФактуры = Истина Тогда
			Секция.Параметры.СчетФактура = Новый СписокЗначений;
		Иначе
			Секция.Параметры.СчетФактура = ЗаписьКниги.СчетФактураДокумент;
		КонецЕсли;
	КонецЕсли;
	
	ДатаНомер = ОпределитьДатуИНомерСФ(ЗаписьКниги.Строки[0], Секция, ПараметрыОтчета);
	Секция.Параметры.ДатаНомер = ДатаНомер;
	
	НомерДатаИсправления = ОпределитьНомерИДатуИсправленногоСФ(ЗаписьКниги.Строки[0], Секция, ПараметрыОтчета);
	Секция.Параметры.НомерДатаИсправления = НомерДатаИсправления;

	НомерДатаКорректировки = ОпределитьНомерИДатуКорректировочногоСФ(ЗаписьКниги.Строки[0], Секция, ПараметрыОтчета);
	Секция.Параметры.НомерДатаКорректировки = НомерДатаКорректировки;
	
	НомерДатаИсправленияКорректировки = ОпределитьНомерИДатуИсправленияКорректировочногоСФ(
		ЗаписьКниги.Строки[0], Секция, ПараметрыОтчета);
	Секция.Параметры.НомерДатаИсправленияКорректировки = НомерДатаИсправленияКорректировки;

	ТекстОплаты = "";
	ТекстДатаОприходования = "";
	СписокДатОплат = Новый СписокЗначений();
	СписокДатОприходования = Новый СписокЗначений();
	ТекстНомерГТД = "";
	
	СуммаСНДС = 0;
	
	Для Каждого СтрокаЗаписи Из ЗаписьКниги.Строки Цикл
		Если ЗначениеЗаполнено(СтрокаЗаписи.ДатаОплаты) Тогда
			Если СписокДатОплат.НайтиПоЗначению(Формат(СтрокаЗаписи.ДатаОплаты, "ДФ=dd.MM.yyyy")) = Неопределено тогда
				ТекстОплаты = ТекстОплаты + ?(НЕ ЗначениеЗаполнено(ТекстОплаты), "", ","+Символы.ПС)
					+ Формат(СтрокаЗаписи.ДатаОплаты, "ДФ=dd.MM.yyyy");
				СписокДатОплат.Добавить(Формат(СтрокаЗаписи.ДатаОплаты, "ДФ=dd.MM.yyyy"));
			КонецЕсли;
		КонецЕсли;
		Если ЗначениеЗаполнено(СтрокаЗаписи.ДатаОприходования) Тогда
			Если СписокДатОприходования.НайтиПоЗначению(Формат(СтрокаЗаписи.ДатаОприходования, "ДФ=dd.MM.yyyy")) = Неопределено тогда
				ТекстДатаОприходования = ТекстДатаОприходования + ?(Не ЗначениеЗаполнено(ТекстДатаОприходования), "", 
					","+Символы.ПС) + Формат(СтрокаЗаписи.ДатаОприходования, "ДФ=dd.MM.yyyy");
				СписокДатОприходования.Добавить(Формат(СтрокаЗаписи.ДатаОприходования, "ДФ=dd.MM.yyyy"));
			КонецЕсли;
		КонецЕсли;
		
		Если СтрокаЗаписи.ОъединятьСчетФактуры = Истина Тогда
			Секция.Параметры.СчетФактура.Добавить(СтрокаЗаписи.СчетФактураДокументРасшифровка);
		КонецЕсли;
	КонецЦикла;
	
	// ГТД и страна происхождения, дополнительные оплаты
	СчетаФактуры = ОбщегоНазначенияБПВызовСервера.УдалитьПовторяющиесяЭлементыМассива(ЗаписьКниги.Строки.ВыгрузитьКолонку("СчетФактура"));
	
	Для Каждого СчетФактура Из СчетаФактуры Цикл
		
		Если ЗначениеЗаполнено(СчетФактура) Тогда
			СтрокаДополнительнойИнформации = 
				СоответствиеСтрокиДопИнформацииПоСчетуФактуре[Строка(СчетФактура.УникальныйИдентификатор())];
			Если Не СтрокаДополнительнойИнформации = Неопределено 
				И Не СтрокаДополнительнойИнформации.Строки.Количество() = 0 Тогда
				СтрокаДополнительнойИнформации = СтрокаДополнительнойИнформации.Строки[0];
			Иначе
				СтрокаДополнительнойИнформации = Неопределено;
			КонецЕсли; 
		Иначе
			СтрокаДополнительнойИнформации = Неопределено;
		КонецЕсли;
		
		Если Не СтрокаДополнительнойИнформации = Неопределено Тогда
			Если СокрЛП(СтрокаДополнительнойИнформации.ГТДиСтрана) <> "" Тогда
				ТекстНомерГТД = ТекстНомерГТД + ?(ТекстНомерГТД = "", "", ", ") 
					+ СокрЛП(СтрокаДополнительнойИнформации.ГТДиСтрана);
			КонецЕсли;

			// Проверим наличие дополнительных дат оплат
			Если ТипЗнч(СтрокаДополнительнойИнформации.ДатыОплаты) = Тип("Массив") Тогда
				Для Каждого ТекущаяДатаОплаты Из СтрокаДополнительнойИнформации.ДатыОплаты Цикл
					Если СписокДатОплат.НайтиПоЗначению(Формат(ТекущаяДатаОплаты, "ДФ=dd.MM.yyyy")) = Неопределено тогда
						ТекстОплаты = ТекстОплаты + ?(ПустаяСтрока(ТекстОплаты), "", ","+Символы.ПС) 
							+ Формат(ТекущаяДатаОплаты, "ДФ=dd.MM.yyyy");
						СписокДатОплат.Добавить(Формат(ТекущаяДатаОплаты, "ДФ=dd.MM.yyyy"));
					КонецЕсли;
				КонецЦикла;
			КонецЕсли;
			
			Если ЗначениеЗаполнено(СтрокаДополнительнойИнформации.СуммаСНДС) Тогда
				СуммаСНДС = СуммаСНДС + СтрокаДополнительнойИнформации.СуммаСНДС;
			КонецЕсли;
		КонецЕсли;
		
	КонецЦикла;
	
	Секция.Параметры.ДатаОплаты = ТекстОплаты;
	Секция.Параметры.ДатаОприходования = ТекстДатаОприходования;
	Секция.Параметры.НомерГТД = ТекстНомерГТД;

КонецПроцедуры

Процедура ЗаполнитьСтрокуДополнительногоЛиста(Секция, ЗаписьКниги, СоответствиеСтрокиДопИнформацииПоСчетуФактуре, ПараметрыОтчета)
	
	СтрокаДополнительнойИнформации = Неопределено;
	ДатаНомер = ОпределитьДатуИНомерСФ(ЗаписьКниги.Строки[0], Секция, ПараметрыОтчета);
	
	НомерДатаИсправления = ОпределитьНомерИДатуИсправленногоСФ(ЗаписьКниги.Строки[0], Секция, ПараметрыОтчета);
	Секция.Параметры.НомерДатаИсправления = НомерДатаИсправления;

	НомерДатаКорректировки = ОпределитьНомерИДатуКорректировочногоСФ(ЗаписьКниги.Строки[0], Секция, ПараметрыОтчета);
	Секция.Параметры.НомерДатаКорректировки = НомерДатаКорректировки;
	
	НомерДатаИсправленияКорректировки = 
		ОпределитьНомерИДатуИсправленияКорректировочногоСФ(ЗаписьКниги.Строки[0], Секция, ПараметрыОтчета);
	Секция.Параметры.НомерДатаИсправленияКорректировки = НомерДатаИсправленияКорректировки;	

	Секция.Параметры.Заполнить(ЗаписьКниги);

	Секция.Параметры.Заполнить(ЗаписьКниги.Строки[0]);
	Секция.Параметры.ВсегоПокупок = 	ЗаписьКниги.ВсегоПокупок;
	Секция.Параметры.СуммаБезНДС18 = 	ЗаписьКниги.СуммаБезНДС18;
	Секция.Параметры.НДС18 = 			ЗаписьКниги.НДС18;
	Секция.Параметры.СуммаБезНДС10 = 	ЗаписьКниги.СуммаБезНДС10;
	Секция.Параметры.НДС10 = 			ЗаписьКниги.НДС10;
	Секция.Параметры.НДС0 = 			ЗаписьКниги.НДС0;
	Секция.Параметры.СуммаСовсемБезНДС= ЗаписьКниги.СуммаСовсемБезНДС;
	Если ЗначениеЗаполнено(ЗаписьКниги.Строки[0].СчетФактураДокумент) Тогда
		Секция.Параметры.СчетФактура = ЗаписьКниги.Строки[0].СчетФактураДокумент;
	КонецЕсли;

	Секция.Параметры.ДатаНомер = ДатаНомер;
	Секция.Параметры.НомерГТД = ?(СтрокаДополнительнойИнформации = Неопределено, "", СтрокаДополнительнойИнформации.ГТДиСтрана);

	ТекстОплаты = "";
	ТекстДатаОприходования = "";
	СписокДатОплат = Новый СписокЗначений();
	СписокДатОприходования = Новый СписокЗначений();
	ТекстНомерГТД = "";
	
	Для Каждого СтрокаЗаписи Из ЗаписьКниги.Строки Цикл
		Если ЗначениеЗаполнено(СтрокаЗаписи.ДатаОплаты) Тогда
			Если СписокДатОплат.НайтиПоЗначению(Формат(СтрокаЗаписи.ДатаОплаты, "ДФ=dd.MM.yyyy")) = Неопределено тогда
				ТекстОплаты = ТекстОплаты + ?(НЕ ЗначениеЗаполнено(ТекстОплаты), "", ","+Символы.ПС) 
					+ Формат(СтрокаЗаписи.ДатаОплаты, "ДФ=dd.MM.yyyy");
				СписокДатОплат.Добавить(Формат(СтрокаЗаписи.ДатаОплаты, "ДФ=dd.MM.yyyy"));
			КонецЕсли;
		КонецЕсли;
		Если ЗначениеЗаполнено(СтрокаЗаписи.ДатаОприходования) Тогда
			Если СписокДатОприходования.НайтиПоЗначению(Формат(СтрокаЗаписи.ДатаОприходования, "ДФ=dd.MM.yyyy")) = Неопределено тогда
				ТекстДатаОприходования = ТекстДатаОприходования + ?(Не ЗначениеЗаполнено(ТекстДатаОприходования), "", 
					","+Символы.ПС) + Формат(СтрокаЗаписи.ДатаОприходования, "ДФ=dd.MM.yyyy");
				СписокДатОприходования.Добавить(Формат(СтрокаЗаписи.ДатаОприходования, "ДФ=dd.MM.yyyy"));
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;

	// ГТД и страна происхождения, дополнительные оплаты
	СчетаФактуры = ОбщегоНазначенияБПВызовСервера.УдалитьПовторяющиесяЭлементыМассива(ЗаписьКниги.Строки.ВыгрузитьКолонку("СчетФактура"));
	
	Для Каждого СчетФактура из СчетаФактуры Цикл
		
		Если ЗначениеЗаполнено(СчетФактура) Тогда
			
			СтрокаДополнительнойИнформации = 
				СоответствиеСтрокиДопИнформацииПоСчетуФактуре[Строка(СчетФактура.УникальныйИдентификатор())];
			Если Не СтрокаДополнительнойИнформации = Неопределено 
				И Не СтрокаДополнительнойИнформации.Строки.Количество() = 0 Тогда
				СтрокаДополнительнойИнформации = СтрокаДополнительнойИнформации.Строки[0];
			Иначе
				СтрокаДополнительнойИнформации = Неопределено;
			КонецЕсли; 
			
		Иначе
			СтрокаДополнительнойИнформации = Неопределено;
		КонецЕсли;
		
		Если Не СтрокаДополнительнойИнформации = Неопределено Тогда
			
			Если СокрЛП(СтрокаДополнительнойИнформации.ГТДиСтрана) <> "" Тогда
				ТекстНомерГТД = ТекстНомерГТД + ?(ТекстНомерГТД = "", "", ";") 
					+ СокрЛП(СтрокаДополнительнойИнформации.ГТДиСтрана);
			КонецЕсли;

			// Проверим наличие дополнительных дат оплат
			Если ТипЗнч(СтрокаДополнительнойИнформации.ДатыОплаты) = Тип("Массив") Тогда
				Для Каждого ТекущаяДатаОплаты Из СтрокаДополнительнойИнформации.ДатыОплаты Цикл
					Если СписокДатОплат.НайтиПоЗначению(Формат(ТекущаяДатаОплаты, "ДФ=dd.MM.yyyy")) = Неопределено тогда
						ТекстОплаты = ТекстОплаты + ?(ПустаяСтрока(ТекстОплаты), "", ","+Символы.ПС) 
							+ Формат(ТекущаяДатаОплаты, "ДФ=dd.MM.yyyy");
						СписокДатОплат.Добавить(Формат(ТекущаяДатаОплаты, "ДФ=dd.MM.yyyy"));
					КонецЕсли;
				КонецЦикла;
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЦикла;

	Секция.Параметры.ДатаОплаты = ТекстОплаты;
	Секция.Параметры.ДатаОприходования = ТекстДатаОприходования;
	Секция.Параметры.НомерГТД = ТекстНомерГТД;
	
КонецПроцедуры

Процедура ВывестиПодвал(ПараметрыОтчета, ТабличныйДокумент, Макет)

	ОтветственныеЛица = ОбщегоНазначенияБПВызовСервера.ОтветственныеЛица(ПараметрыОтчета.Организация, ПараметрыОтчета.КонецПериода);
	Если ОбщегоНазначенияБПВызовСервераПовтИсп.ЭтоЮрЛицо(ПараметрыОтчета.Организация) Тогда
		ИмяОрг = "";
		Свидетельство = "";
	Иначе
		ИмяОрг = ОтветственныеЛица.РуководительПредставление;
		СведенияОЮрФизЛице = БухгалтерскийУчетВызовСервераПереопределяемый.СведенияОЮрФизЛице(ПараметрыОтчета.Организация);
		Свидетельство = СведенияОЮрФизЛице.Свидетельство;
	КонецЕсли;

	Секция = Макет.ПолучитьОбласть("Подвал");
	Секция.Параметры.ИмяРук        = ОтветственныеЛица.РуководительПредставление;
	Секция.Параметры.ИмяОрг        = ИмяОрг;
	Секция.Параметры.Свидетельство = Свидетельство;

	ТабличныйДокумент.Вывести(Секция);

КонецПроцедуры

Функция ОпределитьДатуИНомерСФ(ЗаписьКниги, Секция = Неопределено, ПараметрыОтчета)
		
	Если Не ЗначениеЗаполнено(ЗаписьКниги.СчетФактура) Тогда
		Возврат "";
	КонецЕсли;
	
	ДатаНомер = УчетНДСПереопределяемый.ОпределитьДатуИНомерСчетаФактурыДляПечати(ЗаписьКниги.СчетФактура, 
																				  ЗаписьКниги.НомерСчетаФактуры, 
																				  ЗаписьКниги.ДатаСчетаФактуры, 
																				  ЗаписьКниги.ОбрабатыватьНомерДокумента, 
																				  ЗаписьКниги.СчетФактураДокумент);
	
	Возврат ДатаНомер;
		
КонецФункции

Функция ОпределитьНомерИДатуКорректировочногоСФ(ЗаписьКниги, Секция = Неопределено, ПараметрыОтчета)
	
	Если ЗначениеЗаполнено(ЗаписьКниги.НомерКорректировки) И ЗначениеЗаполнено(ЗаписьКниги.ДатаКорректировки) Тогда
		НомерДата = "" + ЗаписьКниги.НомерКорректировки + ";" + Формат(ЗаписьКниги.ДатаКорректировки, "ДФ=dd.MM.yyyy");
	Иначе
		НомерДата = "";
	КонецЕсли;
	
	Возврат НомерДата;
	
КонецФункции

Функция ОпределитьНомерИДатуИсправленногоСФ(ЗаписьКниги, Секция = Неопределено, ПараметрыОтчета)

	Если ЗначениеЗаполнено(ЗаписьКниги.НомерИсправления) И ЗначениеЗаполнено(ЗаписьКниги.ДатаИсправления) Тогда
		НомерДата = "" + СокрЛП(ЗаписьКниги.НомерИсправления) + ";" + Формат(ЗаписьКниги.ДатаИсправления, "ДФ=dd.MM.yyyy") ;
	Иначе
		Возврат "";
	КонецЕсли;
	
	Возврат НомерДата;
	
КонецФункции

Функция ОпределитьНомерИДатуИсправленияКорректировочногоСФ(ЗаписьКниги, Секция = Неопределено, ПараметрыОтчета)
	
	Если ЗначениеЗаполнено(ЗаписьКниги.НомерИсправленияКорректировки) И ЗначениеЗаполнено(ЗаписьКниги.ДатаИсправленияКорректировки) Тогда
		НомерДата = "" + ЗаписьКниги.НомерИсправленияКорректировки 
			+ ";" + Формат(ЗаписьКниги.ДатаИсправленияКорректировки, "ДФ=dd.MM.yyyy");
	Иначе
		Возврат "";
	КонецЕсли;
	
	Возврат НомерДата;
	
КонецФункции

Функция ПроверитьНаличиеДопЛистов(СписокОрганизаций, НачалоПериода, КонецПериода)
	
	СтруктураПараметров = Новый Структура("ТекущийПериод, КорректируемыйПериод");
	СтруктураПараметров.ТекущийПериод = Ложь;
	СтруктураПараметров.КорректируемыйПериод = Ложь;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	1 КАК Порядок,
		|	НДСЗаписиКнигиПокупокОбороты.СчетФактура,
		|	НДСЗаписиКнигиПокупокОбороты.Поставщик,
		|	НДСЗаписиКнигиПокупокОбороты.СтавкаНДС,
		|	ВЫБОР
		|		КОГДА ЕСТЬNULL(СУММА(НДСЗаписиКнигиПокупокОбороты.СуммаБезНДСОборот + НДСЗаписиКнигиПокупокОбороты.НДСОборот), 0) <> 0
		|			ТОГДА ИСТИНА
		|		ИНАЧЕ ЛОЖЬ
		|	КОНЕЦ КАК ЕстьДопЛисты,
		|	НДСЗаписиКнигиПокупокОбороты.КорректируемыйПериод
		|ИЗ
		|	РегистрНакопления.НДСЗаписиКнигиПокупок.Обороты(
		|			&НачалоПериода,
		|			&КонецПериода,
		|			День,
		|			Организация В (&Организация)
		|				И ЗаписьДополнительногоЛиста = ИСТИНА) КАК НДСЗаписиКнигиПокупокОбороты
		|
		|СГРУППИРОВАТЬ ПО
		|	НДСЗаписиКнигиПокупокОбороты.СчетФактура,
		|	НДСЗаписиКнигиПокупокОбороты.Поставщик,
		|	НДСЗаписиКнигиПокупокОбороты.СтавкаНДС,
		|	НДСЗаписиКнигиПокупокОбороты.КорректируемыйПериод,
		|	НДСЗаписиКнигиПокупокОбороты.Период
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	2,
		|	НДСЗаписиКнигиПокупокОбороты.СчетФактура,
		|	НДСЗаписиКнигиПокупокОбороты.Поставщик,
		|	НДСЗаписиКнигиПокупокОбороты.СтавкаНДС,
		|	ВЫБОР
		|		КОГДА ЕСТЬNULL(СУММА(НДСЗаписиКнигиПокупокОбороты.СуммаБезНДСОборот + НДСЗаписиКнигиПокупокОбороты.НДСОборот), 0) <> 0
		|			ТОГДА ИСТИНА
		|		ИНАЧЕ ЛОЖЬ
		|	КОНЕЦ,
		|	&НачалоПериода
		|ИЗ
		|	РегистрНакопления.НДСЗаписиКнигиПокупок.Обороты(
		|			&НачалоПериода,
		|			,
		|			День,
		|			Организация В (&Организация)
		|				И ЗаписьДополнительногоЛиста = ИСТИНА
		|				И КорректируемыйПериод >= &НачалоПериода
		|				И КорректируемыйПериод <= &КонецПериода) КАК НДСЗаписиКнигиПокупокОбороты
		|
		|СГРУППИРОВАТЬ ПО
		|	НДСЗаписиКнигиПокупокОбороты.СчетФактура,
		|	НДСЗаписиКнигиПокупокОбороты.Поставщик,
		|	НДСЗаписиКнигиПокупокОбороты.СтавкаНДС,
		|	НДСЗаписиКнигиПокупокОбороты.Период";
				   
	Запрос.УстановитьПараметр("НачалоПериода"	, НачалоПериода);
	Запрос.УстановитьПараметр("КонецПериода"	, КонецДня(КонецПериода));
	Запрос.УстановитьПараметр("Организация"		, СписокОрганизаций);
	
	Результат = Запрос.Выполнить();
	Если Результат.Пустой() Тогда
		Возврат СтруктураПараметров;
	КонецЕсли;
	
	Результат = Результат.Выгрузить();
	
	Для Каждого СтрокаРезультата Из Результат Цикл
		Если СтрокаРезультата.Порядок = 1 И СтрокаРезультата.ЕстьДопЛисты Тогда 
			СтруктураПараметров.КорректируемыйПериод = Истина;
		ИначеЕсли СтрокаРезультата.ЕстьДопЛисты Тогда
			СтруктураПараметров.ТекущийПериод = Истина;
		КонецЕсли;
		Если СтруктураПараметров.КорректируемыйПериод И СтруктураПараметров.ТекущийПериод Тогда
			Прервать;
		КонецЕсли;
	КонецЦикла;
	
	Возврат СтруктураПараметров;
	
КонецФункции

