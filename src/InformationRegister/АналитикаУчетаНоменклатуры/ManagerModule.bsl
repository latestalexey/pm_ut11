#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда


///////////////////////////////////////////////////////////////////////////////
// ПРОГРАММНЫЙ ИНТЕРФЕЙС

// Функция получает элемент справочника - ключ аналитики учета номенклатураы.
//
// Параметры:
//	ПараметрыАналитики - Выборка или Структура с полями "Номенклатура, Характеристика, Склад".
//
// Возвращаемое значение:
//	СправочникСсылка.КлючиАналитикиУчетаНоменклатуры - Созданный элемент справочника
//
Функция ЗначениеКлючаАналитики(ПараметрыАналитики) Экспорт

	// В параметрах аналитики могут быть не все свойства
	СтруктураАналитики = Новый Структура("Номенклатура,Характеристика,Склад");
	ЗаполнитьЗначенияСвойств(СтруктураАналитики, ПараметрыАналитики);
	Если НЕ ЗначениеЗаполнено(СтруктураАналитики.Номенклатура)
	 И НЕ ЗначениеЗаполнено(СтруктураАналитики.Характеристика)
	 И НЕ ЗначениеЗаполнено(СтруктураАналитики.Склад) Тогда
		Возврат Неопределено;
	КонецЕсли; 
	
	МенеджерЗаписи = РегистрыСведений.АналитикаУчетаНоменклатуры.СоздатьМенеджерЗаписи();
	ЗаполнитьЗначенияСвойств(МенеджерЗаписи, ПараметрыАналитики, "Номенклатура, Характеристика, Склад");
	ПроверитьЗаполнениеПоляСклад(МенеджерЗаписи);

	МенеджерЗаписи.Прочитать();

	Если МенеджерЗаписи.Выбран() Тогда
		Результат = МенеджерЗаписи.КлючАналитики;
	Иначе
		Результат = СоздатьКлючАналитики(ПараметрыАналитики);
	КонецЕсли;

	Возврат Результат;

КонецФункции

// Функция получает элемент справочника - ключ аналитики учета.
//
// Параметры:
//	ПараметрыАналитики - Выборка или Структура  с полями "Номенклатура, Характеристика, Склад".
//
// Возвращаемое значение:
//	СправочникСсылка.КлючиАналитикиУчетаНоменклатуры - Созданный элемент справочника
//
Функция СоздатьКлючАналитики(ПараметрыАналитики) Экспорт

	// В параметрах аналитики могут быть не все свойства
	СтруктураАналитики = Новый Структура("Номенклатура,Характеристика,Склад");
	ЗаполнитьЗначенияСвойств(СтруктураАналитики, ПараметрыАналитики);
	Если НЕ ЗначениеЗаполнено(СтруктураАналитики.Номенклатура)
	 И НЕ ЗначениеЗаполнено(СтруктураАналитики.Характеристика)
	 И НЕ ЗначениеЗаполнено(СтруктураАналитики.Склад) Тогда
		Возврат Неопределено;
	КонецЕсли; 
	
	МенеджерЗаписи = РегистрыСведений.АналитикаУчетаНоменклатуры.СоздатьМенеджерЗаписи();
	ЗаполнитьЗначенияСвойств(МенеджерЗаписи, ПараметрыАналитики, "Номенклатура, Характеристика, Склад");
	ПроверитьЗаполнениеПоляСклад(МенеджерЗаписи);

	// Создание нового ключа аналитики.
	СправочникОбъект = Справочники.КлючиАналитикиУчетаНоменклатуры.СоздатьЭлемент();
	СправочникОбъект.Наименование = ПолучитьПолноеНаименованиеКлючаАналитики(МенеджерЗаписи);
	ЗаполнитьЗначенияСвойств(СправочникОбъект, ПараметрыАналитики, "Номенклатура, Характеристика, Склад");
	СправочникОбъект.Записать();

	Результат = СправочникОбъект.Ссылка;

	МенеджерЗаписи.КлючАналитики = Результат;
	МенеджерЗаписи.Записать(Ложь);

	Возврат Результат;

КонецФункции

///////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

///////////////////////////////////////////////////////////////////////////////
// Прочее

Функция ПолучитьПолноеНаименованиеКлючаАналитики(МенеджерЗаписи)

	Возврат СокрЛП(МенеджерЗаписи.Номенклатура) + "; " 
		+ ?(ЗначениеЗаполнено(МенеджерЗаписи.Характеристика), СокрЛП(МенеджерЗаписи.Характеристика) + "; ", "")
		+ СокрЛП(МенеджерЗаписи.Склад);

КонецФункции

Процедура ПроверитьЗаполнениеПоляСклад(МенеджерЗаписиАналитикаУчетаНоменклатуры)

	Если МенеджерЗаписиАналитикаУчетаНоменклатуры.Склад = Неопределено Тогда
		ВызватьИсключение НСтр("ru = 'Ошибочное значение парамера ""Склад""'");
	КонецЕсли;

КонецПроцедуры

#КонецЕсли