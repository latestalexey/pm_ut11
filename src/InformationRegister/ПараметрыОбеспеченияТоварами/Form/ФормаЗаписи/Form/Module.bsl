&НаКлиенте
Перем КэшированныеЗначения; //используется механизмом обработки изменения реквизитов ТЧ

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Запись.ИсходныйКлючЗаписи.Пустой() Тогда
		
		ХарактеристикиИспользуются = Справочники.Номенклатура.ХарактеристикиИспользуются(Запись.Номенклатура);
		Элементы.Характеристика.Доступность = ХарактеристикиИспользуются;

	КонецЕсли;
	
	Если Параметры.ЗначенияЗаполнения.Свойство("Склад") Тогда
		
		Элементы.Склад.Вид = ВидПоляФормы.ПолеНадписи;		
		
	КонецЕсли;
	
	Если Параметры.ЗначенияЗаполнения.Свойство("Номенклатура") Тогда
		
		Элементы.Номенклатура.Вид = ВидПоляФормы.ПолеНадписи;		
		
	КонецЕсли;
	
	УстановитьКонтекстноЗависимыеРеквизиты();
	
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
	ХарактеристикиИспользуются = Справочники.Номенклатура.ХарактеристикиИспользуются(Запись.Номенклатура);
	Элементы.Характеристика.Доступность = ХарактеристикиИспользуются;
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ ШАПКИ ФОРМЫ

&НаКлиенте
Процедура НоменклатураПриИзменении(Элемент)
	
	СтруктураДействий = Новый Структура;
	СтруктураДействий.Вставить("ПроверитьХарактеристикуПоВладельцу", Запись.Характеристика);

	СтруктураСтроки = Новый Структура;
	СтруктураСтроки.Вставить("Номенклатура", Запись.Номенклатура);
	СтруктураСтроки.Вставить("Характеристика", Запись.Характеристика);
	СтруктураСтроки.Вставить("ХарактеристикиИспользуются", ХарактеристикиИспользуются);
	
	ОбработкаТабличнойЧастиКлиент.ОбработатьСтрокуТЧ(СтруктураСтроки, СтруктураДействий, КэшированныеЗначения);

	ЗаполнитьЗначенияСвойств(Запись, СтруктураСтроки);
	
	ХарактеристикиИспользуются = СтруктураСтроки.ХарактеристикиИспользуются;
	Элементы.Характеристика.Доступность = ХарактеристикиИспользуются;
	
	УстановитьКонтекстноЗависимыеРеквизиты();
	
КонецПроцедуры

&НаКлиенте
Процедура ХарактеристикаПриИзменении(Элемент)
	
	УстановитьКонтекстноЗависимыеРеквизиты();
	
КонецПроцедуры

&НаКлиенте
Процедура СкладПриИзменении(Элемент)
	
	УстановитьКонтекстноЗависимыеРеквизиты();
	
КонецПроцедуры

&НаКлиенте
Процедура ПодразделениеПриИзменении(Элемент)
	
	УстановитьКонтекстноЗависимыеРеквизиты();
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
//Прочие процедуры и функции

&НаСервере
Функция ПолучитьУнаследованныеПараметры(Запись)
	
	Запрос = Новый Запрос();
	
	Результат = Новый Структура("ПорядокПримененияМетода, МетодУправления, ПорядокПримененияПодразделения, Подразделение");
	
	Запрос.Текст = "ВЫБРАТЬ РАЗРЕШЕННЫЕ
	               |	ЗНАЧЕНИЕ(Перечисление.МетодыУправленияЗапасами.ЗаказПодЗаказ) КАК МетодУправления,
	               |	ВЫРАЗИТЬ(&Склад КАК Справочник.Склады).Подразделение КАК Подразделение,
	               |	4 КАК ПорядокПрименения
	               |ПОМЕСТИТЬ ПараметрыОбеспечения
	               |
	               |ОБЪЕДИНИТЬ ВСЕ
	               |
	               |ВЫБРАТЬ
	               |	ПараметрыОбеспеченияТоварами.МетодУправления,
	               |	ПараметрыОбеспеченияТоварами.Подразделение,
	               |	3
	               |ИЗ
	               |	РегистрСведений.ПараметрыОбеспеченияТоварами КАК ПараметрыОбеспеченияТоварами
	               |ГДЕ
	               |	ПараметрыОбеспеченияТоварами.Номенклатура = ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка)
	               |	И ПараметрыОбеспеченияТоварами.Характеристика = ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка)
	               |	И ПараметрыОбеспеченияТоварами.Склад = &Склад
	               |	И &МинимальныйПорядокПрименения <= 3
	               |
	               |ОБЪЕДИНИТЬ ВСЕ
	               |
	               |ВЫБРАТЬ
	               |	ПараметрыОбеспеченияТоварами.МетодУправления,
	               |	ПараметрыОбеспеченияТоварами.Подразделение,
	               |	2
	               |ИЗ
	               |	РегистрСведений.ПараметрыОбеспеченияТоварами КАК ПараметрыОбеспеченияТоварами
	               |ГДЕ
	               |	ПараметрыОбеспеченияТоварами.Номенклатура = &Номенклатура
	               |	И ПараметрыОбеспеченияТоварами.Характеристика = ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка)
	               |	И ПараметрыОбеспеченияТоварами.Склад = &Склад
	               |	И &МинимальныйПорядокПрименения <= 2
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ ПЕРВЫЕ 1
	               |	ПараметрыОбеспечения.МетодУправления,
	               |	ПараметрыОбеспечения.ПорядокПрименения КАК ПорядокПримененияМетода
	               |ИЗ
	               |	ПараметрыОбеспечения КАК ПараметрыОбеспечения
	               |ГДЕ
	               |	НЕ ПараметрыОбеспечения.МетодУправления = ЗНАЧЕНИЕ(Перечисление.МетодыУправленияЗапасами.ПустаяСсылка)
	               |
	               |УПОРЯДОЧИТЬ ПО
	               |	ПараметрыОбеспечения.ПорядокПрименения
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ ПЕРВЫЕ 1
	               |	ПараметрыОбеспечения.Подразделение,
	               |	ПараметрыОбеспечения.ПорядокПрименения КАК ПорядокПримененияПодразделения
	               |ИЗ
	               |	ПараметрыОбеспечения КАК ПараметрыОбеспечения
	               |ГДЕ
	               |	НЕ ПараметрыОбеспечения.Подразделение = ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка)
	               |
	               |УПОРЯДОЧИТЬ ПО
	               |	ПараметрыОбеспечения.ПорядокПрименения";
				   
	Если ЗначениеЗаполнено(Запись.Характеристика) Тогда
		
		МинимальныйПорядокПрименения = 2;
		
	ИначеЕсли ЗначениеЗаполнено(Запись.Номенклатура) Тогда
		
		МинимальныйПорядокПрименения = 3;
		
	ИначеЕсли ЗначениеЗаполнено(Запись.Склад) Тогда
		
		МинимальныйПорядокПрименения = 4;

	Иначе 
		
		Возврат Результат;
		
	КонецЕсли;		
		
	Запрос.УстановитьПараметр("МинимальныйПорядокПрименения", 	МинимальныйПорядокПрименения);
	Запрос.УстановитьПараметр("Склад", 							Запись.Склад);
	Запрос.УстановитьПараметр("Номенклатура", 					Запись.Номенклатура);
	
	РезультатЗапроса = Запрос.ВыполнитьПакет();
	
	//Получаем действующий метод управления
	Выборка = РезультатЗапроса[1].Выбрать();
	Если Выборка.Следующий() Тогда
		
		ЗаполнитьЗначенияСвойств(Результат, Выборка);
		
	КонецЕсли;
	
	//Получаем действующее обеспечивающее подразделение
	Выборка = РезультатЗапроса[2].Выбрать();
	Если Выборка.Следующий() Тогда
		
		ЗаполнитьЗначенияСвойств(Результат, Выборка);
		
	КонецЕсли;
	
	Возврат Результат;	
	
КонецФункции //ПолучитьУнаследованныеПараметры()
	
&НаСервере
Процедура УстановитьКонтекстноЗависимыеРеквизиты()
	
	СкладУказан = ЗначениеЗаполнено(Запись.Склад);
	Элементы.МетодУправления.Видимость 	= СкладУказан; 
	Элементы.Подразделение.Видимость 	= СкладУказан; 
	Элементы.УнаследованноеПодразделение.Видимость = СкладУказан;
	
	Если Не СкладУказан Тогда
		
		Возврат;
		
	КонецЕсли;
	
	УнаследованныеПараметры = ПолучитьУнаследованныеПараметры(Запись);
	
	ПустойМетод = Перечисления.МетодыУправленияЗапасами.ПустаяСсылка();
	ЭлементПустогоЗначения = Элементы.МетодУправления.СписокВыбора.НайтиПоЗначению(ПустойМетод);
		
	Если УнаследованныеПараметры.ПорядокПримененияМетода = 4 И Не ЗначениеЗаполнено(Запись.Номенклатура) Тогда
		//Наследумый метод не имеет смысла
		Если Не ЭлементПустогоЗначения = Неопределено Тогда
			
			Элементы.МетодУправления.СписокВыбора.Удалить(ЭлементПустогоЗначения);
			
		КонецЕсли;
		
	Иначе
		
		Если ЭлементПустогоЗначения = Неопределено Тогда 
				
			ЭлементПустогоЗначения = Элементы.МетодУправления.СписокВыбора.Добавить(ПустойМетод);
				
		КонецЕсли;
	
		Если УнаследованныеПараметры.ПорядокПримененияМетода = 2 Тогда
		//Параметры унаследованы от номенклатуры		
			ЭлементПустогоЗначения.Представление = НСтр("ru = 'Как в целом для номенклатуры: '") + Строка(УнаследованныеПараметры.МетодУправления);
				
		ИначеЕсли УнаследованныеПараметры.ПорядокПримененияМетода = 3 Тогда
		//Параметры унаследованы от склада
			ЭлементПустогоЗначения.Представление = НСтр("ru = 'Как в целом для склада: '") + Строка(УнаследованныеПараметры.МетодУправления);
			
		ИначеЕсли УнаследованныеПараметры.ПорядокПримененияМетода = 4 Тогда
		//Параметры по умолчанию
			ЭлементПустогоЗначения.Представление = НСтр("ru = 'Как в целом для склада: (не установлен)'");
			
		КонецЕсли;
		
	КонецЕсли;
		
	Если УнаследованныеПараметры.ПорядокПримененияПодразделения = Неопределено ИЛИ ЗначениеЗаполнено(Запись.Подразделение) Тогда
	//Наследумый метод не имеет смысла
		Элементы.УнаследованноеПодразделение.Видимость = Ложь;
		
	Иначе
		
		Элементы.УнаследованноеПодразделение.Видимость = Истина;
		УнаследованноеПодразделение = УнаследованныеПараметры.Подразделение;
		
		Если УнаследованныеПараметры.ПорядокПримененияПодразделения = 2 Тогда
		//Параметры унаследованы от номенклатуры		
			Элементы.УнаследованноеПодразделение.Заголовок = НСтр("ru = 'Как в целом для номенклатуры'");
					
		ИначеЕсли УнаследованныеПараметры.ПорядокПримененияПодразделения = 3 Тогда
		//Параметры унаследованы от склада
			Элементы.УнаследованноеПодразделение.Заголовок = НСтр("ru = 'Как в целом для склада'");
			
		ИначеЕсли  УнаследованныеПараметры.ПорядокПримененияПодразделения = 4 Тогда		
		//Параметры унаследованы из справочника склады		
			Элементы.УнаследованноеПодразделение.Заголовок = НСтр("ru = 'Обеспечивается подразделением склада по умолчанию'");
			
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры //УстановитьКонтекстноЗависимыеРеквизиты()



