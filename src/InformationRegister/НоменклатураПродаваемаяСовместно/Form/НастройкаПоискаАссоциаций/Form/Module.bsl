////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Элементы.ДекорацияПериодПоискаАссоциацийОписание.Заголовок = ОписаниеНастройки(
		Константы.ПериодичностьДляАнализаНоменклатурыПродаваемойСовместно,
		Константы.КоличествоПериодовДляАнализаНоменклатурыПродаваемойСовместно
	);
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ ШАПКИ ФОРМЫ

&НаКлиенте
Процедура ПериодПриИзменении(Элемент)
	
	Элементы.ДекорацияПериодПоискаАссоциацийОписание.Заголовок = ОписаниеНастройки(
		Константы.ПериодичностьДляАнализаНоменклатурыПродаваемойСовместно,
		Константы.КоличествоПериодовДляАнализаНоменклатурыПродаваемойСовместно
	);
	
КонецПроцедуры

&НаКлиенте
Процедура КоличествоПериодовПриИзменении(Элемент)
	
	Элементы.ДекорацияПериодПоискаАссоциацийОписание.Заголовок = ОписаниеНастройки(
		Константы.ПериодичностьДляАнализаНоменклатурыПродаваемойСовместно,
		Константы.КоличествоПериодовДляАнализаНоменклатурыПродаваемойСовместно
	);

КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ КОМАНД ФОРМЫ

&НаКлиенте
Процедура НастроитьРасписание(Команда)
	
	Идентификатор = ПолучитьИдентификаторРегламетногоЗадания();
	
	Диалог = Новый ДиалогРасписанияРегламентногоЗадания(ПолучитьРасписаниеРегламентногоЗадания(Идентификатор));
	Если Диалог.ОткрытьМодально() Тогда
		УстановитьРасписаниеРегламентногоЗадания(Идентификатор, Диалог.Расписание);
	КонецЕсли;
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

////////////////////////////////////////////////////////////////////////////////
// Прочее

&НаСервереБезКонтекста
Функция ПолучитьИдентификаторРегламетногоЗадания()
	
	УстановитьПривилегированныйРежим(Истина);
	Возврат РегламентныеЗадания.НайтиПредопределенное(Метаданные.РегламентныеЗадания.ОбновлениеНоменклатурыПродаваемойСовместно).УникальныйИдентификатор;
	
КонецФункции

&НаКлиентеНаСервереБезКонтекста
Функция ОписаниеНастройки(Период, КоличествоПериодов, Подпериод = Неопределено)
	
	ПредставлениеНастройки = "";
	
	Если НЕ ЗначениеЗаполнено(КоличествоПериодов) ИЛИ НЕ ЗначениеЗаполнено(Период) Тогда
		
		Возврат ПредставлениеНастройки;
		
	КонецЕсли;
	
	ПредставлениеНастройки = НСтр("ru = 'По данным за период: '");
	
	ПараметрыПредметаИсчисления = "";
	
	Если Период = ПредопределенноеЗначение("Перечисление.Периодичность.День") Тогда
		
		ПараметрыПредметаИсчисления = НСтр("ru = 'предыдущий день, предыдущих дня, предыдущих дней, м,,,,, 0'");
		
	ИначеЕсли Период = ПредопределенноеЗначение("Перечисление.Периодичность.Неделя") Тогда
		
		ПараметрыПредметаИсчисления = НСтр("ru = 'предыдущая неделя, предыдущие недели, предыдущих недель, ж,,,,, 0'");
		
	ИначеЕсли Период = ПредопределенноеЗначение("Перечисление.Периодичность.Декада") Тогда
		
		ПараметрыПредметаИсчисления = НСтр("ru = 'предыдущая декада, предыдущие декады, предыдущих декад, ж,,,,, 0'");
		
	ИначеЕсли Период = ПредопределенноеЗначение("Перечисление.Периодичность.Месяц") Тогда
		
		ПараметрыПредметаИсчисления = НСтр("ru = 'предыдущий месяц, предыдущих месяца, предыдущих месяцев, м,,,,, 0'");
		
	ИначеЕсли Период = ПредопределенноеЗначение("Перечисление.Периодичность.Квартал") Тогда
		
		ПараметрыПредметаИсчисления = НСтр("ru = 'предыдущий квартал, предыдущих квартала, предыдущих кварталов, м,,,,, 0'");
		
	ИначеЕсли Период = ПредопределенноеЗначение("Перечисление.Периодичность.Полугодие") Тогда
		
		ПараметрыПредметаИсчисления = НСтр("ru = 'предыдущее полугодие, предыдущих полугодия, предыдущих полугодий, с,,,,, 0'");
		
	ИначеЕсли Период = ПредопределенноеЗначение("Перечисление.Периодичность.Год") Тогда
		
		ПараметрыПредметаИсчисления = НСтр("ru = 'предыдущий год, предыдущих года, предыдущих лет, м,,,,, 0'");
		
	Иначе
		
		ПараметрыПредметаИсчисления = "";
		
	КонецЕсли;
	
	ПредставлениеНастройки = ПредставлениеНастройки + НРег(ЧислоПрописью(КоличествоПериодов,, ПараметрыПредметаИсчисления));
	
	Возврат ПредставлениеНастройки;
	
КонецФункции

&НаСервереБезКонтекста
Функция УстановитьРасписаниеРегламентногоЗадания(Идентификатор, Знач Расписание)
	
	РегламентныеЗаданияСервер.УстановитьРасписаниеРегламентногоЗадания(Идентификатор, Расписание);
	
КонецФункции

&НаСервереБезКонтекста
Функция ПолучитьРасписаниеРегламентногоЗадания(Идентификатор)
	
	Возврат РегламентныеЗаданияСервер.ПолучитьРасписаниеРегламентногоЗадания(Идентификатор);
	
КонецФункции