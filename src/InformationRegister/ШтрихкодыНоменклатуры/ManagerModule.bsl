#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда


////////////////////////////////////////////////////////////////////////////////
// ПРОГРАММНЫЙ ИНТЕРФЕЙС

// Функция возращает соответствие с данными штрихкодов
//
// Параметры:
//  Штрихкоды    - Массив штрихкодов
//
// Возвращаемое значение:
//  Соответствие с данными штрихкодов
//
Функция ПолучитьДанныеПоШтрихкодам(Штрихкоды) Экспорт

	ДанныеПоШтрихкодам = Новый Соответствие;

	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ШтрихкодыНоменклатуры.Штрихкод                     КАК Штрихкод,
	|	ШтрихкодыНоменклатуры.Номенклатура                 КАК Номенклатура,
	|	ШтрихкодыНоменклатуры.Номенклатура.ТипНоменклатуры КАК ТипНоменклатуры,
	|	ШтрихкодыНоменклатуры.Характеристика               КАК Характеристика,
	|	ШтрихкодыНоменклатуры.Упаковка                          КАК Упаковка,
	|	ЕСТЬNULL(ШтрихкодыНоменклатуры.Упаковка.Коэффициент, 1) КАК Коэффициент,
	|	ВЫБОР
	|		КОГДА ШтрихкодыНоменклатуры.Номенклатура.ИспользованиеХарактеристик = ЗНАЧЕНИЕ(Перечисление.ВариантыИспользованияХарактеристикНоменклатуры.НеИспользовать)
	|			ТОГДА ЛОЖЬ
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ КАК ХарактеристикиИспользуются
	|ИЗ
	|	РегистрСведений.ШтрихкодыНоменклатуры КАК ШтрихкодыНоменклатуры
	|ГДЕ
	|	ШтрихкодыНоменклатуры.Штрихкод В(&МассивШтрихкодов)";

	МассивШтрихкодов = Новый Массив;

	Для Каждого ТекШтрихкод Из Штрихкоды Цикл
		МассивШтрихкодов.Добавить(ТекШтрихкод);
		ДанныеПоШтрихкодам.Вставить(ВРег(ТекШтрихкод), Новый Структура);
	КонецЦикла;

	Запрос.УстановитьПараметр("МассивШтрихкодов", МассивШтрихкодов);

	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		ТекДанные = ДанныеПоШтрихкодам[ВРег(СокрЛП(Выборка.Штрихкод))];
		ТекДанные.Вставить("Номенклатура",               Выборка.Номенклатура);
		ТекДанные.Вставить("ТипНоменклатуры",            Выборка.ТипНоменклатуры);
		ТекДанные.Вставить("Характеристика",             Выборка.Характеристика);
		ТекДанные.Вставить("Упаковка",                   Выборка.Упаковка);
		ТекДанные.Вставить("ХарактеристикиИспользуются", Выборка.ХарактеристикиИспользуются);
		ТекДанные.Вставить("Коэффициент",                Выборка.Коэффициент);
	КонецЦикла;
	
	Возврат ДанныеПоШтрихкодам;

КонецФункции

// Функция вычисляет контрольный символ кода EAN
//
// Параметры:
//  Штрихкод     - штрихкод (без контрольной цифры)
//  Тип          - тип штрихкода: 13 - EAN13, 8 - EAN8
//
// Возвращаемое значение:
//  Контрольный символ штрихкода
//
Функция КонтрольныйСимволEAN(ШтрихКод, Тип) Экспорт

	Четн   = 0;
	Нечетн = 0;

	КоличествоИтераций = ?(Тип = 13, 6, 4);

	Для Индекс = 1 По КоличествоИтераций Цикл
		Если (Тип = 8) и (Индекс = КоличествоИтераций) Тогда
		Иначе
			Четн   = Четн   + Сред(ШтрихКод, 2 * Индекс, 1);
		КонецЕсли;
		Нечетн = Нечетн + Сред(ШтрихКод, 2 * Индекс - 1, 1);
	КонецЦикла;

	Если Тип = 13 Тогда
		Четн = Четн * 3;
	Иначе
		Нечетн = Нечетн * 3;
	КонецЕсли;

	КонтЦифра = 10 - (Четн + Нечетн) % 10;

	Возврат ?(КонтЦифра = 10, "0", Строка(КонтЦифра));

КонецФункции

// Функция возвращает максимальное значение штрихкода числом
//
// Параметры:
//  ПрефиксШтучногоТовара       - Строка
//  ПрефиксВнутреннегоШтрихкода - Строка
//
// Возвращаемое значение:
//  Число
//
Функция ПолучитьМаксимальноеЗначениеКодаШтрихкодаЧислом(ПрефиксШтучногоТовара = "0", ПрефиксВнутреннегоШтрихкода = "00") Экспорт

	Запрос1 = Новый Запрос("
	|ВЫБРАТЬ
	|	МАКСИМУМ(ПОДСТРОКА(ШтрихкодыНоменклатуры.Штрихкод, 5, 8)) КАК Код
	|ИЗ
	|	РегистрСведений.ШтрихкодыНоменклатуры КАК ШтрихкодыНоменклатуры
	|ГДЕ
	|	ШтрихкодыНоменклатуры.Штрихкод ПОДОБНО ""2" + ПрефиксШтучногоТовара + ПрефиксВнутреннегоШтрихкода + "_________""
	|");

	Выборка1 = Запрос1.Выполнить().Выбрать();
	Выборка1.Следующий();
	
	//{ ООО "АСТЭК" Разработчик: Бурыкин Александр  15.11.2013
	  Запрос2 = Новый Запрос("
	|ВЫБРАТЬ
	|	МАКСИМУМ(ПОДСТРОКА(ШтрихкодыГрузовыхМест.ШтрихкодГрузовогоМеста, 5, 8)) КАК Код
	|ИЗ
	|	РегистрСведений.акШтрихкодыГрузовыхМест КАК ШтрихкодыГрузовыхМест
	|ГДЕ
	|	ШтрихкодыГрузовыхМест.ШтрихкодГрузовогоМеста ПОДОБНО ""2" + ПрефиксШтучногоТовара + ПрефиксВнутреннегоШтрихкода + "_________""
	|");

	Выборка2 = Запрос2.Выполнить().Выбрать();
	Выборка2.Следующий();

	Если  Выборка1.Код > Выборка2.Код Тогда
		ВыборкаРезультат = Выборка1.Код;
	Иначе
		ВыборкаРезультат = Выборка2.Код;
	КонецЕсли;
	
	//}
	
	
	ОписаниеТипаЧисла = Новый ОписаниеТипов("Число");
	ЗначениеКодаЧислом = ОписаниеТипаЧисла.ПривестиЗначение(ВыборкаРезультат);//.Код);
	
	Возврат ЗначениеКодаЧислом;

КонецФункции

// Функция возвращает максимальное значение штрихкода числом
//
// Параметры:
//  ПрефиксВесовогоТовара       - Строка
//
// Возвращаемое значение:
//  Число
//
Функция ПолучитьМаксимальноеЗначениеКодаВесовогоШтрихкодаЧислом(ПрефиксВесовогоТовара = "1") Экспорт

	Запрос = Новый Запрос("
	|ВЫБРАТЬ
	|	МАКСИМУМ(ПОДСТРОКА(ШтрихкодыНоменклатуры.Штрихкод, 3, 5)) КАК Код
	|ИЗ
	|	РегистрСведений.ШтрихкодыНоменклатуры КАК ШтрихкодыНоменклатуры
	|ГДЕ
	|	ШтрихкодыНоменклатуры.Штрихкод ПОДОБНО &ФорматШтрихкода
	|");

	Запрос.УстановитьПараметр("ФорматШтрихкода", РегистрыСведений.ШтрихкодыНоменклатуры.ФорматВесовогоШтрихкода(ПрефиксВесовогоТовара));
	
	Выборка = Запрос.Выполнить().Выбрать();
	Выборка.Следующий();
	
	ОписаниеТипаЧисла = Новый ОписаниеТипов("Число");
	ЗначениеКодаЧислом = ОписаниеТипаЧисла.ПривестиЗначение(Выборка.Код);
	
	Возврат ЗначениеКодаЧислом;

КонецФункции

// Функция возвращает штрихкод, создаваемый из кода с префиксами и контрольным символом
//
// Параметры:
//  Код                         - Число
//  ПрефиксШтучногоТовара       - Строка
//  ПрефиксВнутреннегоШтрихкода - Строка
//
// Возвращаемое значение:
//  Строка
//
Функция ПолучитьШтрихкодПоКоду(Код, ПрефиксШтучногоТовара = "0", ПрефиксВнутреннегоШтрихкода = "00") Экспорт

	Штрихкод = "2" + ПрефиксШтучногоТовара + ПрефиксВнутреннегоШтрихкода + Формат(Код, "ЧЦ=8; ЧВН=; ЧГ=");
	Штрихкод = Штрихкод + КонтрольныйСимволEAN(ШтрихКод, 13);

	Возврат Штрихкод;

КонецФункции

// Функция возвращает штрихкод весового товара,
// создаваемый из кода с префиксом весового товара и контрольным символом
//
// Параметры:
//  Код                   - Код
//  ПрефиксВесовогоТовара - Строка
//
// Возвращаемое значение:
//  Строка
//
Функция ПолучитьШтрихкодВесовогоТовараПоКоду(Код, ПрефиксВесовогоТовара = "1") Экспорт

	Штрихкод = "2" + ПрефиксВесовогоТовара + Формат(Код, "ЧЦ=5; ЧВН=; ЧГ=") + "00000";
	Штрихкод = Штрихкод + КонтрольныйСимволEAN(ШтрихКод, 13);

	Возврат Штрихкод;

КонецФункции

// Функция осуществляет формирование штрихкода EAN13 для
// штучного товара
//
// Параметры:
//  ПрефиксШтучногоТовара       – Строка
//  ПрефиксВнутреннегоШтрихкода – Строка
//  МаксимальныйКод             – Число
//
// Возвращаемое значение:
//  Строка
//
Функция СформироватьШтрихкодEAN13(ПрефиксШтучногоТовара = "0", ПрефиксВнутреннегоШтрихкода = "00", МаксимальныйКод = 99999999) Экспорт

	Код = Мин(ПолучитьМаксимальноеЗначениеКодаШтрихкодаЧислом(ПрефиксШтучногоТовара, ПрефиксВнутреннегоШтрихкода) + 1, МаксимальныйКод);

	Возврат ПолучитьШтрихкодПоКоду(Код, ПрефиксШтучногоТовара, ПрефиксВнутреннегоШтрихкода);

КонецФункции

// Функция осуществляет формирование штрихкода EAN13 для
// весового товара
//
// Параметры:
//  ПрефиксВесовогоТовара       – Строка
//  МаксимальныйКод             – Число
//
// Возвращаемое значение:
//  Строка
//
Функция СформироватьШтрихкодВесовогоТовараEAN13(ПрефиксВесовогоТовара = "1", МаксимальныйКод = 99999) Экспорт

	Код = Мин(ПолучитьМаксимальноеЗначениеКодаВесовогоШтрихкодаЧислом(ПрефиксВесовогоТовара) + 1, МаксимальныйКод);

	Возврат ПолучитьШтрихкодВесовогоТовараПоКоду(Код, ПрефиксВесовогоТовара);

КонецФункции

// Процедура выполняет преобразование штрихкода, полученного
// из весов с печатью этикеток в штрихкод, пригодный для поиска в БД.
//
// Параметры:
//  ТекШтрихкод               – Строка
//  ПрефиксыВесовыхШтрихкодов – Массив
//
Процедура ПреобразоватьВесовойШтрихкод(ТекШтрихкод, ПрефиксыВесовыхШтрихкодов) Экспорт
	
	Если СтрДлина(ТекШтрихкод.Штрихкод) = 13 // EAN13
		И Лев(ТекШтрихкод.Штрихкод, 1) = "2" // Внутренний штрихкод
		И ПрефиксыВесовыхШтрихкодов.Найти(Сред(ТекШтрихкод.Штрихкод, 2, 1)) <> Неопределено Тогда // Найден префикс весового товара
		
		// Штрихкод является весовым, выполняем преобразование.
		// Формат весового штрихкода: 2 + П + ЧЧЧЧЧ + BBBBB + K
		// Где,
		//  П     - Префикс весового товара
		//  ЧЧЧЧЧ - код весового товара
		//  BBBBB - Вес
		//  К     - Контрольное число
		
		ВнутреннийШтрихкод12 = Лев(ТекШтрихкод.Штрихкод, 7) + "00000";
		ВнутреннийШтрихкод13 = ВнутреннийШтрихкод12 + РегистрыСведений.ШтрихкодыНоменклатуры.КонтрольныйСимволEAN(ВнутреннийШтрихкод12, 13);
		Вес = Число(Сред(ТекШтрихкод.Штрихкод, 8, 2)) + Число(Сред(ТекШтрихкод.Штрихкод, 10, 3)) / 1000;
		
		ТекШтрихкод.Штрихкод   = ВнутреннийШтрихкод13;
		ТекШтрихкод.Количество = ТекШтрихкод.Количество * Вес;
		
	КонецЕсли;
	
КонецПроцедуры

// Функция возвращает префикс весового товара применяемого для генерации штрихкода.
// Используется при выгрузке в весы с печатью этикеток
//
// Параметры:
//  ПодключаемоеОборудованиеСсылка – Ссылка
//
// Возвращаемое значение:
//  Строка
//
Функция ПрефиксВесовогоТовара(ПодключаемоеОборудованиеСсылка) Экспорт
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	ЕСТЬNULL(ПодключаемоеОборудование.ПравилоОбмена.ПрефиксВесовогоТовара, 0) КАК ПрефиксВесовогоТовара
	|ИЗ
	|	Справочник.ПодключаемоеОборудование КАК ПодключаемоеОборудование
	|ГДЕ
	|	ПодключаемоеОборудование.Ссылка = &Ссылка");
	
	Запрос.УстановитьПараметр("Ссылка", ПодключаемоеОборудованиеСсылка);
	
	Результат = Запрос.Выполнить();
	Выборка = Результат.Выбрать();
	
	Если Выборка.Следующий() Тогда
		ПрефиксВесовогоТовара = Выборка.ПрефиксВесовогоТовара;
		Если ЗначениеЗаполнено(ПрефиксВесовогоТовара) Тогда
			Возврат Строка(Выборка.ПрефиксВесовогоТовара);
		Иначе
			Возврат "1";
		КонецЕсли;
	Иначе
		Возврат "1";
	КонецЕсли;
	
КонецФункции

// Функция возвращает префикс весового товара применяемого для генерации штрихкода.
// Используется при выгрузке в весы с печатью этикеток
//
// Параметры:
//  ПодключаемоеОборудованиеСсылка – Ссылка
//
// Возвращаемое значение:
//  Строка
//
Функция ПрефиксВесовогоТовараДляПравилаОбмена(ПравилоОбменаСсылка) Экспорт
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	ПравилаОбменаСПодключаемымОборудованиемOffline.ПрефиксВесовогоТовара КАК ПрефиксВесовогоТовара
	|ИЗ
	|	Справочник.ПравилаОбменаСПодключаемымОборудованиемOffline КАК ПравилаОбменаСПодключаемымОборудованиемOffline
	|ГДЕ
	|	ПравилаОбменаСПодключаемымОборудованиемOffline.Ссылка = &Ссылка");
	
	Запрос.УстановитьПараметр("Ссылка", ПравилоОбменаСсылка);
	
	Результат = Запрос.Выполнить();
	Выборка = Результат.Выбрать();
	
	Если Выборка.Следующий() Тогда
		ПрефиксВесовогоТовара = Выборка.ПрефиксВесовогоТовара;
		Если ЗначениеЗаполнено(ПрефиксВесовогоТовара) Тогда
			Возврат Строка(Выборка.ПрефиксВесовогоТовара);
		Иначе
			Возврат "1";
		КонецЕсли;
	Иначе
		Возврат "1";
	КонецЕсли;
	
КонецФункции

// Функция возвращает префикс штучного товара
//
// Параметры:
//  Нет
//
// Возвращаемое значение:
//  Строка
//
Функция ПрефиксШтучногоТовара() Экспорт
	
	Возврат "0";
	
КонецФункции

// Функция возвращает формат весового штрихкода для запросов
//
// Параметры:
//  ПрефиксВесовогоШтрихкода – Строка
//
// Возвращаемое значение:
//  Строка
//
Функция ФорматВесовогоШтрихкода(ПрефиксВесовогоШтрихкода) Экспорт
	
	Возврат "2" + ПрефиксВесовогоШтрихкода + "_____00000_";
	
КонецФункции

// Функция возращает массив со штрихкодами
//
// Параметры:
//  Номенклатура   - СправочникСсылка.Номенклатура
//  Характеристика - СправочникСсылка.ХарактеристикиНоменклатуры
//  Упаковка       - СправочникСсылка.УпаковкиНоменклатуры
//
// Возвращаемое значение:
//  Массив штрихкодов
//
Функция ШтрихкодыНоменклатуры(Номенклатура, Характеристика, Упаковка) Экспорт

	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ШтрихкодыНоменклатуры.Штрихкод КАК Штрихкод
	|ИЗ
	|	РегистрСведений.ШтрихкодыНоменклатуры КАК ШтрихкодыНоменклатуры
	|ГДЕ
	|	ШтрихкодыНоменклатуры.Номенклатура = &Номенклатура
	|	И ШтрихкодыНоменклатуры.Характеристика = &Характеристика
	|	И ШтрихкодыНоменклатуры.Упаковка = &Упаковка
	|";

	Запрос.УстановитьПараметр("Номенклатура", Номенклатура);
	Запрос.УстановитьПараметр("Характеристика", Характеристика);
	Запрос.УстановитьПараметр("Упаковка", Упаковка);

	Возврат Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Штрихкод");
	
КонецФункции

#КонецЕсли