#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ 

Процедура ПередЗаписью(Отказ, Замещение)
	
	Если ОбменДанными.Загрузка Тогда 
		Возврат; 
	КонецЕсли;
	
	Если Не ПолучитьФункциональнуюОпцию("ИспользоватьОбобщенныйУчетНекачественныхТоваров") Тогда		
		
		Запрос = Новый Запрос;
		Запрос.Текст =
		"ВЫБРАТЬ
		|	ТаблицаТовары.Номенклатура,
		|	ТаблицаТовары.НоменклатураБрак
		|ПОМЕСТИТЬ ТаблицаТовары
		|ИЗ
		|	&ТаблицаТовары КАК ТаблицаТовары
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВложенныйЗапрос.НоменклатураБрак,
		|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ВложенныйЗапрос.Номенклатура) КАК Номенклатура
		|ИЗ
		|	(ВЫБРАТЬ
		|		ТаблицаТовары.НоменклатураБрак КАК НоменклатураБрак,
		|		ТаблицаТовары.Номенклатура КАК Номенклатура
		|	ИЗ
		|		ТаблицаТовары КАК ТаблицаТовары
		|	
		|	ОБЪЕДИНИТЬ ВСЕ
		|	
		|	ВЫБРАТЬ
		|		ТоварыДругогоКачества.НоменклатураБрак,
		|		ТоварыДругогоКачества.Номенклатура
		|	ИЗ
		|		ТаблицаТовары КАК ТаблицаТовары
		|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ТоварыДругогоКачества КАК ТоварыДругогоКачества
		|			ПО ТаблицаТовары.НоменклатураБрак = ТоварыДругогоКачества.НоменклатураБрак) КАК ВложенныйЗапрос
		|
		|СГРУППИРОВАТЬ ПО
		|	ВложенныйЗапрос.НоменклатураБрак
		|
		|ИМЕЮЩИЕ
		|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ВложенныйЗапрос.Номенклатура) > 1";
		
		Запрос.УстановитьПараметр("ТаблицаТовары", ЭтотОбъект.Выгрузить());
		
		Выборка = Запрос.Выполнить().Выбрать();
		
		Пока Выборка.Следующий() Цикл
			ТекстСообщения = НСтр("ru = 'Нельзя связывать номенклатуру ""%НоменклатураБрак%"" более чем с одной номенклатурой исходного качества.'");	
			ТекстСообщения = СтрЗаменить(ТекстСообщения, "%НоменклатураБрак%", Выборка.НоменклатураБрак);
			Отказ = Истина;
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения);
			Возврат;
		КонецЦикла;
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ПриЗаписи(Отказ, Замещение)
	
	Если ОбменДанными.Загрузка Тогда 
		Возврат;
	КонецЕсли;
	
	Если Не Отказ Тогда
		
		Если ЭтотОбъект.Отбор.Номенклатура.Использование Тогда
			НоменклатураИсходногоКачества = ЭтотОбъект.Отбор.Номенклатура.Значение;
		Иначе
			НоменклатураИсходногоКачества = Справочники.Номенклатура.ПустаяСсылка();
		КонецЕсли;
		
		Если ЗначениеЗаполнено(НоменклатураИсходногоКачества) Тогда
			
			Запрос = Новый Запрос;
			Запрос.Текст =
			"ВЫБРАТЬ ПЕРВЫЕ 1
			|	СпрНоменклатура.ЕстьТоварыДругогоКачества КАК ЕстьТоварыДругогоКачестваВБазе,
			|	ВЫБОР
			|		КОГДА ТоварыДругогоКачества.НоменклатураБрак ЕСТЬ NULL 
			|			ТОГДА ЛОЖЬ
			|		ИНАЧЕ ИСТИНА
			|	КОНЕЦ КАК ЕстьТоварыДругогоКачестваПоФакту
			|ИЗ
			|	Справочник.Номенклатура КАК СпрНоменклатура
			|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ТоварыДругогоКачества КАК ТоварыДругогоКачества
			|		ПО СпрНоменклатура.Ссылка = ТоварыДругогоКачества.Номенклатура
			|ГДЕ
			|	СпрНоменклатура.Ссылка = &Номенклатура
			|	И СпрНоменклатура.ЕстьТоварыДругогоКачества <> ВЫБОР
			|			КОГДА ТоварыДругогоКачества.НоменклатураБрак ЕСТЬ NULL 
			|				ТОГДА ЛОЖЬ
			|			ИНАЧЕ ИСТИНА
			|		КОНЕЦ";
			
			Запрос.УстановитьПараметр("Номенклатура",НоменклатураИсходногоКачества);	
			Выборка = Запрос.Выполнить().Выбрать();
			
			Если Выборка.Следующий() Тогда
				НоменклатураОбъект = НоменклатураИсходногоКачества.ПолучитьОбъект();
				НоменклатураОбъект.ЕстьТоварыДругогоКачества = Выборка.ЕстьТоварыДругогоКачестваПоФакту;
				НоменклатураОбъект.Записать();
			КонецЕсли;
			
		Иначе
			
			Запрос = Новый Запрос;
			Запрос.Текст =
			"ВЫБРАТЬ
			|	Номенклатура.Ссылка КАК Ссылка
			|ИЗ
			|	Справочник.Номенклатура КАК Номенклатура
			|ГДЕ
			|	Номенклатура.ЕстьТоварыДругогоКачества";
			
			Выборка = Запрос.Выполнить().Выбрать();
			
			Пока Выборка.Следующий() Цикл
				
				НоменклатураОбъект = Выборка.Ссылка.ПолучитьОбъект();
				НоменклатураОбъект.ЕстьТоварыДругогоКачества = Ложь;
				НоменклатураОбъект.Записать();
				
			КонецЦикла;
			
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры
#КонецЕсли