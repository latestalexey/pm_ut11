
///////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// Обработчик подсистемы "Свойства"
	УправлениеСвойствами.ПриСозданииНаСервере(ЭтаФорма, Объект, "ГруппаДополнительныеРеквизиты");
	
	// Подсистема запрета редактирования ключевых реквизитов объектов
	ЗапретРедактированияРеквизитовОбъектов.ЗаблокироватьРеквизиты(ЭтаФорма);
	
	УстановитьВидимостьТиповЗначенийАналитики();
	
	Если Метаданные.ПланыСчетов.Найти("Хозрасчетный") <> Неопределено Тогда
		Элементы.КорреспондирующийСчет.Видимость = Ложь;
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(Объект.Ссылка) Тогда
		УстановитьТипЗначения(Объект.ТипЗначения);
		УстановитьТекущуюСтраницу();
		УправлениеЭлементамиФормы();
		ЗаполнитьТекстДоступныхОпераций();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаВыбора(ВыбранноеЗначение, ИсточникВыбора)
	
	Если ТипЗнч(ВыбранноеЗначение) = Тип("СписокЗначений") Тогда
		
		Модифицированность = Истина;
		
		ДоступныеОперации = "";
		Объект.ДоступныеХозяйственныеОперации.Очистить();
		Для Каждого ЭлементСписка Из ВыбранноеЗначение Цикл
			Если ЭлементСписка.Пометка Тогда
				
				НоваяСтрока = Объект.ДоступныеХозяйственныеОперации.Добавить();
				НоваяСтрока.ХозяйственнаяОперация = ЭлементСписка.Значение;
				
				ДоступныеОперации = ДоступныеОперации
					+ ?(Не ПустаяСтрока(ДоступныеОперации), ", ", "")
					+ ЭлементСписка.Представление;
			КонецЕсли;
		КонецЦикла;
		
		Если ПустаяСтрока(ДоступныеОперации) Тогда
			ДоступныеОперации = НСтр("ru = '<Ограничения не заданы>'");
			Объект.ОграничитьИспользование = Ложь;
			Элементы.ДоступныеОперации.Доступность = Ложь;
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	// Подсистема "Свойства"
	Если УправлениеСвойствамиКлиент.ОбрабатыватьОповещения(ЭтаФорма, ИмяСобытия, Параметр) Тогда
		ОбновитьЭлементыДополнительныхРеквизитов();
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
	УстановитьТипЗначения(Объект.ТипЗначения);
	УстановитьТекущуюСтраницу();
	УправлениеЭлементамиФормы();
	ЗаполнитьТекстДоступныхОпераций();
	
	УправлениеСвойствами.ПриЧтенииНаСервере(ЭтаФорма, ТекущийОбъект);
	
КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект)
	
	// Обработчик подсистемы "Свойства"
	УправлениеСвойствами.ПередЗаписьюНаСервере(ЭтаФорма, ТекущийОбъект);
	
	Если Не ПустаяСтрока(ТипЗначения) Тогда
		ТекущийОбъект.ТипЗначения = Новый ОписаниеТипов(ТипЗначения);
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	
	// подсистема запрета редактирования ключевых реквизитов объектов	
	ЗапретРедактированияРеквизитовОбъектов.ЗаблокироватьРеквизиты(ЭтаФорма);
	
КонецПроцедуры

&НаСервере
Процедура ОбработкаПроверкиЗаполненияНаСервере(Отказ, ПроверяемыеРеквизиты)
	
	Если ПустаяСтрока(ТипЗначения) Тогда
		ТекстСообщения = НСтр("ru = 'В поле ""Аналитика расходов"" не выбрано ни одного вида аналитики'");
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
			ТекстСообщения,
			, // ОбъектИлиСсылка
			"ТипЗначения",
			, // ПутьКДанным
			Отказ
		);
	КонецЕсли;
	
	Если Объект.ОграничитьИспользование
	 И Объект.ДоступныеХозяйственныеОперации.Количество() = 0 Тогда
		ТекстСообщения = НСтр("ru = 'Не указаны доступные операции'");
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
			ТекстСообщения,
			, // ОбъектИлиСсылка
			"ДоступныеОперации",
			, // ПутьКДанным
			Отказ
		);
	 
	КонецЕсли;
	
КонецПроцедуры

///////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ ШАПКИ ФОРМЫ

&НаКлиенте
Процедура ВариантРаспределенияРасходовПриИзменении(Элемент)
	
	Если Объект.ВариантРаспределенияРасходов = ПредопределенноеЗначение("Перечисление.ВариантыРаспределенияРасходов.НаСебестоимостьТоваров") Тогда
		ЭлементСтраница = Элементы.СтраницаНаСебестоимостьТоваров;
		Если Элементы.ТипЗначенияНаСебестоимостьТоваров.СписокВыбора.НайтиПоЗначению(ТипЗначения) = Неопределено Тогда
			ТипЗначения = "СправочникСсылка.Склады";
		КонецЕсли;
	ИначеЕсли Объект.ВариантРаспределенияРасходов = ПредопределенноеЗначение("Перечисление.ВариантыРаспределенияРасходов.НаРасходыБудущихПериодов") Тогда
		ЭлементСтраница = Элементы.СтраницаНаРасходыБудущихПериодов;
		Если Элементы.ТипЗначенияНаРасходыБудущихПериодов.СписокВыбора.НайтиПоЗначению(ТипЗначения) = Неопределено Тогда
			ТипЗначения = "СправочникСсылка.Организации";
		КонецЕсли;
	ИначеЕсли Объект.ВариантРаспределенияРасходов = ПредопределенноеЗначение("Перечисление.ВариантыРаспределенияРасходов.НаПроизводственныеЗатраты") Тогда
		ЭлементСтраница = Элементы.СтраницаНаПроизводственныеЗатраты;
		ТипЗначения = "СправочникСсылка.СтруктураПредприятия";
	Иначе
		ЭлементСтраница = Элементы.СтраницаНаНаправленияДеятельности;
		Если Элементы.ТипЗначенияНаНаправленияДеятельности.СписокВыбора.НайтиПоЗначению(ТипЗначения) = Неопределено Тогда
			ТипЗначения = "СправочникСсылка.Организации";
		КонецЕсли;
	КонецЕсли;
	Элементы.ГруппаСтраницы.ТекущаяСтраница = ЭлементСтраница;
	
	Если Объект.ДоступныеХозяйственныеОперации.Количество() > 0 Тогда
		ОчиститьНедоступныеХозяйственныеОперации();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ТипЗначенияНаСебестоимостьТоваровПриИзменении(Элемент)
	
	Если ТипЗначения = "ДокументСсылка.ЗаказНаПеремещение"
	 ИЛИ ТипЗначения = "ДокументСсылка.ПеремещениеТоваров" Тогда
	    Объект.ПравилоРаспределенияНаСебестоимость = ПредопределенноеЗначение("Перечисление.ПравилаРаспределенияНаСебестоимостьТоваров.ПропорциональноКоличеству");
	КонецЕсли; 
	
	УправлениеЭлементамиФормы();

КонецПроцедуры

&НаКлиенте
Процедура СтатьяРасходовПриИзменении(Элемент)
	
	СтатьяРасходовПриИзмененииСервер();
	
КонецПроцедуры

&НаКлиенте
Процедура КорреспондирующийСчетНачалоВыбораИзСписка(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	СписокСчетов = Новый СписокЗначений;
	СписокСчетов.Добавить("20.01", "Основное производство (20.01)");
	СписокСчетов.Добавить("23", "Вспомогательные производства (23)");
	СписокСчетов.Добавить("25", "Общепроизводственные расходы (25)");
	СписокСчетов.Добавить("26", "Общехозяйственные расходы (26)");
	СписокСчетов.Добавить("44.01", "Издержки обращения (44.01)");
	СписокСчетов.Добавить("44.02", "Коммерческие расходы (44.02)");
	СписокСчетов.Добавить("91.02", "Прочие расходы (91.02)");
		
	ВыбранноеЗначение = ВыбратьИзМеню(СписокСчетов, Элементы.КорреспондирующийСчет);
	Если ВыбранноеЗначение <> Неопределено Тогда
		Объект.КорреспондирующийСчет = ВыбранноеЗначение.Значение;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОграничитьИспользованиеПриИзменении(Элемент)
	
	Элементы.ДоступныеОперации.Доступность = Объект.ОграничитьИспользование;
	ЗаполнитьТекстДоступныхОпераций();
	
КонецПроцедуры

&НаКлиенте
Процедура ДоступныеОперацииНажатие(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	МассивОпераций = Новый Массив;
	Для Каждого СтрокаТаблицы Из Объект.ДоступныеХозяйственныеОперации Цикл
		МассивОпераций.Добавить(СтрокаТаблицы.ХозяйственнаяОперация);
	КонецЦикла;
	
	СтруктураПараметры = Новый Структура("МассивОпераций, ВариантРаспределенияРасходов",
		МассивОпераций,
		Объект.ВариантРаспределенияРасходов
	);
	ОткрытьФорму("ПланВидовХарактеристик.СтатьиРасходов.Форма.ФормаВыбораДоступныхОпераций", СтруктураПараметры, ЭтаФорма);
	
КонецПроцедуры

///////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ КОМАНД ФОРМЫ

&НаКлиенте
Процедура Подключаемый_РедактироватьСоставСвойств(Команда)
	УправлениеСвойствамиКлиент.РедактироватьСоставСвойств(ЭтаФорма);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_РазрешитьРедактированиеРеквизитовОбъекта(Команда)
	
	Если Не Объект.Ссылка.Пустая() Тогда
		Результат = ОткрытьФормуМодально("ПланВидовХарактеристик.СтатьиРасходов.Форма.РазблокированиеРеквизитов");
		Если ТипЗнч(Результат) = Тип("Массив") И Результат.Количество() > 0 Тогда
			ЗапретРедактированияРеквизитовОбъектовКлиент.УстановитьДоступностьЭлементовФормы(ЭтаФорма, Результат);
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

///////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

///////////////////////////////////////////////////////////////////////////////
// При изменении реквизитов

&НаСервере
Процедура СтатьяРасходовПриИзмененииСервер()
	
	Если ЗначениеЗаполнено(Объект.СтатьяРасходов) Тогда
		ТипЗначенияСтатьиРасходов = ПланыВидовХарактеристик.СтатьиРасходов.ПолучитьРеквизитыСтатьиРасходов(Объект.СтатьяРасходов).ТипЗначения;
		УстановитьТипЗначения(ТипЗначенияСтатьиРасходов);
	КонецЕсли;
	УправлениеЭлементамиФормы();
	
КонецПроцедуры

///////////////////////////////////////////////////////////////////////////////
// Свойства

&НаСервере
Процедура ОбновитьЭлементыДополнительныхРеквизитов()
	УправлениеСвойствами.ОбновитьЭлементыДополнительныхРеквизитов(ЭтаФорма);
КонецПроцедуры

///////////////////////////////////////////////////////////////////////////////
// Управление элементами формы

&НаСервере
Процедура УправлениеЭлементамиФормы()

	Если Объект.Предопределенный Тогда
		Элементы.СпособРаспределенияПоНаправлениямДеятельности.Видимость = Ложь;
	КонецЕсли;
	
	Если Объект.ВариантРаспределенияРасходов = Перечисления.ВариантыРаспределенияРасходов.НаРасходыБудущихПериодов
	 И ЗначениеЗаполнено(Объект.СтатьяРасходов) Тогда
		Элементы.ТипЗначенияНаРасходыБудущихПериодов.ТолькоПросмотр = Истина;
	Иначе
		Элементы.ТипЗначенияНаРасходыБудущихПериодов.ТолькоПросмотр = Ложь;
	КонецЕсли;
	
    Элементы.ПравилоРаспределенияНаСебестоимость.Доступность = НЕ (ТипЗначения = "ДокументСсылка.ЗаказНаПеремещение"
	 															   ИЛИ ТипЗначения = "ДокументСсылка.ПеремещениеТоваров");
																   
	Элементы.ДоступныеОперации.Доступность = Объект.ОграничитьИспользование И Не ТолькоПросмотр;
	
	Если Не ПолучитьФункциональнуюОпцию("ФормироватьФинансовыйРезультат") Тогда
		ЭлементСписка = Элементы.ВариантРаспределенияРасходов.СписокВыбора.НайтиПоЗначению(Перечисления.ВариантыРаспределенияРасходов.НаНаправленияДеятельности);
		Если ЭлементСписка <> Неопределено Тогда
			ЭлементСписка.Представление = НСтр("ru = 'На финансовый результат'");
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура УстановитьВидимостьТиповЗначенийАналитики()
	
	МассивИсключаемыхТипов = Новый Массив;
	
	Если Не ПолучитьФункциональнуюОпцию("ИспользоватьЗаказыКлиентов") Тогда
		МассивИсключаемыхТипов.Добавить("ДокументСсылка.ЗаказКлиента");
	КонецЕсли;
		
	Если Не ПолучитьФункциональнуюОпцию("ИспользоватьЗаказыПоставщикам") Тогда
		МассивИсключаемыхТипов.Добавить("ДокументСсылка.ЗаказПоставщику");
	КонецЕсли;
	
	Если Не ПолучитьФункциональнуюОпцию("ИспользоватьЗаказыНаПеремещение") Тогда
		МассивИсключаемыхТипов.Добавить("ДокументСсылка.ЗаказНаПеремещение");
	КонецЕсли;
	
	Если Не ПолучитьФункциональнуюОпцию("ИспользоватьСделкиСКлиентами") Тогда
		МассивИсключаемыхТипов.Добавить("СправочникСсылка.СделкиСКлиентами");
	КонецЕсли;
	
	Если Не ПолучитьФункциональнуюОпцию("ИспользоватьОплатуПлатежнымиКартами") Тогда
		МассивИсключаемыхТипов.Добавить("СправочникСсылка.ДоговорыЭквайринга");
	КонецЕсли;
	
	Если Не ПолучитьФункциональнуюОпцию("ИспользоватьПередачиТоваровМеждуОрганизациями") Тогда
		МассивИсключаемыхТипов.Добавить("ДокументСсылка.ПередачаТоваровМеждуОрганизациями");
	КонецЕсли;
	
	Если Не ПолучитьФункциональнуюОпцию("ФиксироватьПретензииКлиентов") Тогда
		МассивИсключаемыхТипов.Добавить("СправочникСсылка.ПретензииКлиентов");
	КонецЕсли;
	
	Если Не ПолучитьФункциональнуюОпцию("ИспользоватьМаркетинговыеМероприятия") Тогда
		МассивИсключаемыхТипов.Добавить("СправочникСсылка.МаркетинговыеМероприятия");
	КонецЕсли;
	
	Если Не ПолучитьФункциональнуюОпцию("ИспользоватьПеремещениеТоваров") Тогда
		МассивИсключаемыхТипов.Добавить("ДокументСсылка.ПеремещениеТоваров");
	КонецЕсли;
	
	Если Не ПолучитьФункциональнуюОпцию("ФормироватьФинансовыйРезультат") Тогда
		МассивИсключаемыхТипов.Добавить("СправочникСсылка.НаправленияДеятельности");
	КонецЕсли;
	
	МассивПолей = Новый Массив;
	МассивПолей.Добавить(Элементы.ТипЗначенияНаНаправленияДеятельности);
	МассивПолей.Добавить(Элементы.ТипЗначенияНаРасходыБудущихПериодов);
	МассивПолей.Добавить(Элементы.ТипЗначенияНаСебестоимостьТоваров);
	
	Для Каждого ИсключаемыйТип Из МассивИсключаемыхТипов Цикл
		Для Каждого Поле Из МассивПолей Цикл
			ЭлементСписка = Поле.СписокВыбора.НайтиПоЗначению(ИсключаемыйТип);
			Если ЭлементСписка <> Неопределено Тогда
				Поле.СписокВыбора.Удалить(ЭлементСписка);
			КонецЕсли;
		КонецЦикла;
	КонецЦикла;
		
КонецПроцедуры

&НаСервере
Процедура УстановитьТекущуюСтраницу()

	Соответствие = Новый Соответствие;
	Соответствие.Вставить(Перечисления.ВариантыРаспределенияРасходов.НаНаправленияДеятельности, Элементы.СтраницаНаНаправленияДеятельности);
	Соответствие.Вставить(Перечисления.ВариантыРаспределенияРасходов.НаСебестоимостьТоваров, Элементы.СтраницаНаСебестоимостьТоваров);
	Соответствие.Вставить(Перечисления.ВариантыРаспределенияРасходов.НаРасходыБудущихПериодов, Элементы.СтраницаНаРасходыБудущихПериодов);
	Соответствие.Вставить(Перечисления.ВариантыРаспределенияРасходов.НаПроизводственныеЗатраты, Элементы.СтраницаНаПроизводственныеЗатраты);

	ЭлементСтраница = Соответствие.Получить(Объект.ВариантРаспределенияРасходов);
	Если ЭлементСтраница <> Неопределено Тогда
		Элементы.ГруппаСтраницы.ТекущаяСтраница = ЭлементСтраница;
	КонецЕсли;
	
КонецПроцедуры

///////////////////////////////////////////////////////////////////////////////
// Прочее

&НаСервере
Процедура УстановитьТипЗначения(ВыбранныйТипЗначения)

	СписокТиповЗначений = Новый СписокЗначений;
	СписокТиповЗначений.Добавить("СправочникСсылка.МаркетинговыеМероприятия");
	СписокТиповЗначений.Добавить("СправочникСсылка.НаправленияДеятельности");
	СписокТиповЗначений.Добавить("СправочникСсылка.СделкиСКлиентами");
	СписокТиповЗначений.Добавить("ДокументСсылка.ЗаказКлиента");
	СписокТиповЗначений.Добавить("СправочникСсылка.Склады");
	СписокТиповЗначений.Добавить("СправочникСсылка.Номенклатура");
	СписокТиповЗначений.Добавить("ДокументСсылка.ЗаказПоставщику");
	СписокТиповЗначений.Добавить("ДокументСсылка.ПоступлениеТоваровУслуг");
	СписокТиповЗначений.Добавить("ДокументСсылка.ЗаказНаПеремещение");
	СписокТиповЗначений.Добавить("ДокументСсылка.ПеремещениеТоваров");
	СписокТиповЗначений.Добавить("ДокументСсылка.ПередачаТоваровМеждуОрганизациями");
	СписокТиповЗначений.Добавить("СправочникСсылка.ПрочиеРасходы");
	СписокТиповЗначений.Добавить("СправочникСсылка.Партнеры");
	СписокТиповЗначений.Добавить("СправочникСсылка.Организации");
	СписокТиповЗначений.Добавить("СправочникСсылка.ДоговорыЭквайринга");
	СписокТиповЗначений.Добавить("СправочникСсылка.ФизическиеЛица");
	СписокТиповЗначений.Добавить("СправочникСсылка.СтруктураПредприятия");
	СписокТиповЗначений.Добавить("СправочникСсылка.Проекты");
	СписокТиповЗначений.Добавить("СправочникСсылка.ПретензииКлиентов");
	СписокТиповЗначений.Добавить("ДокументСсылка.ЗаказНаПроизводство");
	СписокТиповЗначений.Добавить("СправочникСсылка.ДоговорыКредитовИДепозитов");

	Для Каждого ЭлементСписка Из СписокТиповЗначений Цикл
		Если ВыбранныйТипЗначения.СодержитТип(Тип(ЭлементСписка.Значение)) Тогда
			ТипЗначения = ЭлементСписка.Значение;
			Прервать;
		КонецЕсли;
	КонецЦикла;
		
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьТекстДоступныхОпераций()
	
	Если Не Объект.ОграничитьИспользование Тогда
		ДоступныеОперации = НСтр("ru = '<Ограничения не заданы>'");
		
	ИначеЕсли Объект.ДоступныеХозяйственныеОперации.Количество() = 0
	 ИЛИ Не Объект.ОграничитьИспользование Тогда	
		ДоступныеОперации = НСтр("ru = '<Указать доступные операции>'");
		
	Иначе
		ДоступныеОперации = "";
		СписокОпераций = Новый СписокЗначений;
		ПланыВидовХарактеристик.СтатьиРасходов.ЗаполнитьСписокХозяйственныхОпераций(СписокОпераций);
		Для Каждого СтрокаТаблицы Из Объект.ДоступныеХозяйственныеОперации Цикл
			ЭлементСписка = СписокОпераций.НайтиПоЗначению(СтрокаТаблицы.ХозяйственнаяОперация);
			Если ЭлементСписка <> Неопределено Тогда
				ДоступныеОперации = ДоступныеОперации
					+ ?(Не ПустаяСтрока(ДоступныеОперации), ", ", "")
					+ ЭлементСписка.Представление;
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ОчиститьНедоступныеХозяйственныеОперации()
	
	МассивУдаляемыхЭлементов = Новый Массив;
	
	СписокОпераций = Новый СписокЗначений;
	ПланыВидовХарактеристик.СтатьиРасходов.ЗаполнитьСписокХозяйственныхОпераций(
		СписокОпераций,
		Объект.ВариантРаспределенияРасходов
	);
	Для Каждого СтрокаТаблицы Из Объект.ДоступныеХозяйственныеОперации Цикл
		ЭлементСписка = СписокОпераций.НайтиПоЗначению(СтрокаТаблицы.ХозяйственнаяОперация);
		Если ЭлементСписка = Неопределено Тогда
			МассивУдаляемыхЭлементов.Добавить(СтрокаТаблицы);
		КонецЕсли;
	КонецЦикла;
	
	Для Каждого СтрокаТаблицы Из МассивУдаляемыхЭлементов Цикл
		Объект.ДоступныеХозяйственныеОперации.Удалить(СтрокаТаблицы);
	КонецЦикла;
	
	ЗаполнитьТекстДоступныхОпераций();
	
КонецПроцедуры

