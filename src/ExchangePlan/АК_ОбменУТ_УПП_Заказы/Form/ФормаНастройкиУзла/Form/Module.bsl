////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("АвтоТест") Тогда // Возврат при получении формы для анализа.
		Возврат;
	КонецЕсли;
	
	ОбменДаннымиСервер.ФормаНастройкиУзлаПриСозданииНаСервере(ЭтаФорма, Метаданные.ПланыОбмена.АК_ОбменУТ_УПП_Заказы.Имя);
	
	ВспомогательныйРеквизитРежимСинхронизацииПартнеров =
		?(ИспользоватьОтборПоПартнерам, "СинхронизироватьДанныеТолькоПоПартнерам", 
		                                "СинхронизироватьДанныеПоВсемПартнерам")
	;
		
	ВспомогательныйРеквизитПартнеры.Загрузить(ВсеПартнерыПриложения());
	
	ОтметитьВыбранныеЭлементыТаблицы("Партнеры", "ВспомогательныйРеквизитПартнеры", "Партнер");
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	РежимСинхронизацииПартнеровПриИзмененииЗначения();
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытием(Отказ, СтандартнаяОбработка)
	
	ОбменДаннымиКлиент.ФормаНастройкиПередЗакрытием(Отказ, ЭтаФорма);
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ ФОРМЫ

&НаКлиенте
Процедура ВспомогательныйРеквизитРежимСинхронизацииПартнеровПриИзменении(Элемент)
	
	РежимСинхронизацииПартнеровПриИзмененииЗначения();
	
КонецПроцедуры

&НаКлиенте
Процедура ВспомогательныйРеквизитОрганизацииИспользоватьПриИзменении(Элемент)
	
	СформироватьЗаголовокТаблицыПартнеров();
	
КонецПроцедуры


////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ КОМАНД ФОРМЫ

&НаКлиенте
Процедура ЗаписатьИЗакрыть(Команда)
	
	ЗаписатьИЗакрытьНаСервере();
	
	ОбменДаннымиКлиент.ФормаНастройкиУзлаКомандаЗакрытьФорму(ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура ВключитьВсехПартнеров(Команда)
	
	ВключитьОтключитьВсеЭлементыВТаблице(Истина, "ВспомогательныйРеквизитПартнеры");
	
КонецПроцедуры

&НаКлиенте
Процедура ОтключитьВсехПартнеров(Команда)
	
	ВключитьОтключитьВсеЭлементыВТаблице(Ложь, "ВспомогательныйРеквизитПартнеры");
	
КонецПроцедуры


////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

&НаСервере
Процедура ЗаписатьИЗакрытьНаСервере()
	
	ИспользоватьОтборПоПартнерам =
		(ВспомогательныйРеквизитРежимСинхронизацииПартнеров = "СинхронизироватьДанныеТолькоПоВыбраннымПартнерам")
	;
		
	Если ИспользоватьОтборПоПартнерам Тогда
		
		Партнеры.Загрузить(ВспомогательныйРеквизитПартнеры.Выгрузить(Новый Структура("Использовать", Истина), "Партнер"));
		
	Иначе
		
		Партнеры.Очистить();
		
	КонецЕсли;
		
КонецПроцедуры

&НаКлиенте
Процедура ВключитьОтключитьВсеЭлементыВТаблице(Включить, ИмяТаблицы)
	
	Для Каждого ЭлементКоллекции Из ЭтаФорма[ИмяТаблицы] Цикл
		
		ЭлементКоллекции.Использовать = Включить;
		
	КонецЦикла;
	
	СформироватьЗаголовокТаблицыПартнеров();
	
КонецПроцедуры

&НаКлиенте
Процедура РежимСинхронизацииПартнеровПриИзмененииЗначения()
	
	Элементы.ВспомогательныйРеквизитПартнеры.Доступность =
		(ВспомогательныйРеквизитРежимСинхронизацииПартнеров = "СинхронизироватьДанныеТолькоПоВыбраннымПартнерам")
	;
	
	СформироватьЗаголовокТаблицыПартнеров();
	
КонецПроцедуры

&НаСервере
Функция ВсеПартнерыПриложения()
	
	УстановитьПривилегированныйРежим(Истина);
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ЛОЖЬ КАК Использовать,
	|	Партнеры.Ссылка КАК Организация
	|ИЗ
	|	Справочник.Партнеры КАК Партнеры
	|ГДЕ
	|	НЕ Партнеры.ПометкаУдаления
	|
	|УПОРЯДОЧИТЬ ПО
	|	Партнеры.Наименование";
	
	Запрос = Новый Запрос;
	Запрос.Текст = ТекстЗапроса;
	
	Возврат Запрос.Выполнить().Выгрузить();
КонецФункции

&НаСервере
Процедура ОтметитьВыбранныеЭлементыТаблицы(ИмяТаблицы, ИмяВспомогательнойТаблицы, ИмяРеквизита)
	
	Для Каждого СтрокаТаблицы Из ЭтаФорма[ИмяТаблицы] Цикл
		
		Строки = ЭтаФорма[ИмяВспомогательнойТаблицы].НайтиСтроки(Новый Структура(ИмяРеквизита, СтрокаТаблицы[ИмяРеквизита]));
		
		Если Строки.Количество() > 0 Тогда
			
			Строки[0].Использовать = Истина;
			
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура СформироватьЗаголовокТаблицыПартнеров()
	
	Если ВспомогательныйРеквизитРежимСинхронизацииПартнеров = "СинхронизироватьДанныеТолькоПоВыбраннымПартнерам" Тогда
		
		ЗаголовокСтраницы = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = 'По партнерам (%1)'"),
			КоличествоВыбранныхСтрок("ВспомогательныйРеквизитПартнеры")
		);
	Иначе
		
		ЗаголовокСтраницы = НСтр("ru = 'По всем партнерам'");
	КонецЕсли;
	
	Элементы.СтраницаОрганизации.Заголовок = ЗаголовокСтраницы;
	
КонецПроцедуры

&НаКлиенте
Функция КоличествоВыбранныхСтрок(ИмяТаблицы)
	
	Результат = 0;
	
	Для Каждого ЭлементКоллекции Из ЭтаФорма[ИмяТаблицы] Цикл
		
		Если ЭлементКоллекции.Использовать Тогда
			
			Результат = Результат + 1;
			
		КонецЕсли;
		
	КонецЦикла;
	
	Возврат Результат;
КонецФункции
