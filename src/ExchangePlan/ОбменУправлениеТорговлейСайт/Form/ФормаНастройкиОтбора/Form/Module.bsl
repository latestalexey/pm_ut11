
////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ПриЧтенииСозданииНаСервере();
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ КОМАНД ФОРМЫ

&НаКлиенте
Процедура ЗавершитьРедактирование(Команда)
	
	Закрыть(ПолучитьНастройкиКомпоновкиСервер());
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

////////////////////////////////////////////////////////////////////////////////
// Прочее

&НаСервере
Процедура ИнициализироватьКомпоновщикСервер()
	
	СхемаВыгрузкиТоваров = ПланыОбмена.ОбменУправлениеТорговлейСайт.ПолучитьМакет("СхемаВыгрузкиТоваров");
	АдресСхемы = ПоместитьВоВременноеХранилище(СхемаВыгрузкиТоваров, УникальныйИдентификатор);
	КомпоновщикНастроекКомпоновкиДанных.Инициализировать(Новый ИсточникДоступныхНастроекКомпоновкиДанных(АдресСхемы)); 
	
	Если Параметры.НастройкаКомпоновки = НеОпределено Тогда
		КомпоновщикНастроекКомпоновкиДанных.ЗагрузитьНастройки(СхемаВыгрузкиТоваров.НастройкиПоУмолчанию);
	Иначе
		КомпоновщикНастроекКомпоновкиДанных.ЗагрузитьНастройки(Параметры.НастройкаКомпоновки);
		КомпоновщикНастроекКомпоновкиДанных.Восстановить(СпособВосстановленияНастроекКомпоновкиДанных.ПроверятьДоступность);
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Функция ПолучитьНастройкиКомпоновкиСервер()
	Возврат КомпоновщикНастроекКомпоновкиДанных.ПолучитьНастройки();
КонецФункции

&НаСервере
Процедура ПриЧтенииСозданииНаСервере()

	ИнициализироватьКомпоновщикСервер();
	
КонецПроцедуры
