////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// Пропускаем инициализацию, чтобы гарантировать получение формы при передаче параметра "АвтоТест".
	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;
	КонецЕсли;
	
	ОбменДаннымиСервер.ФормаНастройкиУзлаПриСозданииНаСервере(ЭтаФорма, "ОбменУправлениеТорговлейБухгалтерияПредприятия30");
	
	// Сформируем список выбора для реквизита "ПравилаСозданияДоговоровКонтрагентов"
	СписокВыбора = Элементы.ПравилаСозданияДоговоровКонтрагентов.СписокВыбора;
	Если НЕ (ПолучитьФункциональнуюОпцию("ИспользоватьЗаказыКлиентов") ИЛИ ПолучитьФункциональнуюОпцию("ИспользоватьЗаказыПоставщикам"))
		ИЛИ ПолучитьФункциональнуюОпцию("ИспользоватьПоступлениеПоНесколькимЗаказам")
		ИЛИ ПолучитьФункциональнуюОпцию("ИспользоватьРеализациюПоНесколькимЗаказам") 
		ИЛИ ПолучитьФункциональнуюОпцию("ИспользоватьАктыВыполненныхРаботПоНесколькимЗаказам") Тогда
		СписокВыбора.Удалить(СписокВыбора.НайтиПоЗначению("ПоЗаказам"));
	КонецЕсли;
	
	Если НЕ ПолучитьФункциональнуюОпцию("ИспользоватьСделкиСКлиентами") Тогда
		СписокВыбора.Удалить(СписокВыбора.НайтиПоЗначению("ПоСделкам"));
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(РежимВыгрузкиПриНеобходимости) тогда
		РежимВыгрузкиПриНеобходимости = Перечисления.РежимыВыгрузкиОбъектовОбмена.ВыгружатьПриНеобходимости;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	УстановитьВидимость();
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытием(Отказ, СтандартнаяОбработка)
	
	ОбменДаннымиКлиент.ФормаНастройкиПередЗакрытием(Отказ, ЭтаФорма);
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ ШАПКИ ФОРМЫ

&НаКлиенте
Процедура ИспользоватьОтборПриИзменении(Элемент)
	
	УстановитьВидимость();
	
КонецПроцедуры

&НаКлиенте
Процедура ВыгружатьЦеныНоменклатурыПриИзменении(Элемент)
	
	УстановитьВидимость();
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ КОМАНД ФОРМЫ

&НаКлиенте
Процедура КомандаОК(Команда)
	
	// Очистка неиспользуемых реквизитов
	
	Если НЕ ИспользоватьОтборПоОрганизациям И Организации.Количество() <> 0 Тогда
		Организации.Очистить();
	ИначеЕсли Организации.Количество() = 0 И ИспользоватьОтборПоОрганизациям Тогда
		ИспользоватьОтборПоОрганизациям = Ложь;
	КонецЕсли;
	
	Если НЕ ВыгружатьЦеныНоменклатуры И ВидыЦенНоменклатуры.Количество() <> 0 Тогда
		ВидыЦенНоменклатуры.Очистить();
	ИначеЕсли ВидыЦенНоменклатуры.Количество() = 0 И ВыгружатьЦеныНоменклатуры Тогда
		ВыгружатьЦеныНоменклатуры = Ложь;
	КонецЕсли;
	
	// Сохранение настроек
	
	ОбменДаннымиКлиент.ФормаНастройкиУзлаКомандаЗакрытьФорму(ЭтаФорма);
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

////////////////////////////////////////////////////////////////////////////////
// Прочее

&НаКлиенте
Процедура УстановитьВидимость()
	
	НастройкаФильтровРегистрации = Элементы.Группа.ПодчиненныеЭлементы.НастройкаФильтровРегистрации;
	НастройкиОтборов = НастройкаФильтровРегистрации.ПодчиненныеЭлементы.НастройкиОтборов;
	
	ОтборПоОрганизациям = НастройкиОтборов.ПодчиненныеЭлементы.ОтборПоОрганизациям;
	ВыгружаемыеВидыЦен	= НастройкиОтборов.ПодчиненныеЭлементы.ВыгружаемыеВидыЦен;
	
	ОтборПоОрганизациям.Видимость	= ИспользоватьОтборПоОрганизациям;
	ВыгружаемыеВидыЦен.Видимость	= ВыгружатьЦеныНоменклатуры;
	
КонецПроцедуры