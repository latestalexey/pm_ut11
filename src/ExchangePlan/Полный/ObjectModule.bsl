#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

Перем мЕстьИзмененияНастроекДоступа; // флаг, фиксирующий факт изменения настроек доступа при загрузке сообщения обмена

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ

Процедура ПриПолученииДанныхОтПодчиненного(ЭлементДанных, ПолучениеЭлемента, ОтправкаНазад)
	
	ПриПолученииДанныхФайла(ЭлементДанных);
	
КонецПроцедуры

Процедура ПриПолученииДанныхОтГлавного(ЭлементДанных, ПолучениеЭлемента, ОтправкаНазад)
	
	ПриПолученииДанныхФайла(ЭлементДанных);
	
КонецПроцедуры

Процедура ПередЗаписью(Отказ)
	
	Если ОбменДаннымиСервер.НадоВыполнитьОбработчикПослеЗагрузкиДанных(ЭтотОбъект, Ссылка) Тогда
		
		ПослеЗагрузкиДанных(Отказ);
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ПриЗаписи(Отказ)
	
	Если мЕстьИзмененияНастроекДоступа Тогда
		
		ВыполнитьОбновлениеРолейПользователейИнформационнойБазы();
		
		мЕстьИзмененияНастроекДоступа = Ложь;
		
	КонецЕсли;
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

// Переопределяет стандартное поведение при загрузке данных;
//
Процедура ПриПолученииДанныхФайла(ЭлементДанных)
	
	Если ТипЗнч(ЭлементДанных) = Тип("СправочникОбъект.УчетныеЗаписиЭлектроннойПочты") Тогда
		
		Если ЭлементДанных.ЭтоНовый() Тогда
			ЭлементДанных.ИспользоватьДляПолучения = Ложь;
			ЭлементДанных.ИспользоватьДляОтправки  = Ложь;
		Иначе
			ЭлементДанных.ИспользоватьДляПолучения = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ЭлементДанных.Ссылка, "ИспользоватьДляПолучения");
			ЭлементДанных.ИспользоватьДляОтправки  = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ЭлементДанных.Ссылка, "ИспользоватьДляОтправки");
		КонецЕсли;
		
	ИначеЕсли НЕ мЕстьИзмененияНастроекДоступа Тогда
		
		Если ТипЗнч(ЭлементДанных) = Тип("СправочникОбъект.ГруппыПользователей")
			ИЛИ ТипЗнч(ЭлементДанных) = Тип("СправочникОбъект.ГруппыДоступа") 
			ИЛИ ТипЗнч(ЭлементДанных) = Тип("СправочникОбъект.ПрофилиГруппДоступа") Тогда
			
			мЕстьИзмененияНастроекДоступа = Истина;
			
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

// Процедура обновляет роли всех пользователей информационной базы
//
Процедура ВыполнитьОбновлениеРолейПользователейИнформационнойБазы()

	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	Пользователи.Ссылка КАК Пользователь
	|ИЗ
	|	Справочник.Пользователи КАК Пользователи
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ
	|	ГруппыДоступаПользователи.Пользователь
	|ИЗ
	|	Справочник.ГруппыДоступа.Пользователи КАК ГруппыДоступаПользователи
	|ГДЕ
	|	ГруппыДоступаПользователи.Ссылка = ЗНАЧЕНИЕ(Справочник.ГруппыДоступа.Администраторы)
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ
	|	ВнешниеПользователи.Ссылка
	|ИЗ
	|	Справочник.ВнешниеПользователи КАК ВнешниеПользователи");
	
	СписокВсехПользователей = Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Пользователь");
	
	УправлениеДоступом.ОбновитьРолиПользователей(СписокВсехПользователей);
	
КонецПроцедуры

Процедура ПослеЗагрузкиДанных(Отказ)
	
	Справочники.КлючиАналитикиУчетаНоменклатуры.ЗаменитьДублиКлючейАналитики();
	Справочники.КлючиАналитикиУчетаПоПартнерам.ЗаменитьДублиКлючейАналитики();
	Справочники.ВидыЗапасов.ЗаменитьДублиКлючейАналитики();
	
КонецПроцедуры // ПослеЗагрузкиДанных()

мЕстьИзмененияНастроекДоступа = Ложь;
#КонецЕсли