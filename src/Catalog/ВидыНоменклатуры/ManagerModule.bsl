#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

////////////////////////////////////////////////////////////////////////////////
// ПРОГРАММНЫЙ ИНТЕРФЕЙС

//Возвращает структуру с параметрами учетной политики по сериям
// Параметры:
//		ПолитикаУчетаСерий - вид номенклатуры для которого нужно получить параметры учетной политики по сериям
Функция ПараметрыСерийНоменклатуры(ВидНоменклатуры) Экспорт
	
	СтруктураВозврата = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(ВидНоменклатуры, "ИспользоватьНомерСерии,
	                                                                        |ИспользоватьСрокГодностиСерии,ИспользоватьКоличествоСерии,
	                                                                        |ТочностьУказанияСрокаГодностиСерии");
	
	СтруктураВозврата.Вставить("ВидНоменклатуры",ВидНоменклатуры);
	СтруктураВозврата.Вставить("ФорматнаяСтрокаСрокаГодности");
	
	СтруктураВозврата.ФорматнаяСтрокаСрокаГодности =  ФорматнаяСтрокаСрокаГодности(СтруктураВозврата.ТочностьУказанияСрокаГодностиСерии);
	
	Возврат СтруктураВозврата;
	
КонецФункции

// Получает вид номенклатуры, если вид номенклатуры один в справочнике.
//
// Возвращаемое значение:
// СправочникСсылка.ВидНоменклатуры - Найденный вид номенклатуры
// Неопределено - если видов номенаклатуры нет или видов номенклатуры больше одного
//
Функция ВидНоменклатурыПоУмолчанию() Экспорт
	
	Запрос = Новый Запрос("
	|ВЫБРАТЬ ПЕРВЫЕ 2
	|	ВидыНоменклатуры.Ссылка КАК ВидНоменклатуры
	|ИЗ
	|	Справочник.ВидыНоменклатуры КАК ВидыНоменклатуры
	|ГДЕ
	|	Не ВидыНоменклатуры.ПометкаУдаления
	|");
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Если РезультатЗапроса.Пустой() Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	Выборка = РезультатЗапроса.Выбрать();
	
	Если Выборка.Количество() = 1 Тогда
		Выборка.Следующий();
		ВидНоменклатуры = Выборка.ВидНоменклатуры;
	Иначе
		ВидНоменклатуры = Неопределено;
	КонецЕсли;
	
	Возврат ВидНоменклатуры;

КонецФункции // ВидНоменклатуры()

//Возвращает имена блокруемых реквизитов для механизма блокирования реквизитов БСП
//	Возвращаемое значание:
//		Массив - имена блокируемых реквизитов
//
Функция ПолучитьБлокируемыеРеквизитыОбъекта() Экспорт
	
	Результат = Новый Массив;
	Результат.Добавить("ТипНоменклатуры");
	
	Результат.Добавить("ИспользованиеХарактеристик");   
	Результат.Добавить("ИспользоватьХарактеристики");   
	
	Результат.Добавить("ИспользоватьСерии");
	Результат.Добавить("ПолитикиУчетаСерий;ПолитикаУчетаСерий");
	Результат.Добавить("НастройкаИспользованияСерий");
	Результат.Добавить("ТочностьУказанияСрокаГодностиСерии");
	
	Результат.Добавить("ВариантОформленияПродажи");
	
	Возврат Результат;
	
КонецФункции

//Процедура возвращает форматную строку представления срока годности
// Параметры
//		СТочностьюДоЧасов - нужно ли в сроке годности указывать часы
//
Функция ФорматнаяСтрокаСрокаГодности(ТочностьУказанияСрокаГодности)Экспорт
	
	Если ТочностьУказанияСрокаГодности = Перечисления.ТочностиУказанияСрокаГодности.СТочностьюДоЧасов Тогда
		
		ФорматнаяСтрока = "ДФ='dd.MM.yy-HH'";
		
	Иначе
		
		ФорматнаяСтрока = "ДФ=dd.MM.yy";
		
	КонецЕсли;
	
	Возврат ФорматнаяСтрока;
	
КонецФункции

////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

////////////////////////////////////////////////////////////////////////////////
// Обновление информационной базы

Процедура ПослеЗагрузкиДанныхИзДругойМодели() Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ВидыНоменклатуры.Ссылка
	|ИЗ
	|	Справочник.ВидыНоменклатуры КАК ВидыНоменклатуры
	|ГДЕ
	|	(ВидыНоменклатуры.ЗапретРедактированияНаименованияНоменклатурыДляПечати
	|			ИЛИ ВидыНоменклатуры.ЗапретРедактированияНаименованияХарактеристикиДляПечати
	|			ИЛИ ВидыНоменклатуры.ЗапретРедактированияРабочегоНаименованияНоменклатуры
	|			ИЛИ ВидыНоменклатуры.ЗапретРедактированияРабочегоНаименованияХарактеристики)";
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		СправочникОбъект = Выборка.Ссылка.ПолучитьОбъект();
		СправочникОбъект.ЗапретРедактированияНаименованияНоменклатурыДляПечати = Ложь;
		СправочникОбъект.ЗапретРедактированияНаименованияХарактеристикиДляПечати = Ложь;
		СправочникОбъект.ЗапретРедактированияРабочегоНаименованияНоменклатуры = Ложь;
		СправочникОбъект.ЗапретРедактированияРабочегоНаименованияХарактеристики = Ложь;
		
		СправочникОбъект.Записать();
	КонецЦикла;
	
КонецПроцедуры

#КонецЕсли