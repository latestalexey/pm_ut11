#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ

Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)

	МассивНепроверяемыхРеквизитов = Новый Массив;
	Если Не ЭтоГруппа Тогда
		Если ЗначениеЗаполнено(ВидНоменклатуры) Тогда
			ШаблонРабочегоНаименования = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ВидНоменклатуры, "ШаблонРабочегоНаименованияНоменклатуры");
			Если ЗначениеЗаполнено(ШаблонРабочегоНаименования) Тогда
				МассивНепроверяемыхРеквизитов.Добавить("Наименование");
			КонецЕсли;
		КонецЕсли;
		
		Если ТипНоменклатуры = Перечисления.ТипыНоменклатуры.Услуга Тогда
			МассивНепроверяемыхРеквизитов.Добавить("ЕдиницаИзмерения");
		КонецЕсли;
		
		Если Не ИспользоватьИндивидуальныйШаблонЦенника Тогда
			МассивНепроверяемыхРеквизитов.Добавить("ШаблонЦенника");
		КонецЕсли;
		
		Если Не ИспользоватьИндивидуальныйШаблонЭтикетки Тогда
			МассивНепроверяемыхРеквизитов.Добавить("ШаблонЭтикетки");
		КонецЕсли;
		
		Если Не ИспользоватьУпаковки Тогда
			МассивНепроверяемыхРеквизитов.Добавить("НаборУпаковок");
		КонецЕсли;
		
		Если Не Справочники.ГруппыДоступаНоменклатуры.ИспользуютсяГруппыДоступа() Тогда
			МассивНепроверяемыхРеквизитов.Добавить("ГруппаДоступа");
		КонецЕсли;
		
		Если Не ПоставляетсяВМногооборотнойТаре Тогда
			МассивНепроверяемыхРеквизитов.Добавить("НоменклатураМногооборотнаяТара");
		КонецЕсли;
		
	КонецЕсли;
	
	ОбщегоНазначения.УдалитьНепроверяемыеРеквизитыИзМассива(ПроверяемыеРеквизиты, МассивНепроверяемыхРеквизитов);
	
КонецПроцедуры

Процедура ПередЗаписью(Отказ)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	Если НЕ УправлениеДоступомУТ.ПроверитьДопустимостьИзмененияРеквизитовСправочника(ЭтотОбъект, Отказ) Тогда
		Возврат;
	КонецЕсли;
		
	Если НЕ ЭтоГруппа Тогда
		
		Если ТипНоменклатуры = Перечисления.ТипыНоменклатуры.Услуга Тогда
			
			ИспользоватьУпаковки = Ложь;
			ВестиУчетПоГТД       = Ложь;
			ПодакцизныйТовар     = Ложь;
			НаборУпаковок        = Справочники.НаборыУпаковок.ПустаяСсылка();
			Вес                  = 0;
			СкладскаяГруппа      = Справочники.СкладскиеГруппыНоменклатуры.ПустаяСсылка();
			Качество             = Перечисления.ГрадацииКачества.Новый;
			
		Иначе
			
			Если НЕ ИспользоватьУпаковки Тогда
				НаборУпаковок = Справочники.НаборыУпаковок.ПустаяСсылка();
			КонецЕсли;
			
			Если ЗначениеЗаполнено(НаборУпаковок)
				И НаборУпаковок <> Справочники.НаборыУпаковок.ИндивидуальныйДляНоменклатуры
				И ЕдиницаИзмерения <> НаборУпаковок.ЕдиницаИзмерения Тогда
				
				ЕдиницаИзмерения = НаборУпаковок.ЕдиницаИзмерения; 
				
			КонецЕсли;
			
		КонецЕсли;
		
		ФормироватьРабочееНаименование   = НЕ (ДополнительныеСвойства.Свойство("РабочееНаименованиеСформировано"));
		ФормироватьНаименованиеДляПечати = НЕ (ДополнительныеСвойства.Свойство("НаименованиеДляПечатиСформировано"));
		
		Если ФормироватьРабочееНаименование ИЛИ ФормироватьНаименованиеДляПечати Тогда
			
			СтруктураРеквизитов = Новый Структура;
			СтруктураРеквизитов.Вставить("ШаблонРабочегоНаименованияНоменклатуры");
			СтруктураРеквизитов.Вставить("ЗапретРедактированияРабочегоНаименованияНоменклатуры");
			СтруктураРеквизитов.Вставить("ШаблонНаименованияДляПечатиНоменклатуры");
			СтруктураРеквизитов.Вставить("ЗапретРедактированияНаименованияНоменклатурыДляПечати");
			
			РеквизитыОбъекта = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(ВидНоменклатуры, СтруктураРеквизитов);
			
			Если ФормироватьРабочееНаименование 
				И ЗначениеЗаполнено(РеквизитыОбъекта.ШаблонРабочегоНаименованияНоменклатуры) 
				И (РеквизитыОбъекта.ЗапретРедактированияРабочегоНаименованияНоменклатуры 
				ИЛИ НЕ ЗначениеЗаполнено(Наименование)) Тогда
				
				ШаблонНаименования = РеквизитыОбъекта.ШаблонРабочегоНаименованияНоменклатуры;
				Наименование = НоменклатураСервер.НаименованиеПоШаблону(ШаблонНаименования, ЭтотОбъект);
				
			КонецЕсли;
			
			Если ФормироватьНаименованиеДляПечати 
				И ЗначениеЗаполнено(РеквизитыОбъекта.ШаблонНаименованияДляПечатиНоменклатуры) 
				И (РеквизитыОбъекта.ЗапретРедактированияНаименованияНоменклатурыДляПечати 
				ИЛИ НЕ ЗначениеЗаполнено(НаименованиеПолное)) Тогда
				
				ШаблонНаименованияДляПечати = РеквизитыОбъекта.ШаблонНаименованияДляПечатиНоменклатуры;
				НаименованиеПолное = НоменклатураСервер.НаименованиеПоШаблону(ШаблонНаименованияДляПечати, ЭтотОбъект);
				
			КонецЕсли;
			
		КонецЕсли;
		
		Если НЕ ЗначениеЗаполнено(Наименование) Тогда
			
			ТекстИсключения = НСтр("ru='Поле ""Рабочее наименование"" не заполнено'");
			ВызватьИсключение ТекстИсключения; 
			Отказ = Истина;
			
		КонецЕсли;
		
		КонтролироватьРабочееНаименование = Константы.КонтролироватьУникальностьРабочегоНаименованияНоменклатурыИХарактеристик.Получить()
		                                    И НЕ (ДополнительныеСвойства.Свойство("РабочееНаименованиеПроверено"));
		
		Если НЕ Отказ И КонтролироватьРабочееНаименование Тогда
			
			НаименованиеУникально = Справочники.Номенклатура.РабочееНаименованиеУникально(ЭтотОбъект);
			
			Если НЕ НаименованиеУникально Тогда
				
				ТекстИсключения = НСтр("ru='Значение поля ""Рабочее наименование"" не уникально'");
				ВызватьИсключение ТекстИсключения; 
				Отказ = Истина;
				
			КонецЕсли;
			
		КонецЕсли;
		
		ИспользоватьАссортимент = ПолучитьФункциональнуюОпцию("ИспользоватьАссортимент");
		
		Если ИспользоватьАссортимент Тогда
			
			ВладелецКатегории = ОбщегоНазначения.ПолучитьЗначениеРеквизита(ТоварнаяКатегория, "Владелец");
			
			Если ЗначениеЗаполнено(ТоварнаяКатегория) И ВладелецКатегории <> ВидНоменклатуры Тогда
				
				ТекстИсключения = НСтр("ru='Владелец товарной категории не соответствует виду номенклатуры'");
				ВызватьИсключение ТекстИсключения; 
				Отказ=Истина;
				
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЕсли;
	
	// Обработка смены пометки удаления
	Если Не ЭтоНовый() И Не ЭтоГруппа Тогда
		Если ПометкаУдаления <> ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Ссылка, "ПометкаУдаления") Тогда
			Справочники.КлючиАналитикиУчетаНоменклатуры.УстановитьПометкуУдаления(Новый Структура("Номенклатура", Ссылка), ПометкаУдаления);
		КонецЕсли;
	КонецЕсли;
	
	Если ЭтоНовый() Тогда
		УстановитьНовыйКод();
	КонецЕсли;
	КодДляПоиска = ПрефиксацияОбъектовКлиентСервер.ПолучитьНомерНаПечать(Код, Истина);
	
КонецПроцедуры

Процедура ПередУдалением(Отказ)
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ШтрихкодыНоменклатуры.Штрихкод КАК Штрихкод
	|ИЗ
	|	РегистрСведений.ШтрихкодыНоменклатуры КАК ШтрихкодыНоменклатуры
	|ГДЕ
	|	ШтрихкодыНоменклатуры.Номенклатура = &Номенклатура";
	Запрос.УстановитьПараметр("Номенклатура", Ссылка);
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		
		НаборЗаписей = РегистрыСведений.ШтрихкодыНоменклатуры.СоздатьНаборЗаписей();
		НаборЗаписей.Отбор.Штрихкод.Значение = Выборка.Штрихкод;
		НаборЗаписей.Отбор.Штрихкод.Использование = Истина;
		НаборЗаписей.Записать();
		
	КонецЦикла;
	
КонецПроцедуры // ПередУдалением()

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, СтандартнаяОбработка)
	
	Если Не ЭтоГруппа Тогда
		
		ЕдиницаИзмерения 	   = Справочники.ЕдиницыИзмерения.ЕдиницаИзмеренияПоУмолчанию();
		ГруппаФинансовогоУчета = Справочники.ГруппыФинансовогоУчетаНоменклатуры.ПолучитьГруппуФинансовогоУчетаПоУмолчанию();
		ВидНоменклатуры 	   = Справочники.ВидыНоменклатуры.ВидНоменклатурыПоУмолчанию();
		
		Если ЗначениеЗаполнено(ВидНоменклатуры) Тогда
			
			РеквизитыОбъекта = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(ВидНоменклатуры, Новый Структура("ТипНоменклатуры, ГруппаДоступа, ВариантОформленияПродажи"));
			ЗаполнитьЗначенияСвойств(ЭтотОбъект, РеквизитыОбъекта);
			Если ТипНоменклатуры <> Перечисления.ТипыНоменклатуры.Товар
				И ТипНоменклатуры <> Перечисления.ТипыНоменклатуры.МногооборотнаяТара Тогда
				НаборУпаковок = Справочники.НаборыУпаковок.ПустаяСсылка();
				ИспользоватьУпаковки = Ложь;
				Качество = Перечисления.ГрадацииКачества.Новый;
			КонецЕсли;
			
		КонецЕсли;
		
		СкладскаяГруппа = ЗначениеНастроекПовтИсп.СкладскаяГруппаНоменклатурыПоУмолчанию(СкладскаяГруппа);
		ГруппаДоступа 	= Справочники.ГруппыДоступаНоменклатуры.ПолучитьГруппуДоступаПоУмолчанию(ЭтотОбъект);
		
	КонецЕсли;
	
КонецПроцедуры

#КонецЕсли