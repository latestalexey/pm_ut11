////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ОбщегоНазначенияУТКлиентСервер.УстановитьСвойствоЭлементаФормы(
		Элементы, "ОбъектВидНоменклатурыИспользованиеХарактеристик",
		"Видимость", ПолучитьФункциональнуюОпцию("ИспользоватьХарактеристикиНоменклатуры"));
	
	ОбщегоНазначенияУТ.НастроитьПодключаемоеОборудование(ЭтаФорма);
	
	ИспользоватьУпаковкиНоменклатуры = ПолучитьФункциональнуюОпцию("ИспользоватьУпаковкиНоменклатуры");
	ИспользоватьКачествоТоваров      = ПолучитьФункциональнуюОпцию("ИспользоватьКачествоТоваров");
	ИспользоватьАссортимент          = ПолучитьФункциональнуюОпцию("ИспользоватьАссортимент");
	
	ЗаполнитьПоПараметрам();
	
	ИспользоватьИндивидуальныйШаблонЦенника  = ?(Объект.ИспользоватьИндивидуальныйШаблонЦенника, 1, 0);
	ИспользоватьИндивидуальныйШаблонЭтикетки = ?(Объект.ИспользоватьИндивидуальныйШаблонЭтикетки, 1, 0);
	
	ОбщегоНазначенияУТКлиентСервер.УстановитьСвойствоЭлементаФормы(
		Элементы, "ШаблонЭтикетки", "Доступность", Объект.ИспользоватьИндивидуальныйШаблонЭтикетки);
	ОбщегоНазначенияУТКлиентСервер.УстановитьСвойствоЭлементаФормы(
		Элементы, "ШаблонЦенника", "Доступность", Объект.ИспользоватьИндивидуальныйШаблонЦенника);
	
	НаименованиеЕдиницыИзмеренияВеса   = Строка(Константы.ЕдиницаИзмеренияВеса.Получить());
	НаименованиеЕдиницыИзмеренияОбъема = Строка(Константы.ЕдиницаИзмеренияОбъема.Получить());
	
	ОбщегоНазначенияУТКлиентСервер.УстановитьСвойствоЭлементаФормы(
		Элементы, "НаборУпаковок",
		"ТолькоПросмотр", НЕ Объект.ИспользоватьУпаковки);
	ОбщегоНазначенияУТКлиентСервер.УстановитьСвойствоЭлементаФормы(
		Элементы, "ГруппаДанныеВидНоменклатуры",
		"Видимость", ЗначениеЗаполнено(Объект.ВидНоменклатуры));
	
	УправлениеДоступом.ПриСозданииФормыЗначенияДоступа(ЭтаФорма);
	
	КонтролироватьУникальностьРабочегоНаименованияНоменклатурыИХарактеристик          = Константы.КонтролироватьУникальностьРабочегоНаименованияНоменклатурыИХарактеристик.Получить();
	ДобавлятьИндивидуальныеХарактеристикиПриСозданииНоменклатуры                      = Константы.ДобавлятьИндивидуальныеХарактеристикиПриСозданииНоменклатуры.Получить();
	ДобавлятьИндивидуальныеУпаковкиПриСозданииНоменклатуры                            = Константы.ДобавлятьИндивидуальныеУпаковкиПриСозданииНоменклатуры.Получить();
	РегистрироватьШтрихкодПриСозданииНоменклатуры                                     = Константы.РегистрироватьШтрихкодПриСозданииНоменклатуры.Получить();
	КонтролироватьУникальностьНоменклатурыИХарактеристикПоСочетаниюЗначенийРеквизитов = Константы.КонтролироватьУникальностьНоменклатурыИХарактеристикПоСочетаниюЗначенийРеквизитов.Получить();
	
	// Если настройки регистрации штрихкода и контроля уникальности по реквизитам выключены,
	// то не отображать страницу ввода реквизитов контроля.
	СтраницаПомощника = Элементы.СтраницаКонтрольУникальности;
	
	Если НЕ РегистрироватьШтрихкодПриСозданииНоменклатуры 
		И НЕ КонтролироватьУникальностьНоменклатурыИХарактеристикПоСочетаниюЗначенийРеквизитов Тогда
		
		ОбщегоНазначенияУТКлиентСервер.УстановитьСвойствоЭлементаФормы(
			Элементы, "СтраницаКонтрольУникальности", "Видимость", Ложь);
		ОбщегоНазначенияУТКлиентСервер.УстановитьСвойствоЭлементаФормы(
			Элементы, "СтраницаНайдено", "Видимость", Ложь);
		
		СтраницаПомощника = Элементы.СтраницаУчетнаяИнформация;
		
		ОбщегоНазначенияУТКлиентСервер.УстановитьСвойствоЭлементаФормы(
			Элементы, "ГруппаДанныеВидНоменклатуры", "Доступность", Истина);
		ОбщегоНазначенияУТКлиентСервер.УстановитьСвойствоЭлементаФормы(
			Элементы, "ВидНоменклатуры", "Доступность", Истина);
		
	КонецЕсли;
	
	УстановитьВидимостьКомандСтраницыПомощника(СтраницаПомощника);
	
	// Установить отборы динамических списков - инд. характеристик и инд. упаковок.
	// Пока новый элемент номенклатуры не создан - отбор по пустому значению.
	ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбора(ИндивидуальныеХарактеристики.Отбор, "Владелец", Неопределено);
	ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбора(ИндивидуальныеУпаковки.Отбор, "Владелец", Неопределено);
	
	ХарактеристикиИспользуются = ПолучитьФункциональнуюОпцию("ИспользоватьХарактеристикиНоменклатуры");
	ИспользоватьМногооборотнуюТару = ПолучитьФункциональнуюОпцию("ИспользоватьМногооборотнуюТару");
	ОбщегоНазначенияУТКлиентСервер.УстановитьСвойствоЭлементаФормы(
		Элементы,
		"ХарактеристикаМногооборотнаяТара",
		"Видимость",
		ИспользоватьМногооборотнуюТару И ХарактеристикиИспользуются
	);
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	МенеджерОборудованияКлиент.ПодключитьОборудованиеПриОткрытииФормы(ЭтаФорма, "СканерШтрихкода");
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	// ПодключаемоеОборудование
	Если Источник = "ПодключаемоеОборудование" И ВводДоступен() Тогда
		Если ИмяСобытия = "ScanData" Тогда
			ОбработатьШтрихкоды(МенеджерОборудованияКлиент.ПреобразоватьДанныеСоСканераВМассив(Параметр));
		КонецЕсли;
	КонецЕсли;
	// Конец ПодключаемоеОборудование
	
	Если ИмяСобытия = "Запись_Номенклатура" Тогда
			
		Если ЗначениеЗаполнено(Источник) Тогда
			
			ЗаписьНового = Истина;
			
		КонецЕсли;
		
	КонецЕсли;

	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытием(Отказ, СтандартнаяОбработка)
	
	Если ЗадаватьВопросОЗакрытии Тогда
		
		ТекстВопроса = НСтр("ru = 'Закрыть форму помощника? Введенные данные будут потеряны.'");
		СписокКнопок = Новый СписокЗначений;
		
		СписокКнопок.Добавить(КодВозвратаДиалога.Да, НСтр("ru = 'Закрыть'"));
		СписокКнопок.Добавить(КодВозвратаДиалога.Нет, НСтр("ru = 'Не закрывать'"));
		
		Результат = Вопрос(ТекстВопроса, СписокКнопок);
		
		Если Результат <> КодВозвратаДиалога.Да Тогда
			Отказ = Истина;
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриЗакрытии()
	
	МенеджерОборудованияКлиент.ОтключитьОборудованиеПриЗакрытииФормы(ЭтаФорма);
	
	Если ЗаписьНового Тогда
		
		ПараметрыТовара = СформироватьПараметрыТовараДляФормыПодбора();	
		                                                   		
		Оповестить("Закрытие_ПомощникНового_Номенклатура", ПараметрыТовара);
	
	КонецЕсли;
	
	Оповестить("Закрытие_ПомощникНового_Номенклатура");
	
КонецПроцедуры

&НаСервере
Функция СформироватьПараметрыТовараДляФормыПодбора()

	Возврат ПодборТоваровСервер.ПараметрыТовараИзПомощникаНовогоНоменклатуры(ЭтаФорма);
	
КонецФункции	
	
////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ ШАПКИ ФОРМЫ

&НаКлиенте
Процедура ШтрихкодПриИзменении(Элемент)
	
	ЗадаватьВопросОЗакрытии = Истина;
	
КонецПроцедуры

&НаКлиенте
Процедура ТаблицаНайденоВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ТекущиеДанные = Элементы.ТаблицаНайдено.ТекущиеДанные;
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ОткрытьЗначение(ТекущиеДанные.Номенклатура);
	
КонецПроцедуры

&НаКлиенте
Процедура НаборУпаковокПриИзменении(Элемент)
	
	НаборУпаковокПриИзмененииСервер();
	
КонецПроцедуры

&НаКлиенте
Процедура АдресКартинкиНажатие(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	Режим = РежимДиалогаВыбораФайла.Открытие;
	ВыборФайла = Новый ДиалогВыбораФайла(Режим);
	ВыборФайла.Фильтр = НоменклатураКлиент.ФильтрФайловИзображений();
	
	ВыборФайла.Выбрать();
	Если ВыборФайла.ВыбранныеФайлы.Количество() > 0 Тогда
		
		ИмяФайла = ВыборФайла.ВыбранныеФайлы[0];
		ДанныеФайлаКартинки = Новый Структура("ИмяБезРасширения, Расширение, ВремяИзменения, УниверсальноеВремяИзменения");
		
		ОбъектФайл = Новый Файл(ИмяФайла);
		
		ДанныеФайлаКартинки.ИмяБезРасширения            = ОбъектФайл.ИмяБезРасширения;
		ДанныеФайлаКартинки.Расширение                  = СтрЗаменить(ОбъектФайл.Расширение, ".", "");
		ДанныеФайлаКартинки.ВремяИзменения              = ОбъектФайл.ПолучитьВремяИзменения();
		ДанныеФайлаКартинки.УниверсальноеВремяИзменения = ОбъектФайл.ПолучитьУниверсальноеВремяИзменения();
		
		ДвоичныеДанные = Новый ДвоичныеДанные(ИмяФайла);
		АдресФайлаВХранилище = ПоместитьВоВременноеХранилище(ДвоичныеДанные, ЭтаФорма.УникальныйИдентификатор);
		АдресКартинки = АдресФайлаВХранилище;
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ФайлОписанияВФорматеHTMLНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	Режим = РежимДиалогаВыбораФайла.Открытие;
	
	ВыборФайла = Новый ДиалогВыбораФайла(Режим);
	ВыборФайла.МножественныйВыбор = Ложь;
	
	Если ЗначениеЗаполнено(ПутьКФайлуОписанию) Тогда
		ВыборФайла.ПолноеИмяФайла = ПутьКФайлуОписанию;
	КонецЕсли;
	
	ВыборФайла.Фильтр = НСтр("ru = 'Все файлы (*.*)|*.*'");
	ВыборФайла.Выбрать();
	
	Если ВыборФайла.ВыбранныеФайлы.Количество() > 0 Тогда
		
		ИмяФайла = ВыборФайла.ВыбранныеФайлы[0];
		ДанныеФайлаHTML = Новый Структура("ИмяБезРасширения, Расширение, ВремяИзменения, УниверсальноеВремяИзменения");
		
		ОбъектФайл = Новый Файл(ИмяФайла);
		
		ДанныеФайлаHTML.ИмяБезРасширения            = ОбъектФайл.ИмяБезРасширения;
		ДанныеФайлаHTML.Расширение                  = СтрЗаменить(ОбъектФайл.Расширение, ".", "");
		ДанныеФайлаHTML.ВремяИзменения              = ОбъектФайл.ПолучитьВремяИзменения();
		ДанныеФайлаHTML.УниверсальноеВремяИзменения = ОбъектФайл.ПолучитьУниверсальноеВремяИзменения();
		
		ДвоичныеДанные = Новый ДвоичныеДанные(ИмяФайла);
		АдресФайлаВХранилище = ПоместитьВоВременноеХранилище(ДвоичныеДанные, ЭтаФорма.УникальныйИдентификатор);
		АдресОписанияHTML = АдресФайлаВХранилище;
		ПутьКФайлуОписанию = ИмяФайла;
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ФайлОписанияВФорматеHTMLОчистка(Элемент, СтандартнаяОбработка)
	
	ДанныеФайлаHTML = "";
	
КонецПроцедуры

&НаКлиенте
Процедура ВидНоменклатурыПриИзменении(Элемент)
	
	ОчиститьСообщения();
	ВидНоменклатурыПриИзмененииНаСервере();
	
КонецПроцедуры

&НаКлиенте
Процедура ВидНоменклатурыОчистка(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
КонецПроцедуры

&НаКлиенте
Процедура ИспользоватьИндивидуальныйШаблонЭтикеткаПриИзменении(Элемент)
	
	Если ИспользоватьИндивидуальныйШаблонЭтикетки = 0 Тогда
		Объект.ШаблонЭтикетки = ПредопределенноеЗначение("Справочник.ШаблоныЭтикетокИЦенников.ПустаяСсылка");
	КонецЕсли;
	
	ОбщегоНазначенияУТКлиентСервер.УстановитьСвойствоЭлементаФормы(
		Элементы, "ШаблонЭтикетки", "Доступность", ИспользоватьИндивидуальныйШаблонЭтикетки <> 0);
	
КонецПроцедуры

&НаКлиенте
Процедура ИспользоватьИндивидуальныйШаблонЦенникПриИзменении(Элемент)
	
	Если ИспользоватьИндивидуальныйШаблонЦенника = 0 Тогда
		Объект.ШаблонЦенника = ПредопределенноеЗначение("Справочник.ШаблоныЭтикетокИЦенников.ПустаяСсылка");
	КонецЕсли;
	
	ОбщегоНазначенияУТКлиентСервер.УстановитьСвойствоЭлементаФормы(
		Элементы, "ШаблонЦенника", "Доступность", ИспользоватьИндивидуальныйШаблонЦенника <> 0);
	
КонецПроцедуры

&НаКлиенте
Процедура ЕдиницаИзмеренияПриИзменении(Элемент)
	
	УстановитьВидимостьРегистрацииШтрихкода();
	
КонецПроцедуры

&НаКлиенте
Процедура ДекорацияУчетнаяИнформацияНажатие(Элемент)
	
	ДекорацияУчетнаяИнформацияНажатиеНаСервере();
	
КонецПроцедуры

&НаКлиенте
Процедура ТоварнаяКатегорияПриИзменении(Элемент)
	
	ТоварнаяКатегорияПриИзмененииСервер();
	
КонецПроцедуры

&НаКлиенте
Процедура ТоварнаяКатегорияНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	ОткрытьФорму("Справочник.ТоварныеКатегории.ФормаВыбора", Новый Структура("Владелец",Объект.ВидНоменклатуры), Элемент);
	
КонецПроцедуры

&НаКлиенте
Процедура ПроизводительПриИзменении(Элемент)
	
	Если ИспользоватьАссортимент Тогда
		ПроизводительПриИзмененииСервер()
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПоставляетсяВМногооборотнойТареПриИзменении(Элемент)
	
	ОбновитьДоступностьЭлементовМногооборотнойТары(ЭтаФорма, Истина);

КонецПроцедуры

&НаСервере
Процедура ПроизводительПриИзмененииСервер()
		
	Объект.Марка = Справочники.Марки.ПолучитьМаркуПоУмолчанию(Объект.Производитель);
	
КонецПроцедуры

&НаКлиенте
Процедура НоменклатураМногооборотнаяТараПриИзменении(Элемент)
	
	НоменклатураМногооборотнаяТараПриИзмененииСервер();
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ КОМАНД ФОРМЫ

&НаКлиенте
Процедура Далее(Команда)
	
	ВыполнитьПереходПоСтраницам(Команда);
	
КонецПроцедуры

&НаКлиенте
Процедура Назад(Команда)
	
	ВыполнитьПереходПоСтраницам(Команда);
	
КонецПроцедуры

&НаКлиенте
Процедура Отмена(Команда)
	
	Закрыть();
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьРабочееНаименованиеПоШаблону(Команда)
	
	ЗаполнитьНаименованиеПоШаблонуКлиент("Рабочее");
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьНаименованиеДляПечатиПоШаблону(Команда)
	
	ЗаполнитьНаименованиеПоШаблонуКлиент("ДляПечати");
	
КонецПроцедуры

&НаКлиенте
Процедура ОбъектИспользоватьУпаковкиПриИзменении(Элемент)
	
	Если НЕ Объект.ИспользоватьУпаковки Тогда
		Объект.НаборУпаковок = ПредопределенноеЗначение("Справочник.НаборыУпаковок.ПустаяСсылка");
	КонецЕсли;
	
	ОбщегоНазначенияУТКлиентСервер.УстановитьСвойствоЭлементаФормы(
		Элементы, "НаборУпаковок",
		"ТолькоПросмотр", НЕ Объект.ИспользоватьУпаковки);
	ОбщегоНазначенияУТКлиентСервер.УстановитьСвойствоЭлементаФормы(
		Элементы, "НаборУпаковок",
		"АвтоОтметкаНезаполненного", Объект.ИспользоватьУпаковки);
	ОбщегоНазначенияУТКлиентСервер.УстановитьСвойствоЭлементаФормы(
		Элементы, "НаборУпаковок",
		"ОтметкаНезаполненного", Объект.ИспользоватьУпаковки Или ЗначениеЗаполнено(Объект.НаборУпаковок));
	
	ИспользуютсяИндивидуальныеУпаковки = Объект.НаборУпаковок = ПредопределенноеЗначение("Справочник.НаборыУпаковок.ИндивидуальныйДляНоменклатуры");
	
	ОбщегоНазначенияУТКлиентСервер.УстановитьСвойствоЭлементаФормы(
		Элементы, "ЕдиницаИзмерения",
		"ТолькоПросмотр", Объект.ИспользоватьУпаковки И НЕ ИспользуютсяИндивидуальныеУпаковки);
	
	Если РеквизитыОбъектаКопирования <> Неопределено Тогда
		КопироватьИндивидуальныеУпаковки = ЕстьИндивидуальныеУпаковкиВОбъектеКопирования
			И Объект.ИспользоватьУпаковки И ИспользуютсяИндивидуальныеУпаковки;
		ОбщегоНазначенияУТКлиентСервер.УстановитьСвойствоЭлементаФормы(
			Элементы, "КопироватьИндивидуальныеУпаковки",
			"Доступность", КопироватьИндивидуальныеУпаковки);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ВыбратьСуществующую(Команда)
	
	ТекущиеДанные = Элементы.ТаблицаНайдено.ТекущиеДанные;
	
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	Иначе
		
		ЗадаватьВопросОЗакрытии = Ложь;
		Оповестить("Запись_Номенклатура",Новый Структура(),ТекущиеДанные.Номенклатура);
		
		Закрыть();
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура СоздатьНовую(Команда)
	
	ВыполнитьПереходПоСтраницам(Команда);
	
КонецПроцедуры

&НаКлиенте
Процедура Очистить(Команда)
	
	ДанныеФайлаКартинки = Неопределено;
	АдресКартинки = ""
	
КонецПроцедуры

&НаСервере
Процедура ПерейтиКСозданиюИндХарактеристикИУпаковок(НоменклатураСсылка)
	
	ОбщегоНазначенияУТКлиентСервер.УстановитьСвойствоЭлементаФормы(
		Элементы, "ГруппаИндивидуальныеУпаковки",
		"Видимость", ДобавлятьИндивидуальныеУпаковкиПриСозданииНоменклатуры);
	ОбщегоНазначенияУТКлиентСервер.УстановитьСвойствоЭлементаФормы(
		Элементы, "ГруппаИндивидуальныеХарактеристики",
		"Видимость", ДобавлятьИндивидуальныеХарактеристикиПриСозданииНоменклатуры);
	
	УстановитьСтраницуПомощника(Элементы.СтраницаИндивидуальныеХарактеристикиУпаковки);
	
	ВладелецУпаковок = НоменклатураСсылка;
	
	Если Объект.ИспользоватьУпаковки Тогда
		
		Если Объект.НаборУпаковок <> Справочники.НаборыУпаковок.ИндивидуальныйДляНоменклатуры Тогда
			
			ВладелецУпаковок = Объект.НаборУпаковок;
			
			ТекстЗаголовка = НСтр("ru = 'Список упаковок общий для набора упаковок %НаборУпаковок%'");
			ТекстЗаголовка = СтрЗаменить(ТекстЗаголовка, "%НаборУпаковок%", ВладелецУпаковок);
			
			ОбщегоНазначенияУТКлиентСервер.УстановитьСвойствоЭлементаФормы(
				Элементы, "ГруппаИндивидуальныеУпаковки", "Заголовок", ТекстЗаголовка);
			
		КонецЕсли;
		
	Иначе
		
		ОбщегоНазначенияУТКлиентСервер.УстановитьСвойствоЭлементаФормы(
			Элементы, "ГруппаИндивидуальныеУпаковки", "Видимость", Ложь);
		
	КонецЕсли;
	
	Если Не ИспользоватьХарактеристики Или ИспользоватьХарактеристикиОбщие Тогда
		
		ОбщегоНазначенияУТКлиентСервер.УстановитьСвойствоЭлементаФормы(
			Элементы, "ГруппаИндивидуальныеХарактеристики", "Видимость", Ложь);
		
	КонецЕсли;
	
	// Установить отборы динамических списков - инд. характеристик и инд. упаковок.
	Если ИспользоватьХарактеристики И Не ИспользоватьХарактеристикиОбщие Тогда
		ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбора(ИндивидуальныеХарактеристики.Отбор, "Владелец", НоменклатураСсылка);
	КонецЕсли;

	ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбора(ИндивидуальныеУпаковки.Отбор, "Владелец", ВладелецУпаковок);	
	
КонецПроцедуры

&НаСервере
Процедура ПриПереходеСоСтраницыКонтроляУникальности(ИмяКоманды)
	
	Отказ = Ложь;
	
	ПроверитьЗаполнениеОбязательныхУникальныхРеквизитов(Отказ);
	
	Если НЕ Отказ Тогда
		
		ПроверитьВозможностьСозданияЭлементаПоГруппеДоступа(Отказ);
		
	КонецЕсли;
	
	Если Отказ Тогда
		Возврат;
	КонецЕсли; 
	
	ЗадаватьВопросОЗакрытии = Истина;
	
	ПроверитьУникальностьЭлемента();
	УстановитьВидимостьРегистрацииШтрихкода();
	УстановитьВидимостьКомандыСозданияНовогоЭлемента();
	УстановитьДоступностьРедактированияУникальныхРеквизитов(Ложь);
	
	ЕстьНайденныеЭлементы = (ТаблицаНайдено.Количество() > 0);
	
	Если ЕстьНайденныеЭлементы Тогда
		
		СледующаяСтраницаПомощника = Элементы.СтраницаНайдено;
		
	Иначе
		
		СледующаяСтраницаПомощника = Элементы.СтраницаУчетнаяИнформация;
		
	КонецЕсли;
	
	УстановитьСтраницуПомощника(СледующаяСтраницаПомощника);
	
КонецПроцедуры

&НаСервере
Процедура ПриПереходеСоСтраницыНайдено(ИмяКоманды)
	
	Если ИмяКоманды = "СоздатьНовую" Тогда
		
		СледующаяСтраницаПомощника = Элементы.СтраницаУчетнаяИнформация;
		
	ИначеЕсли ИмяКоманды = "Назад" Тогда
		
		СледующаяСтраницаПомощника = Элементы.СтраницаКонтрольУникальности;
		
	КонецЕсли;
	
	УстановитьСтраницуПомощника(СледующаяСтраницаПомощника);
	
КонецПроцедуры

&НаКлиенте
Процедура ПриПереходеСоСтраницыУчетнойИнформацииКлиент(ИмяКоманды, НовыйЭлементСправочника = Неопределено)
	
	Если ИмяКоманды = "СоздатьНовую" Тогда
		
		ФормироватьРабочееНаименование = Ложь;
		ФормироватьНаименованиеДляПечати = Ложь;
		
		Если (НЕ ЗначениеЗаполнено(Объект.Наименование) И ЗначениеЗаполнено(ШаблонРабочегоНаименования))
			ИЛИ ЗапретРедактированияРабочегоНаименования Тогда
			
			ФормироватьРабочееНаименование = Истина;
			
		КонецЕсли;
		
		Если (НЕ ЗначениеЗаполнено(Объект.НаименованиеПолное) И ЗначениеЗаполнено(ШаблонНаименованияДляПечати))
			ИЛИ ЗапретРедактированияНаименованияДляПечати Тогда
			
			ФормироватьНаименованиеДляПечати = Истина;
			
		КонецЕсли;
		
		Если ФормироватьРабочееНаименование И ФормироватьНаименованиеДляПечати Тогда
			
			ЗаполнитьНаименованиеПоШаблонуКлиент("Оба");
			
		ИначеЕсли ФормироватьРабочееНаименование Тогда
			
			ЗаполнитьНаименованиеПоШаблонуКлиент("Рабочее");
			
		ИначеЕсли ФормироватьНаименованиеДляПечати Тогда
			
			ЗаполнитьНаименованиеПоШаблонуКлиент("ДляПечати");
			
		КонецЕсли;
		
	КонецЕсли;
	
	ПриПереходеСоСтраницыУчетнойИнформации(ИмяКоманды, НовыйЭлементСправочника);
	
КонецПроцедуры
	
&НаСервере
Процедура ПриПереходеСоСтраницыУчетнойИнформации(ИмяКоманды, НовыйЭлементСправочника = Неопределено)
	
	Отказ = Ложь;
	
	ЕстьНайденныеЭлементы             = (ТаблицаНайдено.Количество() > 0);
	ЕстьРеквизитыКонтроляУникальности = (ТаблицаУникальныхРеквизитов.Количество() > 0);
	
	Если ИмяКоманды = "СоздатьНовую" Тогда
		
		ПроверитьЗаполнениеОбязательныхУчетныхРеквизитов(Отказ);
		
		Если Отказ Тогда
			Возврат;
		КонецЕсли;
		
		НовыйЭлементСправочника = НовыйЭлементСправочника();
		СозданНовыйЭлементСправочника = ЗначениеЗаполнено(НовыйЭлементСправочника);
		
		Если НЕ СозданНовыйЭлементСправочника Тогда
			
			ПриПереходеСоСтраницыУчетнойИнформации("Назад");
			Возврат;
			
		КонецЕсли;
		
		ЗадаватьВопросОЗакрытии = Ложь;
		
		ПерейтиКСозданиюИндивидуальныхПараметров = 
		(Объект.ИспользоватьУпаковки И ДобавлятьИндивидуальныеУпаковкиПриСозданииНоменклатуры)
		Или
		(ИспользоватьХарактеристики И Не ИспользоватьХарактеристикиОбщие И ДобавлятьИндивидуальныеХарактеристикиПриСозданииНоменклатуры);
		
		Если ПерейтиКСозданиюИндивидуальныхПараметров Тогда
			ПерейтиКСозданиюИндХарактеристикИУпаковок(НовыйЭлементСправочника);
		КонецЕсли;
		
		Возврат;
		
	КонецЕсли;
	
	Если ИмяКоманды = "Назад" Тогда
		
		СледующаяСтраницаПомощника = Элементы.СтраницаКонтрольУникальности;
		
		Если ЕстьРеквизитыКонтроляУникальности Тогда
			
			УстановитьДоступностьРедактированияУникальныхРеквизитов(Истина);
			
			Если ЕстьНайденныеЭлементы Тогда
				
				СледующаяСтраницаПомощника = Элементы.СтраницаНайдено;
				
			Иначе
				
				СледующаяСтраницаПомощника = Элементы.СтраницаКонтрольУникальности;
				
			КонецЕсли;
			
		КонецЕсли;
		
		УстановитьДоступностьРедактированияНаименований(Истина);
		
	КонецЕсли;
	
	УстановитьСтраницуПомощника(СледующаяСтраницаПомощника);
	
КонецПроцедуры

&НаКлиенте
Процедура ВыполнитьПереходПоСтраницам(Команда)
	
	Перем НовыйЭлементСправочника;
	
	ОчиститьСообщения();
	
	ТекущаяСтраницаПомощника = Элементы.СтраницыПомощника.ТекущаяСтраница;
	ИмяКоманды = Команда.Имя;
	
	Если ТекущаяСтраницаПомощника = Элементы.СтраницаКонтрольУникальности Тогда
		
		ПриПереходеСоСтраницыКонтроляУникальности(ИмяКоманды);
		
	КонецЕсли;
	
	Если ТекущаяСтраницаПомощника = Элементы.СтраницаНайдено Тогда
		
		ПриПереходеСоСтраницыНайдено(ИмяКоманды);
		
	КонецЕсли;
	
	Если ТекущаяСтраницаПомощника = Элементы.СтраницаУчетнаяИнформация Тогда
		
		ПриПереходеСоСтраницыУчетнойИнформацииКлиент(ИмяКоманды, НовыйЭлементСправочника);
		
		СозданНовыйЭлементСправочника = ЗначениеЗаполнено(НовыйЭлементСправочника);
		
		Если СозданНовыйЭлементСправочника Тогда
			
			// Добавить запись в историю работы пользователя.
			ИсторияРаботыПользователя.Добавить(НовыйЭлементСправочника);
			
			// Показать оповещение оповщение.
			ТекстОповещения = НСтр("ru = 'Создание:'");
			
			НавигационнаяСсылка = ПолучитьНавигационнуюСсылку(НовыйЭлементСправочника);
			
			ПоказатьОповещениеПользователя(
				ТекстОповещения,
				НавигационнаяСсылка,
				Строка(НовыйЭлементСправочника),
				БиблиотекаКартинок.Информация32
			);
			
			Оповестить("Запись_Номенклатура",Новый Структура(), НовыйЭлементСправочника);
			
			ПерейтиКСозданиюИндивидуальныхПараметров = 
			(Объект.ИспользоватьУпаковки И ДобавлятьИндивидуальныеУпаковкиПриСозданииНоменклатуры)
			Или    
			(ИспользоватьХарактеристики И Не ИспользоватьХарактеристикиОбщие И ДобавлятьИндивидуальныеХарактеристикиПриСозданииНоменклатуры);
			
			Если НЕ ПерейтиКСозданиюИндивидуальныхПараметров Тогда
				
				Закрыть();
				
			Иначе
				
				ПерейтиКСозданиюИндХарактеристикИУпаковок(НовыйЭлементСправочника);
				
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПолучитьКомандыСтраницыПомощника(СтраницаПомощника, КомандыПомощника, КнопкаПоУмолчанию)
	
	КомандыПомощника  = "";
	КнопкаПоУмолчанию = "";
	
	Если СтраницаПомощника = Элементы.СтраницаКонтрольУникальности Тогда
		
		КомандыПомощника  = "Далее,Отмена";
		КнопкаПоУмолчанию = "Далее";
		
	КонецЕсли;
	
	Если СтраницаПомощника = Элементы.СтраницаНайдено Тогда
		
		КомандыПомощника  = "Назад,ВыбратьСуществующую,СоздатьНовую,Отмена";
		КнопкаПоУмолчанию = "ВыбратьСуществующую";
		
	КонецЕсли;
	
	Если СтраницаПомощника = Элементы.СтраницаУчетнаяИнформация Тогда
		
		КомандыПомощника = "СоздатьНовую,Отмена";
		
		Если РегистрироватьШтрихкодПриСозданииНоменклатуры 
			ИЛИ КонтролироватьУникальностьНоменклатурыИХарактеристикПоСочетаниюЗначенийРеквизитов Тогда
			КомандыПомощника = "Назад," + КомандыПомощника;
		КонецЕсли;
		
		КнопкаПоУмолчанию = "СоздатьНовую";
		
	КонецЕсли;
	
	Если СтраницаПомощника = Элементы.СтраницаИндивидуальныеХарактеристикиУпаковки Тогда
		
		КомандыПомощника  = "Отмена";
		КнопкаПоУмолчанию = "Отмена";
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура УстановитьСтраницуПомощника(СтраницаПомощника)
	
	Элементы.СтраницыПомощника.ТекущаяСтраница = СтраницаПомощника;
	
	УстановитьВидимостьКомандСтраницыПомощника(СтраницаПомощника);
	УстановитьЗаголовкиКомандСтраницыПомощника(СтраницаПомощника);
	
КонецПроцедуры

&НаСервере
Процедура УстановитьЗаголовкиКомандСтраницыПомощника(СтраницаПомощника)
	
	ЗаголовокКнопки = НСтр("ru = 'Создать новую'");
	
	Если СтраницаПомощника = Элементы.СтраницаУчетнаяИнформация Тогда
		ЗаголовокКнопки = НСтр("ru = 'Записать'");
	КонецЕсли;
	
	Элементы.СоздатьНовую.Заголовок = ЗаголовокКнопки;
	
КонецПроцедуры

&НаСервере
Процедура УстановитьВидимостьКомандСтраницыПомощника(СтраницаПомощника)
	
	Перем КомандыПомощника, КнопкаПоУмолчанию;
	
	ПолучитьКомандыСтраницыПомощника(СтраницаПомощника, КомандыПомощника, КнопкаПоУмолчанию);
	
	// Сначала сделать все команды помощника невидимыми.
	ВсеКомандыПомощника = Новый Массив;
	
	ВсеКомандыПомощника.Добавить("Далее");
	ВсеКомандыПомощника.Добавить("Назад");
	ВсеКомандыПомощника.Добавить("Отмена");
	ВсеКомандыПомощника.Добавить("ВыбратьСуществующую");
	ВсеКомандыПомощника.Добавить("СоздатьНовую");
	
	Для каждого ИмяЭлемента Из ВсеКомандыПомощника Цикл
		
		ОбщегоНазначенияУТКлиентСервер.УстановитьСвойствоЭлементаФормы(
			Элементы, ИмяЭлемента, "Видимость", Ложь);
		
	КонецЦикла;
	
	// Затем, включить видимость только у нужных команд.
	ВидимыеКомандыПомощника = СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивПодстрок(КомандыПомощника, ",");
	
	Для каждого ИмяЭлемента Из ВидимыеКомандыПомощника Цикл
		
		ОбщегоНазначенияУТКлиентСервер.УстановитьСвойствоЭлементаФормы(
			Элементы, ИмяЭлемента, "Видимость", Истина);
		
	КонецЦикла;
	
	// Установить кнопку по умолчанию.
	Элементы.ОсновныеКоманды.ПодчиненныеЭлементы[КнопкаПоУмолчанию].КнопкаПоУмолчанию = Истина;
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

////////////////////////////////////////////////////////////////////////////////
// При изменении реквизитов

&НаСервере
Процедура ВидНоменклатурыПриИзмененииНаСервере()
	
	Если НЕ ЗначениеЗаполнено(Объект.ВидНоменклатуры) Тогда
		Объект.ВидНоменклатуры = ВидНоменклатурыДляКонтроля;
		Возврат;
	КонецЕсли;
	
	Отказ = Ложь;
	
	// Если выбрали тот же самый вид номенклатуры, не выполнять никаких действий.
	Если Объект.ВидНоменклатуры = ВидНоменклатурыДляКонтроля Тогда
		Возврат;
	КонецЕсли;
	
	ЗадаватьВопросОЗакрытии = Истина;
	
	ПредыдущийВидНоменклатуры = ВидНоменклатурыДляКонтроля;
	ВидНоменклатурыДляКонтроля = Объект.ВидНоменклатуры;
	
	// Установить значения реквизитов номенклатуры по значениям выбранного вида номенклатура.
	РеквизитыВидаНоменклатуры = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Объект.ВидНоменклатуры, 
	                            "ТипНоменклатуры,ВариантОформленияПродажи,ГруппаДоступа,ИспользоватьХарактеристики,ИспользованиеХарактеристик,
	                            |ШаблонНаименованияДляПечатиНоменклатуры,ШаблонРабочегоНаименованияНоменклатуры,
	                            |ЗапретРедактированияРабочегоНаименованияНоменклатуры,
	                            |ЗапретРедактированияНаименованияНоменклатурыДляПечати,
	                            |НаборСвойств, ЕдиницаИзмерения, СкладскаяГруппа, ГруппаФинансовогоУчета,
	                            |ИспользоватьУпаковки, НаборУпаковок, ШаблонЦенника, ШаблонЭтикетки");
	
	Объект.ТипНоменклатуры            = РеквизитыВидаНоменклатуры.ТипНоменклатуры;
	Объект.ВариантОформленияПродажи   = РеквизитыВидаНоменклатуры.ВариантОформленияПродажи;
	Объект.ИспользованиеХарактеристик = РеквизитыВидаНоменклатуры.ИспользованиеХарактеристик;
	
	Если Справочники.ГруппыДоступаНоменклатуры.ИспользуютсяГруппыДоступа() Тогда
		Объект.ГруппаДоступа =
			Справочники.ГруппыДоступаНоменклатуры.ПолучитьГруппуДоступаПоУмолчанию(
				Новый Структура("ГруппаДоступа, Ссылка", РеквизитыВидаНоменклатуры.ГруппаДоступа, Объект.Ссылка));
	КонецЕсли;
	
	ГруппаДоступаНоменклатурыДляКонтроля = РеквизитыВидаНоменклатуры.ГруппаДоступа;
	ШаблонНаименованияДляПечати = РеквизитыВидаНоменклатуры.ШаблонНаименованияДляПечатиНоменклатуры;
	ШаблонРабочегоНаименования = РеквизитыВидаНоменклатуры.ШаблонРабочегоНаименованияНоменклатуры;
	ЗапретРедактированияНаименованияДляПечати = РеквизитыВидаНоменклатуры.ЗапретРедактированияНаименованияНоменклатурыДляПечати;
	ЗапретРедактированияРабочегоНаименования = РеквизитыВидаНоменклатуры.ЗапретРедактированияРабочегоНаименованияНоменклатуры;
	НаборСвойств = РеквизитыВидаНоменклатуры.НаборСвойств;
	ИспользоватьХарактеристики = РеквизитыВидаНоменклатуры.ИспользоватьХарактеристики; 
	
	// Установить значения полей наименования по настройкам шаблонов наименований.
	Если Объект.ВидНоменклатуры.ЗапретРедактированияРабочегоНаименованияНоменклатуры Тогда
		Объект.Наименование = "";
	Иначе
		// Если у предыдущего вида номенклатуры был установлен флаг "ЗапретРедактированияРабочегоНаименованияНоменклатуры",
		// то в поле "Наименования" осталась служебная строка "<Рабочее наименование будет сформировано по шаблону>",
		// нужно стереть ее.
		Если ЗначениеЗаполнено(ПредыдущийВидНоменклатуры) Тогда
			Если ПредыдущийВидНоменклатуры.ЗапретРедактированияРабочегоНаименованияНоменклатуры Тогда
				Объект.Наименование = "";
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(ШаблонРабочегоНаименования) И ЗначениеЗаполнено(НаименованиеЗаполнение) Тогда
		Объект.Наименование = НаименованиеЗаполнение;
	КонецЕсли;
	
	Если Объект.ВидНоменклатуры.ЗапретРедактированияНаименованияНоменклатурыДляПечати Тогда
		Объект.НаименованиеПолное = "";
	Иначе
		// Если у предыдущего вида номенклатуры был установлен флаг "ЗапретРедактированияНаименованияНоменклатурыДляПечати",
		// то в поле "Наименования" осталась служебная строка "<Наименование для печати будет сформировано по шаблону>",
		// нужно стереть ее.
		Если ЗначениеЗаполнено(ПредыдущийВидНоменклатуры) Тогда
			Если ПредыдущийВидНоменклатуры.ЗапретРедактированияНаименованияНоменклатурыДляПечати Тогда
				Объект.НаименованиеПолное = "";
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(ШаблонНаименованияДляПечати) И ЗначениеЗаполнено(НаименованиеПолноеЗаполнение) Тогда
		Объект.НаименованиеПолное = НаименованиеПолноеЗаполнение;
	КонецЕсли;
	
	// Если номенклатура не копируется и реквизиты не заполнены по значениям быстрого отбора,
	// то подставить значения реквизитов из вида номенклатуры.
	Если НЕ ЗначениеЗаполнено(ИсточникКопирования) И НЕ ЕстьЗначенияБыстрогоОтбора Тогда
		
		ЗаполнитьЗначенияСвойств(Объект, РеквизитыВидаНоменклатуры, 
		    "ЕдиницаИзмерения, СкладскаяГруппа, ГруппаФинансовогоУчета, 
		    |ИспользоватьУпаковки, НаборУпаковок, ШаблонЦенника, ШаблонЭтикетки");
		
		ИспользоватьИндивидуальныйШаблонЦенника  = ?(ЗначениеЗаполнено(Объект.ШаблонЦенника), 1, 0);
		ИспользоватьИндивидуальныйШаблонЭтикетки = ?(ЗначениеЗаполнено(Объект.ШаблонЭтикетки), 1, 0);
		
		Объект.ИспользоватьИндивидуальныйШаблонЦенника  = ЗначениеЗаполнено(Объект.ШаблонЦенника);
		Объект.ИспользоватьИндивидуальныйШаблонЭтикетки = ЗначениеЗаполнено(Объект.ШаблонЭтикетки);
		
		ОбщегоНазначенияУТКлиентСервер.УстановитьСвойствоЭлементаФормы(
			Элементы, "ШаблонЦенника", "Доступность", ИспользоватьИндивидуальныйШаблонЦенника = 1);
		ОбщегоНазначенияУТКлиентСервер.УстановитьСвойствоЭлементаФормы(
			Элементы, "ШаблонЭтикетки", "Доступность", ИспользоватьИндивидуальныйШаблонЭтикетки = 1);
		
	КонецЕсли;
	
	ЗаполнитьЗначенияПоТипуНоменклатуры();
	ЗаполнитьСоставОбязательныхРеквизитов();
	ЗаполнитьСоставДополнительныхУникальныхРеквизитов();
	
	ОбновитьДоступностьЭлементовМногооборотнойТары(ЭтаФорма);
	УстановитьВидимостьРеквизитовПоНастройкамВидаНоменклатуры();
	УстановитьДоступностьРедактированияНаименований(Истина);
	
	// Установить заголовок единицы измерения.
	Если Объект.ТипНоменклатуры = Перечисления.ТипыНоменклатуры.Товар Или
		Объект.ТипНоменклатуры = Перечисления.ТипыНоменклатуры.МногооборотнаяТара Тогда
		ЗаголовокЕдиницыИзмерения = НСтр("ru = 'Единица хранения'");
	Иначе
		ЗаголовокЕдиницыИзмерения = НСтр("ru = 'Единица измерения'");
	КонецЕсли;
	
	Элементы.ЕдиницаИзмерения.Заголовок = ЗаголовокЕдиницыИзмерения;
	
	УстановитьВидимостьРегистрацииШтрихкода();
	
	ОбщегоНазначенияУТКлиентСервер.УстановитьСвойствоЭлементаФормы(
		Элементы, "ГруппаДанныеВидНоменклатуры", "Видимость", ЗначениеЗаполнено(Объект.ВидНоменклатуры));
	ОбщегоНазначенияУТКлиентСервер.УстановитьСвойствоЭлементаФормы(
		Элементы, "ОбъектВидНоменклатурыНастройкаИспользованияСерий", "Видимость", Объект.ВидНоменклатуры.ИспользоватьСерии);
	ОбщегоНазначенияУТКлиентСервер.УстановитьСвойствоЭлементаФормы(
		Элементы, "ОбъектВидНоменклатурыВариантОформленияПродажи", "Видимость",
		НЕ Объект.ТипНоменклатуры = ПредопределенноеЗначение("Перечисление.ТипыНоменклатуры.Товар")
			И НЕ Объект.ТипНоменклатуры = ПредопределенноеЗначение("Перечисление.ТипыНоменклатуры.МногооборотнаяТара"));
	
	// Проверить возможность создания элемента номенклатуры по группе доступа вида номенклатуры.
	ПроверитьВозможностьСозданияЭлементаПоГруппеДоступа(Отказ);
	
	ОбщегоНазначенияУТКлиентСервер.УстановитьСвойствоЭлементаФормы(
		Элементы, "ТоварнаяКатегория", "Доступность", ЗначениеЗаполнено(Объект.ВидНоменклатуры));
	
	Если Объект.ТипНоменклатуры <> ПредопределенноеЗначение("Перечисление.ТипыНоменклатуры.Товар")
		Или Не ЗначениеЗаполнено(Объект.ВидНоменклатуры) Тогда
		Объект.ПоставляетсяВМногооборотнойТаре = Ложь;
	КонецЕсли;
	
	Если РеквизитыОбъектаКопирования <> Неопределено Тогда
		КопироватьИндивидуальныеХарактеристики = ЕстьИндивидуальныеХарактеристикиВОбъектеКопирования
		    И (Объект.ИспользованиеХарактеристик = Перечисления.ВариантыИспользованияХарактеристикНоменклатуры.ИндивидуальныеДляНоменклатуры);
		ОбщегоНазначенияУТКлиентСервер.УстановитьСвойствоЭлементаФормы(
			Элементы, "КопироватьИндивидуальныеХарактеристики", "Доступность", КопироватьИндивидуальныеХарактеристики);
	КонецЕсли;
	
	Если Отказ Тогда
		Возврат;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура НаборУпаковокПриИзмененииСервер()
	
	ИспользуютсяИндивидуальныеУпаковки = (Объект.НаборУпаковок = Справочники.НаборыУпаковок.ИндивидуальныйДляНоменклатуры);
	
	Если НЕ ИспользуютсяИндивидуальныеУпаковки 
		И ЗначениеЗаполнено(Объект.НаборУпаковок) Тогда
		
		Объект.ЕдиницаИзмерения = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Объект.НаборУпаковок, "ЕдиницаИзмерения");
		УстановитьВидимостьРегистрацииШтрихкода();
		
	КонецЕсли;
	
	ОбщегоНазначенияУТКлиентСервер.УстановитьСвойствоЭлементаФормы(
		Элементы, "ЕдиницаИзмерения",
		"ТолькоПросмотр", НЕ ИспользуютсяИндивидуальныеУпаковки);
		
	Если РеквизитыОбъектаКопирования <> Неопределено Тогда
		КопироватьИндивидуальныеУпаковки = ЕстьИндивидуальныеУпаковкиВОбъектеКопирования
		    И Объект.ИспользоватьУпаковки И Объект.НаборУпаковок = Справочники.НаборыУпаковок.ИндивидуальныйДляНоменклатуры;
		ОбщегоНазначенияУТКлиентСервер.УстановитьСвойствоЭлементаФормы(
			Элементы, "КопироватьИндивидуальныеУпаковки", "Доступность", КопироватьИндивидуальныеУпаковки);
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ТоварнаяКатегорияПриИзмененииСервер()
	
	АссортиментСервер.ПроверитьСоответствиеКатегорииВидуНоменклатуры(Объект);
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// Штрихкоды и торговое оборудование

&НаКлиенте
Процедура ОбработатьШтрихкоды(ДанныеШтрихкодов)
	
	Если ДанныеШтрихкодов.Количество() > 0
		И Элементы.СтраницыПомощника.ТекущаяСтраница = Элементы.СтраницаКонтрольУникальности
		И Элементы.Найти("Штрихкод") <> Неопределено
		И Элементы.Штрихкод.Видимость
		И Элементы.Штрихкод.Доступность Тогда
		
		Штрихкод = ДанныеШтрихкодов[0].Штрихкод;
		
	КонецЕсли;
	
КонецПроцедуры // ОбработатьШтрихкоды()

////////////////////////////////////////////////////////////////////////////////
// Прочее

&НаСервере
Процедура ЗаполнитьПоПараметрам()
	
	СправочникОбъект = РеквизитФормыВЗначение("Объект");
	СправочникОбъект.Заполнить(Неопределено);
	
	ЗначениеВРеквизитФормы(СправочникОбъект, "Объект");
	
	Если ЗначениеЗаполнено(Параметры.ЗначениеКопирования) Тогда
		
		// Новый элемент номенклатуры создан копированием, реквизиты формы заполняются
		// значениями реквизитов параметра копирования.
		ИсточникКопирования = Параметры.ЗначениеКопирования;
		ЗаполнитьЗначенияСвойств(Объект, ИсточникКопирования,,"ГруппаДоступа, ФайлКартинки, ФайлОписанияДляСайта, 
		    |ДополнительныеРеквизиты, Код, ПометкаУдаления");
		
		Объект.ДополнительныеРеквизиты.Загрузить(ИсточникКопирования.ДополнительныеРеквизиты.Выгрузить());
		
		// Создаются реквизиты формы, необходимые для работы с дополнительными реквизитами и свойствами.
		// Добавляются: Свойства_ИспользоватьСвойства, Свойства_ИспользоватьДопРеквизиты, Свойства_ОсновнойНабор,
		//              Свойства_ОписаниеДополнительныхРеквизитов, Свойства_ИмяЭлементаДляРазмещения и т.п.
		УправлениеСвойствами.ПриСозданииНаСервере(ЭтаФорма, Объект, "ГруппаДополнительныеРеквизиты");
		
		СтруктураРеквизитовОбъектаКопирования = Новый Структура;
		СтруктураРеквизитовОбъектаКопирования.Вставить("ОбъектКопирования",          ИсточникКопирования);
		СтруктураРеквизитовОбъектаКопирования.Вставить("Наименование",               Объект.Наименование);
		СтруктураРеквизитовОбъектаКопирования.Вставить("ВидНоменклатуры",            Объект.ВидНоменклатуры);
		СтруктураРеквизитовОбъектаКопирования.Вставить("ИспользоватьУпаковки",       Объект.ИспользоватьУпаковки);
		СтруктураРеквизитовОбъектаКопирования.Вставить("НаборУпаковок",              Объект.НаборУпаковок);
		СтруктураРеквизитовОбъектаКопирования.Вставить("ИспользованиеХарактеристик", ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Объект.ВидНоменклатуры,"ИспользованиеХарактеристик"));
		
		РеквизитыОбъектаКопирования = Новый ФиксированнаяСтруктура(СтруктураРеквизитовОбъектаКопирования);
		
		НаименованиеЗаполнение       = Объект.Наименование;
		НаименованиеПолноеЗаполнение = Объект.НаименованиеПолное;
		ВидНоменклатуры              = Объект.ВидНоменклатуры;
		ГруппаНоменклатуры           = Объект.Родитель;
		
		Если Параметры.Свойство("СозданиеНекачественногоТовара") Тогда
			
			СозданиеНекачественногоТовара = Истина;
			Автозаголовок = Ложь;
			
			ТекстЗаголовка = НСтр("ru='Создание номенклатуры для испорченного товара ""%НаименованиеТовара%"".'");
			Заголовок = СтрЗаменить(ТекстЗаголовка, "%НаименованиеТовара%", Строка(Объект.Наименование));
			
			Объект.Качество        = Параметры.СозданиеНекачественногоТовара;
			Объект.СкладскаяГруппа = Справочники.СкладскиеГруппыНоменклатуры.ПустаяСсылка();
			Объект.ЦеноваяГруппа   = Справочники.ЦеновыеГруппы.ПустаяСсылка();
			Объект.ФайлКартинки    = Справочники.НоменклатураПрисоединенныеФайлы.ПустаяСсылка();
			
			НаименованиеЗаполнение       = Объект.Наименование + ", " + Строка(Объект.Качество);
			НаименованиеПолноеЗаполнение = Объект.НаименованиеПолное + ", " + Строка(Объект.Качество);
			
			ОбщегоНазначенияУТКлиентСервер.УстановитьСвойствоЭлементаФормы(
				Элементы, "Качество", "ТолькоПросмотр", Истина);
			ОбщегоНазначенияУТКлиентСервер.УстановитьСвойствоЭлементаФормы(
				Элементы, "Штрихкод", "Видимость", Ложь);
			
		ИначеЕсли  Параметры.Свойство("НаименованиеНоменклатурыПоставщика") 
			И ЗначениеЗаполнено(Параметры.НаименованиеНоменклатурыПоставщика) Тогда
			
			НаименованиеЗаполнение = Параметры.НаименованиеНоменклатурыПоставщика;
			
		КонецЕсли;
		
		Если Параметры.Свойство("АртикулНоменклатурыПоставщика") 
			И ЗначениеЗаполнено(Параметры.АртикулНоменклатурыПоставщика) Тогда
			
			Объект.Артикул = Параметры.АртикулНоменклатурыПоставщика;
			
		КонецЕсли;
		
		Если ЗначениеЗаполнено(ИсточникКопирования.ФайлКартинки)
			Или ЗначениеЗаполнено(ИсточникКопирования.ФайлОписанияДляСайта) Тогда
			
			СкопироватьПрисоединенныеФайлы(ИсточникКопирования.ФайлКартинки, ИсточникКопирования.ФайлОписанияДляСайта);
			
		КонецЕсли;
		
		Объект.Наименование       = "";
		Объект.НаименованиеПолное = "";
		
		ЕстьИндивидуальныеХарактеристикиВОбъектеКопирования = 
		    (РеквизитыОбъектаКопирования.ИспользованиеХарактеристик = Перечисления.ВариантыИспользованияХарактеристикНоменклатуры.ИндивидуальныеДляНоменклатуры);
		
		ЕстьИндивидуальныеУпаковкиВОбъектеКопирования = РеквизитыОбъектаКопирования.ИспользоватьУпаковки 
		    И (РеквизитыОбъектаКопирования.НаборУпаковок = Справочники.НаборыУпаковок.ИндивидуальныйДляНоменклатуры);
		
		КопироватьИндивидуальныеУпаковки = ЕстьИндивидуальныеУпаковкиВОбъектеКопирования;
		
		УстановитьВидимостьЗаголовокНастроекКопирования();
		
		ВидНоменклатурыПриИзмененииНаСервере();
		
	Иначе
		
		// Создается новый элемент номенклатуры.
		ВидНоменклатуры    = Справочники.ВидыНоменклатуры.ПустаяСсылка();
		ГруппаНоменклатуры = Справочники.Номенклатура.ПустаяСсылка();
		
		// Создаются реквизиты формы, необходимые для работы с дополнительными реквизитами и свойствами.
		// Добавляются: Свойства_ИспользоватьСвойства, Свойства_ИспользоватьДопРеквизиты, Свойства_ОсновнойНабор,
		//              Свойства_ОписаниеДополнительныхРеквизитов, Свойства_ИмяЭлементаДляРазмещения и т.п.
		УправлениеСвойствами.ПриСозданииНаСервере(ЭтаФорма, Объект, "ГруппаДополнительныеРеквизиты");
		
		ОбщегоНазначенияУТКлиентСервер.УстановитьСвойствоЭлементаФормы(
			Элементы, "КопироватьИндивидуальныеУпаковки", "Видимость", Ложь);
		ОбщегоНазначенияУТКлиентСервер.УстановитьСвойствоЭлементаФормы(
			Элементы, "КопироватьИндивидуальныеХарактеристики", "Видимость", Ложь);
		
		Если Параметры.Свойство("НаименованиеНоменклатурыПоставщика")
			И ЗначениеЗаполнено(Параметры.НаименованиеНоменклатурыПоставщика) Тогда
			
			НаименованиеЗаполнение = Параметры.НаименованиеНоменклатурыПоставщика;
			
		КонецЕсли;
		
		Если Параметры.Свойство("АртикулНоменклатурыПоставщика")
			И ЗначениеЗаполнено(Параметры.АртикулНоменклатурыПоставщика) Тогда
			
			Объект.Артикул = Параметры.АртикулНоменклатурыПоставщика;
			
		КонецЕсли;
	
		РеквизитыОбъектаКопирования = Неопределено;
		
		Объект.Качество  = Перечисления.ГрадацииКачества.Новый;
		Объект.СтавкаНДС = Перечисления.СтавкиНДС.НДС18;
		
		Параметры.Свойство("Родитель",        ГруппаНоменклатуры);
		Параметры.Свойство("ВидНоменклатуры", ВидНоменклатуры);
		
		Объект.Родитель        = ГруппаНоменклатуры;
		Объект.ВидНоменклатуры = ВидНоменклатуры;
		
		Если ЗначениеЗаполнено(ВидНоменклатуры) Тогда
					
			Если Параметры.Свойство("АдресТаблицыПараметров") Тогда
				
				СтруктураПарметровДереваОтборов = Новый Структура("ВидНоменклатуры, АдресТаблицыСопостовления");
				СтруктураПарметровДереваОтборов.ВидНоменклатуры 		  = ВидНоменклатуры;
				СтруктураПарметровДереваОтборов.АдресТаблицыСопостовления = Параметры.АдресТаблицыСопостовления;
				
				АдресТаблицы = Параметры.АдресТаблицыПараметров;
				
			КонецЕсли;	
			
			ТаблицаДопРеквизитов = Новый ТаблицаЗначений;
			ТаблицаДопРеквизитов.Колонки.Добавить("ИмяРеквизита", Новый ОписаниеТипов("Строка",,,Новый КвалификаторыСтроки(255)));
			
			ВидНоменклатурыПриИзмененииНаСервере();
			
			Если ЗначениеЗаполнено(АдресТаблицы) Тогда
				
				ЕстьЗначенияБыстрогоОтбора = Истина;
				
				ТаблицаЗначенийРеквизитов = ПолучитьИзВременногоХранилища(АдресТаблицы);
				МассивРеквизитов = ТаблицаЗначенийРеквизитов.НайтиСтроки(Новый Структура("ЭтоДопРеквизит", Ложь));
				
				Для Каждого ЭлементМассива Из МассивРеквизитов Цикл
					Объект[ЭлементМассива.ИмяРеквизита] = ЭлементМассива.ЗначениеОтбора;
				КонецЦикла;
				
				МассивДопРеквизитов = ТаблицаЗначенийРеквизитов.НайтиСтроки(Новый Структура("ЭтоДопРеквизит", Истина));
				
				Если МассивДопРеквизитов.Количество() > 0 Тогда
					
					Для Каждого ЭлементМассива Из МассивДопРеквизитов Цикл
						
						НоваяСтрока = ТаблицаДопРеквизитов.Добавить();
						НоваяСтрока.ИмяРеквизита = ЭлементМассива.ИмяРеквизита;
						
					КонецЦикла;
					
					Запрос = Новый Запрос;
					Запрос.Текст =
					"ВЫБРАТЬ
					|	ТаблицаДопРеквизитов.ИмяРеквизита
					|ПОМЕСТИТЬ ТаблицаИменСвойств
					|ИЗ
					|	&ТаблицаДопРеквизитов КАК ТаблицаДопРеквизитов
					|;
					|
					|////////////////////////////////////////////////////////////////////////////////
					|ВЫБРАТЬ
					|	ТаблицаИменСвойств.ИмяРеквизита КАК ИмяРеквизита,
					|	НаборыДополнительныхРеквизитов.Свойство КАК Свойство
					|ИЗ
					|	ТаблицаИменСвойств КАК ТаблицаИменСвойств
					|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.НаборыДополнительныхРеквизитовИСведений.ДополнительныеРеквизиты КАК НаборыДополнительныхРеквизитов
					|		ПО ТаблицаИменСвойств.ИмяРеквизита = НаборыДополнительныхРеквизитов.Свойство.Наименование
					|ГДЕ
					|	НаборыДополнительныхРеквизитов.Ссылка = &НаборРеквизитов";
					
					Запрос.УстановитьПараметр("ТаблицаДопРеквизитов", ТаблицаДопРеквизитов);
					Запрос.УстановитьПараметр("НаборРеквизитов",      НаборСвойств);
					
					ТаблицаСвойств = Запрос.Выполнить().Выгрузить();
					СтруктураПоиска = Новый Структура("ИмяРеквизита");
					
					Для Каждого СтрокаТаблицы Из ТаблицаСвойств Цикл
						
						СтруктураПоискаЗначения = Новый Структура("Свойство", СтрокаТаблицы.Свойство);
						МассивСтрок = ЭтаФорма.Свойства_ОписаниеДополнительныхРеквизитов.НайтиСтроки(СтруктураПоискаЗначения);
						СтрокаРеквизита = МассивСтрок[0];
						ПутьКДанным = СтрокаРеквизита.ИмяРеквизитаЗначение;
						
						СтруктураПоиска.ИмяРеквизита = СтрокаТаблицы.ИмяРеквизита;
						МассивСтрокЗначение = ТаблицаЗначенийРеквизитов.НайтиСтроки(СтруктураПоиска);
						ЗначениеРеквизита = МассивСтрокЗначение[0].ЗначениеОтбора;
						ЭтаФорма[ПутьКДанным] = ЗначениеРеквизита;
						
					КонецЦикла;
					
				КонецЕсли;
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура СкопироватьПрисоединенныеФайлы(ФайлКартинки, ФайлОписание)
	
	Если ЗначениеЗаполнено(ФайлКартинки) Тогда
		
		ДанныеПрисоединенногоФайла = ПрисоединенныеФайлы.ПолучитьДанныеФайла(ФайлКартинки);
		
		ДанныеФайлаКартинки = Новый Структура("ИмяБезРасширения, Расширение, ВремяИзменения, УниверсальноеВремяИзменения");
		ЗаполнитьЗначенияСвойств(ДанныеФайлаКартинки, ДанныеПрисоединенногоФайла);
		
		ДанныеФайлаКартинки.ИмяБезРасширения = СтрЗаменить(ДанныеПрисоединенногоФайла.ИмяФайла, "." + ДанныеПрисоединенногоФайла.Расширение, "");
		ДвоичныеДанныеФайла  = ПолучитьИзВременногоХранилища(ДанныеПрисоединенногоФайла.СсылкаНаДвоичныеДанныеФайла);
		
		Если Не ЗначениеЗаполнено(ДвоичныеДанныеФайла) Тогда
			ДанныеФайлаКартинки = Неопределено;	
		КонецЕсли;
		
		АдресФайлаВХранилище = ПоместитьВоВременноеХранилище(ДвоичныеДанныеФайла, ЭтаФорма.УникальныйИдентификатор);
		АдресКартинки = АдресФайлаВХранилище;
		
	КонецЕсли;

	Если ЗначениеЗаполнено(ФайлОписание) Тогда
		
		ДанныеПрисоединенногоФайла = ПрисоединенныеФайлы.ПолучитьДанныеФайла(ФайлОписание);
		
		ДанныеФайлаHTML = Новый Структура("ИмяБезРасширения, Расширение, ВремяИзменения, УниверсальноеВремяИзменения");
		ЗаполнитьЗначенияСвойств(ДанныеФайлаHTML, ДанныеПрисоединенногоФайла);
		
		ДанныеФайлаHTML.ИмяБезРасширения = СтрЗаменить(ДанныеПрисоединенногоФайла.ИмяФайла, "." + ДанныеПрисоединенногоФайла.Расширение, "");
		
		ДвоичныеДанныеФайла  = ПолучитьИзВременногоХранилища(ДанныеПрисоединенногоФайла.СсылкаНаДвоичныеДанныеФайла);
		АдресОписанияHTML    = ПоместитьВоВременноеХранилище(ДвоичныеДанныеФайла, ЭтаФорма.УникальныйИдентификатор);
		ПутьКФайлуОписанию   = ФайлОписание.Наименование;
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьЗначенияПоТипуНоменклатуры()
	
	ЭтоТовар = (Объект.ТипНоменклатуры = Перечисления.ТипыНоменклатуры.Товар);
	ЭтоМногооборотнаяТара = (Объект.ТипНоменклатуры = Перечисления.ТипыНоменклатуры.МногооборотнаяТара);
	
	Если НЕ ЭтоТовар И НЕ ЭтоМногооборотнаяТара Тогда
		
		Объект.НаборУпаковок        = Справочники.НаборыУпаковок.ПустаяСсылка();
		Объект.СкладскаяГруппа      = Справочники.СкладскиеГруппыНоменклатуры.ПустаяСсылка();
		Объект.Вес                  = 0;
		Объект.Объем                = 0;
		Объект.ВестиУчетПоГТД       = Ложь;
		Объект.ПодакцизныйТовар     = Ложь;
		Объект.ИспользоватьУпаковки = Ложь;
		Объект.Качество             = Перечисления.ГрадацииКачества.Новый;
		
		ОбщегоНазначенияУТКлиентСервер.УстановитьСвойствоЭлементаФормы(
			Элементы, "ЕдиницаИзмерения",
			"ТолькоПросмотр", Ложь);
		Штрихкод = "";
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура УстановитьВидимостьРегистрацииШтрихкода()
	
	РегистрироватьШтрихкод =
		ЗначениеЗаполнено(Объект.ВидНоменклатуры)
		И (Объект.ТипНоменклатуры = Перечисления.ТипыНоменклатуры.Товар
			Или Объект.ТипНоменклатуры = Перечисления.ТипыНоменклатуры.МногооборотнаяТара)
		И НЕ ИспользоватьХарактеристики
		И НЕ НайденоПоШтрихкоду
		И ЗначениеЗаполнено(Штрихкод)
		И НЕ СозданиеНекачественногоТовара;
	
	ОбщегоНазначенияУТКлиентСервер.УстановитьСвойствоЭлементаФормы(
		Элементы, "РегистрироватьШтрихкод", "Видимость", РегистрироватьШтрихкод);
	
	Если НЕ Элементы.РегистрироватьШтрихкод.Видимость Тогда
		
		РегистрироватьШтрихкод = Ложь;
		
	Иначе
		
		Если ЗначениеЗаполнено(Объект.ЕдиницаИзмерения) Тогда
			
			РеквизитыЕдиницы = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Объект.ЕдиницаИзмерения, "НаименованиеПолное,ТипЕдиницыИзмерения");
			
			СтрокаЗаголовкаШтрихкода = НСтр("ru = 'Зарегистрировать штрихкод %Штрихкод% для единицы хранения (%ПредставлениеЕдиницыИзмерения%)'");
			СтрокаЗаголовкаШтрихкода = СтрЗаменить(СтрокаЗаголовкаШтрихкода,"%Штрихкод%",Штрихкод);
			СтрокаЗаголовкаШтрихкода = СтрЗаменить(СтрокаЗаголовкаШтрихкода,"%ПредставлениеЕдиницыИзмерения%",РеквизитыЕдиницы.НаименованиеПолное);
			
			Элементы.РегистрироватьШтрихкод.Заголовок = СтрокаЗаголовкаШтрихкода;
			
			РегистрироватьШтрихкод = НЕ РеквизитыЕдиницы.ТипЕдиницыИзмерения = Перечисления.ТипыЕдиницИзмерения.Весовая;
			ОбщегоНазначенияУТКлиентСервер.УстановитьСвойствоЭлементаФормы(
				Элементы, "РегистрироватьШтрихкод", "Доступность", РегистрироватьШтрихкод);
			
		Иначе
			
			РегистрироватьШтрихкод = Истина;
			
			СтрокаЗаголовкаШтрихкода = НСтр("ru = 'Зарегистрировать штрихкод %Штрихкод% для единицы хранения'");
			СтрокаЗаголовкаШтрихкода = СтрЗаменить(СтрокаЗаголовкаШтрихкода,"%Штрихкод%",Штрихкод);
			Элементы.РегистрироватьШтрихкод.Заголовок = СтрокаЗаголовкаШтрихкода;
			
		КонецЕсли;
		
	КонецЕсли;

КонецПроцедуры

&НаСервере
Процедура УстановитьВидимостьРеквизитовПоНастройкамВидаНоменклатуры()
	
	ЭтоТовар = (Объект.ТипНоменклатуры = Перечисления.ТипыНоменклатуры.Товар);
	ЭтоМногооборотнаяТара = (Объект.ТипНоменклатуры = Перечисления.ТипыНоменклатуры.МногооборотнаяТара);
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ВидНоменклатуры", Объект.ВидНоменклатуры);
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	РеквизитыДляКонтроля.ЭтоДопРеквизит КАК ЭтоДопРеквизит,
	|	ВЫБОР
	|		КОГДА РеквизитыДляКонтроля.ЭтоДопРеквизит
	|			ТОГДА РеквизитыДляКонтроля.Свойство.Наименование
	|		ИНАЧЕ РеквизитыДляКонтроля.ИмяРеквизита
	|	КОНЕЦ КАК Наименование,
	|	РеквизитыДляКонтроля.Свойство КАК СвойствоДопРеквизита,
	|	РеквизитыДляКонтроля.ОтображатьПриСоздании
	|ИЗ
	|	Справочник.ВидыНоменклатуры.РеквизитыДляКонтроляНоменклатуры КАК РеквизитыДляКонтроля
	|ГДЕ
	|	РеквизитыДляКонтроля.Ссылка = &ВидНоменклатуры";
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Если РезультатЗапроса.Пустой() Тогда
		Возврат;
	КонецЕсли;
	
	Отбор = Новый Структура("Свойство");
	
	Выборка = РезультатЗапроса.Выбрать();
	
	Пока Выборка.Следующий() Цикл
		
		ИмяЭлементаФормы = "";
		
		Если Выборка.ЭтоДопРеквизит Тогда
			
			Отбор.Свойство = Выборка.СвойствоДопРеквизита;
			НайденныеСтроки = ЭтаФорма.Свойства_ОписаниеДополнительныхРеквизитов.НайтиСтроки(Отбор);
			
			Если НайденныеСтроки.Количество() > 0 Тогда
				
				ИмяЭлементаФормы = НайденныеСтроки[0].ИмяРеквизитаЗначение;
				
			КонецЕсли;
			
		Иначе
			
			ИмяЭлементаФормы = Выборка.Наименование;
			
		КонецЕсли;
		
		Если НЕ ЗначениеЗаполнено(ИмяЭлементаФормы) Тогда
			Продолжить;
		КонецЕсли;
		
		Если ОтображеныВсеРеквизитыНоменклатуры Тогда
			
			ВидимостьЭлемента = Истина;
			
		Иначе
			
			ВидимостьЭлемента = Выборка.ОтображатьПриСоздании;
			
		КонецЕсли; 
		
		Если ИмяЭлементаФормы = "Вес" Тогда
			
			ОбщегоНазначенияУТКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, ИмяЭлементаФормы, "Видимость", ВидимостьЭлемента);
			ОбщегоНазначенияУТКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "НаименованиеЕдиницыИзмеренияВеса", "Видимость", ВидимостьЭлемента);
			
		ИначеЕсли ИмяЭлементаФормы = "Объем" Тогда
			
			ОбщегоНазначенияУТКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, ИмяЭлементаФормы, "Видимость", ВидимостьЭлемента);
			ОбщегоНазначенияУТКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "НаименованиеЕдиницыИзмеренияОбъема", "Видимость", ВидимостьЭлемента);
			
		ИначеЕсли ИмяЭлементаФормы = "ФайлКартинки" Тогда
			
			ОбщегоНазначенияУТКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "АдресКартинки", "Видимость", ВидимостьЭлемента);
			ОбщегоНазначенияУТКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "Очистить", "Видимость", ВидимостьЭлемента);
			
		ИначеЕсли ИмяЭлементаФормы = "ФайлОписанияДляСайта" Тогда
			
			ОбщегоНазначенияУТКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "ФайлОписанияВФорматеHTML", "Видимость", ВидимостьЭлемента);
			
		ИначеЕсли ИмяЭлементаФормы = "ШаблонЦенника" Тогда
			
			ОбщегоНазначенияУТКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "ГруппаШаблонЦенника", "Видимость", ВидимостьЭлемента);
			
		ИначеЕсли ИмяЭлементаФормы = "ШаблонЭтикетки" Тогда
			
			ОбщегоНазначенияУТКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "ГруппаШаблонЭтикетки", "Видимость", ВидимостьЭлемента);
			
		ИначеЕсли ИмяЭлементаФормы = "ПоставляетсяВМногооборотнойТаре" Тогда
			
			ОбновитьДоступностьЭлементовМногооборотнойТары(ЭтаФорма, ВидимостьЭлемента);
			
		Иначе
			
			Если Элементы.Найти(ИмяЭлементаФормы) = Неопределено Тогда
				Продолжить;
			КонецЕсли;
			
			ОбщегоНазначенияУТКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, ИмяЭлементаФормы, "Видимость", ВидимостьЭлемента);
			
		КонецЕсли;
		
	КонецЦикла;
	
	ОбщегоНазначенияУТКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "ГруппаДанныеВидНоменклатурыУчетнаяИнформация", "Видимость", ОтображеныВсеРеквизитыНоменклатуры);
	
	ВидимостьШтрихкода = ЗначениеЗаполнено(Объект.ВидНоменклатуры) И (ЭтоТовар Или ЭтоМногооборотнаяТара) И НЕ СозданиеНекачественногоТовара;
	ОбщегоНазначенияУТКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "Штрихкод", "Видимость", ВидимостьШтрихкода);
	
	ВидимостьКачества = (ЭтоТовар Или ЭтоМногооборотнаяТара) И ИспользоватьКачествоТоваров;
	ОбщегоНазначенияУТКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "Качество", "Видимость", ВидимостьКачества);
	
	ВидимостьУпаковок = (ЭтоТовар Или ЭтоМногооборотнаяТара) И ИспользоватьУпаковкиНоменклатуры;
	ОбщегоНазначенияУТКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "ИспользоватьУпаковки", "Видимость", ВидимостьУпаковок);
	ОбщегоНазначенияУТКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "НаборУпаковок", "Видимость", ВидимостьУпаковок);
	
	ОбщегоНазначенияУТКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "НаборУпаковок", "АвтоОтметкаНезаполненного", Объект.ИспользоватьУпаковки);
	
	ОбщегоНазначенияУТКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "Вес", "Видимость", ЭтоТовар Или ЭтоМногооборотнаяТара);
	ОбщегоНазначенияУТКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "НаименованиеЕдиницыИзмеренияВеса", "Видимость", ЭтоТовар Или ЭтоМногооборотнаяТара);
	
	ВидимостьГруппаШаблоны = (Элементы.ГруппаШаблонЦенника.Видимость) Или (Элементы.ГруппаШаблонЭтикетки.Видимость);
	ОбщегоНазначенияУТКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "ГруппаШаблоны", "Видимость", ВидимостьГруппаШаблоны);
	
	ОбщегоНазначенияУТКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "ТоварнаяКатегория", "Видимость", ИспользоватьАссортимент);
	ОбщегоНазначенияУТКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "Марка", "Видимость", ИспользоватьАссортимент);
	
	ОбщегоНазначенияУТКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "ВестиУчетПоГТД", "Видимость", ЭтоТовар Или ЭтоМногооборотнаяТара);
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьСоставОбязательныхРеквизитов()
	
	ЕстьДопРеквизиты = Элементы.ГруппаДополнительныеРеквизиты.ПодчиненныеЭлементы.Количество() > 0;
	
	УправлениеСвойствами.ОбновитьЭлементыДополнительныхРеквизитов(ЭтаФорма);
	
	СтруктураПоиска = Новый Структура("Свойство");
	
	Если ТаблицаОбязательныхРеквизитов.Количество() > 0 Тогда
		
		Для Каждого Строка Из ТаблицаОбязательныхРеквизитов Цикл
			
			Если Строка.ЭтоДопРеквизит Тогда
				
				СтруктураПоиска.Свойство = Строка.СвойствоДопРеквизита;
				
				НайденныеСтроки = ЭтаФорма.Свойства_ОписаниеДополнительныхРеквизитов.НайтиСтроки(СтруктураПоиска);
				
				Если НайденныеСтроки.Количество() = 0 Тогда
					Продолжить;
				КонецЕсли;
				
				ИмяЭлементаФормы = НайденныеСтроки[0].ИмяРеквизитаЗначение;
				
			Иначе
				
				ИмяЭлементаФормы = Строка.Наименование;
				
			КонецЕсли;
			
			Если Элементы.Найти(ИмяЭлементаФормы) = Неопределено Тогда
				Продолжить;
			КонецЕсли;
			
			Элемент = Элементы[ИмяЭлементаФормы];
			
			Если НЕ Элемент.Вид = ВидПоляФормы.ПолеФлажка Тогда
				
				Элементы[ИмяЭлементаФормы].АвтоОтметкаНезаполненного = Ложь;
				Элементы[ИмяЭлементаФормы].ОтметкаНезаполненного     = Ложь;
				
			КонецЕсли;
			
		КонецЦикла;
		
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ВЫБОР
	|		КОГДА РеквизитыДляКонтроля.ЭтоДопРеквизит
	|			ТОГДА РеквизитыДляКонтроля.Свойство.Представление
	|		ИНАЧЕ РеквизитыДляКонтроля.ПредставлениеРеквизита
	|	КОНЕЦ КАК Представление,
	|	РеквизитыДляКонтроля.ЭтоДопРеквизит КАК ЭтоДопРеквизит,
	|	ВЫБОР
	|		КОГДА РеквизитыДляКонтроля.ЭтоДопРеквизит
	|			ТОГДА РеквизитыДляКонтроля.Свойство.Наименование
	|		ИНАЧЕ РеквизитыДляКонтроля.ИмяРеквизита
	|	КОНЕЦ КАК Наименование,
	|	РеквизитыДляКонтроля.Свойство КАК СвойствоДопРеквизита
	|ИЗ
	|	Справочник.ВидыНоменклатуры.РеквизитыДляКонтроляНоменклатуры КАК РеквизитыДляКонтроля
	|ГДЕ
	|	НЕ РеквизитыДляКонтроля.Уникален
	|	И РеквизитыДляКонтроля.Ссылка = &ВидНоменклатуры
	|	И РеквизитыДляКонтроля.ОбязателенДляЗаполнения";
	
	Запрос.УстановитьПараметр("ВидНоменклатуры", Объект.ВидНоменклатуры);
	
	ТаблицаРеквизитов = Запрос.Выполнить().Выгрузить();
	ТаблицаОбязательныхРеквизитов.Загрузить(ТаблицаРеквизитов);
	
	Для Каждого СтрокаТаблицыДопРеквизитов Из ТаблицаРеквизитов Цикл
		
		Если СтрокаТаблицыДопРеквизитов.ЭтоДопРеквизит Тогда
			
			СтруктураПоиска.Свойство = СтрокаТаблицыДопРеквизитов.СвойствоДопРеквизита;
			НайденныеСтроки = ЭтаФорма.Свойства_ОписаниеДополнительныхРеквизитов.НайтиСтроки(СтруктураПоиска);
			
			Если НайденныеСтроки.Количество() = 0 Тогда
				Продолжить;
			КонецЕсли;
			
			ИмяЭлементаФормы = НайденныеСтроки[0].ИмяРеквизитаЗначение;
			
		Иначе
			
			ИмяЭлементаФормы = СтрокаТаблицыДопРеквизитов.Наименование;
			
		КонецЕсли;
		
		Если Элементы.Найти(ИмяЭлементаФормы) = Неопределено Тогда
			Продолжить;
		КонецЕсли;
		
		Элемент = Элементы[ИмяЭлементаФормы];
		
		Если НЕ Элемент.Вид = ВидПоляФормы.ПолеФлажка Тогда
			
			Элементы[ИмяЭлементаФормы].АвтоОтметкаНезаполненного = Истина;
			
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьСоставДополнительныхУникальныхРеквизитов()
	
	Если НЕ ЗначениеЗаполнено(Объект.ВидНоменклатуры) Тогда
		Возврат;
	КонецЕсли;
	
	Для Каждого Элемент Из Элементы.ГруппаДополнительныеРеквизиты.ПодчиненныеЭлементы Цикл
		
		Если Элемент.Вид = ВидПоляФормы.ПолеВвода Тогда
			
			Если Элемент.МногострочныйРежим <> Истина Тогда
				
				Элемент.РастягиватьПоГоризонтали = Ложь;
				
			Иначе
				
				Элемент.ПоложениеЗаголовка       = ПоложениеЗаголовкаЭлементаФормы.Лево;
				Элемент.РастягиватьПоВертикали   = Ложь;
				Элемент.РастягиватьПоГоризонтали = Истина;
				
			КонецЕсли;
			
		ИначеЕсли Элемент.Вид = ВидПоляФормы.ПолеФлажка Тогда
			
			Элемент.ПоложениеЗаголовка = ПоложениеЗаголовкаЭлементаФормы.Право;
			
		КонецЕсли;
		
	КонецЦикла;
	
	// Заполнить таблицу уникальных реквизитов.
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ВЫБОР
	|		КОГДА РеквизитыДляКонтроля.ЭтоДопРеквизит
	|			ТОГДА РеквизитыДляКонтроля.Свойство.Наименование
	|		ИНАЧЕ РеквизитыДляКонтроля.ИмяРеквизита
	|	КОНЕЦ КАК Наименование,
	|	ВЫБОР
	|		КОГДА РеквизитыДляКонтроля.ЭтоДопРеквизит
	|			ТОГДА РеквизитыДляКонтроля.Свойство.Представление
	|		ИНАЧЕ РеквизитыДляКонтроля.ПредставлениеРеквизита
	|	КОНЕЦ КАК Представление,
	|	РеквизитыДляКонтроля.ЭтоДопРеквизит КАК ЭтоДопРеквизит,
	|	РеквизитыДляКонтроля.Свойство КАК СвойствоДопРеквизита
	|ИЗ
	|	Справочник.ВидыНоменклатуры.РеквизитыДляКонтроляНоменклатуры КАК РеквизитыДляКонтроля
	|ГДЕ
	|	РеквизитыДляКонтроля.Уникален
	|	И РеквизитыДляКонтроля.Ссылка = &ВидНоменклатуры";
	
	Запрос.УстановитьПараметр("ВидНоменклатуры", Объект.ВидНоменклатуры);
	
	ТаблицаУникальныхРеквизитов.Загрузить(Запрос.Выполнить().Выгрузить());
	
	// Удалить все элементы из группы "ГруппаРеквизитыДляКонтроля".
	
	Пока Элементы.ГруппаРеквизитыДляКонтроля.ПодчиненныеЭлементы.Количество() > 0 Цикл
		
		ЭтаФорма.Элементы.Удалить(Элементы.ГруппаРеквизитыДляКонтроля.ПодчиненныеЭлементы[0]);
		
	КонецЦикла;
	
	МассивДобавляемыхРеквизитов = Новый Массив;
	
	ГруппаРеквизитыДляКонтроля = Элементы.ГруппаРеквизитыДляКонтроля;
	ШиринаЭлементаФормы        = 30;
	
	Для Каждого СтрокаТаблицы Из ТаблицаУникальныхРеквизитов Цикл
		
		Если СтрокаТаблицы.ЭтоДопРеквизит Тогда
			
			Отбор = Новый Структура("Свойство", СтрокаТаблицы.СвойствоДопРеквизита);
			
			НайденныеСтроки = ЭтаФорма.Свойства_ОписаниеДополнительныхРеквизитов.НайтиСтроки(Отбор);
			
			Если НайденныеСтроки.Количество() = 0 Тогда
				Продолжить;
			КонецЕсли;
			
			СтрокаРеквизита = НайденныеСтроки[0];
			
			ИмяРеквизита = СтрокаРеквизита.ИмяРеквизитаЗначение;
			
			ПутьКДанным = ИмяРеквизита;
			СтрокаТаблицы.ПутьКДанным = ИмяРеквизита;
			
			ИмяЭлемента = "Контроль_" + ИмяРеквизита;
			
			ЭлементФормы = ДобавитьЭлементФормыВГруппу(
				ИмяЭлемента, 
				Тип("ПолеФормы"), 
				ГруппаРеквизитыДляКонтроля, 
				ПутьКДанным, 
				ВидПоляФормы.ПолеВвода, 
				ПоложениеЗаголовкаЭлементаФормы.Авто,
				ШиринаЭлементаФормы
			);
			
			Если СтрокаРеквизита.ИмяРеквизитаСвойство <> "" Тогда
				
				СвязьПараметраВыбора = Новый СвязьПараметраВыбора("Отбор.Владелец", СтрокаРеквизита.ИмяРеквизитаСвойство);
				
				Связи = Новый Массив;
				Связи.Добавить(СвязьПараметраВыбора);
				
				СвязиПараметровВыбора = Новый ФиксированныйМассив(Связи);
				
				ЭлементФормы.СвязиПараметровВыбора = СвязиПараметровВыбора;
				ЭтаФорма[СтрокаРеквизита.ИмяРеквизитаСвойство] = СтрокаРеквизита.Свойство;
				
			КонецЕсли;
			
		ИначеЕсли Объект.Свойство(СтрокаТаблицы.Наименование) Тогда
			
			ИмяРеквизита = СтрокаТаблицы.Наименование;
			ПутьКДанным  = СтрокаТаблицы.Наименование;
			
			СтрокаТаблицы.ПутьКДанным = ПутьКДанным;
			
			ИмяЭлемента = "Контроль_" + ИмяРеквизита;
			
			// Если включен контроль уникальности для реквизита "ВидНоменклатуры",
			// то не отображать его в группе реквизитов контроля.
			Если ИмяРеквизита = "ВидНоменклатуры" Тогда
				Продолжить;
			КонецЕсли;
			
			Если ИмяРеквизита = "Объем" Или ИмяРеквизита = "Вес" Тогда
				
				// ... добавить группу.
				ТипЭлемента = Тип("ГруппаФормы");
				
				ГруппаФормы = ЭтаФорма.Элементы.Добавить("Группа_" + ИмяЭлемента, ТипЭлемента, ГруппаРеквизитыДляКонтроля);
				
				ГруппаФормы.Вид                 = ВидГруппыФормы.ОбычнаяГруппа;
				ГруппаФормы.Группировка         = ГруппировкаПодчиненныхЭлементовФормы.Горизонтальная;
				ГруппаФормы.ОтображатьЗаголовок = Ложь;
				ГруппаФормы.Отображение         = ОтображениеОбычнойГруппы.Нет;
				
				// ... добавить элемент в группу.
				ДобавитьЭлементФормыВГруппу(
					ИмяЭлемента, 
					Тип("ПолеФормы"), 
					ГруппаФормы, 
					"Объект." + ПутьКДанным, 
					ВидПоляФормы.ПолеВвода, 
					ПоложениеЗаголовкаЭлементаФормы.Авто,
					ШиринаЭлементаФормы
				);
				
				// ... добавить единицу измерения в группу.
				Если ИмяРеквизита = "Объем" Тогда
					
					ИмяЭлемента = "Контроль_" + "НаименованиеЕдиницыИзмеренияОбъема";
					ПутьКДанным = "НаименованиеЕдиницыИзмеренияОбъема";
					
				ИначеЕсли ИмяРеквизита = "Вес" Тогда
					
					ИмяЭлемента = "Контроль_" + "НаименованиеЕдиницыИзмеренияВеса";
					ПутьКДанным = "НаименованиеЕдиницыИзмеренияВеса";
					
				КонецЕсли; 
				
				ДобавитьЭлементФормыВГруппу(
					ИмяЭлемента, 
					Тип("ПолеФормы"), 
					ГруппаФормы, 
					ПутьКДанным, 
					ВидПоляФормы.ПолеНадписи, 
					ПоложениеЗаголовкаЭлементаФормы.Нет,
					ШиринаЭлементаФормы
				);
				
			Иначе
				
				ДобавитьЭлементФормыВГруппу(
					ИмяЭлемента, 
					Тип("ПолеФормы"), 
					ГруппаРеквизитыДляКонтроля, 
					"Объект." + ПутьКДанным, 
					ВидПоляФормы.ПолеВвода, 
					ПоложениеЗаголовкаЭлементаФормы.Авто,
					ШиринаЭлементаФормы
				);
				
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЦикла;
	
	Если ТаблицаУникальныхРеквизитов.Количество() > 0 Тогда
		
		УстановитьДоступностьРедактированияУникальныхРеквизитов(Ложь);
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Функция ДобавитьЭлементФормыВГруппу(ИмяЭлемента, ТипЭлемента, ГруппаФормы, ПутьКДанным, ВидПоля, ПоложениеЗаголовка, ШиринаЭлементаФормы)
	
	ЭлементФормы = ЭтаФорма.Элементы.Найти(ИмяЭлемента);
	
	Если ЭлементФормы <> Неопределено Тогда
		ЭтаФорма.Элементы.Удалить(ЭлементФормы);
	КонецЕсли;
	
	ЭлементФормы = ЭтаФорма.Элементы.Добавить(ИмяЭлемента, ТипЭлемента, ГруппаФормы);
	
	ЭлементФормы.Вид                       = ВидПоля;
	ЭлементФормы.Ширина                    = ШиринаЭлементаФормы;
	ЭлементФормы.РастягиватьПоГоризонтали  = Ложь;
	
	Если ВидПоля = ВидПоляФормы.ПолеВвода Тогда
		ЭлементФормы.АвтоОтметкаНезаполненного = Истина;
	КонецЕсли;
	
	ЭлементФормы.ПутьКДанным               = ПутьКДанным;
	ЭлементФормы.ПоложениеЗаголовка        = ПоложениеЗаголовка;
	
	Возврат ЭлементФормы;
	
КонецФункции

&НаСервере
Процедура ПроверитьУникальностьЭлементаПоРеквизитам()
	
	Если ТаблицаУникальныхРеквизитов.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	Для Каждого СтрокаТаблицы Из ТаблицаУникальныхРеквизитов Цикл
		
		Если СтрокаТаблицы.ЭтоДопРеквизит Тогда
			
			СтрокаТаблицы.Значение = ЭтаФорма[СтрокаТаблицы.ПутьКДанным];
			
		Иначе
			
			Если СтрокаТаблицы.Наименование = "ВидНоменклатуры" Тогда
				СтрокаТаблицы.Значение = Объект.ВидНоменклатуры;
			Иначе
				СтрокаТаблицы.Значение = Объект[СтрокаТаблицы.ПутьКДанным];
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЦикла;
	
	ТаблицаРеквизитов = ТаблицаУникальныхРеквизитов.Выгрузить();
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ВидНоменклатуры", Объект.ВидНоменклатуры);
	
	ИмяТаблицы = "ТаблицаНоменклатура";
	
	ТекстОсновногоЗапроса = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	" + ИмяТаблицы + ".Ссылка КАК Номенклатура,
	|	Истина КАК НайденоПоДопРеквизитам
	|ИЗ
	|	Справочник.Номенклатура КАК " + ИмяТаблицы;
	
	ТекстУсловия = "
	|ГДЕ
	|	(НЕ " + ИмяТаблицы + ".ЭтоГруппа)";
	
	// Генерируем текст условия запроса по реквизитам номенклатуры.
	МассивСтрокРеквизитов = ТаблицаРеквизитов.НайтиСтроки(Новый Структура("ЭтоДопРеквизит", Ложь));
	
	Для Каждого СтрокаУсловия Из МассивСтрокРеквизитов Цикл
		
		Если СтрокаУсловия.Наименование = "ВидНоменклатуры" Тогда
			Продолжить;
		КонецЕсли;
		
		ТекстУсловия = ТекстУсловия +
		"
		|  И " + ИмяТаблицы + "." + СтрокаУсловия.Наименование + " = &" + СтрокаУсловия.ПутьКДанным;
		
		Запрос.УстановитьПараметр(СтрокаУсловия.ПутьКДанным, СтрокаУсловия.Значение);
		
	КонецЦикла;
	
	// Добавить условие по видам номенклатуры с идентичными настройками контроля уникальности.
	ВидыИдентичныеПоНастройкам = ВидыНоменклатурыИдентичныеПоНастройкамКонтроляУникальности(Объект.ВидНоменклатуры);
	ТекстУсловия = ТекстУсловия +
	"
	|  И " + ИмяТаблицы + ".ВидНоменклатуры В (&ВидыНоменклатуры)";
	Запрос.УстановитьПараметр("ВидыНоменклатуры", ВидыИдентичныеПоНастройкам);
	
	// Генерируем текст условия запроса по дополнительным реквизитам.
	ТекстЗапроса = ТекстОсновногоЗапроса;
	СчетчикУсловий = 1;
	
	МассивСтрокДопРеквизитов = ТаблицаРеквизитов.НайтиСтроки(Новый Структура("ЭтоДопРеквизит", Истина));
	Для Каждого СтрокаУсловияДопРеквизита Из МассивСтрокДопРеквизитов Цикл
		
		ИмяТаблицыСУсловием = ИмяТаблицы + "СУсловиемПоДопРеквизиту_" + СчетчикУсловий;
		
		ТекстУсловия = ТекстУсловия +
		"
		|  И " + ИмяТаблицыСУсловием + ".Свойство = &Свойство_" + СтрокаУсловияДопРеквизита.ПутьКДанным + 
		"
		|  И " + ИмяТаблицыСУсловием + ".Значение = &Значение_" + СтрокаУсловияДопРеквизита.ПутьКДанным;
		
		Запрос.УстановитьПараметр("Свойство_" + СтрокаУсловияДопРеквизита.ПутьКДанным, СтрокаУсловияДопРеквизита.СвойствоДопРеквизита);
		Запрос.УстановитьПараметр("Значение_" + СтрокаУсловияДопРеквизита.ПутьКДанным, СтрокаУсловияДопРеквизита.Значение);
		
		ТекстСоединения = "
		| ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура.ДополнительныеРеквизиты КАК " + ИмяТаблицыСУсловием + "
		| ПО " + ИмяТаблицы + ".Ссылка = " + ИмяТаблицыСУсловием + ".Ссылка";
		
		ТекстОсновногоЗапроса = ТекстОсновногоЗапроса + ТекстСоединения;
		СчетчикУсловий = СчетчикУсловий + 1;
		
	КонецЦикла;
	
	Запрос.Текст = ТекстОсновногоЗапроса + ТекстУсловия;
	
	ТаблицаНайдено.Загрузить(Запрос.Выполнить().Выгрузить());
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьУникальностьЭлементаПоШтрихкоду()
	
	Если НЕ ЗначениеЗаполнено(Штрихкод) Тогда
		Возврат;
	КонецЕсли;
	
	Отбор = Новый Структура("Номенклатура");
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ШтрихкодыНоменклатуры.Номенклатура                   КАК Номенклатура,
	|	ШтрихкодыНоменклатуры.Номенклатура.Наименование      КАК Наименование
	|ИЗ
	|	РегистрСведений.ШтрихкодыНоменклатуры КАК ШтрихкодыНоменклатуры
	|ГДЕ
	|	ШтрихкодыНоменклатуры.Штрихкод = &Штрихкод";
	
	Запрос.УстановитьПараметр("Штрихкод", Штрихкод);
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		
		Отбор.Номенклатура = Выборка.Номенклатура;
		
		НайденныеСтроки = ТаблицаНайдено.НайтиСтроки(Отбор);
		
		Если НайденныеСтроки.Количество() = 0 Тогда
			
			НоваяСтрока = ТаблицаНайдено.Добавить();
			
			НоваяСтрока.Номенклатура       = Выборка.Номенклатура;
			НоваяСтрока.НайденоПоШтрихкоду = Истина;
			
		Иначе
			
			НайденныеСтроки[0].НайденоПоШтрихкоду = Истина;
			
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьУникальностьЭлемента()
	
	ТаблицаНайдено.Очистить();
	
	ПроверитьУникальностьЭлементаПоРеквизитам();
	ПроверитьУникальностьЭлементаПоШтрихкоду();
	
	ТаблицаНайдено.Сортировать("Номенклатура");
	
КонецПроцедуры

&НаСервере
Процедура УстановитьВидимостьКомандыСозданияНовогоЭлемента()
	
	ДоступенВводБезКонтроля = Справочники.Номенклатура.ДоступенВводБезКонтроля();
	
	Отбор = Новый Структура("НайденоПоДопРеквизитам", Истина);
	НайденныеСтроки = ТаблицаНайдено.НайтиСтроки(Отбор);
	
	ОтсутствуетВНайденных = (НайденныеСтроки.Количество() = 0);
	
	ОбщегоНазначенияУТКлиентСервер.УстановитьСвойствоЭлементаФормы(
		Элементы, "СоздатьНовую", "Видимость", ДоступенВводБезКонтроля Или ОтсутствуетВНайденных);
	
КонецПроцедуры

&НаСервере
Функция НовыйЭлементСправочника()
	
	НачатьТранзакцию();
	
	Объект.ИспользоватьИндивидуальныйШаблонЭтикетки = ?(ИспользоватьИндивидуальныйШаблонЭтикетки = 1, Истина, Ложь);
	Объект.ИспользоватьИндивидуальныйШаблонЦенника  = ?(ИспользоватьИндивидуальныйШаблонЦенника = 1, Истина, Ложь);
	
	УправлениеСвойствами.ПередЗаписьюНаСервере(ЭтаФорма, Объект);
	
	СправочникОбъект = ДанныеФормыВЗначение(Объект, Тип("СправочникОбъект.Номенклатура"));
	
	СправочникОбъект.ДополнительныеСвойства.Вставить("РабочееНаименованиеСформировано");
	СправочникОбъект.ДополнительныеСвойства.Вставить("НаименованиеДляПечатиСформировано");
	
	СправочникОбъект.Записать();
	
	Если ЗначениеЗаполнено(ДанныеФайлаHTML) Или ЗначениеЗаполнено(ДанныеФайлаКартинки) Тогда
		
		Если ЗначениеЗаполнено(ДанныеФайлаКартинки) Тогда
							
				ПрисоединенныйФайл = ПрисоединенныеФайлы.ДобавитьФайл(
				СправочникОбъект.Ссылка,
				ДанныеФайлаКартинки.ИмяБезРасширения,
				ДанныеФайлаКартинки.Расширение,
				ДанныеФайлаКартинки.ВремяИзменения,
				ДанныеФайлаКартинки.УниверсальноеВремяИзменения,
				АдресКартинки,
				"",
				"НоменклатураПрисоединенныеФайлы"
				);
				
				СправочникОбъект.ФайлКартинки = ПрисоединенныйФайл;
			
		КонецЕсли;
		
		Если ЗначениеЗаполнено(ДанныеФайлаHTML) Тогда
			
			ПрисоединенныйФайл = ПрисоединенныеФайлы.ДобавитьФайл(
				СправочникОбъект.Ссылка,
				ДанныеФайлаHTML.ИмяБезРасширения,
				ДанныеФайлаHTML.Расширение,
				ДанныеФайлаHTML.ВремяИзменения,
				ДанныеФайлаHTML.УниверсальноеВремяИзменения,
				АдресОписанияHTML,
				"",
				"НоменклатураПрисоединенныеФайлы"
			);
			
			СправочникОбъект.ФайлОписанияДляСайта = ПрисоединенныйФайл;
			
		КонецЕсли;
		
		СправочникОбъект.Записать();
		
	КонецЕсли;
	
	Если РегистрироватьШтрихкод Тогда
		
		НовыйШтрихкод = РегистрыСведений.ШтрихкодыНоменклатуры.СоздатьМенеджерЗаписи();
		
		НовыйШтрихкод.Номенклатура = СправочникОбъект.Ссылка; 
		НовыйШтрихкод.Штрихкод     = Штрихкод;
		
		НовыйШтрихкод.Записать(Ложь);
		
	КонецЕсли;
	
	Если КопироватьИндивидуальныеХарактеристики Тогда
		
		Запрос = Новый Запрос;
		Запрос.Текст = "
		|ВЫБРАТЬ
		|	ХарактеристикиНоменклатуры.Наименование,
		|	ХарактеристикиНоменклатуры.НаименованиеПолное,
		|	ХарактеристикиНоменклатуры.ДополнительныеРеквизиты.(
		|		Ссылка,
		|		НомерСтроки,
		|		Свойство,
		|		Значение,
		|		ТекстоваяСтрока
		|	)
		|ИЗ
		|	Справочник.ХарактеристикиНоменклатуры КАК ХарактеристикиНоменклатуры
		|ГДЕ
		|	ХарактеристикиНоменклатуры.Владелец = &Владелец
		|	И (НЕ ХарактеристикиНоменклатуры.ПометкаУдаления)";
		
		Запрос.УстановитьПараметр("Владелец",РеквизитыОбъектаКопирования.ОбъектКопирования);
		
		ВыборкаХарактеристик = Запрос.Выполнить().Выбрать();
		
		Пока ВыборкаХарактеристик.Следующий() Цикл
			
			ХарактеристикаОбъект = Справочники.ХарактеристикиНоменклатуры.СоздатьЭлемент();
			
			ХарактеристикаОбъект.Наименование       = ВыборкаХарактеристик.Наименование;
			ХарактеристикаОбъект.НаименованиеПолное = ВыборкаХарактеристик.НаименованиеПолное;
			
			ВыборкаДопРеквизитов = ВыборкаХарактеристик.ДополнительныеРеквизиты.Выбрать();
			
			Пока ВыборкаДопРеквизитов.Следующий() Цикл
				
				СтрокаДопРеквизитов = ХарактеристикаОбъект.ДополнительныеРеквизиты.Добавить();
				ЗаполнитьЗначенияСвойств(СтрокаДопРеквизитов,ВыборкаДопРеквизитов);
				
			КонецЦикла;
			
			ХарактеристикаОбъект.Владелец = СправочникОбъект.Ссылка;
			ХарактеристикаОбъект.Записать();
			
		КонецЦикла;
		
	КонецЕсли;
		
	Если КопироватьИндивидуальныеУпаковки Тогда
		
		Запрос = Новый Запрос;
		
		Запрос.Текст = "ВЫБРАТЬ
		               |	УпаковкиНоменклатуры.Наименование,
		               |	УпаковкиНоменклатуры.Безразмерная,
		               |	УпаковкиНоменклатуры.Вес,
		               |	УпаковкиНоменклатуры.Высота,
		               |	УпаковкиНоменклатуры.Глубина,
		               |	УпаковкиНоменклатуры.ЕдиницаИзмерения,
		               |	УпаковкиНоменклатуры.Коэффициент КАК Коэффициент,
		               |	УпаковкиНоменклатуры.ЛинейныеРазмерыПредставление,
		               |	УпаковкиНоменклатуры.Объем,
		               |	УпаковкиНоменклатуры.СкладскаяГруппа,
		               |	УпаковкиНоменклатуры.Типоразмер,
		               |	УпаковкиНоменклатуры.Ширина,
		               |	УпаковкиНоменклатуры.Представление,
		               |	УпаковкиНоменклатуры.Родитель КАК Родитель,
		               |	УпаковкиНоменклатуры.КоличествоУпаковок,
		               |	УпаковкиНоменклатуры.СостоитИзДругихУпаковок,
		               |	УпаковкиНоменклатуры.Ссылка КАК СсылкаПоиска
		               |ИЗ
		               |	Справочник.УпаковкиНоменклатуры КАК УпаковкиНоменклатуры
		               |ГДЕ
		               |	УпаковкиНоменклатуры.Владелец = &Владелец
		               |	И НЕ УпаковкиНоменклатуры.ПометкаУдаления
		               |
		               |УПОРЯДОЧИТЬ ПО
		               |	Коэффициент";
		
		Запрос.УстановитьПараметр("Владелец",РеквизитыОбъектаКопирования.ОбъектКопирования);
		
		ТаблицаУпаковок = Запрос.Выполнить().Выгрузить();
		
		Для Каждого УпаковкаКопирования Из ТаблицаУпаковок Цикл
			
			УпаковкаОбъект = Справочники.УпаковкиНоменклатуры.СоздатьЭлемент();
			ЗаполнитьЗначенияСвойств(УпаковкаОбъект,УпаковкаКопирования);
			
			УпаковкаОбъект.Владелец = СправочникОбъект.Ссылка;
			УпаковкаОбъект.Записать();
			
			Отбор = Новый Структура("Родитель",УпаковкаКопирования.СсылкаПоиска);
			СтрокиПоиска = ТаблицаУпаковок.НайтиСтроки(Отбор);
			
			Для Каждого НайденнаяСтрока Из СтрокиПоиска Цикл
				
				НайденнаяСтрока.Родитель = УпаковкаОбъект.Ссылка;
				
			КонецЦикла;
			
		КонецЦикла;
		
	КонецЕсли;
	
	ЗафиксироватьТранзакцию();
	
	Возврат СправочникОбъект.Ссылка;
	
КонецФункции

&НаКлиенте
Процедура ЗаполнитьНаименованиеПоШаблонуКлиент(ВариантФормирования)
	
	ФормулыНаименования = ФормулыНаименования();
	
	Если ВариантФормирования = "Рабочее" Тогда
		
		Объект.Наименование = НоменклатураКлиент.НаименованиеПоФормуле(
			ФормулыНаименования.ФормулаРабочегоНаименования,
			Объект.ВидНоменклатуры
		);
		
	ИначеЕсли ВариантФормирования = "ДляПечати" Тогда 
		
		Объект.НаименованиеПолное = НоменклатураКлиент.НаименованиеПоФормуле(
			ФормулыНаименования.ФормулаНаименованияДляПечати,
			Объект.ВидНоменклатуры,
			Объект.Наименование
		);
		
	ИначеЕсли ВариантФормирования = "Оба" Тогда
		
		Объект.Наименование = НоменклатураКлиент.НаименованиеПоФормуле(
			ФормулыНаименования.ФормулаРабочегоНаименования, 
			Объект.ВидНоменклатуры
		);
		
		Объект.НаименованиеПолное = НоменклатураКлиент.НаименованиеПоФормуле(
			ФормулыНаименования.ФормулаНаименованияДляПечати, 
			Объект.ВидНоменклатуры, 
			Объект.Наименование
		);
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Функция ФормулыНаименования()
	
	УправлениеСвойствами.ПередЗаписьюНаСервере(ЭтаФорма, Объект);
	
	СправочникОбъект = РеквизитФормыВЗначение("Объект");
	
	Результат = Новый Структура;
	Результат.Вставить("ФормулаРабочегоНаименования", НоменклатураСервер.ФормулаНаименования(ШаблонРабочегоНаименования, СправочникОбъект)); 
	Результат.Вставить("ФормулаНаименованияДляПечати", НоменклатураСервер.ФормулаНаименования(ШаблонНаименованияДляПечати, СправочникОбъект)); 
	
	Возврат Результат;
	
КонецФункции

&НаСервере
Процедура УстановитьДоступностьРедактированияНаименований(СкрыватьДоступность)
	
	ЗаголовокФормированияПоШаблонуРабочее = НСтр("ru='<Рабочее наименование будет сформировано по шаблону>'");
	ЗаголовокФормированияПоШаблонуДляПечати = НСтр("ru='<Наименование для печати будет сформировано по шаблону>'");
	
	Если ЗапретРедактированияРабочегоНаименования Тогда
		
		ОбщегоНазначенияУТКлиентСервер.УстановитьСвойствоЭлементаФормы(
			Элементы, "Наименование", "АвтоОтметкаНезаполненного", Ложь);
		ОбщегоНазначенияУТКлиентСервер.УстановитьСвойствоЭлементаФормы(
			Элементы, "Наименование", "ОтметкаНезаполненного", Ложь);
		
	Иначе
		
		ОбщегоНазначенияУТКлиентСервер.УстановитьСвойствоЭлементаФормы(
			Элементы, "Наименование", "АвтоОтметкаНезаполненного", НЕ ЗначениеЗаполнено(ШаблонРабочегоНаименования));
		
	КонецЕсли;
	
	Если СкрыватьДоступность Тогда
		
		Если ЗапретРедактированияРабочегоНаименования Тогда
			Объект.Наименование = ?(ЗначениеЗаполнено(Объект.Наименование), Объект.Наименование, ЗаголовокФормированияПоШаблонуРабочее);
			ЦветТекстаНаименования = ЦветаСтиля.ЦветТекстаОтмененнойСтрокиДокумента;
		Иначе
			Объект.Наименование = ?(ЗначениеЗаполнено(Объект.Наименование), Объект.Наименование, "");
			ЦветТекстаНаименования = ЦветаСтиля.ЦветТекстаФормы;
		КонецЕсли;
		
		ОбщегоНазначенияУТКлиентСервер.УстановитьСвойствоЭлементаФормы(
			Элементы, "Наименование", "ТолькоПросмотр", ЗапретРедактированияРабочегоНаименования);
		ОбщегоНазначенияУТКлиентСервер.УстановитьСвойствоЭлементаФормы(
			Элементы, "Наименование", "ЦветТекста", ЦветТекстаНаименования);
		
		Если ЗапретРедактированияНаименованияДляПечати Тогда
			Объект.НаименованиеПолное = ?(ЗначениеЗаполнено(Объект.НаименованиеПолное), Объект.НаименованиеПолное, ЗаголовокФормированияПоШаблонуДляПечати);
			ЦветТекстаНаименования = ЦветаСтиля.ЦветТекстаОтмененнойСтрокиДокумента;
		Иначе
			Объект.НаименованиеПолное = ?(ЗначениеЗаполнено(Объект.НаименованиеПолное), Объект.НаименованиеПолное, "");
			ЦветТекстаНаименования = ЦветаСтиля.ЦветТекстаФормы;
		КонецЕсли;
		
		ОбщегоНазначенияУТКлиентСервер.УстановитьСвойствоЭлементаФормы(
			Элементы, "НаименованиеПолное",	"ТолькоПросмотр", ЗапретРедактированияНаименованияДляПечати);
		ОбщегоНазначенияУТКлиентСервер.УстановитьСвойствоЭлементаФормы(
			Элементы, "НаименованиеПолное", "ЦветТекста", ЦветТекстаНаименования);
		
	Иначе
		
		Если ЗапретРедактированияРабочегоНаименования И Объект.Наименование = ЗаголовокФормированияПоШаблонуРабочее Тогда
			Объект.Наименование = ?(Объект.Наименование = ЗаголовокФормированияПоШаблонуРабочее, "", Объект.Наименование);
		КонецЕсли;
		
		Если ЗапретРедактированияНаименованияДляПечати И Объект.НаименованиеПолное = ЗаголовокФормированияПоШаблонуДляПечати Тогда
			Объект.НаименованиеПолное = ?(Объект.НаименованиеПолное = ЗаголовокФормированияПоШаблонуДляПечати, "", Объект.НаименованиеПолное);
		КонецЕсли;
		
	КонецЕсли;
	
	ОбщегоНазначенияУТКлиентСервер.УстановитьСвойствоЭлементаФормы(
		Элементы, "ЗаполнитьНаименованиеДляПечатиПоШаблону", "Доступность", ЗначениеЗаполнено(ШаблонНаименованияДляПечати));
	ОбщегоНазначенияУТКлиентСервер.УстановитьСвойствоЭлементаФормы(
		Элементы, "ЗаполнитьРабочееНаименованиеПоШаблону", "Доступность", ЗначениеЗаполнено(ШаблонРабочегоНаименования));
	
КонецПроцедуры

&НаСервере
Процедура УстановитьДоступностьРедактированияУникальныхРеквизитов(Доступность)
	
	Если Не ПолучитьФункциональнуюОпцию("КонтролироватьУникальностьНоменклатурыИХарактеристикПоСочетаниюЗначенийРеквизитов") Тогда
		Возврат;
	КонецЕсли;
	
	Отбор = Новый Структура("Свойство");
	
	Для Каждого СтрокаТаблицы Из ТаблицаУникальныхРеквизитов Цикл
		
		Если СтрокаТаблицы.ЭтоДопРеквизит Тогда
			
			Отбор.Свойство = СтрокаТаблицы.СвойствоДопРеквизита;
			НайденныеСтроки = ЭтаФорма.Свойства_ОписаниеДополнительныхРеквизитов.НайтиСтроки(Отбор);
			
			Если НайденныеСтроки.Количество() = 0 Тогда
				Продолжить;
			КонецЕсли;
			
			ИмяЭлементаФормы = НайденныеСтроки[0].ИмяРеквизитаЗначение;
			
		Иначе
			
			ИмяЭлементаФормы = СтрокаТаблицы.Наименование;
			
		КонецЕсли;
		
		Если ИмяЭлементаФормы = "ВидНоменклатуры" Тогда
			Продолжить;
		КонецЕсли;
		
		Элемент = Элементы.Найти(ИмяЭлементаФормы);
		
		Если Элемент = Неопределено Тогда
			Продолжить;
		КонецЕсли;
		
		ОбщегоНазначенияУТКлиентСервер.УстановитьСвойствоЭлементаФормы(
			Элементы, ИмяЭлементаФормы, "ТолькоПросмотр", НЕ Доступность);
		
	КонецЦикла;
	
	ОбщегоНазначенияУТКлиентСервер.УстановитьСвойствоЭлементаФормы(
		Элементы, "ВидНоменклатурыУчетнаяИнформация",
		"ТолькоПросмотр", КонтролироватьУникальностьНоменклатурыИХарактеристикПоСочетаниюЗначенийРеквизитов);
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьЗаполнениеОбязательныхУникальныхРеквизитов(Отказ)
	
	ТекстОшибки = НСтр("ru='Поле ""%ИмяРеквизита%"" не заполнено'");
	
	Если НЕ ЗначениеЗаполнено(Объект.ВидНоменклатуры) Тогда
		
		ТекстСообщения = СтрЗаменить(ТекстОшибки, "%ИмяРеквизита%", НСтр("ru = 'Вид номенклатуры'"));
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения,,"Объект.ВидНоменклатуры",,Отказ);
		
		Возврат;
		
	КонецЕсли;
	
	Для Каждого СтрокаТаблицы Из ТаблицаУникальныхРеквизитов Цикл
		
		Если СтрокаТаблицы.Наименование = "ВидНоменклатуры" Тогда
			Продолжить;
		КонецЕсли;
		
		ЗначениеРеквизита = ?(СтрокаТаблицы.ЭтоДопРеквизит, ЭтаФорма[СтрокаТаблицы.ПутьКДанным], Объект[СтрокаТаблицы.ПутьКДанным]);
		ПутьКРеквизиту = СтрокаТаблицы.ПутьКДанным;
		
		Если НЕ ЗначениеЗаполнено(ЗначениеРеквизита) Тогда
			
			ТекстСообщения = СтрЗаменить(ТекстОшибки, "%ИмяРеквизита%", СтрокаТаблицы.Представление);
			
			Если СтрокаТаблицы.ЭтоДопРеквизит Тогда
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения,,ПутьКРеквизиту,,Отказ);
			Иначе
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения,,"Объект." + СтрокаТаблицы.Наименование,,Отказ);
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьЗаполнениеОбязательныхУчетныхРеквизитов(Отказ)
	
	ТекстОшибки = НСтр("ru='Поле ""%ИмяРеквизита%"" не заполнено'");
	
	// Проверить основные реквизиты у которых включена проверка заполнения.
	ОсновныеРеквизиты = ОсновныеРеквизиты();
	
	Для Каждого Элемент Из ОсновныеРеквизиты Цикл
		
		ИмяЭлемента = Элемент.Имя;
		
		Если НЕ (ИмяЭлемента = "ВидНоменклатуры" ИЛИ ИмяЭлемента = "Наименование") Тогда
			
			Если Элемент.ОтметкаНезаполненного = Ложь Тогда
				Продолжить;
			КонецЕсли;
			
		КонецЕсли;
		
		Если ИмяЭлемента = "НоменклатураМногооборотнаяТара"
			И (Объект.ТипНоменклатуры <> Перечисления.ТипыНоменклатуры.Товар
			Или Не Объект.ПоставляетсяВМногооборотнойТаре) Тогда
			Продолжить;
		КонецЕсли;
		
		Если НЕ ЗначениеЗаполнено(Объект[ИмяЭлемента]) Тогда
			
			ТекстСообщения = СтрЗаменить(ТекстОшибки, "%ИмяРеквизита%", Элемент.Заголовок);
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения,,Элемент.ПутьКДанным,,Отказ);
			
			Продолжить;
			
		КонецЕсли;
		
		Если НЕ ЗначениеЗаполнено(Вычислить(Элемент.ПутьКДанным)) Тогда
			
			ТекстСообщения = СтрЗаменить(ТекстОшибки, "%ИмяРеквизита%", Элемент.Заголовок);
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения,,Элемент.ПутьКДанным,,Отказ);
			
			Продолжить;
			
		КонецЕсли;
		
	КонецЦикла;
	
	// Проверить дополнительные реквизиты у которых включена проверка заполнения.
	ДополнительныеРеквизиты = ДополнительныеРеквизиты();
	
	Для Каждого Элемент Из ДополнительныеРеквизиты Цикл
		
		Если Элемент.ОтметкаНезаполненного = Ложь Тогда
			Продолжить;
		КонецЕсли;
		
		Если НЕ ЗначениеЗаполнено(Вычислить(Элемент.ПутьКДанным)) Тогда
			
			НаименованиеСвойства = "";
			
			НайденныеСтроки = ЭтаФорма.Свойства_ОписаниеДополнительныхРеквизитов.НайтиСтроки(Новый Структура("ИмяРеквизитаЗначение", Элемент.Имя));
			Если НайденныеСтроки.Количество() > 0 Тогда
				НаименованиеСвойства = НайденныеСтроки[0].Свойство.Наименование;
			КонецЕсли;
			
			ТекстСообщения = СтрЗаменить(ТекстОшибки, "%ИмяРеквизита%", НаименованиеСвойства);
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения,,Элемент.ПутьКДанным,,Отказ);
			
		КонецЕсли;
		
	КонецЦикла;
	
	Если НЕ Отказ Тогда
		
		УстановитьДоступностьРедактированияНаименований(Ложь);
		
	КонецЕсли;
	
	Если КонтролироватьУникальностьРабочегоНаименованияНоменклатурыИХарактеристик Тогда
		
		Если НЕ Справочники.Номенклатура.РабочееНаименованиеУникально(Объект) Тогда
			
			ТекстСообщения = НСтр("ru='Значение поля ""Рабочее наименование"" не уникально'");
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения,,"Наименование", "Объект", Отказ);
			
		КонецЕсли;
		
	КонецЕсли;
	
	Если ИспользоватьИндивидуальныйШаблонЭтикетки = 1 И НЕ ЗначениеЗаполнено(Объект.ШаблонЭтикетки)Тогда
		
		ИмяРеквизита = НСтр("ru = 'Шаблон этикетки'");
		ТекстСообщения = СтрЗаменить(ТекстОшибки, "%ИмяРеквизита%", ИмяРеквизита);
		
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения,,"Объект.ШаблонЭтикетки",,Отказ);
		
	КонецЕсли;
	
	Если ИспользоватьИндивидуальныйШаблонЦенника = 1 И НЕ ЗначениеЗаполнено(Объект.ШаблонЦенника) Тогда
		
		ИмяРеквизита = НСтр("ru = 'Шаблон ценника'");
		ТекстСообщения = СтрЗаменить(ТекстОшибки, "%ИмяРеквизита%", ИмяРеквизита);
		
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения,,"Объект.ШаблонЦенника",,Отказ);
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Функция ДополнительныеРеквизиты()
	
	Результат = Новый Массив;
	
	Если Элементы.ГруппаДополнительныеРеквизиты.ПодчиненныеЭлементы.Количество() = 0 Тогда
		Возврат Результат;
	КонецЕсли;
	
	ДополнительныеРеквизиты = Элементы.ГруппаДополнительныеРеквизиты.ПодчиненныеЭлементы[0].ПодчиненныеЭлементы;
	
	Для Каждого Элемент Из ДополнительныеРеквизиты Цикл
		
		Если ТипЗнч(ЭтаФорма[Элемент.ПутьКДанным]) = Тип("Булево") Тогда
			
			Продолжить;
			
		ИначеЕсли Элемент.ОтметкаНезаполненного И НЕ ЗначениеЗаполнено(Вычислить(Элемент.ПутьКДанным)) Тогда
			
			Результат.Добавить(Элемент);
			
		КонецЕсли;
		
	КонецЦикла;
	
	Возврат Результат;
	
КонецФункции

&НаСервере
Функция ОсновныеРеквизиты()
	
	Результат = Новый Массив;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	РеквизитыДляКонтроля.ИмяРеквизита
	|ИЗ
	|	Справочник.ВидыНоменклатуры.РеквизитыДляКонтроляНоменклатуры КАК РеквизитыДляКонтроля
	|ГДЕ
	|	НЕ РеквизитыДляКонтроля.ЭтоДопРеквизит
	|	И РеквизитыДляКонтроля.ОбязателенДляЗаполнения
	|	И РеквизитыДляКонтроля.Ссылка = &ВидНоменклатуры";
	
	Запрос.УстановитьПараметр("ВидНоменклатуры", Объект.ВидНоменклатуры);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Выборка = РезультатЗапроса.Выбрать();
	Пока Выборка.Следующий() Цикл
		
		ИмяРеквизита = Выборка.ИмяРеквизита;
		Элемент = Элементы[ИмяРеквизита];
		
		Если ИмяРеквизита = "ШаблонЭтикетки" И НЕ (ИспользоватьИндивидуальныйШаблонЭтикетки = 1) Тогда
			Продолжить;
		КонецЕсли;
		
		Если ИмяРеквизита = "ШаблонЦенника" И НЕ (ИспользоватьИндивидуальныйШаблонЦенника = 1) Тогда
			Продолжить;
		КонецЕсли;
		
		Результат.Добавить(Элемент);
		
	КонецЦикла;
	
	Если Объект.ИспользоватьУпаковки Тогда
		
		Результат.Добавить(Элементы.НаборУпаковок);
		
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(Объект.Наименование) Тогда
		
		Результат.Добавить(Элементы.Наименование);
		
	КонецЕсли;
	
	Возврат Результат;
	
КонецФункции

&НаСервере
Процедура УстановитьВидимостьЗаголовокНастроекКопирования()
	
	ОбщегоНазначенияУТКлиентСервер.УстановитьСвойствоЭлементаФормы(
		Элементы, "КопироватьИндивидуальныеУпаковки",
		"Видимость", ЕстьИндивидуальныеУпаковкиВОбъектеКопирования);
	ОбщегоНазначенияУТКлиентСервер.УстановитьСвойствоЭлементаФормы(
		Элементы, "КопироватьИндивидуальныеХарактеристики",
		"Видимость", ЕстьИндивидуальныеХарактеристикиВОбъектеКопирования);
	
	ТипНоменклатурыКопирования = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(РеквизитыОбъектаКопирования.ВидНоменклатуры,"ТипНоменклатуры");
	ТипНоменклатурыСтрокой = НСтр("ru = 'товара'");
	Если ТипНоменклатурыКопирования = Перечисления.ТипыНоменклатуры.Услуга Тогда
		ТипНоменклатурыСтрокой = НСтр("ru = 'услуги'");
	КонецЕсли;
	
	//... у настроек копирования индивидуальных характеристик.
	ТекстЗаголовка = "";
	
	Если ЕстьИндивидуальныеХарактеристикиВОбъектеКопирования Тогда
		
		ТекстЗаголовка = НСтр("ru = 'Копировать характеристики %ТипНоменклатуры% ""%НаименованиеРеквизита%""'");
		ТекстЗаголовка = СтрЗаменить(ТекстЗаголовка, "%ТипНоменклатуры%", ТипНоменклатурыСтрокой);
		ТекстЗаголовка = СтрЗаменить(ТекстЗаголовка, "%НаименованиеРеквизита%", СокрЛП(РеквизитыОбъектаКопирования.Наименование));
		
	КонецЕсли;
	
	Элементы.КопироватьИндивидуальныеХарактеристики.Заголовок = ТекстЗаголовка;
	
	//... у настроек копирования индивидуальных упаковок.
	
	ТекстЗаголовка = "";
	
	Если ЕстьИндивидуальныеУпаковкиВОбъектеКопирования Тогда
		
		ТекстЗаголовка = НСтр("ru = 'Копировать упаковки %ТипНоменклатуры% ""%НаименованиеРеквизита%""'");
		ТекстЗаголовка = СтрЗаменить(ТекстЗаголовка, "%ТипНоменклатуры%", ТипНоменклатурыСтрокой);
		ТекстЗаголовка = СтрЗаменить(ТекстЗаголовка, "%НаименованиеРеквизита%", СокрЛП(РеквизитыОбъектаКопирования.Наименование));
		
	КонецЕсли;
	
	Элементы.КопироватьИндивидуальныеУпаковки.Заголовок = ТекстЗаголовка;
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьВозможностьСозданияЭлементаПоГруппеДоступа(Отказ)
	
	// Проверить возможность создания элемента номенклатуры по группе доступа вида номенклатуры.
	Если Справочники.ГруппыДоступаНоменклатуры.ИспользуютсяГруппыДоступа()
	 И НЕ ЗначениеЗаполнено(Объект.ГруппаДоступа) Тогда
		
		Если ЗначениеЗаполнено(ГруппаДоступаНоменклатурыДляКонтроля) Тогда
			
			ТекстСообщения = НСтр("ru = 'В виде номенклатуры ""%ВидНоменклатуры%"" указана группа доступа ""%ГруппаДоступа%"".
			                            |Недостаточно прав на создание номенклатуры по этой группе доступа.'");
			ТекстСообщения = СтрЗаменить(ТекстСообщения, "%ВидНоменклатуры%", Объект.ВидНоменклатуры);
			ТекстСообщения = СтрЗаменить(ТекстСообщения, "%ГруппаДоступа%", ГруппаДоступаНоменклатурыДляКонтроля);
			
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения,,"Объект.ВидНоменклатуры",,Отказ);
			
		Иначе
			
			ТекстСообщения = НСтр("ru = 'В виде номенклатуры ""%ВидНоменклатуры%"" не указана группа доступа.
			                            |Невозможно создать номенклатуру этого вида.'");
			ТекстСообщения = СтрЗаменить(ТекстСообщения, "%ВидНоменклатуры%", Объект.ВидНоменклатуры);
			
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения,,"Объект.ВидНоменклатуры",,Отказ);
			
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ДекорацияУчетнаяИнформацияНажатиеНаСервере()
	
	ОтображеныВсеРеквизитыНоменклатуры = НЕ ОтображеныВсеРеквизитыНоменклатуры;
	
	УстановитьВидимостьРеквизитовПоНастройкамВидаНоменклатуры();
	
	ТекстЗаголовка = НСтр("ru = 'Введите значения реквизитов номенклатуры (показать все)'");
	
	Если ОтображеныВсеРеквизитыНоменклатуры Тогда
		
		ТекстЗаголовка = НСтр("ru = 'Введите значения реквизитов номенклатуры (скрыть неважные)'");
		
	КонецЕсли;
	
	Элементы.ПояснениеУчетнаяИнформация.Заголовок = ТекстЗаголовка;
	
КонецПроцедуры

&НаСервере
Функция ВидыНоменклатурыИдентичныеПоНастройкамКонтроляУникальности(ВидНоменклатуры)
	
	РеквизитыВидаНоменклатуры = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Объект.ВидНоменклатуры, "ТипНоменклатуры");
	
	ИдентичныеВидыНоменклатуры = Новый Массив;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	РеквизитыДляКонтроля.ИмяРеквизита,
	|	РеквизитыДляКонтроля.ЭтоДопРеквизит,
	|	РеквизитыДляКонтроля.Свойство
	|ИЗ
	|	Справочник.ВидыНоменклатуры.РеквизитыДляКонтроляНоменклатуры КАК РеквизитыДляКонтроля
	|ГДЕ
	|	РеквизитыДляКонтроля.Ссылка = &ВидНоменклатуры
	|	И РеквизитыДляКонтроля.Уникален
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	РеквизитыДляКонтроля.Ссылка КАК ВидНоменклатуры,
	|	РеквизитыДляКонтроля.ИмяРеквизита КАК ИмяРеквизита,
	|	РеквизитыДляКонтроля.ЭтоДопРеквизит КАК ЭтоДопРеквизит,
	|	РеквизитыДляКонтроля.Свойство КАК Свойство
	|ИЗ
	|	Справочник.ВидыНоменклатуры.РеквизитыДляКонтроляНоменклатуры КАК РеквизитыДляКонтроля
	|ГДЕ
	|	РеквизитыДляКонтроля.Ссылка.ТипНоменклатуры = &ТипНоменклатуры
	|	И РеквизитыДляКонтроля.Уникален
	|
	|УПОРЯДОЧИТЬ ПО
	|	ВидНоменклатуры,
	|	ИмяРеквизита,
	|	ЭтоДопРеквизит,
	|	Свойство
	|ИТОГИ ПО
	|	ВидНоменклатуры";
	
	Запрос.УстановитьПараметр("ВидНоменклатуры", Объект.ВидНоменклатуры);
	Запрос.УстановитьПараметр("ТипНоменклатуры", РеквизитыВидаНоменклатуры.ТипНоменклатуры);
	
	РезультатыЗапроса = Запрос.ВыполнитьПакет();
	
	ТаблицаРеквизитовТекВидаНоменклатуры = РезультатыЗапроса[0].Выгрузить();
	КолРеквизитовДляКонтроля = ТаблицаРеквизитовТекВидаНоменклатуры.Количество();
	
	РеквизитыВидовНоменклатуры   = РезультатыЗапроса[1];
	Отбор = Новый Структура("ИмяРеквизита, ЭтоДопРеквизит, Свойство");
	
	ВыборкаПоВиду = РеквизитыВидовНоменклатуры.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	Пока ВыборкаПоВиду.Следующий() Цикл
		
		СоответствуетУсловиям = Истина;
		
		ВыборкаПоРеквизитам = ВыборкаПоВиду.Выбрать();
		КолРеквизитовВида = ВыборкаПоРеквизитам.Количество();
		
		Если КолРеквизитовВида = 0 Тогда
			Продолжить;
		КонецЕсли;
		
		Если КолРеквизитовВида <> КолРеквизитовДляКонтроля Тогда
			Продолжить;
		КонецЕсли;
		
		Пока ВыборкаПоРеквизитам.Следующий() Цикл
			
			ЗаполнитьЗначенияСвойств(Отбор, ВыборкаПоРеквизитам);
			
			Если ТаблицаРеквизитовТекВидаНоменклатуры.НайтиСтроки(Отбор).Количество() = 0 Тогда
				СоответствуетУсловиям = Ложь;
			КонецЕсли;
			
			Если НЕ СоответствуетУсловиям Тогда
				Прервать;
			КонецЕсли;
			
		КонецЦикла;
		
		Если НЕ СоответствуетУсловиям Тогда
			Продолжить;
		КонецЕсли;
		
		ИдентичныеВидыНоменклатуры.Добавить(ВыборкаПоВиду.ВидНоменклатуры);
		
	КонецЦикла;
	
	Возврат ИдентичныеВидыНоменклатуры;
	
КонецФункции

&НаКлиентеНаСервереБезКонтекста
Процедура ОбновитьДоступностьЭлементовМногооборотнойТары(Форма, Видимость = Ложь)
	
	ОбщегоНазначенияУТКлиентСервер.УстановитьСвойствоЭлементаФормы(
		Форма.Элементы,
		"НоменклатураМногооборотнаяТара",
		"Доступность",
		Форма.Объект.ПоставляетсяВМногооборотнойТаре
	);
	
	ОбщегоНазначенияУТКлиентСервер.УстановитьСвойствоЭлементаФормы(
		Форма.Элементы,
		"ХарактеристикаМногооборотнаяТара",
		"Доступность",
		Форма.Объект.ПоставляетсяВМногооборотнойТаре И Форма.ХарактеристикиИспользуются И ЗначениеЗаполнено(Форма.Объект.НоменклатураМногооборотнаяТара)
	);
	
	ОбщегоНазначенияУТКлиентСервер.УстановитьСвойствоЭлементаФормы(
		Форма.Элементы,
		"ГруппаМногооборотнаяТара",
		"Видимость",
		Видимость
	);
	
КонецПроцедуры

&НаСервере
Процедура НоменклатураМногооборотнаяТараПриИзмененииСервер ()
	
	ХарактеристикиИспользуются = Справочники.Номенклатура.ХарактеристикиИспользуются(Объект.ХарактеристикаМногооборотнаяТара);
	
	СтруктураДействий = Новый Структура;
	СтруктураДействий.Вставить("ПроверитьХарактеристикуПоВладельцу", Объект.ХарактеристикаМногооборотнаяТара);

	СтруктураСтроки = Новый Структура;
	СтруктураСтроки.Вставить("Номенклатура", Объект.НоменклатураМногооборотнаяТара);
	СтруктураСтроки.Вставить("Характеристика", Объект.ХарактеристикаМногооборотнаяТара);
	СтруктураСтроки.Вставить("ХарактеристикиИспользуются", ХарактеристикиИспользуются);
	
	ОбработкаТабличнойЧастиСервер.ОбработатьСтрокуТЧ(СтруктураСтроки, СтруктураДействий, Неопределено);

	Объект.НоменклатураМногооборотнаяТара = СтруктураСтроки.Номенклатура;
	Объект.ХарактеристикаМногооборотнаяТара = СтруктураСтроки.Характеристика;
	
	ХарактеристикиИспользуются = СтруктураСтроки.ХарактеристикиИспользуются;
	ОбщегоНазначенияУТКлиентСервер.УстановитьСвойствоЭлементаФормы(
		Элементы, "ХарактеристикаМногооборотнаяТара", "Доступность", ХарактеристикиИспользуются);
	
КонецПроцедуры
