////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// Пропускаем инициализацию, чтобы гарантировать получение формы при передаче параметра "АвтоТест".
	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;
	КонецЕсли;
	
	АвтоЗаголовок = Ложь;
	Заголовок = НСтр("ru = 'Размещение в ячейках'");
	
	НормативноеКоличествоЗапаса = "Все";
	
	ОтборНоменклатура = Параметры.Ключ;
	
	ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбора(
		ПрогнозыРасходаУпаковок.Отбор, 
		"Номенклатура", 
		ОтборНоменклатура, 
		ВидСравненияКомпоновкиДанных.Равно, 
		"Номенклатура", 
		Истина);
	
	ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбора(
		РазмещениеНоменклатурыПоСкладскимЯчейкам.Отбор, 
		"Номенклатура", 
		ОтборНоменклатура, 
		ВидСравненияКомпоновкиДанных.Равно, 
		"Номенклатура", 
		Истина);
		
	ИспользоватьАдресноеХранение = ПолучитьФункциональнуюОпцию("ИспользоватьАдресноеХранение", Новый Структура());
		
	Элементы.СтраницаТоварыВЯчейках.Видимость = ИспользоватьАдресноеХранение;
	Элементы.СтраницаДвиженияТовараВЯчейках.Видимость = ИспользоватьАдресноеХранение;
	Элементы.СтраницаПрогнозыРасходаУпаковок.Видимость = ПолучитьФункциональнуюОпцию("ИспользоватьПодпиткуЗонБыстрогоОтбора", Новый Структура);
	Элементы.СтраницаРазмещениеНоменклатурыПоСкладскимЯчейкам.Видимость = ПолучитьФункциональнуюОпцию("ИспользоватьАдресноеХранениеСправочно", Новый Структура);
	
	Если ИспользоватьАдресноеХранение Тогда
		УстановитьСтандартныеНастройки("ТоварыВЯчейках");
		СформироватьОтчет("ТоварыВЯчейках");
		
		УстановитьСтандартныеНастройки("ДвиженияТоваровВЯчейках");
		СформироватьОтчет("ДвиженияТоваровВЯчейках");
	КонецЕсли;
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ ШАПКИ ФОРМЫ

&НаКлиенте
Процедура СкладПриИзменении(Элемент)
	
	УстановитьОтборы();
	
КонецПроцедуры

&НаКлиенте
Процедура ПомещениеПриИзменении(Элемент)
	
	УстановитьОтборы();
	
КонецПроцедуры

&НаКлиенте
Процедура НормативноеКоличествоЗапасаПриИзменении(Элемент)
	
	УстановитьОтборы();
	
КонецПроцедуры

&НаКлиенте
Процедура ТаблицаОтчетаТоварыВЯчейкахОбработкаРасшифровки(Элемент, Расшифровка, СтандартнаяОбработка)
	
	ОписаниеОбработкиРасшифровки = ОтчетыКлиент.ОбработатьРасшифровку(ЭтаФорма, Расшифровка, СтандартнаяОбработка); 
	
	Если ОписаниеОбработкиРасшифровки <> Неопределено Тогда
		ОбработатьРасшифровкуОтчета("ТоварыВЯчейках",ОписаниеОбработкиРасшифровки);	
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ТаблицаДвиженияТоваровВЯчейкахОбработкаРасшифровки(Элемент, Расшифровка, СтандартнаяОбработка)
	
	ОписаниеОбработкиРасшифровки = ОтчетыКлиент.ОбработатьРасшифровку(ЭтаФорма, Расшифровка, СтандартнаяОбработка); 
	
	Если ОписаниеОбработкиРасшифровки <> Неопределено Тогда
		ОбработатьРасшифровкуОтчета("ДвиженияТоваровВЯчейках",ОписаниеОбработкиРасшифровки);	
	КонецЕсли;
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ КОМАНД ФОРМЫ

&НаКлиенте
Процедура СформироватьОтчетТоварыВЯчейках(Команда)
	
	СформироватьОтчет("ТоварыВЯчейках");
	
КонецПроцедуры

&НаКлиенте
Процедура ТоварыВЯчейкахУстановитьСтандартныеНастройки(Команда)
	
	УстановитьСтандартныеНастройки("ТоварыВЯчейках");
	
КонецПроцедуры

&НаКлиенте
Процедура СформироватьОтчетДвиженияТоваровВЯчейках(Команда)
	
	СформироватьОтчет("ДвиженияТоваровВЯчейках");
	
КонецПроцедуры

&НаКлиенте
Процедура ИспользоватьРекомендуемоеНормативноеКоличествоЗапаса(Команда)
	
	МассивЗаписей = Элементы.ПрогнозыРасходаУпаковок.ВыделенныеСтроки;
	
	Если МассивЗаписей.Количество() = 0 Тогда
		
		ТекстСообщения = НСтр("ru = 'Выделите строки, в которых нужно установить использование рекомендуемого нормативного запаса.'");
		Предупреждение(ТекстСообщения);
		Возврат;
		
	Иначе
		
		ТекстВопроса = НСтр("ru = 'При выполнении операции в выделенных строках будет очищено нормативное количество запаса, назначенное вручную. Продолжить?'");
		Ответ = Вопрос(ТекстВопроса,РежимДиалогаВопрос.ДаНет);
		
		Если Ответ <> КодВозвратаДиалога.Да Тогда
			Возврат;
		КонецЕсли;
		
	КонецЕсли;
	
	ИспользоватьРекомендуемоеНормативноеКоличествоЗапасаСервер(МассивЗаписей);
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

&НаСервере
Процедура УстановитьОтборы()
	
	ТолькоЗначенияНазначенныеВручную = (НормативноеКоличествоЗапаса = "НазначенныеВручную");
	
	ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбора(ПрогнозыРасходаУпаковок.Отбор, "Помещение", Помещение, ВидСравненияКомпоновкиДанных.Равно,, Истина, РежимОтображенияЭлементаНастройкиКомпоновкиДанных.Недоступный);
	ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбора(ПрогнозыРасходаУпаковок.Отбор, "Склад", Склад, ВидСравненияКомпоновкиДанных.Равно,, Истина, РежимОтображенияЭлементаНастройкиКомпоновкиДанных.Недоступный);
	ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбора(ПрогнозыРасходаУпаковок.Отбор, "НазначеноПользователем", ТолькоЗначенияНазначенныеВручную, ВидСравненияКомпоновкиДанных.Равно,, ТолькоЗначенияНазначенныеВручную, РежимОтображенияЭлементаНастройкиКомпоновкиДанных.Недоступный);
	
	Если СкладыСервер.ИспользоватьПодпиткуЗонБыстрогоОтбора(Склад, Помещение) Тогда
		
		Элементы.ДекорацияИспользованиеПодпитки.Заголовок = "";
		Элементы.ПрогнозыРасходаУпаковок.ИзменятьСоставСтрок = Истина;
		
	ИначеЕсли ЗначениеЗаполнено(Склад)
		И Не СкладыСервер.ИспользоватьСкладскиеПомещения(Склад)
		Или ЗначениеЗаполнено(Помещение) Тогда
		
		ТекстЗаголовка = НСтр("ru = 'На складе ""%Склад%"" не используется подпитка зон быстрого отбора, поэтому прогнозирование расхода упаковок не ведется.'");
		ТекстЗаголовка = СтрЗаменить(ТекстЗаголовка, "%Склад%", СкладыСервер.ПолучитьПредставлениеСклада(Склад, Помещение));
		
		Элементы.ДекорацияИспользованиеПодпитки.Заголовок = ТекстЗаголовка;
		Элементы.ПрогнозыРасходаУпаковок.ИзменятьСоставСтрок = Ложь;
		
	Иначе
		
		Элементы.ДекорацияИспользованиеПодпитки.Заголовок = "";
		Элементы.ПрогнозыРасходаУпаковок.ИзменятьСоставСтрок = Ложь;
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ИспользоватьРекомендуемоеНормативноеКоличествоЗапасаСервер(МассивЗаписей)
	
	Для Каждого СтрМас Из МассивЗаписей Цикл
		
		Если ТипЗнч(СтрМас) <> Тип("РегистрСведенийКлючЗаписи.ПрогнозыРасходаУпаковок")
			Тогда
			Продолжить;
		КонецЕсли;
		
		Набор = РегистрыСведений.ПрогнозыРасходаУпаковок.СоздатьНаборЗаписей();
		
		Набор.Отбор.Склад.Установить(СтрМас.Склад);
		Набор.Отбор.Помещение.Установить(СтрМас.Помещение);
		Набор.Отбор.Номенклатура.Установить(СтрМас.Номенклатура);
		Набор.Отбор.Характеристика.Установить(СтрМас.Характеристика);
		Набор.Отбор.Серия.Установить(СтрМас.Серия);
		Набор.Отбор.Упаковка.Установить(СтрМас.Упаковка);
		
		Набор.Прочитать();
		
		Если Набор.Количество() > 0 Тогда
			Если Не Набор[0].НазначеноПользователем Тогда
				Продолжить;
			КонецЕсли;
		Иначе
			Продолжить;
		КонецЕсли;
		
		НоваяСтрока = Набор[0];
		НоваяСтрока.НазначеноПользователем      = Ложь;
		НоваяСтрока.НормативноеКоличествоЗапаса = 0;
		
		Набор.Записать();
		
	КонецЦикла;
	
	Элементы.ПрогнозыРасходаУпаковок.Обновить();
	
КонецПроцедуры

&НаСервере
Процедура ОбработатьРасшифровкуОтчета(ИмяРеквизитаФормы,ОписаниеОбработкиРасшифровки)
	
	ОтчетыСервер.ОбработатьРасшифровку(ЭтаФорма, ИмяРеквизитаФормы, ОписаниеОбработкиРасшифровки);
	
КонецПроцедуры

&НаСервере
Процедура СформироватьОтчет(ИмяРеквизитаФормы)
	
	ИмяОтчетаВарианта = ИмяОтчетаИВариантаПоИмениРеквизитаФормы(ИмяРеквизитаФормы);	
	ОтчетыСервер.СформироватьОтчет(ЭтаФорма, ИмяРеквизитаФормы, ИмяОтчетаВарианта.ИмяОтчета, ИмяОтчетаВарианта.ИмяВариантаОтчета); 
	
КонецПроцедуры

&НаСервере
Процедура УстановитьСтандартныеНастройки(ИмяРеквизитаФормы)
	
	ИмяОтчетаВарианта = ИмяОтчетаИВариантаПоИмениРеквизитаФормы(ИмяРеквизитаФормы);	
	
	Отбор = Новый Структура;
	Отбор.Вставить("Номенклатура", ОтборНоменклатура);
	
 	ОтчетыСервер.УстановитьСтандартныеНастройки(ЭтаФорма, ИмяРеквизитаФормы, ИмяОтчетаВарианта.ИмяОтчета, ИмяОтчетаВарианта.ИмяВариантаОтчета, Отбор); 	
	
КонецПроцедуры

&НаСервере
Функция ИмяОтчетаИВариантаПоИмениРеквизитаФормы(ИмяРеквизитаФормы)
	
	Результат = Новый Структура("ИмяОтчета, ИмяВариантаОтчета");
	
	Если ИмяРеквизитаФормы = "ТоварыВЯчейках" Тогда
		Результат.ИмяОтчета         = "ТоварыВЯчейках";
		Результат.ИмяВариантаОтчета = "ПоНоменклатуреКонтекст";
	ИначеЕсли ИмяРеквизитаФормы = "ДвиженияТоваровВЯчейках" Тогда
		Результат.ИмяОтчета         = "ТоварыВЯчейках";
		Результат.ИмяВариантаОтчета = "ДвиженияТоваровВЯчейкеКонтекст";
	КонецЕсли;
	
	Возврат Результат;
		
КонецФункции