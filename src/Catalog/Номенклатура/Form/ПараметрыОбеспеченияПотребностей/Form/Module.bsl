////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// Пропускаем инициализацию, чтобы гарантировать получение формы при передаче параметра "АвтоТест".
	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;
	КонецЕсли;
	
	МассивИменЭлементов = Новый Массив;
	
	Если Параметры.Свойство("Номенклатура")
		И ЗначениеЗаполнено(Параметры.Номенклатура) Тогда
		
		МассивИменЭлементов.Добавить("ПараметрыОбеспеченияТоварамиНоменклатура");
		МассивИменЭлементов.Добавить("ТоварныеОграниченияНоменклатура");
		МассивИменЭлементов.Добавить("ВариантыОбеспеченияТоварамиНоменклатура");
		МассивИменЭлементов.Добавить("НастройкаКонтроляОстатковНоменклатура");
		МассивИменЭлементов.Добавить("НастройкаУровняОбслуживанияНоменклатура");
		МассивИменЭлементов.Добавить("НастройкаПередачиМатериаловВПроизводствоНоменклатура");
		
		ИмяОтбора = "Номенклатура";
		ЗначениеОтбора = Параметры.Номенклатура;

		ТипНоменклатуры = ОбщегоНазначения.ПолучитьЗначениеРеквизита(ЗначениеОтбора, "ТипНоменклатуры");
		
		ЭтоРабота = ТипНоменклатуры = Перечисления.ТипыНоменклатуры.Работа;
		ЭтоТовар  = ТипНоменклатуры = Перечисления.ТипыНоменклатуры.МногооборотнаяТара
					Или ТипНоменклатуры = Перечисления.ТипыНоменклатуры.Товар;
		
		Если Не ЭтоТовар Тогда
			МассивИменЭлементов.Добавить("Страницы");
		КонецЕсли;
		
		Если Не ЭтоРабота Тогда
			МассивИменЭлементов.Добавить("ГруппаВариантыОбеспеченияРаботами");
		КонецЕсли;
		
	ИначеЕсли Параметры.Свойство("Склад")
		И ЗначениеЗаполнено(Параметры.Склад) Тогда
		
		МассивИменЭлементов.Добавить("ПараметрыОбеспеченияТоварамиСклад");
		МассивИменЭлементов.Добавить("ТоварныеОграниченияСклад");
		МассивИменЭлементов.Добавить("ВариантыОбеспеченияТоварамиСклад");
		МассивИменЭлементов.Добавить("НастройкаКонтроляОстатковСклад");
		МассивИменЭлементов.Добавить("НастройкаУровняОбслуживанияСклад");
		МассивИменЭлементов.Добавить("НастройкаПередачиМатериаловВПроизводствоСклад");
		
		МассивИменЭлементов.Добавить("ГруппаВариантыОбеспеченияРаботами");
		
		ИмяОтбора = "Склад";
		ЗначениеОтбора = Параметры.Склад;
		
	Иначе
		ТекстИсключения = НСтр("ru = 'Форма не предназначена для непосредственного открытия.'");
		ВызватьИсключение ТекстИсключения;
	КонецЕсли;

	Если МассивИменЭлементов.Количество() > 0 Тогда
		ОбщегоНазначенияУТКлиентСервер.УстановитьСвойствоЭлементовФормы(Элементы, МассивИменЭлементов, "Видимость", Ложь); 
	КонецЕсли;
	
	ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбора(
		ПараметрыОбеспеченияТоварами.Отбор, 
		ИмяОтбора, 
		ЗначениеОтбора, 
		ВидСравненияКомпоновкиДанных.Равно, 
		ИмяОтбора, 
		Истина);
	
	ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбора(
		НастройкаКонтроляОстатков.Отбор, 
		ИмяОтбора, 
		ЗначениеОтбора, 
		ВидСравненияКомпоновкиДанных.Равно, 
		ИмяОтбора, 
		Истина);
	
	ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбора(
		НастройкаУровняОбслуживания.Отбор, 
		ИмяОтбора, 
		ЗначениеОтбора, 
		ВидСравненияКомпоновкиДанных.Равно, 
		ИмяОтбора, 
		Истина);
	
	ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбора(
		ТоварныеОграничения.Отбор, 
		ИмяОтбора, 
		ЗначениеОтбора, 
		ВидСравненияКомпоновкиДанных.Равно, 
		ИмяОтбора, 
		Истина);
	
	ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбора(
		ВариантыОбеспеченияТоварами.Отбор, 
		ИмяОтбора, 
		ЗначениеОтбора, 
		ВидСравненияКомпоновкиДанных.Равно, 
		ИмяОтбора, 
		Истина);
	
	ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбора(
		ВариантыОбеспеченияРаботами.Отбор, 
		ИмяОтбора, 
		ЗначениеОтбора, 
		ВидСравненияКомпоновкиДанных.Равно, 
		ИмяОтбора, 
		Истина);
	
	ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбора(
		НастройкаПередачиМатериаловВПроизводство.Отбор, 
		ИмяОтбора, 
		ЗначениеОтбора, 
		ВидСравненияКомпоновкиДанных.Равно, 
		ИмяОтбора, 
		Истина);
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ КОМАНД ФОРМЫ

&НаКлиенте
Процедура ПереместитьЭлементВверх(Команда)
	
	Если Элементы.ВариантыОбеспеченияТоварами.ТекущаяСтрока <> Неопределено Тогда
		
		ПереместитьЭлементВверхНаСервере(Элементы.ВариантыОбеспеченияТоварами.ТекущаяСтрока);
		Элементы.ВариантыОбеспеченияТоварами.Обновить();
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПереместитьЭлементВниз(Команда)
	
	Если Элементы.ВариантыОбеспеченияТоварами.ТекущаяСтрока <> Неопределено Тогда
		
		ПереместитьЭлементВнизНаСервере(Элементы.ВариантыОбеспеченияТоварами.ТекущаяСтрока);
		Элементы.ВариантыОбеспеченияТоварами.Обновить();
		
	КонецЕсли;
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

&НаСервере
Процедура ПереместитьЭлементВверхНаСервере(КлючЗаписи)
	
	МенеджерЗаписи = РегистрыСведений.ВариантыОбеспеченияТоварами.СоздатьМенеджерЗаписи();
	
	МенеджерЗаписи.Склад = КлючЗаписи.Склад;
	МенеджерЗаписи.Номенклатура = КлючЗаписи.Номенклатура;
	МенеджерЗаписи.Характеристика = КлючЗаписи.Характеристика;
	МенеджерЗаписи.СпособОбеспеченияПотребностей = КлючЗаписи.СпособОбеспеченияПотребностей;
	
	МенеджерЗаписи.Прочитать();
	
	Если МенеджерЗаписи.РеквизитДопУпорядочивания > 1 Тогда
		
		МенеджерЗаписи.РеквизитДопУпорядочивания = МенеджерЗаписи.РеквизитДопУпорядочивания - 1;
		МенеджерЗаписи.Записать();
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПереместитьЭлементВнизНаСервере(КлючЗаписи)
	
	МенеджерЗаписи = РегистрыСведений.ВариантыОбеспеченияТоварами.СоздатьМенеджерЗаписи();
	
	МенеджерЗаписи.Склад = КлючЗаписи.Склад;
	МенеджерЗаписи.Номенклатура = КлючЗаписи.Номенклатура;
	МенеджерЗаписи.Характеристика = КлючЗаписи.Характеристика;
	МенеджерЗаписи.СпособОбеспеченияПотребностей = КлючЗаписи.СпособОбеспеченияПотребностей;
	
	МенеджерЗаписи.Прочитать();
	
	МенеджерЗаписи.РеквизитДопУпорядочивания = МенеджерЗаписи.РеквизитДопУпорядочивания + 1;
	МенеджерЗаписи.Записать();
	
КонецПроцедуры
