////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// Пропускаем инициализацию, чтобы гарантировать получение формы при передаче параметра "АвтоТест".
	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;
	КонецЕсли;
	
	АвтоЗаголовок = Ложь;
	Заголовок = НСтр("ru = 'Доступные остатки'");
	
	ОтборНоменклатура = Параметры.Ключ;
	
	СформироватьОтчет("АнализДоступностиТоваров");
	
	ВидНоменклатуры = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ОтборНоменклатура,"ВидНоменклатуры");
	Реквизиты = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(ВидНоменклатуры,Новый Структура("ИспользоватьСерии,НастройкаИспользованияСерий"));

	Если Реквизиты.ИспользоватьСерии
		И (Реквизиты.НастройкаИспользованияСерий = Перечисления.НастройкиИспользованияСерийНоменклатуры.ПартияТоваровПоСрокуГодности
		Или Реквизиты.НастройкаИспользованияСерий = Перечисления.НастройкиИспользованияСерийНоменклатуры.ПартияТоваровПоНомеруИСрокуГодности) Тогда	
		
		СформироватьОтчет("ТоварыНаСкладахПоСрокамГодности");
		
	Иначе
		
		Элементы.СтраницаТоварыНаСкладахПоСрокамГодности.Видимость = Ложь;
		
	КонецЕсли;	
	
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ КОМАНД ФОРМЫ

&НаКлиенте
Процедура СформироватьОтчетАнализДоступности(Команда)
	
	ОбновитьОтчет("АнализДоступностиТоваров");
	
КонецПроцедуры

&НаКлиенте
Процедура ПеречитатьОтчетАнализДоступности(Команда)

	СформироватьОтчет("АнализДоступностиТоваров");
	
КонецПроцедуры

&НаКлиенте
Процедура СформироватьОтчетТоварыНаСкладахПоСрокамГодности(Команда)
	
	ОбновитьОтчет("ТоварыНаСкладахПоСрокамГодности");
	
КонецПроцедуры

&НаКлиенте
Процедура ПеречитатьОтчетТоварыНаСкладахПоСрокамГодности(Команда)

	СформироватьОтчет("ТоварыНаСкладахПоСрокамГодности");
	
КонецПроцедуры


////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

&НаСервере
Процедура ОбновитьОтчет(ИмяОтчета)
	
	Перем ДанныеРасшифровки;
	
	Если НЕ ПравоДоступа("Использование", Метаданные.Отчеты[ИмяОтчета]) Тогда
		Возврат;
	КонецЕсли;
	
	// При обновлении отчета применяются пользовательские настройки.
	Если ИмяОтчета = "АнализДоступностиТоваров" Тогда
		АдресСхемы = АдресСхемыАнализДоступности;
		АдресДанныхРасшифровки = АдресДанныхРасшифровкиАнализДоступности;
	Иначе
		АдресСхемы = АдресСхемыТоварыНаСкладах;
		АдресДанныхРасшифровки = АдресДанныхРасшифровкиТоварыНаСкладах;
	КонецЕсли; 
		
	ОтчетОбъект = РеквизитФормыВЗначение(ИмяОтчета);
	
	АдресСхемы = ПоместитьВоВременноеХранилище(ОтчетОбъект.СхемаКомпоновкиДанных, УникальныйИдентификатор);
	
	ИсточникДоступныхНастроек = Новый ИсточникДоступныхНастроекКомпоновкиДанных(АдресСхемы);
	
	ОтчетОбъект.КомпоновщикНастроек.Инициализировать(ИсточникДоступныхНастроек);
	ОтчетОбъект.КомпоновщикНастроек.ЗагрузитьПользовательскиеНастройки(ОтчетОбъект.КомпоновщикНастроек.ПользовательскиеНастройки);
	
	// Вывести отчет.
	ТаблицаРезультатаОтчета = ТаблицаРезультатаОтчета(ИмяОтчета);
	ТаблицаРезультатаОтчета.Очистить();
	
	ОтчетОбъект.СкомпоноватьРезультат(ТаблицаРезультатаОтчета, ДанныеРасшифровки);
	
	АдресДанныхРасшифровки = ПоместитьВоВременноеХранилище(ДанныеРасшифровки, УникальныйИдентификатор);
	
КонецПроцедуры

&НаСервере
Процедура СформироватьОтчет(ИмяОтчета, ИмяВариантаНастроек = "ПоНоменклатуреКонтекст")
	
	Перем ДанныеРасшифровки;
	
	Если НЕ ПравоДоступа("Использование", Метаданные.Отчеты[ИмяОтчета]) Тогда
		Возврат;
	КонецЕсли;
	
	// Загрузить настройки отчета из схемы компоновки.
	ОтчетОбъект = РеквизитФормыВЗначение(ИмяОтчета);
	
	АдресСхемы = ПоместитьВоВременноеХранилище(ОтчетОбъект.СхемаКомпоновкиДанных, УникальныйИдентификатор);
	
	ИсточникДоступныхНастроек = Новый ИсточникДоступныхНастроекКомпоновкиДанных(АдресСхемы);
	
	ОтчетОбъект.КомпоновщикНастроек.Инициализировать(ИсточникДоступныхНастроек);
	
	НастройкиКомпоновкиДанных = ОтчетОбъект.СхемаКомпоновкиДанных.ВариантыНастроек[ИмяВариантаНастроек].Настройки;
	ОтчетОбъект.КомпоновщикНастроек.ЗагрузитьНастройки(НастройкиКомпоновкиДанных);
	
	// Добавить отбор по номенклатуре.
	ЭлементОтбора = ОтчетОбъект.КомпоновщикНастроек.Настройки.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	
	ЭлементОтбора.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Номенклатура");
	ЭлементОтбора.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
	ЭлементОтбора.ПравоеЗначение = ОтборНоменклатура;
	ЭлементОтбора.Использование = Истина;
	
	// Вывести отчет.
	ТаблицаРезультатаОтчета = ТаблицаРезультатаОтчета(ИмяОтчета);
	ТаблицаРезультатаОтчета.Очистить();
	
	ОтчетОбъект.СкомпоноватьРезультат(ТаблицаРезультатаОтчета, ДанныеРасшифровки);
		
	АдресДанныхРасшифровки = ПоместитьВоВременноеХранилище(ДанныеРасшифровки, УникальныйИдентификатор);
	
	Если ИмяОтчета = "АнализДоступностиТоваров" Тогда
		АдресСхемыАнализДоступности = АдресСхемы;
		АдресДанныхРасшифровкиАнализДоступности = АдресДанныхРасшифровки;
	Иначе
		АдресСхемыТоварыНаСкладах = АдресСхемы;
		АдресДанныхРасшифровкиТоварыНаСкладах = АдресДанныхРасшифровки;
	КонецЕсли; 
	
КонецПроцедуры

&НаСервере
Функция ТаблицаРезультатаОтчета(ИмяОтчета)
	
	Возврат ЭтаФорма["ТаблицаОтчета" + ИмяОтчета];
	
КонецФункции

&НаКлиенте
Процедура ТаблицаОтчетаАнализДоступностиТоваровОбработкаРасшифровки(Элемент, Расшифровка, СтандартнаяОбработка)
	
	Перем ВыполненноеДействие, ПараметрВыполненногоДействия;
	
	СтандартнаяОбработка = Ложь;
	
	АдресСхемы = АдресСхемыАнализДоступности;
	АдресДанныхРасшифровки = АдресДанныхРасшифровкиАнализДоступности; 
	
	ОбработкаРасшифровки = Новый ОбработкаРасшифровкиКомпоновкиДанных(
		АдресДанныхРасшифровки,
		Новый ИсточникДоступныхНастроекКомпоновкиДанных(АдресСхемы)
	);
	
	ОбработкаРасшифровки.ВыбратьДействие(
		Расшифровка, 
		ВыполненноеДействие, 
		ПараметрВыполненногоДействия
	);
	
	Если НЕ (ПараметрВыполненногоДействия = Неопределено) Тогда
		
		Если ВыполненноеДействие = ДействиеОбработкиРасшифровкиКомпоновкиДанных.ОткрытьЗначение Тогда
			
			ОткрытьЗначение(ПараметрВыполненногоДействия);
			
		Иначе
			
			ОписаниеОбработкиРасшифровки = Новый ОписаниеОбработкиРасшифровкиКомпоновкиДанных(
				АдресДанныхРасшифровки, 
				Расшифровка, 
				ПараметрВыполненногоДействия
			);
			
			ОбработатьРасшифровку("АнализДоступностиТоваров", ОписаниеОбработкиРасшифровки);
			
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ТаблицаОтчетаТоварыНаСкладахПоСрокамГодностиОбработкаРасшифровки(Элемент, Расшифровка, СтандартнаяОбработка)
	
	Перем ВыполненноеДействие, ПараметрВыполненногоДействия;
	
	СтандартнаяОбработка = Ложь;
	
	АдресСхемы = АдресСхемыТоварыНаСкладах;
	АдресДанныхРасшифровки = АдресДанныхРасшифровкиТоварыНаСкладах;
	
	ОбработкаРасшифровки = Новый ОбработкаРасшифровкиКомпоновкиДанных(
		АдресДанныхРасшифровки,
		Новый ИсточникДоступныхНастроекКомпоновкиДанных(АдресСхемы)
	);
	
	ОбработкаРасшифровки.ВыбратьДействие(
		Расшифровка, 
		ВыполненноеДействие, 
		ПараметрВыполненногоДействия
	);
	
	Если НЕ (ПараметрВыполненногоДействия = Неопределено) Тогда
		
		Если ВыполненноеДействие = ДействиеОбработкиРасшифровкиКомпоновкиДанных.ОткрытьЗначение Тогда
			
			ОткрытьЗначение(ПараметрВыполненногоДействия);
			
		Иначе
			
			ОписаниеОбработкиРасшифровки = Новый ОписаниеОбработкиРасшифровкиКомпоновкиДанных(
				АдресДанныхРасшифровки, 
				Расшифровка, 
				ПараметрВыполненногоДействия
			);
			
			ОбработатьРасшифровку("ТоварыНаСкладахПоСрокамГодности", ОписаниеОбработкиРасшифровки);
			
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ОбработатьРасшифровку(ИмяОтчета, ОписаниеОбработкиРасшифровки)
		
	ОтчетОбъект = РеквизитФормыВЗначение(ИмяОтчета);
	
	Если ИмяОтчета = "АнализДоступностиТоваров" Тогда
		АдресСхемы = АдресСхемыАнализДоступности;
		АдресДанныхРасшифровки = АдресДанныхРасшифровкиАнализДоступности;
	Иначе                   
		АдресСхемы = АдресСхемыТоварыНаСкладах;
		АдресДанныхРасшифровки = АдресДанныхРасшифровкиТоварыНаСкладах;
	КонецЕсли; 
	
	ДанныеРасшифровки = ПолучитьИзВременногоХранилища(АдресДанныхРасшифровки);
	ИсточникДоступныхНастроек = Новый ИсточникДоступныхНастроекКомпоновкиДанных(АдресСхемы);
	
	ОбработкаРасшифровки = Новый ОбработкаРасшифровкиКомпоновкиДанных(ДанныеРасшифровки, ИсточникДоступныхНастроек);
	
	РезультирующиеНастройки = ОбработкаРасшифровки.ПрименитьНастройки(
		ОписаниеОбработкиРасшифровки.Идентификатор,
		ОписаниеОбработкиРасшифровки.ПрименяемыеНастройки
	);
	
	ОтчетОбъект.КомпоновщикНастроек.Инициализировать(ИсточникДоступныхНастроек);
	Если Тип(РезультирующиеНастройки) = Тип("ПользовательскиеНастройкиКомпоновкиДанных") Тогда		
		ОтчетОбъект.КомпоновщикНастроек.ЗагрузитьПользовательскиеНастройки(РезультирующиеНастройки); 
	Иначе		
		ОтчетОбъект.КомпоновщикНастроек.ЗагрузитьНастройки(РезультирующиеНастройки);
	КонецЕсли; 
	
	// Получить таблицу для вывода отчета.
	ТаблицаРезультатаОтчета = ТаблицаРезультатаОтчета(ИмяОтчета);
	ТаблицаРезультатаОтчета.Очистить();
	
	// Вывести отчет.
	ОтчетОбъект.СкомпоноватьРезультат(ТаблицаРезультатаОтчета, ДанныеРасшифровки);
	
	АдресДанныхРасшифровки = ПоместитьВоВременноеХранилище(ДанныеРасшифровки, УникальныйИдентификатор);
	
КонецПроцедуры

