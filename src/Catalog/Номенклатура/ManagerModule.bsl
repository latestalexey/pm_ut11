#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

////////////////////////////////////////////////////////////////////////////////
// ПРОГРАММНЫЙ ИНТЕРФЕЙС

// Выполняет расчет ABC класса номенклатуры и записывает его в регистр
//
//	Параметры:
//		ДатаКлассификации - Дата - дата окончания периода, за который нужно выбрать данные для
//			классификации, если Неопределенно - используется текущая дата
//
Процедура ВыполнитьABCКлассификацию(ДатаКлассификации = Неопределено) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	ИспользоватьКлассификациюПоВаловойПрибыли = ПолучитьФункциональнуюОпцию("ИспользоватьABCXYZКлассификациюНоменклатурыПоВаловойПрибыли");
	ИспользоватьКлассификациюПоВыручке = ПолучитьФункциональнуюОпцию("ИспользоватьABCXYZКлассификациюНоменклатурыПоВыручке");
	ИспользоватьКлассификациюПоКоличеству = ПолучитьФункциональнуюОпцию("ИспользоватьABCXYZКлассификациюНоменклатурыПоКоличествуПродаж");
	УчитыватьПравилаВнутреннегоТовародвижения = Константы.УчитыватьПравилаВнутреннегоТовародвиженияПриABCКлассификацииНоменклатуры.Получить();
	
	Если НЕ ИспользоватьКлассификациюПоВаловойПрибыли И НЕ ИспользоватьКлассификациюПоВыручке И НЕ ИспользоватьКлассификациюПоКоличеству Тогда
		
		Возврат;
		
	КонецЕсли;
	
	ПериодКлассификации = Константы.ПериодABCКлассификацииНоменклатуры.Получить();
	КоличествоПериодовКлассификации = Константы.КоличествоПериодовABCКлассификацииНоменклатуры.Получить();
	
	Если ПериодКлассификации.Пустая() ИЛИ КоличествоПериодовКлассификации = 0 Тогда
		
		Возврат;
		
	КонецЕсли;
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	РегистрСведенийАналитикаУчетаНоменклатуры.Склад КАК Склад,
	|	РегистрСведенийАналитикаУчетаПоПартнерам.Организация КАК Организация,
	|	ВыручкаИСебестоимостьПродажОбороты.Подразделение КАК Подразделение,
	|	РегистрСведенийАналитикаУчетаНоменклатуры.Номенклатура КАК Номенклатура,
	|	РегистрСведенийАналитикаУчетаНоменклатуры.Характеристика КАК Характеристика,
	|	ВыручкаИСебестоимостьПродажОбороты.СуммаВыручкиОборот - ВыручкаИСебестоимостьПродажОбороты.СебестоимостьОборот - ВыручкаИСебестоимостьПродажОбороты.СуммаДополнительныхРасходовОборот КАК ВаловаяПрибыль,
	|	ВыручкаИСебестоимостьПродажОбороты.СуммаВыручкиОборот КАК Выручка,
	|	ВыручкаИСебестоимостьПродажОбороты.КоличествоОборот КАК Количество
	|ПОМЕСТИТЬ ИсточникДанных
	|ИЗ
	|	РегистрНакопления.ВыручкаИСебестоимостьПродаж.Обороты(&НачалоПериода, &ОкончаниеПериода, , ) КАК ВыручкаИСебестоимостьПродажОбороты
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаНоменклатуры КАК РегистрСведенийАналитикаУчетаНоменклатуры
	|		ПО ВыручкаИСебестоимостьПродажОбороты.АналитикаУчетаНоменклатуры = РегистрСведенийАналитикаУчетаНоменклатуры.КлючАналитики
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаПоПартнерам КАК РегистрСведенийАналитикаУчетаПоПартнерам
	|		ПО ВыручкаИСебестоимостьПродажОбороты.АналитикаУчетаПоПартнерам = РегистрСведенийАналитикаУчетаПоПартнерам.КлючАналитики
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	0 КАК РазделительКлассификации,
	|	НЕОПРЕДЕЛЕНО КАК РазделКлассификации,
	|	ИсточникДанных.Номенклатура КАК Номенклатура,
	|	ИсточникДанных.Характеристика КАК Характеристика,
	|	ВЫБОР
	|		КОГДА СУММА(ИсточникДанных.ВаловаяПрибыль) > 0
	|			ТОГДА СУММА(ИсточникДанных.ВаловаяПрибыль)
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК ВаловаяПрибыль,
	|	ВЫБОР
	|		КОГДА СУММА(ИсточникДанных.Выручка) > 0
	|			ТОГДА СУММА(ИсточникДанных.Выручка)
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК Выручка,
	|	ВЫБОР
	|		КОГДА СУММА(ИсточникДанных.Количество) > 0
	|			ТОГДА СУММА(ИсточникДанных.Количество)
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК Количество
	|ИЗ
	|	ИсточникДанных КАК ИсточникДанных
	|
	|СГРУППИРОВАТЬ ПО
	|	ИсточникДанных.Номенклатура,
	|	ИсточникДанных.Характеристика
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	1,
	|	ИсточникДанных.Склад,
	|	ИсточникДанных.Номенклатура,
	|	ИсточникДанных.Характеристика,
	|	ВЫБОР
	|		КОГДА СУММА(ИсточникДанных.ВаловаяПрибыль) > 0
	|			ТОГДА СУММА(ИсточникДанных.ВаловаяПрибыль)
	|		ИНАЧЕ 0
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА СУММА(ИсточникДанных.Выручка) > 0
	|			ТОГДА СУММА(ИсточникДанных.Выручка)
	|		ИНАЧЕ 0
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА СУММА(ИсточникДанных.Количество) > 0
	|			ТОГДА СУММА(ИсточникДанных.Количество)
	|		ИНАЧЕ 0
	|	КОНЕЦ
	|ИЗ
	|	(ВЫБРАТЬ
	|		ИсточникДанных.Склад КАК Склад,
	|		ИсточникДанных.Номенклатура КАК Номенклатура,
	|		ИсточникДанных.Характеристика КАК Характеристика,
	|		ИсточникДанных.ВаловаяПрибыль КАК ВаловаяПрибыль,
	|		ИсточникДанных.Выручка КАК Выручка,
	|		ИсточникДанных.Количество КАК Количество
	|	ИЗ
	|		ИсточникДанных КАК ИсточникДанных
	|	ГДЕ
	|		ТИПЗНАЧЕНИЯ(ИсточникДанных.Склад) = ТИП(Справочник.Склады)
	|		И ИсточникДанных.Склад <> ЗНАЧЕНИЕ(Справочник.Склады.ПустаяСсылка)
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ЕСТЬNULL(ВариантыОбеспеченияТоварамиХарактеристика.СпособОбеспеченияПотребностей.ИсточникОбеспеченияПотребностей, ЕСТЬNULL(ВариантыОбеспеченияТоварамиНоменклатура.СпособОбеспеченияПотребностей.ИсточникОбеспеченияПотребностей, ЕСТЬNULL(ВариантыОбеспеченияТоварамиСклад.СпособОбеспеченияПотребностей.ИсточникОбеспеченияПотребностей, ЗНАЧЕНИЕ(Справочник.Склады.ПустаяСсылка)))),
	|		ИсточникДанных.Номенклатура,
	|		ИсточникДанных.Характеристика,
	|		ИсточникДанных.ВаловаяПрибыль,
	|		ИсточникДанных.Выручка,
	|		ИсточникДанных.Количество
	|	ИЗ
	|		ИсточникДанных КАК ИсточникДанных
	|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ВариантыОбеспеченияТоварами КАК ВариантыОбеспеченияТоварамиХарактеристика
	|			ПО ИсточникДанных.Склад = ВариантыОбеспеченияТоварамиХарактеристика.Склад
	|				И ИсточникДанных.Номенклатура = ВариантыОбеспеченияТоварамиХарактеристика.Номенклатура
	|				И ИсточникДанных.Характеристика = ВариантыОбеспеченияТоварамиХарактеристика.Характеристика
	|				И (ВариантыОбеспеченияТоварамиХарактеристика.РеквизитДопУпорядочивания = 1)
	|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ВариантыОбеспеченияТоварами КАК ВариантыОбеспеченияТоварамиНоменклатура
	|			ПО ИсточникДанных.Склад = ВариантыОбеспеченияТоварамиНоменклатура.Склад
	|				И ИсточникДанных.Номенклатура = ВариантыОбеспеченияТоварамиНоменклатура.Номенклатура
	|				И (ВариантыОбеспеченияТоварамиНоменклатура.Характеристика = ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка))
	|				И (ВариантыОбеспеченияТоварамиХарактеристика.СпособОбеспеченияПотребностей ЕСТЬ NULL )
	|				И (ВариантыОбеспеченияТоварамиНоменклатура.РеквизитДопУпорядочивания = 1)
	|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ВариантыОбеспеченияТоварами КАК ВариантыОбеспеченияТоварамиСклад
	|			ПО ИсточникДанных.Склад = ВариантыОбеспеченияТоварамиСклад.Склад
	|				И (ВариантыОбеспеченияТоварамиСклад.Номенклатура = ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка))
	|				И (ВариантыОбеспеченияТоварамиСклад.Характеристика = ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка))
	|				И (ВариантыОбеспеченияТоварамиХарактеристика.СпособОбеспеченияПотребностей ЕСТЬ NULL )
	|				И (ВариантыОбеспеченияТоварамиНоменклатура.СпособОбеспеченияПотребностей ЕСТЬ NULL )
	|				И (ВариантыОбеспеченияТоварамиСклад.РеквизитДопУпорядочивания = 1)
	|	ГДЕ
	|		&УчитыватьПравилаВнутреннегоТовародвижения
	|		И ТИПЗНАЧЕНИЯ(ИсточникДанных.Склад) = ТИП(Справочник.Склады)
	|		И ИсточникДанных.Склад <> ЗНАЧЕНИЕ(Справочник.Склады.ПустаяСсылка)
	|		И ЕСТЬNULL(ВариантыОбеспеченияТоварамиХарактеристика.СпособОбеспеченияПотребностей.ТипОбеспечения, ЕСТЬNULL(ВариантыОбеспеченияТоварамиНоменклатура.СпособОбеспеченияПотребностей.ТипОбеспечения, ЕСТЬNULL(ВариантыОбеспеченияТоварамиСклад.СпособОбеспеченияПотребностей.ТипОбеспечения, ЗНАЧЕНИЕ(Перечисление.ТипыОбеспечения.Покупка)))) = ЗНАЧЕНИЕ(Перечисление.ТипыОбеспечения.Перемещение)
	|		И НЕ ЕСТЬNULL(ВариантыОбеспеченияТоварамиХарактеристика.СпособОбеспеченияПотребностей.ИсточникОбеспеченияПотребностей, ЕСТЬNULL(ВариантыОбеспеченияТоварамиНоменклатура.СпособОбеспеченияПотребностей.ИсточникОбеспеченияПотребностей, ЕСТЬNULL(ВариантыОбеспеченияТоварамиСклад.СпособОбеспеченияПотребностей.ИсточникОбеспеченияПотребностей, ЗНАЧЕНИЕ(Справочник.Склады.ПустаяСсылка)))) В (НЕОПРЕДЕЛЕНО, ЗНАЧЕНИЕ(Справочник.Склады.ПустаяСсылка), ЗНАЧЕНИЕ(Справочник.Партнеры.ПустаяСсылка))) КАК ИсточникДанных
	|
	|СГРУППИРОВАТЬ ПО
	|	ИсточникДанных.Склад,
	|	ИсточникДанных.Номенклатура,
	|	ИсточникДанных.Характеристика
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	2,
	|	ИсточникДанных.Организация,
	|	ИсточникДанных.Номенклатура,
	|	ИсточникДанных.Характеристика,
	|	ВЫБОР
	|		КОГДА СУММА(ИсточникДанных.ВаловаяПрибыль) > 0
	|			ТОГДА СУММА(ИсточникДанных.ВаловаяПрибыль)
	|		ИНАЧЕ 0
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА СУММА(ИсточникДанных.Выручка) > 0
	|			ТОГДА СУММА(ИсточникДанных.Выручка)
	|		ИНАЧЕ 0
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА СУММА(ИсточникДанных.Количество) > 0
	|			ТОГДА СУММА(ИсточникДанных.Количество)
	|		ИНАЧЕ 0
	|	КОНЕЦ
	|ИЗ
	|	ИсточникДанных КАК ИсточникДанных
	|
	|СГРУППИРОВАТЬ ПО
	|	ИсточникДанных.Организация,
	|	ИсточникДанных.Номенклатура,
	|	ИсточникДанных.Характеристика
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	3,
	|	ИсточникДанных.Подразделение,
	|	ИсточникДанных.Номенклатура,
	|	ИсточникДанных.Характеристика,
	|	ВЫБОР
	|		КОГДА СУММА(ИсточникДанных.ВаловаяПрибыль) > 0
	|			ТОГДА СУММА(ИсточникДанных.ВаловаяПрибыль)
	|		ИНАЧЕ 0
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА СУММА(ИсточникДанных.Выручка) > 0
	|			ТОГДА СУММА(ИсточникДанных.Выручка)
	|		ИНАЧЕ 0
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА СУММА(ИсточникДанных.Количество) > 0
	|			ТОГДА СУММА(ИсточникДанных.Количество)
	|		ИНАЧЕ 0
	|	КОНЕЦ
	|ИЗ
	|	ИсточникДанных КАК ИсточникДанных
	|
	|СГРУППИРОВАТЬ ПО
	|	ИсточникДанных.Подразделение,
	|	ИсточникДанных.Номенклатура,
	|	ИсточникДанных.Характеристика");
	
	Период = ОбщегоНазначенияУТКлиентСервер.РасширенныйПериод(?(ДатаКлассификации = Неопределено, ТекущаяДата(), ДатаКлассификации), ПериодКлассификации, -КоличествоПериодовКлассификации);
	Запрос.УстановитьПараметр("НачалоПериода", Период.ДатаНачала);
	Запрос.УстановитьПараметр("ОкончаниеПериода", Период.ДатаОкончания);
	Запрос.УстановитьПараметр("УчитыватьПравилаВнутреннегоТовародвижения", УчитыватьПравилаВнутреннегоТовародвижения);

	РезультатКлассификации = Запрос.Выполнить().Выгрузить();
	
	Если ИспользоватьКлассификациюПоВаловойПрибыли Тогда
		
		Классификация.ВыполнитьABCКлассификацию(РезультатКлассификации, "ВаловаяПрибыль");
		ОбновитьДанныеКлассификации(РезультатКлассификации, Перечисления.ТипыКлассификации.ABC, Перечисления.ТипыПараметровКлассификации.ВаловаяПрибыль, Период.ДатаОкончания, Перечисления.ABCКлассификация.НеКлассифицирован);
		
	КонецЕсли;
	
	Если ИспользоватьКлассификациюПоВыручке Тогда
		
		Классификация.ВыполнитьABCКлассификацию(РезультатКлассификации, "Выручка");
		ОбновитьДанныеКлассификации(РезультатКлассификации, Перечисления.ТипыКлассификации.ABC, Перечисления.ТипыПараметровКлассификации.Выручка, Период.ДатаОкончания, Перечисления.ABCКлассификация.НеКлассифицирован);
	
	КонецЕсли;
	
	Если ИспользоватьКлассификациюПоКоличеству Тогда

		Классификация.ВыполнитьABCКлассификацию(РезультатКлассификации, "Количество");
		ОбновитьДанныеКлассификации(РезультатКлассификации, Перечисления.ТипыКлассификации.ABC, Перечисления.ТипыПараметровКлассификации.Количество, Период.ДатаОкончания, Перечисления.ABCКлассификация.НеКлассифицирован);
		
	КонецЕсли;
	
КонецПроцедуры

// Выполняет расчет XYZ класса номенклатуры и записывает его в регистр
//
//	Параметры:
//		ДатаКлассификации - Дата - дата окончания периода, за который нужно выбрать данные для
//			классификации, если Неопределенно - используется текущая дата
//
Процедура ВыполнитьXYZКлассификацию(ДатаКлассификации = Неопределено) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	ИспользоватьКлассификациюПоВаловойПрибыли = ПолучитьФункциональнуюОпцию("ИспользоватьABCXYZКлассификациюНоменклатурыПоВаловойПрибыли");
	ИспользоватьКлассификациюПоВыручке = ПолучитьФункциональнуюОпцию("ИспользоватьABCXYZКлассификациюНоменклатурыПоВыручке");
	ИспользоватьКлассификациюПоКоличеству = ПолучитьФункциональнуюОпцию("ИспользоватьABCXYZКлассификациюНоменклатурыПоКоличествуПродаж");
	УчитыватьПравилаВнутреннегоТовародвижения = Константы.УчитыватьПравилаВнутреннегоТовародвиженияПриXYZКлассификацииНоменклатуры.Получить();
	
	Если НЕ ИспользоватьКлассификациюПоВаловойПрибыли И НЕ ИспользоватьКлассификациюПоВыручке И НЕ ИспользоватьКлассификациюПоКоличеству Тогда
		
		Возврат;
		
	КонецЕсли;
	
	ПериодКлассификации = Константы.ПериодXYZКлассификацииНоменклатуры.Получить();
	КоличествоПериодовКлассификации = Константы.КоличествоПериодовXYZКлассификацииНоменклатуры.Получить();
	ПодпериодКлассификации = Константы.ПодпериодXYZКлассификацииНоменклатуры.Получить();
	
	Если ПериодКлассификации.Пустая() ИЛИ КоличествоПериодовКлассификации = 0 ИЛИ ПодпериодКлассификации.Пустая() Тогда
		
		Возврат;
		
	КонецЕсли;
	
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	РегистрСведенийАналитикаУчетаНоменклатуры.Склад КАК Склад,
	|	РегистрСведенийАналитикаУчетаПоПартнерам.Организация КАК Организация,
	|	ВыручкаИСебестоимостьПродажОбороты.Подразделение КАК Подразделение,
	|	РегистрСведенийАналитикаУчетаНоменклатуры.Номенклатура КАК Номенклатура,
	|	РегистрСведенийАналитикаУчетаНоменклатуры.Характеристика КАК Характеристика,
	|	ВыручкаИСебестоимостьПродажОбороты.Период КАК Период,
	|	ВыручкаИСебестоимостьПродажОбороты.СуммаВыручкиОборот - ВыручкаИСебестоимостьПродажОбороты.СебестоимостьОборот - ВыручкаИСебестоимостьПродажОбороты.СуммаДополнительныхРасходовОборот КАК ВаловаяПрибыль,
	|	ВыручкаИСебестоимостьПродажОбороты.СуммаВыручкиОборот КАК Выручка,
	|	ВыручкаИСебестоимостьПродажОбороты.КоличествоОборот КАК Количество
	|ПОМЕСТИТЬ ИсточникДанных
	|ИЗ
	|	РегистрНакопления.ВыручкаИСебестоимостьПродаж.Обороты(НАЧАЛОПЕРИОДА(&НачалоПериода, " + Строка(ПодпериодКлассификации) + "), КОНЕЦПЕРИОДА(&ОкончаниеПериода, " + Строка(ПодпериодКлассификации) + "), " + Строка(ПодпериодКлассификации) + ", ) КАК ВыручкаИСебестоимостьПродажОбороты
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаНоменклатуры КАК РегистрСведенийАналитикаУчетаНоменклатуры
	|		ПО ВыручкаИСебестоимостьПродажОбороты.АналитикаУчетаНоменклатуры = РегистрСведенийАналитикаУчетаНоменклатуры.КлючАналитики
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаПоПартнерам КАК РегистрСведенийАналитикаУчетаПоПартнерам
	|		ПО ВыручкаИСебестоимостьПродажОбороты.АналитикаУчетаПоПартнерам = РегистрСведенийАналитикаУчетаПоПартнерам.КлючАналитики
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	0 КАК РазделительКлассификации,
	|	НЕОПРЕДЕЛЕНО КАК РазделКлассификации,
	|	ИсточникДанных.Номенклатура КАК Номенклатура,
	|	ИсточникДанных.Характеристика КАК Характеристика,
	|	ИсточникДанных.Период КАК Период,
	|	ИсточникДанных.ВаловаяПрибыль КАК ВаловаяПрибыль,
	|	ИсточникДанных.Выручка КАК Выручка,
	|	ИсточникДанных.Количество КАК Количество
	|ИЗ
	|	ИсточникДанных КАК ИсточникДанных
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	1,
	|	ИсточникДанных.Склад,
	|	ИсточникДанных.Номенклатура,
	|	ИсточникДанных.Характеристика,
	|	ИсточникДанных.Период,
	|	ИсточникДанных.ВаловаяПрибыль,
	|	ИсточникДанных.Выручка,
	|	ИсточникДанных.Количество
	|ИЗ
	|	ИсточникДанных КАК ИсточникДанных
	|ГДЕ
	|	ТИПЗНАЧЕНИЯ(ИсточникДанных.Склад) = ТИП(Справочник.Склады)
	|	И ИсточникДанных.Склад <> ЗНАЧЕНИЕ(Справочник.Склады.ПустаяСсылка)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	1,
	|	ЕСТЬNULL(ВариантыОбеспеченияТоварамиХарактеристика.СпособОбеспеченияПотребностей.ИсточникОбеспеченияПотребностей, ЕСТЬNULL(ВариантыОбеспеченияТоварамиНоменклатура.СпособОбеспеченияПотребностей.ИсточникОбеспеченияПотребностей, ЕСТЬNULL(ВариантыОбеспеченияТоварамиСклад.СпособОбеспеченияПотребностей.ИсточникОбеспеченияПотребностей, ЗНАЧЕНИЕ(Справочник.Склады.ПустаяСсылка)))),
	|	ИсточникДанных.Номенклатура,
	|	ИсточникДанных.Характеристика,
	|	ИсточникДанных.Период,
	|	ИсточникДанных.ВаловаяПрибыль,
	|	ИсточникДанных.Выручка,
	|	ИсточникДанных.Количество
	|ИЗ
	|	ИсточникДанных КАК ИсточникДанных
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ВариантыОбеспеченияТоварами КАК ВариантыОбеспеченияТоварамиХарактеристика
	|		ПО ИсточникДанных.Склад = ВариантыОбеспеченияТоварамиХарактеристика.Склад
	|			И ИсточникДанных.Номенклатура = ВариантыОбеспеченияТоварамиХарактеристика.Номенклатура
	|			И ИсточникДанных.Характеристика = ВариантыОбеспеченияТоварамиХарактеристика.Характеристика
	|			И (ВариантыОбеспеченияТоварамиХарактеристика.РеквизитДопУпорядочивания = 1)
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ВариантыОбеспеченияТоварами КАК ВариантыОбеспеченияТоварамиНоменклатура
	|		ПО ИсточникДанных.Склад = ВариантыОбеспеченияТоварамиНоменклатура.Склад
	|			И ИсточникДанных.Номенклатура = ВариантыОбеспеченияТоварамиНоменклатура.Номенклатура
	|			И (ВариантыОбеспеченияТоварамиНоменклатура.Характеристика = ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка))
	|			И (ВариантыОбеспеченияТоварамиХарактеристика.СпособОбеспеченияПотребностей ЕСТЬ NULL )
	|			И (ВариантыОбеспеченияТоварамиНоменклатура.РеквизитДопУпорядочивания = 1)
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ВариантыОбеспеченияТоварами КАК ВариантыОбеспеченияТоварамиСклад
	|		ПО ИсточникДанных.Склад = ВариантыОбеспеченияТоварамиСклад.Склад
	|			И (ВариантыОбеспеченияТоварамиСклад.Номенклатура = ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка))
	|			И (ВариантыОбеспеченияТоварамиСклад.Характеристика = ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка))
	|			И (ВариантыОбеспеченияТоварамиХарактеристика.СпособОбеспеченияПотребностей ЕСТЬ NULL )
	|			И (ВариантыОбеспеченияТоварамиНоменклатура.СпособОбеспеченияПотребностей ЕСТЬ NULL )
	|			И (ВариантыОбеспеченияТоварамиСклад.РеквизитДопУпорядочивания = 1)
	|ГДЕ
	|	&УчитыватьПравилаВнутреннегоТовародвижения
	|	И ТИПЗНАЧЕНИЯ(ИсточникДанных.Склад) = ТИП(Справочник.Склады)
	|	И ИсточникДанных.Склад <> ЗНАЧЕНИЕ(Справочник.Склады.ПустаяСсылка)
	|	И ЕСТЬNULL(ВариантыОбеспеченияТоварамиХарактеристика.СпособОбеспеченияПотребностей.ТипОбеспечения, ЕСТЬNULL(ВариантыОбеспеченияТоварамиНоменклатура.СпособОбеспеченияПотребностей.ТипОбеспечения, ЕСТЬNULL(ВариантыОбеспеченияТоварамиСклад.СпособОбеспеченияПотребностей.ТипОбеспечения, ЗНАЧЕНИЕ(Перечисление.ТипыОбеспечения.Покупка)))) = ЗНАЧЕНИЕ(Перечисление.ТипыОбеспечения.Перемещение)
	|	И НЕ ЕСТЬNULL(ВариантыОбеспеченияТоварамиХарактеристика.СпособОбеспеченияПотребностей.ИсточникОбеспеченияПотребностей, ЕСТЬNULL(ВариантыОбеспеченияТоварамиНоменклатура.СпособОбеспеченияПотребностей.ИсточникОбеспеченияПотребностей, ЕСТЬNULL(ВариантыОбеспеченияТоварамиСклад.СпособОбеспеченияПотребностей.ИсточникОбеспеченияПотребностей, ЗНАЧЕНИЕ(Справочник.Склады.ПустаяСсылка)))) В (НЕОПРЕДЕЛЕНО, ЗНАЧЕНИЕ(Справочник.Склады.ПустаяСсылка), ЗНАЧЕНИЕ(Справочник.Партнеры.ПустаяСсылка))
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	2,
	|	ИсточникДанных.Организация,
	|	ИсточникДанных.Номенклатура,
	|	ИсточникДанных.Характеристика,
	|	ИсточникДанных.Период,
	|	ИсточникДанных.ВаловаяПрибыль,
	|	ИсточникДанных.Выручка,
	|	ИсточникДанных.Количество
	|ИЗ
	|	ИсточникДанных КАК ИсточникДанных
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	3,
	|	ИсточникДанных.Подразделение,
	|	ИсточникДанных.Номенклатура,
	|	ИсточникДанных.Характеристика,
	|	ИсточникДанных.Период,
	|	ИсточникДанных.ВаловаяПрибыль,
	|	ИсточникДанных.Выручка,
	|	ИсточникДанных.Количество
	|ИЗ
	|	ИсточникДанных КАК ИсточникДанных
	|
	|УПОРЯДОЧИТЬ ПО
	|	РазделительКлассификации
	|ИТОГИ
	|	МАКСИМУМ(РазделительКлассификации),
	|	СУММА(ВаловаяПрибыль),
	|	СУММА(Выручка),
	|	СУММА(Количество)
	|ПО
	|	РазделКлассификации,
	|	Номенклатура,
	|	Характеристика,
	|	Период ПЕРИОДАМИ(" + Строка(ПодпериодКлассификации) + ", НАЧАЛОПЕРИОДА(&НачалоПериода, " + Строка(ПодпериодКлассификации) + "), КОНЕЦПЕРИОДА(&ОкончаниеПериода, " + Строка(ПодпериодКлассификации) + "))");
	
	Период = ОбщегоНазначенияУТКлиентСервер.РасширенныйПериод(?(ДатаКлассификации = Неопределено, ТекущаяДата(), ДатаКлассификации), ПериодКлассификации, - КоличествоПериодовКлассификации);
	Запрос.УстановитьПараметр("НачалоПериода", Период.ДатаНачала);
	Запрос.УстановитьПараметр("ОкончаниеПериода", Период.ДатаОкончания);
	Запрос.УстановитьПараметр("УчитыватьПравилаВнутреннегоТовародвижения", УчитыватьПравилаВнутреннегоТовародвижения);

	ИсточникДанных = Новый Структура("ИсточникДанных", Запрос.Выполнить());
	
	Если ИспользоватьКлассификациюПоВаловойПрибыли Тогда
		
		РезультатКлассификации = Классификация.ВыполнитьXYZКлассификацию(ИсточникДанных, "ВаловаяПрибыль", "РазделКлассификации, Номенклатура, Характеристика");
		ОбновитьДанныеКлассификации(РезультатКлассификации, Перечисления.ТипыКлассификации.XYZ, Перечисления.ТипыПараметровКлассификации.ВаловаяПрибыль, Период.ДатаОкончания, Перечисления.XYZКлассификация.НеКлассифицирован);
		
	КонецЕсли;
	
	Если ИспользоватьКлассификациюПоВыручке Тогда
	
		РезультатКлассификации = Классификация.ВыполнитьXYZКлассификацию(ИсточникДанных, "Выручка", "РазделКлассификации, Номенклатура, Характеристика");
		ОбновитьДанныеКлассификации(РезультатКлассификации, Перечисления.ТипыКлассификации.XYZ, Перечисления.ТипыПараметровКлассификации.Выручка, Период.ДатаОкончания, Перечисления.XYZКлассификация.НеКлассифицирован);
		
	КонецЕсли;
	
	Если ИспользоватьКлассификациюПоКоличеству Тогда
		
		РезультатКлассификации = Классификация.ВыполнитьXYZКлассификацию(ИсточникДанных, "Количество", "РазделКлассификации, Номенклатура, Характеристика");
		ОбновитьДанныеКлассификации(РезультатКлассификации, Перечисления.ТипыКлассификации.XYZ, Перечисления.ТипыПараметровКлассификации.Количество, Период.ДатаОкончания, Перечисления.XYZКлассификация.НеКлассифицирован);

	КонецЕсли;

КонецПроцедуры

// Выполняет расчет товарных ограничений и записывает их в регистр
//
//	Параметры:
//		ДатаКлассификации - Дата - дата окончания периода, за который нужно выбрать данные для
//			анализа, если Неопределенно - используется текущая дата
//
Процедура ВыполнитьРасчетТоварныхОграничений(ДатаКлассификации = Неопределено) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	ПериодКлассификации = Константы.ПериодРасчетаТоварныхОграничений.Получить();
	КоличествоПериодовКлассификации = Константы.КоличествоПериодовРасчетаТоварныхОграничений.Получить();
	ВыполнятьРасчетТоварныхОграниченийПоКоличествуПродаж = Константы.ВыполнятьРасчетТоварныхОграниченийПоКоличествуПродаж.Получить();
	УчитыватьПравилаВнутреннегоТовародвижения = Константы.УчитыватьПравилаВнутреннегоТовародвиженияПриРасчетеТоварныхОграничений.Получить();
	
	Если ПериодКлассификации.Пустая() ИЛИ КоличествоПериодовКлассификации = 0 Тогда
		
		Возврат;
		
	КонецЕсли;
	
	Если ВыполнятьРасчетТоварныхОграниченийПоКоличествуПродаж Тогда
		
		Запрос = Новый Запрос(
		"ВЫБРАТЬ
		|	РегистрСведенийАналитикаУчетаНоменклатуры.Склад КАК Склад,
		|	РегистрСведенийАналитикаУчетаНоменклатуры.Номенклатура КАК Номенклатура,
		|	РегистрСведенийАналитикаУчетаНоменклатуры.Характеристика КАК Характеристика,
		|	ВыручкаИСебестоимостьПродажОбороты.Период КАК Период,
		|	ВыручкаИСебестоимостьПродажОбороты.КоличествоОборот КАК Количество
		|ПОМЕСТИТЬ Продажи
		|ИЗ
		|	РегистрНакопления.ВыручкаИСебестоимостьПродаж.Обороты(&НачалоПериода, &ОкончаниеПериода, День, ) КАК ВыручкаИСебестоимостьПродажОбороты
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаНоменклатуры КАК РегистрСведенийАналитикаУчетаНоменклатуры
		|		ПО ВыручкаИСебестоимостьПродажОбороты.АналитикаУчетаНоменклатуры = РегистрСведенийАналитикаУчетаНоменклатуры.КлючАналитики
		|ГДЕ
		|	ТИПЗНАЧЕНИЯ(РегистрСведенийАналитикаУчетаНоменклатуры.Склад) = ТИП(Справочник.Склады)
		|	И РегистрСведенийАналитикаУчетаНоменклатуры.Склад <> ЗНАЧЕНИЕ(Справочник.Склады.ПустаяСсылка)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ТоварыНаСкладахОстаткиИОбороты.Склад КАК Склад,
		|	ТоварыНаСкладахОстаткиИОбороты.Номенклатура КАК Номенклатура,
		|	ТоварыНаСкладахОстаткиИОбороты.Характеристика КАК Характеристика,
		|	ТоварыНаСкладахОстаткиИОбороты.Период КАК Период,
		|	ТоварыНаСкладахОстаткиИОбороты.ВНаличииНачальныйОстаток КАК КоличествоНачальныйОстаток,
		|	ТоварыНаСкладахОстаткиИОбороты.ВНаличииКонечныйОстаток КАК КоличествоКонечныйОстаток
		|ПОМЕСТИТЬ Остатки
		|ИЗ
		|	РегистрНакопления.ТоварыНаСкладах.ОстаткиИОбороты(&НачалоПериода, &ОкончаниеПериода, День, , ) КАК ТоварыНаСкладахОстаткиИОбороты
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ИсточникДанных.Склад КАК Склад,
		|	ИсточникДанных.Номенклатура КАК Номенклатура,
		|	ИсточникДанных.Характеристика КАК Характеристика,
		|	ИсточникДанных.Период КАК Период,
		|	СУММА(ИсточникДанных.Количество) КАК Количество,
		|	СУММА(ИсточникДанных.КоличествоНачальныйОстаток) КАК КоличествоНачальныйОстаток,
		|	СУММА(ИсточникДанных.КоличествоКонечныйОстаток) КАК КоличествоКонечныйОстаток
		|ПОМЕСТИТЬ ИсточникДанных
		|ИЗ
		|	(ВЫБРАТЬ
		|		Продажи.Склад КАК Склад,
		|		Продажи.Номенклатура КАК Номенклатура,
		|		Продажи.Характеристика КАК Характеристика,
		|		Продажи.Период КАК Период,
		|		Продажи.Количество КАК Количество,
		|		0 КАК КоличествоНачальныйОстаток,
		|		0 КАК КоличествоКонечныйОстаток
		|	ИЗ
		|		Продажи КАК Продажи
		|	
		|	ОБЪЕДИНИТЬ ВСЕ
		|	
		|	ВЫБРАТЬ
		|		Остатки.Склад,
		|		Остатки.Номенклатура,
		|		Остатки.Характеристика,
		|		Остатки.Период,
		|		0,
		|		Остатки.КоличествоНачальныйОстаток,
		|		Остатки.КоличествоКонечныйОстаток
		|	ИЗ
		|		Остатки КАК Остатки
		|	
		|	ОБЪЕДИНИТЬ ВСЕ
		|	
		|	ВЫБРАТЬ
		|		ЕСТЬNULL(ВариантыОбеспеченияТоварамиХарактеристика.СпособОбеспеченияПотребностей.ИсточникОбеспеченияПотребностей, ЕСТЬNULL(ВариантыОбеспеченияТоварамиНоменклатура.СпособОбеспеченияПотребностей.ИсточникОбеспеченияПотребностей, ЕСТЬNULL(ВариантыОбеспеченияТоварамиСклад.СпособОбеспеченияПотребностей.ИсточникОбеспеченияПотребностей, ЗНАЧЕНИЕ(Справочник.Склады.ПустаяСсылка)))),
		|		Продажи.Номенклатура,
		|		Продажи.Характеристика,
		|		Продажи.Период,
		|		Продажи.Количество,
		|		0,
		|		0
		|	ИЗ
		|		Продажи КАК Продажи
		|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ВариантыОбеспеченияТоварами КАК ВариантыОбеспеченияТоварамиХарактеристика
		|			ПО Продажи.Склад = ВариантыОбеспеченияТоварамиХарактеристика.Склад
		|				И Продажи.Номенклатура = ВариантыОбеспеченияТоварамиХарактеристика.Номенклатура
		|				И Продажи.Характеристика = ВариантыОбеспеченияТоварамиХарактеристика.Характеристика
		|				И (ВариантыОбеспеченияТоварамиХарактеристика.РеквизитДопУпорядочивания = 1)
		|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ВариантыОбеспеченияТоварами КАК ВариантыОбеспеченияТоварамиНоменклатура
		|			ПО Продажи.Склад = ВариантыОбеспеченияТоварамиНоменклатура.Склад
		|				И Продажи.Номенклатура = ВариантыОбеспеченияТоварамиНоменклатура.Номенклатура
		|				И (ВариантыОбеспеченияТоварамиНоменклатура.Характеристика = ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка))
		|				И (ВариантыОбеспеченияТоварамиХарактеристика.СпособОбеспеченияПотребностей ЕСТЬ NULL )
		|				И (ВариантыОбеспеченияТоварамиНоменклатура.РеквизитДопУпорядочивания = 1)
		|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ВариантыОбеспеченияТоварами КАК ВариантыОбеспеченияТоварамиСклад
		|			ПО Продажи.Склад = ВариантыОбеспеченияТоварамиСклад.Склад
		|				И (ВариантыОбеспеченияТоварамиСклад.Номенклатура = ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка))
		|				И (ВариантыОбеспеченияТоварамиСклад.Характеристика = ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка))
		|				И (ВариантыОбеспеченияТоварамиХарактеристика.СпособОбеспеченияПотребностей ЕСТЬ NULL )
		|				И (ВариантыОбеспеченияТоварамиНоменклатура.СпособОбеспеченияПотребностей ЕСТЬ NULL )
		|				И (ВариантыОбеспеченияТоварамиСклад.РеквизитДопУпорядочивания = 1)
		|	ГДЕ
		|		&УчитыватьПравилаВнутреннегоТовародвижения
		|		И ЕСТЬNULL(ВариантыОбеспеченияТоварамиХарактеристика.СпособОбеспеченияПотребностей.ТипОбеспечения, ЕСТЬNULL(ВариантыОбеспеченияТоварамиНоменклатура.СпособОбеспеченияПотребностей.ТипОбеспечения, ЕСТЬNULL(ВариантыОбеспеченияТоварамиСклад.СпособОбеспеченияПотребностей.ТипОбеспечения, ЗНАЧЕНИЕ(Перечисление.ТипыОбеспечения.Покупка)))) = ЗНАЧЕНИЕ(Перечисление.ТипыОбеспечения.Перемещение)
		|		И НЕ ЕСТЬNULL(ВариантыОбеспеченияТоварамиХарактеристика.СпособОбеспеченияПотребностей.ИсточникОбеспеченияПотребностей, ЕСТЬNULL(ВариантыОбеспеченияТоварамиНоменклатура.СпособОбеспеченияПотребностей.ИсточникОбеспеченияПотребностей, ЕСТЬNULL(ВариантыОбеспеченияТоварамиСклад.СпособОбеспеченияПотребностей.ИсточникОбеспеченияПотребностей, ЗНАЧЕНИЕ(Справочник.Склады.ПустаяСсылка)))) В (НЕОПРЕДЕЛЕНО, ЗНАЧЕНИЕ(Справочник.Склады.ПустаяСсылка), ЗНАЧЕНИЕ(Справочник.Партнеры.ПустаяСсылка))
		|	
		|	ОБЪЕДИНИТЬ ВСЕ
		|	
		|	ВЫБРАТЬ
		|		ЕСТЬNULL(ВариантыОбеспеченияТоварамиХарактеристика.СпособОбеспеченияПотребностей.ИсточникОбеспеченияПотребностей, ЕСТЬNULL(ВариантыОбеспеченияТоварамиНоменклатура.СпособОбеспеченияПотребностей.ИсточникОбеспеченияПотребностей, ЕСТЬNULL(ВариантыОбеспеченияТоварамиСклад.СпособОбеспеченияПотребностей.ИсточникОбеспеченияПотребностей, ЗНАЧЕНИЕ(Справочник.Склады.ПустаяСсылка)))),
		|		Остатки.Номенклатура,
		|		Остатки.Характеристика,
		|		Остатки.Период,
		|		0,
		|		Остатки.КоличествоНачальныйОстаток,
		|		Остатки.КоличествоКонечныйОстаток
		|	ИЗ
		|		Остатки КАК Остатки
		|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ВариантыОбеспеченияТоварами КАК ВариантыОбеспеченияТоварамиХарактеристика
		|			ПО Остатки.Склад = ВариантыОбеспеченияТоварамиХарактеристика.Склад
		|				И Остатки.Номенклатура = ВариантыОбеспеченияТоварамиХарактеристика.Номенклатура
		|				И Остатки.Характеристика = ВариантыОбеспеченияТоварамиХарактеристика.Характеристика
		|				И (ВариантыОбеспеченияТоварамиХарактеристика.РеквизитДопУпорядочивания = 1)
		|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ВариантыОбеспеченияТоварами КАК ВариантыОбеспеченияТоварамиНоменклатура
		|			ПО Остатки.Склад = ВариантыОбеспеченияТоварамиНоменклатура.Склад
		|				И Остатки.Номенклатура = ВариантыОбеспеченияТоварамиНоменклатура.Номенклатура
		|				И (ВариантыОбеспеченияТоварамиНоменклатура.Характеристика = ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка))
		|				И (ВариантыОбеспеченияТоварамиХарактеристика.СпособОбеспеченияПотребностей ЕСТЬ NULL )
		|				И (ВариантыОбеспеченияТоварамиНоменклатура.РеквизитДопУпорядочивания = 1)
		|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ВариантыОбеспеченияТоварами КАК ВариантыОбеспеченияТоварамиСклад
		|			ПО Остатки.Склад = ВариантыОбеспеченияТоварамиСклад.Склад
		|				И (ВариантыОбеспеченияТоварамиСклад.Номенклатура = ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка))
		|				И (ВариантыОбеспеченияТоварамиСклад.Характеристика = ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка))
		|				И (ВариантыОбеспеченияТоварамиХарактеристика.СпособОбеспеченияПотребностей ЕСТЬ NULL )
		|				И (ВариантыОбеспеченияТоварамиНоменклатура.СпособОбеспеченияПотребностей ЕСТЬ NULL )
		|				И (ВариантыОбеспеченияТоварамиСклад.РеквизитДопУпорядочивания = 1)
		|	ГДЕ
		|		&УчитыватьПравилаВнутреннегоТовародвижения
		|		И ЕСТЬNULL(ВариантыОбеспеченияТоварамиХарактеристика.СпособОбеспеченияПотребностей.ТипОбеспечения, ЕСТЬNULL(ВариантыОбеспеченияТоварамиНоменклатура.СпособОбеспеченияПотребностей.ТипОбеспечения, ЕСТЬNULL(ВариантыОбеспеченияТоварамиСклад.СпособОбеспеченияПотребностей.ТипОбеспечения, ЗНАЧЕНИЕ(Перечисление.ТипыОбеспечения.Покупка)))) = ЗНАЧЕНИЕ(Перечисление.ТипыОбеспечения.Перемещение)
		|		И НЕ ЕСТЬNULL(ВариантыОбеспеченияТоварамиХарактеристика.СпособОбеспеченияПотребностей.ИсточникОбеспеченияПотребностей, ЕСТЬNULL(ВариантыОбеспеченияТоварамиНоменклатура.СпособОбеспеченияПотребностей.ИсточникОбеспеченияПотребностей, ЕСТЬNULL(ВариантыОбеспеченияТоварамиСклад.СпособОбеспеченияПотребностей.ИсточникОбеспеченияПотребностей, ЗНАЧЕНИЕ(Справочник.Склады.ПустаяСсылка)))) В (НЕОПРЕДЕЛЕНО, ЗНАЧЕНИЕ(Справочник.Склады.ПустаяСсылка), ЗНАЧЕНИЕ(Справочник.Партнеры.ПустаяСсылка))) КАК ИсточникДанных
		|
		|СГРУППИРОВАТЬ ПО
		|	ИсточникДанных.Склад,
		|	ИсточникДанных.Номенклатура,
		|	ИсточникДанных.Характеристика,
		|	ИсточникДанных.Период
		|
		|ИМЕЮЩИЕ
		|	(СУММА(ИсточникДанных.Количество) > 0
		|		ИЛИ СУММА(ИсточникДанных.КоличествоНачальныйОстаток) > 0
		|		ИЛИ СУММА(ИсточникДанных.КоличествоКонечныйОстаток) > 0)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ИсточникДанных.Склад КАК Склад,
		|	ИсточникДанных.Номенклатура КАК Номенклатура,
		|	ИсточникДанных.Характеристика КАК Характеристика,
		|	ВЫБОР
		|		КОГДА ИсточникДанных.Склад.Календарь = ЗНАЧЕНИЕ(Справочник.Календари.ПустаяСсылка)
		|			ТОГДА Константы.ОсновнойКалендарьПредприятия
		|		ИНАЧЕ ИсточникДанных.Склад.Календарь
		|	КОНЕЦ КАК Календарь,
		|	ЕСТЬNULL(ВариантыОбеспеченияТоварамиХарактеристика.СпособОбеспеченияПотребностей.СрокИсполненияЗаказа, ЕСТЬNULL(ВариантыОбеспеченияТоварамиНоменклатура.СпособОбеспеченияПотребностей.СрокИсполненияЗаказа, ЕСТЬNULL(ВариантыОбеспеченияТоварамиСклад.СпособОбеспеченияПотребностей.СрокИсполненияЗаказа, 1))) КАК СрокПоставки,
		|	ЕСТЬNULL(НастройкаУровняОбслуживанияХарактеристика.УровеньОбслуживания, ЕСТЬNULL(НастройкаУровняОбслуживанияНоменклатура.УровеньОбслуживания, ИсточникДанных.Склад.УровеньОбслуживания)) КАК УровеньОбслуживания,
		|	ИсточникДанных.Период КАК Период,
		|	ИсточникДанных.Количество КАК Количество,
		|	ИсточникДанных.КоличествоНачальныйОстаток КАК КоличествоНачальныйОстаток,
		|	ИсточникДанных.КоличествоКонечныйОстаток КАК КоличествоКонечныйОстаток
		|ИЗ
		|	ИсточникДанных КАК ИсточникДанных
		|		ЛЕВОЕ СОЕДИНЕНИЕ Константы КАК Константы
		|		ПО (ИСТИНА)
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ВариантыОбеспеченияТоварами КАК ВариантыОбеспеченияТоварамиХарактеристика
		|		ПО ИсточникДанных.Склад = ВариантыОбеспеченияТоварамиХарактеристика.Склад
		|			И ИсточникДанных.Номенклатура = ВариантыОбеспеченияТоварамиХарактеристика.Номенклатура
		|			И ИсточникДанных.Характеристика = ВариантыОбеспеченияТоварамиХарактеристика.Характеристика
		|			И (ВариантыОбеспеченияТоварамиХарактеристика.РеквизитДопУпорядочивания = 1)
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ВариантыОбеспеченияТоварами КАК ВариантыОбеспеченияТоварамиНоменклатура
		|		ПО ИсточникДанных.Склад = ВариантыОбеспеченияТоварамиНоменклатура.Склад
		|			И ИсточникДанных.Номенклатура = ВариантыОбеспеченияТоварамиНоменклатура.Номенклатура
		|			И (ВариантыОбеспеченияТоварамиНоменклатура.Характеристика = ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка))
		|			И (ВариантыОбеспеченияТоварамиХарактеристика.СпособОбеспеченияПотребностей ЕСТЬ NULL )
		|			И (ВариантыОбеспеченияТоварамиНоменклатура.РеквизитДопУпорядочивания = 1)
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ВариантыОбеспеченияТоварами КАК ВариантыОбеспеченияТоварамиСклад
		|		ПО ИсточникДанных.Склад = ВариантыОбеспеченияТоварамиСклад.Склад
		|			И (ВариантыОбеспеченияТоварамиСклад.Номенклатура = ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка))
		|			И (ВариантыОбеспеченияТоварамиСклад.Характеристика = ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка))
		|			И (ВариантыОбеспеченияТоварамиНоменклатура.СпособОбеспеченияПотребностей ЕСТЬ NULL )
		|			И (ВариантыОбеспеченияТоварамиХарактеристика.СпособОбеспеченияПотребностей ЕСТЬ NULL )
		|			И (ВариантыОбеспеченияТоварамиСклад.РеквизитДопУпорядочивания = 1)
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.НастройкаУровняОбслуживания КАК НастройкаУровняОбслуживанияХарактеристика
		|		ПО ИсточникДанных.Склад = НастройкаУровняОбслуживанияХарактеристика.Склад
		|			И ИсточникДанных.Номенклатура = НастройкаУровняОбслуживанияХарактеристика.Номенклатура
		|			И ИсточникДанных.Характеристика = НастройкаУровняОбслуживанияХарактеристика.Характеристика
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.НастройкаУровняОбслуживания КАК НастройкаУровняОбслуживанияНоменклатура
		|		ПО ИсточникДанных.Склад = НастройкаУровняОбслуживанияНоменклатура.Склад
		|			И ИсточникДанных.Номенклатура = НастройкаУровняОбслуживанияНоменклатура.Номенклатура
		|			И (НастройкаУровняОбслуживанияНоменклатура.Характеристика = ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка))
		|			И (НастройкаУровняОбслуживанияХарактеристика.Склад ЕСТЬ NULL )
		|
		|УПОРЯДОЧИТЬ ПО
		|	Склад,
		|	Номенклатура,
		|	Характеристика,
		|	Период
		|ИТОГИ
		|	МАКСИМУМ(Календарь),
		|	МАКСИМУМ(СрокПоставки),
		|	МАКСИМУМ(УровеньОбслуживания),
		|	СУММА(Количество),
		|	СУММА(КоличествоНачальныйОстаток),
		|	СУММА(КоличествоКонечныйОстаток)
		|ПО
		|	Склад,
		|	Номенклатура,
		|	Характеристика,
		|	Период ПЕРИОДАМИ(ДЕНЬ, &НачалоПериода, &ОкончаниеПериода)");
		
	Иначе
	
		Запрос = Новый Запрос(
		"ВЫБРАТЬ
		|	ТоварыНаСкладахОстаткиИОбороты.Склад КАК Склад,
		|	ТоварыНаСкладахОстаткиИОбороты.Номенклатура КАК Номенклатура,
		|	ТоварыНаСкладахОстаткиИОбороты.Характеристика КАК Характеристика,
		|	ТоварыНаСкладахОстаткиИОбороты.Период КАК Период,
		|	ТоварыНаСкладахОстаткиИОбороты.ВНаличииРасход КАК Количество,
		|	ТоварыНаСкладахОстаткиИОбороты.ВНаличииНачальныйОстаток КАК КоличествоНачальныйОстаток,
		|	ТоварыНаСкладахОстаткиИОбороты.ВНаличииКонечныйОстаток КАК КоличествоКонечныйОстаток
		|ПОМЕСТИТЬ ИсточникДанных
		|ИЗ
		|	РегистрНакопления.ТоварыНаСкладах.ОстаткиИОбороты(&НачалоПериода, &ОкончаниеПериода, День, , ) КАК ТоварыНаСкладахОстаткиИОбороты
		|ГДЕ
		|	(ТоварыНаСкладахОстаткиИОбороты.ВНаличииРасход > 0
		|			ИЛИ ТоварыНаСкладахОстаткиИОбороты.ВНаличииНачальныйОстаток > 0
		|			ИЛИ ТоварыНаСкладахОстаткиИОбороты.ВНаличииКонечныйОстаток > 0)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ИсточникДанных.Склад КАК Склад,
		|	ИсточникДанных.Номенклатура КАК Номенклатура,
		|	ИсточникДанных.Характеристика КАК Характеристика,
		|	ВЫБОР
		|		КОГДА ИсточникДанных.Склад.Календарь = ЗНАЧЕНИЕ(Справочник.Календари.ПустаяСсылка)
		|			ТОГДА Константы.ОсновнойКалендарьПредприятия
		|		ИНАЧЕ ИсточникДанных.Склад.Календарь
		|	КОНЕЦ КАК Календарь,
		|	ЕСТЬNULL(ВариантыОбеспеченияТоварамиХарактеристика.СпособОбеспеченияПотребностей.СрокИсполненияЗаказа, ЕСТЬNULL(ВариантыОбеспеченияТоварамиНоменклатура.СпособОбеспеченияПотребностей.СрокИсполненияЗаказа, ЕСТЬNULL(ВариантыОбеспеченияТоварамиСклад.СпособОбеспеченияПотребностей.СрокИсполненияЗаказа, 1))) КАК СрокПоставки,
		|	ЕСТЬNULL(НастройкаУровняОбслуживанияХарактеристика.УровеньОбслуживания, ЕСТЬNULL(НастройкаУровняОбслуживанияНоменклатура.УровеньОбслуживания, ИсточникДанных.Склад.УровеньОбслуживания)) КАК УровеньОбслуживания,
		|	ИсточникДанных.Период КАК Период,
		|	ИсточникДанных.Количество КАК Количество,
		|	ИсточникДанных.КоличествоНачальныйОстаток КАК КоличествоНачальныйОстаток,
		|	ИсточникДанных.КоличествоКонечныйОстаток КАК КоличествоКонечныйОстаток
		|ИЗ
		|	ИсточникДанных КАК ИсточникДанных
		|		ЛЕВОЕ СОЕДИНЕНИЕ Константы КАК Константы
		|		ПО (ИСТИНА)
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ВариантыОбеспеченияТоварами КАК ВариантыОбеспеченияТоварамиХарактеристика
		|		ПО ИсточникДанных.Склад = ВариантыОбеспеченияТоварамиХарактеристика.Склад
		|			И ИсточникДанных.Номенклатура = ВариантыОбеспеченияТоварамиХарактеристика.Номенклатура
		|			И ИсточникДанных.Характеристика = ВариантыОбеспеченияТоварамиХарактеристика.Характеристика
		|			И (ВариантыОбеспеченияТоварамиХарактеристика.РеквизитДопУпорядочивания = 1)
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ВариантыОбеспеченияТоварами КАК ВариантыОбеспеченияТоварамиНоменклатура
		|		ПО ИсточникДанных.Склад = ВариантыОбеспеченияТоварамиНоменклатура.Склад
		|			И ИсточникДанных.Номенклатура = ВариантыОбеспеченияТоварамиНоменклатура.Номенклатура
		|			И (ВариантыОбеспеченияТоварамиНоменклатура.Характеристика = ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка))
		|			И (ВариантыОбеспеченияТоварамиХарактеристика.СпособОбеспеченияПотребностей ЕСТЬ NULL )
		|			И (ВариантыОбеспеченияТоварамиНоменклатура.РеквизитДопУпорядочивания = 1)
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ВариантыОбеспеченияТоварами КАК ВариантыОбеспеченияТоварамиСклад
		|		ПО ИсточникДанных.Склад = ВариантыОбеспеченияТоварамиСклад.Склад
		|			И (ВариантыОбеспеченияТоварамиСклад.Номенклатура = ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка))
		|			И (ВариантыОбеспеченияТоварамиСклад.Характеристика = ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка))
		|			И (ВариантыОбеспеченияТоварамиНоменклатура.СпособОбеспеченияПотребностей ЕСТЬ NULL )
		|			И (ВариантыОбеспеченияТоварамиХарактеристика.СпособОбеспеченияПотребностей ЕСТЬ NULL )
		|			И (ВариантыОбеспеченияТоварамиСклад.РеквизитДопУпорядочивания = 1)
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.НастройкаУровняОбслуживания КАК НастройкаУровняОбслуживанияХарактеристика
		|		ПО ИсточникДанных.Склад = НастройкаУровняОбслуживанияХарактеристика.Склад
		|			И ИсточникДанных.Номенклатура = НастройкаУровняОбслуживанияХарактеристика.Номенклатура
		|			И ИсточникДанных.Характеристика = НастройкаУровняОбслуживанияХарактеристика.Характеристика
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.НастройкаУровняОбслуживания КАК НастройкаУровняОбслуживанияНоменклатура
		|		ПО ИсточникДанных.Склад = НастройкаУровняОбслуживанияНоменклатура.Склад
		|			И ИсточникДанных.Номенклатура = НастройкаУровняОбслуживанияНоменклатура.Номенклатура
		|			И (НастройкаУровняОбслуживанияНоменклатура.Характеристика = ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка))
		|			И (НастройкаУровняОбслуживанияХарактеристика.Склад ЕСТЬ NULL )
		|
		|УПОРЯДОЧИТЬ ПО
		|	Склад,
		|	Номенклатура,
		|	Характеристика,
		|	Период
		|ИТОГИ
		|	МАКСИМУМ(Календарь),
		|	МАКСИМУМ(СрокПоставки),
		|	МАКСИМУМ(УровеньОбслуживания),
		|	СУММА(Количество),
		|	СУММА(КоличествоНачальныйОстаток),
		|	СУММА(КоличествоКонечныйОстаток)
		|ПО
		|	Склад,
		|	Номенклатура,
		|	Характеристика,
		|	Период ПЕРИОДАМИ(ДЕНЬ, &НачалоПериода, &ОкончаниеПериода)");
		
	КонецЕсли;
	
	Период = ОбщегоНазначенияУТКлиентСервер.РасширенныйПериод(?(ДатаКлассификации = Неопределено, ТекущаяДата(), ДатаКлассификации), ПериодКлассификации, - КоличествоПериодовКлассификации);
	Запрос.УстановитьПараметр("НачалоПериода", Период.ДатаНачала);
	Запрос.УстановитьПараметр("ОкончаниеПериода", Период.ДатаОкончания);
	Запрос.УстановитьПараметр("УчитыватьПравилаВнутреннегоТовародвижения", УчитыватьПравилаВнутреннегоТовародвижения);

	ИсточникДанных = Новый Структура("ИсточникДанных, НачалоПериода, ОкончаниеПериода", Запрос.Выполнить(), Период.ДатаНачала, Период.ДатаОкончания);
	
	РезультатРасчета = Классификация.ВыполнитьРасчетТоварныхОграничений(ИсточникДанных, "Количество", "КоличествоНачальныйОстаток", "КоличествоКонечныйОстаток", "Склад, Номенклатура, Характеристика");
	ОбновитьДанныеРасчетаТоварныхОграничений(РезультатРасчета);
	
КонецПроцедуры

//Возвращает имена блокруемых реквизитов для механизма блокирования реквизитов БСП
//	Возвращаемое значание:
//		Массив - имена блокируемых реквизитов
//
Функция ПолучитьБлокируемыеРеквизитыОбъекта() Экспорт

	Результат = Новый Массив;
	Результат.Добавить("ВидНоменклатуры");
	Результат.Добавить("ВестиУчетПоГТД");
	Результат.Добавить("ЦеноваяГруппа");
	Результат.Добавить("ИспользоватьУпаковки");  
	Результат.Добавить("НаборУпаковок");
	Результат.Добавить("Качество");
	Результат.Добавить("СтавкаНДС");
	Результат.Добавить("ПодакцизныйТовар");
	Результат.Добавить("ЕдиницаИзмерения");
	ИспользоватьАссортимент = ПолучитьФункциональнуюОпцию("ИспользоватьАссортимент");
	Если ИспользоватьАссортимент Тогда
		Результат.Добавить("ТоварнаяКатегория");
	КонецЕсли;
	
	Возврат Результат;

КонецФункции

//Проверяет могут ли переданные характеристика и упавка являться характеристикой и упаковой переданной
//номенклатуры. При проверке учитывается, что характеристики могут быть общими для вида номенклатуры,
//а упаковки общими для набора упаковок
//
//		Параметры:
//			Номенклатура - СправочникСсылка.Номенклатура - номенклатура-владелец характеристик и упаковок
//			Характеристика - СправочникСсылка.ХарактеристикиНоменклатуры - проверяемая характеристика
//			Упаковка - СправочникСсылка.Упаковка - проверяемая упаковка
//
//		Возвращаемое значение:
//			Структура - стуктура с полями
//				Характеристика - если проверяемая характеристика подходит, то записывается она, если нет - пустая ссылка
//				Упаковка - если провуеряемая упаковка подходит, то записывается она, если нет - пустая ссылка
//				ХарактеристикиИспользуются - равно ИСТИНА, если по номенклатуре ведется учет характеристик
//
Функция ХарактеристикаИУпаковкаПринаджлежатВладельцу(Номенклатура, Характеристика, Упаковка) Экспорт
	
	СтруктураВозврата = Новый Структура("Характеристика, Упаковка, ХарактеристикиИспользуются");
	
	Если Не ЗначениеЗаполнено(Номенклатура) Тогда
		СтруктураВозврата.Характеристика             = Справочники.ХарактеристикиНоменклатуры.ПустаяСсылка();
		СтруктураВозврата.Упаковка                   = Справочники.УпаковкиНоменклатуры.ПустаяСсылка();
		СтруктураВозврата.ХарактеристикиИспользуются = Ложь;
		
		Возврат СтруктураВозврата;
		
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	ЕСТЬNULL(СпрУпаковки.Ссылка, ЗНАЧЕНИЕ(Справочник.УпаковкиНоменклатуры.ПустаяСсылка)) КАК Упаковка,
	|	ЕСТЬNULL(СпрХарактеристики.Ссылка, ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка)) КАК Характеристика,
	|	ВЫБОР
	|		КОГДА СпрНоменклатура.ИспользованиеХарактеристик = ЗНАЧЕНИЕ(Перечисление.ВариантыИспользованияХарактеристикНоменклатуры.ОбщиеДляВидаНоменклатуры)
	|			ИЛИ СпрНоменклатура.ИспользованиеХарактеристик = ЗНАЧЕНИЕ(Перечисление.ВариантыИспользованияХарактеристикНоменклатуры.ИндивидуальныеДляНоменклатуры)
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК ХарактеристикиИспользуются
	|ИЗ
	|	Справочник.Номенклатура КАК СпрНоменклатура
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ХарактеристикиНоменклатуры КАК СпрХарактеристики
	|		ПО (ВЫБОР
	|				КОГДА СпрНоменклатура.ИспользованиеХарактеристик = ЗНАЧЕНИЕ(Перечисление.ВариантыИспользованияХарактеристикНоменклатуры.ОбщиеДляВидаНоменклатуры)
	|					ТОГДА СпрНоменклатура.ВидНоменклатуры
	|				КОГДА СпрНоменклатура.ИспользованиеХарактеристик = ЗНАЧЕНИЕ(Перечисление.ВариантыИспользованияХарактеристикНоменклатуры.ИндивидуальныеДляНоменклатуры)
	|					ТОГДА СпрНоменклатура.Ссылка
	|				ИНАЧЕ ЛОЖЬ
	|			КОНЕЦ = СпрХарактеристики.Владелец)
	|			И (СпрХарактеристики.Ссылка = &Характеристика)
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.УпаковкиНоменклатуры КАК СпрУпаковки
	|		ПО (ВЫБОР
	|				КОГДА СпрНоменклатура.НаборУпаковок = ЗНАЧЕНИЕ(Справочник.НаборыУпаковок.ИндивидуальныйДляНоменклатуры)
	|					ТОГДА СпрНоменклатура.Ссылка
	|				КОГДА СпрНоменклатура.НаборУпаковок = ЗНАЧЕНИЕ(Справочник.НаборыУпаковок.ПустаяСсылка)
	|					ТОГДА ЛОЖЬ
	|				ИНАЧЕ СпрНоменклатура.НаборУпаковок
	|			КОНЕЦ = СпрУпаковки.Владелец)
	|			И (СпрУпаковки.Ссылка = &Упаковка)
	|ГДЕ
	|	СпрНоменклатура.Ссылка = &Номенклатура";
	
	Запрос.УстановитьПараметр("Номенклатура", Номенклатура);
	Запрос.УстановитьПараметр("Характеристика", Характеристика);
	Запрос.УстановитьПараметр("Упаковка", Упаковка);
	
    Выборка = Запрос.Выполнить().Выбрать();
	Выборка.Следующий();
	
	ЗаполнитьЗначенияСвойств(СтруктураВозврата,Выборка);
	
	Возврат СтруктураВозврата;

КонецФункции

//Проверяет используются ли характеристики для переденной номенклатуры
//	Параметры:
//		Номенклатура - СправочникСсылка.Номенклатура - проверяемая номенклатура
//	Возвращаемое значение:
//		Булево - ИСТИНА, если характеристики используются
//
Функция ХарактеристикиИспользуются(Номенклатура) Экспорт
	
	Если Не ЗначениеЗаполнено(Номенклатура) Тогда
		Возврат Ложь;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ВЫБОР
	|		КОГДА СпрНоменклатура.ИспользованиеХарактеристик = ЗНАЧЕНИЕ(Перечисление.ВариантыИспользованияХарактеристикНоменклатуры.ОбщиеДляВидаНоменклатуры)
	|			ИЛИ СпрНоменклатура.ИспользованиеХарактеристик = ЗНАЧЕНИЕ(Перечисление.ВариантыИспользованияХарактеристикНоменклатуры.ИндивидуальныеДляНоменклатуры)
	|				ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК ХарактеристикиИспользуются
	|ИЗ
	|	Справочник.Номенклатура КАК СпрНоменклатура
	|ГДЕ
	|	СпрНоменклатура.Ссылка = &Ссылка";
	
	Запрос.УстановитьПараметр("Ссылка", Номенклатура);
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Выборка.Следующий();
	
	Возврат Выборка.ХарактеристикиИспользуются;
	
КонецФункции

//Возвращает значения реквизитов номеклатуры, если номенклатура не передана - возвращаются значения по умолчанию
//
//	Параметры:
//		Номенклатура - СправочникСсылка.Номенклатура - номенклатура, чьи реквизиты нужно вернуть
//	Возвращаемое значение:
//		Структура - поля ВестиУчетПоГТД, ЕдиницаИзмерения, СтавкаНДС, ГруппаФинансовогоУчета, ПодакцизныйТовар, ЭтоУслуга
//
Функция ЗначенияРеквизитовНоменклатуры(Номенклатура) Экспорт
	
	Запрос = Новый Запрос("
	|ВЫБРАТЬ
	|	Номенклатура.ВестиУчетПоГТД КАК ВестиУчетПоГТД,
	|	Номенклатура.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|	Номенклатура.СтавкаНДС КАК СтавкаНДС,
	|	Номенклатура.ГруппаФинансовогоУчета КАК ГруппаФинансовогоУчета,
	|	Номенклатура.ПодакцизныйТовар КАК ПодакцизныйТовар,
	|	ВЫБОР КОГДА Номенклатура.ТипНоменклатуры НЕ В
		|		(ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Товар),ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара)) ТОГДА
	|		Истина
	|	ИНАЧЕ
	|		Ложь
	|	КОНЕЦ КАК ЭтоУслуга
	|ИЗ
	|	Справочник.Номенклатура КАК Номенклатура
	|ГДЕ
	|	Номенклатура.Ссылка = &Номенклатура
	|");
	
	Запрос.УстановитьПараметр("Номенклатура", Номенклатура);
	
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда
		ВестиУчетПоГТД = Выборка.ВестиУчетПоГТД;
		СтавкаНДС = Выборка.СтавкаНДС;
		ЭтоУслуга = Выборка.ЭтоУслуга;
		ЕдиницаИзмерения = Выборка.ЕдиницаИзмерения;
		ГруппаФинансовогоУчета = Выборка.ГруппаФинансовогоУчета;
		ПодакцизныйТовар = Выборка.ПодакцизныйТовар;
	Иначе
		ВестиУчетПоГТД = Ложь;
		СтавкаНДС = Перечисления.СтавкиНДС.БезНДС;
		ЭтоУслуга = Неопределено;
		ЕдиницаИзмерения = Справочники.ЕдиницыИзмерения.ПустаяСсылка();
		ГруппаФинансовогоУчета = Справочники.ГруппыФинансовогоУчетаНоменклатуры.ПустаяСсылка();
		ПодакцизныйТовар = Ложь;
	КонецЕсли;
	
	СтруктураРеквизитов = Новый Структура("ВестиУчетПоГТД, СтавкаНДС, ЭтоУслуга, ЕдиницаИзмерения, ГруппаФинансовогоУчета, ПодакцизныйТовар",
		ВестиУчетПоГТД,
		СтавкаНДС,
		ЭтоУслуга,
		ЕдиницаИзмерения,
		ГруппаФинансовогоУчета,
		ПодакцизныйТовар
	);
	
	Возврат СтруктураРеквизитов;

КонецФункции // ЗначенияРеквизитовНоменклатуры()

//Возвращает имена реквзитов, которые не должны отображаться в списке реквизитов обработки БСП ГрупповоеИзменениеОбъектов
//
//	Возвращаемое значение:
//		Массив - массив имен реквизитов
//
Функция РеквизитыНеРедактируемыеВГрупповойОбработке() Экспорт
	
	НеРедактируемыеРеквизиты = Новый Массив;
	НеРедактируемыеРеквизиты.Добавить("Наименование");
	НеРедактируемыеРеквизиты.Добавить("УдалитьИспользоватьСерийныеНомера");
	НеРедактируемыеРеквизиты.Добавить("УдалитьОписаниеВФорматеHTML");
	НеРедактируемыеРеквизиты.Добавить("УдалитьФайлКартинки");
	НеРедактируемыеРеквизиты.Добавить("ФайлКартинки");
	НеРедактируемыеРеквизиты.Добавить("ФайлОписанияДляСайта");
	НеРедактируемыеРеквизиты.Добавить("КодДляПоиска");
	
	Возврат НеРедактируемыеРеквизиты;
	
КонецФункции

//Если для переданной номенклатуры ведутся характеристики, то в параметре возвращается владелец характеристик
//
//	Параметры:
//		Номенклатура - СправочникСсылка.Номенклатура - проверяемая номенклатура
//		ВладелецХарактеристики - СправочникСсылка.Номенклатура, СправочникСслыка.ВидыНоменклатуры - в этом параметре
//			возвращается владелец характеристик (это зависит от того, какие характеристики используются - индивидуальные
//			или общие для вида номенклатуры)
//	Возвращаемое значение:
//		Булево - признак того, что для переданной номенклатуры ведется учет по характеристикам
//
Функция ПроверитьИспользованиеХарактеристикИПолучитьВладельцаДляВыбора(Номенклатура, ВладелецХарактеристики) Экспорт

	СтруктураРеквизитов = Новый Структура;
	СтруктураРеквизитов.Вставить("ВидНоменклатуры"           , "ВидНоменклатуры");
	СтруктураРеквизитов.Вставить("ИспользованиеХарактеристик", "ИспользованиеХарактеристик");
	ЗначенияРеквизитовВИБ = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Номенклатура, СтруктураРеквизитов);

	Если ЗначенияРеквизитовВИБ.ИспользованиеХарактеристик = Перечисления.ВариантыИспользованияХарактеристикНоменклатуры.НеИспользовать Тогда
		ИспользованиеХарактеристик = Ложь;
	Иначе
		ИспользованиеХарактеристик = Истина;

		Если ЗначенияРеквизитовВИБ.ИспользованиеХарактеристик = Перечисления.ВариантыИспользованияХарактеристикНоменклатуры.ОбщиеДляВидаНоменклатуры Тогда
			ВладелецХарактеристики = ЗначенияРеквизитовВИБ.ВидНоменклатуры;
		Иначе
			ВладелецХарактеристики = Номенклатура;
		КонецЕсли;
	КонецЕсли;

	Возврат ИспользованиеХарактеристик;

КонецФункции

// Возвращает массив имен реквизитов, которые не используются для контроля
// уникальности элементов номенклатуры при установке настроек создания в 
// виде номенклатуры.
//
Функция ИменаНеиспользуемыхДляКонтроляРеквизитов() Экспорт
	
	Результат = Новый Массив;
	
	Результат.Добавить("НаименованиеПолное");
	Результат.Добавить("ТипНоменклатуры");
	Результат.Добавить("ИспользованиеХарактеристик");
	Результат.Добавить("УдалитьИспользоватьСерийныеНомера");
	Результат.Добавить("Описание");
	Результат.Добавить("УдалитьОписаниеВФорматеHTML");
	Результат.Добавить("ФайлКартинки");
	Результат.Добавить("УдалитьФайлКартинки");
	Результат.Добавить("ШаблонЦенника");
	Результат.Добавить("ШаблонЭтикетки");
	Результат.Добавить("ВариантОформленияПродажи");
	Результат.Добавить("ФайлОписанияДляСайта");
	Результат.Добавить("ИспользоватьИндивидуальныйШаблонЦенника");
	Результат.Добавить("ИспользоватьИндивидуальныйШаблонЭтикетки");
	Результат.Добавить("ИспользоватьУпаковки");
	Результат.Добавить("ГруппаДоступа");
	Результат.Добавить("ИспользованиеХарактеристик");
	Результат.Добавить("ПоставляетсяВМногооборотнойТаре");
	Результат.Добавить("НоменклатураМногооборотнаяТара");
	Результат.Добавить("ХарактеристикаМногооборотнаяТара");
	
	Возврат Результат
	
КонецФункции

// Возвращает массив имен реквизитов, которые обязательно отображаются
// при установке настроек создания в виде номенклатуры.
//
Функция ИменаОбязательноОтображаемыхРеквизитов() Экспорт
	
	Результат = Новый Массив;
	
	Результат.Добавить("НаименованиеПолное");
	Результат.Добавить("ВестиУчетПоГТД");
	Результат.Добавить("ПодакцизныйТовар");
	
	Возврат Результат;
	
КонецФункции

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ 
 
Процедура ОбработкаПолученияФормы(ВидФормы, Параметры, ВыбраннаяФорма, ДополнительнаяИнформация, СтандартнаяОбработка)
	Если ВидФормы = "ФормаОбъекта"
		И Параметры.Свойство("ЗначениеКопирования") Тогда
		ОбъектКопирования = Параметры.ЗначениеКопирования;
		Если Не ОбъектКопирования.ЭтоГруппа Тогда
			СтандартнаяОбработка = Ложь;
			Параметры = Новый Структура("ЗначениеКопирования", ОбъектКопирования);
			ВыбраннаяФорма = "ПомощникНового";	
		КонецЕсли;
	ИначеЕсли ВидФормы = "ФормаВыбора" Тогда
		ВыборГруппИЭлементов = Неопределено;
		Если Параметры.Свойство("ВыборГруппИЭлементов",ВыборГруппИЭлементов) Тогда
			Если ВыборГруппИЭлементов = ИспользованиеГруппИЭлементов.ГруппыИЭлементы Тогда
				СтандартнаяОбработка = Ложь;
				ВыбраннаяФорма = "ФормаВыбораГруппИЭлементов";
			КонецЕсли;
		Иначе
			СтандартнаяОбработка = Ложь;
			ВыбраннаяФорма = "ФормаВыбораГруппИЭлементов";
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

Процедура ОбработкаПолученияДанныхВыбора(ДанныеВыбора, Параметры, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	СтрокаПоиска = Параметры.СтрокаПоиска;
	
	Запрос = Новый Запрос();
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	СпрНоменклатура.Ссылка,
	|	СпрНоменклатура.Наименование КАК ПредставлениеСовпадения,
	|	СпрНоменклатура.Качество.Порядок КАК Качество,
	|	0 КАК Порядок,
	|	СпрНоменклатура.Код КАК ПредставлениеНоменклатуры,
	|	СпрНоменклатура.ЭтоГруппа
	|ПОМЕСТИТЬ НоменклатураПоиск
	|ИЗ
	|	Справочник.Номенклатура КАК СпрНоменклатура
	|ГДЕ
	|	СпрНоменклатура.Наименование ПОДОБНО &СтрокаПоиска
	|	И СпрНоменклатура.ЭтоГруппа = ЛОЖЬ
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	СпрНоменклатура.Ссылка,
	|	СпрНоменклатура.Код,
	|	СпрНоменклатура.Качество.Порядок,
	|	1,
	|	СпрНоменклатура.Наименование,
	|	NULL
	|ИЗ
	|	Справочник.Номенклатура КАК СпрНоменклатура
	|ГДЕ
	|	СпрНоменклатура.Код ПОДОБНО &СтрокаПоиска
	|	И СпрНоменклатура.ЭтоГруппа = ЛОЖЬ
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	СпрНоменклатура.Ссылка,
	|	СпрНоменклатура.Артикул,
	|	СпрНоменклатура.Качество.Порядок,
	|	2,
	|	СпрНоменклатура.Наименование,
	|	NULL
	|ИЗ
	|	Справочник.Номенклатура КАК СпрНоменклатура
	|ГДЕ
	|	СпрНоменклатура.Артикул ПОДОБНО &СтрокаПоиска
	|	И СпрНоменклатура.ЭтоГруппа = ЛОЖЬ
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	СпрНоменклатура.Ссылка,
	|	СпрНоменклатура.КодДляПоиска,
	|	СпрНоменклатура.Качество.Порядок,
	|	3,
	|	СпрНоменклатура.Наименование,
	|	NULL
	|ИЗ
	|	Справочник.Номенклатура КАК СпрНоменклатура
	|ГДЕ
	|	СпрНоменклатура.КодДляПоиска ПОДОБНО &СтрокаПоиска
	|	И СпрНоменклатура.ЭтоГруппа = ЛОЖЬ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	НоменклатураПоиск.Качество КАК Качество,
	|	НоменклатураПоиск.Ссылка,
	|	НоменклатураПоиск.Порядок КАК Порядок,
	|	НоменклатураПоиск.ПредставлениеСовпадения КАК ПредставлениеСовпадения,
	|	НоменклатураПоиск.ПредставлениеНоменклатуры КАК ПредставлениеНоменклатуры
	|ИЗ
	|	НоменклатураПоиск КАК НоменклатураПоиск
	|
	|УПОРЯДОЧИТЬ ПО
	|	Порядок,
	|	Качество,
	|	ПредставлениеСовпадения,
	|	ПредставлениеНоменклатуры";
	
	Запрос.Текст = ТекстЗапроса;
	
	Запрос.УстановитьПараметр("СтрокаПоиска", СтрокаПоиска + "%");
	
	ДанныеВыбора = Новый СписокЗначений;

	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		
		ТекстЗначения = СокрП(Выборка.ПредставлениеСовпадения) + " (" + Выборка.ПредставлениеНоменклатуры + ")";
		ДанныеВыбора.Добавить(Выборка.Ссылка, ТекстЗначения);
		
	КонецЦикла;

КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

////////////////////////////////////////////////////////////////////////////////
// Обновление информационной базы

// Обработчик обновления УТ 11.1.1.0
//
Процедура ЗаполнитьПометкуЕстьТоварыДругогоКачества() Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = 	
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	СпрНоменклатура.Ссылка КАК Номенклатура,
	|	ВЫБОР
	|		КОГДА ТоварыДругогоКачества.НоменклатураБрак ЕСТЬ NULL 
	|			ТОГДА ЛОЖЬ
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ КАК ЕстьТоварыДругогоКачестваПоФакту
	|ИЗ
	|	Справочник.Номенклатура КАК СпрНоменклатура
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ТоварыДругогоКачества КАК ТоварыДругогоКачества
	|		ПО СпрНоменклатура.Ссылка = ТоварыДругогоКачества.Номенклатура
	|ГДЕ
	|	СпрНоменклатура.ЕстьТоварыДругогоКачества <> ВЫБОР
	|			КОГДА ТоварыДругогоКачества.НоменклатураБрак ЕСТЬ NULL 
	|				ТОГДА ЛОЖЬ
	|			ИНАЧЕ ИСТИНА
	|		КОНЕЦ
	|	И НЕ СпрНоменклатура.ЭтоГруппа";
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		
		НоменклатураОбъект = Выборка.Номенклатура.ПолучитьОбъект();
		НоменклатураОбъект.ЕстьТоварыДругогоКачества = Выборка.ЕстьТоварыДругогоКачестваПоФакту;
		НоменклатураОбъект.Записать();	
		
	КонецЦикла;	
	
КонецПроцедуры

// Обработчик обновления УТ 11.1.0.0
//
Процедура ЗаполнитьИспользованиеХарактеристик() Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	Номенклатура.Ссылка КАК Ссылка,
	|	Номенклатура.ВидНоменклатуры.ИспользованиеХарактеристик КАК ИспользованиеХарактеристик
	|ИЗ
	|	Справочник.Номенклатура КАК Номенклатура
	|ГДЕ
	|	Номенклатура.ИспользованиеХарактеристик = ЗНАЧЕНИЕ(Перечисление.ВариантыИспользованияХарактеристикНоменклатуры.ПустаяСсылка)
	|	И НЕ Номенклатура.ЭтоГруппа";
	
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		
		НоменклатураОбъект = Выборка.Ссылка.ПолучитьОбъект();
		НоменклатураОбъект.ИспользованиеХарактеристик = Выборка.ИспользованиеХарактеристик;
		
		НоменклатураОбъект.ОбменДанными.Загрузка = Истина;
		НоменклатураОбъект.Записать();
		
	КонецЦикла;
	
КонецПроцедуры

// Обработчик обновления УТ 11.1.0.0
//
Процедура ЗаполнитьКодДляПоиска() Экспорт
	
	Запрос = Новый Запрос;
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	Номенклатура.Ссылка КАК Ссылка
	|ИЗ
	|	Справочник.Номенклатура КАК Номенклатура
	|ГДЕ
	|	Номенклатура.КодДляПоиска = &ПустаяСтрока";
	
	Запрос.УстановитьПараметр("ПустаяСтрока","");
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		
		ОбъектНоменклатура = Выборка.Ссылка.ПолучитьОбъект();
		
		ОбъектНоменклатура.КодДляПоиска = ПрефиксацияОбъектовКлиентСервер.ПолучитьНомерНаПечать(ОбъектНоменклатура.Код, Истина);
		ОбъектНоменклатура.ОбменДанными.Загрузка = Истина;
		
		ОбъектНоменклатура.Записать();
		
	КонецЦикла;
	
КонецПроцедуры

// Вызывается при первоначальном заполнении ИБ.
// Устанавливает константу контролировать уникальность рабочего наименования
// для номенклатур и и характеристик.
//
Процедура УстановитьКонстантуУникальностьРабочегоНаименования() Экспорт
	
	Константы.КонтролироватьУникальностьРабочегоНаименованияНоменклатурыИХарактеристик.Установить(Истина);
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// Прочее

Процедура ОбновитьДанныеКлассификации(РезультатКлассификации, ТипКлассификации, ТипПараметраКлассификации, ПериодКлассификации, НеКлассифицирован)
	
	Если РезультатКлассификации.Колонки.Найти("Период") = Неопределено Тогда
		
		РезультатКлассификации.Колонки.Добавить("Период");
		
	КонецЕсли;
	
	Если РезультатКлассификации.Колонки.Найти("ТипПараметраКлассификации") = Неопределено Тогда
		
		РезультатКлассификации.Колонки.Добавить("ТипПараметраКлассификации");
		
	КонецЕсли;
	
	Если РезультатКлассификации.Колонки.Найти("ТипКлассификации") = Неопределено Тогда
		
		РезультатКлассификации.Колонки.Добавить("ТипКлассификации");
		
	КонецЕсли;
	
	РезультатКлассификации.ЗаполнитьЗначения(ПериодКлассификации, "Период");
	РезультатКлассификации.ЗаполнитьЗначения(ТипПараметраКлассификации, "ТипПараметраКлассификации");
	РезультатКлассификации.ЗаполнитьЗначения(ТипКлассификации, "ТипКлассификации");

	НаборЗаписей = РегистрыСведений.ABCXYZКлассификацияНоменклатуры.СоздатьНаборЗаписей();
	НаборЗаписей.Отбор.Период.Установить(ПериодКлассификации);
	НаборЗаписей.Отбор.ТипКлассификации.Установить(ТипКлассификации);
	НаборЗаписей.Отбор.ТипПараметраКлассификации.Установить(ТипПараметраКлассификации);

	НаборЗаписей.Загрузить(РезультатКлассификации);
	НаборЗаписей.Записать(Истина);
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	ABCXYZКлассификацияНоменклатуры.Номенклатура КАК Номенклатура,
	|	ABCXYZКлассификацияНоменклатуры.Характеристика КАК Характеристика,
	|	ABCXYZКлассификацияНоменклатуры.РазделКлассификации КАК РазделКлассификации
	|ПОМЕСТИТЬ РезультатКлассификации
	|ИЗ
	|	РегистрСведений.ABCXYZКлассификацияНоменклатуры КАК ABCXYZКлассификацияНоменклатуры
	|ГДЕ
	|	ABCXYZКлассификацияНоменклатуры.Период = НАЧАЛОПЕРИОДА(&ПериодКлассификации, ДЕНЬ)
	|	И ABCXYZКлассификацияНоменклатуры.ТипПараметраКлассификации = &ТипПараметраКлассификации
	|	И ABCXYZКлассификацияНоменклатуры.ТипКлассификации = &ТипКлассификации
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Номенклатура,
	|	Характеристика,
	|	РазделКлассификации
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	НАЧАЛОПЕРИОДА(&ПериодКлассификации, ДЕНЬ) КАК Период,
	|	ABCXYZКлассификацияНоменклатурыСрезПоследних.Номенклатура КАК Номенклатура,
	|	ABCXYZКлассификацияНоменклатурыСрезПоследних.Характеристика КАК Характеристика,
	|	ABCXYZКлассификацияНоменклатурыСрезПоследних.РазделКлассификации КАК РазделКлассификации,
	|	ABCXYZКлассификацияНоменклатурыСрезПоследних.ТипПараметраКлассификации КАК ТипПараметраКлассификации,
	|	ABCXYZКлассификацияНоменклатурыСрезПоследних.ТипКлассификации КАК ТипКлассификации,
	|	&НеКлассифицирован КАК Класс,
	|	0 КАК ЗначениеПараметраКлассификации
	|ИЗ
	|	РегистрСведений.ABCXYZКлассификацияНоменклатуры.СрезПоследних(
	|			ДОБАВИТЬКДАТЕ(&ПериодКлассификации, СЕКУНДА, -1),
	|			(НЕ (Номенклатура, Характеристика, РазделКлассификации) В
	|						(ВЫБРАТЬ
	|							РезультатКлассификации.Номенклатура КАК Номенклатура,
	|							РезультатКлассификации.Характеристика КАК Характеристика,
	|							РезультатКлассификации.РазделКлассификации КАК РазделКлассификации
	|						ИЗ
	|							РезультатКлассификации КАК РезультатКлассификации))
	|				И ТипПараметраКлассификации = &ТипПараметраКлассификации
	|				И ТипКлассификации = &ТипКлассификации) КАК ABCXYZКлассификацияНоменклатурыСрезПоследних");
	
	Запрос.УстановитьПараметр("ПериодКлассификации", ПериодКлассификации);
	Запрос.УстановитьПараметр("ТипКлассификации", ТипКлассификации);
	Запрос.УстановитьПараметр("ТипПараметраКлассификации", ТипПараметраКлассификации);
	Запрос.УстановитьПараметр("НеКлассифицирован", НеКлассифицирован);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Если НЕ РезультатЗапроса.Пустой() Тогда
		
		НаборЗаписей.Загрузить(РезультатЗапроса.Выгрузить());
		НаборЗаписей.Записать(Ложь);
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ОбновитьДанныеРасчетаТоварныхОграничений(РезультатРасчета)
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	ТоварныеОграниченияРассчитанные.Склад КАК Склад,
	|	ТоварныеОграниченияРассчитанные.Номенклатура КАК Номенклатура,
	|	ТоварныеОграниченияРассчитанные.Характеристика КАК Характеристика,
	|	ВЫРАЗИТЬ(ТоварныеОграниченияРассчитанные.СтраховоеКоличествоЗапасаРекомендуемое КАК ЧИСЛО(15, 3)) КАК СтраховоеКоличествоЗапасаРекомендуемое,
	|	ВЫРАЗИТЬ(ТоварныеОграниченияРассчитанные.МинимальноеКоличествоЗапасаРекомендуемое КАК ЧИСЛО(15, 3)) КАК МинимальноеКоличествоЗапасаРекомендуемое,
	|	ВЫРАЗИТЬ(ТоварныеОграниченияРассчитанные.НормативноеКоличествоЗапасаРекомендуемое КАК ЧИСЛО(15, 3)) КАК НормативноеКоличествоЗапасаРекомендуемое,
	|	ВЫРАЗИТЬ(ТоварныеОграниченияРассчитанные.СреднедневноеПотребление КАК ЧИСЛО(15, 3)) КАК СреднедневноеПотребление
	|ПОМЕСТИТЬ ТоварныеОграниченияРассчитанные
	|ИЗ
	|	&РезультатРасчета КАК ТоварныеОграниченияРассчитанные
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТоварныеОграничения.Склад КАК Склад,
	|	ТоварныеОграничения.Номенклатура КАК Номенклатура,
	|	ТоварныеОграничения.Характеристика КАК Характеристика,
	|	ЕСТЬNULL(СУММА(ТоварныеОграничения.СтраховоеКоличествоЗапаса), СУММА(ТоварныеОграничения.СтраховоеКоличествоЗапасаРекомендуемое)) КАК СтраховоеКоличествоЗапаса,
	|	ЕСТЬNULL(СУММА(ТоварныеОграничения.МинимальноеКоличествоЗапаса), СУММА(ТоварныеОграничения.МинимальноеКоличествоЗапасаРекомендуемое)) КАК МинимальноеКоличествоЗапаса,
	|	ЕСТЬNULL(СУММА(ТоварныеОграничения.НормативноеКоличествоЗапаса), СУММА(ТоварныеОграничения.НормативноеКоличествоЗапасаРекомендуемое)) КАК НормативноеКоличествоЗапаса,
	|	ЕСТЬNULL(СУММА(ТоварныеОграничения.МаксимальноеКоличествоЗапаса), 0) КАК МаксимальноеКоличествоЗапаса,
	|	СУММА(ТоварныеОграничения.СтраховоеКоличествоЗапасаРекомендуемое) КАК СтраховоеКоличествоЗапасаРекомендуемое,
	|	СУММА(ТоварныеОграничения.МинимальноеКоличествоЗапасаРекомендуемое) КАК МинимальноеКоличествоЗапасаРекомендуемое,
	|	СУММА(ТоварныеОграничения.НормативноеКоличествоЗапасаРекомендуемое) КАК НормативноеКоличествоЗапасаРекомендуемое,
	|	СУММА(ТоварныеОграничения.СреднедневноеПотребление) КАК СреднедневноеПотребление
	|ИЗ
	|	(ВЫБРАТЬ
	|		ТоварныеОграниченияИзмененные.Склад КАК Склад,
	|		ТоварныеОграниченияИзмененные.Номенклатура КАК Номенклатура,
	|		ТоварныеОграниченияИзмененные.Характеристика КАК Характеристика,
	|		ВЫБОР
	|			КОГДА ТоварныеОграниченияИзмененные.СтраховоеКоличествоЗапасаРекомендуемое <> ТоварныеОграниченияИзмененные.СтраховоеКоличествоЗапаса
	|				ТОГДА ТоварныеОграниченияИзмененные.СтраховоеКоличествоЗапаса
	|			ИНАЧЕ NULL
	|		КОНЕЦ КАК СтраховоеКоличествоЗапаса,
	|		ВЫБОР
	|			КОГДА ТоварныеОграниченияИзмененные.МинимальноеКоличествоЗапасаРекомендуемое <> ТоварныеОграниченияИзмененные.МинимальноеКоличествоЗапаса
	|				ТОГДА ТоварныеОграниченияИзмененные.МинимальноеКоличествоЗапаса
	|			ИНАЧЕ NULL
	|		КОНЕЦ КАК МинимальноеКоличествоЗапаса,
	|		ВЫБОР
	|			КОГДА ТоварныеОграниченияИзмененные.НормативноеКоличествоЗапасаРекомендуемое <> ТоварныеОграниченияИзмененные.НормативноеКоличествоЗапаса
	|				ТОГДА ТоварныеОграниченияИзмененные.НормативноеКоличествоЗапаса
	|			ИНАЧЕ NULL
	|		КОНЕЦ КАК НормативноеКоличествоЗапаса,
	|		ВЫБОР
	|			КОГДА ТоварныеОграниченияИзмененные.МаксимальноеКоличествоЗапаса > 0
	|				ТОГДА ТоварныеОграниченияИзмененные.МаксимальноеКоличествоЗапаса
	|			ИНАЧЕ NULL
	|		КОНЕЦ КАК МаксимальноеКоличествоЗапаса,
	|		NULL КАК СтраховоеКоличествоЗапасаРекомендуемое,
	|		NULL КАК МинимальноеКоличествоЗапасаРекомендуемое,
	|		NULL КАК НормативноеКоличествоЗапасаРекомендуемое,
	|		NULL КАК СреднедневноеПотребление
	|	ИЗ
	|		РегистрСведений.ТоварныеОграничения КАК ТоварныеОграниченияИзмененные
	|	ГДЕ
	|		(ТоварныеОграниченияИзмененные.СтраховоеКоличествоЗапасаРекомендуемое <> ТоварныеОграниченияИзмененные.СтраховоеКоличествоЗапаса
	|				ИЛИ ТоварныеОграниченияИзмененные.МинимальноеКоличествоЗапасаРекомендуемое <> ТоварныеОграниченияИзмененные.МинимальноеКоличествоЗапаса
	|				ИЛИ ТоварныеОграниченияИзмененные.НормативноеКоличествоЗапасаРекомендуемое <> ТоварныеОграниченияИзмененные.НормативноеКоличествоЗапаса
	|				ИЛИ ТоварныеОграниченияИзмененные.МаксимальноеКоличествоЗапаса > 0)
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ТоварныеОграниченияРассчитанные.Склад,
	|		ТоварныеОграниченияРассчитанные.Номенклатура,
	|		ТоварныеОграниченияРассчитанные.Характеристика,
	|		NULL,
	|		NULL,
	|		NULL,
	|		NULL,
	|		ТоварныеОграниченияРассчитанные.СтраховоеКоличествоЗапасаРекомендуемое,
	|		ТоварныеОграниченияРассчитанные.МинимальноеКоличествоЗапасаРекомендуемое,
	|		ТоварныеОграниченияРассчитанные.НормативноеКоличествоЗапасаРекомендуемое,
	|		ТоварныеОграниченияРассчитанные.СреднедневноеПотребление
	|	ИЗ
	|		ТоварныеОграниченияРассчитанные КАК ТоварныеОграниченияРассчитанные) КАК ТоварныеОграничения
	|
	|СГРУППИРОВАТЬ ПО
	|	ТоварныеОграничения.Склад,
	|	ТоварныеОграничения.Номенклатура,
	|	ТоварныеОграничения.Характеристика
	|
	|УПОРЯДОЧИТЬ ПО
	|	Склад,
	|	Номенклатура,
	|	Характеристика");
	
	Запрос.УстановитьПараметр("РезультатРасчета", РезультатРасчета);
	РезультатЗапроса = Запрос.Выполнить();
	
	НаборЗаписей = РегистрыСведений.ТоварныеОграничения.СоздатьНаборЗаписей();

	Если НЕ РезультатЗапроса.Пустой() Тогда
		
		НаборЗаписей.Загрузить(РезультатЗапроса.Выгрузить());
		
	КонецЕсли;
	
	НаборЗаписей.Записать(Истина);
	
КонецПроцедуры

Функция ДоступенВводБезКонтроля() Экспорт
	                                     
	Возврат Пользователи.РолиДоступны("ВводИнформацииПоНоменклатуреБезКонтроля");
	
КонецФункции

Функция РабочееНаименованиеУникально(Объект) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	Номенклатура.Ссылка КАК Номенклатура
	|ИЗ
	|	Справочник.Номенклатура КАК Номенклатура
	|ГДЕ
	|	Номенклатура.Ссылка <> &Ссылка
	|	И Номенклатура.Наименование = &Наименование";
	
	Запрос.УстановитьПараметр("Ссылка", Объект.Ссылка);
	Запрос.УстановитьПараметр("Наименование", Объект.Наименование);

	Результат = Запрос.Выполнить();
	
	Возврат Результат.Пустой()
	
КонецФункции


#КонецЕсли