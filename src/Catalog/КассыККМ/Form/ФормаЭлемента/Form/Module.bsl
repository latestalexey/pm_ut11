
////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// подсистема запрета редактирования ключевых реквизитов объектов	
	ЗапретРедактированияРеквизитовОбъектов.ЗаблокироватьРеквизиты(ЭтаФорма);
	
	ТипКассыПриИзмененииНаСервере();
	
	Элементы.ПодключаемоеОборудование.Доступность = Не Объект.ИспользоватьБезПодключенияОборудования;
	
	Если Объект.ИспользоватьБезПодключенияОборудования
		И Не ОбщегоНазначенияУТ.ИспользоватьПодключаемоеОборудование() Тогда
		Элементы.ИспользоватьБезПодключенияОборудования.Доступность = Ложь;
	КонецЕсли;
	
	Если ПолучитьФункциональнуюОпцию("ИспользоватьОбменСПодключаемымОборудованиемOffline") Тогда
		Элементы.ТипКассы.СписокВыбора.Добавить(Перечисления.ТипыКассККМ.ККМOffline);
	КонецЕсли;
	
	Элементы.Владелец.Видимость = ПолучитьФункциональнуюОпцию("ИспользоватьНесколькоОрганизаций");
	
КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	
	// подсистема запрета редактирования ключевых реквизитов объектов	
	ЗапретРедактированияРеквизитовОбъектов.ЗаблокироватьРеквизиты(ЭтаФорма);
	
	ОбновитьПовторноИспользуемыеЗначения();
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ ШАПКИ ФОРМЫ

&НаСервере
Процедура ТипКассыПриИзмененииНаСервере()
	
	Если Объект.ТипКассы = Перечисления.ТипыКассККМ.АвтономнаяККМ Тогда
		
		Элементы.ИспользоватьБезПодключенияОборудования.Видимость = Ложь;
		Элементы.ПодключаемоеОборудование.Видимость               = Ложь;
		Элементы.АвтоматическаяИнкассация.Видимость               = Ложь;
		Элементы.Склад.Видимость                                  = Истина;
		Элементы.СкладПодключаемогоОборудования.Видимость         = Ложь;
		
		Объект.ПодключаемоеОборудование = Неопределено;
		
		СкладПодключаемогоОборудования = Неопределено;
		
	ИначеЕсли Объект.ТипКассы = Перечисления.ТипыКассККМ.ККМOffline Тогда
		
		Элементы.ИспользоватьБезПодключенияОборудования.Видимость = Ложь;
		Элементы.ПодключаемоеОборудование.Видимость               = Истина;
		Элементы.АвтоматическаяИнкассация.Видимость               = Ложь;
		Элементы.Склад.Видимость                                  = Ложь;
		Элементы.СкладПодключаемогоОборудования.Видимость         = Истина;
		
		ПараметрыВыбора = Новый Массив;
		ПараметрыВыбора.Добавить(Новый ПараметрВыбора("Отбор.ТипОборудования", Перечисления.ТипыПодключаемогоОборудования.ККМOffline));
		ПараметрыВыбора.Добавить(Новый ПараметрВыбора("Отбор.УстройствоИспользуется", Истина));
		ПараметрыВыбора.Добавить(Новый ПараметрВыбора("Отбор.ПометкаУдаления", Ложь));
		
		Элементы.ПодключаемоеОборудование.ПараметрыВыбора = Новый ФиксированныйМассив(ПараметрыВыбора);
		
		Если Объект.ПодключаемоеОборудование.ТипОборудования <> Перечисления.ТипыПодключаемогоОборудования.ККМOffline Тогда
			Объект.ПодключаемоеОборудование = Неопределено;
		КонецЕсли;
		
		ЗаполнитьСкладПоПодключенномуОборудованию();
		
	Иначе
		
		Элементы.ИспользоватьБезПодключенияОборудования.Видимость = Истина;
		Элементы.ПодключаемоеОборудование.Видимость               = Истина;
		Элементы.АвтоматическаяИнкассация.Видимость               = Истина;
		Элементы.Склад.Видимость                                  = Истина;
		Элементы.СкладПодключаемогоОборудования.Видимость         = Ложь;
		
		ПараметрыВыбора = Новый Массив;
		ПараметрыВыбора.Добавить(Новый ПараметрВыбора("Отбор.ТипОборудования", Перечисления.ТипыПодключаемогоОборудования.ФискальныйРегистратор));
		ПараметрыВыбора.Добавить(Новый ПараметрВыбора("Отбор.УстройствоИспользуется", Истина));
		ПараметрыВыбора.Добавить(Новый ПараметрВыбора("Отбор.ПометкаУдаления", Ложь));
		
		Элементы.ПодключаемоеОборудование.ПараметрыВыбора = Новый ФиксированныйМассив(ПараметрыВыбора);
		
		Если Объект.ПодключаемоеОборудование.ТипОборудования <> Перечисления.ТипыПодключаемогоОборудования.ФискальныйРегистратор Тогда
			Объект.ПодключаемоеОборудование = Неопределено;
		КонецЕсли;
		
		СкладПодключаемогоОборудования = Неопределено;
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ТипКассыПриИзменении(Элемент)
	
	ТипКассыПриИзмененииНаСервере();
	
КонецПроцедуры

&НаКлиенте
Процедура ПодключаемоеОборудованиеПриИзменении(Элемент)
	
	ЗаполнитьСкладПоПодключенномуОборудованию();
	
КонецПроцедуры

&НаКлиенте
Процедура НаименованиеНачалоВыбораИзСписка(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;

	АвтоНаименование();
	ВыбранныйЭлемент = ВыбратьИзСписка(Элементы.Наименование.СписокВыбора, Элемент);
	Если ВыбранныйЭлемент <> Неопределено Тогда
		Объект.Наименование = ВыбранныйЭлемент.Значение;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ИспользоватьБезПодключенияОборудованияПриИзменении(Элемент)
	
	Элементы.ПодключаемоеОборудование.Доступность = Не Объект.ИспользоватьБезПодключенияОборудования;
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

////////////////////////////////////////////////////////////////////////////////
// Прочее

// Обработчик команды, создаваемой механизмом запрета редактирования ключевых реквизитов.
//
&НаКлиенте
Процедура Подключаемый_РазрешитьРедактированиеРеквизитовОбъекта(Команда)
	
	ОбщегоНазначенияУТКлиент.РазрешитьРедактированиеРеквизитовОбъекта(ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Функция АвтоНаименование()
	
	Элементы.Наименование.СписокВыбора.Очистить();
	
	Если Объект.ТипКассы <> ПредопределенноеЗначение("Перечисление.ТипыКассККМ.ККМOffline") Тогда
		СтрокаНаименования = "" + Объект.ТипКассы + " (" + Объект.Склад + ")";
	Иначе
		СтрокаНаименования = "" + Объект.ТипКассы + " (" + СкладПодключаемогоОборудования + ")";
	КонецЕсли;
	
	Элементы.Наименование.СписокВыбора.Добавить(СтрокаНаименования);
	
	Возврат СтрокаНаименования;

КонецФункции

&НаСервере
Процедура ЗаполнитьСкладПоПодключенномуОборудованию()
	
	УстановитьПривилегированныйРежим(Истина);
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	ПодключаемоеОборудование.ПравилоОбмена.Склад КАК Склад
	|ИЗ
	|	Справочник.ПодключаемоеОборудование КАК ПодключаемоеОборудование
	|ГДЕ
	|	ПодключаемоеОборудование.Ссылка = &ПодключаемоеОборудование");
	
	Запрос.УстановитьПараметр("ПодключаемоеОборудование", Объект.ПодключаемоеОборудование);
	
	Результат = Запрос.Выполнить();
	Выборка = Результат.Выбрать();
	
	Если Выборка.Следующий() Тогда
		СкладПодключаемогоОборудования = Выборка.Склад;
	Иначе
		СкладПодключаемогоОборудования = Неопределено;
	КонецЕсли;
	
КонецПроцедуры



