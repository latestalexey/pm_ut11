#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда


////////////////////////////////////////////////////////////////////////////////
// ПРОГРАММНЫЙ ИНТЕРФЕЙС

// Функция получает блокируемые реквизиты объекта.
//
Функция ПолучитьБлокируемыеРеквизитыОбъекта() Экспорт
	
	Результат = Новый Массив;
	Результат.Добавить("ВалютаДенежныхСредств");
	Результат.Добавить("Владелец");
	Результат.Добавить("Склад");
	Результат.Добавить("ТипКассы");
	
	Возврат Результат;
	
КонецФункции

// Функция определяет кассу кассу по умолчанию.
//
// Возвращает кассу ККМ, если найдена одна касса.
// Возвращает Неопределено, если касса не найдена или касс больше одной.
//
// Возвращаемое значение:
//	СправочникСсылка.КассыККМ - Найденная касса ККМ
//
Функция КассаККМФискальныйРегистраторПоУмолчанию() Экспорт
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ ПЕРВЫЕ 2
	|	КассыККМ.Ссылка КАК КассаККМ
	|ИЗ
	|	Справочник.КассыККМ КАК КассыККМ
	|ГДЕ
	|	КассыККМ.ТипКассы = ЗНАЧЕНИЕ(Перечисление.ТипыКассККМ.ФискальныйРегистратор)
	|	И НЕ КассыККМ.ПометкаУдаления
	|	И (КассыККМ.ИспользоватьБезПодключенияОборудования
	|	   ИЛИ КассыККМ.ПодключаемоеОборудование.РабочееМесто = &РабочееМесто)
	|");
	
	Запрос.Параметры.Вставить("РабочееМесто", МенеджерОборудованияСервер.ПолучитьРабочееМестоКлиента());
	
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Количество() = 1 
	   И Выборка.Следующий()
	Тогда
		КассаККМ = Выборка.КассаККМ;
	Иначе
		КассаККМ = Неопределено;
	КонецЕсли;
	
	Возврат КассаККМ;

КонецФункции

// Функция определяет кассу кассу по умолчанию.
//
// Возвращает кассу ККМ, если найдена одна касса.
// Возвращает Неопределено, если касса не найдена или касс больше одной.
//
// Возвращаемое значение:
//	СправочникСсылка.КассыККМ - Найденная касса ККМ
//
Функция АвтономнаяКассаККМПоУмолчанию() Экспорт
	
	Запрос = Новый Запрос("
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ ПЕРВЫЕ 2
	|	КассыККМ.Ссылка КАК КассаККМ
	|ИЗ
	|	Справочник.КассыККМ КАК КассыККМ
	|ГДЕ
	|	КассыККМ.ТипКассы = ЗНАЧЕНИЕ(Перечисление.ТипыКассККМ.АвтономнаяККМ)
	|	И НЕ КассыККМ.ПометкаУдаления
	|");
	
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Количество() = 1 
	   И Выборка.Следующий()
	Тогда
		КассаККМ = Выборка.КассаККМ;
	Иначе
		КассаККМ = Неопределено;
	КонецЕсли;
	
	Возврат КассаККМ;

КонецФункции

// Функция определяет валюту выбранной кассы ККМ.
//
// Параметры:
//  КассаККМ - СправочникСсылка.КассыККМ - Ссылка на кассу ККМ
//
// Возвращаемое значение:
//	Структура - Организация и Валюта выбранной кассы ККМ
//
Функция РеквизитыКассыККМ(КассаККМ) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	КассыККМ.Склад КАК Склад,
	|	КассыККМ.Владелец КАК Организация,
	|	КассыККМ.Склад.РозничныйВидЦены КАК ВидЦены,
	|	КассыККМ.Склад.РозничныйВидЦены.ЦенаВключаетНДС КАК ЦенаВключаетНДС,
	|	КассыККМ.ВалютаДенежныхСредств КАК Валюта,
	|	КассыККМ.ТипКассы КАК ТипКассы
	|ИЗ
	|	Справочник.КассыККМ КАК КассыККМ
	|ГДЕ
	|	КассыККМ.Ссылка = &КассаККМ";
	
	Запрос.УстановитьПараметр("КассаККМ", КассаККМ);
	
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда
		Склад           = Выборка.Склад;
		Организация     = Выборка.Организация;
		ВидЦены         = Выборка.ВидЦены;
		ЦенаВключаетНДС = Выборка.ЦенаВключаетНДС;
		Валюта          = Выборка.Валюта;
		ТипКассы        = Выборка.ТипКассы;
	Иначе
		Склад           = Неопределено;
		Организация     = Неопределено;
		ВидЦены         = Неопределено;
		ЦенаВключаетНДС = Неопределено;
		Валюта          = Неопределено;
		ТипКассы        = Неопределено;
	КонецЕсли;
	
	СтруктураРеквизитов = Новый Структура("Склад, Организация, ВидЦены, ЦенаВключаетНДС, Валюта, ТипКассы",
		Склад,
		Организация,
		ВидЦены,
		ЦенаВключаетНДС,
		Валюта,
		ТипКассы
	);
	
	Возврат СтруктураРеквизитов;

КонецФункции

// Функция выполняет получение параметров кассы ККМ.
//
Функция ПараметрыКассыККМ(КассаККМ) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ВЫБОР
	|		КОГДА КассыККМ.ТипКассы = ЗНАЧЕНИЕ(Перечисление.ТипыКассККМ.ФискальныйРегистратор)
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК ЭтоФискальныйРегистратор,
	|	КассыККМ.ПодключаемоеОборудование               КАК ИдентификаторУстройства,
	|	КассыККМ.ИспользоватьБезПодключенияОборудования КАК ИспользоватьБезПодключенияОборудования
	|ИЗ
	|	Справочник.КассыККМ КАК КассыККМ
	|ГДЕ
	|	КассыККМ.Ссылка = &Ссылка";
	
	Запрос.УстановитьПараметр("Ссылка", КассаККМ);
	
	Результат = Запрос.Выполнить();
	Выборка = Результат.Выбрать();
	
	Если Выборка.Следующий() Тогда
		
		Возврат Новый Структура("ИдентификаторУстройства,
		                       |ИспользоватьБезПодключенияОборудования,
		                       |ЭтоФискальныйРегистратор",
		                       Выборка.ИдентификаторУстройства,
		                       Выборка.ИспользоватьБезПодключенияОборудования,
		                       Выборка.ЭтоФискальныйРегистратор
		        );
		
	Иначе
		
		Возврат Новый Структура("ИдентификаторУстройства,
		                        |ИспользоватьБезПодключенияОборудования,
		                        |ЭтоФискальныйРегистратор",
		                        Справочники.ПодключаемоеОборудование.ПустаяСсылка(),
		                        Ложь,
		                        Ложь
		        );
		
	КонецЕсли;
	
КонецФункции // ПолучитьПараметрыКассыККМ()



#КонецЕсли