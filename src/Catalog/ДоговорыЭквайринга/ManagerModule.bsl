#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда


///////////////////////////////////////////////////////////////////////////////
// ПРОГРАММНЫЙ ИНТЕРФЕЙС

// Возвращает имена блокруемых реквизитов для механизма блокирования реквизитов БСП
//
// Возвращаемое значание:
//	Массив - имена блокируемых реквизитов
//
Функция ПолучитьБлокируемыеРеквизитыОбъекта() Экспорт
	Результат = Новый Массив;
	Результат.Добавить("БанковскийСчет");
	Возврат Результат;
КонецФункции

// Функция определяет организацию и валюту выбранного договора эквайринга.
//
// Параметры:
//  ДоговорыЭквайринга - СправочникСсылка.ДоговорыЭквайринга - Ссылка на договор эквайринга
//
// Возвращое значение:
//	Структура - Организация и Валюта договора эквайринга
//
Функция ПолучитьРеквизитыДоговораЭквайринга(ДоговорыЭквайринга) Экспорт
	
	Запрос = Новый Запрос("
	|ВЫБРАТЬ
	|	ДоговорыЭквайринга.Организация КАК Организация,
	|	ДоговорыЭквайринга.БанковскийСчет.ВалютаДенежныхСредств КАК Валюта
	|ИЗ
	|	Справочник.ДоговорыЭквайринга КАК ДоговорыЭквайринга
	|ГДЕ
	|	ДоговорыЭквайринга.Ссылка = &ДоговорыЭквайринга
	|");
	
	Запрос.УстановитьПараметр("ДоговорыЭквайринга", ДоговорыЭквайринга);
	
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда
		Организация = Выборка.Организация;
		Валюта = Выборка.Валюта;
	Иначе
		Организация = Неопределено;
		Валюта = Неопределено;
	КонецЕсли;
	
	СтруктураРеквизитов = Новый Структура("Организация, Валюта",
		Организация,
		Валюта
	);
	
	Возврат СтруктураРеквизитов;
	
КонецФункции

// Процедура получения списка видов платежных карт, обслуживаемых по договору эквайринга
//
// Параметры:
//  ДоговорыЭквайринга - СправочникСсылка.ДоговорыЭквайринга - Ссылка на договор эквайринга
//
// Возвращое значение:
//	Массив - Массив видов платежных карт
//
Функция ВидыПлатежныхКарт(ДоговорЭквайринга) Экспорт
	
	МассивВидовПлатежныхКарт = Новый Массив;
	
	Если ЗначениеЗаполнено(ДоговорЭквайринга) Тогда
		
		Запрос = Новый Запрос("
		|ВЫБРАТЬ
		|	ВидыПлатежныхКарт.ВидПлатежнойКарты КАК ВидПлатежнойКарты
		|ИЗ
		|	Справочник.ДоговорыЭквайринга.ВидыПлатежныхКарт КАК ВидыПлатежныхКарт
		|ГДЕ
		|	ВидыПлатежныхКарт.Ссылка = &Ссылка
		|");
		
		Запрос.УстановитьПараметр("Ссылка", ДоговорЭквайринга);
		
		Выборка = Запрос.Выполнить().Выбрать();
		Пока Выборка.Следующий() Цикл
			МассивВидовПлатежныхКарт.Добавить(Выборка.ВидПлатежнойКарты);
		КонецЦикла;
		
	КонецЕсли;
	
	Возврат МассивВидовПлатежныхКарт;
	
КонецФункции

// Получает договор эквайринга для выбранной организации.
//
// Параметры:
//	Организация - СправочникСсылка.Организации - Выбранная организация
//
// Возвращаемое значение:
//	СправочникСсылка.ДоговорыЭквайринга - Найденный договор
//
Функция ПолучитьДоговорЭквайрингаПоУмолчанию(Организация) Экспорт
	
	Запрос = Новый Запрос("
	|ВЫБРАТЬ ПЕРВЫЕ 2
	|	ДоговорыЭквайринга.Ссылка КАК ДоговорЭквайрига
	|ИЗ
	|	Справочник.ДоговорыЭквайринга КАК ДоговорыЭквайринга
	|ГДЕ
	|	Не ДоговорыЭквайринга.ПометкаУдаления
	|	И (ДоговорыЭквайринга.Организация = &Организация
	|		ИЛИ &Организация = Неопределено)
	|");
	Запрос.УстановитьПараметр("Организация", ?(ЗначениеЗаполнено(Организация), Организация, Неопределено));
	
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Количество() = 1 
	   И Выборка.Следующий()
	Тогда
		ДоговорЭквайрига = Выборка.ДоговорЭквайрига;
	Иначе
		ДоговорЭквайрига = Справочники.ДоговорыЭквайринга.ПустаяСсылка();
	КонецЕсли;
	
	Возврат ДоговорЭквайрига;

КонецФункции

// Функция получения списка видов платежных карт, обслуживаемых эквайринговым терминалом.
//
// Параметры:
//	Терминал - СправочникСсылка.ЭквайринговыеТерминалы - Эквайринговый терминал
//
// Возвращаемое значение:
//	Массив - Массив видов платежных карт	
//
Функция ВидыПлатежныхКартПоТерминалу(Терминал) Экспорт
	
	МассивВидовПлатежныхКарт = Новый Массив;

	Если ЗначениеЗаполнено(Терминал) Тогда
		Реквизиты = Справочники.ЭквайринговыеТерминалы.ПолучитьРеквизитыЭквайринговогоТерминала(Терминал);
		МассивВидовПлатежныхКарт = ВидыПлатежныхКарт(Реквизиты.ДоговорЭквайринга);
	КонецЕсли;
	
	Возврат МассивВидовПлатежныхКарт;

КонецФункции
#КонецЕсли