#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда


///////////////////////////////////////////////////////////////////////////////
// ПРОГРАММНЫЙ ИНТЕРФЕЙС

// Процедура устанавливает пометку на удаление для найденных элементов справочника.
//
// Параметры:
//	СтруктураПараметров - Структура - Параметры выбора элементов справочника
//	ПометкаУдаления - Булево - Признак установки пометки на удаление
//
Процедура УстановитьПометкуУдаления(СтруктураПараметров, ПометкаУдаления) Экспорт

	УстановитьПривилегированныйРежим(Истина);

	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	Таблица.Ссылка КАК Ссылка
	|ИЗ
	|	Справочник.КлючиАналитикиУчетаНоменклатуры КАК Таблица
	|ГДЕ
	|	Таблица.ПометкаУдаления <> &ПометкаУдаления
	|";
	Запрос = Новый Запрос;
	Если СтруктураПараметров.Свойство("Номенклатура") Тогда

		Запрос.УстановитьПараметр("Номенклатура", СтруктураПараметров.Номенклатура);
		ТекстЗапроса = ТекстЗапроса + " И Таблица.Номенклатура = &Номенклатура";

	КонецЕсли;
	Если СтруктураПараметров.Свойство("Характеристика") Тогда

		Запрос.УстановитьПараметр("Характеристика", СтруктураПараметров.Характеристика);
		ТекстЗапроса = ТекстЗапроса + " И Таблица.Характеристика = &Характеристика";

	КонецЕсли;
	Если СтруктураПараметров.Свойство("Склад") Тогда

		Запрос.УстановитьПараметр("Склад", СтруктураПараметров.Склад);
		ТекстЗапроса = ТекстЗапроса + " И Таблица.Склад = &Склад";

	КонецЕсли;
	Запрос.УстановитьПараметр("ПометкаУдаления", ПометкаУдаления);

	Запрос.Текст = ТекстЗапроса;
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл

		Выборка.Ссылка.ПолучитьОбъект().УстановитьПометкуУдаления(ПометкаУдаления);

	КонецЦикла;

КонецПроцедуры

///////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

///////////////////////////////////////////////////////////////////////////////
// Замена дублей ключей аналитики

Процедура ЗаменитьДублиКлючейАналитики() Экспорт
	
	Запрос = Новый Запрос("
	|ВЫБРАТЬ
	|	ДанныеСправочника.Ссылка КАК Ссылка,
	|	ДанныеСправочника.ПометкаУдаления КАК ПометкаУдаления,
	|	Аналитика.КлючАналитики КАК КлючАналитики
	|ИЗ
	|	Справочник.КлючиАналитикиУчетаНоменклатуры КАК ДанныеСправочника
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РегистрСведений.АналитикаУчетаНоменклатуры КАК ДанныеРегистра
	|	ПО
	|		ДанныеСправочника.Ссылка = ДанныеРегистра.КлючАналитики
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		РегистрСведений.АналитикаУчетаНоменклатуры КАК Аналитика
	|	ПО
	|		ДанныеСправочника.Номенклатура		= Аналитика.Номенклатура
	|		И ДанныеСправочника.Характеристика	= Аналитика.Характеристика
	|		И ДанныеСправочника.Склад			= Аналитика.Склад
	|ГДЕ
	|	ДанныеРегистра.КлючАналитики ЕСТЬ NULL
	|");
	
	// Сформируем соответствие ключей аналитики.
	СоответствиеАналитик = Новый Соответствие;
	МассивАналитик = Новый Массив;
	
	РезультатЗапроса = Запрос.Выполнить();
	Если Не РезультатЗапроса.Пустой() Тогда
	
		Выборка = РезультатЗапроса.Выбрать();
		Пока Выборка.Следующий() Цикл
			
			СоответствиеАналитик.Вставить(Выборка.Ссылка, Выборка.КлючАналитики);
			МассивАналитик.Добавить(Выборка.Ссылка);
			
			Если Не Выборка.ПометкаУдаления Тогда
				СправочникОбъект = Выборка.Ссылка.ПолучитьОбъект();
				Попытка
					СправочникОбъект.УстановитьПометкуУдаления(Истина, Ложь);
				Исключение
				КонецПопытки;
			КонецЕсли;

		КонецЦикла;
		
		// Замена ключа аналитики в регистре "НДС документы для распределения"
		ЗаменитьАналитикуВНезависимомРегистреСведений(МассивАналитик, СоответствиеАналитик, РегистрыСведений.НДСДокументыДляРаспределения);
	
		Запрос = Новый Запрос("
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ДанныеРегистра.Регистратор КАК Регистратор
		|ИЗ
		|	РегистрНакопления.СебестоимостьТоваров КАК ДанныеРегистра
		|ГДЕ
		|	ДанныеРегистра.АналитикаУчетаНоменклатуры В (&МассивАналитик)
		|
		|ОБЪЕДИНИТЬ
		|
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ДанныеРегистра.Регистратор КАК Регистратор
		|ИЗ
		|	РегистрНакопления.СебестоимостьТоваров КАК ДанныеРегистра
		|ГДЕ
		|	ДанныеРегистра.КорАналитикаУчетаНоменклатуры В (&МассивАналитик)
		|;
		|////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ДанныеРегистра.Регистратор КАК Регистратор
		|ИЗ
		|	РегистрНакопления.ВыручкаИСебестоимостьПродаж КАК ДанныеРегистра
		|ГДЕ
		|	ДанныеРегистра.АналитикаУчетаНоменклатуры В (&МассивАналитик)
		|;
		|////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ДанныеРегистра.Регистратор КАК Регистратор
		|ИЗ
		|	РегистрНакопления.ПланыПродажИВнутреннегоПотребления КАК ДанныеРегистра
		|ГДЕ
		|	ДанныеРегистра.АналитикаУчетаНоменклатуры В (&МассивАналитик)
		|;
		|////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ДанныеРегистра.Регистратор КАК Регистратор
		|ИЗ
		|	РегистрНакопления.ПартииЗатратНаВыпуск КАК ДанныеРегистра
		|ГДЕ
		|	ДанныеРегистра.АналитикаУчетаНоменклатуры В (&МассивАналитик)
		|;
		|////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ДанныеРегистра.Регистратор КАК Регистратор
		|ИЗ
		|	РегистрНакопления.ПартииРасходовНаСебестоимостьТоваров КАК ДанныеРегистра
		|ГДЕ
		|	ДанныеРегистра.АналитикаУчетаНоменклатуры В (&МассивАналитик)
		|;
		|////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ДанныеРегистра.Регистратор КАК Регистратор
		|ИЗ
		|	РегистрНакопления.ПартииТоваровОрганизаций КАК ДанныеРегистра
		|ГДЕ
		|	ДанныеРегистра.АналитикаУчетаНоменклатуры В (&МассивАналитик)
		|;
		|////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ДанныеРегистра.Регистратор КАК Регистратор
		|ИЗ
		|	РегистрНакопления.ПартииТоваровПереданныеНаКомиссию КАК ДанныеРегистра
		|ГДЕ
		|	ДанныеРегистра.АналитикаУчетаНоменклатуры В (&МассивАналитик)
		|;
		|////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ДанныеРегистра.Регистратор КАК Регистратор
		|ИЗ
		|	РегистрНакопления.ПроизводственныеЗатраты КАК ДанныеРегистра
		|ГДЕ
		|	ДанныеРегистра.АналитикаУчетаНоменклатуры В (&МассивАналитик)
		|;
		|////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ДанныеРегистра.Регистратор КАК Регистратор
		|ИЗ
		|	РегистрНакопления.ПрочиеРасходы КАК ДанныеРегистра
		|ГДЕ
		|	ДанныеРегистра.АналитикаУчетаНоменклатуры В (&МассивАналитик)
		|;
		|////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ДанныеРегистра.Регистратор КАК Регистратор
		|ИЗ
		|	РегистрНакопления.ТоварыОрганизаций КАК ДанныеРегистра
		|ГДЕ
		|	ДанныеРегистра.АналитикаУчетаНоменклатуры В (&МассивАналитик)
		|;
		|////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ДанныеРегистра.Регистратор КАК Регистратор
		|ИЗ
		|	РегистрНакопления.ТоварыПереданныеНаКомиссию КАК ДанныеРегистра
		|ГДЕ
		|	ДанныеРегистра.АналитикаУчетаНоменклатуры В (&МассивАналитик)
		|;
		|////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ДанныеРегистра.Регистратор КАК Регистратор
		|ИЗ
		|	РегистрСведений.СтоимостьТоваров КАК ДанныеРегистра
		|ГДЕ
		|	ДанныеРегистра.АналитикаУчетаНоменклатуры В (&МассивАналитик)
		|;
		|////////////////////////////////////////////////////////////////////////////
		|");
		Запрос.УстановитьПараметр("МассивАналитик", МассивАналитик);
		МассивРезультатов = Запрос.ВыполнитьПакет();
		РезультатЗапросаСебестоимость 				= МассивРезультатов[0];
		РезультатЗапросаВыручка 					= МассивРезультатов[1];
		РезультатЗапросаПланы 						= МассивРезультатов[2];
		РезультатЗапросаПартииЗатрат 				= МассивРезультатов[3];
		РезультатЗапросаПартииРасходов				= МассивРезультатов[4];
		РезультатЗапросаПартииТоваров				= МассивРезультатов[5];
		РезультатЗапросаПартииНаКомиссии			= МассивРезультатов[6];
		РезультатЗапросаЗатраты						= МассивРезультатов[7];
		РезультатЗапросаПрочиеРасходы				= МассивРезультатов[8];
		РезультатЗапросаТовары						= МассивРезультатов[9];
		РезультатЗапросаТоварыНаКомиссии			= МассивРезультатов[10];
		РезультатЗапросаСтоимость					= МассивРезультатов[11];
	
		// Заменим дубли аналитики в регистре "Себестоимость товаров".
		Если Не РезультатЗапросаСебестоимость.Пустой() Тогда
			НаборЗаписей = РегистрыНакопления.СебестоимостьТоваров.СоздатьНаборЗаписей();
			ЗаменитьАналитикуВНабореЗаписей(
				РезультатЗапросаСебестоимость,
				СоответствиеАналитик,
				НаборЗаписей,
				Истина // ЕстьКорАналитика
			);
		КонецЕсли;
		
		// Заменим дубли аналитики в регистре "Выручка и себестоимость продаж".
		Если Не РезультатЗапросаВыручка.Пустой() Тогда
			НаборЗаписей = РегистрыНакопления.ВыручкаИСебестоимостьПродаж.СоздатьНаборЗаписей();
			ЗаменитьАналитикуВНабореЗаписей(РезультатЗапросаВыручка, СоответствиеАналитик, НаборЗаписей);
		КонецЕсли;
		
		// Заменим дубли аналитики в регистре "Планы продаж".
		Если Не РезультатЗапросаПланы.Пустой() Тогда
			НаборЗаписей = РегистрыНакопления.ПланыПродажИВнутреннегоПотребления.СоздатьНаборЗаписей();
			ЗаменитьАналитикуВНабореЗаписей(РезультатЗапросаПланы, СоответствиеАналитик, НаборЗаписей);
		КонецЕсли;
		
		// Заменим дубли аналитики в регистре "Партии затрат на выпуск".
		Если Не РезультатЗапросаПартииЗатрат.Пустой() Тогда
			НаборЗаписей = РегистрыНакопления.ПартииЗатратНаВыпуск.СоздатьНаборЗаписей();
			ЗаменитьАналитикуВНабореЗаписей(РезультатЗапросаПартииЗатрат, СоответствиеАналитик, НаборЗаписей);
		КонецЕсли;
		
		// Заменим дубли аналитики в регистре "Партии прочих расходов".
		Если Не РезультатЗапросаПартииРасходов.Пустой() Тогда
			НаборЗаписей = РегистрыНакопления.ПартииПрочихРасходов.СоздатьНаборЗаписей();
			ЗаменитьАналитикуВНабореЗаписей(РезультатЗапросаПартииРасходов, СоответствиеАналитик, НаборЗаписей);
		КонецЕсли;
		
		// Заменим дубли аналитики в регистре "Партии товаров организаций".
		Если Не РезультатЗапросаПартииТоваров.Пустой() Тогда
			НаборЗаписей = РегистрыНакопления.ПартииТоваровОрганизаций.СоздатьНаборЗаписей();
			ЗаменитьАналитикуВНабореЗаписей(РезультатЗапросаПартииТоваров, СоответствиеАналитик, НаборЗаписей);
		КонецЕсли;
		
		// Заменим дубли аналитики в регистре "Партии товаров переданные на комиссию".
		Если Не РезультатЗапросаПартииНаКомиссии.Пустой() Тогда
			НаборЗаписей = РегистрыНакопления.ПартииТоваровПереданныеНаКомиссию.СоздатьНаборЗаписей();
			ЗаменитьАналитикуВНабореЗаписей(РезультатЗапросаПартииНаКомиссии, СоответствиеАналитик, НаборЗаписей);
		КонецЕсли;
		
		// Заменим дубли аналитики в регистре "Производственные затраты".
		Если Не РезультатЗапросаЗатраты.Пустой() Тогда
			НаборЗаписей = РегистрыНакопления.ПроизводственныеЗатраты.СоздатьНаборЗаписей();
			ЗаменитьАналитикуВНабореЗаписей(РезультатЗапросаЗатраты, СоответствиеАналитик, НаборЗаписей);
		КонецЕсли;
		
		// Заменим дубли аналитики в регистре "Прочие расходы".
		Если Не РезультатЗапросаПрочиеРасходы.Пустой() Тогда
			НаборЗаписей = РегистрыНакопления.ПрочиеРасходы.СоздатьНаборЗаписей();
			ЗаменитьАналитикуВНабореЗаписей(РезультатЗапросаПрочиеРасходы, СоответствиеАналитик, НаборЗаписей);
		КонецЕсли;
		
		// Заменим дубли аналитики в регистре "Товары организаций".
		Если Не РезультатЗапросаТовары.Пустой() Тогда
			НаборЗаписей = РегистрыНакопления.ТоварыОрганизаций.СоздатьНаборЗаписей();
			ЗаменитьАналитикуВНабореЗаписей(РезультатЗапросаТовары, СоответствиеАналитик, НаборЗаписей);
		КонецЕсли;
		
		// Заменим дубли аналитики в регистре "Товары переданные на комиссию".
		Если Не РезультатЗапросаТоварыНаКомиссии.Пустой() Тогда
			НаборЗаписей = РегистрыНакопления.ТоварыПереданныеНаКомиссию.СоздатьНаборЗаписей();
			ЗаменитьАналитикуВНабореЗаписей(РезультатЗапросаТоварыНаКомиссии, СоответствиеАналитик, НаборЗаписей);
		КонецЕсли;
		
		// Заменим дубли аналитики в регистре "Стоимость товаров".
		Если Не РезультатЗапросаСтоимость.Пустой() Тогда
			НаборЗаписей = РегистрыСведений.СтоимостьТоваров.СоздатьНаборЗаписей();
			ЗаменитьАналитикуВНабореЗаписей(РезультатЗапросаСтоимость, СоответствиеАналитик, НаборЗаписей);
		КонецЕсли;
		
	КонецЕсли;
		
КонецПроцедуры

///////////////////////////////////////////////////////////////////////////////
// Прочее

Процедура ЗаменитьАналитикуВНабореЗаписей(РезультатЗапроса, СоответствиеАналитик, НаборЗаписей, ЕстьКорАналитика = Ложь)
	
	Выборка = РезультатЗапроса.Выбрать();
	Пока Выборка.Следующий() Цикл
	
		НаборЗаписей.Отбор.Регистратор.Установить(Выборка.Регистратор);
		
		НаборЗаписей.Прочитать();
		
		ЗаписыватьНабор = Ложь;
		
		Для Каждого Запись Из НаборЗаписей Цикл
			
			АналитикаУчетаНоменклатуры = СоответствиеАналитик[Запись.АналитикаУчетаНоменклатуры];
			Если ЗначениеЗаполнено(АналитикаУчетаНоменклатуры) Тогда
				Запись.АналитикаУчетаНоменклатуры = АналитикаУчетаНоменклатуры;
				ЗаписыватьНабор = Истина;
			КонецЕсли;
			
			Если ЕстьКорАналитика Тогда
				КорАналитикаУчетаНоменклатуры = СоответствиеАналитик[Запись.КорАналитикаУчетаНоменклатуры];
				Если ЗначениеЗаполнено(КорАналитикаУчетаНоменклатуры) Тогда
					Запись.КорАналитикаУчетаНоменклатуры = КорАналитикаУчетаНоменклатуры;
					ЗаписыватьНабор = Истина;
				КонецЕсли;
			КонецЕсли;
			
		КонецЦикла;
		
		Если ЗаписыватьНабор Тогда
			НаборЗаписей.Записать(Истина);
		КонецЕсли;

	КонецЦикла;
	
КонецПроцедуры

Процедура ЗаменитьАналитикуВНезависимомРегистреСведений(МассивАналитик, СоответствиеАналитик, Регистр)
	
	Для Каждого ТекущаяАналитика Из МассивАналитик Цикл 
		
		НаборЗаписей = Регистр.СоздатьНаборЗаписей();
		НаборЗаписей.Отбор.АналитикаУчетаНоменклатуры.Установить(ТекущаяАналитика);
		
		НаборЗаписей.Прочитать();
		
		ЗаписыватьНабор = Ложь;
		
		Для Каждого Запись Из НаборЗаписей Цикл
			
			АналитикаУчетаНоменклатуры = СоответствиеАналитик[Запись.АналитикаУчетаНоменклатуры];
			Если ЗначениеЗаполнено(АналитикаУчетаНоменклатуры) Тогда
				Запись.АналитикаУчетаНоменклатуры = АналитикаУчетаНоменклатуры;
				ЗаписыватьНабор = Истина;
			КонецЕсли;
				
		КонецЦикла;
		
		Если ЗаписыватьНабор Тогда
			НаборЗаписей.Записать(Истина);
		КонецЕсли;
			
	КонецЦикла;
	
КонецПроцедуры

#КонецЕсли
