
///////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)

	// Пропускаем инициализацию, чтобы гарантировать получение формы при передаче параметра "АвтоТест".
	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;
	КонецЕсли;
	
	Организация = Параметры.Организация;
	Склад = Параметры.Склад;
	ЦенаВключетНДС = Параметры.ЦенаВключаетНДС;
	АдресТоваровВХранилище = Параметры.АдресТоваровВХранилище;
	АдресВидовЗапасовВХранилище = Параметры.АдресВидовЗапасовВХранилище;
	РедактироватьВидыЗапасов = Параметры.РедактироватьВидыЗапасов;
	ДокументМодифицирован = Параметры.ДокументМодифицирован;
	ВидыЗапасовУказаныВручную = Параметры.ВидыЗапасовУказаныВручную;
	
	Элементы.ДеревоВидовЗапасов.ТолькоПросмотр = Не РедактироватьВидыЗапасов;
	Элементы.ГруппаДерево.Видимость = РедактироватьВидыЗапасов;
	Элементы.ГруппаФормыДерево.Видимость = РедактироватьВидыЗапасов;
	Элементы.ГруппаФормы.Видимость = Не РедактироватьВидыЗапасов;
	Элементы.ПеренестиВДокумент.Видимость = РедактироватьВидыЗапасов;
	
	Элементы.КартинкаВнимание.Видимость = ДокументМодифицирован;
	Элементы.НадписьДокументМодифицирован.Видимость = ДокументМодифицирован;
	
	Элементы.ПереключитьРедактированиеВидовЗапасов.Видимость = РедактироватьВидыЗапасов И ЗначениеЗаполнено(ВидыЗапасовУказаныВручную);
	НастроитьРедактированиеВидовЗапасов(Элементы.ПереключитьРедактированиеВидовЗапасов.Видимость И ВидыЗапасовУказаныВручную);
	
	Элементы.ДеревоВидовЗапасовДокументРеализации.Видимость = Параметры.Свойство("ОтображатьДокументРеализации") И Параметры.ОтображатьДокументРеализации;
	
	Если ЗначениеЗаполнено(ВидыЗапасовУказаныВручную) Тогда
		РедактироватьВидыЗапасов = ВидыЗапасовУказаныВручную;
	КонецЕсли;
	
	Если Не Элементы.ПереключитьРедактированиеВидовЗапасов.Видимость Тогда
		ЗаполнитьДеревоВидовЗапасов();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	ЭлементыДерева = ДеревоВидовЗапасов.ПолучитьЭлементы();
	Для Каждого ЭлементДерева Из ЭлементыДерева Цикл
		Если ЭлементДерева.ПолучитьРодителя() = Неопределено Тогда
			Элементы.ДеревоВидовЗапасов.Развернуть(ЭлементДерева.ПолучитьИдентификатор());
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

///////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ ШАПКИ ФОРМЫ

&НаКлиенте
Процедура ДеревоВидовЗапасовВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	Если Элемент.ТекущиеДанные.Свойство(Поле.Имя) Тогда
		Значение = Неопределено;
		Если Поле.Имя = "НомерСтроки" Тогда
			Если ЗначениеЗаполнено(Элемент.ТекущиеДанные.Номенклатура) Тогда
				Значение = Элемент.ТекущиеДанные.Номенклатура;
			Иначе
				Значение = Элемент.ТекущиеДанные.НоменклатураВидыЗапасов;
			КонецЕсли;
			СтандартнаяОбработка = Ложь;
		ИначеЕсли Не РедактироватьВидыЗапасов Тогда
			Значение = Элемент.ТекущиеДанные[Поле.Имя];
		КонецЕсли;
		Если ЗначениеЗаполнено(Значение) Тогда
			ОткрытьЗначение(Значение);
		КонецЕсли;
	ИначеЕсли Не РедактироватьВидыЗапасов Тогда
		Если ЗначениеЗаполнено(Элемент.ТекущиеДанные.ВидЗапасов) Тогда
			ОткрытьЗначение(Элемент.ТекущиеДанные.ВидЗапасов);
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ДеревоВидовЗапасовПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа)
	
	СтрокаРодитель = Элемент.ТекущиеДанные.ПолучитьРодителя();
	Если Не Копирование
	 И СтрокаРодитель <> Неопределено Тогда
	 
		Отказ = Истина;
		Элемент.ТекущаяСтрока = СтрокаРодитель.ПолучитьИдентификатор();
		Элемент.ДобавитьСтроку();
		
	ИначеЕсли Копирование
	 И СтрокаРодитель = Неопределено Тогда
	 
		Отказ = Истина;
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ДеревоВидовЗапасовПередУдалением(Элемент, Отказ)
	
	СтрокаТаблицы = Элемент.ТекущиеДанные;
	Если СтрокаТаблицы.ПолучитьРодителя() = Неопределено Тогда
		Предупреждение(НСтр("ru = 'Корневую строку дерева удалять нельзя'"));
		Отказ = Истина;
	КонецЕсли;
	
	Если Не Отказ Тогда
		СтрокаРодитель = СтрокаТаблицы.ПолучитьРодителя();
		СтрокаРодитель.КоличествоВидыЗапасов = 0;
		Для Каждого Строка Из СтрокаРодитель.ПолучитьЭлементы() Цикл
			СтрокаРодитель.КоличествоВидыЗапасов = СтрокаРодитель.КоличествоВидыЗапасов + Строка.Количество;
		КонецЦикла;
		СтрокаРодитель.КоличествоВидыЗапасов = СтрокаРодитель.КоличествоВидыЗапасов - СтрокаТаблицы.Количество;
		ЗаполнитьПолеИнформации(СтрокаРодитель);
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ДеревоВидовЗапасовПриНачалеРедактирования(Элемент, НоваяСтрока, Копирование)
	
	Если НоваяСтрока И Не Копирование Тогда
		
		СтрокаТаблицы = Элемент.ТекущиеДанные;
		СтрокаРодитель = СтрокаТаблицы.ПолучитьРодителя();
		
		СуммаВидыЗапасов = 0;
		СуммаНДСВидыЗапасов = 0;
		КоличествоВидыЗапасов = 0;
		СтрокиДерева = СтрокаРодитель.ПолучитьЭлементы();
		Для Каждого Строка Из СтрокиДерева Цикл
			КоличествоВидыЗапасов = КоличествоВидыЗапасов + Строка.Количество;
			СуммаВидыЗапасов = СуммаВидыЗапасов + Строка.СуммаСНДС;
			СуммаНДСВидыЗапасов = СуммаНДСВидыЗапасов + Строка.СуммаНДС;
		КонецЦикла;
		СтрокаРодитель.КоличествоВидыЗапасов = СтрокаРодитель.Количество;
		ЗаполнитьПолеИнформации(СтрокаРодитель);
		
		СтрокаТаблицы.НоменклатураВидыЗапасов = СтрокаРодитель.Номенклатура;
		СтрокаТаблицы.ХарактеристикаВидыЗапасов = СтрокаРодитель.Характеристика;
		СтрокаТаблицы.СтавкаНДС = СтрокаРодитель.СтавкаНДС;
		СтрокаТаблицы.Количество = СтрокаРодитель.Количество - КоличествоВидыЗапасов;
		СтрокаТаблицы.СуммаСНДС = СтрокаРодитель.СуммаСНДС - СуммаВидыЗапасов;
		СтрокаТаблицы.СуммаНДС = СтрокаРодитель.СуммаНДС - СуммаНДСВидыЗапасов;
		
		СтрокаТаблицы.ДокументРеализации = СтрокаРодитель.ДокументРеализации;
		Если ЗначениеЗаполнено(СтрокаРодитель.ДокументРеализации) Тогда
			СтрокаТаблицы.СкладОтгрузки = Склад;
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ДеревоВидовЗапасовКоличествоПриИзменении(Элемент)
	
	СтрокаТаблицы = Элементы.ДеревоВидовЗапасов.ТекущиеДанные;
	СтрокаРодитель = СтрокаТаблицы.ПолучитьРодителя();
	
	Если СтрокаРодитель.Количество <> 0 Тогда
		СтрокаТаблицы.СуммаСНДС = Окр(СтрокаТаблицы.Количество * СтрокаРодитель.СуммаСНДС / СтрокаРодитель.Количество, 2, РежимОкругления.Окр15как20);
	Иначе
		СтрокаТаблицы.СуммаСНДС = 0;
	КонецЕсли;
	
	Если СтрокаРодитель.СуммаСНДС <> 0 Тогда
		СтрокаТаблицы.СуммаНДС = Окр(СтрокаТаблицы.СуммаСНДС * СтрокаРодитель.СуммаНДС / СтрокаРодитель.СуммаСНДС, 2, РежимОкругления.Окр15как20);
	Иначе
		СтрокаТаблицы.СуммаНДС = 0;
	КонецЕсли;
	
	СтрокаРодитель.КоличествоВидыЗапасов = 0;
	Для Каждого Строка Из СтрокаРодитель.ПолучитьЭлементы() Цикл
		СтрокаРодитель.КоличествоВидыЗапасов = СтрокаРодитель.КоличествоВидыЗапасов + Строка.Количество;
	КонецЦикла;
	ЗаполнитьПолеИнформации(СтрокаРодитель);
	
КонецПроцедуры

///////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ КОМАНД ФОРМЫ

&НаКлиенте
Процедура ПереключитьРедактированиеВидовЗапасов(Команда)
	
	НастроитьРедактированиеВидовЗапасов(Не ВидыЗапасовУказаныВручную);
	
КонецПроцедуры

&НаКлиенте
Процедура ПеренестиВДокумент(Команда)
	
	ПоместитьВидыЗапасовВХранилище();
	Закрыть(КодВозвратаДиалога.OK);
	
	ОповеститьОВыборе(АдресВидовЗапасовВХранилище);
	
КонецПроцедуры

///////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

///////////////////////////////////////////////////////////////////////////////
// Управление элементами формы

&НаСервере
Процедура НастроитьРедактированиеВидовЗапасов(РедактированиеВключено)
	
	Если Элементы.ПереключитьРедактированиеВидовЗапасов.Видимость Тогда
		ВидыЗапасовУказаныВручную = РедактированиеВключено;
		РедактироватьВидыЗапасов = РедактированиеВключено;
		Элементы.ПереключитьРедактированиеВидовЗапасов.Пометка = ВидыЗапасовУказаныВручную;
		Элементы.ДеревоВидовЗапасов.ТолькоПросмотр = Не РедактированиеВключено;
		
		ЗаполнитьДеревоВидовЗапасов();
	КонецЕсли;
	
КонецПроцедуры

///////////////////////////////////////////////////////////////////////////////
// Прочее

&НаСервере
Процедура ПоместитьВидыЗапасовВХранилище() 
	
	ТаблицаВидыЗапасов = ПолучитьИзВременногоХранилища(АдресВидовЗапасовВХранилище).СкопироватьКолонки();
	ЕстьСуммаСНДС = (ТаблицаВидыЗапасов.Колонки.Найти("СуммаСНДС") <> Неопределено);
	ЕстьСуммаНДС = (ТаблицаВидыЗапасов.Колонки.Найти("СуммаНДС") <> Неопределено);
	ЕстьСтавкаНДС = (ТаблицаВидыЗапасов.Колонки.Найти("СтавкаНДС") <> Неопределено);
	ЕстьСклад = (ТаблицаВидыЗапасов.Колонки.Найти("Склад") <> Неопределено);
	ЕстьСкладОтгрузки = (ТаблицаВидыЗапасов.Колонки.Найти("СкладОтгрузки") <> Неопределено);
	ЕстьДокументРеализации = (ТаблицаВидыЗапасов.Колонки.Найти("ДокументРеализации") <> Неопределено);
	
	Дерево = РеквизитФормыВЗначение("ДеревоВидовЗапасов");
	Для Каждого СтрокаНоменклатуры Из Дерево.Строки Цикл
		
		Для Каждого Строка Из СтрокаНоменклатуры.Строки Цикл
		
			НоваяСтрока = ТаблицаВидыЗапасов.Добавить();
			НоваяСтрока.Номенклатура = СтрокаНоменклатуры.Номенклатура;
			НоваяСтрока.Характеристика = СтрокаНоменклатуры.Характеристика;
			НоваяСтрока.ВидЗапасов = Строка.ВидЗапасов;
			НоваяСтрока.НомерГТД = Строка.НомерГТД;
			НоваяСтрока.Количество = Строка.Количество;
			Если ЕстьСуммаСНДС Тогда
				НоваяСтрока.СуммаСНДС = Строка.СуммаСНДС;
			КонецЕсли;
			Если ЕстьСуммаНДС Тогда
				НоваяСтрока.СуммаНДС = Строка.СуммаНДС;
			КонецЕсли;
			Если ЕстьСтавкаНДС Тогда
				НоваяСтрока.СтавкаНДС = Строка.СтавкаНДС;
			КонецЕсли;
			Если ЕстьСклад Тогда
				НоваяСтрока.Склад = Строка.Склад;
			КонецЕсли;
			Если ЕстьСкладОтгрузки Тогда
				НоваяСтрока.СкладОтгрузки = Строка.СкладОтгрузки;
			КонецЕсли;
			Если ЕстьДокументРеализации Тогда
				НоваяСтрока.ДокументРеализации = Строка.ДокументРеализации;
			КонецЕсли;
			
		КонецЦикла;
		
	КонецЦикла;

	ПоместитьВоВременноеХранилище(ТаблицаВидыЗапасов, АдресВидовЗапасовВХранилище);
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьДеревоВидовЗапасов()
	
	Запрос = Новый Запрос("
	|ВЫБРАТЬ
	|	ИсходнаяТаблицаДокумента.НомерСтроки КАК НомерСтроки,
	|	ИсходнаяТаблицаДокумента.Склад КАК Склад,
	|	ИсходнаяТаблицаДокумента.ДокументРеализации КАК ДокументРеализации,
	|	ИсходнаяТаблицаДокумента.Номенклатура КАК Номенклатура,
	|	ИсходнаяТаблицаДокумента.Характеристика КАК Характеристика,
	|	ИсходнаяТаблицаДокумента.Количество КАК Количество,
	|	ВЫБОР КОГДА ИсходнаяТаблицаДокумента.СуммаПродажи <> 0 ТОГДА
	|		ИсходнаяТаблицаДокумента.СуммаПродажи
	|	ИНАЧЕ
	|		ИсходнаяТаблицаДокумента.Сумма
	|	КОНЕЦ КАК Сумма,
	|	ВЫБОР КОГДА ИсходнаяТаблицаДокумента.СуммаПродажи <> 0 ТОГДА
	|		0
	|	ИНАЧЕ
	|		ИсходнаяТаблицаДокумента.СуммаНДС
	|	КОНЕЦ КАК СуммаНДС,
	|	ИсходнаяТаблицаДокумента.СтавкаНДС КАК СтавкаНДС
	|	
	|ПОМЕСТИТЬ ИсходнаяТаблицаДокумента
	|ИЗ
	|	&ИсходнаяТаблицаДокумента КАК ИсходнаяТаблицаДокумента
	|;
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	МАКСИМУМ(ИсходнаяТаблицаДокумента.НомерСтроки) КАК НомерСтроки,
	|	ИсходнаяТаблицаДокумента.Склад КАК Склад,
	|	ИсходнаяТаблицаДокумента.ДокументРеализации КАК ДокументРеализации,
	|	СправочникНоменклатура.Ссылка КАК Номенклатура,
	|	СправочникНоменклатура.ВестиУчетПоГТД КАК ВестиУчетПоГТД,
	|	ИсходнаяТаблицаДокумента.Характеристика КАК Характеристика,
	|	СУММА(ИсходнаяТаблицаДокумента.Количество) КАК Количество,
	|	СУММА(
	|		ИсходнаяТаблицаДокумента.Сумма
	|		+ &ЦенаНеВключаетНДС * ИсходнаяТаблицаДокумента.СуммаНДС
	|	) КАК СуммаСНДС,
	|	МАКСИМУМ(ИсходнаяТаблицаДокумента.СтавкаНДС) КАК СтавкаНДС,
	|	СУММА(ИсходнаяТаблицаДокумента.СуммаНДС) КАК СуммаНДС
	|	
	|ПОМЕСТИТЬ ТаблицаДокумента
	|ИЗ
	|	ИсходнаяТаблицаДокумента КАК ИсходнаяТаблицаДокумента
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		Справочник.Номенклатура КАК СправочникНоменклатура
	|	ПО
	|		ИсходнаяТаблицаДокумента.Номенклатура = СправочникНоменклатура.Ссылка
	|ГДЕ
	|	СправочникНоменклатура.ТипНоменклатуры В (
	|		ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Товар),
	|		ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара)
	|	)
	|
	|СГРУППИРОВАТЬ ПО
	|	ИсходнаяТаблицаДокумента.Склад,
	|	ИсходнаяТаблицаДокумента.ДокументРеализации,
	|	СправочникНоменклатура.Ссылка,
	|	ИсходнаяТаблицаДокумента.Характеристика
	|;
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ИсходнаяТаблицаВидыЗапасов.Склад,
	|	ИсходнаяТаблицаВидыЗапасов.Номенклатура,
	|	ИсходнаяТаблицаВидыЗапасов.Характеристика,
	|	ИсходнаяТаблицаВидыЗапасов.ВидЗапасов,
	|	ИсходнаяТаблицаВидыЗапасов.НомерГТД,
	|	ИсходнаяТаблицаВидыЗапасов.СтавкаНДС,
	|	ИсходнаяТаблицаВидыЗапасов.Количество,
	|	ИсходнаяТаблицаВидыЗапасов.СуммаСНДС,
	|	ИсходнаяТаблицаВидыЗапасов.СуммаНДС,
	|	ИсходнаяТаблицаВидыЗапасов.ДокументРеализации,
	|	ИсходнаяТаблицаВидыЗапасов.СкладОтгрузки
	|
	|ПОМЕСТИТЬ ТаблицаВидыЗапасов
	|ИЗ
	|	&ИсходнаяТаблицаВидыЗапасов КАК ИсходнаяТаблицаВидыЗапасов
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ИсходнаяТаблицаВидыЗапасов.Склад,
	|	ИсходнаяТаблицаВидыЗапасов.Номенклатура,
	|	ИсходнаяТаблицаВидыЗапасов.Характеристика
	|;
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаДокумента.НомерСтроки КАК НомерСтроки,
	|	ТаблицаДокумента.Склад КАК Склад,
	|	ТаблицаДокумента.Номенклатура КАК Номенклатура,
	|	ТаблицаДокумента.ВестиУчетПоГТД КАК ВедетсяУчетПоГТД,
	|	ТаблицаДокумента.Характеристика КАК Характеристика,
	|	ТаблицаДокумента.Количество КАК Количество,
	|	ТаблицаДокумента.СуммаСНДС КАК СуммаСНДС,
	|	ТаблицаДокумента.СуммаНДС КАК СуммаНДС,
	|	ТаблицаДокумента.СтавкаНДС КАК СтавкаНДС,
	|
	|	ТаблицаВидыЗапасов.ВидЗапасов КАК ВидЗапасов,
	|	ТаблицаВидыЗапасов.НомерГТД КАК НомерГТД,
	|	ЕСТЬNULL(ТаблицаВидыЗапасов.Количество, 0) КАК КоличествоВидыЗапасов,
	|	ЕСТЬNULL(ТаблицаВидыЗапасов.СуммаСНДС, 0) КАК СуммаСНДСВидыЗапасов,
	|	ЕСТЬNULL(ТаблицаВидыЗапасов.СуммаНДС, 0) КАК СуммаНДСВидыЗапасов,
	|	ЕСТЬNULL(ТаблицаВидыЗапасов.СтавкаНДС, Неопределено) КАК СтавкаНДСВидыЗапасов,
	|
	|	ВЫБОР КОГДА ВидыЗапасов.РеализацияЗапасовДругойОрганизации ТОГДА
	|		ВидыЗапасов.ВидЗапасовВладельца.ТипЗапасов
	|	ИНАЧЕ
	|		ВидыЗапасов.ТипЗапасов
	|	КОНЕЦ КАК ТипЗапасов,
	|
	|	ВЫБОР КОГДА ВидыЗапасов.РеализацияЗапасовДругойОрганизации ТОГДА
	|		ВидыЗапасов.ВидЗапасовВладельца.Организация
	|	ИНАЧЕ
	|		ВидыЗапасов.Организация
	|	КОНЕЦ КАК Организация,
	|
	|	ВЫБОР КОГДА ВидыЗапасов.РеализацияЗапасовДругойОрганизации ТОГДА
	|		ВидыЗапасов.ВидЗапасовВладельца.Комитент
	|	ИНАЧЕ
	|		ВидыЗапасов.Комитент
	|	КОНЕЦ КАК Поставщик,
	|
	|	ВЫБОР КОГДА ВидыЗапасов.РеализацияЗапасовДругойОрганизации ТОГДА
	|		ВидыЗапасов.ВидЗапасовВладельца.Сделка
	|	ИНАЧЕ
	|		ВидыЗапасов.Сделка
	|	КОНЕЦ КАК Сделка,
	|
	|	ТаблицаДокумента.ДокументРеализации КАК ДокументРеализации,
	|	ТаблицаВидыЗапасов.СкладОтгрузки КАК СкладОтгрузки
	|ИЗ
	|	ТаблицаДокумента КАК ТаблицаДокумента
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		ТаблицаВидыЗапасов КАК ТаблицаВидыЗапасов
	|	ПО
	|		ТаблицаДокумента.Номенклатура = ТаблицаВидыЗапасов.Номенклатура
	|		И ТаблицаДокумента.Характеристика = ТаблицаВидыЗапасов.Характеристика
	|		И ТаблицаДокумента.Склад = ТаблицаВидыЗапасов.Склад
	|		И ТаблицаДокумента.ДокументРеализации = ТаблицаВидыЗапасов.ДокументРеализации
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		Справочник.ВидыЗапасов КАК ВидыЗапасов
	|	ПО
	|		ТаблицаВидыЗапасов.ВидЗапасов = ВидыЗапасов.Ссылка
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	0 КАК НомерСтроки,
	|	ТаблицаВидыЗапасов.Склад КАК Склад,
	|	ТаблицаВидыЗапасов.Номенклатура КАК Номенклатура,
	|	СправочникНоменклатура.ВестиУчетПоГТД КАК ВедетсяУчетПоГТД,
	|	ТаблицаВидыЗапасов.Характеристика КАК Характеристика,
	|	0 КАК Количество,
	|	0 КАК СуммаСНДС,
	|	0 КАК СуммаНДС,
	|	ТаблицаВидыЗапасов.СтавкаНДС КАК СтавкаНДС,
	|
	|	ТаблицаВидыЗапасов.ВидЗапасов КАК ВидЗапасов,
	|	ТаблицаВидыЗапасов.НомерГТД КАК НомерГТД,
	|	ТаблицаВидыЗапасов.Количество КАК КоличествоВидыЗапасов,
	|	ТаблицаВидыЗапасов.СуммаСНДС КАК СуммаСНДСВидыЗапасов,
	|	ТаблицаВидыЗапасов.СуммаНДС КАК СуммаНДСВидыЗапасов,
	|	ТаблицаВидыЗапасов.СтавкаНДС КАК СтавкаНДСВидыЗапасов,
	|
	|	ВЫБОР КОГДА ВидыЗапасов.РеализацияЗапасовДругойОрганизации ТОГДА
	|		ВидыЗапасов.ВидЗапасовВладельца.ТипЗапасов
	|	ИНАЧЕ
	|		ВидыЗапасов.ТипЗапасов
	|	КОНЕЦ КАК ТипЗапасов,
	|
	|	ВЫБОР КОГДА ВидыЗапасов.РеализацияЗапасовДругойОрганизации ТОГДА
	|		ВидыЗапасов.ВидЗапасовВладельца.Организация
	|	ИНАЧЕ
	|		ВидыЗапасов.Организация
	|	КОНЕЦ КАК Организация,
	|
	|	ВЫБОР КОГДА ВидыЗапасов.РеализацияЗапасовДругойОрганизации ТОГДА
	|		ВидыЗапасов.ВидЗапасовВладельца.Комитент
	|	ИНАЧЕ
	|		ВидыЗапасов.Комитент
	|	КОНЕЦ КАК Поставщик,
	|
	|	ВЫБОР КОГДА ВидыЗапасов.РеализацияЗапасовДругойОрганизации ТОГДА
	|		ВидыЗапасов.ВидЗапасовВладельца.Сделка
	|	ИНАЧЕ
	|		ВидыЗапасов.Сделка
	|	КОНЕЦ КАК Сделка,
	|
	|	ТаблицаВидыЗапасов.ДокументРеализации КАК ДокументРеализации,
	|	ТаблицаВидыЗапасов.СкладОтгрузки КАК СкладОтгрузки
	|
	|ИЗ
	|	ТаблицаВидыЗапасов КАК ТаблицаВидыЗапасов
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		ТаблицаДокумента КАК ТаблицаДокумента
	|	ПО
	|		ТаблицаДокумента.Номенклатура = ТаблицаВидыЗапасов.Номенклатура
	|		И ТаблицаДокумента.Характеристика = ТаблицаВидыЗапасов.Характеристика
	|		И ТаблицаДокумента.Склад = ТаблицаВидыЗапасов.Склад
	|		И ТаблицаДокумента.ДокументРеализации = ТаблицаВидыЗапасов.ДокументРеализации
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		Справочник.Номенклатура КАК СправочникНоменклатура
	|	ПО
	|		ТаблицаВидыЗапасов.Номенклатура = СправочникНоменклатура.Ссылка
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		Справочник.ВидыЗапасов КАК ВидыЗапасов
	|	ПО
	|		ТаблицаВидыЗапасов.ВидЗапасов = ВидыЗапасов.Ссылка
	|ГДЕ
	|	ТаблицаДокумента.Номенклатура ЕСТЬ NULL
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки
	|
	|ИТОГИ
	|	СУММА(Количество),
	|	СУММА(СуммаСНДС),
	|	СУММА(СуммаНДС),
	|	МАКСИМУМ(СтавкаНДС),
	|	СУММА(КоличествоВидыЗапасов),
	|	СУММА(СуммаСНДСВидыЗапасов),
	|	СУММА(СуммаНДСВидыЗапасов),
	|	МАКСИМУМ(СтавкаНДСВидыЗапасов)
	|ПО
	|	НомерСтроки
	|");
	Запрос.УстановитьПараметр("ЦенаНеВключаетНДС", ?(ЦенаВключетНДС, 0, 1));

	ТаблицаТоваров = ПолучитьИзВременногоХранилища(АдресТоваровВХранилище);
	ЕстьСумма = (ТаблицаТоваров.Колонки.Найти("Сумма") <> Неопределено);
	Если Не ЕстьСумма Тогда
		ТаблицаТоваров.Колонки.Добавить("Сумма", Новый ОписаниеТипов("Число"));
	КонецЕсли;
	
	Если ТаблицаТоваров.Колонки.Найти("СуммаНДС") = Неопределено Тогда
		ТаблицаТоваров.Колонки.Добавить("СуммаНДС", Новый ОписаниеТипов("Число"));
		ТаблицаТоваров.Колонки.Добавить("СтавкаНДС", Новый ОписаниеТипов("ПеречислениеСсылка.СтавкиНДС"));
	КонецЕсли;
	
	ЕстьСуммаПродажи = (ТаблицаТоваров.Колонки.Найти("СуммаПродажи") <> Неопределено);
	Если Не ЕстьСуммаПродажи Тогда
		ТаблицаТоваров.Колонки.Добавить("СуммаПродажи", Новый ОписаниеТипов("Число"));
	КонецЕсли;
	
	ЕстьСклад = (ТаблицаТоваров.Колонки.Найти("Склад") <> Неопределено);
	Если Не ЕстьСклад Тогда
		ТаблицаТоваров.Колонки.Добавить("Склад", Новый ОписаниеТипов("СправочникСсылка.Склады"));
	КонецЕсли;
	
	ЕстьДокументРеализации = (ТаблицаТоваров.Колонки.Найти("ДокументРеализации") <> Неопределено);
	Если Не ЕстьДокументРеализации Тогда
		ТаблицаТоваров.Колонки.Добавить("ДокументРеализации", Документы.ТипВсеСсылки());
	КонецЕсли;
	
	Запрос.УстановитьПараметр("ИсходнаяТаблицаДокумента", ТаблицаТоваров);
	
	ТаблицаВидыЗапасов = ПолучитьИзВременногоХранилища(АдресВидовЗапасовВХранилище);
	Если ТаблицаВидыЗапасов.Колонки.Найти("СуммаСНДС") = Неопределено Тогда
		ТаблицаВидыЗапасов.Колонки.Добавить("СуммаСНДС", Новый ОписаниеТипов("Число"));
	КонецЕсли;
	
	ЕстьСуммаНДС = (ТаблицаВидыЗапасов.Колонки.Найти("СуммаНДС") <> Неопределено);
	Если НЕ ЕстьСуммаНДС Тогда
		ТаблицаВидыЗапасов.Колонки.Добавить("СуммаНДС",  Новый ОписаниеТипов("Число"));
		ТаблицаВидыЗапасов.Колонки.Добавить("СтавкаНДС", Новый ОписаниеТипов("ПеречислениеСсылка.СтавкиНДС"));
	КонецЕсли;
	
	ЕстьСклад = (ТаблицаВидыЗапасов.Колонки.Найти("Склад") <> Неопределено);
	Если Не ЕстьСклад Тогда
		ТаблицаВидыЗапасов.Колонки.Добавить("Склад", Новый ОписаниеТипов("СправочникСсылка.Склады"));
	КонецЕсли;
	
	ЕстьСкладОтгрузки = (ТаблицаВидыЗапасов.Колонки.Найти("СкладОтгрузки") <> Неопределено);
	Если Не ЕстьСкладОтгрузки Тогда
		ТаблицаВидыЗапасов.Колонки.Добавить("СкладОтгрузки", Новый ОписаниеТипов("СправочникСсылка.Склады"));
	КонецЕсли;
	
	Запрос.УстановитьПараметр("ИсходнаяТаблицаВидыЗапасов", ЗапасыСервер.ТаблицаДополненнаяОбязательнымиКолонками(ТаблицаВидыЗапасов));
	
	Дерево = РеквизитФормыВЗначение("ДеревоВидовЗапасов");
	Дерево.Строки.Очистить();
	
	РезультатЗапроса = Запрос.Выполнить();
	Если РезультатЗапроса.Пустой() Тогда
		РедактироватьВидыЗапасов = Ложь;
	Иначе
		ВыборкаПоСтрокам = Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		Пока ВыборкаПоСтрокам.Следующий() Цикл
			
			ДобавитьСтрокуНоменклатуры = Истина;
			
			Выборка = ВыборкаПоСтрокам.Выбрать();
			КоличествоЗаписей = Выборка.Количество();
			
			Если КоличествоЗаписей > 1
			 ИЛИ РедактироватьВидыЗапасов
			 ИЛИ ВыборкаПоСтрокам.Количество = 0 Тогда
				ДобавлятьПодчиненныеСтроки = Истина;
				
			ИначеЕсли ВыборкаПоСтрокам.Количество <> ВыборкаПоСтрокам.КоличествоВидыЗапасов
			 ИЛИ ВыборкаПоСтрокам.СуммаСНДС <> ВыборкаПоСтрокам.СуммаСНДСВидыЗапасов
			 ИЛИ ВыборкаПоСтрокам.СуммаНДС <> ВыборкаПоСтрокам.СуммаНДСВидыЗапасов
			 ИЛИ ВыборкаПоСтрокам.СтавкаНДС <> ВыборкаПоСтрокам.СтавкаНДСВидыЗапасов Тогда
				ДобавлятьПодчиненныеСтроки = Истина;
				
			Иначе
				ДобавлятьПодчиненныеСтроки = Ложь;
			КонецЕсли;
			
			Пока Выборка.Следующий() Цикл
				
				Если ДобавитьСтрокуНоменклатуры Тогда
			
					СтрокаГруппы = Дерево.Строки.Добавить();
					ЗаполнитьЗначенияСвойств(СтрокаГруппы, Выборка);
					
					Если ДобавлятьПодчиненныеСтроки Тогда
						СтрокаГруппы.ВидЗапасов = Неопределено;
						СтрокаГруппы.НомерГТД = Неопределено;
						СтрокаГруппы.ТипЗапасов = Неопределено;
						СтрокаГруппы.Поставщик = Неопределено;
						СтрокаГруппы.Сделка = Неопределено;
						СтрокаГруппы.Организация = Неопределено;
						СтрокаГруппы.СкладОтгрузки = Неопределено;
						СтрокаГруппы.КоличествоВидыЗапасов = 0;
						СтрокаГруппы.СуммаСНДСВидыЗапасов = 0;
						СтрокаГруппы.СуммаНДСВидыЗапасов = 0;
					КонецЕсли;
					
					ДобавитьСтрокуНоменклатуры = Ложь;
				
				КонецЕсли;
			
				Если Выборка.КоличествоВидыЗапасов <> 0 И ДобавлятьПодчиненныеСтроки Тогда
					
					СтрокаВидыЗапасов = СтрокаГруппы.Строки.Добавить();
					СтрокаВидыЗапасов.НоменклатураВидыЗапасов = Выборка.Номенклатура;
					СтрокаВидыЗапасов.ХарактеристикаВидыЗапасов = Выборка.Характеристика;
					СтрокаВидыЗапасов.ВидЗапасов = Выборка.ВидЗапасов;
					СтрокаВидыЗапасов.ТипЗапасов = Выборка.ТипЗапасов;
					СтрокаВидыЗапасов.Поставщик = Выборка.Поставщик;
					СтрокаВидыЗапасов.Сделка = Выборка.Сделка;
					СтрокаВидыЗапасов.Организация = Выборка.Организация;
					СтрокаВидыЗапасов.ВедетсяУчетПоГТД = Выборка.ВедетсяУчетПоГТД;
					СтрокаВидыЗапасов.НомерГТД = Выборка.НомерГТД;
					СтрокаВидыЗапасов.ДокументРеализации = Выборка.ДокументРеализации;
					СтрокаВидыЗапасов.СкладОтгрузки = Выборка.СкладОтгрузки;
					СтрокаВидыЗапасов.Количество = Выборка.КоличествоВидыЗапасов;
					СтрокаВидыЗапасов.СуммаСНДС = Выборка.СуммаСНДСВидыЗапасов;
					СтрокаВидыЗапасов.СуммаНДС = Выборка.СуммаНДСВидыЗапасов;
					СтрокаВидыЗапасов.СтавкаНДС = Выборка.СтавкаНДСВидыЗапасов;
					
					СтрокаГруппы.КоличествоВидыЗапасов = СтрокаГруппы.КоличествоВидыЗапасов + Выборка.КоличествоВидыЗапасов;
					СтрокаГруппы.СуммаСНДСВидыЗапасов = СтрокаГруппы.СуммаСНДСВидыЗапасов + Выборка.СуммаСНДСВидыЗапасов;
					СтрокаГруппы.СуммаНДСВидыЗапасов = СтрокаГруппы.СуммаНДСВидыЗапасов + Выборка.СуммаНДСВидыЗапасов;
					
					Если СтрокаГруппы.Количество > СтрокаГруппы.КоличествоВидыЗапасов Тогда
						СтрокаГруппы.Информация = "Недостаточно: " + Формат(СтрокаГруппы.Количество - СтрокаГруппы.КоличествоВидыЗапасов, "ЧДЦ=3");
					ИначеЕсли СтрокаГруппы.Количество < СтрокаГруппы.КоличествоВидыЗапасов Тогда
						СтрокаГруппы.Информация = "Превышение: " + Формат(СтрокаГруппы.КоличествоВидыЗапасов - СтрокаГруппы.Количество, "ЧДЦ=3");
					Иначе
						СтрокаГруппы.Информация = "";
					КонецЕсли;
					
				КонецЕсли;
			
			КонецЦикла;
			
		КонецЦикла;
		
		ЗначениеВРеквизитФормы(Дерево, "ДеревоВидовЗапасов");
	КонецЕсли;
	
	Если Не ВидимостьУстановлена Тогда
		Элементы.ДеревоВидовЗапасовСуммаСНДС.Видимость = (ЕстьСумма ИЛИ ЕстьСуммаПродажи);
		Элементы.ДеревоВидовЗапасовСтавкаНДС.Видимость = ЕстьСуммаНДС;
		Элементы.ДеревоВидовЗапасовСуммаНДС.Видимость  = ЕстьСуммаНДС;
		Элементы.Склад.Видимость = ЕстьСклад;
		Элементы.ДеревоВидовЗапасовСкладОтгрузки.Видимость = ЕстьСкладОтгрузки;
		ВидимостьУстановлена = Истина;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьПолеИнформации(СтрокаТаблицы)
	
	Если СтрокаТаблицы.Количество > СтрокаТаблицы.КоличествоВидыЗапасов Тогда
		СтрокаТаблицы.Информация = "Недостаточно: " + Формат(СтрокаТаблицы.Количество - СтрокаТаблицы.КоличествоВидыЗапасов, "ЧДЦ=3");
	ИначеЕсли СтрокаТаблицы.Количество < СтрокаТаблицы.КоличествоВидыЗапасов Тогда
		СтрокаТаблицы.Информация = "Превышение: " + Формат(СтрокаТаблицы.КоличествоВидыЗапасов - СтрокаТаблицы.Количество, "ЧДЦ=3");
	Иначе
		СтрокаТаблицы.Информация = "";
	КонецЕсли;
	
КонецПроцедуры
