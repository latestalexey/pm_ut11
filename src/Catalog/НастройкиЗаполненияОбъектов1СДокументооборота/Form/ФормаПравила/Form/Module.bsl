
////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// Пропускаем инициализацию, чтобы гарантировать получение формы при передаче параметра "АвтоТест".
	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;
	КонецЕсли;
	
	ИмяРеквизитаОбъектаДокументооборота = Параметры.ИмяРеквизитаОбъектаДокументооборота;
	ПредставлениеРеквизитаОбъектаДокументооборота = Параметры.ПредставлениеРеквизитаОбъектаДокументооборота;
	ТипРеквизитаОбъектаДокументооборота = Параметры.ТипРеквизитаОбъектаДокументооборота;
	ВариантПравилаЗаполненияРеквизитов = Параметры.ВариантПравилаЗаполненияРеквизитов;
	ИмяРеквизитаОбъектаПотребителя = Параметры.ИмяРеквизитаОбъектаПотребителя;
	ЗначениеРеквизитаДокументооборота = Параметры.ЗначениеРеквизитаДокументооборота;
	ИдентификаторЗначенияРеквизита = Параметры.ИдентификаторЗначенияРеквизита;
	ТипЗначенияРеквизита = Параметры.ТипЗначенияРеквизита;
	ВычисляемоеВыражение = Параметры.ВычисляемоеВыражение;
	ТипОбъектаПотребителя = Параметры.ТипОбъектаПотребителя;
	ДополнительныйРеквизитID = Параметры.ДополнительныйРеквизитID;
	ДополнительныйРеквизитТип = Параметры.ДополнительныйРеквизитТип;
	
	Если Не ЗначениеЗаполнено(ВариантПравилаЗаполненияРеквизитов) Тогда 
		ВариантПравилаЗаполненияРеквизитов = Перечисления.ВариантыПравилЗаполненияРеквизитов.ИзРеквизитаОбъектаПотребителя;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	УстановитьДоступность();
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ ШАПКИ ФОРМЫ

&НаКлиенте
Процедура ВариантПравилаЗаполненияРеквизитовПриИзменении(Элемент)
	
	УстановитьДоступность();
	
КонецПроцедуры

&НаКлиенте
Процедура ИмяРеквизитаОбъектаПотребителяНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("ТипОбъекта", ТипОбъектаПотребителя);
	
	Результат = ОткрытьФормуМодально("Справочник.НастройкиЗаполненияОбъектов1СДокументооборота.Форма.ВыборРеквизита", ПараметрыФормы, ЭтаФорма);
	Если ТипЗнч(Результат) = Тип("Структура") Тогда 
		ИмяРеквизитаОбъектаПотребителя = Результат.Имя;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ЗначениеРеквизитаДокументооборотаНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	Если ТипРеквизитаОбъектаДокументооборота.Количество() = 1 Тогда 
		ЗначениеТипа = ТипРеквизитаОбъектаДокументооборота[0].Значение;
	Иначе
		ЗначениеТипа = ВыбратьИзСписка(ТипРеквизитаОбъектаДокументооборота, Элемент);
		Если ЗначениеТипа = Неопределено Тогда 
			Возврат;
		КонецЕсли;
	КонецЕсли;
	
	
	Если ЗначениеТипа = "Строка" Тогда 
		ЗначениеРеквизита = ЗначениеРеквизитаДокументооборота;
		Если ВвестиСтроку(ЗначениеРеквизита, ПредставлениеРеквизитаОбъектаДокументооборота) Тогда 
			ЗначениеРеквизитаДокументооборота = ЗначениеРеквизита;
		КонецЕсли;
		
	ИначеЕсли ЗначениеТипа = "Число" Тогда 
		ЗначениеРеквизита = ЗначениеРеквизитаДокументооборота;
		Если ВвестиЧисло(ЗначениеРеквизита, ПредставлениеРеквизитаОбъектаДокументооборота, 15, 3) Тогда 
			ЗначениеРеквизитаДокументооборота = ЗначениеРеквизита;
		КонецЕсли;
		
	ИначеЕсли ЗначениеТипа = "Дата" Тогда 
		ЗначениеРеквизита = ЗначениеРеквизитаДокументооборота;
		Если ВвестиДату(ЗначениеРеквизита, ПредставлениеРеквизитаОбъектаДокументооборота, ЧастиДаты.Дата) Тогда 
			ЗначениеРеквизитаДокументооборота = ЗначениеРеквизита;
		КонецЕсли;
		
	ИначеЕсли ЗначениеТипа = "ДатаВремя" Тогда 
		ЗначениеРеквизита = ЗначениеРеквизитаДокументооборота;
		Если ВвестиДату(ЗначениеРеквизита, ПредставлениеРеквизитаОбъектаДокументооборота, ЧастиДаты.ДатаВремя) Тогда 
			ЗначениеРеквизитаДокументооборота = ЗначениеРеквизита;
		КонецЕсли;
		
	ИначеЕсли ЗначениеТипа = "Время" Тогда 
		ЗначениеРеквизита = ЗначениеРеквизитаДокументооборота;
		Если ВвестиДату(ЗначениеРеквизита, ПредставлениеРеквизитаОбъектаДокументооборота, ЧастиДаты.Время) Тогда 
			ЗначениеРеквизитаДокументооборота = ЗначениеРеквизита;
		КонецЕсли;
		
	ИначеЕсли ЗначениеТипа = "Булево" Тогда 	
		ЗначениеРеквизита = ЗначениеРеквизитаДокументооборота;
		Если ВвестиЗначение(ЗначениеРеквизита, ПредставлениеРеквизитаОбъектаДокументооборота, Тип("Булево")) Тогда 
			ЗначениеРеквизитаДокументооборота = ЗначениеРеквизита;
		КонецЕсли;
		
	Иначе	
		
		ПараметрыФормы = Новый Структура;
		ПараметрыФормы.Вставить("ТипОбъектаВыбора", ЗначениеТипа);
		Если ЗначениеТипа = "DMObjectPropertyValue" Тогда 
			Владелец = Новый Структура;
			Владелец.Вставить("ID", 	ДополнительныйРеквизитID);
			Владелец.Вставить("Type", 	ДополнительныйРеквизитТип);
			
			Отбор = Новый Структура;
			Отбор.Вставить("AdditionalProperty", Владелец);
			
			ПараметрыФормы.Вставить("Отбор", Отбор);
		КонецЕсли;
		
		Результат = ОткрытьФормуМодально("Обработка.ИнтеграцияС1СДокументооборот.Форма.ВыборИзСписка", ПараметрыФормы, ЭтаФорма);
		Если ТипЗнч(Результат) = Тип("Структура") Тогда 
			ЗначениеРеквизитаДокументооборота = Результат.РеквизитПредставление;
			ИдентификаторЗначенияРеквизита = Результат.РеквизитID;
			ТипЗначенияРеквизита = Результат.РеквизитТип;
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ КОМАНД ФОРМЫ

&НаКлиенте
Процедура ОК(Команда)
	
	Если Не ПроверитьЗаполнение() Тогда 
		Возврат;
	КонецЕсли;
	
	Результат = Новый Структура;
	Результат.Вставить("ВариантПравилаЗаполненияРеквизитов");
	Результат.Вставить("ИмяРеквизитаОбъектаПотребителя");
	Результат.Вставить("ЗначениеРеквизитаДокументооборота");
	Результат.Вставить("ИдентификаторЗначенияРеквизита");
	Результат.Вставить("ТипЗначенияРеквизита");
	Результат.Вставить("ВычисляемоеВыражение");
	
	Если ВариантПравилаЗаполненияРеквизитов = ПредопределенноеЗначение("Перечисление.ВариантыПравилЗаполненияРеквизитов.ИзРеквизитаОбъектаПотребителя") Тогда 
		Результат.ИмяРеквизитаОбъектаПотребителя = ИмяРеквизитаОбъектаПотребителя;
		
	ИначеЕсли ВариантПравилаЗаполненияРеквизитов = ПредопределенноеЗначение("Перечисление.ВариантыПравилЗаполненияРеквизитов.ИзУказанногоЗначения") Тогда 
		Результат.ЗначениеРеквизитаДокументооборота = ЗначениеРеквизитаДокументооборота;
		Результат.ИдентификаторЗначенияРеквизита = ИдентификаторЗначенияРеквизита;
		Результат.ТипЗначенияРеквизита = ТипЗначенияРеквизита;
		
	ИначеЕсли ВариантПравилаЗаполненияРеквизитов = ПредопределенноеЗначение("Перечисление.ВариантыПравилЗаполненияРеквизитов.ИзВыраженияНаВстроенномЯзыке") Тогда 
		Результат.ВычисляемоеВыражение = ВычисляемоеВыражение;
		
	КонецЕсли;
	Результат.ВариантПравилаЗаполненияРеквизитов = ВариантПравилаЗаполненияРеквизитов;
	
	Закрыть(Результат);
	
КонецПроцедуры

&НаКлиенте
Процедура Отмена(Команда)
	
	Закрыть();
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

&НаКлиенте
Процедура УстановитьДоступность()
	
	ИзРеквизитаОбъектаПотребителя = ПредопределенноеЗначение("Перечисление.ВариантыПравилЗаполненияРеквизитов.ИзРеквизитаОбъектаПотребителя");
	ИзУказанногоЗначения = ПредопределенноеЗначение("Перечисление.ВариантыПравилЗаполненияРеквизитов.ИзУказанногоЗначения");
	ИзВыраженияНаВстроенномЯзыке = ПредопределенноеЗначение("Перечисление.ВариантыПравилЗаполненияРеквизитов.ИзВыраженияНаВстроенномЯзыке");
	
	Элементы.ИмяРеквизитаОбъектаПотребителя.Доступность = (ВариантПравилаЗаполненияРеквизитов = ИзРеквизитаОбъектаПотребителя);
	Элементы.ИмяРеквизитаОбъектаПотребителя.АвтоОтметкаНезаполненного = (ВариантПравилаЗаполненияРеквизитов = ИзРеквизитаОбъектаПотребителя);
	Элементы.ИмяРеквизитаОбъектаПотребителя.ОтметкаНезаполненного = (ВариантПравилаЗаполненияРеквизитов = ИзРеквизитаОбъектаПотребителя) И Не ЗначениеЗаполнено(ИмяРеквизитаОбъектаПотребителя);
	
	Элементы.ЗначениеРеквизитаДокументооборота.Доступность = (ВариантПравилаЗаполненияРеквизитов = ИзУказанногоЗначения);
	Элементы.ЗначениеРеквизитаДокументооборота.АвтоОтметкаНезаполненного = (ВариантПравилаЗаполненияРеквизитов = ИзУказанногоЗначения);
	Элементы.ЗначениеРеквизитаДокументооборота.ОтметкаНезаполненного = (ВариантПравилаЗаполненияРеквизитов = ИзУказанногоЗначения) И Не ЗначениеЗаполнено(ЗначениеРеквизитаДокументооборота);
	
	Элементы.ВычисляемоеВыражение.Доступность = (ВариантПравилаЗаполненияРеквизитов = ИзВыраженияНаВстроенномЯзыке);
	Элементы.ВычисляемоеВыражение.АвтоОтметкаНезаполненного = (ВариантПравилаЗаполненияРеквизитов = ИзВыраженияНаВстроенномЯзыке);
	Элементы.ВычисляемоеВыражение.ОтметкаНезаполненного = (ВариантПравилаЗаполненияРеквизитов = ИзВыраженияНаВстроенномЯзыке) И Не ЗначениеЗаполнено(ВычисляемоеВыражение);
	
КонецПроцедуры

&НаСервере
Процедура ОбработкаПроверкиЗаполненияНаСервере(Отказ, ПроверяемыеРеквизиты)
	
	Если ВариантПравилаЗаполненияРеквизитов = ПредопределенноеЗначение("Перечисление.ВариантыПравилЗаполненияРеквизитов.ИзРеквизитаОбъектаПотребителя") Тогда 
		ПроверяемыеРеквизиты.Добавить("ИмяРеквизитаОбъектаПотребителя");
		
	ИначеЕсли ВариантПравилаЗаполненияРеквизитов = ПредопределенноеЗначение("Перечисление.ВариантыПравилЗаполненияРеквизитов.ИзУказанногоЗначения") Тогда 
		ПроверяемыеРеквизиты.Добавить("ЗначениеРеквизитаДокументооборота");
		
	ИначеЕсли ВариантПравилаЗаполненияРеквизитов = ПредопределенноеЗначение("Перечисление.ВариантыПравилЗаполненияРеквизитов.ИзВыраженияНаВстроенномЯзыке") Тогда 
		ПроверяемыеРеквизиты.Добавить("ВычисляемоеВыражение");
		
	КонецЕсли;
	
КонецПроцедуры
