
////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// Пропускаем инициализацию, чтобы гарантировать получение формы при передаче параметра "АвтоТест".
	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Объект.ТипОбъектаПотребителя) Тогда 
		
		ОбъектПотребителя = Метаданные.НайтиПоПолномуИмени(Объект.ТипОбъектаПотребителя);
		Если ОбъектПотребителя <> Неопределено Тогда 
			ПредставлениеОбъектаПотребителя = ?(ОбъектПотребителя.Синоним = "", ОбъектПотребителя.Имя, ОбъектПотребителя.Синоним); 
		КонецЕсли;
		
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Объект.ТипОбъектаДокументооборота) Тогда 
		
		ОбъектДокументооборота = СписокОбъектовДокументооборота().НайтиПоЗначению(Объект.ТипОбъектаДокументооборота);
		Если ОбъектДокументооборота <> Неопределено Тогда 
			ПредставлениеОбъектаДокументооборота = ОбъектДокументооборота.Представление;
		КонецЕсли;
		
	КонецЕсли;
	
	ЗаполнитьРеквизитыДокументооборота();
	ЗаполнитьСписокПечатныхФорм();
	
КонецПроцедуры

&НаСервере
Процедура ОбработкаПроверкиЗаполненияНаСервере(Отказ, ПроверяемыеРеквизиты)
	
	Если Не ЗначениеЗаполнено(ПредставлениеОбъектаПотребителя) Тогда 
		Отказ = Истина;
		
		Сообщение = Новый СообщениеПользователю();
    	Сообщение.Текст = НСтр("ru = 'Поле ""Объект конфигурации"" не заполнено'");
    	Сообщение.Поле = "ПредставлениеОбъектаПотребителя";
    	Сообщение.Сообщить();
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(ПредставлениеОбъектаДокументооборота) Тогда 
		Отказ = Истина;
		
		Сообщение = Новый СообщениеПользователю();
    	Сообщение.Текст = НСтр("ru = 'Поле ""Объект 1С:Документооборота"" не заполнено'");
    	Сообщение.Поле = "ПредставлениеОбъектаДокументооборота";
    	Сообщение.Сообщить();
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Объект.ТипОбъектаПотребителя) Тогда 
		Запрос = Новый Запрос;
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	Ссылка
		|ИЗ
		|	Справочник.НастройкиЗаполненияОбъектов1СДокументооборота
		|ГДЕ
		|	ТипОбъектаПотребителя = &ТипОбъектаПотребителя 
		|	И Не ПометкаУдаления
		|	И Ссылка <> &Ссылка";
		
		Запрос.УстановитьПараметр("ТипОбъектаПотребителя", Объект.ТипОбъектаПотребителя);
		Запрос.УстановитьПараметр("Ссылка", Объект.Ссылка);
		
		Результат = Запрос.Выполнить();
		Если Не Результат.Пустой() Тогда 
			Отказ = Истина;
		
			Сообщение = Новый СообщениеПользователю();
    		Сообщение.Текст = НСтр("ru = 'Для данного объекта конфигурации уже введено правило заполнения реквизитов'");
    		Сообщение.Поле = "ПредставлениеОбъектаПотребителя";
    		Сообщение.Сообщить();
		КонецЕсли;
		
		// Проверка заполнения реквизитов табличной части
		Для каждого Строка из ПравилаЗаполненияРеквизитов Цикл
			Если Строка.ОбязательноеЗаполнение И НЕ (ЗначениеЗаполнено(Строка.ИмяРеквизитаОбъектаПотребителя) ИЛИ ЗначениеЗаполнено(Строка.ЗначениеРеквизитаДокументооборота) ИЛИ ЗначениеЗаполнено(Строка.ВычисляемоеВыражение)) Тогда
				Отказ = Истина;
				
				Сообщение = Новый СообщениеПользователю();
				Сообщение.Текст = НСтр("ru = 'Не установлено обязательное правило заполнения для реквизита """+Строка.ПредставлениеРеквизитаОбъектаДокументооборота+"""'");
				Сообщение.Поле = "ПравилаЗаполненияРеквизитов["+Строка.ПолучитьИдентификатор()+"].ИмяРеквизитаОбъектаПотребителя";
				Сообщение.Сообщить();
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	ТекущийОбъект.ПравилаЗаполненияРеквизитов.Очистить();
	Для Каждого Строка Из ПравилаЗаполненияРеквизитов Цикл
		Если ЗначениеЗаполнено(Строка.ВариантПравилаЗаполненияРеквизитов)
			И (ЗначениеЗаполнено(Строка.ИмяРеквизитаОбъектаПотребителя) 
			Или ЗначениеЗаполнено(Строка.ЗначениеРеквизитаДокументооборота)
			Или ЗначениеЗаполнено(Строка.ВычисляемоеВыражение)) Тогда 
			
			НоваяСтрока = ТекущийОбъект.ПравилаЗаполненияРеквизитов.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, Строка);
		КонецЕсли;
	КонецЦикла;
	
	ТекущийОбъект.ПрисоединяемыеПечатныеФормы.Очистить();
	Для Каждого Строка Из ПрисоединяемыеПечатныеФормы Цикл
		Если Строка.Использовать Тогда
			НоваяСтрока = ТекущийОбъект.ПрисоединяемыеПечатныеФормы.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока,Строка);
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры


////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ ФОРМЫ

&НаКлиенте
Процедура ТипОбъектаПотребителяНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	ПараметрФормы = Новый Структура;
	ПараметрФормы.Вставить("ТекущаяСтрока", Объект.ТипОбъектаПотребителя);
	
	Результат = ОткрытьФормуМодально("Справочник.НастройкиЗаполненияОбъектов1СДокументооборота.Форма.ВыборОбъектаМетаданных", ПараметрФормы, ЭтаФорма);
	Если ТипЗнч(Результат) = Тип("Структура") Тогда 
		Объект.ТипОбъектаПотребителя = Результат.Имя;
		ПредставлениеОбъектаПотребителя = Результат.Синоним;
		Модифицированность = Истина;
		ЗаполнитьСписокПечатныхФорм();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ТипОбъектаДокументооборотаНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	НачальныйТипОбъектаДокументооборота = Объект.ТипОбъектаДокументооборота;
	СписокВыбора = СписокОбъектовДокументооборота();
	
	ВыбранноеЗначение = ВыбратьИзСписка(СписокВыбора, Элемент);
	Если ВыбранноеЗначение = Неопределено Тогда 
		Возврат;
	КонецЕсли;
	
	Объект.ТипОбъектаДокументооборота = ВыбранноеЗначение.Значение;
	ПредставлениеОбъектаДокументооборота = ВыбранноеЗначение.Представление;
	
	Если НачальныйТипОбъектаДокументооборота <> Объект.ТипОбъектаДокументооборота Тогда 
		Объект.ПравилаЗаполненияРеквизитов.Очистить();
		ЗаполнитьРеквизитыДокументооборота();
		Модифицированность = Истина;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПравилаЗаполненияРеквизитовПередНачаломИзменения(Элемент, Отказ)
	
	Отказ = Истина;
	
	ТекущиеДанные = Элементы.ПравилаЗаполненияРеквизитов.ТекущиеДанные;
	Если ТекущиеДанные = Неопределено Тогда 
		Возврат;
	КонецЕсли;
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("ИмяРеквизитаОбъектаДокументооборота");
	ПараметрыФормы.Вставить("ПредставлениеРеквизитаОбъектаДокументооборота");
	ПараметрыФормы.Вставить("ТипРеквизитаОбъектаДокументооборота");
	ПараметрыФормы.Вставить("ВариантПравилаЗаполненияРеквизитов");
	ПараметрыФормы.Вставить("ИмяРеквизитаОбъектаПотребителя");
	ПараметрыФормы.Вставить("ЗначениеРеквизитаДокументооборота");
	ПараметрыФормы.Вставить("ИдентификаторЗначенияРеквизита");
	ПараметрыФормы.Вставить("ТипЗначенияРеквизита");
	ПараметрыФормы.Вставить("ВычисляемоеВыражение");
	ПараметрыФормы.Вставить("ДополнительныйРеквизитID");
	ПараметрыФормы.Вставить("ДополнительныйРеквизитТип");
	ЗаполнитьЗначенияСвойств(ПараметрыФормы, ТекущиеДанные);
	ПараметрыФормы.Вставить("ТипОбъектаПотребителя", Объект.ТипОбъектаПотребителя);
	
	Результат = ОткрытьФормуМодально("Справочник.НастройкиЗаполненияОбъектов1СДокументооборота.Форма.ФормаПравила", ПараметрыФормы, ЭтаФорма);
	Если ТипЗнч(Результат) = Тип("Структура") Тогда 
		ЗаполнитьЗначенияСвойств(ТекущиеДанные, Результат);
		Модифицированность = Истина;
		
		Если ТекущиеДанные.ИмяРеквизитаОбъектаДокументооборота = "documentType"
			 И ТекущиеДанные.ВариантПравилаЗаполненияРеквизитов = ПредопределенноеЗначение("Перечисление.ВариантыПравилЗаполненияРеквизитов.ИзУказанногоЗначения")
			 И ЗначениеЗаполнено(ТекущиеДанные.ЗначениеРеквизитаДокументооборота) Тогда 
			 
			ЗаполнитьТаблЧастьОбъекта(); 
			ЗаполнитьРеквизитыДокументооборота(); 
		КонецЕсли; 
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПравилаЗаполненияРеквизитовПередУдалением(Элемент, Отказ)
	
	Отказ = Истина;
	ТекущиеДанные = Элементы.ПравилаЗаполненияРеквизитов.ТекущиеДанные;
	Если ТекущиеДанные = Неопределено Тогда 
		Возврат;
	КонецЕсли;
	
	ТекстВопроса = НСтр("ru = 'Очистить правило заполнения реквизита?'");
	Ответ = Вопрос(ТекстВопроса, РежимДиалогаВопрос.ДаНет,,КодВозвратаДиалога.Да);
	Если Ответ <> КодВозвратаДиалога.Да Тогда 
		Возврат;
	КонецЕсли;
	
	ТекущиеДанные.ВариантПравилаЗаполненияРеквизитов = Неопределено;
	ТекущиеДанные.ИмяРеквизитаОбъектаПотребителя = Неопределено;
	ТекущиеДанные.ЗначениеРеквизитаДокументооборота = Неопределено;
	ТекущиеДанные.ИдентификаторЗначенияРеквизита = Неопределено;
	ТекущиеДанные.ТипЗначенияРеквизита = Неопределено;
	ТекущиеДанные.ВычисляемоеВыражение = Неопределено;
	ТекущиеДанные.ДополнительныйРеквизит = Неопределено;
	ТекущиеДанные.ДополнительныйРеквизитID = Неопределено;
	ТекущиеДанные.ДополнительныйРеквизитТип = Неопределено;
	
	Модифицированность = Истина;
	
КонецПроцедуры

&НаКлиенте
Процедура ПравилаЗаполненияРеквизитовПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа)
	
	Отказ = Истина;
	
КонецПроцедуры

&НаКлиенте
Процедура ПрисоединяемыеПечатныеФормыПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа)
	Отказ = Истина;
КонецПроцедуры

&НаКлиенте
Процедура ПрисоединяемыеПечатныеФормыПередУдалением(Элемент, Отказ)
	Отказ = Истина;
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

&НаСервере
Процедура ЗаполнитьСписокПечатныхФорм()
	
	Если НЕ ЗначениеЗаполнено(Объект.ТипФайловСохраненияПечатныхФорм) Тогда
		Объект.ТипФайловСохраненияПечатныхФорм = Перечисления.ТипыФайловСохраненияПечатныхФормОбъектов.PDF;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Объект.ТипОбъектаПотребителя) Тогда 

		МенеджерОбъекта = ОбщегоНазначения.МенеджерОбъектаПоПолномуИмени(Объект.ТипОбъектаПотребителя);
		Элементы.ПрисоединяемыеПечатныеФормы.Доступность = Истина;

		ПрисоединяемыеПечатныеФормы.Очистить();
		
        ТаблицаПечатныхФорм = ИнтеграцияС1СДокументооборот.ПолучитьТаблицуМенеджеровПечатиОбъекта(Объект.ТипОбъектаПотребителя);
		
		Для каждого Стр из ТаблицаПечатныхФорм Цикл
			СтрППФ = ПрисоединяемыеПечатныеФормы.Добавить();
			ЗаполнитьЗначенияСвойств(СтрППФ,Стр);
			Если Объект.ПрисоединяемыеПечатныеФормы.НайтиСтроки(новый Структура("ИмяКоманды, МенеджерПечати",СтрППФ.ИмяКоманды,СтрППФ.МенеджерПечати)).Количество() > 0 Тогда
				СтрППФ.Использовать = Истина;
			КонецЕсли;
		КонецЦикла;
		
	КонецЕсли;
		
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Функция СписокОбъектовДокументооборота()

	Список = Новый СписокЗначений;
	
	Список.Добавить("DMIncomingDocument", НСтр("ru = 'Входящий документ'"));
	Список.Добавить("DMOutgoingDocument", НСтр("ru = 'Исходящий документ'"));
	Список.Добавить("DMInternalDocument", НСтр("ru = 'Внутренний документ'"));
	
	Возврат Список;

КонецФункции

&НаСервере
Процедура ЗаполнитьРеквизитыДокументооборота()
	
	Если Не ЗначениеЗаполнено(Объект.ТипОбъектаДокументооборота) Тогда 
		ПравилаЗаполненияРеквизитов.Очистить();
		
	Иначе	
		
		ПараметрыОтбора = Новый Структура;
		ПараметрыОтбора.Вставить("ИмяРеквизитаОбъектаДокументооборота", "documentType");
		ПараметрыОтбора.Вставить("ВариантПравилаЗаполненияРеквизитов", Перечисления.ВариантыПравилЗаполненияРеквизитов.ИзУказанногоЗначения);
		ПараметрыОтбора.Вставить("ДополнительныйРеквизит", Ложь);
		
		СтрокиВидДокумента = Объект.ПравилаЗаполненияРеквизитов.НайтиСтроки(ПараметрыОтбора);
		Если СтрокиВидДокумента.Количество() > 0 Тогда 
			СтрокаВидДокумента = СтрокиВидДокумента[0];
			
			ПараметрыЗаполнения = Новый Структура;
			ПараметрыЗаполнения.Вставить("documentType",
				Новый Структура("id, type, name", 
				СтрокаВидДокумента.ИдентификаторЗначенияРеквизита,
				СтрокаВидДокумента.ТипЗначенияРеквизита,
				СтрокаВидДокумента.ЗначениеРеквизитаДокументооборота));
			
			Реквизиты = Справочники.НастройкиЗаполненияОбъектов1СДокументооборота.
				ПолучитьРеквизитыОбъектаДокументооборота(Объект.ТипОбъектаДокументооборота, ПараметрыЗаполнения);
			
		Иначе		
			
			Реквизиты = Справочники.НастройкиЗаполненияОбъектов1СДокументооборота.
				ПолучитьРеквизитыОбъектаДокументооборота(Объект.ТипОбъектаДокументооборота);
			
		КонецЕсли;
		
		ПравилаЗаполненияРеквизитов.Очистить();
		Для Каждого Строка Из Реквизиты Цикл
			
			НоваяСтрока = ПравилаЗаполненияРеквизитов.Добавить();
			НоваяСтрока.ИмяРеквизитаОбъектаДокументооборота = Строка.Имя;
			НоваяСтрока.ПредставлениеРеквизитаОбъектаДокументооборота = Строка.Представление;
			НоваяСтрока.ТипРеквизитаОбъектаДокументооборота = Строка.Тип;
			НоваяСтрока.ДополнительныйРеквизит = Строка.ДопРеквизит;
			НоваяСтрока.ДополнительныйРеквизитID = Строка.ДопРеквизитID;
			НоваяСтрока.ДополнительныйРеквизитТип = Строка.ДопРеквизитТип;
			НоваяСтрока.ОбязательноеЗаполнение = Строка.ОбязательноеЗаполнение;
			
			Если Не Строка.ДопРеквизит Тогда 
				ПараметыОтбора = Новый Структура("ДополнительныйРеквизит, ИмяРеквизитаОбъектаДокументооборота", Ложь, Строка.Имя);
			Иначе
				ПараметыОтбора = Новый Структура("ДополнительныйРеквизит, ДополнительныйРеквизитID, ДополнительныйРеквизитТип", Истина, Строка.ДопРеквизитID, Строка.ДопРеквизитТип);
			КонецЕсли;
			
			НайденныеСтроки = Объект.ПравилаЗаполненияРеквизитов.НайтиСтроки(ПараметыОтбора);
			Если НайденныеСтроки.Количество() > 0 Тогда
				ЗаполнитьЗначенияСвойств(НоваяСтрока, НайденныеСтроки[0]);
			КонецЕсли;
			
		КонецЦикла;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьТаблЧастьОбъекта()
	
	Объект.ПравилаЗаполненияРеквизитов.Очистить();
	Для Каждого Строка Из ПравилаЗаполненияРеквизитов Цикл
		Если ЗначениеЗаполнено(Строка.ВариантПравилаЗаполненияРеквизитов)
			И (ЗначениеЗаполнено(Строка.ИмяРеквизитаОбъектаПотребителя) 
			Или ЗначениеЗаполнено(Строка.ЗначениеРеквизитаДокументооборота)
			Или ЗначениеЗаполнено(Строка.ВычисляемоеВыражение)) Тогда 
			
			НоваяСтрока = Объект.ПравилаЗаполненияРеквизитов.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, Строка);
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

