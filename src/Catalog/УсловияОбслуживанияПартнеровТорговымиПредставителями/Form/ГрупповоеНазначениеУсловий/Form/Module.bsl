////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

&НаСервере
Процедура ПриЗагрузкеДанныхИзНастроекНаСервере(Настройки)
	
	Куратор = Настройки.Получить("Куратор");
	ТорговыйПредставитель = Настройки.Получить("ТорговыйПредставитель");
	БизнесРегион = Настройки.Получить("БизнесРегион");
	
	ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбора(Список.Отбор, "ТорговыйПредставитель", ТорговыйПредставитель, ВидСравненияКомпоновкиДанных.Равно,, ЗначениеЗаполнено(ТорговыйПредставитель));
	ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбора(Список.Отбор, "Куратор", Куратор, ВидСравненияКомпоновкиДанных.Равно,, ЗначениеЗаполнено(Куратор));
	ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбора(Список.Отбор, "БизнесРегион", БизнесРегион, ВидСравненияКомпоновкиДанных.Равно,, ЗначениеЗаполнено(БизнесРегион));
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ ШАПКИ ФОРМЫ

&НаКлиенте
Процедура ТорговыйПредставительДляОтбораПриИзменении(Элемент)
	
	ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбора(Список.Отбор, "ТорговыйПредставитель", ТорговыйПредставитель, ВидСравненияКомпоновкиДанных.Равно,, ЗначениеЗаполнено(ТорговыйПредставитель));
	
КонецПроцедуры

&НаКлиенте
Процедура БизнесРегионДляОтбораПриИзменении(Элемент)
	
	ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбора(Список.Отбор, "БизнесРегион", БизнесРегион, ВидСравненияКомпоновкиДанных.Равно,, ЗначениеЗаполнено(БизнесРегион));
	
КонецПроцедуры

&НаКлиенте
Процедура КураторДляОтбораПриИзменении(Элемент)
	
	ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбора(Список.Отбор, "Куратор", Куратор, ВидСравненияКомпоновкиДанных.Равно,, ЗначениеЗаполнено(Куратор));
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ КОМАНД ФОРМЫ

&НаКлиенте
Процедура ИзменитьУсловия(Команда)
	
	Если Элементы.Список.ВыделенныеСтроки.Количество() = 0 Тогда
		ТекстСообщения = НСтр("ru='Не указаны условия, подлежащие изменению'");
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения);
		Возврат;
	КонецЕсли;
	
	Результат = ОткрытьФормуМодально("Справочник.УсловияОбслуживанияПартнеровТорговымиПредставителями.Форма.ИзменяемыеУсловияОбслуживания");
	
	Если ТипЗнч(Результат) = Тип("Структура") Тогда
		
		МассивУсловий = Элементы.Список.ВыделенныеСтроки;
		
		ИзменитьУсловияОбслуживания(МассивУсловий, Результат);
		ЗаголовокОповещения = НСтр("ru='Изменение условий обслуживания партнеров'");
		ТекстОповещения = НСтр("ru='Условия обслуживания партнеров изменены'");
		
		ПоказатьОповещениеПользователя(ЗаголовокОповещения,,ТекстОповещения);
		
		Элементы.Список.Обновить();
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ДобавитьУсловия(Команда)
	
	ПараметрыФормы = Новый Структура();
	ПараметрыФормы.Вставить("БизнесРегион", БизнесРегион);
	
	Результат = ОткрытьФормуМодально("Справочник.УсловияОбслуживанияПартнеровТорговымиПредставителями.Форма.ДобавляемыеУсловияОбслуживания", ПараметрыФормы);
	
	Если ТипЗнч(Результат) = Тип("Структура") Тогда
		
		ДобавитьНовыеУсловияОбслуживания(Результат);
		ЗаголовокОповещения = НСтр("ru='Добавление условий обслуживания партнеров'");
		ТекстОповещения = НСтр("ru='Добавлены новые условия обслуживания партнеров'");
		
		ПоказатьОповещениеПользователя(ЗаголовокОповещения,,ТекстОповещения);
		
		Элементы.Список.Обновить();
		
	КонецЕсли;
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

&НаСервере
Процедура ДобавитьНовыеУсловияОбслуживания(Данные)
	
	МассивПартнеров = Данные.Партнеры;
	СтруктураУсловийОбслуживания = Данные.УсловияОбслуживания;
	
	ПартнерыБезПризнакаОбслуживания = ПартнерыБезПризнакаОбслуживанияТорговымиПредставителями(МассивПартнеров);
	
	НачатьТранзакцию();
	
	Для Каждого Партнер из МассивПартнеров Цикл
		
		Если ПартнерыБезПризнакаОбслуживания.Найти(Партнер)<>Неопределено Тогда
			
			ПартнерОбъект = Партнер.ПолучитьОбъект();
			ПартнерОбъект.ОбслуживаетсяТорговымиПредставителями = Истина;
			
			Попытка
				ПартнерОбъект.Записать();
			Исключение
				
				ТекстСообщения = НСтр("ru='Не удалось установить для партнера %Партнер% 
										|признак обслуживания торговыми представителями.'");
										
				ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Партнер%", Партнер);
				ТекстСообщения = ТекстСообщения + Символы.ПС + НСтр("ru='Добавление условий не выполнено'");
				ТекстСообщения = ТекстСообщения + Символы.ПС + ОписаниеОшибки();
				
				ОтменитьТранзакцию();
				ВызватьИсключение(ТекстСообщения);
				
			КонецПопытки;
			
		КонецЕсли;
		
		СоздатьНовыеУсловия(Партнер, СтруктураУсловийОбслуживания);
		
	КонецЦикла;
	
	ЗафиксироватьТранзакцию();
	
КонецПроцедуры

&НаСервере
Процедура СоздатьНовыеУсловия(Партнер, СтруктураУсловий)
	
	НовыеУсловия = Справочники.УсловияОбслуживанияПартнеровТорговымиПредставителями.СоздатьЭлемент();
			
	НовыеУсловия.Владелец = Партнер;
	ЗаполнитьЗначенияСвойств(НовыеУсловия, СтруктураУсловий,, "ГрафикПосещения");
	
	КоллекцияСтрокГрафика = СтруктураУсловий.ГрафикПосещения;
	
	Для Каждого СтрокаГрафика из КоллекцияСтрокГрафика Цикл
		НоваяСтрока = НовыеУсловия.ГрафикПосещения.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаГрафика);
	КонецЦикла;
	
	НовыеУсловия.Записать();
			
КонецПроцедуры

&НаСервере
Функция ПартнерыБезПризнакаОбслуживанияТорговымиПредставителями(МассивПартнеров)
	
	ТекстЗапроса = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	Партнеры.Ссылка КАК Партнер
	|ИЗ
	|	Справочник.Партнеры КАК Партнеры
	|ГДЕ
	|	Партнеры.Ссылка В(&МассивПартнеров)
	|	И НЕ Партнеры.ОбслуживаетсяТорговымиПредставителями"
	;
	
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.УстановитьПараметр("МассивПартнеров", МассивПартнеров);
	
	РезультатЗапроса = Запрос.Выполнить();
	Если РезультатЗапроса.Пустой() Тогда
		Возврат Новый Массив;
	КонецЕсли;
	
	Возврат РезультатЗапроса.Выгрузить().ВыгрузитьКолонку("Партнер");
	
КонецФункции

&НаСервере
Процедура ИзменитьУсловияОбслуживания(МассивИзменяемыхУсловий, СтруктураНазначаемыхУсловий)
	
	НачатьТранзакцию();
	
	Для Каждого ЭлементСправочникаУсловий из МассивИзменяемыхУсловий Цикл
		
		УсловияОбъект = ЭлементСправочникаУсловий.ПолучитьОбъект();
		
		Если СтруктураНазначаемыхУсловий.Свойство("ГрафикПосещения") Тогда
			ИсключаемыеСвойства = "ГрафикПосещения";
		Иначе
			ИсключаемыеСвойства = "";
		КонецЕсли;
		
		ЗаполнитьЗначенияСвойств(УсловияОбъект, СтруктураНазначаемыхУсловий,, ИсключаемыеСвойства);
		
		Если СтруктураНазначаемыхУсловий.Свойство("ГрафикПосещения") Тогда
			
			УсловияОбъект.ГрафикПосещения.Очистить();
			
			КоллекцияСтрокГрафика = СтруктураНазначаемыхУсловий.ГрафикПосещения;
			
			Для Каждого СтрокаГрафика из КоллекцияСтрокГрафика Цикл
				НоваяСтрока = УсловияОбъект.ГрафикПосещения.Добавить();
				ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаГрафика);
			КонецЦикла;
			
		КонецЕсли;
		
		Попытка
			УсловияОбъект.Записать();
		Исключение
			
			ТекстСообщения = НСтр("ru='Не удалось изменить условия обслуживания  
			|%Условия% для партнера %Партнер%'");
			
			ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Условия%", ЭлементСправочникаУсловий);
			ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Партнер%", УсловияОбъект.Владелец);
			
			ТекстСообщения = ТекстСообщения + Символы.ПС + НСтр("ru='Изменение условий не выполнено'");
			ТекстСообщения = ТекстСообщения + Символы.ПС + ОписаниеОшибки();
			
			ОтменитьТранзакцию();
			ВызватьИсключение(ТекстСообщения);
			
		КонецПопытки;
		
	КонецЦикла;
	
	ЗафиксироватьТранзакцию();
	
КонецПроцедуры