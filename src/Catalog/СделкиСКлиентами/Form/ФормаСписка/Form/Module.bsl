
////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// Пропускаем инициализацию, чтобы гарантировать получение формы при передаче параметра "АвтоТест".
	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;
	КонецЕсли;
	
	// Обработчик подсистемы "Дополнительные отчеты и обработки"
	ДополнительныеОтчетыИОбработки.ПриСозданииНаСервере(ЭтаФорма);
	
	//исключить группировку по виду сделки, если управление не используется
	Если Не ПолучитьФункциональнуюОпцию("ИспользоватьУправлениеСделками") Тогда
		Элементы.БыстраяГруппировка.СписокВыбора.Удалить(
			Элементы.БыстраяГруппировка.СписокВыбора.НайтиПоЗначению("ВидСделки")
		);
	КонецЕсли;
	
	//установить нестандартный отбор по параметрам
	Если Параметры.Свойство("ПоГруппе") Тогда
		ОтборПоКлиенту = Параметры.ПоГруппе;
		ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбора(
			Список.Отбор,
			"Клиент",
			ОтборПоКлиенту,
			ВидСравненияКомпоновкиДанных.ВИерархии,,Истина
		);
	КонецЕсли;
	
	Если Параметры.Свойство("ПоУчастнику") Тогда
		
		Участник = Параметры.ПоУчастнику;
		
		Если ТипЗнч(Участник) = Тип("СправочникСсылка.Партнеры") Тогда
			Элементы.ТолькоКлиент.Видимость = Истина;
			ПартнерКлиент = Участник;
		КонецЕсли;

		Запрос = Новый Запрос(
			"ВЫБРАТЬ
			|	УчастиеВСделках.Ссылка
			|ИЗ
			|	КритерийОтбора.УчастиеВСделках(&Участник) КАК УчастиеВСделках"
		);
		Запрос.УстановитьПараметр("Участник", Участник);
		
		ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбора(
			Список.Отбор,
			"Ссылка",
			Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Ссылка"),
			ВидСравненияКомпоновкиДанных.ВСписке,,Истина
		);
		
	КонецЕсли;
	
	НаЗакрытиеПоУмолчанию = Параметры.Свойство("НаЗакрытие");
	Если НаЗакрытиеПоУмолчанию Тогда
		
		ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбора(
			Список.Отбор,
			"Статус",
			Перечисления.СтатусыСделок.ВРаботе,
			ВидСравненияКомпоновкиДанных.НеРавно,,Истина
		);
		
		ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбора(Список.Отбор, "Закрыта", Ложь, ВидСравненияКомпоновкиДанных.Равно,,Истина);
		
		АвтоЗаголовок = Ложь;
		Заголовок     = НСтр("ru='Сделки на закрытие'");
		Элементы.ФильтрСтатус.Видимость = Ложь;
	КонецЕсли;
	
	СтруктураБыстрогоОтбора = Неопределено;
	Параметры.Свойство("СтруктураБыстрогоОтбора", СтруктураБыстрогоОтбора);
	
	Если СтруктураБыстрогоОтбора <> Неопределено Тогда
		СтруктураБыстрогоОтбора.Свойство("Ответственный",Ответственный);
		СтруктураБыстрогоОтбора.Свойство("Статус",       Статус);
		СтруктураБыстрогоОтбора.Свойство("ТолькоКлиент", ТолькоКлиент);
	КонецЕсли;
	
	ОтборыСписковКлиентСервер.ОтборПоЗначениюСпискаПриСозданииНаСервере(Список, "Ответственный", Ответственный, СтруктураБыстрогоОтбора);
	ОтборыСписковКлиентСервер.ОтборПоЗначениюСпискаПриСозданииНаСервере(Список, "ТолькоКлиент", ТолькоКлиент, СтруктураБыстрогоОтбора);
	УстановитьОтборПоСтатусуСервер(Статус);
	
	Если ПустаяСтрока(Статус) Тогда
		Статус = "Все";
	КонецЕсли;
	
	ОтборыСписковКлиентСервер.СкопироватьСписокВыбораОтбораПоМенеджеру(
		Элементы.ФильтрОтветственный.СписокВыбора,
		ОбщегоНазначенияУТ.ПолучитьСписокПользователейПоМассивуРолей(Справочники.СделкиСКлиентами.ИменаРолейСПравомДобавления())
	);
	
КонецПроцедуры

&НаСервере
Процедура ПриЗагрузкеДанныхИзНастроекНаСервере(Настройки)
	
	ОтборыСписковКлиентСервер.ОтборПоЗначениюСпискаПриЗагрузкеИзНастроек(Список, "Ответственный", Ответственный, СтруктураБыстрогоОтбора, Настройки);
	ОтборыСписковКлиентСервер.ОтборПоЗначениюСпискаПриЗагрузкеИзНастроек(Список, "ТолькоКлиент", ТолькоКлиент, СтруктураБыстрогоОтбора, Настройки);
	
	Если Статус = "" Тогда
		Статус = Настройки.Получить("Статус");
		УстановитьОтборПоСтатусуСервер(Статус);
	Иначе
		Настройки.Удалить("Статус");
	КонецЕсли;
	
	Если ЗначениеЗаполнено(БыстраяГруппировка) Тогда
		ПолеГруппировки = Список.Группировка.Элементы.Добавить(Тип("ПолеГруппировкиКомпоновкиДанных"));
		ПолеГруппировки.Поле = Новый ПолеКомпоновкиДанных(БыстраяГруппировка);
		ПолеГруппировки.Использование = Истина;
	КонецЕсли;
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ ШАПКИ ФОРМЫ

&НаКлиенте
Процедура ТолькоКлиентПриИзменении(Элемент)

	ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбора(
		Список.Отбор,
		"Партнер",
		ПартнерКлиент,
		ВидСравненияКомпоновкиДанных.Равно,,ТолькоКлиент
	);

КонецПроцедуры

&НаКлиенте
Процедура БыстраяГруппировкаПриИзменении(Элемент)

	Список.Группировка.Элементы.Очистить();
	Если ЗначениеЗаполнено(БыстраяГруппировка) Тогда
		ПолеГруппировки = Список.Группировка.Элементы.Добавить(Тип("ПолеГруппировкиКомпоновкиДанных"));
		ПолеГруппировки.Поле = Новый ПолеКомпоновкиДанных(БыстраяГруппировка);
		ПолеГруппировки.Использование = Истина;
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ФильтрСтатусПриИзменении(Элемент)

	Список.Отбор.Элементы.Очистить();

	Если Статус = "ВРаботе" Тогда
		ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбора(
			Список.Отбор,
			"Статус",
			ПредопределенноеЗначение("Перечисление.СтатусыСделок.ВРаботе"),
			ВидСравненияКомпоновкиДанных.Равно,,Истина
		);
	ИначеЕсли Статус = "Выиграна" Тогда
		ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбора(
			Список.Отбор,
			"Статус",
			ПредопределенноеЗначение("Перечисление.СтатусыСделок.Выиграна"),
			ВидСравненияКомпоновкиДанных.Равно,,Истина
		);
	ИначеЕсли Статус = "Проиграна" Тогда
		ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбора(
			Список.Отбор,
			"Статус",
			ПредопределенноеЗначение("Перечисление.СтатусыСделок.Проиграна"),
			ВидСравненияКомпоновкиДанных.Равно,,Истина
		);
	ИначеЕсли Статус = "НаЗакрытие" Тогда
		ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбора(
			Список.Отбор,
			"Статус",
			ПредопределенноеЗначение("Перечисление.СтатусыСделок.ВРаботе"),
			ВидСравненияКомпоновкиДанных.НеРавно,,Истина
		);
		ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбора(Список.Отбор, "Закрыта", Ложь, ВидСравненияКомпоновкиДанных.Равно,,Истина);
	ИначеЕсли Статус = "Открытые" Тогда
		ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбора(Список.Отбор, "Закрыта", Ложь, ВидСравненияКомпоновкиДанных.Равно,,Истина);
	ИначеЕсли Статус = "Закрытые" Тогда
		ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбора(Список.Отбор, "Закрыта", Истина, ВидСравненияКомпоновкиДанных.Равно,,Истина);
	КонецЕсли;

	Если ЗначениеЗаполнено(Ответственный) Тогда
		ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбора(
			Список.Отбор,
			"Ответственный",
			Ответственный,
			ВидСравненияКомпоновкиДанных.Равно,, Истина
		);
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ФильтрОтветственныйПриИзменении(Элемент)

	ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбора(
		Список.Отбор,
		"Ответственный",
		Ответственный,
		ВидСравненияКомпоновкиДанных.Равно,, ЗначениеЗаполнено(Ответственный)
	);

КонецПроцедуры

&НаКлиенте
Процедура ФильтрСтатусОчистка(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ КОМАНД ФОРМЫ

&НаКлиенте
Процедура ИзменитьВыделенные(Команда)
	
	ГрупповоеИзменениеОбъектовКлиент.ИзменитьВыделенные(Элементы.Список);
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПРОЧЕЕ

Процедура УстановитьОтборПоСтатусуСервер(Статус)
	
	Если НЕ НаЗакрытиеПоУмолчанию И ЗначениеЗаполнено(Статус) И Статус <> "Все" Тогда
		Если Статус = "ВРаботе" Тогда
			ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбора(
			Список.Отбор,
			"Статус",
			ПредопределенноеЗначение("Перечисление.СтатусыСделок.ВРаботе"),
			ВидСравненияКомпоновкиДанных.Равно,,Истина
			);
		ИначеЕсли Статус = "Выиграна" Тогда
			ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбора(
			Список.Отбор,
			"Статус",
			ПредопределенноеЗначение("Перечисление.СтатусыСделок.Выиграна"),
			ВидСравненияКомпоновкиДанных.Равно,,Истина
			);
		ИначеЕсли Статус = "Проиграна" Тогда
			ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбора(
			Список.Отбор,
			"Статус",
			ПредопределенноеЗначение("Перечисление.СтатусыСделок.Проиграна"),
			ВидСравненияКомпоновкиДанных.Равно,,Истина
			);
		ИначеЕсли Статус = "НаЗакрытие" Тогда
			ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбора(
			Список.Отбор,
			"Статус",
			ПредопределенноеЗначение("Перечисление.СтатусыСделок.ВРаботе"),
			ВидСравненияКомпоновкиДанных.НеРавно,,Истина
			);
			ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбора(Список.Отбор, "Закрыта", Ложь, ВидСравненияКомпоновкиДанных.Равно,,Истина);
		ИначеЕсли Статус = "Открытые" Тогда
			ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбора(Список.Отбор, "Закрыта", Ложь, ВидСравненияКомпоновкиДанных.Равно,,Истина);
		ИначеЕсли Статус = "Закрытые" Тогда
			ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбора(Список.Отбор, "Закрыта", Истина, ВидСравненияКомпоновкиДанных.Равно,,Истина);
		КонецЕсли;
	Иначе
		Статус = "Все";
	КонецЕсли;
	
КонецПроцедуры
