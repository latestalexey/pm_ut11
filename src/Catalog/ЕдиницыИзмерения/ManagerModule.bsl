#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

////////////////////////////////////////////////////////////////////////////////
// ПРОГРАММНЫЙ ИНТЕРФЕЙС

// Получает единицу измерения, если единица измерения одна в справочнике.
//
// Возвращаемое значение:
// СправочникСсылка.ЕдиницыИзмерения - Найденная единица измерения
// Неопределено - если единиц измерения нет или единиц измерения больше одной
//
Функция ЕдиницаИзмеренияПоУмолчанию() Экспорт
	
	Запрос = Новый Запрос("
	|ВЫБРАТЬ ПЕРВЫЕ 2
	|	ЕдиницыИзмерения.Ссылка КАК ЕдиницаИзмерения
	|ИЗ
	|	Справочник.ЕдиницыИзмерения КАК ЕдиницыИзмерения
	|ГДЕ
	|	Не ЕдиницыИзмерения.ПометкаУдаления
	|");
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Если РезультатЗапроса.Пустой() Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	Выборка = РезультатЗапроса.Выбрать();
	
	Если Выборка.Количество() = 1 Тогда
		Выборка.Следующий();
		ЕдиницаИзмерения = Выборка.ЕдиницаИзмерения;
	Иначе
		ЕдиницаИзмерения = Неопределено;
	КонецЕсли;
	
	Возврат ЕдиницаИзмерения;

КонецФункции // ЕдиницаИзмерения()

// Процедура заполняет справочник единицы измерения значениями по умолчанию.
//
Процедура ЗаполнитьЕдиницыИзмеренияПоУмолчанию() Экспорт
	
	ИмяВременногоФайла = ПолучитьИмяВременногоФайла();
	Макет = Справочники.ЕдиницыИзмерения.ПолучитьМакет("КлассификаторЕдиницИзмерения");
	Макет.Записать(ИмяВременногоФайла);
	Дерево = ЗначениеИзФайла(ИмяВременногоФайла);
	
	МассивКодов = Новый Массив;
	МассивКодов.Добавить("006");
	МассивКодов.Добавить("113");
	МассивКодов.Добавить("166");
	МассивКодов.Добавить("796");
	
	КодыШтучныхТоваров = Новый Массив;
	КодыШтучныхТоваров.Добавить("796");
	
	Для Каждого Код Из МассивКодов Цикл
		
		Если Не ЗначениеЗаполнено(Справочники.ЕдиницыИзмерения.НайтиПоКоду(Код)) Тогда
			
			СтуруктураПоиска = Новый Структура("КодЧисловой", Код);
			СтрокаДерева = Дерево.Строки.НайтиСтроки(СтуруктураПоиска, Истина);
			
			Если СтрокаДерева.Количество() > 0 Тогда
				СвойстваЕдИзмерения = СтрокаДерева[0];
				
				СправочникОбъект = Справочники.ЕдиницыИзмерения.СоздатьЭлемент();
				
				Если ЗначениеЗаполнено(СвойстваЕдИзмерения.УсловноеОбозначениеНациональное) Тогда
					Наименование = СвойстваЕдИзмерения.УсловноеОбозначениеНациональное;
				ИначеЕсли ЗначениеЗаполнено(СвойстваЕдИзмерения.УсловноеОбозначениеМеждународное) Тогда
					Наименование = СвойстваЕдИзмерения.УсловноеОбозначениеМеждународное;
				ИначеЕсли ЗначениеЗаполнено(СвойстваЕдИзмерения.КодовоеБуквенноеОбозначениеНациональное) Тогда
					Наименование = СвойстваЕдИзмерения.КодовоеБуквенноеОбозначениеНациональное;
				ИначеЕсли ЗначениеЗаполнено(СвойстваЕдИзмерения.КодовоеБуквенноеОбозначениеМеждународное) Тогда
					Наименование = СвойстваЕдИзмерения.КодовоеБуквенноеОбозначениеМеждународное;
				Иначе
					Наименование = СвойстваЕдИзмерения.Наименование;
				КонецЕсли;
				
				СправочникОбъект.Наименование            = СтрЗаменить(Наименование,Символы.ПС,"/");
				СправочникОбъект.МеждународноеСокращение = СтрЗаменить(СвойстваЕдИзмерения.КодовоеБуквенноеОбозначениеМеждународное,Символы.ПС,"/");
				СправочникОбъект.НаименованиеПолное      = СтрЗаменить(СвойстваЕдИзмерения.Наименование,Символы.ПС,"/");
				СправочникОбъект.Код                     = СвойстваЕдИзмерения.КодЧисловой;
				
				Если СвойстваЕдИзмерения.ВесоваяЕдиницаИзмерения Тогда
					СправочникОбъект.ТипЕдиницыИзмерения = Перечисления.ТипыЕдиницИзмерения.Весовая;
				Иначе
					Если КодыШтучныхТоваров.Найти(СтрокаДерева[0].КодЧисловой) <> Неопределено Тогда
						СправочникОбъект.ТипЕдиницыИзмерения = Перечисления.ТипыЕдиницИзмерения.Штучная;
					КонецЕсли;
				КонецЕсли;
				
				Попытка
					СправочникОбъект.Записать();
				Исключение
				КонецПопытки;
				
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

#КонецЕсли