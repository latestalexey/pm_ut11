#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда


////////////////////////////////////////////////////////////////////////////////
// ПРОГРАММНЫЙ ИНТЕРФЕЙС

// Функция получает значения реквизитов выбранного контрагента.
//
// Параметры:
//  Контрагент - СправочникСсылка.Контрагенты - Ссылка на контрагента
//
// Возвращаемое значение:
//  Структура - реквизиты выбранного контрагента
//
Функция РеквизитыКонтрагента(Контрагент) Экспорт
	
	Запрос = Новый Запрос("
	|ВЫБРАТЬ
	|	ВЫРАЗИТЬ(Контрагенты.НаименованиеПолное КАК Строка(1000)) КАК НаименованиеПолное,
	|	Контрагенты.ИНН КАК ИНН,
	|	Контрагенты.КПП КАК КПП,
	|	Контрагенты.КодПоОКПО КАК КодПоОКПО,
	|	Контрагенты.ЮрФизЛицо КАК ЮрФизЛицо
	|ИЗ
	|	Справочник.Контрагенты КАК Контрагенты
	|ГДЕ
	|	Контрагенты.Ссылка = &Контрагент
	|");
	Запрос.УстановитьПараметр("Контрагент", Контрагент);
	
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда
		Представление	= Выборка.НаименованиеПолное;
		Наименование	= Выборка.НаименованиеПолное;
		ИНН				= Выборка.ИНН;
		КПП				= Выборка.КПП;
		КодПоОКПО		= Выборка.КодПоОКПО;
		ЮрФизЛицо		= Выборка.ЮрФизЛицо;
	Иначе
		Представление	= "";
		Наименование	= "";
		ИНН				= "";
		КПП				= "";
		КодПоОКПО		= "";
		ЮрФизЛицо		= Перечисления.ЮрФизЛицо.ПустаяСсылка();
	КонецЕсли;
	
	СтруктураРеквизитов = Новый Структура("Представление, Наименование, ИНН, КПП, КодПоОКПО, ЮрФизЛицо",
		Представление,
		Наименование,
		ИНН,
		КПП,
		КодПоОКПО,
		ЮрФизЛицо
	);
	
	Возврат СтруктураРеквизитов;

КонецФункции 

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ 

Процедура ОбработкаПолученияДанныхВыбора(ДанныеВыбора, Параметры, СтандартнаяОбработка)
	
Партнер = Неопределено;
	
	Если Параметры.Отбор.Свойство("Партнер") Тогда
		Партнер = ?(ЗначениеЗаполнено(Параметры.Отбор.Партнер),Параметры.Отбор.Партнер,Неопределено);
		Параметры.Отбор.Удалить("Партнер");
	КонецЕсли;
	
	СтандартнаяОбработка = Ложь;
	Запрос = Новый Запрос;
	Запрос.Текст = "
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
	|	Контрагенты.Ссылка,
	|	ПРЕДСТАВЛЕНИЕ(Контрагенты.Ссылка) КАК Представление,
	|	ВЫБОР
	|		КОГДА ИерархияПартнеров.Партнер = &Партнер
	|			ТОГДА ИерархияПартнеров.Родитель.Наименование
	|		ИНАЧЕ Контрагенты.Партнер.Наименование
	|	КОНЕЦ КАК ПартнерНаименование,
	|	Контрагенты.Наименование,
	|	ВЫБОР
	|		КОГДА ИерархияПартнеров.Партнер = &Партнер
	|			ТОГДА ИерархияПартнеров.Уровень
	|		ИНАЧЕ -1
	|	КОНЕЦ КАК ПорядокВывода,
	|	Контрагенты.ИНН,
	|	""По наименованию"" КАК НайденоПо,
	|	Контрагенты.ПометкаУдаления
	|ИЗ
	|	Справочник.Контрагенты КАК Контрагенты
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ИерархияПартнеров КАК ИерархияПартнеров
	|		ПО Контрагенты.Партнер = ИерархияПартнеров.Родитель
	|ГДЕ
	|	Контрагенты.Наименование ПОДОБНО &СтрокаВвода
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	Контрагенты.Ссылка,
	|	ПРЕДСТАВЛЕНИЕ(Контрагенты.Ссылка) КАК Представление,
	|	ВЫБОР
	|		КОГДА ИерархияПартнеров.Партнер = &Партнер
	|			ТОГДА ИерархияПартнеров.Родитель.Наименование
	|		ИНАЧЕ Контрагенты.Партнер.Наименование
	|	КОНЕЦ,
	|	Контрагенты.Наименование,
	|	ВЫБОР
	|		КОГДА ИерархияПартнеров.Партнер = &Партнер
	|			ТОГДА ИерархияПартнеров.Уровень
	|		ИНАЧЕ -1
	|	КОНЕЦ,
	|	Контрагенты.ИНН,
	|	""По ИНН"",
	|	Контрагенты.ПометкаУдаления
	|ИЗ
	|	Справочник.Контрагенты КАК Контрагенты
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ИерархияПартнеров КАК ИерархияПартнеров
	|		ПО Контрагенты.Партнер = ИерархияПартнеров.Родитель
	|ГДЕ
	|	Контрагенты.ИНН ПОДОБНО &СтрокаВвода
	|
	|УПОРЯДОЧИТЬ ПО
	|	ПометкаУдаления,
	|	ПорядокВывода УБЫВ";
	
	Запрос.УстановитьПараметр("СтрокаВвода",Параметры.СтрокаПоиска + "%" );
	Запрос.УстановитьПараметр("Партнер",Партнер);
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	ДанныеВыбора = Новый СписокЗначений();
	
	Пока Выборка.Следующий() Цикл
		
		Если ДанныеВыбора.НайтиПоЗначению(Выборка.Ссылка) = Неопределено Тогда
			
			Если Выборка.НайденоПо = "По наименованию"  Тогда
				Представление = Выборка.Наименование;
			Иначе
				Представление = Выборка.ИНН + "(" +Выборка.Наименование + ")";
			КонецЕсли;
			
			Если ПолучитьФункциональнуюОпцию("ИспользоватьПартнеровИКонтрагентов") Тогда
				Представление = Представление + "(" + Выборка.ПартнерНаименование + ")";
			КонецЕсли;
			
			Если Выборка.ПометкаУдаления Тогда
				СтруктураЗначение = Новый Структура("Значение,ПометкаУдаления", Выборка.Ссылка, Выборка.ПометкаУдаления);
				ДанныеВыбора.Добавить(СтруктураЗначение,Представление,,БиблиотекаКартинок.ПомеченныйНаУдалениеЭлемент);
			Иначе
				ДанныеВыбора.Добавить(Выборка.Ссылка,Представление);
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ОбработкаПолученияФормы(ВидФормы, Параметры, ВыбраннаяФорма, ДополнительнаяИнформация, СтандартнаяОбработка)
	
	Если ВидФормы = "ФормаВыбора" И ПолучитьФункциональнуюОпцию("ИспользоватьПартнеровКакКонтрагентов") Тогда
		
		ВыбраннаяФорма       = "ФормаВыбораИспользуютсяТолькоПартнеры";
		СтандартнаяОбработка = Ложь;
		
	КонецЕсли;
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

////////////////////////////////////////////////////////////////////////////////
// Обновление информационной базы

//Заполняет документы контрагентов по данным ранее связанных с контрагентом физ. лиц.
Процедура ЗаполнитьДокументыКонтрагентовПоДокументамФизЛиц() Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = "
	|ВЫБРАТЬ
	|	ДокументыФизическихЛицСрезПоследних.Физлицо,
	|	ДокументыФизическихЛицСрезПоследних.ВидДокумента,
	|	Контрагенты.Ссылка КАК Контрагент,
	|	ДокументыФизическихЛицСрезПоследних.Период,
	|	ДокументыФизическихЛицСрезПоследних.Серия,
	|	ДокументыФизическихЛицСрезПоследних.Номер,
	|	ДокументыФизическихЛицСрезПоследних.ДатаВыдачи,
	|	ДокументыФизическихЛицСрезПоследних.СрокДействия,
	|	ДокументыФизическихЛицСрезПоследних.КемВыдан,
	|	ДокументыФизическихЛицСрезПоследних.КодПодразделения,
	|	ДокументыФизическихЛицСрезПоследних.ЯвляетсяДокументомУдостоверяющимЛичность
	|ИЗ
	|	РегистрСведений.ДокументыФизическихЛиц.СрезПоследних(&ТекущаяДата, Физлицо ССЫЛКА Справочник.ФизическиеЛица) КАК ДокументыФизическихЛицСрезПоследних
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Контрагенты КАК Контрагенты
	|		ПО ДокументыФизическихЛицСрезПоследних.Физлицо = Контрагенты.УдалитьФизЛицо
	|ГДЕ
	|	НЕ Контрагенты.Ссылка В
	|				(ВЫБРАТЬ
	|					ДокументыФизическихЛиц.Физлицо
	|				ИЗ
	|					РегистрСведений.ДокументыФизическихЛиц КАК ДокументыФизическихЛиц
	|				ГДЕ
	|					ДокументыФизическихЛиц.Физлицо ССЫЛКА Справочник.Контрагенты)";
	
	Запрос.УстановитьПараметр("ТекущаяДата", ТекущаяДата());
	
	Результат = Запрос.Выполнить();
	Если Результат.Пустой() Тогда
		Возврат;
	КонецЕсли;
	
	Выборка = Результат.Выбрать();
	Пока Выборка.Следующий() Цикл
	
		МенеджерНовойЗаписи = РегистрыСведений.ДокументыФизическихЛиц.СоздатьМенеджерЗаписи();
		ЗаполнитьЗначенияСвойств(МенеджерНовойЗаписи, Выборка);
		МенеджерНовойЗаписи.Физлицо = Выборка.Контрагент;
		МенеджерНовойЗаписи.Записать();
	
	КонецЦикла;
	
КонецПроцедуры

#КонецЕсли