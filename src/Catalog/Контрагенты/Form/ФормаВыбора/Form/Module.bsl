////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если ПолучитьФункциональнуюОпцию("ИспользоватьПартнеровКакКонтрагентов") Тогда
		
		ТолькоПросмотр = Истина;
		ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбора(Список.Отбор, "Партнер", Справочники.Партнеры.НеизвестныйПартнер, ВидСравненияКомпоновкиДанных.НеРавно);
		
	КонецЕсли;
	
	
	Если Параметры.Свойство("Отбор")
		И Параметры.Отбор.Свойство("Партнер")
		И ЗначениеЗаполнено(Параметры.Отбор.Партнер) Тогда
		
		КлючНастроек = "ФормаСпискаПараметрическая" + Параметры.Отбор.Партнер.УникальныйИдентификатор();
		ЗагрузитьНастройки();
		
		Партнер = Параметры.Отбор.Партнер;
		
		ПартнерыИКонтрагенты.ЗаполнитьСписокПартнераСРодителями(Партнер, СписокПартнеров);
		
		Элементы.ПоказыватьГрупповые.Видимость = СписокПартнеров.Количество() > 1 И ПоПартнеру;
		
		Если ЗначениеЗаполнено(Партнер) Тогда
			НайденныйПартнер = СписокПартнеров.НайтиПоЗначению(Партнер);
			Если НайденныйПартнер <> Неопределено Тогда
				ТекстЗаголовка = НСтр("ru='По партнеру ""%Партнер%""'");
				ТекстЗаголовка = СтрЗаменить(ТекстЗаголовка, "%Партнер%", НайденныйПартнер.Представление);
			КонецЕсли;
		КонецЕсли;
		
		Элементы.ПоПартнеру.Заголовок = ТекстЗаголовка;
		
		Параметры.Отбор.Удалить("Партнер");
		
		Если ПоПартнеру Тогда
			УстановитьОтборПартнеровСервер(ПоказыватьГрупповые И Элементы.ПоказыватьГрупповые.Видимость);
		КонецЕсли;
		
	Иначе
		Партнер = Справочники.Партнеры.ПустаяСсылка();
		Элементы.ПоказыватьГрупповые.Видимость = Ложь;
		Элементы.ПоПартнеру.Видимость          = Ложь;
	КонецЕсли; 
	
КонецПроцедуры

&НаКлиенте
Процедура ПриЗакрытии()
	
	СохранитьНастройки();
	
КонецПроцедуры 

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ ШАПКИ ФОРМЫ

&НаКлиенте
Процедура ПоПартнеруПриИзменении(Элемент)

	ПоказыватьГрупповые = ПоПартнеру;
	Элементы.ПоказыватьГрупповые.Видимость = (СписокПартнеров.Количество() > 1 И ПоПартнеру);
	Если ПоПартнеру Тогда
		УстановитьОтборПартнеров(Истина);
	Иначе
		Для Каждого Элемент Из Список.Отбор.Элементы Цикл
			Список.Отбор.Элементы.Удалить(Элемент);
		КонецЦикла;
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ПоказыватьГрупповыеПриИзменении(Элемент)

	УстановитьОтборПартнеров(ПоказыватьГрупповые); 

КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ ТАБЛИЦЫ ФОРМЫ СПИСОК

&НаКлиенте
Процедура СписокПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа)
	
	Если Не Партнер.Пустая() Тогда
	
		 Отказ = Истина;
		 СтруктураПараметров = Новый Структура("Основание", Новый Структура("Партнер",Партнер));
		 ОткрытьФормуМодально("Справочник.Контрагенты.ФормаОбъекта", СтруктураПараметров);
	
	КонецЕсли;
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

&НаКлиенте
Процедура УстановитьОтборПартнеров(УстановитьДляГруппы = Истина)
	
	Список.Отбор.Элементы.Очистить();
	Если УстановитьДляГруппы Тогда
		
		//создать элемент группы - отбор по партнеру
		ТекущийПартнер = Список.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
		ТекущийПартнер.ВидСравнения   = ВидСравненияКомпоновкиДанных.ВСписке;
		ТекущийПартнер.ЛевоеЗначение  = Новый ПолеКомпоновкиДанных("Партнер");
		ТекущийПартнер.ПравоеЗначение = СписокПартнеров;
		ТекущийПартнер.Использование  = Истина;
		
	Иначе
		ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбора(Список.Отбор, "Партнер", Партнер, ВидСравненияКомпоновкиДанных.Равно,, Истина);
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура УстановитьОтборПартнеровСервер(УстановитьДляГруппы = Истина)
	
	Список.Отбор.Элементы.Очистить();
	Если УстановитьДляГруппы Тогда
		
		//создать элемент группы - отбор по партнеру
		ТекущийПартнер = Список.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
		ТекущийПартнер.ВидСравнения   = ВидСравненияКомпоновкиДанных.ВСписке;
		ТекущийПартнер.ЛевоеЗначение  = Новый ПолеКомпоновкиДанных("Партнер");
		ТекущийПартнер.ПравоеЗначение = СписокПартнеров;
		ТекущийПартнер.Использование  = Истина;
		
	Иначе
		ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбора(Список.Отбор, "Партнер", Партнер, ВидСравненияКомпоновкиДанных.Равно,,Истина);
	КонецЕсли;

КонецПроцедуры

&НаСервере
Процедура СохранитьНастройки()

	Перем Настройки;
	
	Настройки = Новый Соответствие;
	Настройки.Вставить("ПоказыватьГрупповые", ПоказыватьГрупповые);
	Настройки.Вставить("ПоПартнеру", ПоПартнеру);
	
	ОбщегоНазначения.ХранилищеОбщихНастроекСохранить("Справочники.Контрагенты", КлючНастроек, Настройки);

КонецПроцедуры

&НаСервере
Процедура ЗагрузитьНастройки()
	
	ЗначениеНастроек = ОбщегоНазначения.ХранилищеОбщихНастроекЗагрузить("Справочники.Контрагенты", КлючНастроек);
	Если ТипЗнч(ЗначениеНастроек) = Тип("Соответствие") Тогда
		ПоказыватьГрупповые = ЗначениеНастроек.Получить("ПоказыватьГрупповые");
		ПоПартнеру          = ЗначениеНастроек.Получить("ПоПартнеру");
	Иначе
		ПоПартнеру          = Истина;
		ПоказыватьГрупповые = Ложь;
	КонецЕсли;
	
КонецПроцедуры
