////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ВидимостьКомандыСозданияПартнеров = Ложь;
	
	Если Параметры.Свойство("ОтборКонтрагентов") Тогда
		
		КлючНастроек = "ФормаСпискаПараметрическая" + Параметры.ОтборКонтрагентов.УникальныйИдентификатор();
		ЗагрузитьНастройки();
		
		Если ТипЗнч(Параметры.ОтборКонтрагентов) = Тип("СправочникСсылка.Партнеры") Тогда
			
			//учесть возможность просмотра по группе партнеров
			Партнер = Параметры.ОтборКонтрагентов;
			Если Партнер = Справочники.Партнеры.НеизвестныйПартнер Или Партнер = Справочники.Партнеры.РозничныйПокупатель Тогда
				ВидимостьКомандыСозданияПартнеров = Истина;
			КонецЕсли;
			ПартнерыИКонтрагенты.ЗаполнитьСписокПартнераСРодителями(Партнер,СписокПартнеров);
			Элементы.ПоказыватьГрупповые.Видимость = СписокПартнеров.Количество() > 1 ;
			УстановитьОтборПартнеровСервер(ПоказыватьГрупповые);
			
		КонецЕсли;
		
	КонецЕсли;
	
	Если ВидимостьКомандыСозданияПартнеров Тогда
		Элементы.ФормаСоздатьПартнера.Видимость = Истина;
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ПриЗакрытии()
	
	СохранитьНастройки();
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если ИмяСобытия = "ОбновитьСписокСправочника" Тогда
		Элементы.Список.Обновить();
	КонецЕсли;
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ ШАПКИ ФОРМЫ

&НаКлиенте
Процедура ПоказыватьГрупповыеПриИзменении(Элемент)

	УстановитьОтборПартнеров(ПоказыватьГрупповые);
	ЭтаФорма.Модифицированность = Ложь;

КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ ТАБЛИЦЫ ФОРМЫ СПИСОК

&НаКлиенте
Процедура СписокПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа)

	Если ПоказыватьГрупповые И (НЕ Копирование) Тогда
		Отказ = Истина;
		ОткрытьФорму(
			"Справочник.Контрагенты.ФормаОбъекта",
			Новый Структура("Основание", Новый Структура("Партнер", Партнер))
		);
	КонецЕсли;

КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ КОМАНД ФОРМЫ

&НаКлиенте
Процедура СоздатьПартнера(Команда)
	
	ТипГруппировка = Тип("СтрокаГруппировкиДинамическогоСписка");
		
	Если Элементы.Список.ТекущаяСтрока = ТипГруппировка ИЛИ Элементы.Список.ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	КонтрагентОснование = Новый Структура;
	КонтрагентОснование.Вставить("Ссылка", Элементы.Список.ТекущиеДанные.Ссылка);
	
	ПараметрыОткрытия = Новый Структура("КонтрагентОснование", КонтрагентОснование);
	
	ОткрытьФормуМодально("Справочник.Партнеры.Форма.ПомощникНового", ПараметрыОткрытия, ЭтаФорма);
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

&НаКлиенте
Процедура УстановитьОтборПартнеров(УстановитьДляГруппы = Истина)
	
	Список.Отбор.Элементы.Очистить();
	Если УстановитьДляГруппы Тогда
		
		//создать элемент группы - отбор по партнеру
		ТекущийПартнер = Список.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
		ТекущийПартнер.ВидСравнения   = ВидСравненияКомпоновкиДанных.ВСписке;
		ТекущийПартнер.ЛевоеЗначение  = Новый ПолеКомпоновкиДанных("Партнер");
		ТекущийПартнер.ПравоеЗначение = СписокПартнеров;
		ТекущийПартнер.Использование  = Истина;
		
	Иначе
		
		ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбора(Список.Отбор, "Партнер", Партнер, ВидСравненияКомпоновкиДанных.Равно,,Истина);
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура УстановитьОтборПартнеровСервер(УстановитьДляГруппы = Истина)
	
	Список.Отбор.Элементы.Очистить();
	Если УстановитьДляГруппы Тогда
		
		//создать элемент группы - отбор по партнеру
		ТекущийПартнер = Список.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
		ТекущийПартнер.ВидСравнения   = ВидСравненияКомпоновкиДанных.ВСписке;
		ТекущийПартнер.ЛевоеЗначение  = Новый ПолеКомпоновкиДанных("Партнер");
		ТекущийПартнер.ПравоеЗначение = СписокПартнеров;
		ТекущийПартнер.Использование  = Истина;
		
	Иначе
		
		ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбора(Список.Отбор, "Партнер", Партнер, ВидСравненияКомпоновкиДанных.Равно,, Истина);
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура СохранитьНастройки()

	Перем Настройки;
	
	Настройки = Новый Соответствие;
	Настройки.Вставить("ПоказыватьГрупповые",ПоказыватьГрупповые);
	
	ОбщегоНазначения.ХранилищеОбщихНастроекСохранить("Справочники.Контрагенты", КлючНастроек, Настройки);

КонецПроцедуры 

&НаСервере
Процедура ЗагрузитьНастройки()

	ЗначениеНастроек = ОбщегоНазначения.ХранилищеОбщихНастроекЗагрузить("Справочники.Контрагенты", КлючНастроек);
	Если ТипЗнч(ЗначениеНастроек) = Тип("Соответствие") Тогда
		 ПоказыватьГрупповые = ЗначениеНастроек.Получить("ПоказыватьГрупповые");
	КонецЕсли;

КонецПроцедуры

