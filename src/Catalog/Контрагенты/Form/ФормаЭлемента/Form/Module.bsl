////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если ПолучитьФункциональнуюОпцию("ИспользоватьПартнеровКакКонтрагентов") Тогда
		ТолькоПросмотр = Истина;
	КонецЕсли;
	
	УпрощенныйВводДоступен = ПартнерыИКонтрагенты.УпрощенныйВводДоступен() ИЛИ ТолькоПросмотр;
	
	// Обработчик механизма "ВерсионированиеОбъектов"
	ВерсионированиеОбъектов.ПриСозданииНаСервере(ЭтаФорма);
	
	// Обработчик подсистемы "Контактная информация"
	УправлениеКонтактнойИнформацией.ПриСозданииНаСервере(ЭтаФорма, Объект, "ГруппаКонтактнаяИнформация");
	
	// Обработчик подсистемы "Свойства"
	УправлениеСвойствами.ПриСозданииНаСервере(ЭтаФорма, Объект, "ГруппаДополнительныеРеквизиты");
	
	Если Объект.Ссылка.Пустая() Тогда
		ПриСозданииЧтенииНаСервере();
	КонецЕсли;

КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
	ПриСозданииЧтенииНаСервере();
	
	УправлениеСвойствами.ПриЧтенииНаСервере(ЭтаФорма, ТекущийОбъект);
	
КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	// Обработчик подсистемы "Контактная информация"
	УправлениеКонтактнойИнформацией.ПередЗаписьюНаСервере(ЭтаФорма, ТекущийОбъект, Отказ);
	
	// Обработчик подсистемы "Свойства"
	УправлениеСвойствами.ПередЗаписьюНаСервере(ЭтаФорма, ТекущийОбъект);
	// Астек ИНН
	//Если ЗначениеЗаполнено(Объект.ИНН) Тогда
	//	ВыборкаКонтрагент = ПартнерыИКонтрагенты.ИННКППУжеИспользуетсяВИнформационнойБазе(Объект.ИНН, Объект.КПП, Объект.Ссылка);
	//	Если ВыборкаКонтрагент <> Неопределено Тогда
	//		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
	//										СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
	//										  НСтр("ru='Данные ИНН и КПП уже указаны для контрагента с кодом %1, ответственный - %2.'"), 
	//										  ВыборкаКонтрагент.Код,
	//										  ВыборкаКонтрагент.ОсновнойМенеджер),
	//		,
	//		"Объект.ИНН",
	//		,
	//		Отказ);
	//	КонецЕсли;
	//КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	УправлениеДоступностью();
	
КонецПроцедуры 

&НаКлиенте
Процедура ПередЗаписью(Отказ, ПараметрыЗаписи)
	
	Если ЗначениеЗаполнено(Объект.ИНН) И (Объект.ЮрФизЛицо = ПредопределенноеЗначение("Перечисление.ЮрФизЛицо.ЮрЛицоНеРезидент"))Тогда
		Объект.ИНН = "";
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Объект.КПП) И НЕ Объект.ЮрФизЛицо = ПредопределенноеЗначение("Перечисление.ЮрФизЛицо.ЮрЛицо") ИЛИ НЕ ЗначениеЗаполнено(Объект.ИНН) Тогда
		Объект.КПП = "";
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Объект.КодПоОКПО) И (Объект.ЮрФизЛицо = ПредопределенноеЗначение("Перечисление.ЮрФизЛицо.ЮрЛицоНеРезидент") ИЛИ Объект.ЮрФизЛицо = ПредопределенноеЗначение("Перечисление.ЮрФизЛицо.ФизЛицо")) Тогда
		Объект.КодПоОКПО = "";
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	// Подсистема "Свойства"
	Если УправлениеСвойствамиКлиент.ОбрабатыватьОповещения(ЭтаФорма, ИмяСобытия, Параметр) Тогда
		ОбновитьЭлементыДополнительныхРеквизитов();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	
	УправлениеДоступностью();
	
КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	
	НастроитьПанельНавигации();
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ ШАПКИ ФОРМЫ

&НаКлиенте
Процедура ЮрФизЛицоПриИзменении(Элемент)
	
	УправлениеДоступностью();
	
КонецПроцедуры

&НаКлиенте
Процедура ИННПриИзменении(Элемент)
	
	УправлениеДоступностью();
	
КонецПроцедуры

&НаКлиенте
Процедура ПартнерПриИзменении(Элемент)
	
	УправлениеДоступностью();
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ ТАБЛИЦЫ ФОРМЫ КОНТАКТНАЯ ИНФОРМАЦИЯ

&НаКлиенте
Процедура Подключаемый_КонтактнаяИнформацияПриИзменении(Элемент)
	
	УправлениеКонтактнойИнформациейКлиент.ПредставлениеПриИзменении(ЭтаФорма, Элемент);
	
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_КонтактнаяИнформацияНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	УправлениеКонтактнойИнформациейКлиент.ПредставлениеНачалоВыбора(ЭтаФорма, Элемент, Модифицированность, СтандартнаяОбработка);
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ КОМАНД ФОРМЫ

&НаКлиенте
Процедура Подключаемый_РедактироватьСоставСвойств(Команда)
	
	УправлениеСвойствамиКлиент.РедактироватьСоставСвойств(ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьКПП(Команда)
	
	ПартнерыИКонтрагентыКлиент.ЗаполнитьКППпоИНН(Объект.ИНН, Объект.КПП, Ложь);
	
КонецПроцедуры

&НаКлиенте
Процедура СоздатьПартнера(Команда)
	
	КонтрагентОснование = Новый Структура;
	КонтрагентОснование.Вставить("Название", Объект.Наименование);
	КонтрагентОснование.Вставить("ИНН", Объект.ИНН);
	КонтрагентОснование.Вставить("КодПоОКПО", Объект.КодПоОКПО);
	КонтрагентОснование.Вставить("КПП", Объект.КПП);
	КонтрагентОснование.Вставить("ЮрФизЛицо", Объект.ЮрФизЛицо);
	КонтрагентОснование.Вставить("ПолноеЮридическоеНаименование",Объект.НаименованиеПолное);
	
	Для каждого КонтактнаяИнформация Из Объект.КонтактнаяИнформация Цикл
		
		Если КонтактнаяИнформация.Вид = ПредопределенноеЗначение("Справочник.ВидыКонтактнойИнформации.ФактАдресКонтрагента") Тогда
			ВидКонтактнойИнформации = "ФактАдресКонтрагента";
		ИначеЕсли КонтактнаяИнформация.Вид = ПредопределенноеЗначение("Справочник.ВидыКонтактнойИнформации.ЮрАдресКонтрагента") Тогда
			ВидКонтактнойИнформации = "ЮрАдресКонтрагента";
		ИначеЕсли КонтактнаяИнформация.Вид = ПредопределенноеЗначение("Справочник.ВидыКонтактнойИнформации.EmailКонтрагента") Тогда
			ВидКонтактнойИнформации = "EmailКонтрагента";
		ИначеЕсли КонтактнаяИнформация.Вид = ПредопределенноеЗначение("Справочник.ВидыКонтактнойИнформации.ТелефонКонтрагента") Тогда
			ВидКонтактнойИнформации = "ТелефонКонтрагента";
		Иначе
			Продолжить;
		КонецЕсли;
		
		КонтрагентОснование.Вставить(ВидКонтактнойИнформации,Новый Структура("Представление, ЗначенияПолей", КонтактнаяИнформация.Представление, КонтактнаяИнформация.ЗначенияПолей));
		
	КонецЦикла;
	
	ПараметрыОткрытия = Новый Структура("КонтрагентОснование",КонтрагентОснование);
	
	Результат = ОткрытьФормуМодально("Справочник.Партнеры.Форма.ПомощникНового", ПараметрыОткрытия, ЭтаФорма);
	Если Результат <> Неопределено И Результат <> Объект.Партнер Тогда
		Объект.Партнер = Результат;
		Модифицированность = Истина;
	КонецЕсли;
	УправлениеДоступностью();
	
КонецПроцедуры

&НаКлиенте
Процедура НаименованиеСокращенноеПриИзменении(Элемент)
	
	ПартнерыИКонтрагентыКлиент.СокрЮрНаименованиеПриИзменении(Объект.Наименование, Объект.НаименованиеПолное);
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

&НаКлиенте
Процедура УправлениеДоступностью()
	
	ОбщегоНазначенияУТКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы,
	                                                               "ФизЛицо",
	                                                               "Доступность",
	                                                               (Объект.ЮрФизЛицо = ПредопределенноеЗначение("Перечисление.ЮрФизЛицо.ФизЛицо") ИЛИ
	                                                                  Объект.ЮрФизЛицо = ПредопределенноеЗначение("Перечисление.ЮрФизЛицо.ИндивидуальныйПредприниматель")));
	Элементы.КПП.Доступность       =  (Объект.ЮрФизЛицо = ПредопределенноеЗначение("Перечисление.ЮрФизЛицо.ЮрЛицо") И ЗначениеЗаполнено(Объект.ИНН));
	Элементы.КодПоОКПО.Доступность = (Объект.ЮрФизЛицо = ПредопределенноеЗначение("Перечисление.ЮрФизЛицо.ЮрЛицо") ИЛИ
	                                  Объект.ЮрФизЛицо = ПредопределенноеЗначение("Перечисление.ЮрФизЛицо.ИндивидуальныйПредприниматель"));
	Элементы.ИНН.Доступность       = НЕ Объект.ЮрФизЛицо = ПредопределенноеЗначение("Перечисление.ЮрФизЛицо.ЮрЛицоНеРезидент");
	Элементы.ЗаполнитьКПП.Доступность = (Объект.ЮрФизЛицо = ПредопределенноеЗначение("Перечисление.ЮрФизЛицо.ЮрЛицо") И НЕ ПустаяСтрока(Объект.ИНН));
	
	Если НЕ Элементы.Найти("Партнер") = Неопределено Тогда
		
		Если (Объект.Партнер = ПредопределенноеЗначение("Справочник.Партнеры.НеизвестныйПартнер") ИЛИ
			Объект.Партнер = ПредопределенноеЗначение("Справочник.Партнеры.РозничныйПокупатель")) И НЕ Объект.Ссылка.Пустая() Тогда
			
			Элементы.СтраницыПартнер.ТекущаяСтраница = Элементы.СтраницаНеизвестныйПартнер;
		Иначе
			Элементы.СтраницыПартнер.ТекущаяСтраница = Элементы.СтраницаПартнерПодобран;
		КонецЕсли;
		
	КонецЕсли;
	ОтключитьОтметкуНезаполненного();
	
КонецПроцедуры

&НаСервере
Процедура ОбновитьЭлементыДополнительныхРеквизитов()
	
	УправлениеСвойствами.ОбновитьЭлементыДополнительныхРеквизитов(ЭтаФорма);
	
КонецПроцедуры

&НаСервере
Процедура ПриСозданииЧтенииНаСервере()

	НастроитьПанельНавигации();

КонецПроцедуры

&НаСервере
Процедура НастроитьПанельНавигации()

	СтруктураНастроек = Новый Структура;
	СтруктураНастроек.Вставить("ИспользоватьДанныеКонтрагентаФизическогоЛица", Объект.ЮрФизЛицо = Перечисления.ЮрФизЛицо.ФизЛицо);
	
	ОбщегоНазначенияУТ.НастроитьФормуПоПараметрам(ЭтаФорма, СтруктураНастроек);

КонецПроцедуры

