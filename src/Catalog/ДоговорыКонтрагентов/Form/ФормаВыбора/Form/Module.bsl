
///////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	УстановитьНедоступныеОтборыИзПараметров(Параметры.Отбор);
	
	Если Параметры.Свойство("Партнер") Тогда
		
		СписокПартнеров = Новый СписокЗначений;
		ПартнерыИКонтрагенты.ЗаполнитьСписокПартнераСРодителями(Параметры.Партнер, СписокПартнеров);
		
		ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбора(
			Список.Отбор, 
			"Партнер", 
			СписокПартнеров, 
			ВидСравненияКомпоновкиДанных.ВСписке,
			, 
			Истина
		);
		
		Список.Параметры.УстановитьЗначениеПараметра("ПартнерПоУмолчанию", Параметры.Партнер);
		ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбора(
			Список.Отбор, 
			"ПартнерПоУмолчанию", 
			Параметры.Партнер, 
			ВидСравненияКомпоновкиДанных.Равно,
			, 
			Истина
		);
		
	Иначе
		
		Список.Параметры.УстановитьЗначениеПараметра("ПартнерПоУмолчанию", Справочники.Партнеры.ПустаяСсылка());
		
	КонецЕсли;
	
	Если Параметры.Свойство("Соглашение")
		И (Тип("СправочникСсылка.СоглашенияСКлиентами") = ТипЗнч(Параметры.Соглашение)
		ИЛИ ЗначениеЗаполнено(Параметры.Соглашение))Тогда
		
		ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбора(
			Список.Отбор,
			"ПорядокОплаты",
			ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Параметры.Соглашение, "ПорядокОплаты"),
			ВидСравненияКомпоновкиДанных.Равно,
			,
			Истина
		);
		
	КонецЕсли;
	
	ОтборыСписковКлиентСервер.СкопироватьСписокВыбораОтбораПоМенеджеру(
		Элементы.ОтборМенеджер.СписокВыбора, 
		ОбщегоНазначенияУТ.ПолучитьСписокПользователейПоМассивуРолей(Справочники.ДоговорыКонтрагентов.ИменаРолейСПравомДобавления())
	);
	
	// Обработчик подсистемы "Внешние обработки"
	ДополнительныеОтчетыИОбработки.ПриСозданииНаСервере(ЭтаФорма);
	
КонецПроцедуры

&НаСервере
Процедура ПередЗагрузкойДанныхИзНастроекНаСервере(Настройки)
	
	Менеджер = Настройки.Получить("Менеджер");
	
	ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбора(
		Список.Отбор, 
		"Менеджер", 
		Менеджер, 
		ВидСравненияКомпоновкиДанных.Равно,
		, 
		ЗначениеЗаполнено(Менеджер)
	);
	
	Настройки.Очистить();
	
КонецПроцедуры

///////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ ШАПКИ ФОРМЫ

&НаКлиенте
Процедура ОтборМенеджерПриИзменении(Элемент)
	
	ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбора(
		Список.Отбор, 
		"Менеджер", 
		Менеджер, 
		ВидСравненияКомпоновкиДанных.Равно,
		, 
		ЗначениеЗаполнено(Менеджер)
	);
	
КонецПроцедуры

///////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

///////////////////////////////////////////////////////////////////////////////
// Прочее

// Процедура устанавливает отборы, переданные в структуре. Отборы недоступны для изменения.
//
// Параметры:
//	СтруктураОтбора - Структура - Ключ: имя поля компоновки данных, Значение: значение отбора.
//
&НаСервере
Процедура УстановитьНедоступныеОтборыИзПараметров(СтруктураОтбора)
	
	Для Каждого ЭлементОтбора Из СтруктураОтбора Цикл
		ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбора(
			Список.Отбор, 
			ЭлементОтбора.Ключ, 
			ЭлементОтбора.Значение, 
			ВидСравненияКомпоновкиДанных.Равно
		);
	КонецЦикла; 
	
КонецПроцедуры
