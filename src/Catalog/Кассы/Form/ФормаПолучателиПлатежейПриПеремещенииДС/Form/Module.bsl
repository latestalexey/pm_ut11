
///////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Для Каждого ПолучательПлатежа Из Параметры.СписокПолучателейПлатежей Цикл
		СтрокаПолучательПлатежа = ПолучателиПлатежейПриПеремещенииДС.Добавить();
		СтрокаПолучательПлатежа.ПолучательПлатежа = ПолучательПлатежа.Значение;
	КонецЦикла;
	ВалютаДенежныхСредств = Параметры.ВалютаДенежныхСредств;
	Владелец = Параметры.Владелец;
	Касса = Параметры.Касса;
	
	ТекстИнструкции = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
		НСтр("ru = 'Доступны для добавления кассы организации %1. Валюта: %2.'"),
		Владелец,
		?(ВалютаДенежныхСредств = Константы.ВалютаРегламентированногоУчета.Получить(), НСтр("ru='рубли'"), ВалютаДенежныхСредств)
	);
	Элементы.ДекорацияИнструкция.Заголовок = ТекстИнструкции;
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытием(Отказ, СтандартнаяОбработка)
	
	Если Модифицированность Тогда
		
		Ответ = Вопрос("Данные были изменены. Сохранить изменения?", РежимДиалогаВопрос.ДаНетОтмена, , КодВозвратаДиалога.Да);
		Если Ответ = КодВозвратаДиалога.Да Тогда
			ПеренестиДанные(Отказ);
		ИначеЕсли Ответ = КодВозвратаДиалога.Отмена Тогда
			Отказ = Истина;
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

///////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ ШАПКИ ФОРМЫ

&НаКлиенте
Процедура ПолучателиПлатежейПриПеремещенииДСПриИзменении(Элемент)
	
	Модифицированность = Истина;
	
КонецПроцедуры

///////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ КОМАНД ФОРМЫ

&НаКлиенте
Процедура ЗаписатьИЗакрыть(Команда)
	
	ПеренестиДанные();
	
КонецПроцедуры

///////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

///////////////////////////////////////////////////////////////////////////////
// Прочее

&НаКлиенте
Процедура ПеренестиДанные(Отказ = Ложь)
	
	ОчиститьСообщения();
	
	СписокПолучателейПлатежей = Новый СписокЗначений;
	Для Индекс = 0 По ПолучателиПлатежейПриПеремещенииДС.Количество() - 1 Цикл
		
		СтрокаПолучательПлатежа = ПолучателиПлатежейПриПеремещенииДС[Индекс];
		
		Если НЕ ЗначениеЗаполнено(СтрокаПолучательПлатежа.ПолучательПлатежа) Тогда
			Текст = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				НСтр("ru = 'В строке %1 не заполнена касса-получатель.'"),
				Индекс + 1
			);
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
				Текст,
				,
				"ПолучателиПлатежейПриПеремещенииДС["+Индекс+"].ПолучательПлатежа",
				,
				Отказ
			);
		КонецЕсли;
		
		Если СтрокаПолучательПлатежа.ПолучательПлатежа = Касса Тогда
			Текст = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				НСтр("ru = 'В строке %1 в качестве кассы-получателя указана касса-отправитель %2. Выберите кассу-получателя, отличную от кассы-отправителя.'"),
				Индекс + 1,
				Касса
			);
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
				Текст,
				,
				"ПолучателиПлатежейПриПеремещенииДС["+Индекс+"].ПолучательПлатежа",
				,
				Отказ
			);
		КонецЕсли;
		
		Если СписокПолучателейПлатежей.НайтиПоЗначению(СтрокаПолучательПлатежа.ПолучательПлатежа) <> Неопределено
		 И ЗначениеЗаполнено(СтрокаПолучательПлатежа.ПолучательПлатежа) Тогда
			Текст = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				НСтр("ru = 'В строке %1 в качестве кассы-получателя повторно указана касса %2.'"),
				Индекс + 1,
				СтрокаПолучательПлатежа.ПолучательПлатежа
			);
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
				Текст,
				,
				"ПолучателиПлатежейПриПеремещенииДС["+Индекс+"].ПолучательПлатежа",
				,
				Отказ
			);
		КонецЕсли; 
		
		СписокПолучателейПлатежей.Добавить(СтрокаПолучательПлатежа.ПолучательПлатежа);
	КонецЦикла;
	
	Если НЕ Отказ Тогда
		Модифицированность = Ложь;
		ОповеститьОВыборе(СписокПолучателейПлатежей);
	КонецЕсли; 
	
КонецПроцедуры
