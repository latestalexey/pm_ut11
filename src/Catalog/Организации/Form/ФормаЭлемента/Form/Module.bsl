
///////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ВозможнаРегистрацияДляОбособленныхПодразделений = Справочники.РегистрацииВНалоговомОргане.ВозможнаРегистрацияДляОбособленныхПодразделений();
	
	// Обработчик механизма "Контактная информация"
	УправлениеКонтактнойИнформацией.ПриСозданииНаСервере(ЭтаФорма, Объект, "ГруппаКонтактнаяИнформация");
	
	// Обработчик подсистемы запрета редактирования реквизитов объектов
	ЗапретРедактированияРеквизитовОбъектов.ЗаблокироватьРеквизиты(ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	УправлениеЭлементамиФормы();
	
КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	// Обработчик механизма "Контактная информация"
	УправлениеКонтактнойИнформацией.ПередЗаписьюНаСервере(ЭтаФорма, ТекущийОбъект, Отказ);
	
КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	
	// Обработчик подсистемы запрета редактирования реквизитов объектов
	ЗапретРедактированияРеквизитовОбъектов.ЗаблокироватьРеквизиты(ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если Источник = ЭтаФорма Тогда
		Возврат;
	КонецЕсли;
	
	Если ИмяСобытия = "ИзмененаРегистрацияВНалоговомОргане" Тогда
		
		Если Параметр.Владелец = Объект.Ссылка Тогда
			
			Если НЕ ЗначениеЗаполнено(Объект.РегистрацияВНалоговомОргане) Тогда
				Объект.РегистрацияВНалоговомОргане = Параметр.Ссылка;
				Модифицированность	= Истина;
			КонецЕсли;
			
			ОбновитьДанныеРегистрацииВНалоговомОргане();
			
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

///////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ ШАПКИ ФОРМЫ

&НаКлиенте
Процедура ЮрФизЛицоПриИзменении(Элемент)
	
	УправлениеЭлементамиФормы();
	
КонецПроцедуры

&НаКлиенте
Процедура ОбособленноеПодразделениеПриИзменении(Элемент)
	
	ОбновитьРеквизитыОбособленногоПодразделения();
	УправлениеЭлементамиФормы();
	
КонецПроцедуры

&НаКлиенте
Процедура ГоловнаяОрганизацияПриИзменении(Элемент)
	
	ОбновитьРеквизитыОбособленногоПодразделения();
	УправлениеЭлементамиФормы();
	
КонецПроцедуры

&НаКлиенте
Процедура ИННПриИзменении(Элемент)
	
	Если СтрДлина(Объект.ИНН) >= 4 
	 И ПустаяСтрока(Объект.КПП) Тогда
		
		Объект.КПП = Лев(Объект.ИНН, 4) + "01001";
		
		ПриИзмененииКПП();
		
	КонецЕсли;
	
	УправлениеЭлементамиФормы();
	
КонецПроцедуры

&НаКлиенте
Процедура КПППриИзменении(Элемент)
	
	ПриИзмененииКПП();
	
КонецПроцедуры

&НаКлиенте
Процедура РегистрацияВНалоговомОрганеПриИзменении(Элемент)
	
	ОбновитьДанныеРегистрацииВНалоговомОргане();
	
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_КонтактнаяИнформацияПриИзменении(Элемент)
	
	УправлениеКонтактнойИнформациейКлиент.ПредставлениеПриИзменении(ЭтаФорма, Элемент);
	
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_КонтактнаяИнформацияНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	УправлениеКонтактнойИнформациейКлиент.ПредставлениеНачалоВыбора(ЭтаФорма, Элемент, Модифицированность, СтандартнаяОбработка);
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ КОМАНД ФОРМЫ

// Обработчик команды, создаваемой механизмом запрета редактирования ключевых реквизитов.
//
&НаКлиенте
Процедура Подключаемый_РазрешитьРедактированиеРеквизитовОбъекта(Команда)
	
	Если Не Объект.Ссылка.Пустая() Тогда
		
		ПараметрыФормыРазблокировки = Новый Структура;
		ПараметрыФормыРазблокировки.Вставить("ОбособленноеПодразделение", Объект.ОбособленноеПодразделение);
		Результат = ОткрытьФормуМодально("Справочник.Организации.Форма.РазблокированиеРеквизитов", ПараметрыФормыРазблокировки);
		
		Если ТипЗнч(Результат) = Тип("Массив") И Результат.Количество() > 0 Тогда
			
			ЗапретРедактированияРеквизитовОбъектовКлиент.УстановитьДоступностьЭлементовФормы(ЭтаФорма, Результат);
			
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

///////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

///////////////////////////////////////////////////////////////////////////////
// Управление элементами формы

&НаКлиенте
Процедура УправлениеЭлементамиФормы()
	
	ЭтоЮрЛицо = Объект.ЮрФизЛицо = ПредопределенноеЗначение("Перечисление.ЮрФизЛицо.ЮрЛицо")
	 	ИЛИ Объект.ЮрФизЛицо = ПредопределенноеЗначение("Перечисление.ЮрФизЛицо.ЮрЛицоНеРезидент");
		
	ВозможностьРегистрацииВНалоговомОргане =
		НЕ Объект.ОбособленноеПодразделение
		ИЛИ ВозможнаРегистрацияДляОбособленныхПодразделений;
	
	ОбщегоНазначенияУТКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "ЮрФизЛицо", 				"Доступность", НЕ Объект.ОбособленноеПодразделение);
	ОбщегоНазначенияУТКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "ИНН", 					"Доступность", НЕ Объект.ОбособленноеПодразделение);
	ОбщегоНазначенияУТКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "КПП", 					"Доступность", ЭтоЮрЛицо);
	ОбщегоНазначенияУТКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "СвидетельствоДатаВыдачи", "Доступность", НЕ ЭтоЮрЛицо);
	ОбщегоНазначенияУТКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "СвидетельствоСерияНомер", "Доступность", НЕ ЭтоЮрЛицо);
	
	ОбщегоНазначенияУТКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "ГоловнаяОрганизация", 					 "Видимость", Объект.ОбособленноеПодразделение);
	ОбщегоНазначенияУТКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "РегистрацияВНалоговомОргане", 			 "Видимость", ВозможностьРегистрацииВНалоговомОргане);
	ОбщегоНазначенияУТКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "ГруппаОбособленноеПодразделение", 		 "Видимость", Объект.ОбособленноеПодразделение);
	ОбщегоНазначенияУТКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "ЦифровойИндексОбособленногоПодразделения", "Видимость", Объект.ОбособленноеПодразделение);
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// Прочее

&НаКлиенте
Процедура ПриИзмененииКПП()
	
	Если СтрДлина(Объект.КПП) >= 4 
	 И ПустаяСтрока(Объект.КодНалоговогоОргана) Тогда
		
		Объект.КодНалоговогоОргана = Лев(Объект.КПП, 4);
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ОбновитьРеквизитыОбособленногоПодразделения()
	
	Если Не Объект.ОбособленноеПодразделение Тогда
		
		Объект.ГоловнаяОрганизация = Справочники.Организации.ПустаяСсылка();
		Объект.ДопускаютсяВзаиморасчетыСКлиентамиЧерезГоловнуюОрганизацию	 = Ложь;
		Объект.ДопускаютсяВзаиморасчетыСПоставщикамиЧерезГоловнуюОрганизацию = Ложь;
		
	Иначе
		
		Если ЗначениеЗаполнено(Объект.ГоловнаяОрганизация) Тогда
		
			ДанныеГоловнойОрганизации = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Объект.ГоловнаяОрганизация, "ЮрФизЛицо,ИНН");
			ЗаполнитьЗначенияСвойств(Объект, ДанныеГоловнойОрганизации);
			
		Иначе
			
			Объект.ЮрФизЛицо = Перечисления.ЮрФизЛицо.ЮрЛицо;
			Объект.ИНН = "";
			Объект.КПП = "";
			
		КонецЕсли;
		
		Если НЕ ВозможнаРегистрацияДляОбособленныхПодразделений Тогда
			Объект.РегистрацияВНалоговомОргане = Справочники.РегистрацииВНалоговомОргане.ПустаяСсылка();
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ОбновитьДанныеРегистрацииВНалоговомОргане()

	Если НЕ ЗначениеЗаполнено(Объект.РегистрацияВНалоговомОргане) Тогда
		
		Модифицированность	= Истина;
		
		Объект.КодНалоговогоОргана			= "";
		Объект.КодПоОКАТО					= "";
		
		Возврат;
		
	КонецЕсли;
		
	ДанныеРегистрации = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Объект.РегистрацияВНалоговомОргане, "Владелец, КПП, Код, НаименованиеИФНС, КодПоОКАТО");
		
	Если ДанныеРегистрации.Владелец = Объект.Ссылка
		И (НЕ ДанныеРегистрации.КПП = Объект.КПП
			ИЛИ НЕ ДанныеРегистрации.Код = Объект.КодНалоговогоОргана
			ИЛИ НЕ ДанныеРегистрации.КодПоОКАТО = Объект.КодПоОКАТО) Тогда
			
		Модифицированность	= Истина;
		
		Объект.КПП							= ДанныеРегистрации.КПП;
		Объект.КодНалоговогоОргана			= ДанныеРегистрации.Код;
		Объект.КодПоОКАТО					= ДанныеРегистрации.КодПоОКАТО;
		
	КонецЕсли;
	
	РегистрацияВНалоговомОрганеСтароеЗначение = Объект.РегистрацияВНалоговомОргане;
	
КонецПроцедуры
