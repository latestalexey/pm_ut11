////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// Заполнение списка схем компоновки данных
	ПризнакПредопределенногоМакета = Врег("Предопределенный");
	ДлинаПризнакаПредопределенногоМакета = СтрДлина(ПризнакПредопределенногоМакета);
	Для каждого Макет из Метаданные.НайтиПоТипу(ТипЗнч(Объект.Ссылка)).Макеты Цикл
		Если Макет.ТипМакета = Метаданные.СвойстваОбъектов.ТипМакета.СхемаКомпоновкиДанных Тогда
			Если ВРег(Прав(Макет.Имя, ДлинаПризнакаПредопределенногоМакета)) = ПризнакПредопределенногоМакета Тогда
				Элементы.СхемаКомпоновкиДанных.СписокВыбора.Добавить(Макет.Имя, Макет.Синоним);
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	
	Если Параметры.ЗначениеКопирования.Пустая() Тогда
		СхемаИНастройки = Справочники.СтруктураЦелей.ОписаниеИСхемаКомпоновкиДанныхЦелиПоИмениМакета(Объект.Ссылка, Объект.СхемаКомпоновкиДанных);
	Иначе
		СхемаИНастройки = Справочники.СтруктураЦелей.ОписаниеИСхемаКомпоновкиДанныхЦелиПоИмениМакета(Параметры.ЗначениеКопирования, Параметры.ЗначениеКопирования.СхемаКомпоновкиДанных);
	КонецЕсли;
	
	Если ПустаяСтрока(СхемаИНастройки.Описание) Тогда
		Объект.СхемаКомпоновкиДанных = "";
	КонецЕсли;
	
	Если ПустаяСтрока(Объект.СхемаКомпоновкиДанных) Тогда
		Элементы.СхемаКомпоновкиДанных.СписокВыбора.Добавить("", НСтр("ru = 'Произвольный'"));
	КонецЕсли;
	
	Адреса = АдресаСхемыКомпоновкиДанныхИНастроекВоВременномХранилище();
	
	АдресСхемыКомпоновкиДанных = Адреса.СхемаКомпоновкиДанных;
	АдресНастроекКомпоновкиДанных = Адреса.НастройкиКомпоновкиДанных;
	
	УстановитьДоступностьИВидимостьЭлементовФормы(Объект, Элементы, РазмерностьДоступна());
	
КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	Если Объект.ЦельИзмеримая Тогда
		Если Не ЗначениеЗаполнено(Объект.СхемаКомпоновкиДанных) Тогда
			Если НЕ ПустаяСтрока(АдресСхемыКомпоновкиДанных) Тогда
				
				РезультатПроверкиСКД = МониторингЦелевыхПоказателей.ПроверитьСхемуКомпоновкиДанных(ПолучитьИзВременногоХранилища(АдресСхемыКомпоновкиДанных));
				
				Если РезультатПроверкиСКД.МакетКорректный Тогда
					ТекущийОбъект.ХранилищеСхемыКомпоновкиДанных = Новый ХранилищеЗначения(ПолучитьИзВременногоХранилища(АдресСхемыКомпоновкиДанных));
					
				Иначе
					Отказ = Истина;
					
					Для Каждого ОписаниеОшибки Из РезультатПроверкиСКД.ОписаниеОшибок Цикл
						ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ОписаниеОшибки, Объект.Ссылка, "Объект.СхемаКомпоновкиДанных",,Отказ);
						
					КонецЦикла; 
					
				КонецЕсли;
			Иначе
				Отказ = Истина;
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю(НСтр("ru='Необходимо настроить шаблон расчета целевого показателя.'"), Объект.Ссылка, "Объект.СхемаКомпоновкиДанных",,Отказ);
			КонецЕсли;
			
		Иначе
			ТекущийОбъект.ХранилищеСхемыКомпоновкиДанных = Новый ХранилищеЗначения(Неопределено);
		КонецЕсли;
		
		Если НЕ ПустаяСтрока(АдресНастроекКомпоновкиДанных) Тогда
			ТекущийОбъект.ХранилищеНастроекКомпоновкиДанных = Новый ХранилищеЗначения(ПолучитьИзВременногоХранилища(АдресНастроекКомпоновкиДанных));
		Иначе
			ТекущийОбъект.ХранилищеНастроекКомпоновкиДанных = Новый ХранилищеЗначения(Неопределено);
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ ШАПКИ ФОРМЫ

&НаКлиенте
Процедура СхемаКомпоновкиДанныхПриИзменении(Элемент)
	
	СхемаКомпоновкиДанныхПриИзмененииНаСервере();
	
КонецПроцедуры

&НаКлиенте
Процедура ЦельИзмеримаяПриИзменении(Элемент)
	
	УстановитьДоступностьИВидимостьЭлементовФормы(Объект, Элементы, РазмерностьДоступна());
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ КОМАНД ФОРМЫ

&НаКлиенте
Процедура РедактироватьСхемуКомпоновкиДанных(Команда)
	
	// Открыть редактор настроек схемы компоновки данных
	ЗаголовокФормыНастройкиСхемыКомпоновкиДанных = НСтр("ru = 'Настройка шаблона расчета для целевого показателя ""%1""'");
	ЗаголовокФормыНастройкиСхемыКомпоновкиДанных = СтрЗаменить(ЗаголовокФормыНастройкиСхемыКомпоновкиДанных, "%1", Объект.ЦелевойПоказатель);
	
	АдресаНастроек = ОткрытьФормуМодально("ОбщаяФорма.УпрощеннаяНастройкаСхемыКомпоновкиДанных",
		Новый Структура(
						"НеПомещатьНастройкиВСхемуКомпоновкиДанных,
						|НеРедактироватьСхемуКомпоновкиДанных,
						|НеНастраиватьУсловноеОформление,
						|НеНастраиватьВыбор,
						|НеНастраиватьПорядок,
						|УникальныйИдентификатор,
						|АдресСхемыКомпоновкиДанных,
						|АдресНастроекКомпоновкиДанных,
						|Заголовок,
						|ИсточникШаблонов,
						|ИмяШаблонаСКД,
						|ВозвращатьИмяТекущегоШаблонаСКД",
						Истина,
						Ложь,
						Истина,
						Истина,
						Истина,
						УникальныйИдентификатор,
						АдресСхемыКомпоновкиДанных,
						АдресНастроекКомпоновкиДанных,
						ЗаголовокФормыНастройкиСхемыКомпоновкиДанных,
						Объект.Ссылка,
						Объект.СхемаКомпоновкиДанных,
						Истина));
	
	Если ЗначениеЗаполнено(АдресаНастроек) Тогда
		Если ПустаяСтрока(АдресаНастроек.ИмяТекущегоШаблонаСКД) 
			И Элементы.СхемаКомпоновкиДанных.СписокВыбора.НайтиПоЗначению("") = Неопределено Тогда
			Элементы.СхемаКомпоновкиДанных.СписокВыбора.Добавить("", НСтр("ru = 'Произвольный'"));
			
		КонецЕсли;
		
		Объект.СхемаКомпоновкиДанных = АдресаНастроек.ИмяТекущегоШаблонаСКД;
		
		Если АдресаНастроек.Свойство("АдресХранилищаНастройкиКомпоновщика") Тогда
			АдресНастроекКомпоновкиДанных = АдресаНастроек.АдресХранилищаНастройкиКомпоновщика;
		КонецЕсли;
		
	КонецЕсли;
	
	УстановитьДоступностьИВидимостьЭлементовФормы(Объект, Элементы, РазмерностьДоступна());
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

////////////////////////////////////////////////////////////////////////////////
// При изменении реквизитов

&НаСервере
Процедура СхемаКомпоновкиДанныхПриИзмененииНаСервере()
	
	АдресСхемыКомпоновкиДанных = ПоместитьВоВременноеХранилище(Справочники.СтруктураЦелей.ПолучитьМакет(Объект.СхемаКомпоновкиДанных), Новый УникальныйИдентификатор());
	АдресНастроекКомпоновкиДанных = "";
	
	Элементы.СхемаКомпоновкиДанных.СписокВыбора.Удалить(Элементы.СхемаКомпоновкиДанных.СписокВыбора.НайтиПоЗначению(""));
	
	УстановитьДоступностьИВидимостьЭлементовФормы(Объект, Элементы, РазмерностьДоступна());
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста 
Процедура УстановитьДоступностьИВидимостьЭлементовФормы(Объект, Элементы, РазмерностьДоступна)
	
	ЦельИзмеримая = Объект.ЦельИзмеримая;
	
	Элементы.ЦелевойПоказатель.Доступность = ЦельИзмеримая;
	Элементы.КраткоеНаименованиеЦелевогоПоказателя.Доступность = ЦельИзмеримая;
	Элементы.Описание.Доступность = ЦельИзмеримая;
	Элементы.ФормулаРасчета.Доступность = ЦельИзмеримая;
	Элементы.ГруппаСхемаКомпоновкиДанных.Доступность = ЦельИзмеримая;
	Элементы.ЦелевойТренд.Доступность = ЦельИзмеримая;
	
	Элементы.Размерность.Видимость = (ЦельИзмеримая И РазмерностьДоступна);
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// Прочее

&НаСервере 
Функция АдресаСхемыКомпоновкиДанныхИНастроекВоВременномХранилище()
	
	Возврат Справочники.СтруктураЦелей.АдресаСхемыКомпоновкиДанныхИНастроекВоВременномХранилище(Объект);
	
КонецФункции

&НаСервере  
Функция РазмерностьДоступна()
	
	РазмерностьДоступна = Истина;
	
	Если НЕ ПустаяСтрока(АдресСхемыКомпоновкиДанных) Тогда
		СхемаКомпоновкиДанных = ПолучитьИзВременногоХранилища(АдресСхемыКомпоновкиДанных);
		
		Если НЕ СхемаКомпоновкиДанных = Неопределено 
			И НЕ СхемаКомпоновкиДанных.Параметры.Найти(НСтр("ru='ВалютаРасчета'")) = Неопределено
			И СхемаКомпоновкиДанных.Параметры.Найти(НСтр("ru='ВалютаРасчета'")).Использование = ИспользованиеПараметраКомпоновкиДанных.Всегда Тогда
			РазмерностьДоступна = Ложь;
		КонецЕсли;
		
	ИначеЕсли НЕ ПустаяСтрока(АдресНастроекКомпоновкиДанных) Тогда
		НастройкиКомпоновкиДанных = ПолучитьИзВременногоХранилища(АдресНастроекКомпоновкиДанных);
		
		Если НЕ НастройкиКомпоновкиДанных = Неопределено 
			И НЕ НастройкиКомпоновкиДанных.Параметры.Найти(НСтр("ru='ВалютаРасчета'")) = Неопределено 
			И НастройкиКомпоновкиДанных.Параметры.Найти(НСтр("ru='ВалютаРасчета'")).Использование = ИспользованиеПараметраКомпоновкиДанных.Всегда Тогда
			РазмерностьДоступна = Ложь;
		КонецЕсли;
		
	КонецЕсли;
	
	Возврат РазмерностьДоступна;
	
КонецФункции

