////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	// Пропускаем инициализацию, чтобы гарантировать получение формы при передаче параметра "АвтоТест".
	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Параметры.ЗначениеКопирования) Тогда
		ИсточникКопирования = Параметры.ЗначениеКопирования;
		ЗаполнитьЗначенияСвойств(Объект, ИсточникКопирования,,"ДополнительныеРеквизиты, ПометкаУдаления");
		Объект.ДополнительныеРеквизиты.Загрузить(ИсточникКопирования.ДополнительныеРеквизиты.Выгрузить());
	Иначе
		ИспользованиеХарактеристик = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ВидНоменклатуры,"ИспользованиеХарактеристик");
		ВидНоменклатуры = Параметры.ВидНоменклатуры;
		Если ИспользованиеХарактеристик = ПредопределенноеЗначение("Перечисление.ВариантыИспользованияХарактеристикНоменклатуры.ОбщиеДляВидаНоменклатуры") Тогда
			Объект.Владелец = ВидНоменклатуры;
		Иначе
			Объект.Владелец = Параметры.Владелец;
		КонецЕсли;
	КонецЕсли;
	
	// Обработчик механизма "Свойства"
	УправлениеСвойствами.ПриСозданииНаСервере(ЭтаФорма, Объект, "ГруппаДополнительныеРеквизиты");
	
	Если ТипЗнч(Объект.Владелец) = Тип("СправочникСсылка.Номенклатура") Тогда
		ВидНоменклатуры = Объект.Владелец.ВидНоменклатуры;
		Элементы.Владелец.Заголовок = НСтр("ru='Номенклатура'");
	ИначеЕсли ТипЗнч(Объект.Владелец) = Тип("СправочникСсылка.ВидыНоменклатуры") Тогда
		ВидНоменклатуры = Объект.Владелец;
		Элементы.Владелец.Заголовок = НСтр("ru='Вид номенклатуры'");
	КонецЕсли;
	
	
	ПолучитьНаборУникальныхИОбязательныхРеквизитов();
	Если ЗначениеЗаполнено(Параметры.АдресТаблицы) Тогда
		ЗаполнитьПараметрыХарактеристик(Параметры);
	КонецЕсли;
	Элементы.СтраницыПомощника.ТекущаяСтраница = Элементы.СтраницаОсновная;
	Элементы.СтраницыПодвал.ТекущаяСтраница    = Элементы.СтраницаКнопкиДалееЗакрыть;
	СтруктураШаблонов = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(ВидНоменклатуры, "ШаблонНаименованияДляПечатиХарактеристики, ШаблонРабочегоНаименованияХарактеристики,
																					|ЗапретРедактированияНаименованияХарактеристикиДляПечати, ЗапретРедактированияРабочегоНаименованияХарактеристики");
	
	ШаблонРабочегоНаименования  = СтруктураШаблонов.ШаблонРабочегоНаименованияХарактеристики;
	ШаблонНаименованияДляПечати = СтруктураШаблонов.ШаблонНаименованияДляПечатиХарактеристики;
	ЗапретРедактированияНаименованияДляПечати = СтруктураШаблонов.ЗапретРедактированияНаименованияХарактеристикиДляПечати;
	ЗапретРедактированияРабочегоНаименования  = СтруктураШаблонов.ЗапретРедактированияРабочегоНаименованияХарактеристики;
	Элементы.НаименованиеПолное.ТолькоПросмотр              = ЗапретРедактированияНаименованияДляПечати;
	Элементы.Наименование.ТолькоПросмотр                    = ЗапретРедактированияРабочегоНаименования;
	Элементы.Наименование.АвтоОтметкаНезаполненного         = Не ЗапретРедактированияРабочегоНаименования;
	
	Элементы.ЗаполнитьРабочееНаименованиеПоШаблону.Доступность   = ЗначениеЗаполнено(ШаблонРабочегоНаименования);
	Элементы.ЗаполнитьНаименованиеДляПечатиПоШаблону.Доступность = ЗначениеЗаполнено(ШаблонНаименованияДляПечати);
	
	Если ЗначениеЗаполнено(ШаблонРабочегоНаименования) Тогда
		Объект.Наименование = "";
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ШаблонНаименованияДляПечати) Тогда
		Объект.НаименованиеПолное = "";
	КонецЕсли;
	
	ЗадаватьВопросОЗакрытии = Истина;
КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытием(Отказ, СтандартнаяОбработка)
	Если ЗадаватьВопросОЗакрытии
		И Модифицированность Тогда
		ТекстВопроса = НСтр("ru = 'Закрыть форму помощника? Введенные данные будут потеряны.'");
		СписокКнопок = Новый СписокЗначений;
		
		СписокКнопок.Добавить(КодВозвратаДиалога.Да,НСтр("ru = 'Закрыть'"));
		СписокКнопок.Добавить(КодВозвратаДиалога.Нет,НСтр("ru = 'Не закрывать'"));
		
		Результат = Вопрос(ТекстВопроса, СписокКнопок);
		Если Результат <> КодВозвратаДиалога.Да Тогда
			ЗадаватьВопросОЗакрытии = Истина;
			Отказ = Истина;
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ПриЗакрытии()
	
	Оповестить("Закрытие_ПомощникНового_Характеристика");
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ ШАПКИ ФОРМЫ

&НаКлиенте
Процедура НаименованиеПриИзменении(Элемент)
	Модифицированность = Истина;
КонецПроцедуры

&НаКлиенте
Процедура НаименованиеПолноеПриИзменении(Элемент)
	Модифицированность = Истина;
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ КОМАНД ФОРМЫ

&НаКлиенте
Процедура Подключаемый_РедактироватьСоставСвойств(Команда)
	УправлениеСвойствамиКлиент.РедактироватьСоставСвойств(ЭтаФорма);
КонецПроцедуры

&НаКлиенте
Процедура ВыполнитьПереходПоСтраницам(Команда)
	
	Если Элементы.СтраницыПомощника.ТекущаяСтраница = Элементы.СтраницаОсновная Тогда
		
		ФормироватьРабочееНаименование = Ложь;
		ФормироватьНаименованиеДляПечати = Ложь;
		
		Если (НЕ ЗначениеЗаполнено(Объект.Наименование)
			И ЗначениеЗаполнено(ШаблонРабочегоНаименования))
			Или ЗапретРедактированияРабочегоНаименования Тогда
			
			ФормироватьРабочееНаименование = Истина;
			
		КонецЕсли;
		
		Если (НЕ ЗначениеЗаполнено(Объект.НаименованиеПолное)
			И ЗначениеЗаполнено(ШаблонНаименованияДляПечати))
			Или ЗапретРедактированияНаименованияДляПечати Тогда
			
			ФормироватьНаименованиеДляПечати = Истина;
			
		КонецЕсли;
		
		Если ФормироватьРабочееНаименование
			И ФормироватьНаименованиеДляПечати Тогда
			
			ЗаполнитьНаименованиеПоШаблонуКлиент("Оба");
			
		ИначеЕсли ФормироватьРабочееНаименование Тогда
			
			ЗаполнитьНаименованиеПоШаблонуКлиент("Рабочее");
			
		ИначеЕсли ФормироватьНаименованиеДляПечати Тогда
			
			ЗаполнитьНаименованиеПоШаблонуКлиент("ДляПечати");
			
		КонецЕсли;
		
		СсылкаНаОбъект = НовыйЭлементСправочника();
		
		Если СсылкаНаОбъект = Неопределено Тогда
			
			Если ТаблицаНайдено.Количество() > 0 Тогда
				
				Элементы.СтраницыПомощника.ТекущаяСтраница = Элементы.СтраницаНайдено;
				Элементы.СтраницыПодвал.ТекущаяСтраница = Элементы.СтраницаКнопкиДалееНазадВыбрать;
				Элементы.ВыбратьСуществующую.КнопкаПоУмолчанию = Истина;
				
			Иначе
				Возврат;
			КонецЕсли;
			
		Иначе
			
			ЗадаватьВопросОЗакрытии = Ложь;
			Оповестить("Запись_ХарактеристикиНоменклатуры",Новый Структура,СсылкаНаОбъект);
			Закрыть();
			
		КонецЕсли;
		
	ИначеЕсли Элементы.СтраницыПомощника.ТекущаяСтраница = Элементы.СтраницаНайдено Тогда
		
		Если Команда.Имя = "Назад" Тогда
			
			Элементы.СтраницыПомощника.ТекущаяСтраница = Элементы.СтраницаОсновная;
			Элементы.СтраницыПодвал.ТекущаяСтраница = Элементы.СтраницаКнопкиДалееЗакрыть;
			Элементы.Далее1.КнопкаПоУмолчанию = Истина;
			
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура Далее(Команда)
	ОчиститьСообщения();
	ВыполнитьПереходПоСтраницам(Команда);
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьНаименованиеДляПечатиПоШаблону(Команда)
	ЗаполнитьНаименованиеПоШаблонуКлиент("ДляПечати");
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьРабочееНаименованиеПоШаблону(Команда)
	ЗаполнитьНаименованиеПоШаблонуКлиент("Рабочее");
КонецПроцедуры

&НаКлиенте
Процедура Отмена(Команда)
	Закрыть(Неопределено);
КонецПроцедуры

&НаКлиенте
Процедура ВыбратьСуществующую(Команда)
	ТекущиеДанные = Элементы.ТаблицаНайдено.ТекущиеДанные;
	Если ТекущиеДанные <> Неопределено Тогда
		ЗадаватьВопросОЗакрытии = Ложь;
		Оповестить("Запись_ХарактеристикиНоменклатуры",Новый Структура,ТекущиеДанные.ХарактеристикаНоменклатуры);
		Закрыть();
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура Назад(Команда)
	ВыполнитьПереходПоСтраницам(Команда);
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

&НаСервере
Процедура ПолучитьНаборУникальныхИОбязательныхРеквизитов()
	
	Типы = Новый Массив();
	Типы.Добавить(Тип("Булево"));
	ОписаниеТиповБулево = Новый ОписаниеТипов(Типы);
	
	Запрос = Новый Запрос;
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	РеквизитыДляКонтроляХарактеристик.ИмяРеквизита КАК Наименование,
	|	РеквизитыДляКонтроляХарактеристик.ПредставлениеРеквизита КАК Представление,
	|	РеквизитыДляКонтроляХарактеристик.Свойство КАК СвойствоДопРеквизита,
	|	РеквизитыДляКонтроляХарактеристик.Уникален КАК Уникален
	|ИЗ
	|	Справочник.ВидыНоменклатуры.РеквизитыДляКонтроляХарактеристик КАК РеквизитыДляКонтроляХарактеристик
	|ГДЕ
	|	(РеквизитыДляКонтроляХарактеристик.Уникален
	|			ИЛИ РеквизитыДляКонтроляХарактеристик.ОбязателенДляЗаполнения)
	|	И РеквизитыДляКонтроляХарактеристик.Ссылка = &ВидНоменклатуры";
	
	Запрос.УстановитьПараметр("ВидНоменклатуры", ВидНоменклатуры);
	
	Результат = Запрос.Выполнить().Выгрузить();
	ТаблицаУникальныхРеквизитов.Загрузить(Результат);
	
	Отбор = Новый Структура("Свойство");
	
	Для Каждого Строка Из ТаблицаУникальныхРеквизитов Цикл
		
		Отбор.Свойство = Строка.СвойствоДопРеквизита;
		
		НайденныеСтроки = ЭтаФорма.Свойства_ОписаниеДополнительныхРеквизитов.НайтиСтроки(Отбор);
		
		Если НайденныеСтроки.Количество() = 0 Тогда
			Продолжить;
		КонецЕсли; 
		
		СтрокаДопРеквизита = НайденныеСтроки[0];
		
		ИмяЭлементаФормы   = СтрокаДопРеквизита.ИмяРеквизитаЗначение;
		Строка.ПутьКДанным = СтрокаДопРеквизита.ИмяРеквизитаЗначение;
		
		Если СтрокаДопРеквизита.Свойство.ТипЗначения = ОписаниеТиповБулево Тогда
			Продолжить;
		КонецЕсли;
		
		Элементы[ИмяЭлементаФормы].АвтоОтметкаНезаполненного = Истина;
		
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьПараметрыХарактеристик(СтруктураПараметров)
	АдресТаблицы       = Параметры.АдресТаблицы;
	ТаблицаДопРеквизитов = Новый ТаблицаЗначений;
	ТаблицаДопРеквизитов.Колонки.Добавить("ИмяРеквизита", Новый ОписаниеТипов("Строка",,,Новый КвалификаторыСтроки(255)));
	Если ЗначениеЗаполнено(АдресТаблицы) Тогда
		ТаблицаЗначенийРеквизитов = ПолучитьИзВременногоХранилища(АдресТаблицы);
		Для Каждого СтрокаТаблицы Из ТаблицаЗначенийРеквизитов Цикл
			НоваяСтрока = ТаблицаДопРеквизитов.Добавить();
			НоваяСтрока.ИмяРеквизита = СтрокаТаблицы.ИмяРеквизита;
		КонецЦикла;
		НаборСвойств = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ВидНоменклатуры, "НаборСвойствХарактеристик");
		
		Запрос = Новый Запрос;
		Запрос.Текст =
		"ВЫБРАТЬ
		|	ТаблицаДопРеквизитов.ИмяРеквизита
		|ПОМЕСТИТЬ ТаблицаИменСвойств
		|ИЗ
		|	&ТаблицаДопРеквизитов КАК ТаблицаДопРеквизитов
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ТаблицаИменСвойств.ИмяРеквизита         КАК ИмяРеквизита,
		|	НаборыДополнительныхРеквизитов.Свойство КАК Свойство
		|ИЗ
		|	ТаблицаИменСвойств КАК ТаблицаИменСвойств
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.НаборыДополнительныхРеквизитовИСведений.ДополнительныеРеквизиты КАК НаборыДополнительныхРеквизитов
		|		ПО ТаблицаИменСвойств.ИмяРеквизита = НаборыДополнительныхРеквизитов.Свойство.Наименование
		|ГДЕ
		|	НаборыДополнительныхРеквизитов.Ссылка = &НаборРеквизитов";
		Запрос.УстановитьПараметр("ТаблицаДопРеквизитов", ТаблицаДопРеквизитов);
		Запрос.УстановитьПараметр("НаборРеквизитов", НаборСвойств);
		
		ТаблицаСвойств = Запрос.Выполнить().Выгрузить();
		СтруктураПоиска = Новый Структура("ИмяРеквизита");
		Для Каждого СтрокаТаблицы Из ТаблицаСвойств Цикл
			СтруктураПоискаЗначения = Новый Структура("Свойство", СтрокаТаблицы.Свойство);
			МассивСтрок     = ЭтаФорма.Свойства_ОписаниеДополнительныхРеквизитов.НайтиСтроки(СтруктураПоискаЗначения);
			СтрокаРеквизита = МассивСтрок[0];
			ПутьКДанным     = СтрокаРеквизита.ИмяРеквизитаЗначение;
			СтруктураПоиска.ИмяРеквизита = СтрокаТаблицы.ИмяРеквизита;
			МассивСтрокЗначение   = ТаблицаЗначенийРеквизитов.НайтиСтроки(СтруктураПоиска);
			ЗначениеРеквизита     = МассивСтрокЗначение[0].ЗначениеОтбора;
			ЭтаФорма[ПутьКДанным] = ЗначениеРеквизита;
		КонецЦикла;
		
	КонецЕсли;
		
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьНаименованиеПоШаблонуКлиент(ВариантФормирования)
	
	ФормулыНаименования = ФормулыНаименования();
	
	Если ВариантФормирования = "Рабочее" Тогда
		Объект.Наименование = НоменклатураКлиент.НаименованиеПоФормуле(
								ФормулыНаименования.ФормулаРабочегоНаименования,
								ВидНоменклатуры);
	ИначеЕсли ВариантФормирования = "ДляПечати" Тогда 
		Объект.НаименованиеПолное = НоменклатураКлиент.НаименованиеПоФормуле(
								ФормулыНаименования.ФормулаНаименованияДляПечати,
								ВидНоменклатуры,
								Объект.Наименование);
	ИначеЕсли ВариантФормирования = "Оба" Тогда
		Объект.Наименование = НоменклатураКлиент.НаименованиеПоФормуле(
								ФормулыНаименования.ФормулаРабочегоНаименования,
								ВидНоменклатуры);
		Объект.НаименованиеПолное = НоменклатураКлиент.НаименованиеПоФормуле(
								ФормулыНаименования.ФормулаНаименованияДляПечати,
								ВидНоменклатуры,
								Объект.Наименование);
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Функция ФормулыНаименования()
	
	УправлениеСвойствами.ПередЗаписьюНаСервере(ЭтаФорма, Объект);
	
	СправочникОбъект = РеквизитФормыВЗначение("Объект");
	
	Результат = Новый Структура;
	Результат.Вставить("ФормулаРабочегоНаименования", НоменклатураСервер.ФормулаНаименования(ШаблонРабочегоНаименования, СправочникОбъект)); 
	Результат.Вставить("ФормулаНаименованияДляПечати", НоменклатураСервер.ФормулаНаименования(ШаблонНаименованияДляПечати, СправочникОбъект)); 
	
	Возврат Результат; 
		
КонецФункции

&НаСервере
Процедура ПроверитьУникальностьЭлемента()
	
	ТаблицаНайдено.Очистить();
	
	МассивУникальных = ТаблицаУникальныхРеквизитов.НайтиСтроки(Новый Структура("Уникален", Истина));
	
	Если МассивУникальных.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	ТаблицаРеквизитов = ТаблицаУникальныхРеквизитов.Выгрузить();
	МассивНеУникальных = Новый Массив;
	
	Для Каждого Строка Из ТаблицаРеквизитов Цикл
		
		Если Строка.Уникален Тогда
			
			Строка.Значение = ЭтаФорма[Строка.ПутьКДанным];
			
		Иначе
			
			МассивНеУникальных.Добавить(Строка);
			
		КонецЕсли;
		
	КонецЦикла;
	
	Для Каждого Строка Из МассивНеУникальных Цикл
		
		ТаблицаРеквизитов.Удалить(Строка);
		
	КонецЦикла;
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Владелец", Объект.Владелец);
	
	ИмяТаблицы = "ТаблицаХарактеристик";
	
	ТекстОсновногоЗапроса = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	" + ИмяТаблицы + ".Ссылка КАК ХарактеристикаНоменклатуры
	|ИЗ
	|	Справочник.ХарактеристикиНоменклатуры.ДополнительныеРеквизиты КАК " + ИмяТаблицы;
	
	ТекстУсловия = "
	|ГДЕ
	|	" + ИмяТаблицы + ".Ссылка.Владелец = &Владелец";
	
	СчетчикУсловий = 1;
	
	// Генерируем текст условия запроса по дополнительным реквизитам, устанавливаем параметры
	Для Каждого СтрокаУсловияДопРеквизита Из ТаблицаРеквизитов Цикл
		
		ИмяТаблицыСУсловием = ИмяТаблицы + "СУсловиемПоДопРеквизиту_" + СчетчикУсловий;
		
		ТекстУсловия = ТекстУсловия +
		"
		|  И " + ИмяТаблицыСУсловием + ".Свойство = &Свойство_" + СтрокаУсловияДопРеквизита.ПутьКДанным + 
		"
		|  И " + ИмяТаблицыСУсловием + ".Значение = &Значение_" + СтрокаУсловияДопРеквизита.ПутьКДанным +
		"
		|  И " + ИмяТаблицыСУсловием + ".Ссылка.Владелец = &Владелец";
		
		Запрос.УстановитьПараметр("Свойство_" + СтрокаУсловияДопРеквизита.ПутьКДанным, СтрокаУсловияДопРеквизита.СвойствоДопРеквизита);
		Запрос.УстановитьПараметр("Значение_" + СтрокаУсловияДопРеквизита.ПутьКДанным, СтрокаУсловияДопРеквизита.Значение);
		
		ТекстСоединения = "
		| ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ХарактеристикиНоменклатуры.ДополнительныеРеквизиты КАК " + ИмяТаблицыСУсловием + "
		| ПО " + ИмяТаблицы + ".Ссылка = " + ИмяТаблицыСУсловием + ".Ссылка";
		
		ТекстОсновногоЗапроса = ТекстОсновногоЗапроса + ТекстСоединения;
		СчетчикУсловий = СчетчикУсловий + 1;
		
	КонецЦикла;
	
	ТекстОсновногоЗапроса = ТекстОсновногоЗапроса + ТекстУсловия;
	
	Запрос.Текст = ТекстОсновногоЗапроса;
	
	ТаблицаНайдено.Загрузить(Запрос.Выполнить().Выгрузить());
	
КонецПроцедуры

&НаСервере
Функция ОбязательныеРеквизитыЗаполнены()
	Отказ = Ложь;
	ТекстОшибки = НСтр("ru='Заполните поле ""%ИмяРеквизита%""'");
	
	Если Не ЗначениеЗаполнено(Объект.Наименование) Тогда
		ТекстСообщения = СтрЗаменить(ТекстОшибки, "%ИмяРеквизита%", НСтр("ru = 'Рабочее наименование'"));
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, , "Объект.Наименование");
		Отказ = Истина;
	КонецЕсли;
	Для Каждого Строка Из ТаблицаУникальныхРеквизитов Цикл
		ЗначениеРеквизита = ЭтаФорма[Строка.ПутьКДанным];
		ПутьКРеквизиту = Строка.ПутьКДанным;
		Если Не ЗначениеЗаполнено(ЗначениеРеквизита) Тогда
			ТекстСообщения = СтрЗаменить(ТекстОшибки, "%ИмяРеквизита%", Строка.Представление);
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, , ПутьКРеквизиту);
			Отказ = Истина;
		КонецЕсли;
	КонецЦикла;
		
	Возврат Отказ;
КонецФункции

&НаСервере
Функция НовыйЭлементСправочника()
	
	Отказ = ОбязательныеРеквизитыЗаполнены();
	Если Отказ Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	ПроверитьУникальностьЭлемента();
	
	Если ТаблицаНайдено.Количество() = 0 Тогда
		НачатьТранзакцию();
		
		УправлениеСвойствами.ПередЗаписьюНаСервере(ЭтаФорма, Объект);
		
		СправочникОбъект = ДанныеФормыВЗначение(Объект, Тип("СправочникОбъект.ХарактеристикиНоменклатуры"));
		
		Если Константы.КонтролироватьУникальностьРабочегоНаименованияНоменклатурыИХарактеристик.Получить() Тогда
			Если Не Справочники.ХарактеристикиНоменклатуры.РабочееНаименованиеУникально(СправочникОбъект) Тогда
				ТекстСообщения = НСтр("ru='Значение поля ""Рабочее наименование"" не уникально'");
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения,, "Наименование", "Объект"); 
				Возврат Неопределено;
			КонецЕсли;
		КонецЕсли;
		
		СправочникОбъект.ДополнительныеСвойства.Вставить("РабочееНаименованиеСформировано");
		СправочникОбъект.ДополнительныеСвойства.Вставить("НаименованиеДляПечатиСформировано");
		
		СправочникОбъект.Записать();
		
		ЗафиксироватьТранзакцию();
		Возврат СправочникОбъект.Ссылка;
	Иначе 
		Возврат Неопределено;
	КонецЕсли;
КонецФункции



