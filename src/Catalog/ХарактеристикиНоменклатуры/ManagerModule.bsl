#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

////////////////////////////////////////////////////////////////////////////////
// ПРОГРАММНЫЙ ИНТЕРФЕЙС

//Ищет характеристику идентичную переданной характеристике, если не находит - создает характеристику для переданной номенклатуры
//
//	Параметры:
//		НоменклатураИсходногоКачества - СправочникСслыка.Номенклатура - номенклатура, среди упаковок производится поиск
//		Номенклатура - СправочникСсылка.Номенклатура - владелец новой упаковки
//	Возвращаемое значение:
//		СправочникСсылка.ХарактеристикиНоменклатуры
//
Функция ИдентичнаяХарактеристика(НоменклатураИсходногоКачества, Номенклатура, ХарактеристикаВДокументе) Экспорт
	
	ИдентичнаяХарактеристика = Справочники.ХарактеристикиНоменклатуры.НайтиПоНаименованию(ХарактеристикаВДокументе.Наименование,,, Номенклатура);
	Если ЗначениеЗаполнено(ИдентичнаяХарактеристика) Тогда 
		Возврат ИдентичнаяХарактеристика;
	КонецЕсли;
	
	УстановитьПривилегированныйРежим(Истина);
	
	НоваяХарактеристика = Справочники.ХарактеристикиНоменклатуры.СоздатьЭлемент();
	ЗаполнитьЗначенияСвойств(НоваяХарактеристика, ХарактеристикаВДокументе,,"Родитель");
	НоваяХарактеристика.Владелец = Номенклатура;
	НоваяХарактеристика.ДополнительныеРеквизиты.Загрузить(ХарактеристикаВДокументе.ДополнительныеРеквизиты.Выгрузить());
	НоваяХарактеристика.Записать();
	
	Возврат НоваяХарактеристика.Ссылка; 
	
КонецФункции

Функция РеквизитыНеРедактируемыеВГрупповойОбработке() Экспорт
	
	НеРедактируемыеРеквизиты = Новый Массив;
	НеРедактируемыеРеквизиты.Добавить("Наименование");
	
	Возврат НеРедактируемыеРеквизиты;
	
КонецФункции

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ 

Процедура ОбработкаПолученияДанныхВыбора(ДанныеВыбора, Параметры, СтандартнаяОбработка)
	
	Перем Номенклатура;
	
	Если Не Параметры.Свойство("Номенклатура", Номенклатура) Тогда
		Возврат;
	КонецЕсли;
	
	СтандартнаяОбработка = Ложь;
	
	СтрокаПоиска = Параметры.СтрокаПоиска;
	
	Запрос = Новый Запрос("
	|ВЫБРАТЬ
	|	СпрХарактеристики.Ссылка КАК Характеристика,
	|	СпрХарактеристики.Наименование КАК ХарактеристикаПредставление
	|ИЗ
	|	Справочник.Номенклатура КАК СпрНоменклатура
	|ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|	Справочник.ХарактеристикиНоменклатуры КАК СпрХарактеристики
	|ПО
	|	СпрХарактеристики.Владелец = ВЫБОР КОГДА СпрНоменклатура.ИспользованиеХарактеристик = ЗНАЧЕНИЕ(Перечисление.ВариантыИспользованияХарактеристикНоменклатуры.ОбщиеДляВидаНоменклатуры) ТОГДА
	|			СпрНоменклатура.ВидНоменклатуры
	|		КОГДА СпрНоменклатура.ИспользованиеХарактеристик = ЗНАЧЕНИЕ(Перечисление.ВариантыИспользованияХарактеристикНоменклатуры.ИндивидуальныеДляНоменклатуры) ТОГДА
	|			СпрНоменклатура.Ссылка
	|		ИНАЧЕ
	|			ЛОЖЬ
	|		КОНЕЦ
	|ГДЕ
	|	СпрНоменклатура.Ссылка = &Номенклатура
	|	" + ?(СтрокаПоиска = Неопределено, "", "И СпрХарактеристики.Наименование ПОДОБНО &СтрокаПоиска") + "
	|УПОРЯДОЧИТЬ ПО
	|	ХарактеристикаПредставление
	|");

	Запрос.УстановитьПараметр("Номенклатура", Номенклатура);
    	
	Если СтрокаПоиска <> Неопределено Тогда
		Запрос.УстановитьПараметр("СтрокаПоиска", СтрокаПоиска + "%");
	КонецЕсли;
	
	ДанныеВыбора = Новый СписокЗначений;

	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		ДанныеВыбора.Добавить(Выборка.Характеристика, Выборка.ХарактеристикаПредставление);
	КонецЦикла;
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

Функция РабочееНаименованиеУникально(Объект) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	ХарактеристикиНоменклатуры.Ссылка КАК Характеристика
	|ИЗ
	|	Справочник.ХарактеристикиНоменклатуры КАК ХарактеристикиНоменклатуры
	|ГДЕ
	|	ХарактеристикиНоменклатуры.Ссылка <> &Ссылка
	|	И ХарактеристикиНоменклатуры.Наименование = &Наименование
	|	И ХарактеристикиНоменклатуры.Владелец = &Владелец";
	
	Запрос.УстановитьПараметр("Ссылка", Объект.Ссылка);
	Запрос.УстановитьПараметр("Наименование", Объект.Наименование);
	Запрос.УстановитьПараметр("Владелец", Объект.Владелец);

	Результат = Запрос.Выполнить();
	
	Возврат Результат.Пустой()
	
КонецФункции

////////////////////////////////////////////////////////////////////////////////
// Обновление информационной базы

// Обработчик обновления УТ 11.1.0.0
//
Процедура УстановитьКонстантуДобавлятьИндивидуальныеХарактеристики() Экспорт
	
	Если Константы.ИспользоватьХарактеристикиНоменклатуры.Получить() Тогда
		
		Константы.ДобавлятьИндивидуальныеХарактеристикиПриСозданииНоменклатуры.Установить(Истина);
		
	КонецЕсли;
	
КонецПроцедуры



#КонецЕсли