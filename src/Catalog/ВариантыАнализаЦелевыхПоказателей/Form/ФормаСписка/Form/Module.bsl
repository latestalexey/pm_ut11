////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	УстановитьДоступностьКомандыПодробнее(Элементы);
	УстановитьДоступностьКомандПорядка(Элементы);
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ ТАБЛИЦЫ ФОРМЫ СТРУКТУРА ЦЕЛЕЙ СПИСОК

&НаКлиенте
Процедура СтруктураЦелейСписокПриАктивизацииСтроки(Элемент)
	
	ОбновитьСодержимоеФормыПриаАктивизацииЦели();
	
	УстановитьДоступностьКомандыПодробнее(Элементы);
	УстановитьДоступностьКомандПорядка(Элементы);
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ ТАБЛИЦЫ ФОРМЫ ВАРИАНТЫ АНАЛИЗА СПИСОК

&НаКлиенте
Процедура ВариантыАнализаСписокПриАктивизацииСтроки(Элемент)
	
	УстановитьДоступностьКомандыПодробнее(Элементы);
	УстановитьДоступностьКомандПорядка(Элементы);
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ КОМАНД ФОРМЫ

////////////////////////////////////////////////////////////////////////////////
// Процедуры подсистемы "Настройка порядка элементов"

&НаКлиенте
Процедура ПереместитьЭлементВверх(Команда)
	
	НастройкаПорядкаЭлементовКлиент.ПереместитьЭлементВверхВыполнить(ВариантыАнализаСписок, Элементы.ВариантыАнализаСписок);
	
КонецПроцедуры // ПереместитьЭлементВверх()

&НаКлиенте
Процедура ПереместитьЭлементВниз(Команда)
	
	НастройкаПорядкаЭлементовКлиент.ПереместитьЭлементВнизВыполнить(ВариантыАнализаСписок, Элементы.ВариантыАнализаСписок);
	
КонецПроцедуры // ПереместитьЭлементВниз()

&НаКлиенте
Процедура ПереместитьЭлементЦелиВверх(Команда)
	
	НастройкаПорядкаЭлементовКлиент.ПереместитьЭлементВверхВыполнить(СтруктураЦелейСписок, Элементы.СтруктураЦелейСписок);
	
КонецПроцедуры // ПереместитьЭлементВверх()

&НаКлиенте
Процедура ПереместитьЭлементЦелиВниз(Команда)
	
	НастройкаПорядкаЭлементовКлиент.ПереместитьЭлементВнизВыполнить(СтруктураЦелейСписок, Элементы.СтруктураЦелейСписок);
	
КонецПроцедуры // ПереместитьЭлементВниз()

////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

&НаКлиенте 
Функция НайтиПолеОтбора(Элементы, ИмяОтбора)
	
	ИскомоеПоле = Неопределено;
	
	ПолеОтбора = Новый ПолеКомпоновкиДанных(ИмяОтбора);
	
	Для каждого ОтборПоле из Элементы Цикл
		
		Если ТипЗнч(ОтборПоле) = Тип("ГруппаЭлементовОтбораКомпоновкиДанных") тогда
			ИскомоеПоле = НайтиПолеОтбора(ОтборПоле.Элементы, ИмяОтбора);
		Иначе
			Если ОтборПоле.Использование и ОтборПоле.ЛевоеЗначение = ПолеОтбора тогда
				
				ИскомоеПоле = ОтборПоле;
				
				Прервать;
				
			КонецЕсли;
		КонецЕсли;
		
	КонецЦикла;
	
	Возврат ИскомоеПоле;
	
КонецФункции

&НаКлиенте
Процедура ОбновитьСодержимоеФормыПриаАктивизацииЦели()
	
	Если ТипЗнч(Элементы.СтруктураЦелейСписок.ТекущаяСтрока) = Тип("СправочникСсылка.СтруктураЦелей") Тогда
		ТекущаяЦель = Элементы.СтруктураЦелейСписок.ТекущаяСтрока;
		ИспользоватьВариантыАнализа = ЦельИзмеримая(ТекущаяЦель);
		
	Иначе
		ТекущаяЦель = Неопределено;
		ИспользоватьВариантыАнализа = Ложь;
		
	КонецЕсли;
	
	ИскомоеПолеОтбора = НайтиПолеОтбора(ВариантыАнализаСписок.Отбор.Элементы, "Владелец");
	
	Если ИскомоеПолеОтбора = Неопределено Тогда
		ОтборПоЦели = ВариантыАнализаСписок.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
		ОтборПоЦели.Использование = Истина;
		ОтборПоЦели.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Владелец");
		ОтборПоЦели.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
		ОтборПоЦели.ПравоеЗначение = ТекущаяЦель;
		ОтборПоЦели.РежимОтображения = РежимОтображенияЭлементаНастройкиКомпоновкиДанных.Недоступный;
		
	Иначе
		ИскомоеПолеОтбора.Использование = Истина;
		ИскомоеПолеОтбора.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Владелец");
		ИскомоеПолеОтбора.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
		ИскомоеПолеОтбора.ПравоеЗначение = ТекущаяЦель;
		ИскомоеПолеОтбора.РежимОтображения = РежимОтображенияЭлементаНастройкиКомпоновкиДанных.Недоступный;
		
	КонецЕсли;
	
	Элементы.ВариантыАнализаСписокСоздать.Доступность = ИспользоватьВариантыАнализа;
	Элементы.ВариантыАнализаСписокСоздатьКонтекстноеМеню.Доступность = ИспользоватьВариантыАнализа;
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста 
Процедура УстановитьДоступностьКомандыПодробнее(Элементы)
	
	Если Элементы.ВариантыАнализаСписок.ТекущаяСтрока = Неопределено Тогда
		Элементы.ВариантыАнализаСписокКоманднаяПанель.ПодчиненныеЭлементы.ВариантыАнализаСписокОтчетМониторЦелевыхПоказателейОткрытьПодробности.Доступность = Ложь;
		Элементы.ВариантыАнализаСписокКонтекстноеМеню.ПодчиненныеЭлементы.ВариантыАнализаСписокОтчетМониторЦелевыхПоказателейОткрытьПодробностиКонтекстноеМеню.Доступность = Ложь;
		
	Иначе
		Элементы.ВариантыАнализаСписокКоманднаяПанель.ПодчиненныеЭлементы.ВариантыАнализаСписокОтчетМониторЦелевыхПоказателейОткрытьПодробности.Доступность = Истина;
		Элементы.ВариантыАнализаСписокКонтекстноеМеню.ПодчиненныеЭлементы.ВариантыАнализаСписокОтчетМониторЦелевыхПоказателейОткрытьПодробностиКонтекстноеМеню.Доступность = Истина;
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста 
Процедура УстановитьДоступностьКомандПорядка(Элементы)
	
	Если Элементы.ВариантыАнализаСписок.ТекущаяСтрока = Неопределено Тогда
		Элементы.ВариантыАнализаСписокКоманднаяПанель.ПодчиненныеЭлементы.ГруппаИзменениеПорядка.ПодчиненныеЭлементы.ПереместитьЭлементВверх.Доступность = Ложь;
		Элементы.ВариантыАнализаСписокКоманднаяПанель.ПодчиненныеЭлементы.ГруппаИзменениеПорядка.ПодчиненныеЭлементы.ПереместитьЭлементВниз.Доступность = Ложь;
		Элементы.ВариантыАнализаСписокКонтекстноеМеню.ПодчиненныеЭлементы.ГруппаИзменениеПорядкаКонтекстноеМеню.ПодчиненныеЭлементы.ПереместитьЭлементВверхКонтекстноеМеню.Доступность = Ложь;
		Элементы.ВариантыАнализаСписокКонтекстноеМеню.ПодчиненныеЭлементы.ГруппаИзменениеПорядкаКонтекстноеМеню.ПодчиненныеЭлементы.ПереместитьЭлементВнизКонтекстноеМеню.Доступность = Ложь;
		
	Иначе
		Элементы.ВариантыАнализаСписокКоманднаяПанель.ПодчиненныеЭлементы.ГруппаИзменениеПорядка.ПодчиненныеЭлементы.ПереместитьЭлементВверх.Доступность = Истина;
		Элементы.ВариантыАнализаСписокКоманднаяПанель.ПодчиненныеЭлементы.ГруппаИзменениеПорядка.ПодчиненныеЭлементы.ПереместитьЭлементВниз.Доступность = Истина;
		Элементы.ВариантыАнализаСписокКонтекстноеМеню.ПодчиненныеЭлементы.ГруппаИзменениеПорядкаКонтекстноеМеню.ПодчиненныеЭлементы.ПереместитьЭлементВверхКонтекстноеМеню.Доступность = Истина;
		Элементы.ВариантыАнализаСписокКонтекстноеМеню.ПодчиненныеЭлементы.ГруппаИзменениеПорядкаКонтекстноеМеню.ПодчиненныеЭлементы.ПереместитьЭлементВнизКонтекстноеМеню.Доступность = Истина;
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере 
Функция ЦельИзмеримая(Цель)
	
	ЦельИзмеримая = Ложь;
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Цель", Цель);
	Запрос.Текст = "ВЫБРАТЬ
	               |	СтруктураЦелей.ЦельИзмеримая
	               |ИЗ
	               |	Справочник.СтруктураЦелей КАК СтруктураЦелей
	               |ГДЕ
	               |	СтруктураЦелей.Ссылка = &Цель";
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Если НЕ РезультатЗапроса.Пустой() Тогда
		Выборка = РезультатЗапроса.Выбрать();
		Выборка.Следующий();
		
		ЦельИзмеримая = Выборка.ЦельИзмеримая;
		
	КонецЕсли;
	
	Возврат ЦельИзмеримая;
	
КонецФункции
