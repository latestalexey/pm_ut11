
////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ИзменитьВидимостьЭлементов();
	
	// Обработчик подсистемы запрета редактирования реквизитов объектов
	ЗапретРедактированияРеквизитовОбъектов.ЗаблокироватьРеквизиты(ЭтаФорма);
	
	Если Не ЗначениеЗаполнено(Объект.Ссылка) Тогда
		Объект.Наименование = АвтоНаименование(ЭтаФорма);
	Иначе
		АвтоНаименование(ЭтаФорма);
	КонецЕсли;
	
	Для каждого ВариантНаименования Из Элементы.Наименование.СписокВыбора Цикл
		Если Объект.Наименование = ВариантНаименования.Значение Тогда
			ИспользуетсяАвтоНаименование = Истина;
		КонецЕсли;
	КонецЦикла;
	
	ОбновитьОписаниеПредоставленияСкидки();
	
	ИспользоватьКартыЛояльности = ПолучитьФункциональнуюОпцию("ИспользоватьКартыЛояльности");
	
КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	
	// Обработчик подсистемы запрета редактирования реквизитов объектов
	ЗапретРедактированияРеквизитовОбъектов.ЗаблокироватьРеквизиты(ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗаписью(Отказ, ПараметрыЗаписи)
	
	ОбновитьАвтонаименование(Модифицированность);
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ ШАПКИ ФОРМЫ

&НаКлиенте
Процедура СпособПредоставленияПриИзменении(Элемент)
	
	ПредложитьДобавитьУсловиеКартаЛояльностиНеЗарегистрирована = СпособПредоставленияПриИзмененииНаСервере();
	Если ПредложитьДобавитьУсловиеКартаЛояльностиНеЗарегистрирована Тогда
		
		Результат = Вопрос(
			СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				НСтр("ru = 'Добавить условие ""Карта лояльности ""%1"" не зарегистрирована?""'"),
				Объект.ВидКартыЛояльности
			), РежимДиалогаВопрос.ДаНет);
		Если Результат = КодВозвратаДиалога.Да Тогда
			ДобавитьУсловиеКартаЛояльностиНеЗарегистрирована(Объект.ВидКартыЛояльности);
		КонецЕсли;
		
	КонецЕсли;
	
	ОбновитьАвтонаименование(Истина);
	ОбновитьОписаниеПредоставленияСкидки();
	
КонецПроцедуры

&НаКлиенте
Процедура НаименованиеНачалоВыбораИзСписка(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	АвтоНаименование(ЭтаФорма);
	ВыбранныйЭлемент = ВыбратьИзСписка(Элементы.Наименование.СписокВыбора, Элемент);
	Если ВыбранныйЭлемент <> Неопределено Тогда
		
		Объект.Наименование = ВыбранныйЭлемент.Значение;
		
		НаименованиеИзмененоПользователем = Истина;
		Модифицированность                = Истина;
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура НаименованиеПриИзменении(Элемент)
	
	НаименованиеИзмененоПользователем = Истина;
	
КонецПроцедуры

&НаКлиенте
Процедура УправляемаяПриИзменении(Элемент)
	ОбновитьАвтонаименование(Истина);
КонецПроцедуры

&НаКлиенте
Процедура ЗначениеСкидкиНаценкиПриИзменении(Элемент)
	ОбновитьАвтонаименование(Истина);
КонецПроцедуры

&НаКлиенте
Процедура ВалютаПредоставленияПриИзменении(Элемент)
	ОбновитьАвтонаименование(Истина);
КонецПроцедуры

&НаКлиенте
Процедура ВидЦеныПриИзменении(Элемент)
	ОбновитьАвтонаименование(Истина);
КонецПроцедуры

&НаКлиенте
Процедура ЦеновыеГруппыПриИзменении(Элемент)
	ОбновитьАвтонаименование(Истина);
КонецПроцедуры

&НаСервере
Процедура ОбновитьОписаниеПредоставленияСкидки()
	
	Таблица = Новый ТаблицаЗначений;
	Таблица.Колонки.Добавить("НомерСтроки", Новый ОписаниеТипов("Число"));
	Таблица.Колонки.Добавить(
		"УсловиеПредоставления",
		Новый ОписаниеТипов("СправочникСсылка.УсловияПредоставленияСкидокНаценок")
	);
	Для Каждого СтрокаТЧ Из Объект.УсловияПредоставления Цикл
		НоваяСтрока = Таблица.Добавить();
		НоваяСтрока.НомерСтроки = СтрокаТЧ.НомерСтроки;
		НоваяСтрока.УсловиеПредоставления = СтрокаТЧ.УсловиеПредоставления;
	КонецЦикла;
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	Таблица.НомерСтроки КАК НомерСтроки,
	|	Таблица.УсловиеПредоставления КАК УсловиеПредоставления
	|ПОМЕСТИТЬ Таблица
	|ИЗ
	|	&Таблица КАК Таблица
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Таблица.НомерСтроки КАК НомерСтроки
	|ИЗ
	|	Справочник.УсловияПредоставленияСкидокНаценок КАК Условия
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Таблица КАК Таблица
	|		ПО Условия.Ссылка = Таблица.УсловиеПредоставления
	|		И Условия.ОбластьОграничения = ЗНАЧЕНИЕ(Перечисление.ВариантыОбластейОграниченияСкидокНаценок.ВСтроке)
	|");
	
	Запрос.УстановитьПараметр("Таблица", Таблица);
	
	Результат = Запрос.Выполнить();
	
	Если Не Результат.Пустой() Тогда
		НомераСтрок = Результат.Выгрузить().ВыгрузитьКолонку("НомерСтроки");
		Если Объект.СпособПредоставления = Перечисления.СпособыПредоставленияСкидокНаценок.Сумма
			ИЛИ Объект.СпособПредоставления = Перечисления.СпособыПредоставленияСкидокНаценок.Подарок Тогда
			Описание = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				НСтр("ru = 'Скидка распределяется на строки, в которых выполнены условия (%1)'"),
				СтроковыеФункцииКлиентСервер.ПолучитьСтрокуИзМассиваПодстрок(НомераСтрок)
			);
		ИначеЕсли Объект.СпособПредоставления = Перечисления.СпособыПредоставленияСкидокНаценок.Количество Тогда
			Описание = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				НСтр("ru = 'Скидка дается на строки, в которых выполнены условия (%1) и количество ед. не менее %2'"),
				СтроковыеФункцииКлиентСервер.ПолучитьСтрокуИзМассиваПодстрок(НомераСтрок),
				Объект.УсловиеДляСкидкиКоличеством
			);
		Иначе
			Описание = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				НСтр("ru = 'Скидка дается на строки, в которых выполнены условия (%1)'"),
				СтроковыеФункцииКлиентСервер.ПолучитьСтрокуИзМассиваПодстрок(НомераСтрок)
			);
		КонецЕсли;
	Иначе
		Если Объект.СпособПредоставления = Перечисления.СпособыПредоставленияСкидокНаценок.Сумма
			ИЛИ Объект.СпособПредоставления = Перечисления.СпособыПредоставленияСкидокНаценок.Подарок Тогда
			Описание = НСтр("ru = 'Скидка распределяется на все строки документа'");
		ИначеЕсли Объект.СпособПредоставления = Перечисления.СпособыПредоставленияСкидокНаценок.Количество Тогда
			Описание = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				НСтр("ru = 'Скидка дается на строки, в которых количество ед. не менее %1'"),
				Объект.УсловиеДляСкидкиКоличеством
			);
		Иначе
			Описание = НСтр("ru = 'Скидка дается на все строки документа'");
		КонецЕсли;
		
	КонецЕсли;
	
	ФормироватьОписание = Истина;
	
	Если Объект.СпособПредоставления = Перечисления.СпособыПредоставленияСкидокНаценок.Сумма
		Или Объект.СпособПредоставления = Перечисления.СпособыПредоставленияСкидокНаценок.ОкруглениеСуммы
		Или Объект.СпособПредоставления = Перечисления.СпособыПредоставленияСкидокНаценок.Подарок Тогда
		
		Запрос = Новый Запрос(
		"ВЫБРАТЬ
		|	Таблица.НомерСтроки КАК НомерСтроки,
		|	Таблица.УсловиеПредоставления КАК УсловиеПредоставления
		|ПОМЕСТИТЬ Таблица
		|ИЗ
		|	&Таблица КАК Таблица
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	Таблица.НомерСтроки КАК НомерСтроки
		|ИЗ
		|	Справочник.УсловияПредоставленияСкидокНаценок КАК Условия
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Таблица КАК Таблица
		|		ПО Условия.Ссылка = Таблица.УсловиеПредоставления
		|		И Условия.УсловиеПредоставления В (
		|			Значение(Перечисление.УсловияПредоставленияСкидокНаценок.ЗаРазовыйОбъемПродаж),
		|			Значение(Перечисление.УсловияПредоставленияСкидокНаценок.ЗаНакопленныйОбъемПродаж)
		|		)
		|		И Условия.ОбластьОграничения = ЗНАЧЕНИЕ(Перечисление.ВариантыОбластейОграниченияСкидокНаценок.ВДокументе)
		|");
		
		Запрос.УстановитьПараметр("Таблица", Таблица);
		Результат = Запрос.Выполнить();
		
	ИначеЕсли Объект.СпособПредоставления = Перечисления.СпособыПредоставленияСкидокНаценок.СуммаДляКаждойСтроки Тогда
		
		Запрос = Новый Запрос(
		"ВЫБРАТЬ
		|	Таблица.НомерСтроки КАК НомерСтроки,
		|	Таблица.УсловиеПредоставления КАК УсловиеПредоставления
		|ПОМЕСТИТЬ Таблица
		|ИЗ
		|	&Таблица КАК Таблица
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	Таблица.НомерСтроки КАК НомерСтроки
		|ИЗ
		|	Справочник.УсловияПредоставленияСкидокНаценок КАК Условия
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Таблица КАК Таблица
		|		ПО Условия.Ссылка = Таблица.УсловиеПредоставления
		|		И Условия.УсловиеПредоставления В (
		|			Значение(Перечисление.УсловияПредоставленияСкидокНаценок.ЗаРазовыйОбъемПродаж)
		|		)
		|		И Условия.ОбластьОграничения = ЗНАЧЕНИЕ(Перечисление.ВариантыОбластейОграниченияСкидокНаценок.ВСтроке)
		|");
		
		Запрос.УстановитьПараметр("Таблица", Таблица);
		Результат = Запрос.Выполнить();
		
	Иначе
		ФормироватьОписание = Ложь;
	КонецЕсли;
	
	Если ФормироватьОписание Тогда
		Если Не Результат.Пустой() Тогда
			Если Объект.ИспользоватьКратность Тогда
				НомераСтрок = Результат.Выгрузить().ВыгрузитьКолонку("НомерСтроки");
				Описание = Описание + " "
									+ СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
										НСтр("ru = 'кратно количеству раз выполнения условий (%1)'"),
										СтроковыеФункцииКлиентСервер.ПолучитьСтрокуИзМассиваПодстрок(НомераСтрок)
									);
			КонецЕсли;
		Иначе
			ФормироватьОписание = Ложь;
		КонецЕсли;
	КонецЕсли;
	
	Элементы.ИспользоватьКратность.Доступность = ФормироватьОписание;
	Если Не ФормироватьОписание Тогда
		Объект.ИспользоватьКратность = Ложь;
	КонецЕсли;
	
	Элементы.ОписаниеПредоставленияСкидки.Заголовок = Описание;
	
КонецПроцедуры

&НаКлиенте
Процедура УсловияПредоставленияПриИзменении(Элемент)
	
	ОбновитьАвтонаименование(Истина);
	ОбновитьОписаниеПредоставленияСкидки();
	
КонецПроцедуры

&НаКлиенте
Процедура ВидКартыЛояльностиПриИзменении(Элемент)
	
	ОбновитьАвтонаименование(Истина);
	
	ПредложитьДобавитьУсловиеКартаЛояльностиНеЗарегистрирована = ВидКартыЛояльностиПриИзмененииНаСервере();
	Если ПредложитьДобавитьУсловиеКартаЛояльностиНеЗарегистрирована Тогда
		Результат = Вопрос(
			СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				НСтр("ru = 'Добавить условие ""Карта лояльности ""%1"" не зарегистрирована?""'"),
				Объект.ВидКартыЛояльности
			), РежимДиалогаВопрос.ДаНет);
		Если Результат = КодВозвратаДиалога.Да Тогда
			ДобавитьУсловиеКартаЛояльностиНеЗарегистрирована(Объект.ВидКартыЛояльности);
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ТекстСообщенияПриИзменении(Элемент)
	ОбновитьАвтонаименование(Истина);
КонецПроцедуры

&НаКлиенте
Процедура СегментПодарковПриИзменении(Элемент)
	ОбновитьАвтонаименование(Истина);
КонецПроцедуры

&НаКлиенте
Процедура УсловиеДляСкидкиКоличествомПриИзменении(Элемент)
	ОбновитьАвтонаименование(Истина);
КонецПроцедуры

&НаКлиенте
Процедура ИспользоватьКратностьПриИзменении(Элемент)
	
	ОбновитьОписаниеПредоставленияСкидки();
	
КонецПроцедуры

&НаКлиенте
Процедура СпособПредоставленияНачалоВыбораИзСписка(Элемент, СтандартнаяОбработка)
	
	ЗаполнитьСписокВыбора(ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура ТочностьОкругленияНачалоВыбораИзСписка(Элемент, СтандартнаяОбработка)
	
	Элементы.ТочностьОкругления.СписокВыбора.Очистить();
	ЗначениеОкругления             = 0.01;
	ЧетноеПриращение               = Ложь;
	МаксимальноеЗначениеОкругления = 100000;
	ГраницаДиапазонаЦен            = 100000000;
	
	Пока ЗначениеОкругления <= МаксимальноеЗначениеОкругления 
		И (ЗначениеОкругления <= ГраницаДиапазонаЦен Или ГраницаДиапазонаЦен < 0) Цикл
		
		Элементы.ТочностьОкругления.СписокВыбора.Добавить(ЗначениеОкругления);
		ЗначениеОкругления = ЗначениеОкругления * ?(ЧетноеПриращение, 2, 5);
		ЧетноеПриращение   = Не ЧетноеПриращение;
		
	КонецЦикла;

	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ КОМАНД ФОРМЫ

&НаКлиенте
Процедура ПодобратьУсловияПредоставления(Команда)
	
	СписокУсловийПредоставления = Новый СписокЗначений();
	Для Каждого ТекСтрока Из Объект.УсловияПредоставления Цикл
		СписокУсловийПредоставления.Добавить(ТекСтрока.УсловиеПредоставления);
	КонецЦикла;
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("Документ",      Объект.Ссылка);
	ПараметрыФормы.Вставить("УсловияПредоставления", СписокУсловийПредоставления);
	СписокУсловийПредоставления = ОткрытьФормуМодально(
		"Справочник.УсловияПредоставленияСкидокНаценок.Форма.ФормаПодбора",
		ПараметрыФормы,
		ЭтаФорма
	);
	
	Если СписокУсловийПредоставления <> Неопределено Тогда
		
		Объект.УсловияПредоставления.Очистить();
		
		Для Каждого ТекСтрока Из СписокУсловийПредоставления Цикл
			
			НоваяСтрока = Объект.УсловияПредоставления.Добавить();
			НоваяСтрока.УсловиеПредоставления = ТекСтрока.Значение;
			
		КонецЦикла;
		
		ОбновитьАвтонаименование(Истина);
		ОбновитьОписаниеПредоставленияСкидки();
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_РазрешитьРедактированиеРеквизитовОбъекта(Команда)
	
	ОбщегоНазначенияУТКлиент.РазрешитьРедактированиеРеквизитовОбъекта(ЭтаФорма);
	
КонецПроцедуры


&НаКлиенте
Процедура КонструкторПсихологическогоОкругления(Команда)
	
	РезультатРедактирования = ОткрытьФормуМодально("Справочник.ВидыЦен.Форма.ФормаКонструктораОкругления",
		Новый Структура("ТочностьОкругления, ОкруглятьВБольшуюСторону, ПсихологическоеОкругление, ГраницаДиапазонаЦен, ПримерЧисло",
			Объект.ТочностьОкругления,
			Объект.ОкруглятьВБольшуюСторону,
			Объект.ПсихологическоеОкругление,
			Объект.ЗначениеСкидкиНаценки,
			Объект.ЗначениеСкидкиНаценки
		),
	);
	
	Если РезультатРедактирования <> Неопределено Тогда
		Объект.ПсихологическоеОкругление = РезультатРедактирования;
	КонецЕсли;
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

////////////////////////////////////////////////////////////////////////////////
// При изменении реквизитов

&НаСервере
Функция ВидКартыЛояльностиПриИзмененииНаСервере()
	
	Если ЗначениеЗаполнено(Объект.ВидКартыЛояльности) Тогда
		
		Возврат Не ЕстьУсловиеКартаЛояльностиНеЗарегистрирована(
			Объект.УсловияПредоставления.Выгрузить().ВыгрузитьКолонку("УсловиеПредоставления"),
			Объект.ВидКартыЛояльности
		);
		
	Иначе
		
		Возврат Ложь;
		
	КонецЕсли;
	
КонецФункции

&НаСервере
Функция СпособПредоставленияПриИзмененииНаСервере()
	
	ИзменитьВидимостьЭлементов();
	
	Если Объект.СпособПредоставления = Перечисления.СпособыПредоставленияСкидокНаценок.КартаЛояльности
		И ЗначениеЗаполнено(Объект.ВидКартыЛояльности) Тогда
		
		Возврат Не ЕстьУсловиеКартаЛояльностиНеЗарегистрирована(
			Объект.УсловияПредоставления.Выгрузить().ВыгрузитьКолонку("УсловиеПредоставления"),
			Объект.ВидКартыЛояльности
		);
		
	Иначе
		
		Возврат Ложь;
		
	КонецЕсли;
	
КонецФункции

////////////////////////////////////////////////////////////////////////////////
// Прочее

&НаКлиентеНаСервереБезКонтекста
Функция АвтоНаименование(Форма)
	
	Форма.Элементы.Наименование.СписокВыбора.Очистить();
	Объект = Форма.Объект;
	
	СтрокаНаименования = "";
	Если Объект.СпособПредоставления = ПредопределенноеЗначение("Перечисление.СпособыПредоставленияСкидокНаценок.Процент") Тогда
		
		СтрокаНаименования = Строка(Объект.ЗначениеСкидкиНаценки) + НСтр("ru = '%'");
		
	ИначеЕсли Объект.СпособПредоставления = ПредопределенноеЗначение("Перечисление.СпособыПредоставленияСкидокНаценок.Сумма") Тогда
		
		СтрокаНаименования = Строка(Объект.ЗначениеСкидкиНаценки) + " " + Объект.ВалютаПредоставления;
		
	ИначеЕсли Объект.СпособПредоставления = ПредопределенноеЗначение("Перечисление.СпособыПредоставленияСкидокНаценок.СуммаДляКаждойСтроки") Тогда
		
		СтрокаНаименования = Строка(Объект.ЗначениеСкидкиНаценки) + " " + Объект.ВалютаПредоставления;
		
	ИначеЕсли Объект.СпособПредоставления = ПредопределенноеЗначение("Перечисление.СпособыПредоставленияСкидокНаценок.ВидЦены") Тогда
		
		СтрокаНаименования = НСтр("ru = 'Вид цены'") + " " + Объект.ВидЦены;
		
	ИначеЕсли Объект.СпособПредоставления = ПредопределенноеЗначение("Перечисление.СпособыПредоставленияСкидокНаценок.Сообщение") Тогда
		
		СтрокаНаименования = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			НСтр("ru = 'Сообщение: %1'"),
			Объект.ТекстСообщения
		);
		
	ИначеЕсли Объект.СпособПредоставления = ПредопределенноеЗначение("Перечисление.СпособыПредоставленияСкидокНаценок.КартаЛояльности") Тогда
		
		СтрокаНаименования = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			НСтр("ru = 'Карта лояльности: %1'"),
			Объект.ВидКартыЛояльности
		);
		
	ИначеЕсли Объект.СпособПредоставления = ПредопределенноеЗначение("Перечисление.СпособыПредоставленияСкидокНаценок.Количество") Тогда
		
		СтрокаНаименования = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			НСтр("ru = 'Бесплатно %1 ед. из %2 ед.'"),
			Объект.ЗначениеСкидкиНаценки,
			Объект.УсловиеДляСкидкиКоличеством
		);
		
	ИначеЕсли Объект.СпособПредоставления = ПредопределенноеЗначение("Перечисление.СпособыПредоставленияСкидокНаценок.Подарок") Тогда
		
		Если ЗначениеЗаполнено(Объект.СегментПодарков) Тогда
			СтрокаНаименования = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				НСтр("ru = '%1 ед. из сегмента %2 в подарок'"),
				Объект.ЗначениеСкидкиНаценки,
				Объект.СегментПодарков
			);
		Иначе
			СтрокаНаименования = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				НСтр("ru = '%1 ед. из документа в подарок'"),
				Объект.ЗначениеСкидкиНаценки
			);
		КонецЕсли;
		
	ИначеЕсли Объект.СпособПредоставления = ПредопределенноеЗначение("Перечисление.СпособыПредоставленияСкидокНаценок.ОкруглениеСуммы") Тогда
		
		СтрокаНаименования = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			НСтр("ru = 'Округление суммы документа, точность %1'"),
			Объект.ТочностьОкругления
		);
		
	КонецЕсли;
	
	Если Объект.Управляемая Тогда
		СтрокаНаименования = НСтр("ru = 'Назначается вручную:'") + " "+ СтрокаНаименования;
	КонецЕсли;
	
	Форма.Элементы.Наименование.СписокВыбора.Добавить(СтрокаНаименования);
	
	Если Объект.УсловияПредоставления.Количество() = 1 Тогда
		СтрокаНаименования = СтрокаНаименования + " ("+Объект.УсловияПредоставления[0].УсловиеПредоставления+")";
		Форма.Элементы.Наименование.СписокВыбора.Добавить(СтрокаНаименования);
	ИначеЕсли Объект.УсловияПредоставления.Количество() > 1 Тогда
		
		КоличествоУсловий = Объект.УсловияПредоставления.Количество();
		
		Если КоличествоУсловий >= 2 Тогда
			СтрокаНаименования = СтрокаНаименования + " " +НСтр("ru = '(несколько условий)'");
			Форма.Элементы.Наименование.СписокВыбора.Добавить(СтрокаНаименования);
		КонецЕсли;
		
	ИначеЕсли Объект.УсловияПредоставления.Количество() = 0 Тогда
		СтрокаНаименования = СтрокаНаименования + " " + НСтр("ru = 'без условий'");
		Форма.Элементы.Наименование.СписокВыбора.Добавить(СтрокаНаименования);
	КонецЕсли;
	
	Если Объект.ЦеновыеГруппы.Количество() > 0 Тогда
		СтрокаНаименования = СтрокаНаименования + " " +НСтр("ru = '(с уточнением по ценовым группам)'");
		Форма.Элементы.Наименование.СписокВыбора.Добавить(СтрокаНаименования);
	КонецЕсли;
	
	Возврат СтрокаНаименования;
	
КонецФункции

&НаКлиенте
Процедура ОбновитьАвтонаименование(Обновить = Истина)
	
	Если Не ЗначениеЗаполнено(Объект.Наименование)
		ИЛИ (Обновить И ИспользуетсяАвтоНаименование И Не НаименованиеИзмененоПользователем) Тогда
		Объект.Наименование = АвтоНаименование(ЭтаФорма);
		ИспользуетсяАвтоНаименование = Истина;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ИзменитьВидимостьЭлементов()
	
	Если Объект.СпособПредоставления = Перечисления.СпособыПредоставленияСкидокНаценок.ВидЦены Тогда
		
		Элементы.ВалютаПредоставления.Видимость  = Ложь;
		
		Элементы.ДекорацияПроцент.Видимость      = Ложь;
		
		Элементы.ЗначениеСкидкиНаценки.Видимость = Ложь;
		
		Элементы.ГруппаЦеновыеГруппы.Видимость   = Ложь; // В виде цен есть собственные ценовые группы.
		
		Элементы.ВидЦены.Видимость               = Истина;
		
		Элементы.ВидКартыЛояльности.Видимость         = Ложь;
		Элементы.ТекстСообщения.Видимость             = Ложь;
		
		Элементы.СегментПодарков.Видимость = Ложь;
		
		Элементы.УсловиеДляСкидкиКоличеством.Видимость = Ложь;
		
		Элементы.ИспользоватьКратность.Видимость = Ложь;
		
		Элементы.ОписаниеПредоставленияСкидки.Видимость = Истина;
		
		Элементы.ГруппаОкругление.Видимость = Ложь;
		
	ИначеЕсли Объект.СпособПредоставления = Перечисления.СпособыПредоставленияСкидокНаценок.Процент Тогда
		
		Элементы.ВалютаПредоставления.Видимость  = Ложь;
		Элементы.ВидЦены.Видимость               = Ложь;
		
		Элементы.ДекорацияПроцент.Видимость      = Истина;
		
		Элементы.ЗначениеСкидкиНаценки.Видимость = Истина;
		
		Элементы.ГруппаЦеновыеГруппы.Видимость   = Истина;
		
		Элементы.ВидКартыЛояльности.Видимость         = Ложь;
		Элементы.ТекстСообщения.Видимость             = Ложь;
		
		Элементы.СегментПодарков.Видимость = Ложь;
		
		Элементы.УсловиеДляСкидкиКоличеством.Видимость = Ложь;
		
		Элементы.ИспользоватьКратность.Видимость = Ложь;
		
		Элементы.ОписаниеПредоставленияСкидки.Видимость = Истина;
		
		Элементы.ГруппаОкругление.Видимость = Ложь;
		
	ИначеЕсли Объект.СпособПредоставления = Перечисления.СпособыПредоставленияСкидокНаценок.Сумма Тогда
		
		Элементы.ДекорацияПроцент.Видимость      = Ложь;
		
		Элементы.ВидЦены.Видимость               = Ложь;
		
		Элементы.ВалютаПредоставления.Видимость  = Истина;
		Элементы.ЗначениеСкидкиНаценки.Видимость = Истина;
		
		Элементы.ГруппаЦеновыеГруппы.Видимость = Истина;
		
		Элементы.ВидКартыЛояльности.Видимость         = Ложь;
		Элементы.ТекстСообщения.Видимость             = Ложь;
		
		Элементы.СегментПодарков.Видимость = Ложь;
		
		Элементы.УсловиеДляСкидкиКоличеством.Видимость = Ложь;
		
		Элементы.ИспользоватьКратность.Видимость = Истина;
		
		Элементы.ОписаниеПредоставленияСкидки.Видимость = Истина;
		
		Элементы.ГруппаОкругление.Видимость = Ложь;
		
	ИначеЕсли Объект.СпособПредоставления = Перечисления.СпособыПредоставленияСкидокНаценок.СуммаДляКаждойСтроки Тогда
		
		Элементы.ДекорацияПроцент.Видимость      = Ложь;
		
		Элементы.ВидЦены.Видимость               = Ложь;
		
		Элементы.ВалютаПредоставления.Видимость  = Истина;
		Элементы.ЗначениеСкидкиНаценки.Видимость = Истина;
		
		Элементы.ГруппаЦеновыеГруппы.Видимость = Истина;
		
		Элементы.ВидКартыЛояльности.Видимость         = Ложь;
		Элементы.ТекстСообщения.Видимость             = Ложь;
		
		Элементы.СегментПодарков.Видимость = Ложь;
		
		Элементы.УсловиеДляСкидкиКоличеством.Видимость = Ложь;
		
		Элементы.ИспользоватьКратность.Видимость = Истина;
		
		Элементы.ОписаниеПредоставленияСкидки.Видимость = Истина;
		
		Элементы.ГруппаОкругление.Видимость = Ложь;
		
	ИначеЕсли Объект.СпособПредоставления = Перечисления.СпособыПредоставленияСкидокНаценок.Сообщение Тогда
		
		Элементы.ЗначениеСкидкиНаценки.Видимость = Ложь;
		Элементы.ДекорацияПроцент.Видимость      = Ложь;
		Элементы.ВалютаПредоставления.Видимость  = Ложь;
		Элементы.ВидЦены.Видимость               = Ложь;
		
		Элементы.ГруппаЦеновыеГруппы.Видимость = Ложь;
		
		Элементы.ВидКартыЛояльности.Видимость         = Ложь;
		Элементы.ТекстСообщения.Видимость             = Истина;
		
		Элементы.СегментПодарков.Видимость = Ложь;
		
		Элементы.УсловиеДляСкидкиКоличеством.Видимость = Ложь;
		
		Элементы.ИспользоватьКратность.Видимость = Ложь;
		
		Элементы.ОписаниеПредоставленияСкидки.Видимость = Ложь;
		
		Элементы.ГруппаОкругление.Видимость = Ложь;
		
	ИначеЕсли Объект.СпособПредоставления = Перечисления.СпособыПредоставленияСкидокНаценок.КартаЛояльности Тогда
		
		Элементы.ЗначениеСкидкиНаценки.Видимость = Ложь;
		Элементы.ДекорацияПроцент.Видимость      = Ложь;
		Элементы.ВалютаПредоставления.Видимость  = Ложь;
		Элементы.ВидЦены.Видимость               = Ложь;
		
		Элементы.ГруппаЦеновыеГруппы.Видимость = Ложь;
		
		Элементы.ВидКартыЛояльности.Видимость         = Истина;
		Элементы.ТекстСообщения.Видимость             = Ложь;
		
		Элементы.СегментПодарков.Видимость = Ложь;
		
		Элементы.УсловиеДляСкидкиКоличеством.Видимость = Ложь;
		
		Элементы.ИспользоватьКратность.Видимость = Ложь;
		
		Элементы.ОписаниеПредоставленияСкидки.Видимость = Ложь;
		
		Элементы.ГруппаОкругление.Видимость = Ложь;
		
	ИначеЕсли Объект.СпособПредоставления = Перечисления.СпособыПредоставленияСкидокНаценок.Подарок Тогда
		
		Элементы.ЗначениеСкидкиНаценки.Видимость = Истина;
		Элементы.ДекорацияПроцент.Видимость      = Ложь;
		Элементы.ВалютаПредоставления.Видимость  = Ложь;
		Элементы.ВидЦены.Видимость               = Ложь;
		

		Элементы.ГруппаЦеновыеГруппы.Видимость = Ложь;
		
		Элементы.ВидКартыЛояльности.Видимость         = Ложь;
		Элементы.ТекстСообщения.Видимость             = Ложь;
		
		Элементы.СегментПодарков.Видимость = Истина;
		
		Элементы.УсловиеДляСкидкиКоличеством.Видимость = Ложь;
		
		Элементы.ИспользоватьКратность.Видимость = Истина;
		
		Элементы.ОписаниеПредоставленияСкидки.Видимость = Истина;
		
		Элементы.ГруппаОкругление.Видимость = Ложь;
		
	ИначеЕсли Объект.СпособПредоставления = Перечисления.СпособыПредоставленияСкидокНаценок.Количество Тогда
		
		Элементы.ЗначениеСкидкиНаценки.Видимость = Истина;
		Элементы.ДекорацияПроцент.Видимость      = Ложь;
		Элементы.ВалютаПредоставления.Видимость  = Ложь;
		Элементы.ВидЦены.Видимость               = Ложь;
		
		Элементы.ГруппаЦеновыеГруппы.Видимость = Ложь;
		
		Элементы.ВидКартыЛояльности.Видимость         = Ложь;
		Элементы.ТекстСообщения.Видимость             = Ложь;
		
		Элементы.СегментПодарков.Видимость = Ложь;
		
		Элементы.УсловиеДляСкидкиКоличеством.Видимость = Истина;
		
		Элементы.ИспользоватьКратность.Видимость = Ложь;
		
		Элементы.ОписаниеПредоставленияСкидки.Видимость = Истина;
		
		Элементы.ГруппаОкругление.Видимость = Ложь;
		
	ИначеЕсли Объект.СпособПредоставления = Перечисления.СпособыПредоставленияСкидокНаценок.ОкруглениеСуммы Тогда
		
		Элементы.ЗначениеСкидкиНаценки.Видимость        = Ложь;
		Элементы.ДекорацияПроцент.Видимость             = Ложь;
		Элементы.ВалютаПредоставления.Видимость         = Ложь;
		Элементы.ВидЦены.Видимость                      = Ложь;
		Элементы.ГруппаЦеновыеГруппы.Видимость          = Ложь;
		Элементы.ВидКартыЛояльности.Видимость           = Ложь;
		Элементы.ТекстСообщения.Видимость               = Ложь;
		Элементы.СегментПодарков.Видимость              = Ложь;
		Элементы.УсловиеДляСкидкиКоличеством.Видимость  = Ложь;
		Элементы.ИспользоватьКратность.Видимость        = Ложь;
		Элементы.ОписаниеПредоставленияСкидки.Видимость = Истина;
		Элементы.ГруппаОкругление.Видимость             = Истина;
		
	КонецЕсли;
	
	Элементы.ДекорацияЕдиниц.Видимость = Объект.СпособПредоставления = Перечисления.СпособыПредоставленияСкидокНаценок.Количество;
	Элементы.ДекорацияЕдиниц1.Видимость = Объект.СпособПредоставления = Перечисления.СпособыПредоставленияСкидокНаценок.Количество;
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ЕстьУсловиеКартаЛояльностиНеЗарегистрирована(МассивУсловий, ВидКартыЛояльности)
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	Условия.Ссылка
	|ИЗ
	|	Справочник.УсловияПредоставленияСкидокНаценок КАК Условия
	|ГДЕ
	|	Условия.УсловиеПредоставления = ЗНАЧЕНИЕ(
	|		Перечисление.УсловияПредоставленияСкидокНаценок.КартаЛояльностиНеЗарегистрирована
	|	)
	|	И Условия.Ссылка В(&МассивУсловий)
	|	И Условия.ВидКартыЛояльности = &ВидКартыЛояльности");
	
	Запрос.УстановитьПараметр("МассивУсловий",      МассивУсловий);
	Запрос.УстановитьПараметр("ВидКартыЛояльности", ВидКартыЛояльности);
	
	Результат = Запрос.Выполнить();
	
	Возврат Не Результат.Пустой();
	
КонецФункции

&НаСервере
Процедура ДобавитьУсловиеКартаЛояльностиНеЗарегистрирована(ВидКартыЛояльности)
	
	УстановитьПривилегированныйРежим(Истина);
	Условие = Неопределено;
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	Условия.Ссылка
	|ИЗ
	|	Справочник.УсловияПредоставленияСкидокНаценок КАК Условия
	|ГДЕ
	|	Условия.УсловиеПредоставления = ЗНАЧЕНИЕ(
	|		Перечисление.УсловияПредоставленияСкидокНаценок.КартаЛояльностиНеЗарегистрирована
	|	)
	|	И Условия.ВидКартыЛояльности = &ВидКартыЛояльности");
	
	Запрос.УстановитьПараметр("МассивСсылок", Объект.УсловияПредоставления.Выгрузить().ВыгрузитьКолонку("УсловиеПредоставления"));
	Запрос.УстановитьПараметр("ВидКартыЛояльности", ВидКартыЛояльности);
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда
		Условие = Выборка.Ссылка;
	Иначе
		НовоеУсловиеОбъект = Справочники.УсловияПредоставленияСкидокНаценок.СоздатьЭлемент();
		НовоеУсловиеОбъект.УсловиеПредоставления = Перечисления.УсловияПредоставленияСкидокНаценок.КартаЛояльностиНеЗарегистрирована;
		НовоеУсловиеОбъект.ВидКартыЛояльности =  ВидКартыЛояльности;
		НовоеУсловиеОбъект.Наименование = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			НСтр("ru = 'Карта лояльности ""%1"" не зарегистрирована'"),
			ВидКартыЛояльности
		);
		НовоеУсловиеОбъект.Записать();
		Условие = НовоеУсловиеОбъект.Ссылка;
	КонецЕсли;
	
	НовоеСтрока = Объект.УсловияПредоставления.Добавить();
	НовоеСтрока.УсловиеПредоставления = Условие;
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Функция СписокВыбора(Форма)
	
	СписокВыбора = Новый СписокЗначений;
	СписокВыбора.Добавить(ПредопределенноеЗначение("Перечисление.СпособыПредоставленияСкидокНаценок.Процент"));
	СписокВыбора.Добавить(ПредопределенноеЗначение("Перечисление.СпособыПредоставленияСкидокНаценок.Сумма"));
	СписокВыбора.Добавить(ПредопределенноеЗначение("Перечисление.СпособыПредоставленияСкидокНаценок.СуммаДляКаждойСтроки"));
	СписокВыбора.Добавить(ПредопределенноеЗначение("Перечисление.СпособыПредоставленияСкидокНаценок.Количество"));
	СписокВыбора.Добавить(ПредопределенноеЗначение("Перечисление.СпособыПредоставленияСкидокНаценок.Подарок"));
	СписокВыбора.Добавить(ПредопределенноеЗначение("Перечисление.СпособыПредоставленияСкидокНаценок.ВидЦены"));
	СписокВыбора.Добавить(ПредопределенноеЗначение("Перечисление.СпособыПредоставленияСкидокНаценок.Сообщение"));
	Если Форма.ИспользоватьКартыЛояльности Тогда
		СписокВыбора.Добавить(ПредопределенноеЗначение("Перечисление.СпособыПредоставленияСкидокНаценок.КартаЛояльности"));
	КонецЕсли;
	
	Возврат СписокВыбора;
	
КонецФункции

&НаКлиентеНаСервереБезКонтекста
Процедура ЗаполнитьСписокВыбора(Форма)
	
	СписокВыбора = СписокВыбора(Форма);
	
	Форма.Элементы.СпособПредоставления.СписокВыбора.Очистить();
	Для каждого ЭлементСписка Из СписокВыбора Цикл
		Форма.Элементы.СпособПредоставления.СписокВыбора.Добавить(ЭлементСписка.Значение, ЭлементСписка.Представление);
	КонецЦикла;
	
КонецПроцедуры
