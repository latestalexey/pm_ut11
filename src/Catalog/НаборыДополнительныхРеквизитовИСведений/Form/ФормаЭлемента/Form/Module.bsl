
////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("АвтоТест") Тогда // Возврат при получении формы для анализа.
		Возврат;
	КонецЕсли;
	
	// Раздельная настройка дополнительных реквизитов и дополнительных сведений.
	Элементы.ДополнительныеРеквизитыЗаполнятьОбязательно.Подсказка =
		Метаданные.Справочники.НаборыДополнительныхРеквизитовИСведений.ТабличныеЧасти
			.ДополнительныеРеквизиты.Реквизиты.ЗаполнятьОбязательно.Подсказка;
	
	Элементы.Наименование.ТолькоПросмотр = Истина;
	
	Если НЕ ЗначениеЗаполнено(Объект.Ссылка) Тогда
		ЗаполнитьИспользованиеДополнительныхСвойств();
		ЗаполнитьДополнительныеСвойстваВФорме();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	// При записи свойства необходимо перенести свойство в соответствующую группу.
	Если ИмяСобытия = "Запись_ДополнительныеРеквизитыИСведения" Тогда
		ПроверитьСоставыТаблицПослеЗаписиСвойства(Параметр.ЭтоДополнительноеСведение, Источник);
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
	ЗаполнитьИспользованиеДополнительныхСвойств();
	ЗаполнитьДополнительныеСвойстваВФорме();
	
КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект)
	
	ЗаполнитьДополнительныеСвойстваВОбъекте(ТекущийОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	
	Оповестить("Запись_НаборыДополнительныхРеквизитовИСведений", Объект.Ссылка, Объект.Ссылка);
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ТАБЛИЦЫ ФОРМЫ ДополнительныеРеквизиты

&НаКлиенте
Процедура ДополнительныеРеквизитыВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	Если Прав(Поле.Имя, СтрДлина("Свойство")) = "Свойство" Тогда
		ТаблицаВыбор(Элемент, ВыбраннаяСтрока, СтандартнаяОбработка);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ДополнительныеРеквизитыПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа)
	
	Отказ = Истина;
	
КонецПроцедуры

&НаКлиенте
Процедура ДополнительныеРеквизитыПередУдалением(Элемент, Отказ)
	
	ДополнительныеСвойстваПередУдалением(Элемент, ДополнительныеРеквизиты);
	
КонецПроцедуры

&НаКлиенте
Процедура ДополнительныеРеквизитыОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	ОбработкаВыбораСвойства(ВыбранноеЗначение, ДополнительныеРеквизиты);
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ТАБЛИЦЫ ФОРМЫ ДополнительныеСведения

&НаКлиенте
Процедура ДополнительныеСведенияПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа)
	
	Отказ = Истина;
	
КонецПроцедуры

&НаКлиенте
Процедура ДополнительныеСведенияПередУдалением(Элемент, Отказ)
	
	ДополнительныеСвойстваПередУдалением(Элемент, ДополнительныеСведения);
	
КонецПроцедуры

&НаКлиенте
Процедура ДополнительныеСведенияВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	ТаблицаВыбор(Элемент, ВыбраннаяСтрока, СтандартнаяОбработка);
	
КонецПроцедуры

&НаКлиенте
Процедура ДополнительныеСведенияОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	ОбработкаВыбораСвойства(ВыбранноеЗначение, ДополнительныеСведения);
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ КОМАНД ФОРМЫ

&НаКлиенте
Процедура ПодборДопРеквизитов(Команда)
	
	ПодобратьДополнительныеСвойства(Ложь);
	
КонецПроцедуры

&НаКлиенте
Процедура ПодборДопСведений(Команда)
	
	ПодобратьДополнительныеСвойства(Истина);
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

Процедура ЗаполнитьИспользованиеДополнительныхСвойств()
	
	ВидыСвойствНабора = УправлениеСвойствамиСлужебный.ВидыСвойствНабора(Объект.Ссылка);
	ИспользоватьДопРеквизиты = ВидыСвойствНабора.ДополнительныеРеквизиты;
	ИспользоватьДопСведения  = ВидыСвойствНабора.ДополнительныеСведения;
	
	Если Параметры.СкрытьДополнительныеРеквизиты Тогда
		ИспользоватьДопРеквизиты = Ложь;
	КонецЕсли;
	
	Если Параметры.СкрытьДополнительныеСведения Тогда
		ИспользоватьДопСведения = Ложь;
	КонецЕсли;
	
	Если НЕ ИспользоватьДопРеквизиты И НЕ ИспользоватьДопСведения Тогда
		
		Если Параметры.СкрытьДополнительныеРеквизиты Тогда
			ВызватьИсключение НСтр("ru = 'Использование дополнительных сведений не определено.'");
			
		ИначеЕсли Параметры.СкрытьДополнительныеСведения Тогда
			ВызватьИсключение НСтр("ru = 'Использование дополнительных реквизитов не определено.'");
		Иначе
			ВызватьИсключение НСтр("ru = 'Использование дополнительных реквизитов и
			                             |дополнительных сведений не определено.'");
		КонецЕсли;
	КонецЕсли;
	
	Если НЕ ИспользоватьДопРеквизиты Тогда
		Элементы.ДополнительныеРеквизиты.Видимость = Ложь;
		Элементы.ДополнительныеСведения.ПоложениеЗаголовка = ПоложениеЗаголовкаЭлементаФормы.Нет;
		
	ИначеЕсли НЕ ИспользоватьДопСведения Тогда
		Элементы.ДополнительныеСведения.Видимость = Ложь;
		Элементы.ДополнительныеРеквизиты.ПоложениеЗаголовка = ПоложениеЗаголовкаЭлементаФормы.Нет;
	КонецЕсли;
	
	Если ИспользоватьДопРеквизиты И ИспользоватьДопСведения Тогда
		Заголовок = Объект.Наименование + " " + НСтр("ru = '(Набор дополнительных реквизитов и сведений)'")
	ИначеЕсли ИспользоватьДопРеквизиты Тогда
		Заголовок = Объект.Наименование + " " + НСтр("ru = '(Набор дополнительных реквизитов)'")
	ИначеЕсли ИспользоватьДопСведения Тогда
		Заголовок = Объект.Наименование + " " + НСтр("ru = '(Набор дополнительных сведений)'")
	КонецЕсли;
	
КонецПроцедуры

Процедура ЗаполнитьДополнительныеСвойстваВФорме()
	
	ДополнительныеРеквизиты.Очистить();
	ДополнительныеСведения.Очистить();
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ДополнительныеРеквизитыИСведения.Ссылка,
	|	ДополнительныеРеквизитыИСведения.ЭтоДополнительноеСведение
	|ИЗ
	|	ПланВидовХарактеристик.ДополнительныеРеквизитыИСведения КАК ДополнительныеРеквизитыИСведения";
	
	НачатьТранзакцию();
	Попытка
		ВсеСвойства = Запрос.Выполнить().Выгрузить();
		
		ЗафиксироватьТранзакцию();
	Исключение
		ОтменитьТранзакцию();
		ВызватьИсключение;
	КонецПопытки;
	
	ВсеСвойства.Индексы.Добавить("Ссылка");
	
	Если ИспользоватьДопРеквизиты Тогда
		Для Каждого Строка Из Объект.ДополнительныеРеквизиты Цикл
			Свойство = ВсеСвойства.Найти(Строка.Свойство, "Ссылка");
			Если Свойство = Неопределено Тогда
				Продолжить;
			КонецЕсли;
			Если НЕ Свойство.ЭтоДополнительноеСведение Тогда
				НоваяСтрока = ДополнительныеРеквизиты.Добавить();
				НоваяСтрока.Свойство             = Строка.Свойство;
				НоваяСтрока.ЗаполнятьОбязательно =
					?(Строка.ЗаполнятьОбязательно = 0,
					  "",
					  ?(Строка.ЗаполнятьОбязательно = 1, "Да", "Нет"));
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
	Если ИспользоватьДопСведения Тогда
		Для Каждого Строка Из Объект.ДополнительныеСведения Цикл
			Свойство = ВсеСвойства.Найти(Строка.Свойство, "Ссылка");
			Если Свойство = Неопределено Тогда
				Продолжить;
			КонецЕсли;
			Если Свойство.ЭтоДополнительноеСведение Тогда
				НоваяСтрока = ДополнительныеСведения.Добавить();
				НоваяСтрока.Свойство = Строка.Свойство;
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
КонецПроцедуры

Процедура ЗаполнитьДополнительныеСвойстваВОбъекте(ТекущийОбъект)
	
	ТекущийОбъект.ДополнительныеРеквизиты.Очистить();
	ТекущийОбъект.ДополнительныеСведения.Очистить();
	
	Если ИспользоватьДопРеквизиты Тогда
		Для Каждого Строка Из ДополнительныеРеквизиты Цикл
			НоваяСтрока = ТекущийОбъект.ДополнительныеРеквизиты.Добавить();
			НоваяСтрока.Свойство = Строка.Свойство;
			НоваяСтрока.ЗаполнятьОбязательно = 
				?(Строка.ЗаполнятьОбязательно = "",
				  0,
				  ?(Строка.ЗаполнятьОбязательно = "Да", 1, 2));
		КонецЦикла;
	КонецЕсли;
	
	Если ИспользоватьДопСведения Тогда
		Для каждого Строка Из ДополнительныеСведения Цикл
			НоваяСтрока = ТекущийОбъект.ДополнительныеСведения.Добавить();
			НоваяСтрока.Свойство = Строка.Свойство;
		КонецЦикла;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ДополнительныеСвойстваПередУдалением(Элемент, ТаблицаСвойств)
	
	Для каждого ВыделеннаяСтрока Из Элемент.ВыделенныеСтроки Цикл
		
		Свойство = Элемент.ДанныеСтроки(ВыделеннаяСтрока).Свойство;
		
		Строки = ТаблицаСвойств.НайтиСтроки(Новый Структура("Свойство", Свойство));
		ТаблицаСвойств.Удалить(Строки[0]);
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура ПодобратьДополнительныеСвойства(ЭтоДополнительноеСведение)
	
	Отбор = Новый Структура("ЭтоДополнительноеСведение", ЭтоДополнительноеСведение);
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("Отбор", Отбор);
	ПараметрыФормы.Вставить("ЗакрыватьПриВыборе", Ложь);
	
	ВыбранныеСвойства = Новый Массив;
	
	Если ЭтоДополнительноеСведение Тогда
		Для Каждого Строка Из ДополнительныеСведения Цикл
			ВыбранныеСвойства.Добавить(Строка.Свойство);
		КонецЦикла;
		ВладелецФормы = Элементы.ДополнительныеСведения;
	Иначе
		Для Каждого Строка Из ДополнительныеРеквизиты Цикл
			ВыбранныеСвойства.Добавить(Строка.Свойство);
		КонецЦикла;
		ВладелецФормы = Элементы.ДополнительныеРеквизиты;
	КонецЕсли;
	
	ПараметрыФормы.Вставить("ВыбранныеЗначения", ВыбранныеСвойства);
	
	ОткрытьФорму("ПланВидовХарактеристик.ДополнительныеРеквизитыИСведения.ФормаВыбора",
	             ПараметрыФормы,
	             ВладелецФормы,
	             Объект.Ссылка);
	
КонецПроцедуры

&НаКлиенте
Процедура ПроверитьСоставыТаблицПослеЗаписиСвойства(Знач ЭтоДополнительноеСведение, Знач Свойство)
	
	// Определение из какой таблицы в какую может потребоваться переносить свойство.
	Если ЭтоДополнительноеСведение Тогда
		ТаблицаПриемник = ДополнительныеСведения;
		ТаблицаИсточник = ДополнительныеРеквизиты;
	Иначе
		ТаблицаПриемник = ДополнительныеРеквизиты;
		ТаблицаИсточник = ДополнительныеСведения;
	КонецЕсли;
	
	// Проверка входит ли свойство в таблицу, из которой нужно переносить.
	Строки = ТаблицаИсточник.НайтиСтроки(Новый Структура("Свойство", Свойство));
	Если Строки.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	// Удаление из одной таблицы.
	Индекс = ТаблицаИсточник.Индекс(Строки[0]);
	ТаблицаИсточник.Удалить(Индекс);
	
	// Добавление в другую таблицу.
	НоваяСтрока = ТаблицаПриемник.Добавить();
	НоваяСтрока.Свойство = Свойство;
	
КонецПроцедуры

&НаКлиенте
Процедура ТаблицаВыбор(Элемент, ВыбраннаяСтрока, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("Ключ", Элемент.ДанныеСтроки(ВыбраннаяСтрока).Свойство);
	
	ОткрытьФорму(
		"ПланВидовХарактеристик.ДополнительныеРеквизитыИСведения.Форма.ФормаЭлемента",
		ПараметрыФормы);
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаВыбораСвойства(ВыбранноеЗначение, Таблица)
	
	Если ТипЗнч(ВыбранноеЗначение) = Тип("Массив") Тогда
		
		Для каждого Значение Из ВыбранноеЗначение Цикл
			ДобавитьВыбранноеСвойство(Значение, Таблица);
		КонецЦикла;
	Иначе
		ДобавитьВыбранноеСвойство(ВыбранноеЗначение, Таблица);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ДобавитьВыбранноеСвойство(Значение, Таблица)
	
	Если ТипЗнч(Значение) = Тип("ПланВидовХарактеристикСсылка.ДополнительныеРеквизитыИСведения") Тогда
		
		Отбор = Новый Структура("Свойство", Значение);
		Если Таблица.НайтиСтроки(Отбор).Количество() = 0 Тогда
			
			Таблица.Добавить().Свойство = Значение;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры
