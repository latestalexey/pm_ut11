
///////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
		
	Если Параметры.Свойство("ТипГрафика") Тогда
		ТипГрафика = Параметры.ТипГрафика;
		ИнициализироватьПараметрыЗагрузки();
	КонецЕсли;
	
	Если Параметры.Свойство("ВариантГрафика") Тогда
		ВариантГрафика = Параметры.ВариантГрафика;
	КонецЕсли;
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ КОМАНД ФОРМЫ

&НаКлиенте
Процедура ЗаписатьГрафик(Команда)
	
	Если НЕ МожноЗагружать(ВариантГрафика, ТипГрафика) Тогда
		Возврат;
	КонецЕсли;
	
	Если ЗагрузитьГрафикСервер() Тогда
		Закрыть();
	КонецЕсли;
	Текст = НСтр("ru = 'Загрузка окончена'");
	ПоказатьОповещениеПользователя(Текст,,,БиблиотекаКартинок.Информация32);
	
КонецПроцедуры

&НаКлиенте
Процедура ЗакрытьФорму(Команда)
	
	Закрыть();
	
КонецПроцедуры

///////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

///////////////////////////////////////////////////////////////////////////////
// Прочее

&НаКлиенте
Функция МожноЗагружать(ВариантГрафика, ТипГрафика)
	
	Результат = Истина;
	Если ЕстьСтрокиГрафика(ВариантГрафика, ТипГрафика) Тогда
		
		Ответ = Вопрос(НСтр("ru = 'Данный вид графика уже заполнен для текущего варианта."
							+Символы.ПС+"Перед загрузкой он будет удален."
							+Символы.ПС+"Продолжить?'"),
						РежимДиалогаВопрос.ДаНет,,
						КодВозвратаДиалога.Да);
						
		Если Ответ <> КодВозвратаДиалога.Да Тогда
			Результат = Ложь;
		КонецЕсли;
		
	КонецЕсли;
	
	Возврат Результат;
	
КонецФункции

&НаСервереБезКонтекста
Функция ЕстьСтрокиГрафика(ВариантГрафика, ТипГрафика)
	
	Возврат Справочники.ВариантыГрафиковКредитовИДепозитов.ЕстьГрафик(ВариантГрафика,ТипГрафика);
	
КонецФункции

&НаСервере
Процедура СообщитьОбОшибкеПреобразования(НомерСтроки, ИмяКолонки, СтроковоеЗначение)	
	
	ШаблонТекста = НСтр("ru='Строка №%1 колонка ""%2"" - ошибка преобразования значения ""%3""
						|Строка не загружена!'");
	Текст = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ШаблонТекста, НомерСтроки, ИмяКолонки, СтроковоеЗначение);
	ОбщегоНазначенияКлиентСервер.СообщитьПользователю(Текст);
	
КонецПроцедуры

&НаСервере
Функция ТекстВДату(Знач СтроковоеЗначение, НомерСтроки, ИмяКолонки, Разделитель = ".")
	
	Цифры = СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивПодстрок(СтроковоеЗначение,Разделитель);
	Попытка
		Результат = ?(СтрДлина(Цифры[2]) = 2, "20"+Цифры[2], Цифры[2]) 
					+ Формат(Цифры[1], "ЧЦ=2; ЧВН=;") 
					+ Формат(Цифры[0], "ЧЦ=2; ЧВН=;");
		Результат = Дата(Результат);
	Исключение
		СообщитьОбОшибкеПреобразования(НомерСтроки, ИмяКолонки, СтроковоеЗначение);
	КонецПопытки;
	Возврат Результат;
	
КонецФункции

&НаСервере
Функция ТекстВЧисло(СтроковоеЗначение, НомерСтроки, ИмяКолонки)
	
	Если ПустаяСтрока(СтроковоеЗначение) ИЛИ СтроковоеЗначение = Неопределено Тогда
		Возврат 0;
	КонецЕсли;
	
	Попытка
		Результат = Число(СтрЗаменить(СтроковоеЗначение," ",""));
	Исключение				
		СообщитьОбОшибкеПреобразования(НомерСтроки, ИмяКолонки, СтроковоеЗначение);
	КонецПопытки;
	Возврат Результат;
	
КонецФункции

&НаСервере
Функция ЗагрузитьГрафикСервер()
	
	НомерСтроки = 2;
	СтроковыйНомер = Формат(НомерСтроки, "ЧН=0; ЧГ=0");
	ПоляЗагрузки = ПараметрыЗагрузки.Поля;
	ЗаполненаДата = ЗначениеЗаполнено(ТабличныйДокумент.Область("R" + СтроковыйНомер + ПоляЗагрузки.Период).Текст);
	ЗагруженоБезОшибок = Истина;
	
	//подготовим набор записей
	ЗаписиГрафика = РегистрыСведений[ПараметрыЗагрузки.ИмяРегистра].СоздатьНаборЗаписей();
	ЗаписиГрафика.Отбор.ВариантГрафика.Установить(ВариантГрафика);
	ЗаписиГрафика.Очистить();
		
	Пока ЗаполненаДата Цикл
		
		ДанныеСтроки = Неопределено;
		Попытка
			//прочитаем данные строки графика
			ДанныеСтроки = Новый Структура("ВариантГрафика",ВариантГрафика);
			Для Каждого Поле Из ПоляЗагрузки Цикл
				
				ТекстЗначения = ТабличныйДокумент.Область("R" + СтроковыйНомер + Поле.Значение).Текст;
				Если Поле.Ключ = "Период" Тогда
					ЗначениеПоля = ТекстВДату(ТекстЗначения, СтроковыйНомер, Поле.Ключ);
				Иначе
					ЗначениеПоля = ТекстВЧисло(ТекстЗначения, СтроковыйНомер, Поле.Ключ);
				КонецЕсли;
				ДанныеСтроки.Вставить(Поле.Ключ,ЗначениеПоля);
				
			КонецЦикла;//по колонкам таблицы загрузки
			
		Исключение
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(КраткоеПредставлениеОшибки(ИнформацияОбОшибке()));
		КонецПопытки;
		
		Если ЗначениеЗаполнено(ДанныеСтроки) Тогда
			//проверим все что прочитали
			ВсеПоляЗаполнены = ЗначениеЗаполнено(ДанныеСтроки.Период);
			Если ВсеПоляЗаполнены Тогда
				СуммаПолей = 0;
				Для Каждого Поле Из ПараметрыЗагрузки.ПоляКонтроля Цикл
					СуммаПолей = СуммаПолей + ДанныеСтроки[Поле];
				КонецЦикла;//по контрольным полям
				Если СуммаПолей = 0 Тогда
					ВсеПоляЗаполнены = Ложь;
					ЗагруженоБезОшибок = Ложь;
					ШаблонТекста = НСтр("ru='В строке №%1 нет заполненных колонок сумм.
										|Строка не загружена!'");
					Текст = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ШаблонТекста, СтроковыйНомер);
					ОбщегоНазначенияКлиентСервер.СообщитьПользователю(Текст);
				КонецЕсли;
			КонецЕсли;
			
			//запишем прочитанное
			Если ВсеПоляЗаполнены Тогда
				НоваяЗапись = ЗаписиГрафика.Добавить();
				ЗаполнитьЗначенияСвойств(НоваяЗапись,ДанныеСтроки);
			КонецЕсли;
			
		КонецЕсли;
		
		НомерСтроки = НомерСтроки + 1;
		СтроковыйНомер = Формат(НомерСтроки, "ЧН=0; ЧГ=0");
		
		Попытка
			ЗаполненаДата = ЗначениеЗаполнено(ТабличныйДокумент.Область("R" + СтроковыйНомер + ПоляЗагрузки.Период).Текст);
		Исключение
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(КраткоеПредставлениеОшибки(ИнформацияОбОшибке()));
		КонецПопытки;
		
	КонецЦикла;//по строкам таблицы загрузки
	//запишем набор записей
	ЗаписиГрафика.Записать();
	Возврат ЗагруженоБезОшибок;
	
КонецФункции

&НаСервере
Процедура ИнициализироватьПараметрыЗагрузки()
	
	ПараметрыЗагрузки = Новый Структура;
	ПоляЗагрузки = Новый Структура("Период","C1");	
	Если ТипГрафика = "Начисления" Тогда
		
		ЭтаФорма.Заголовок = НСтр("ru = 'Загрузка графика начислений'");
		
		ПоляЗагрузки.Вставить("Проценты","C2");
		ПоляЗагрузки.Вставить("Комиссия","C3");
		
		МассивПолей = Новый Массив;
		МассивПолей.Добавить("Проценты");
		МассивПолей.Добавить("Комиссия");
		
		ПараметрыЗагрузки.Вставить("ПоляКонтроля",МассивПолей);
		ПараметрыЗагрузки.Вставить("ИмяРегистра","ГрафикНачисленийКредитовИДепозитов");
		
	ИначеЕсли ТипГрафика = "Оплаты" Тогда
		
		ЭтаФорма.Заголовок = НСтр("ru = 'Загрузка графика оплат'");
		ПоляЗагрузки.Вставить("Сумма","C2");
		ПоляЗагрузки.Вставить("Проценты","C3");
		ПоляЗагрузки.Вставить("Комиссия","C4");
		
		МассивПолей = Новый Массив;
		МассивПолей.Добавить("Сумма");
		МассивПолей.Добавить("Проценты");
		МассивПолей.Добавить("Комиссия");
		
		ПараметрыЗагрузки.Вставить("ПоляКонтроля",МассивПолей);
		ПараметрыЗагрузки.Вставить("ИмяРегистра","ГрафикОплатКредитовИДепозитов");
		
	ИначеЕсли ТипГрафика = "Транши" Тогда
		
		ЭтаФорма.Заголовок = НСтр("ru = 'Загрузка графика траншей'");
		ПоляЗагрузки.Вставить("Сумма","C2");
		
		МассивПолей = Новый Массив;
		МассивПолей.Добавить("Сумма");
		
		ПараметрыЗагрузки.Вставить("ПоляКонтроля",МассивПолей);
		ПараметрыЗагрузки.Вставить("ИмяРегистра","ГрафикТраншейКредитовИДепозитов");		
		
	КонецЕсли;
	
	ПараметрыЗагрузки.Вставить("Поля",ПоляЗагрузки);
	
	//инициализируем табличный документ
	МакетШаблона = Справочники.ВариантыГрафиковКредитовИДепозитов.ПолучитьМакет("МакетЗагрузкиГрафиков");
	ТабличныйДокумент.Очистить();
	ОбластьКолонки = МакетШаблона.ПолучитьОбласть(ТипГрафика);
	ТабличныйДокумент.Присоединить(ОбластьКолонки);
	ТабличныйДокумент.ФиксацияСверху = 1;
		
КонецПроцедуры



