////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ОБЩЕГО НАЗНАЧЕНИЯ

&НаСервере
Процедура ЗаполнитьТабличнуюЧастьПоВидамДокументов()
	
	Для Каждого ЗначениеПеречисления Из Перечисления.ВидыЭД Цикл
		Если ЗначениеПеречисления = Перечисления.ВидыЭД.ПроизвольныйЭД
			ИЛИ ЗначениеПеречисления = Перечисления.ВидыЭД.Ошибка
			ИЛИ ЗначениеПеречисления = Перечисления.ВидыЭД.Подтверждение
			ИЛИ ЗначениеПеречисления = Перечисления.ВидыЭД.ДопДанные
			ИЛИ ЗначениеПеречисления = Перечисления.ВидыЭД.ВыпискаБанка Тогда
			Продолжить;
		КонецЕсли;
		
		МассивСтрок = Объект.ВидыДокументов.НайтиСтроки(Новый Структура("ВидДокумента",ЗначениеПеречисления));
		Если МассивСтрок.Количество()=0 Тогда
			НоваяСтрокаТЧ = Объект.ВидыДокументов.Добавить();
			НоваяСтрокаТЧ.ВидДокумента = ЗначениеПеречисления;
			НоваяСтрокаТЧ.ИспользоватьДляПодписи = Ложь;
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ОпределитьДоступностьСоставаИсполнителей()
	
	Элементы.СоставИсполнителей.Доступность = Объект.ПроверятьСоставИсполнителей;
	
КонецПроцедуры

&НаКлиенте
Процедура КомандаВыбратьПользователя(Команда)
	
	ВыбратьПользователя();
	
КонецПроцедуры

&НаСервере
Процедура УстановитьДоступностьВидимость()
	
	Элементы.ГруппаШапка.Доступность 				= НЕ Объект.Отозван;
	Элементы.ВидыДокументовИИсполнители.Доступность = НЕ Объект.Отозван;
	Элементы.ФормаТестСертификата.Доступность 		= НЕ Объект.Отозван;
	Элементы.ФормаКнопкаОтозван.Пометка 			= Объект.Отозван;
	Элементы.КнопкаПользователь.Доступность			= Объект.ОграничитьДоступКСертификату;
	Элементы.КнопкаПароль.Доступность				= Объект.ЗапомнитьПарольКСертификату;
	ОпределитьДоступностьСоставаИсполнителей();
	ЗаполнитьЗаголовкиГиперссылок();
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьЗаголовкиГиперссылок()
	
	Если НЕ Объект.ОграничитьДоступКСертификату Тогда
		ТекстГиперссылкиПользователя = "Доступен всем пользователям.";
	Иначе
		ТекстГиперссылкиПользователя = "Доступен пользователю: " + ?(ЗначениеЗаполнено(Объект.Пользователь),
			Объект.Пользователь, "<Выбрать пользователя>");
	КонецЕсли;
	
	Если НЕ Объект.ЗапомнитьПарольКСертификату Тогда
		ТекстГиперссылкиПароля = "Пароль не сохранен.";
	Иначе
		ТекстГиперссылкиПароля = "Изменить пароль.";
	КонецЕсли;
	
	Элементы.КнопкаПользователь.Заголовок = НСтр("ru = '" + ТекстГиперссылкиПользователя + "'");
	Элементы.КнопкаПароль.Заголовок 	  = НСтр("ru = '" + ТекстГиперссылкиПароля + "'");
	
КонецПроцедуры

&НаКлиенте
Функция УстановитьПароль()
	
	ПараметрыФормы = Новый Структура("Заголовок, ПредставлениеСертификата", 
	НСтр("ru = 'Введите пароль для ЭЦП'"), Объект.Ссылка);
	КодВозврата = ОткрытьФормуМодально("ОбщаяФорма.ЗапросПароляНаЭЦПШифрование", ПараметрыФормы);
	ПарольУстановлен = Ложь;
	Если ТипЗнч(КодВозврата) = Тип("Строка") Тогда
		Если КодВозврата = "" Тогда
			Ответ = Вопрос(НСтр("ru = 'Задан пустой пароль. Сохранить его?'"), РежимДиалогаВопрос.ДаНетОтмена, 30, КодВозвратаДиалога.Да);
			Если Ответ = КодВозвратаДиалога.Да Тогда
				Объект.ПарольПользователя = "";
				ПарольУстановлен = Истина;
				Модифицированность = Истина;
			КонецЕсли;
		Иначе
			Объект.ПарольПользователя = КодВозврата;
			ПарольУстановлен = Истина;
			Модифицированность = Истина;
		КонецЕсли;
	КонецЕсли;
	
	УстановитьДоступностьВидимость();
	
	Возврат ПарольУстановлен;
	
КонецФункции

&НаКлиенте
Процедура ВыбратьПользователя()
	
	ЭлектронныеДокументыКлиентПереопределяемый.ОткрытьФормуВыбораПользователей(ЭтаФорма, Объект.Пользователь);
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ДЕЙСТВИЯ КОМАНД ФОРМЫ

&НаКлиенте
Процедура ВыделитьВсе(Команда)
	
	Для Каждого ЭлементТаблицы Из Объект.ВидыДокументов Цикл
		ЭлементТаблицы.ИспользоватьДляПодписи = Истина;
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура СнятьВсе(Команда)
	
	Для Каждого ЭлементТаблицы Из Объект.ВидыДокументов Цикл
		ЭлементТаблицы.ИспользоватьДляПодписи = Ложь;
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура СертификатОтозван(Команда)
	
	Объект.Отозван = НЕ Объект.Отозван;
	УстановитьДоступностьВидимость();
	
КонецПроцедуры

&НаКлиенте
Процедура ОграничитьДоступКСертификатуПриИзменении(Элемент)
	
	Если НЕ Объект.ОграничитьДоступКСертификату И ЗначениеЗаполнено(Объект.Пользователь) Тогда
		Объект.Пользователь = Неопределено;
	ИначеЕсли Объект.ОграничитьДоступКСертификату Тогда
		ВыбратьПользователя();
	КонецЕсли;
	
	УстановитьДоступностьВидимость();
	
КонецПроцедуры

&НаКлиенте
Процедура СохранитьПарольКСертификатуПриИзменении(Элемент)

	Если НЕ Объект.ЗапомнитьПарольКСертификату Тогда
		Объект.ПарольПользователя = Неопределено;
	Иначе
		Объект.ЗапомнитьПарольКСертификату = УстановитьПароль();
	КонецЕсли;
	
	УстановитьДоступностьВидимость();
	
КонецПроцедуры

&НаКлиенте
Процедура КомандаУстановитьПароль(Команда)
	
	УстановитьПароль();
	
КонецПроцедуры

&НаКлиенте
Процедура ТестНастроекСертификата(Команда)
	
	ОчиститьСообщения();
	
	Если ЭтаФорма.Модифицированность Тогда
		ТекстВопроса = "Изменены настройки сертификата. Продолжить выполнение теста?";
		СписокКнопок = Новый СписокЗначений();
		СписокКнопок.Добавить("Выполнить", "Сохранить и выполнить тест");
		СписокКнопок.Добавить("Отменить", "Отменить тест");
		Ответ = Вопрос(ТекстВопроса, СписокКнопок, , "Выполнить", "Тест настроек сертификата");
		Если Ответ = "Отменить" Тогда
			Возврат;
		Иначе
			Записать();
		КонецЕсли;
	КонецЕсли;
	
	Если ЭлектронныеДокументыСлужебныйВызовСервера.ВыполнятьКриптооперацииНаСервере() Тогда
		Контекст = ПредопределенноеЗначение("Перечисление.КонтекстыРаботыСЭД.НаСервере");
	Иначе
		Контекст = ПредопределенноеЗначение("Перечисление.КонтекстыРаботыСЭД.НаКлиенте");
	КонецЕсли;
	
	ЭлектронныеДокументыСлужебныйКлиент.ТестНастроекСертификата(Объект.Ссылка, Контекст);
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ ПОЛЕЙ ФОРМЫ

&НаКлиенте
Процедура НазначениеОткрытие(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	Попытка
		ЭлектроннаяЦифроваяПодписьКлиент.ОткрытьСертификат(Объект.Отпечаток);
	Исключение
		Предупреждение(НСтр("ru = 'Невозможно открыть сертификат. Возможно он не установлен на локальный компьютер.'"));
	КонецПопытки;
	
КонецПроцедуры

&НаКлиенте
Процедура ПроверятьСоставИсполнителейПриИзменении(Элемент)
	
	ОпределитьДоступностьСоставаИсполнителей();
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ЗаполнитьТабличнуюЧастьПоВидамДокументов();
	ОпределитьДоступностьСоставаИсполнителей();
	
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
	УстановитьДоступностьВидимость();
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗаписью(Отказ, ПараметрыЗаписи)
	
	Если Объект.ОграничитьДоступКСертификату И НЕ ЗначениеЗаполнено(Объект.Пользователь) Тогда
		Отказ = Истина;
		Предупреждение(НСтр("ru = 'Не указан пользователь, которому доступен сертификат!
		|Укажите пользователя, либо снимите ограничение доступа.'"));
	КонецЕсли;
		
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаВыбора(ВыбранноеЗначение, ИсточникВыбора)
	
	Если ТипЗнч(ВыбранноеЗначение) = Тип("СправочникСсылка.Пользователи") Тогда
		Объект.Пользователь = ВыбранноеЗначение;
		ЗаполнитьЗаголовкиГиперссылок();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	
	Оповестить("ОбновитьСостояниеЭД", Объект.Ссылка);
	
КонецПроцедуры
