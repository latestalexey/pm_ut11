
///////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	УстановитьПараметрыДинамическогоСписка();
	
КонецПроцедуры

///////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ ШАПКИ ФОРМЫ

&НаКлиенте
Процедура СписокПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа)
	
	ВыделенныеСтроки = Элементы.СписокСтатейРасходов.ВыделенныеСтроки;
	Если ВыделенныеСтроки.Количество() > 0 Тогда
		СтатьяРасходов = ВыделенныеСтроки[0];
		Если НЕ ЗначениеЗаполнено(СтатьяРасходов) ИЛИ ЭтоГруппаСтатейРасходов(СтатьяРасходов) Тогда
			Отказ = Истина;
		КонецЕсли; 
	Иначе
		Отказ = Истина;
	КонецЕсли;
	
	Если Отказ Тогда
		Предупреждение(НСтр("ru='Команда не может быть выполнена для указанного объекта!'"));
	КонецЕсли; 
	
КонецПроцедуры

&НаКлиенте
Процедура СписокСтатейРасходовПриАктивизацииСтроки(Элемент)
	
	УстановитьПараметрыДинамическогоСписка();
	
КонецПроцедуры

///////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

///////////////////////////////////////////////////////////////////////////////
// Прочее

&НаСервере
Процедура УстановитьПараметрыДинамическогоСписка()
	
	ВыделенныеСтроки = Элементы.СписокСтатейРасходов.ВыделенныеСтроки;
	Если ВыделенныеСтроки.Количество() > 0 Тогда
		СтатьяРасходов = ВыделенныеСтроки[0];
	Иначе
		СтатьяРасходов = ПредопределенноеЗначение("ПланВидовХарактеристик.СтатьиРасходов.ПустаяСсылка");
	КонецЕсли;
	
	ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбора(Список.Отбор, "Владелец", СтатьяРасходов, ВидСравненияКомпоновкиДанных.Равно,, Истина);
	
КонецПроцедуры

&НаСервере
Функция ЭтоГруппаСтатейРасходов(СтатьяРасходов)
	
	Возврат СтатьяРасходов.ЭтоГруппа;
	
КонецФункции
