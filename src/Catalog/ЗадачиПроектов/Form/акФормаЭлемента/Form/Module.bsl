////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	УправлениеДоступностью();
	ОбновитьДопРеквизиты();
	
КонецПроцедуры



&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	ЭтоНовыйОбъект = Не ЗначениеЗаполнено(ТекущийОбъект.Ссылка);
	ПараметрыЗаписи.Вставить("ЭтоНовыйОбъект", ЭтоНовыйОбъект);
	
	Если ЭтоНовыйОбъект ИЛИ НеобходимоПересчитатьКодСДР Тогда
		// получение кода СДР
		ДанныеКода = АК_РаботаСПроектами.ПолучитьКодСДРИНомерЗадачиВУровне(ТекущийОбъект.Владелец, ТекущийОбъект.Родитель);
		ТекущийОбъект.акКодСДР = ДанныеКода.КодСДР;
		ТекущийОбъект.акНомерЗадачиВУровне = ДанныеКода.НомерЗадачиВУровне;
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	МассивИзмененныхЗадач = Новый Массив;
	МассивИзмененныхЗадач.Добавить(ТекущийОбъект.Ссылка);
	
	ПараметрыЗаписи.Вставить("МассивИзмененныхЗадач", МассивИзмененныхЗадач);
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	ПараметрОповещения = Новый Структура;
	ПараметрОповещения.Вставить("Проект", Объект.Владелец);
	ПараметрОповещения.Вставить("Родитель", Объект.Родитель);
	ПараметрОповещения.Вставить("ПроектнаяЗадача", Объект.Ссылка);
	ПараметрОповещения.Вставить("МассивИзмененныхЗадач", ПараметрыЗаписи.МассивИзмененныхЗадач);
	
	Если ПараметрыЗаписи.ЭтоНовыйОбъект Тогда 
		Оповестить("СозданаПроектнаяЗадача", ПараметрОповещения, ЭтаФорма);
	Иначе	
		Оповестить("ИзмененаПроектнаяЗадача", ПараметрОповещения, ЭтаФорма);
	КонецЕсли;	
КонецПроцедуры


////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ ШАПКИ ФОРМЫ

&НаКлиенте
Процедура СтадияПриИзменении(Элемент)
	
	Если Объект.Стадия <> ПредопределенноеЗначение("Перечисление.СтадииЗадач.Проверена") Тогда
	
		Объект.Закрыта = Ложь;
	
	КонецЕсли;
	
	УправлениеДоступностью();
	
КонецПроцедуры

&НаКлиенте
Процедура ВладелецПриИзменении(Элемент)
	НеобходимоПересчитатьКодСДР = ВладелецСтарый <> Объект.Владелец;
	ОбновитьДопРеквизиты();
КонецПроцедуры

&НаКлиенте
Процедура РодительПриИзменении(Элемент)
	НеобходимоПересчитатьКодСДР = РодительСтарый <> Объект.Родитель;
	ОбновитьДопРеквизиты();
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

&НаКлиенте
Процедура УправлениеДоступностью()
	
	Элементы.Закрыта.Доступность = (Объект.Стадия = ПредопределенноеЗначение("Перечисление.СтадииЗадач.Проверена"));
	
КонецПроцедуры

&НаКлиенте
Процедура ПредшественникиПриНачалеРедактирования(Элемент, НоваяСтрока, Копирование)
	ТекущиеДанные = Элементы.Предшественники.ТекущиеДанные;

	Если НоваяСтрока Тогда 
		ТекущиеДанные.ТипЗависимости =
			ПредопределенноеЗначение("Перечисление.ТипыЗависимостейПроектныхЗадач.ОкончаниеНачало");
	КонецЕсли;	
КонецПроцедуры


&НаКлиенте
Процедура ОбновитьДопРеквизиты()
	
	РодительСтарый=Объект.Родитель;
	ВладелецСтарый=Объект.Владелец;
КонецПроцедуры

&НаКлиенте
Процедура ПредшественникиПредшественникАвтоПодбор(Элемент, Текст, ДанныеВыбора, Ожидание, СтандартнаяОбработка)
	Если ЗначениеЗаполнено(Текст) Тогда 
		СтандартнаяОбработка = Ложь;
		ДанныеВыбора = АК_РаботаСПроектами.СформироватьДанныеВыбораЗадачиПроекта(Текст, Объект.Владелец);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ПредшественникиПредшественникОкончаниеВводаТекста(Элемент, Текст, ДанныеВыбора, СтандартнаяОбработка)
	Если ЗначениеЗаполнено(Текст) Тогда 
		СтандартнаяОбработка = Ложь;
		ДанныеВыбора = АК_РаботаСПроектами.СформироватьДанныеВыбораЗадачиПроекта(Текст, Объект.Владелец);
	КонецЕсли;

КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	Если Параметры.Свойство("Предшественник") Тогда 
		НоваяСтрока = Объект.Предшественники.Добавить();
		НоваяСтрока.Предшественник = Параметры.Предшественник;
		НоваяСтрока.ТипЗависимости = Перечисления.ТипыЗависимостейПроектныхЗадач.ОкончаниеНачало;
	КонецЕсли;	
КонецПроцедуры






