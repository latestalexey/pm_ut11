////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	Если Параметры.Свойство("АвтоТест") Тогда // Возврат при получении формы для анализа.
		Возврат;
	КонецЕсли;
	
	КорневаяПодсистема = Справочники.ИдентификаторыОбъектовМетаданных.Подсистемы;
	ДеревоЗначений = ВариантыОтчетовПовтИсп.ПодсистемыТекущегоПользователя();
	ЗначениеВРеквизитФормы(ДеревоЗначений, "ДеревоПодсистем");
	
	ЭтаФорма.ДеревоПодсистемТекущаяСтрока = -1;
	Элементы.ДеревоПодсистем.ТекущаяСтрока = 0;
	Если Параметры.РежимВыбора = Истина Тогда
		РежимРаботыФормы = "Выбор";
		РежимОткрытияОкна = РежимОткрытияОкнаФормы.БлокироватьОкноВладельца;
	ИначеЕсли Параметры.Свойство("РазделСсылка") Тогда
		РежимРаботыФормы = "ВсеОтчетыРаздела";
		МассивОбхода = Новый Массив;
		МассивОбхода.Добавить(ДеревоПодсистем.ПолучитьЭлементы()[0]);
		Пока МассивОбхода.Количество() > 0 Цикл
			СтрокиРодителя = МассивОбхода[0].ПолучитьЭлементы();
			МассивОбхода.Удалить(0);
			Для Каждого СтрокаДерева Из СтрокиРодителя Цикл
				Если СтрокаДерева.Ссылка = Параметры.РазделСсылка Тогда
					Элементы.ДеревоПодсистем.ТекущаяСтрока = СтрокаДерева.ПолучитьИдентификатор();
					МассивОбхода.Очистить();
					Прервать;
				Иначе
					МассивОбхода.Добавить(СтрокаДерева);
				КонецЕсли;
			КонецЦикла;
		КонецЦикла;
	Иначе
		РежимРаботыФормы = "Список";
		Элементы.Изменить.Отображение = ОтображениеКнопки.КартинкаИТекст;
		Элементы.РазместитьВРазделах.ТолькоВоВсехДействиях = Ложь;
	КонецЕсли;
	
	УстановитьСвойствоСпискаПоПараметруФормы("РежимВыбора");
	УстановитьСвойствоСпискаПоПараметруФормы("ВыборГруппИЭлементов");
	УстановитьСвойствоСпискаПоПараметруФормы("МножественныйВыбор");
	УстановитьСвойствоСпискаПоПараметруФормы("ТекущаяСтрока");
	
	Если Параметры.РежимВыбора Тогда
		Элементы.Выбрать.КнопкаПоУмолчанию = Истина;
	Иначе
		Элементы.Выбрать.Видимость = Ложь;
	КонецЕсли;
	
	Если Параметры.РежимВыбора Тогда
		ЭтаФорма.КлючНазначенияИспользования = "РежимВыбора";
	КонецЕсли;
	
	ПолныеПраваНаВарианты = ВариантыОтчетов.ПолныеПраваНаВарианты();
	Если НЕ ПолныеПраваНаВарианты Тогда
		Элементы.ОтборТипОтчета.Видимость = Ложь;
		ОбщегоНазначенияКлиентСервер.ДобавитьЭлементКомпоновки(Список.Отбор, "ПометкаУдаления", ВидСравненияКомпоновкиДанных.Равно, Ложь,,Истина,РежимОтображенияЭлементаНастройкиКомпоновкиДанных.Недоступный);
	КонецЕсли;
	
	СписокВыбора = Элементы.ОтборТипОтчета.СписокВыбора;
	СписокВыбора.Добавить(1, НСтр("ru = 'Внутренние и Дополнительные'"));
	СписокВыбора.Добавить(Перечисления.ТипыОтчетов.Внутренний, НСтр("ru = 'Внутренние'"));
	СписокВыбора.Добавить(Перечисления.ТипыОтчетов.Дополнительный, НСтр("ru = 'Дополнительные'"));
	СписокВыбора.Добавить(Перечисления.ТипыОтчетов.Внешний, НСтр("ru = 'Внешние'"));
	
	Список.Параметры.УстановитьЗначениеПараметра("ТипВнутренний",       Перечисления.ТипыОтчетов.Внутренний);
	Список.Параметры.УстановитьЗначениеПараметра("ТипДополнительный",   Перечисления.ТипыОтчетов.Дополнительный);
	Список.Параметры.УстановитьЗначениеПараметра("КорневаяПодсистема",  КорневаяПодсистема);
	Список.Параметры.УстановитьЗначениеПараметра("ПоказыватьВсеОтчеты", ПолныеПраваНаВарианты И РежимРаботыФормы = "Список");
	Список.Параметры.УстановитьЗначениеПараметра("ОтчетыПользователя",  ВариантыОтчетов.ОтчетыТекущегоПользователя());
	
	Список.Параметры.УстановитьЗначениеПараметра("ОтборНаименование",  ОтборНаименование);
	Список.Параметры.УстановитьЗначениеПараметра("ОтборАвтор",         ОтборАвтор);
	Список.Параметры.УстановитьЗначениеПараметра("ОтборТипОтчета",     ОтборТипОтчета);
	
	Список.Параметры.УстановитьЗначениеПараметра("ВключаяПодчиненные", ВключаяПодчиненные);
	
	ТекущийЭлемент = Элементы.Список;
	
	ДеревоПодсистемУстановитьПараметрыСписка(ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	Если РежимРаботыФормы = "ВсеОтчетыРаздела" Тогда
		Элементы.ДеревоПодсистем.Развернуть(ДеревоПодсистемТекущаяСтрока, Истина);
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура ПриЗагрузкеДанныхИзНастроекНаСервере(Настройки)
	// Вызывается после загрузки данных из настроек в реквизиты формы
	
	ОтборНаименованиеСписокВыбора = Настройки.Получить("ОтборНаименованиеСписокВыбора");
	Если ТипЗнч(ОтборНаименованиеСписокВыбора) = Тип("Массив") Тогда
		Элементы.ОтборНаименование.СписокВыбора.ЗагрузитьЗначения(ОтборНаименованиеСписокВыбора);
	КонецЕсли;
	
	Список.Параметры.УстановитьЗначениеПараметра("ОтборНаименование",  ОтборНаименование);
	Список.Параметры.УстановитьЗначениеПараметра("ОтборАвтор",         ОтборАвтор);
	Список.Параметры.УстановитьЗначениеПараметра("ОтборТипОтчета",     ОтборТипОтчета);
	Список.Параметры.УстановитьЗначениеПараметра("ВключаяПодчиненные", ВключаяПодчиненные);
КонецПроцедуры

&НаСервере
Процедура ПриСохраненииДанныхВНастройкахНаСервере(Настройки)
	Настройки.Вставить("ОтборНаименованиеСписокВыбора", Элементы.ОтборНаименование.СписокВыбора.ВыгрузитьЗначения());
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ ШАПКИ ФОРМЫ

&НаКлиенте
Процедура ОтборТипОтчетаПриИзменении(Элемент)
	Список.Параметры.УстановитьЗначениеПараметра("ОтборТипОтчета", ОтборТипОтчета);
КонецПроцедуры

&НаКлиенте
Процедура ОтборТипОтчетаОчистка(Элемент, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	ОтборТипОтчета = Неопределено;
	Список.Параметры.УстановитьЗначениеПараметра("ОтборТипОтчета", ОтборТипОтчета);
КонецПроцедуры

&НаКлиенте
Процедура ОтборНаименованиеПриИзменении(Элемент)
	Если ЗначениеЗаполнено(ОтборНаименование) Тогда
		СписокВыбора = Элементы.ОтборНаименование.СписокВыбора;
		ЭлементСписка = СписокВыбора.НайтиПоЗначению(ОтборНаименование);
		Если ЭлементСписка = Неопределено Тогда
			СписокВыбора.Вставить(0, ОтборНаименование);
			Если СписокВыбора.Количество() > 10 Тогда
				СписокВыбора.Удалить(10);
			КонецЕсли;
		Иначе
			Индекс = СписокВыбора.Индекс(ЭлементСписка);
			Если Индекс <> 0 Тогда
				СписокВыбора.Сдвинуть(Индекс, -Индекс);
			КонецЕсли;
		КонецЕсли;
		ТекущийЭлемент = Элементы.ОтборНаименование;
	КонецЕсли;
	
	Список.Параметры.УстановитьЗначениеПараметра("ОтборНаименование", ОтборНаименование);
КонецПроцедуры

&НаКлиенте
Процедура ОтборАвторПриИзменении(Элемент)
	Список.Параметры.УстановитьЗначениеПараметра("ОтборАвтор", ОтборАвтор);
КонецПроцедуры

&НаКлиенте
Процедура ВключаяПодчиненныеПриИзменении(Элемент)
	Список.Параметры.УстановитьЗначениеПараметра("ВключаяПодчиненные", ВключаяПодчиненные);
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ТАБЛИЦЫ ФОРМЫ ДеревоПодсистем

&НаКлиенте
Процедура ДеревоПодсистемПередНачаломИзменения(Элемент, Отказ)
	Отказ = Истина;
КонецПроцедуры

&НаКлиенте
Процедура ДеревоПодсистемПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа)
	Отказ = Истина;
КонецПроцедуры

&НаКлиенте
Процедура ДеревоПодсистемПередУдалением(Элемент, Отказ)
	Отказ = Истина;
КонецПроцедуры

&НаКлиенте
Процедура ДеревоПодсистемПриАктивизацииСтроки(Элемент)
	ПодключитьОбработчикОжидания("ДеревоПодсистемОбработчикАктивизацииСтроки", 0.1, Истина);
КонецПроцедуры

&НаКлиенте
Процедура ДеревоПодсистемПеретаскивание(Элемент, ПараметрыПеретаскивания, СтандартнаяОбработка, Строка, Поле)
	СтандартнаяОбработка = Ложь;
	
	Если Строка = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Размещение = Новый Структура("Варианты, Действие, Приемник, Источник"); //МассивВариантов, Всего, Представление
	Размещение.Варианты = Новый Структура("Массив, Всего, Представление");
	Размещение.Варианты.Массив = ПараметрыПеретаскивания.Значение;
	Размещение.Варианты.Всего  = ПараметрыПеретаскивания.Значение.Количество();
	
	Если Размещение.Варианты.Всего = 0 Тогда
		Возврат;
	КонецЕсли;
	
	СтрокаПриемник = ДеревоПодсистем.НайтиПоИдентификатору(Строка);
	Если СтрокаПриемник = Неопределено ИЛИ СтрокаПриемник.Приоритет = "" Тогда
		Возврат;
	КонецЕсли;
	
	Размещение.Приемник = Новый Структура("Ссылка, ПолноеПредставление");
	ЗаполнитьЗначенияСвойств(Размещение.Приемник, СтрокаПриемник);
	
	СтрокаИсточник = Элементы.ДеревоПодсистем.ТекущиеДанные;
	Размещение.Источник = Новый Структура("Ссылка, ПолноеПредставление");
	Если СтрокаИсточник = Неопределено ИЛИ СтрокаИсточник.Приоритет = "" Тогда
		Размещение.Действие = "Копирование";
	Иначе
		ЗаполнитьЗначенияСвойств(Размещение.Источник, СтрокаИсточник);
		Если ПараметрыПеретаскивания.Действие = ДействиеПеретаскивания.Копирование Тогда
			Размещение.Действие = "Копирование";
		Иначе
			Размещение.Действие = "Перемещение";
		КонецЕсли;
	КонецЕсли;
	
	Если Размещение.Источник.Ссылка = Размещение.Приемник.Ссылка Тогда
		Предупреждение(НСтр("ru = 'Выбранные варианты отчетов уже в данном разделе.'"));
		Возврат;
	КонецЕсли;
	
	Если Размещение.Варианты.Всего = 1 Тогда
		Если Размещение.Действие = "Копирование" Тогда
			ШаблонВопроса = НСтр("ru = 'Разместить ""%1"" в ""%4""?'");
		Иначе
			ШаблонВопроса = НСтр("ru = 'Переместить ""%1"" из ""%3"" в ""%4""?'");
		КонецЕсли;
		Размещение.Варианты.Представление = Строка(Размещение.Варианты.Массив[0]);
	Иначе
		Размещение.Варианты.Представление = "";
		Для Каждого ВариантСсылка Из Размещение.Варианты.Массив Цикл
			Размещение.Варианты.Представление = Размещение.Варианты.Представление
			+ ?(Размещение.Варианты.Представление = "", "", ", ")
			+ Строка(ВариантСсылка);
			Если СтрДлина(Размещение.Варианты.Представление) > 23 Тогда
				Размещение.Варианты.Представление = Лев(Размещение.Варианты.Представление, 20) + "...";
				Прервать;
			КонецЕсли;
		КонецЦикла;
		Если Размещение.Действие = "Копирование" Тогда
			ШаблонВопроса = НСтр("ru = 'Разместить варианты отчетов ""%1"" (%2 шт.) в ""%4""?'");
		Иначе
			ШаблонВопроса = НСтр("ru = 'Переместить варианты отчетов ""%1"" (%2 шт.) из ""%3"" в ""%4""?'");
		КонецЕсли;
	КонецЕсли;
	
	ТекстВопроса = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
		ШаблонВопроса,
		Размещение.Варианты.Представление,
		Формат(Размещение.Варианты.Всего, "ЧГ=0"),
		Размещение.Источник.ПолноеПредставление,
		Размещение.Приемник.ПолноеПредставление
	);
	Ответ = Вопрос(ТекстВопроса, РежимДиалогаВопрос.ДаНет, 60, КодВозвратаДиалога.Да);
	Если Ответ <> КодВозвратаДиалога.Да Тогда
		Возврат;
	КонецЕсли;
	
	Результат = РазместитьВариантыВПодсистеме(Размещение);
	
	ВариантыОтчетовКлиент.ОбновитьОткрытыеПанелиОтчетов();
	
	ВариантыОтчетовКлиент.ПоказатьРезультат(Результат);
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ТАБЛИЦЫ ФОРМЫ Список

&НаКлиенте
Процедура СписокВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	Если РежимРаботыФормы = "ВсеОтчетыРаздела" Тогда
		СтандартнаяОбработка = Ложь;
		ВариантыОтчетовКлиент.ОткрытьВариантОтчета(ЭтаФорма);
	КонецЕсли;
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

&НаСервере
Процедура УстановитьСвойствоСпискаПоПараметруФормы(Ключ)
	
	Если Параметры.Свойство(Ключ) И ЗначениеЗаполнено(Параметры[Ключ]) Тогда
		Элементы.Список[Ключ] = Параметры[Ключ];
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ДеревоПодсистемОбработчикАктивизацииСтроки()
	
	ДеревоПодсистемУстановитьПараметрыСписка(ЭтаФорма);
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура ДеревоПодсистемУстановитьПараметрыСписка(ЭтаФорма)
	Если ЭтаФорма.ДеревоПодсистемТекущаяСтрока = ЭтаФорма.Элементы.ДеревоПодсистем.ТекущаяСтрока Тогда
		Возврат;
	КонецЕсли;
	
	ЭтаФорма.ДеревоПодсистемТекущаяСтрока = ЭтаФорма.Элементы.ДеревоПодсистем.ТекущаяСтрока;
	
	СтрокаДерева = ЭтаФорма.ДеревоПодсистем.НайтиПоИдентификатору(ЭтаФорма.ДеревоПодсистемТекущаяСтрока);
	Если СтрокаДерева = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ЭтаФорма.Элементы.ВключаяПодчиненные.Доступность = ЗначениеЗаполнено(СтрокаДерева.ПолноеИмя);
	
	ЭтаФорма.Список.Параметры.УстановитьЗначениеПараметра("РазделИлиГруппа", СтрокаДерева.Ссылка);
КонецПроцедуры

&НаСервере
Функция РазместитьВариантыВПодсистеме(Размещение)
	Результат = Новый Структура("Оповестить, Заголовок, Текст, ТекстОшибок, Ссылка");
	
	Размещено = 0;
	Результат.ТекстОшибок = "";
	НачатьТранзакцию();
	Для Каждого ВариантСсылка Из Размещение.Варианты.Массив Цикл
		Если ВариантСсылка.ТипОтчета = Перечисления.ТипыОтчетов.Внешний Тогда
			Результат.ТекстОшибок = Результат.ТекстОшибок + СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				НСтр("ru = '""%1"" внешний.'"),
				Строка(ВариантСсылка)
			) + Символы.ПС;
			Продолжить;
		ИначеЕсли ВариантСсылка.ПометкаУдаления Тогда
			Результат.ТекстОшибок = Результат.ТекстОшибок + СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				НСтр("ru = '""%1"" помечен на удаление.'"),
				Строка(ВариантСсылка)
			) + Символы.ПС;
			Продолжить;
		КонецЕсли;
		
		ВариантОбъект = ВариантСсылка.ПолучитьОбъект();
		
		СтрокаПриемник = ВариантОбъект.Размещение.Найти(Размещение.Приемник.Ссылка, "РазделИлиГруппа");
		
		Если Размещение.Действие = "Перемещение" Тогда
			СтрокаИсточник = ВариантОбъект.Размещение.Найти(Размещение.Источник.Ссылка, "РазделИлиГруппа");
			Если СтрокаИсточник = Неопределено Тогда
				// Действие не требуется
			ИначеЕсли СтрокаПриемник = Неопределено Тогда
				// Замена подсистемы
				СтрокаИсточник.РазделИлиГруппа = Размещение.Приемник.Ссылка;
				СтрокаПриемник = СтрокаИсточник;
			Иначе
				// Удаление строки
				ВариантОбъект.Размещение.Удалить(СтрокаИсточник);
			КонецЕсли;
		КонецЕсли;
		
		Если СтрокаПриемник = Неопределено Тогда
			СтрокаПриемник = ВариантОбъект.Размещение.Добавить();
			СтрокаПриемник.РазделИлиГруппа = Размещение.Приемник.Ссылка;
		КонецЕсли;
		
		СтрокаПриемник.Использование = Истина;
		
		Размещено = Размещено + 1;
		ВариантОбъект.Записать();
	КонецЦикла;
	
	ЗафиксироватьТранзакцию();
	
	Если Размещение.Варианты.Всего = Размещено Тогда
		Результат.Оповестить = Истина;
		Если Размещение.Варианты.Всего = 1 Тогда
			Результат.Заголовок = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				НСтр("ru = 'Вариант отчета ""%1"" размещен в ""%2"".'"),
				Размещение.Варианты.Представление,
				Размещение.Приемник.ПолноеПредставление
			);
			Результат.Текст = Размещение.Варианты.Представление;
			Результат.Ссылка = ПолучитьНавигационнуюСсылку(Размещение.Варианты.Массив[0]);
		Иначе
			Результат.Текст = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				НСтр("ru = 'Варианты отчетов ""%1"" (%2 шт.) размещены в ""%3"".'"),
				Размещение.Варианты.Представление,
				Формат(Размещение.Варианты.Всего, "ЧН=0; ЧГ=0"),
				Размещение.Приемник.ПолноеПредставление
			);
		КонецЕсли;
	Иначе
		Результат.Оповестить = Ложь;
		Результат.Текст = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			НСтр("ru = 'Размещено вариантов отчетов: %1 из %2'"), 
			Формат(Размещено, "ЧН=0; ЧГ=0"),
			Формат(Размещение.Варианты.Всего, "ЧН=0; ЧГ=0")
		);
		Результат.ТекстОшибок = НСтр("ru = 'Варианты отчетов, которые не могут размещаться в командном интерфейсе:'")
		+ Символы.ПС
		+ Результат.ТекстОшибок;
	КонецЕсли;
	
	Если Размещение.Действие = "Перемещение" И Размещено > 0 Тогда
		Элементы.Список.Обновить();
	КонецЕсли;
	
	Возврат Результат;
КонецФункции

