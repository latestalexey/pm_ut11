////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ ПОЛЕЙ ТАБЛИЦЫ СписокИнтеркампани

&НаКлиенте
Процедура СписокИнтеркампаниПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа)
	
	Отказ = Истина;
	Параметр = ?(Копирование, Новый Структура("ЗначениеКопирования", Элементы.СписокИнтеркампани.ТекущаяСтрока),
		Новый Структура);
	
	ОткрытьФорму("Справочник.СоглашенияОбИспользованииЭД.Форма.ФормаЭлементаИнтеркампани", Параметр,
		Элементы.СписокИнтеркампани);
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ ПОЛЕЙ ТАБЛИЦЫ СписокСоглашенийЧерезОЭДО

&НаКлиенте
Процедура СписокСоглашенийЧерезОЭДОПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа)
	
	Отказ = Истина;
	
	Если Копирование Тогда
		СтруктураПараметров = Новый Структура("ЗначениеКопирования", Элементы.СписокСоглашенийЧерезОЭДО.ТекущаяСтрока);
		ОткрытьФорму("Справочник.СоглашенияОбИспользованииЭД.Форма.ФормаЭлементаЧерезОЭДО",
					 СтруктураПараметров,
					 Элементы.СписокСоглашенийЧерезОЭДО);
	Иначе
		ОткрытьФорму("Справочник.СоглашенияОбИспользованииЭД.Форма.ПомощникНового",,ЭтаФорма);
	КонецЕсли;
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ ПОЛЕЙ ТАБЛИЦЫ СписокСоглашенийСБанками

&НаКлиенте
Процедура СписокСоглашенийСБанкамиПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа)
	
	Отказ = Истина;
	Параметр = ?(Копирование, Новый Структура("ЗначениеКопирования", Элементы.СписокСоглашенийСБанками.ТекущаяСтрока), Новый Структура);
	ОткрытьФорму("Справочник.СоглашенияОбИспользованииЭД.Форма.ФормаЭлементаБанк", Параметр, Элементы.СписокСоглашенийСБанками);
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если НЕ ЭлектронныеДокументыСлужебныйВызовСервера.ПолучитьЗначениеФункциональнойОпции("ИспользоватьОбменЭД") Тогда
		ТекстСообщения = ЭлектронныеДокументыСлужебныйВызовСервера.ТекстСообщенияОНеобходимостиНастройкиСистемы("РаботаСЭД");
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, , , , Отказ);
	КонецЕсли;
	
	СпособыОЭДНапрямую = ЭлектронныеДокументыСлужебный.МассивСпособовОбменаЭД(Истина);
	ДатаАктуальности = НачалоДня(ТекущаяДатаСеанса());
	
	СписокСоглашенийСКонтрагентами.Параметры.УстановитьЗначениеПараметра("ДатаАктуальности",        ДатаАктуальности);
	СписокСоглашенийСКонтрагентами.Параметры.УстановитьЗначениеПараметра("Партнер",                 Параметры.Партнер);
	СписокСоглашенийСКонтрагентами.Параметры.УстановитьЗначениеПараметра("Контрагент",              Параметры.Контрагент);
	СписокСоглашенийСКонтрагентами.Параметры.УстановитьЗначениеПараметра("Организация",             Параметры.Организация);
	СписокСоглашенийСКонтрагентами.Параметры.УстановитьЗначениеПараметра("СпособыОбменаЭДНапрямую", СпособыОЭДНапрямую);
	
	СписокСоглашенийМеждуОрганизациями.Параметры.УстановитьЗначениеПараметра("ДатаАктуальности", ДатаАктуальности);
	СписокСоглашенийМеждуОрганизациями.Параметры.УстановитьЗначениеПараметра("Партнер",          Параметры.Партнер);
	СписокСоглашенийМеждуОрганизациями.Параметры.УстановитьЗначениеПараметра("Контрагент",       Параметры.Контрагент);
	СписокСоглашенийМеждуОрганизациями.Параметры.УстановитьЗначениеПараметра("Организация",      Параметры.Организация);
	
	СписокСоглашенийЧерезОЭДО.Параметры.УстановитьЗначениеПараметра("ДатаАктуальности",        ДатаАктуальности);
	СписокСоглашенийЧерезОЭДО.Параметры.УстановитьЗначениеПараметра("Партнер",                 Параметры.Партнер);
	СписокСоглашенийЧерезОЭДО.Параметры.УстановитьЗначениеПараметра("Контрагент",              Параметры.Контрагент);
	СписокСоглашенийЧерезОЭДО.Параметры.УстановитьЗначениеПараметра("Организация",             Параметры.Организация);
	
	СписокСоглашенийСБанками.Параметры.УстановитьЗначениеПараметра("ДатаАктуальности", ДатаАктуальности);
	СписокСоглашенийСБанками.Параметры.УстановитьЗначениеПараметра("Банк",             Параметры.Банк);
	СписокСоглашенийСБанками.Параметры.УстановитьЗначениеПараметра("Организация",      Параметры.Организация);
	
	СписокСоглашений.Параметры.УстановитьЗначениеПараметра("ДатаАктуальности", ДатаАктуальности);
	
	// Скроем группу "Всех соглашений" от пользователей с ограниченными правами или принудительно.
	СкрытьЗакладкуВсехСоглашений = НЕ Пользователи.ЭтоПолноправныйПользователь() ИЛИ ЗначениеЗаполнено(Параметры.Партнер)
		ИЛИ ЗначениеЗаполнено(Параметры.Контрагент) ИЛИ ЗначениеЗаполнено(Параметры.Организация) ИЛИ ЗначениеЗаполнено(Параметры.Банк);
	
	Элементы.ГруппаВсеСоглашения.Видимость = НЕ СкрытьЗакладкуВсехСоглашений;
	
КонецПроцедуры

&НаКлиенте
Процедура СоздатьНовое(Команда)
	
	ОткрытьФорму("Справочник.СоглашенияОбИспользованииЭД.Форма.ФормаЭлементаЧерезОЭДО", , ЭтаФорма);

КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если ИмяСобытия = "ОбновитьСостояниеЭД" Тогда
		Элементы.СписокСоглашенийЧерезОЭДО.Обновить();
	КонецЕсли;
	
КонецПроцедуры
