
&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	КонтролироватьЛимит = Объект.СуммаЛимита > 0;
	КонтролироватьЛимитПриИзменении(Элементы.КонтролироватьЛимит);
	
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если НЕ ЗначениеЗаполнено(Объект.Ссылка) Тогда
		
		ОбщегоНазначенияУТКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "Изменить", "Доступность", Ложь);
		
		Если НЕ ЗначениеЗаполнено(Объект.ВалютаВзаиморасчетов) Тогда
			Объект.ВалютаВзаиморасчетов = ДоходыИРасходыСервер.ПолучитьВалютуУправленческогоУчета();
		КонецЕсли;
		
		ОбновитьЗаголовокФормы();
		УстановитьВидимость();
		
		Если ЗначениеЗаполнено(Объект.Партнер) Тогда
			ПартнерПриИзмененииСервер(Объект.Партнер, Объект.Контрагент, Объект.ПорядокОплаты, Объект.БанковскийСчетКонтрагента);
		КонецЕсли;
		
		ЗаполнитьСтатьиУчета(Объект.ХарактерДоговора, Объект.ТипДоговора, Объект.ТипСрочности);
		
		ЗначениеКопирования = Параметры.ЗначениеКопирования;
		Если ЗначениеЗаполнено(ЗначениеКопирования) Тогда
			РегистрыСведений.ПроцентныеСтавкиКредитовИДепозитов.ПрочитатьПроцентнуюСтавкуКомисиию(ЗначениеКопирования, ЭтаФорма.СтавкаПроцентов, ЭтаФорма.Комиссия);
		КонецЕсли;
		
	КонецЕсли;
	
	ПараметрыВыбора = ПараметрыВыбораБанковскихСчетов(Объект.ПорядокОплаты);
	Элементы.БанковскийСчет.ПараметрыВыбора			   = ПараметрыВыбора;
	Элементы.БанковскийСчетКонтрагента.ПараметрыВыбора = ПараметрыВыбора;
	Элементы.БанковскийСчетПроцентов.ПараметрыВыбора   = ПараметрыВыбора;
	Элементы.БанковскийСчетКомиссии.ПараметрыВыбора    = ПараметрыВыбора;
	Элементы.Касса.ПараметрыВыбора					   = ПараметрыВыбора;
	Элементы.Партнер.ПараметрыВыбора = ПараметрыВыбораПартнера(Объект.ХарактерДоговора);
		
	УстановитьТипДоговора();
	
	// Обработчик подсистемы "ВерсионированиеОбъектов"
	ВерсионированиеОбъектов.ПриСозданииНаСервере(ЭтаФорма);
		
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
	ОбновитьЗаголовокФормы();
	УстановитьВидимость();
	ОбновитьДанныеГрафиковСервер();
	УстановитьДоступностьПоГрафикуСервер();
	УстановитьДоступностьПоСтатусуСервер();
	
КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	
	РегистрыСведений.ПроцентныеСтавкиКредитовИДепозитов.ЗаписатьПроцентнуюСтавкуКомисиию(Объект.Ссылка, ЭтаФорма.СтавкаПроцентов, ЭтаФорма.Комиссия);
	УстановитьДоступностьПоГрафикуСервер();
	УстановитьДоступностьПоСтатусуСервер();
	ОбновитьЗаголовокФормы();
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если ИмяСобытия = "ИзмененыСвязанныеДанныеПоКредитуДепозиту" Тогда
		
		Если ЗначениеЗаполнено(Объект.Ссылка) Тогда
			
			ДанныеГрафиков = ПолучитьДанныеГрафиковСервер(Объект.Ссылка);
			ЭтаФорма.СтавкаПроцентов = ДанныеГрафиков.СтавкиДоговора.Процент;
			ЭтаФорма.Комиссия = ДанныеГрафиков.СтавкиДоговора.Комиссия;
			
			ЗаполнитьЗначенияСвойств(Объект,ДанныеГрафиков.ИтогиГрафика);
			ЗаполнитьЗначенияСвойств(Объект,ДанныеГрафиков.Сроки);
			
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

///////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ ШАПКИ ФОРМЫ

&НаКлиенте
Процедура ВалютаВзаиморасчетовПриИзменении(Элемент)
	
	ВалютаВзаиморасчетовПриИзмененииСервер();
	
КонецПроцедуры

&НаКлиенте
Процедура ДатаСрокиГрафикаПриИзменении(Элемент)
	
	Если ВРег(Элемент.Имя) = ВРег("ДатаПоследнегоПлатежа") 
		И Объект.ДатаПоследнегоПлатежа < Объект.ДатаПервогоТранша Тогда
		
		Текст = НСтр("ru='Дата последнего платежа не может быть раньше даты первого транша!'");
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(Текст,,"ДатаПоследнегоПлатежа","Объект");
		
		Объект.ДатаПоследнегоПлатежа = Неопределено;
		ЭтаФорма.ТекущийЭлемент = Элементы.ДатаПоследнегоПлатежа;
		Возврат;
	КонецЕсли;
	
	ДатаСрокиГрафикаПриИзмененииСервер(Элемент.Имя);
	
КонецПроцедуры

&НаКлиенте
Процедура НаименованиеПриИзменении(Элемент)
	
	Если НЕ ЗначениеЗаполнено(Объект.НаименованиеДляПечати) Тогда
		Объект.НаименованиеДляПечати = Объект.Наименование;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПартнерПриИзменении(Элемент)
	
	ПартнерПриИзмененииСервер(Объект.Партнер, Объект.Контрагент, Объект.ПорядокОплаты, Объект.БанковскийСчетКонтрагента);
	
КонецПроцедуры

&НаКлиенте
Процедура ПорядокОплатыПриИзменении(Элемент)
	
	ПорядокОплатыПриИзмененииСервер();
	
КонецПроцедуры

&НаКлиенте
Процедура СтатусПриИзменении(Элемент)
	
	Если Объект.Согласован И 
		Объект.Статус <> ПредопределенноеЗначение("Перечисление.СтатусыДоговоровКонтрагентов.Действует")
		И Объект.Статус <> ПредопределенноеЗначение("Перечисление.СтатусыДоговоровКонтрагентов.Закрыт") Тогда
		
		Объект.Согласован = Ложь;
		
	КонецЕсли;
	УстановитьДоступностьПоСтатусуСервер();
	
КонецПроцедуры

&НаКлиенте
Процедура ТекстИспользуемыйГрафикНажатие(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	Если ВариантГрафика.Пустая() Тогда
		
		Если НЕ ЗначениеЗаполнено(Объект.Ссылка) Тогда
			Ответ = Вопрос(НСтр("ru = 'Ввод графика возможен только после записи договора. 
										|Записать и продолжить?'"),
							РежимДиалогаВопрос.ДаНет,,
							КодВозвратаДиалога.Да);
			Если Ответ <> КодВозвратаДиалога.Да Тогда
				Возврат;
			КонецЕсли;
		КонецЕсли;
		
		ПараметрыФормы = Новый Структура("Владелец",Объект.Ссылка);		
		ОткрытьФорму("Справочник.ВариантыГрафиковКредитовИДепозитов.ФормаОбъекта",
						ПараметрыФормы, 
						ЭтаФорма);
	Иначе		
		ОткрытьФорму("Справочник.ВариантыГрафиковКредитовИДепозитов.ФормаОбъекта",
						Новый Структура("Ключ",ВариантГрафика), 
						ЭтаФорма);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ТипДоговораСрочностиПриИзменении(Элемент)
	
	ЗаполнитьСтатьиУчета(Объект.ХарактерДоговора, Объект.ТипДоговора, Объект.ТипСрочности);
	
КонецПроцедуры

&НаКлиенте
Процедура ХарактерДоговораПриИзменении(Элемент)
	
	ХарактерДоговораПриИзмененииСервер();	
	Элементы.Партнер.ПараметрыВыбора = ПараметрыВыбораПартнера(Объект.ХарактерДоговора);	
	
КонецПроцедуры

&НаКлиенте
Процедура НаименованиеДляПечатиНачалоВыбораИзСписка(Элемент, СтандартнаяОбработка)
	
	Элемент.СписокВыбора.Очистить();
	Элемент.СписокВыбора.Добавить(Объект.Наименование);
	
КонецПроцедуры

&НаКлиенте
Процедура КомментарийНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	ОбщегоНазначенияКлиент.ОткрытьФормуРедактированияКомментария(Элемент.ТекстРедактирования, Объект.Комментарий, Модифицированность);
	
КонецПроцедуры

&НаКлиенте
Процедура УправлениеВидимостьюПриИзменении(Элемент)
	
	УстановитьВидимость();
	
КонецПроцедуры

&НаКлиенте
Процедура ИзменитьСтавкуПроцентовНажатие(Элемент)
	
	СтандартнаяОбработка = Ложь;	
	ПараметрыФормы = Новый Структура("Отбор", Новый Структура("Договор", Объект.Ссылка));
	ОткрытьФорму("РегистрСведений.ПроцентныеСтавкиКредитовИДепозитов.ФормаСписка", 
					ПараметрыФормы, 
					ЭтаФорма,
					Истина,
					Окно);
					
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ТАБЛИЦЫ ФОРМЫ "Обеспечение"

&НаКлиенте
Процедура ОбеспечениеПриНачалеРедактирования(Элемент, НоваяСтрока, Копирование)
	
	Если НоваяСтрока И НЕ Копирование Тогда
		
		Элемент.ТекущиеДанные.Контрагент = Объект.Контрагент;
		Элемент.ТекущиеДанные.Статус = ПредопределенноеЗначение("Перечисление.СтатусыДоговоровКонтрагентов.НеСогласован");
		Элемент.ТекущиеДанные.ДатаНачала = Объект.Дата;		
		
	КонецЕсли;
	
КонецПроцедуры

///////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

///////////////////////////////////////////////////////////////////////////////
// При изменении реквизитов

&НаСервере
Процедура ВалютаВзаиморасчетовПриИзмененииСервер()
	
	Если Объект.ВалютаВзаиморасчетов = Константы.ВалютаРегламентированногоУчета.Получить() Тогда
		Объект.ПорядокОплаты = Перечисления.ПорядокОплатыПоСоглашениям.РасчетыВРубляхОплатаВРублях;
	ИначеЕсли Объект.ПорядокОплаты = Перечисления.ПорядокОплатыПоСоглашениям.РасчетыВРубляхОплатаВРублях Тогда
		Объект.ПорядокОплаты = Перечисления.ПорядокОплатыПоСоглашениям.ПустаяСсылка();
	КонецЕсли;
	
	ПорядокОплатыПриИзмененииСервер();
	
КонецПроцедуры

&НаСервере
Процедура ДатаСрокиГрафикаПриИзмененииСервер(ИмяЭлемента)
	
	ОбъектСправочника = РеквизитФормыВЗначение("Объект",Тип("СправочникОбъект.ДоговорыКредитовИДепозитов"));
	Справочники.ВариантыГрафиковКредитовИДепозитов.ПересчитатьСроки(ОбъектСправочника,ИмяЭлемента);
	ЗначениеВРеквизитФормы(ОбъектСправочника,"Объект");
	
КонецПроцедуры

&НаКлиенте
Процедура КонтролироватьЛимитПриИзменении(Элемент)
	
	Элементы.СуммаЛимита.ТолькоПросмотр = НЕ КонтролироватьЛимит;
	Если НЕ КонтролироватьЛимит Тогда
		Объект.СуммаЛимита = 0;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОрганизацияПриИзменении(Элемент)
	
	ЗаполнитьБанковскийСчетПоУмолчанию(Объект.Организация, Объект.ПорядокОплаты, Объект.БанковскийСчет);
	
КонецПроцедуры

&НаСервереБезКонтекста
Процедура ПартнерПриИзмененииСервер(Партнер, Контрагент, ПорядокОплаты, БанковскийСчетКонтрагента)
	
	ПартнерыИКонтрагенты.ЗаполнитьКонтрагентаПартнераПоУмолчанию(Партнер, Контрагент);
	ЗаполнитьБанковскийСчетПоУмолчанию(Контрагент, ПорядокОплаты, БанковскийСчетКонтрагента);
	
КонецПроцедуры

&НаСервере
Процедура ПорядокОплатыПриИзмененииСервер()
	
	Если Объект.ПорядокОплаты = Перечисления.ПорядокОплатыПоСоглашениям.РасчетыВРубляхОплатаВРублях Тогда
		Объект.ВалютаВзаиморасчетов = Константы.ВалютаРегламентированногоУчета.Получить();
	ИначеЕсли Объект.ВалютаВзаиморасчетов = Константы.ВалютаРегламентированногоУчета.Получить() Тогда
		Объект.ВалютаВзаиморасчетов = Справочники.Валюты.ПустаяСсылка();
	КонецЕсли;
	
	ПараметрыВыбора = ПараметрыВыбораБанковскихСчетов(Объект.ПорядокОплаты);
	Элементы.БанковскийСчет.ПараметрыВыбора            = ПараметрыВыбора;
	Элементы.БанковскийСчетКонтрагента.ПараметрыВыбора = ПараметрыВыбора;
	Элементы.БанковскийСчетПроцентов.ПараметрыВыбора   = ПараметрыВыбора;
	Элементы.БанковскийСчетКомиссии.ПараметрыВыбора    = ПараметрыВыбора;
	Элементы.Касса.ПараметрыВыбора					   = ПараметрыВыбора;
	
	Если НЕ БанковскийСчетСоответствуетПорядкуОплаты(Объект.БанковскийСчет, Объект.ПорядокОплаты) Тогда
		Объект.БанковскийСчет = Неопределено;
	КонецЕсли;
	ЗаполнитьБанковскийСчетПоУмолчанию(Объект.Организация, Объект.ПорядокОплаты, Объект.БанковскийСчет);
	
	Если НЕ БанковскийСчетСоответствуетПорядкуОплаты(Объект.БанковскийСчетКонтрагента, Объект.ПорядокОплаты) Тогда
		Объект.БанковскийСчетКонтрагента = Неопределено;
	КонецЕсли;
	ЗаполнитьБанковскийСчетПоУмолчанию(Объект.Контрагент, Объект.ПорядокОплаты, Объект.БанковскийСчетКонтрагента);
	
	Если НЕ БанковскийСчетСоответствуетПорядкуОплаты(Объект.БанковскийСчетПроцентов, Объект.ПорядокОплаты) Тогда
		Объект.БанковскийСчетПроцентов = Неопределено;
	КонецЕсли;
	
	Если НЕ БанковскийСчетСоответствуетПорядкуОплаты(Объект.БанковскийСчетКомиссии, Объект.ПорядокОплаты) Тогда
		Объект.БанковскийСчетКомиссии = Неопределено;
	КонецЕсли;
	
	Если НЕ КассаСоответствуетПорядкуОплаты(Объект.Касса, Объект.ПорядокОплаты) Тогда
		Объект.Касса = Неопределено;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПривестиТипСтатьиДоходаРасхода(СтатьяДоходаРасхода,НовыйТипСтатьи)
	
	Если ТипЗнч(СтатьяДоходаРасхода) <> ТипЗнч(НовыйТипСтатьи) Тогда
		СтатьяДоходаРасхода = НовыйТипСтатьи;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ХарактерДоговораПриИзмененииСервер()
	
	УстановитьТипДоговора();	
	ЗаполнитьСтатьиУчета(Объект.ХарактерДоговора, Объект.ТипДоговора, Объект.ТипСрочности);	
	
КонецПроцедуры

///////////////////////////////////////////////////////////////////////////////
// Прочее

&НаСервереБезКонтекста
Функция ПараметрыВыбораБанковскихСчетов(ПорядокОплаты)

	МассивПараметров = Новый Массив;
	
	Если ПорядокОплаты = Перечисления.ПорядокОплатыПоСоглашениям.РасчетыВРубляхОплатаВРублях
	 ИЛИ ПорядокОплаты = Перечисления.ПорядокОплатыПоСоглашениям.РасчетыВВалютеОплатаВРублях Тогда
		МассивПараметров.Добавить(Новый ПараметрВыбора("Отбор.ВалютаДенежныхСредств", Константы.ВалютаРегламентированногоУчета.Получить()));
	Иначе
		МассивПараметров.Добавить(Новый ПараметрВыбора("Отбор.ВалютаДенежныхСредств", Новый ФиксированныйМассив(ИностранныеВалюты())));
	КонецЕсли;
	
	МассивПараметров.Добавить(Новый ПараметрВыбора("ВыборСчетовГоловнойОрганизации", Неопределено));
	
	Возврат Новый ФиксированныйМассив(МассивПараметров);
	
КонецФункции

&НаСервереБезКонтекста
Функция ИностранныеВалюты()
	
	Запрос = Новый Запрос("ВЫБРАТЬ
	                      |	Валюты.Ссылка КАК Ссылка
	                      |ИЗ
	                      |	Справочник.Валюты КАК Валюты
	                      |ГДЕ
	                      |	Валюты.Ссылка <> &ВалютаРегламентированногоУчета
	                      |	И Валюты.ПометкаУдаления = ЛОЖЬ");
						  
	Запрос.УстановитьПараметр("ВалютаРегламентированногоУчета", Константы.ВалютаРегламентированногоУчета.Получить());
	
	Возврат Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Ссылка");
	
КонецФункции

&НаСервереБезКонтекста
Функция БанковскийСчетСоответствуетПорядкуОплаты(БанковскийСчет, ПорядокОплаты)

	Соответствует = Истина;
	
	Если ЗначениеЗаполнено(БанковскийСчет) Тогда
		
		ВалютаСчета = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(БанковскийСчет, "ВалютаДенежныхСредств");
		
		Если ПорядокОплаты = Перечисления.ПорядокОплатыПоСоглашениям.РасчетыВВалютеОплатаВВалюте Тогда
			Соответствует = ВалютаСчета <> Константы.ВалютаРегламентированногоУчета.Получить();
		Иначе
			Соответствует = ВалютаСчета = Константы.ВалютаРегламентированногоУчета.Получить();
		КонецЕсли;
		
	КонецЕсли;
	
	Возврат Соответствует;
	
КонецФункции

&НаСервереБезКонтекста
Функция КассаСоответствуетПорядкуОплаты(Касса, ПорядокОплаты)

	Соответствует = Истина;
	
	Если ЗначениеЗаполнено(Касса) Тогда
		
		ВалютаКассы = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Касса, "ВалютаДенежныхСредств");
		
		Если ПорядокОплаты = Перечисления.ПорядокОплатыПоСоглашениям.РасчетыВВалютеОплатаВВалюте Тогда
			Соответствует = ВалютаКассы <> Константы.ВалютаРегламентированногоУчета.Получить();
		Иначе
			Соответствует = ВалютаКассы = Константы.ВалютаРегламентированногоУчета.Получить();
		КонецЕсли;
		
	КонецЕсли;
	
	Возврат Соответствует;
	
КонецФункции

&НаСервереБезКонтекста
Функция ПараметрыВыбораПартнера(ХарактерДоговора)
	
	МассивПараметров = Новый Массив;
	Если ХарактерДоговора = Перечисления.ХарактерДоговораКредитовИДепозитов.КредитИлиЗайм Тогда
		МассивПараметров.Добавить(Новый ПараметрВыбора("Отбор.Поставщик", Истина));
	Иначе
		МассивПараметров.Добавить(Новый ПараметрВыбора("Отбор.Клиент", Истина));		
	КонецЕсли;
	
	Возврат Новый ФиксированныйМассив(МассивПараметров);
	
КонецФункции

&НаСервереБезКонтекста
Процедура ЗаполнитьБанковскийСчетПоУмолчанию(ВладелецСчета, ПорядокОплаты, БанковскийСчетВладельца)
	
	Если ЗначениеЗаполнено(БанковскийСчетВладельца)
	 ИЛИ НЕ ЗначениеЗаполнено(ВладелецСчета) Тогда
		Возврат;
	КонецЕсли;
	
	ОплатаВВалюте = ПорядокОплаты = Перечисления.ПорядокОплатыПоСоглашениям.РасчетыВВалютеОплатаВВалюте;
	
	Запрос = Новый Запрос("
	|ВЫБРАТЬ ПЕРВЫЕ 2
	|	БанковскиеСчета.Ссылка КАК БанковскийСчет
	|ИЗ
	|	Справочник.БанковскиеСчетаОрганизаций КАК БанковскиеСчета
	|ГДЕ
	|	БанковскиеСчета.Владелец = &ВладелецСчета
	|	И (БанковскиеСчета.ВалютаДенежныхСредств = &ВалютаРегл
	|				И НЕ &ОплатаВВалюте
	|			ИЛИ БанковскиеСчета.ВалютаДенежныхСредств <> &ВалютаРегл
	|				И &ОплатаВВалюте)
	|	И НЕ БанковскиеСчета.ПометкаУдаления");
	
	Если ТипЗнч(ВладелецСчета) = Тип("СправочникСсылка.Контрагенты") Тогда
		Запрос.Текст = СтрЗаменить(Запрос.Текст,"БанковскиеСчетаОрганизаций","БанковскиеСчетаКонтрагентов");
	КонецЕсли;
	
	Запрос.УстановитьПараметр("ВладелецСчета", ВладелецСчета);
	Запрос.УстановитьПараметр("ОплатаВВалюте", ОплатаВВалюте);
	Запрос.УстановитьПараметр("ВалютаРегл", Константы.ВалютаРегламентированногоУчета.Получить());
	
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Количество() = 1 И Выборка.Следующий() Тогда
		БанковскийСчетВладельца = Выборка.БанковскийСчет;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьСтатьиУчета(ДоговорХарактер, ДоговорТип, ТипСрочности) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.Текст = 
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	ДоговорыКредитовИДепозитов.Ссылка,
	|	ДоговорыКредитовИДепозитов.СтатьяДДСКомиссии,
	|	ДоговорыКредитовИДепозитов.СтатьяДДСОсновногоДолга,
	|	ДоговорыКредитовИДепозитов.СтатьяДДСПоступленияВыдачи,
	|	ДоговорыКредитовИДепозитов.СтатьяДДСПроцентов,
	|	ДоговорыКредитовИДепозитов.СтатьяДоходовРасходовКомиссии,
	|	ДоговорыКредитовИДепозитов.СтатьяДоходовРасходовПроцентов,
	|	ДоговорыКредитовИДепозитов.Дата КАК Дата
	|ИЗ
	|	Справочник.ДоговорыКредитовИДепозитов КАК ДоговорыКредитовИДепозитов
	|ГДЕ
	|	НЕ ДоговорыКредитовИДепозитов.ПометкаУдаления
	|	И ДоговорыКредитовИДепозитов.ТипДоговора = &ТипДоговора
	|	И ДоговорыКредитовИДепозитов.ХарактерДоговора = &ХарактерДоговора
	|	И ДоговорыКредитовИДепозитов.ТипСрочности = &ТипСрочности
	|
	|УПОРЯДОЧИТЬ ПО
	|	Дата УБЫВ";
	
	Запрос.УстановитьПараметр("ТипДоговора", ДоговорТип);
	Запрос.УстановитьПараметр("ХарактерДоговора", ДоговорХарактер);
	Запрос.УстановитьПараметр("ТипСрочности",ТипСрочности);
	
	ПустаяСтатьяДоходов = ПланыВидовХарактеристик.СтатьиДоходов.ПустаяСсылка();
	ПустаяСтатьяРасходов = ПланыВидовХарактеристик.СтатьиРасходов.ПустаяСсылка();
	ПустаяСтатьяДДС = Справочники.СтатьиДвиженияДенежныхСредств.ПустаяСсылка();
	Выборка = Запрос.Выполнить().Выбрать();	
	Если Выборка.Следующий() Тогда
		
		// Транши
		Объект.СтатьяДДСПоступленияВыдачи = Выборка.СтатьяДДСПоступленияВыдачи;
		
		// Оплаты
		Объект.СтатьяДДСОсновногоДолга = Выборка.СтатьяДДСОсновногоДолга;
		Объект.СтатьяДДСПроцентов = Выборка.СтатьяДДСПроцентов;
		Объект.СтатьяДДСКомиссии = Выборка.СтатьяДДСКомиссии;
		
		// Начисления
		Объект.СтатьяДоходовРасходовПроцентов = Выборка.СтатьяДоходовРасходовПроцентов;
		Объект.СтатьяДоходовРасходовКомиссии = Выборка.СтатьяДоходовРасходовКомиссии;
		
	Иначе
		
		// Транши
		Объект.СтатьяДДСПоступленияВыдачи = ПустаяСтатьяДДС;
		
		// Оплаты
		Объект.СтатьяДДСОсновногоДолга = ПустаяСтатьяДДС;
		Объект.СтатьяДДСПроцентов = ПустаяСтатьяДДС;
		Объект.СтатьяДДСКомиссии = ПустаяСтатьяДДС;
		
		// Начисления
		Если ДоговорХарактер = Перечисления.ХарактерДоговораКредитовИДепозитов.КредитИлиЗайм Тогда
			Объект.СтатьяДоходовРасходовПроцентов = ПустаяСтатьяРасходов;
			Объект.СтатьяДоходовРасходовКомиссии = ПустаяСтатьяРасходов;
		Иначе
			Объект.СтатьяДоходовРасходовПроцентов = ПустаяСтатьяДоходов;
			Объект.СтатьяДоходовРасходовКомиссии = ПустаяСтатьяДоходов;
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ОбновитьЗаголовокФормы()
		
	Если Объект.ХарактерДоговора = Перечисления.ХарактерДоговораКредитовИДепозитов.КредитИлиЗайм Тогда
		ПредставлениеТипа = НСтр("ru='Условия кредита или займа'");
	ИначеЕсли Объект.ХарактерДоговора = Перечисления.ХарактерДоговораКредитовИДепозитов.Депозит Тогда
		ПредставлениеТипа = НСтр("ru='Условия депозита'");
	ИначеЕсли Объект.ХарактерДоговора = Перечисления.ХарактерДоговораКредитовИДепозитов.ЗаймВыданный Тогда
		ПредставлениеТипа = НСтр("ru='Условия выдачи займа'");
	Иначе
		ПредставлениеТипа = НСтр("ru='Договор с контрагентом'");
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(Объект.Ссылка) Тогда
		ЭтаФорма.Заголовок = ПредставлениеТипа + НСтр("ru=' (создание)'"); ;
	Иначе
		ЭтаФорма.Заголовок = Объект.Наименование + " (" + ПредставлениеТипа + ")";
	КонецЕсли;
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПолучитьДанныеГрафиковСервер(ДоговорСсылка)
	
	// обновим процентную ставку
	ИсторияСтавок = РегистрыСведений.ПроцентныеСтавкиКредитовИДепозитов.СрезПоследних(ТекущаяДата(), Новый Структура("Договор", ДоговорСсылка));	
	СтавкиДоговора = Новый Структура("Процент,Комиссия", 0,0);
	Если ИсторияСтавок.Количество() > 0 Тогда
		СтавкиДоговора.Процент = ИсторияСтавок[0].Процент;
		СтавкиДоговора.Комиссия = ИсторияСтавок[0].Комиссия;
	КонецЕсли;
	
	// обновим данные графика
	ИтогиГрафика = Справочники.ВариантыГрафиковКредитовИДепозитов.ИтогиГрафика(ДоговорСсылка);
	Сроки = Новый Структура("ДатаПервогоТранша, ДатаПоследнегоПлатежа,СрокМес,СрокДней", ИтогиГрафика.ДатаПервогоТранша, ИтогиГрафика.ДатаПоследнегоПлатежа, 0, 0);
	Справочники.ВариантыГрафиковКредитовИДепозитов.ПересчитатьСроки(Сроки);
	
	Возврат Новый Структура("СтавкиДоговора, ИтогиГрафика, Сроки",СтавкиДоговора,ИтогиГрафика,Сроки);
	
КонецФункции

&НаСервере
Процедура ОбновитьДанныеГрафиковСервер()
	
	Если ЗначениеЗаполнено(Объект.Ссылка) Тогда
		
		ДанныеГрафиков = ПолучитьДанныеГрафиковСервер(Объект.Ссылка);
		ЭтаФорма.СтавкаПроцентов = ДанныеГрафиков.СтавкиДоговора.Процент;
		ЭтаФорма.Комиссия = ДанныеГрафиков.СтавкиДоговора.Комиссия;
		
		УстановитьПараметрыГрафика(ДанныеГрафиков.ИтогиГрафика);
		УстановитьПараметрыГрафика(ДанныеГрафиков.Сроки);
		
	КонецЕсли;//Ссылка существует	
	
КонецПроцедуры

&НаСервере
Процедура УстановитьПараметрыГрафика(ПараметрыГрафика)
	
	Для Каждого Параметр Из ПараметрыГрафика Цикл
		Если ЗначениеЗаполнено(Параметр.Значение) Тогда
			Если Объект.Свойство(Параметр.Ключ) Тогда
				Объект[Параметр.Ключ] = Параметр.Значение;
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура УстановитьВидимость()
	
	ПанельКассаСчет = ЭтаФорма.Элементы.ПанельКассаСчет;
	Если Объект.ФормаОплаты = Перечисления.ФормыОплаты.Наличная Тогда
		
		ПанельКассаСчет.ТекущаяСтраница = Элементы.ГруппаКасса;
		Элементы.ДопСчетаРасчетов.Видимость = Ложь;
		Объект.БанковскийСчет = Справочники.БанковскиеСчетаОрганизаций.ПустаяСсылка();
		
		Касса = ОбщегоНазначения.ХранилищеОбщихНастроекЗагрузить("ТекущаяКасса",);
		Если Не ЗначениеЗаполнено(Касса) Тогда
			Касса = Справочники.Кассы.ПолучитьКассуПоУмолчанию(Объект.Организация);
		КонецЕсли;
		Если ЗначениеЗаполнено(Касса) Тогда
			СтруктураРеквизитов = Справочники.Кассы.ПолучитьРеквизитыКассы(Касса);
			Валюта = СтруктураРеквизитов.Валюта;
		Иначе
			Валюта = Константы.ВалютаРегламентированногоУчета.Получить();
		КонецЕсли;
		
	Иначе
		
		ПанельКассаСчет.ТекущаяСтраница = ЭтаФорма.Элементы.ГруппаСчет;
		Элементы.ДопСчетаРасчетов.Видимость = Истина;
		Объект.Касса = Справочники.Кассы.ПустаяСсылка();
		ЗаполнитьБанковскийСчетПоУмолчанию(Объект.Организация, Объект.ПорядокОплаты, Объект.БанковскийСчет);
		
	КонецЕсли;
	
	Если Объект.ТипКомиссии = Перечисления.ТипКомиссииКредитовИДепозитов.Нет 
		ИЛИ Объект.ТипКомиссии = Перечисления.ТипКомиссииКредитовИДепозитов.ПроизвольныйГрафик Тогда
		ЭтаФорма.Элементы.Комиссия.Видимость = Ложь;
	Иначе
		ЭтаФорма.Элементы.Комиссия.Видимость = Истина;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура УстановитьДоступностьПоГрафикуСервер()
	
	МассивЭлементов = Новый Массив();
	
	МассивЭлементов.Добавить("ДатаПервогоТранша");
	МассивЭлементов.Добавить("СуммаТраншей");	
	МассивЭлементов.Добавить("ДатаПоследнегоПлатежа");
	МассивЭлементов.Добавить("СрокМес");
	МассивЭлементов.Добавить("СрокДней");
	МассивЭлементов.Добавить("СуммаКомиссии");
	МассивЭлементов.Добавить("СуммаПроцентов");
		
	ВариантГрафика = Справочники.ВариантыГрафиковКредитовИДепозитов.ТекущийВариантГрафика(Объект.Ссылка);
	Если ВариантГрафика.Пустая() Тогда
		ТекстИспользуемыйГрафик = "<Ввести>";
		ПросмотрПараметровГрафика = Ложь;
	Иначе
		ТекстИспользуемыйГрафик = ВариантГрафика.Наименование;
		ПросмотрПараметровГрафика = Истина;
	КонецЕсли;
	
	ОбщегоНазначенияУТКлиентСервер.УстановитьСвойствоЭлементовФормы(Элементы, МассивЭлементов, "ТолькоПросмотр", ПросмотрПараметровГрафика);
	
КонецПроцедуры

&НаСервере
Процедура УстановитьДоступностьПоСтатусуСервер()
	
	// Настроим отображение ставки процентов и комиссии	
	МассивЭлементов = Новый Массив();	
	МассивЭлементов.Добавить("СтавкаПроцентов");
	МассивЭлементов.Добавить("ТипКомиссии");
	МассивЭлементов.Добавить("Комиссия");
	
	ДоговорДействует = Объект.Статус = Перечисления.СтатусыДоговоровКонтрагентов.Действует;
	ДоговорДействуетИлиЗакрыт = Объект.Статус <> Перечисления.СтатусыДоговоровКонтрагентов.НеСогласован;
	ДоговорЗакрыт = Объект.Статус = Перечисления.СтатусыДоговоровКонтрагентов.Закрыт;
	
	
	ОбщегоНазначенияУТКлиентСервер.УстановитьСвойствоЭлементовФормы(Элементы, МассивЭлементов, "ТолькоПросмотр", ДоговорДействуетИлиЗакрыт);
	ОбщегоНазначенияУТКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "ИзменитьСтавкуПроцентов", "Видимость", ДоговорДействует);
	
	//Если Объект.Статус = Перечисления.СтатусыДоговоровКонтрагентов.НеСогласован Тогда
	//	Элементы.ГруппаСтавкаКоммисия.ТекущаяСтраница = Элементы["СтраницаВвода"];
	//Иначе
	//	Элементы.ГруппаСтавкаКоммисия.ТекущаяСтраница = Элементы["СтраницаНадписи"];		
	//КонецЕсли;
	
	// Элементы управления шапки
	МассивДействует = Новый Массив();
	МассивДействует.Добавить("Дата");
	МассивДействует.Добавить("Номер");
	МассивДействует.Добавить("Наименование");
	МассивДействует.Добавить("НаименованиеДляПечати");
	МассивДействует.Добавить("Партнер");
	МассивДействует.Добавить("Контрагент");
	МассивДействует.Добавить("Организация");
	МассивДействует.Добавить("ВалютаВзаиморасчетов");
	МассивДействует.Добавить("ПорядокОплаты");
	
	МассивЗакрыт = Новый Массив();
	МассивЗакрыт.Добавить("ФормаОплаты");
	МассивЗакрыт.Добавить("ПанельКассаСчет");
	МассивЗакрыт.Добавить("БанковскийСчетКонтрагента");
	МассивЗакрыт.Добавить("Данные");
	МассивЗакрыт.Добавить("Подвал");
	МассивЗакрыт.Добавить("ГруппаОбеспечение");
	МассивЗакрыт.Добавить("ГруппаСчетаАналитикаУчета");
	
	ОбщегоНазначенияУТКлиентСервер.УстановитьСвойствоЭлементовФормы(Элементы, МассивДействует, "ТолькоПросмотр", ДоговорДействуетИлиЗакрыт);
	ОбщегоНазначенияУТКлиентСервер.УстановитьСвойствоЭлементовФормы(Элементы, МассивЗакрыт, "ТолькоПросмотр", ДоговорЗакрыт);
	
КонецПроцедуры

&НаСервере
Процедура УстановитьТипДоговора()
	
	Элементы.ГруппаСтатьиДоходаРасхода.Заголовок = НСтр("ru='Статьи'")+ " " + Справочники.ДоговорыКредитовИДепозитов.ТипСтатьи(Объект.ХарактерДоговора);
	
	списТипыДоговора = Элементы.ТипДоговора.СписокВыбора;
	списТипыДоговора.Очистить();
	ПустаяСтатьяРасходов = ПланыВидовХарактеристик.СтатьиРасходов.ПустаяСсылка();
	ПустаяСтатьяДоходов = ПланыВидовХарактеристик.СтатьиДоходов.ПустаяСсылка();	
	
	Если Объект.ХарактерДоговора = Перечисления.ХарактерДоговораКредитовИДепозитов.КредитИлиЗайм Тогда
		
		списТипыДоговора.Добавить(Перечисления.ТипДоговораКредитовИДепозитов.КредитВБанке);
		списТипыДоговора.Добавить(Перечисления.ТипДоговораКредитовИДепозитов.ВнешнийЗайм);
		списТипыДоговора.Добавить(Перечисления.ТипДоговораКредитовИДепозитов.ВнутреннийЗайм);
		списТипыДоговора.Добавить(Перечисления.ТипДоговораКредитовИДепозитов.ВкладСотрудника);
		
		Объект.ТипДоговора = Перечисления.ТипДоговораКредитовИДепозитов.КредитВБанке;		
		
		ПривестиТипСтатьиДоходаРасхода(Объект.СтатьяДоходовРасходовПроцентов,ПустаяСтатьяРасходов);
		ПривестиТипСтатьиДоходаРасхода(Объект.СтатьяДоходовРасходовКомиссии,ПустаяСтатьяРасходов);
		
	ИначеЕсли Объект.ХарактерДоговора = Перечисления.ХарактерДоговораКредитовИДепозитов.Депозит Тогда
		
		списТипыДоговора.Добавить(Перечисления.ТипДоговораКредитовИДепозитов.ДепозитВБанке);
		
		Объект.ТипДоговора = Перечисления.ТипДоговораКредитовИДепозитов.ДепозитВБанке;
		
		ПривестиТипСтатьиДоходаРасхода(Объект.СтатьяДоходовРасходовПроцентов,ПустаяСтатьяДоходов);
		ПривестиТипСтатьиДоходаРасхода(Объект.СтатьяДоходовРасходовКомиссии,ПустаяСтатьяДоходов);
		
	ИначеЕсли Объект.ХарактерДоговора = Перечисления.ХарактерДоговораКредитовИДепозитов.ЗаймВыданный Тогда
		
		списТипыДоговора.Добавить(Перечисления.ТипДоговораКредитовИДепозитов.ВнешнийЗайм);
		списТипыДоговора.Добавить(Перечисления.ТипДоговораКредитовИДепозитов.ВнутреннийЗайм);
		
		Объект.ТипДоговора = Перечисления.ТипДоговораКредитовИДепозитов.ВнутреннийЗайм;
		
		ПривестиТипСтатьиДоходаРасхода(Объект.СтатьяДоходовРасходовПроцентов,ПустаяСтатьяДоходов);
		ПривестиТипСтатьиДоходаРасхода(Объект.СтатьяДоходовРасходовКомиссии,ПустаяСтатьяДоходов);
		
	КонецЕсли;
	
КонецПроцедуры

