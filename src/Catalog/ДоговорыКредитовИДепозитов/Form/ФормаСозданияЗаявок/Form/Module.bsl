
///////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("Договоры") Тогда
		СписокДоговоров.ЗагрузитьЗначения(Параметры.Договоры);
	КонецЕсли;
	
	Если Параметры.Свойство("Контрагенты") Тогда
		СписокКонтрагентов.ЗагрузитьЗначения(Параметры.Контрагенты);
	КонецЕсли;
	
	Если Параметры.Свойство("ИдентификаторФормы") Тогда
		ИдентификаторФормы = Параметры.ИдентификаторФормы;
	КонецЕсли;
	
	ПериодВыборки.Вариант = ВариантСтандартногоПериода.Следующие7Дней;
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ КОМАНД ФОРМЫ

&НаКлиенте
Процедура СоздатьЗаявки(Команда)
	
	Если НЕ ЗначениеЗаполнено(ПериодВыборки.ДатаНачала) Тогда
		Предупреждение(НСтр("ru = 'Не указана дата начала периода!'"));
		Возврат;
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(ПериодВыборки.ДатаОкончания) Тогда
		Предупреждение(НСтр("ru = 'Не указана дата окончания периода!'"));
		Возврат;
	КонецЕсли;
	
	Если ПериодВыборки.ДатаНачала > ПериодВыборки.ДатаОкончания Тогда
		Предупреждение(НСтр("ru = 'Дата начала периода не может превышать дату окончания периода!'"));
		Возврат;
	КонецЕсли;
	
	Создано = СоздатьЗаявкиСервер();
	
	ШаблонТекста = НСтр("ru='Создано %1 документов'");
	Текст = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ШаблонТекста, Формат(Создано, "ЧН=0"));
	ПоказатьОповещениеПользователя("Создание заявок:",,Текст,БиблиотекаКартинок.Информация32);
	
	Если Создано > 0 Тогда
		Закрыть();				
	КонецЕсли;
		
КонецПроцедуры

///////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

///////////////////////////////////////////////////////////////////////////////
// Прочее

&НаСервере
Функция СоздатьЗаявкиСервер()
	
	Отбор = Новый Структура("ДатаНачала, ДатаОкончания, Договоры, Контрагенты");	
	Отбор.ДатаНачала = ПериодВыборки.ДатаНачала;
	Отбор.ДатаОкончания = ПериодВыборки.ДатаОкончания;
	Отбор.Контрагенты = СписокКонтрагентов;
	Отбор.Договоры = СписокДоговоров;
	Отбор.Вставить("ИдентификаторФормы", ИдентификаторФормы);
	
	Возврат Справочники.ДоговорыКредитовИДепозитов.СоздатьЗаявкиНаРасходДС(Отбор);
	
КонецФункции
