////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// Обработчик подсистемы "Дополнительные отчеты и обработки"
	ДополнительныеОтчетыИОбработки.ПриСозданииНаСервере(ЭтаФорма);
	
	// Обработчик механизма "Контактная информация"
	УправлениеКонтактнойИнформацией.ПриСозданииНаСервере(ЭтаФорма, Объект, "СтраницаКонтактнаяИнформация");
	
	УстановитьПараметрыФункциональныхОпцийФормы(Новый Структура("Склад, Помещение", Объект.Ссылка, Справочники.СкладскиеПомещения.ПустаяСсылка()));
	
	ИспользоватьНесколькоВидовЦен = ПолучитьФункциональнуюОпцию("ИспользоватьНесколькоВидовЦен");
	
	УстановитьВидимостьПоФО();
	
	// подсистема запрета редактирования ключевых реквизитов объектов	
	ЗапретРедактированияРеквизитовОбъектов.ЗаблокироватьРеквизиты(ЭтаФорма);
	
	Если Не ЗначениеЗаполнено(Объект.Ссылка) Тогда
		ВариантКонтроля = Перечисления.ВариантыКонтроля.ОстаткиСУчетомРезерва;
		ПриЧтенииСозданииНаСервере();
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
	НастройкаКонтроляОстатков = РегистрыСведений.НастройкаКонтроляОстатков.ПолучитьНастройкуКонтроляОстатковСклада(Объект.Ссылка);
	
	Если ЗначениеЗаполнено(НастройкаКонтроляОстатков.ВариантКонтроля) Тогда
		
		ВариантКонтроля = НастройкаКонтроляОстатков.ВариантКонтроля;
		СрокПоставки = НастройкаКонтроляОстатков.СрокПоставки;
		ГраницаГрафикаДоступности = НастройкаКонтроляОстатков.ГраницаГрафикаДоступности;
		
	Иначе
		
		ВариантКонтроля = ТекущийОбъект.ВариантКонтроля;
		
	КонецЕсли;
	
	ПриЧтенииСозданииНаСервере();
	
КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)

	//Сохранение данных в реквизитах.
	ТекущийОбъект.ВариантКонтроля           = ВариантКонтроля;
	ТекущийОбъект.СрокПоставки              = СрокПоставки;
	ТекущийОбъект.ГраницаГрафикаДоступности = ГраницаГрафикаДоступности;

	// Обработчик механизма "Контактная информация"
	УправлениеКонтактнойИнформацией.ПередЗаписьюНаСервере(ЭтаФорма, ТекущийОбъект, Отказ);
	
	Отказ = Не ТекущийОбъект.ПроверитьЗаполнение();

	Если Не Отказ Тогда
		ТекущийОбъект.ДополнительныеСвойства.Вставить("ПропуститьОбновлениеФлагаКонтроляОперативныхОстатков");
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)

 	УстановитьПараметрыФункциональныхОпцийФормы(Новый Структура("Склад",Объект.Ссылка));
	
	Если Объект.НастройкаАдресногоХранения = Перечисления.НастройкиАдресногоХранения.ЯчейкиОстатки
		 И Не ПолучитьФункциональнуюОпцию("ИспользоватьУпаковкиНоменклатуры") Тогда
   		 ОповещатьОбОтключенныхУпаковках = Истина;
	КонецЕсли;
	 
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	
	Оповестить("Запись_Склады",ПараметрыЗаписи,Объект.Ссылка);
	
	НеобходимоОбновлятьИнтерфейс = Ложь;
	
	Для Каждого СтрСтруктуры из КешРеквизитов Цикл
		Если Объект[СтрСтруктуры.Ключ] <> СтрСтруктуры.Значение Тогда
			НеобходимоОбновлятьИнтерфейс = Истина;
			Прервать;
		КонецЕсли;
	КонецЦикла;
	
	Если НеобходимоОбновлятьИнтерфейс Тогда
		ОбновитьИнтерфейс();
		
		КешРеквизитовСтуктура = Новый Структура;
		КешРеквизитовСтуктура.Вставить("ИспользоватьСкладскиеПомещения",Объект.ИспользоватьСкладскиеПомещения);
		КешРеквизитовСтуктура.Вставить("ИспользоватьОрдернуюСхемуПриОтгрузке",Объект.ИспользоватьОрдернуюСхемуПриОтгрузке);
		КешРеквизитовСтуктура.Вставить("ИспользоватьОрдернуюСхемуПриОтраженииИзлишковНедостач",Объект.ИспользоватьОрдернуюСхемуПриОтраженииИзлишковНедостач);
		КешРеквизитовСтуктура.Вставить("ИспользоватьОрдернуюСхемуПриПоступлении",Объект.ИспользоватьОрдернуюСхемуПриПоступлении);
		КешРеквизитовСтуктура.Вставить("НастройкаАдресногоХранения",Объект.НастройкаАдресногоХранения);
		КешРеквизитовСтуктура.Вставить("ИспользованиеРабочихУчастков",Объект.ИспользованиеРабочихУчастков);
		
		КешРеквизитов = Новый ФиксированнаяСтруктура(КешРеквизитовСтуктура);
	КонецЕсли;
	
	Если ОповещатьОбОтключенныхУпаковках Тогда
		ТекстСообщения = НСтр("ru='В настройках учета отключено использование упаковок номенклатуры. Оприходовать товар на склад
		|с хранением остатков в разрезе ячеек без указания упаковок невозможно.'");
		Предупреждение(ТекстСообщения);
	КонецЕсли;
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ ШАПКИ ФОРМЫ

&НаКлиенте
Процедура ИспользоватьОрдернуюСхемуПриОтгрузкеПриИзменении(Элемент)
	
	СогласоватьЗначенияИУстановитьДоступность();
	Объект.КонтролироватьОперативныеОстатки = Объект.ИспользоватьОрдернуюСхемуПриОтгрузке;
	
КонецПроцедуры

&НаКлиенте
Процедура ИспользоватьОрдернуюСхемуПриОтраженииИзлишковНедостачПриИзменении(Элемент)
	
	ПриИзмененииОрдернойСхемыОтраженияИзлишковИНедостач();
	
КонецПроцедуры

&НаКлиенте
Процедура ИспользоватьОрдернуюСхемуПриПоступленииПриИзменении(Элемент)
	
	СогласоватьЗначенияИУстановитьДоступность();
	
КонецПроцедуры

&НаКлиенте
Процедура ИспользоватьСкладскиеПомещенияПриИзменении(Элемент)
	
	СогласоватьЗначенияИУстановитьДоступность();
	
КонецПроцедуры

&НаКлиенте
Процедура НастройкаАдресногоХраненияОчистка(Элемент, СтандартнаяОбработка)

	СтандартнаяОбработка = Ложь;

КонецПроцедуры

&НаКлиенте
Процедура НастройкаАдресногоХраненияНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)

	СтандартнаяОбработка = Ложь;
	
	ДанныеВыбора = Новый СписокЗначений;
	ДанныеВыбора.Добавить(ПредопределенноеЗначение("Перечисление.НастройкиАдресногоХранения.НеИспользовать"));
	ДанныеВыбора.Добавить(ПредопределенноеЗначение("Перечисление.НастройкиАдресногоХранения.ЯчейкиСправочно"));
	Если Объект.ИспользоватьОрдернуюСхемуПриОтгрузке
		И Объект.ИспользоватьОрдернуюСхемуПриПоступлении
		И Объект.ИспользоватьОрдернуюСхемуПриОтраженииИзлишковНедостач
		И Объект.ТипСклада <> ПредопределенноеЗначение("Перечисление.ТипыСкладов.РозничныйМагазин") Тогда
		ДанныеВыбора.Добавить(ПредопределенноеЗначение("Перечисление.НастройкиАдресногоХранения.ЯчейкиОстатки"));
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ИспользованиеРабочихУчастковНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ДанныеВыбора = Новый СписокЗначений;
	ДанныеВыбора.Добавить(ПредопределенноеЗначение("Перечисление.ИспользованиеСкладскихРабочихУчастков.НеИспользовать"));
	ДанныеВыбора.Добавить(ПредопределенноеЗначение("Перечисление.ИспользованиеСкладскихРабочихУчастков.Использовать"));
	
КонецПроцедуры

&НаКлиенте
Процедура ИспользованиеРабочихУчастковОчистка(Элемент, СтандартнаяОбработка)

	СтандартнаяОбработка = Ложь;

КонецПроцедуры

&НаКлиенте
Процедура ТипСкладаПриИзменении(Элемент)
	
	ТипаСкладаПриИзмененииСервер();
	
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_КонтактнаяИнформацияПриИзменении(Элемент)
	
	УправлениеКонтактнойИнформациейКлиент.ПредставлениеПриИзменении(ЭтаФорма, Элемент);
	
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_КонтактнаяИнформацияНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	УправлениеКонтактнойИнформациейКлиент.ПредставлениеНачалоВыбора(ЭтаФорма, Элемент, Модифицированность, СтандартнаяОбработка);
	
КонецПроцедуры

&НаКлиенте
Процедура ФорматМагазинаПриИзменении(Элемент)
	
	ФорматМагазинаПриИзмененииСервер();
	
КонецПроцедуры

&НаКлиенте
Процедура КонтролироватьАссортиментПриИзменении(Элемент)
	
	ФорматМагазинаПриИзмененииСервер();
	
КонецПроцедуры

&НаКлиенте
Процедура НастройкаАдресногоХраненияПриИзменении(Элемент)
	УстановитьДоступностьПолейКонтроля();
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ КОМАНД ФОРМЫ

&НаКлиенте
Процедура ВариантКонтроляПриИзменении(Элемент)

	УстановитьДоступностьПолейКонтроля();

КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_РазрешитьРедактированиеРеквизитовОбъекта(Команда)

	Если Не Объект.Ссылка.Пустая() Тогда
		Результат = ОткрытьФормуМодально("Справочник.Склады.Форма.РазблокированиеРеквизитов");
		Если ТипЗнч(Результат) = Тип("Массив") И Результат.Количество() > 0 Тогда

			ЗапретРедактированияРеквизитовОбъектовКлиент.УстановитьДоступностьЭлементовФормы(ЭтаФорма, Результат);
			УстановитьДоступностьПолейКонтроля();
			
		КонецЕсли;
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура НастройкиПодпитки(Команда)
	ПараметрыФормы = Новый Структура("Ключ",КлючЗаписиНастроекПодпитки());
	ОткрытьФорму("РегистрСведений.НастройкиАдресныхСкладов.ФормаЗаписи", ПараметрыФормы, ЭтаФорма,,);
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

////////////////////////////////////////////////////////////////////////////////
// При изменении реквизитов

&НаСервере
Процедура ПриИзмененииОрдернойСхемыОтраженияИзлишковИНедостач()
	
	СкладыКлиентСервер.СогласоватьЗначенияПризнаков(Объект);
	УстановитьДоступностьПолейКонтроля();
	
КонецПроцедуры

&НаСервере
Процедура ФорматМагазинаПриИзмененииСервер()
	
	Если ЗначениеЗаполнено(Объект.ФорматМагазина) Тогда
		Объект.РозничныйВидЦены = ОбщегоНазначения.ПолучитьЗначениеРеквизита(Объект.ФорматМагазина,"РозничныйВидЦены");
	КонецЕсли;
	УстановитьДоступностьРозничногоВидаЦенИФормата();
	
КонецПроцедуры

&НаСервере
Процедура ТипаСкладаПриИзмененииСервер()
	
	Если Не ИспользоватьНесколькоВидовЦен Тогда
		Если Объект.ТипСклада = ПредопределенноеЗначение("Перечисление.ТипыСкладов.РозничныйМагазин") Тогда
			Объект.РозничныйВидЦены = Ценообразование.ВидЦеныПрайсЛист();
		КонецЕсли;
	КонецЕсли;
	СкладыКлиентСервер.СогласоватьЗначенияПризнаков(Объект);
	УстановитьДоступностьПолейКонтроля();
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// Прочее

&НаСервере
Процедура ПриЧтенииСозданииНаСервере()
	УстановитьДоступностьПолейКонтроля();
	
	Если ЗначениеЗаполнено(Объект.Ссылка) Тогда
		КешРеквизитовСтуктура = Новый Структура;
		КешРеквизитовСтуктура.Вставить("ИспользоватьСкладскиеПомещения",Объект.ИспользоватьСкладскиеПомещения);
		КешРеквизитовСтуктура.Вставить("ИспользоватьОрдернуюСхемуПриОтгрузке",Объект.ИспользоватьОрдернуюСхемуПриОтгрузке);
		КешРеквизитовСтуктура.Вставить("ИспользоватьОрдернуюСхемуПриОтраженииИзлишковНедостач",Объект.ИспользоватьОрдернуюСхемуПриОтраженииИзлишковНедостач);
		КешРеквизитовСтуктура.Вставить("ИспользоватьОрдернуюСхемуПриПоступлении",Объект.ИспользоватьОрдернуюСхемуПриПоступлении);
		КешРеквизитовСтуктура.Вставить("НастройкаАдресногоХранения",Объект.НастройкаАдресногоХранения);
		КешРеквизитовСтуктура.Вставить("ИспользованиеРабочихУчастков",Объект.ИспользованиеРабочихУчастков);
	Иначе
		КешРеквизитовСтуктура = Новый Структура;
		КешРеквизитовСтуктура.Вставить("ИспользоватьСкладскиеПомещения",Ложь);
		КешРеквизитовСтуктура.Вставить("ИспользоватьОрдернуюСхемуПриОтгрузке",Ложь);
		КешРеквизитовСтуктура.Вставить("ИспользоватьОрдернуюСхемуПриОтраженииИзлишковНедостач",Ложь);
		КешРеквизитовСтуктура.Вставить("ИспользоватьОрдернуюСхемуПриПоступлении",Ложь);
		КешРеквизитовСтуктура.Вставить("НастройкаАдресногоХранения",Перечисления.НастройкиАдресногоХранения.НеИспользовать);
		КешРеквизитовСтуктура.Вставить("ИспользованиеРабочихУчастков",Перечисления.ИспользованиеСкладскихРабочихУчастков.НеИспользовать);
	КонецЕсли;	
	Элементы.НастройкаАдресногоХранения.ТолькоПросмотр  = Не Объект.НастройкаАдресногоХранения = Перечисления.НастройкиАдресногоХранения.НеИспользовать;

	КешРеквизитов = Новый ФиксированнаяСтруктура(КешРеквизитовСтуктура);
КонецПроцедуры

&НаСервере
Процедура СогласоватьЗначенияИУстановитьДоступность()
	
	СкладыКлиентСервер.СогласоватьЗначенияПризнаков(Объект);
	УстановитьДоступностьПолейКонтроля();
	
КонецПроцедуры

&НаСервере
Процедура УстановитьДоступностьПолейКонтроля()
	
	ДоступностьПолейКонтроля = ВариантКонтроля = Перечисления.ВариантыКонтроля.ОстаткиСУчетомГрафика;
	Элементы.ДлительностьПериодаКонтроля.Доступность = ДоступностьПолейКонтроля;
	Элементы.ГраницаГрафикаДоступности.Доступность = ДоступностьПолейКонтроля;
	
	Элементы.ИспользоватьСкладскиеПомещения.Доступность = 
											Объект.ИспользоватьОрдернуюСхемуПриОтгрузке
											И Объект.ИспользоватьОрдернуюСхемуПриПоступлении
											И Объект.ИспользоватьОрдернуюСхемуПриОтраженииИзлишковНедостач
											И Объект.ТипСклада <> Перечисления.ТипыСкладов.РозничныйМагазин;
											
	Элементы.НастройкаАдресногоХранения.Доступность     = Не Объект.ИспользоватьСкладскиеПомещения;
	
	Элементы.НачинатьОтгрузкуПослеФормированияЗаданияНаПеревозку.Доступность = Объект.ИспользоватьОрдернуюСхемуПриОтгрузке;
	
	Элементы.ИспользованиеРабочихУчастков.Доступность = 
						Объект.НастройкаАдресногоХранения = Перечисления.НастройкиАдресногоХранения.ЯчейкиОстатки
						Или Объект.НастройкаАдресногоХранения = Перечисления.НастройкиАдресногоХранения.ЯчейкиСправочно;
						
	Элементы.НастройкиПодпитки.Видимость = 	Объект.НастройкаАдресногоХранения = Перечисления.НастройкиАдресногоХранения.ЯчейкиОстатки;
	
	Элементы.ИспользоватьСтатусыПриходныхОрдеров.Доступность = Объект.ИспользоватьОрдернуюСхемуПриПоступлении;
	Элементы.ИспользоватьСтатусыРасходныхОрдеров.Доступность = Объект.ИспользоватьОрдернуюСхемуПриОтгрузке
																И Объект.НастройкаАдресногоХранения <> Перечисления.НастройкиАдресногоХранения.ЯчейкиОстатки
																И Объект.НастройкаАдресногоХранения <> Перечисления.НастройкиАдресногоХранения.ОпределяетсяНастройкамиПомещения
																И Не Объект.ИспользоватьСерииНоменклатуры;
	
	УстановитьДоступностьРозничногоВидаЦенИФормата();
	
КонецПроцедуры

&НаСервере
Процедура УстановитьДоступностьРозничногоВидаЦенИФормата()
	
	ЭтоРозничныйСклад = Объект.ТипСклада = Перечисления.ТипыСкладов.РозничныйМагазин;
	ДоступенРозничныйВидЦен = ЭтоРозничныйСклад;
	Если Объект.КонтролироватьАссортимент Тогда
		ДоступенРозничныйВидЦен = Ложь;
	КонецЕсли;
	
	Элементы.РозничныйВидЦены.Доступность = ДоступенРозничныйВидЦен;
	Элементы.ФорматМагазина.Доступность = ЭтоРозничныйСклад;
	Элементы.КонтролироватьАссортимент.Доступность = ЭтоРозничныйСклад;
	Элементы.ФорматМагазина.АвтоОтметкаНезаполненного = Объект.КонтролироватьАссортимент;	
	
КонецПроцедуры

Процедура УстановитьВидимостьПоФО()
	
	Элементы.ГруппаТипСклада.Видимость                              = ПолучитьФункциональнуюОпцию("ИспользоватьРозничныеПродажи");
	Элементы.ГруппаАссортимент.Видимость                            = ПолучитьФункциональнуюОпцию("ИспользоватьАссортимент"); 
	Элементы.ВидыЦенОтступ.Видимость                                = ПолучитьФункциональнуюОпцию("ИспользоватьНесколькоВидовЦен");
	Элементы.ГруппаРозничныйВидЦены.Видимость                       = ПолучитьФункциональнуюОпцию("ИспользоватьРозничныеПродажи");
	Элементы.ИспользованиеОрдернойСхемыОтступ.Видимость             = ПолучитьФункциональнуюОпцию("ИспользоватьОрдерныеСклады");
	Элементы.ГруппаДоставка.Видимость                               = ПолучитьФункциональнуюОпцию("ИспользоватьУправлениеДоставкой");
	Элементы.ГруппаИспользоватьСкладскиеПомещения.Видимость         = ПолучитьФункциональнуюОпцию("ИспользоватьОрдерныеСклады");
    Элементы.ГруппаДополнительныеНастройкиАдресныхСкладов.Видимость = ПолучитьФункциональнуюОпцию("ИспользоватьОрдерныеСклады");
	
	Элементы.ВидыЦенОтступ.ОтображатьЗаголовок                      = Элементы.ГруппаТипСклада.Видимость;
	Элементы.КонтрольОтступ.ОтображатьЗаголовок                     = Элементы.ГруппаТипСклада.Видимость
																		Или Элементы.ВидыЦенОтступ.Видимость;
	Элементы.ДелениеСкладаОтступ.ОтображатьЗаголовок                = Элементы.ИспользованиеОрдернойСхемыОтступ.Видимость;
	
КонецПроцедуры

&НаСервере
Функция КлючЗаписиНастроекПодпитки()
	СтруктураИзмерений = Новый Структура;
	СтруктураИзмерений.Вставить("Склад", Объект.Ссылка);
	СтруктураИзмерений.Вставить("Помещение", Справочники.СкладскиеПомещения.ПустаяСсылка());
	
	Возврат РегистрыСведений.НастройкиАдресныхСкладов.СоздатьКлючЗаписи(СтруктураИзмерений);
КонецФункции
