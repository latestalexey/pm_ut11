#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда


////////////////////////////////////////////////////////////////////////////////
// ПРОГРАММНЫЙ ИНТЕРФЕЙС

// Функция формирует таблицу комплектующих номенклатуры.
//
// Параметры:
//  ВариантКомплектации - ссылка на вариант комплектации.
//  Упаковка -  ссылка на справочник упаковки или неопределено.
//  Количество - число, количество комплектов.
//
// Возвращаемое значение:
//  Таблица комплектующих.
//
Функция ПолучитьКомплектующиеНоменклатуры(ВариантКомплектации, Упаковка = Неопределено, Количество = 1) Экспорт

	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	Товары.Номенклатура       КАК Номенклатура,
	|	Товары.Характеристика     КАК Характеристика,
	|	Товары.Упаковка           КАК Упаковка,
	|	Товары.КоличествоУпаковок
	|		* &Коэффициент        КАК КоличествоУпаковок,
	|	Товары.Количество
	|		* &Коэффициент        КАК Количество,
	|	Товары.ДоляСтоимости      КАК ДоляСтоимости
	|ИЗ
	|	Справочник.ВариантыКомплектацииНоменклатуры.Товары КАК Товары
	|ГДЕ
	|	Товары.Ссылка = &Ссылка
	|
	|УПОРЯДОЧИТЬ ПО
	|	Товары.НомерСтроки
	|");
	Запрос.УстановитьПараметр("Коэффициент", ?(ЗначениеЗаполнено(Упаковка), Упаковка.Коэффициент, 1) * Количество);
	Запрос.УстановитьПараметр("Ссылка", ВариантКомплектации);

	Возврат Запрос.Выполнить().Выгрузить();

КонецФункции

// Функция возвращает основной вариант комплектации.
//
// Параметры:
//  Номенклатура - ссылка на номенклатуру.
//  Характеристика -  характеристика номенклатуры.
//
// Возвращаемое значение:
//  Ссылка на основной вариант комплектации.
// 
Функция ПолучитьОсновнуюКомплектацию(Номенклатура, Характеристика) Экспорт

	Запрос = Новый Запрос(
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	Таблица.Ссылка КАК Ссылка
	|ИЗ
	|	Справочник.ВариантыКомплектацииНоменклатуры КАК Таблица
	|ГДЕ
	|	Таблица.Владелец = &Номенклатура
	|	И Таблица.Характеристика = &Характеристика
	|	И Таблица.Основной
	|");
	Запрос.УстановитьПараметр("Номенклатура", Номенклатура);
	Запрос.УстановитьПараметр("Характеристика", Характеристика);
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда
		Результат = Выборка.Ссылка;
	Иначе
		Результат = Справочники.ВариантыКомплектацииНоменклатуры.ПустаяСсылка();
	КонецЕсли;

	Возврат Результат;

КонецФункции

// Функция формирует массив реквизитов для блокировки редактирования
//
// Возвращаемое значение:
// Массив имен блокируемых реквизитов.
//
Функция ПолучитьБлокируемыеРеквизитыОбъекта() Экспорт

	Результат = Новый Массив;
	Результат.Добавить("Характеристика");
	Результат.Добавить("Владелец");

	Возврат Результат;

КонецФункции

// Функция проверяет принадлежность варианта комплектации номенклатуре\характеристике,
// и подбирает основной вариант.
// 
Функция ПроверитьПринадлежностьВариантаКомплектации(ВариантКомплектации, Номенклатура, Характеристика) Экспорт

	ТекстЗапроса = 
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	1
	|ИЗ
	|	Справочник.ВариантыКомплектацииНоменклатуры КАК Таблица
	|ГДЕ
	|	Таблица.Ссылка = &ВариантКомплектации
	|	И Таблица.Владелец = &Номенклатура
	|	И Таблица.Характеристика = &Характеристика
	|;
	|///////////////////////////////////////////////////
	|ВЫБРАТЬ ПЕРВЫЕ 1
	|	Таблица.Ссылка КАК Ссылка
	|ИЗ
	|	Справочник.ВариантыКомплектацииНоменклатуры КАК Таблица
	|ГДЕ
	|	Таблица.Владелец = &Номенклатура
	|	И Таблица.Характеристика = &Характеристика
	|	И Таблица.Основной
	|";
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.УстановитьПараметр("ВариантКомплектации", ВариантКомплектации);
	Запрос.УстановитьПараметр("Номенклатура", Номенклатура);
	Запрос.УстановитьПараметр("Характеристика", Характеристика);
	МассивРезультатов = Запрос.ВыполнитьПакет();
	
	ПринадлежитНоменклатуреХарктеристике = Не МассивРезультатов[0].Пустой();

	Выборка = МассивРезультатов[1].Выбрать();
	Если Выборка.Следующий() Тогда
		ОсновнойВариантКомплектации = Выборка.Ссылка;
	Иначе
		ОсновнойВариантКомплектации = Справочники.ВариантыКомплектацииНоменклатуры.ПустаяСсылка();
	КонецЕсли;

	Возврат Новый Структура("ПринадлежитНоменклатуреХарктеристике, ОсновнойВариантКомплектации",
					ПринадлежитНоменклатуреХарктеристике,
					ОсновнойВариантКомплектации);
КонецФункции
#КонецЕсли