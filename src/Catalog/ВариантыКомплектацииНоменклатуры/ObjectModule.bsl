#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда


////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ

Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)

	МассивНепроверяемыхРеквизитов = Новый Массив;

	// Проверка заполнения характеристик в т.ч. товары.
	НоменклатураСервер.ПроверитьЗаполнениеХарактеристик(ЭтотОбъект, МассивНепроверяемыхРеквизитов, Отказ);
	
	ОбщегоНазначенияУТ.ПроверитьЗаполнениеКоличества(ЭтотОбъект, ПроверяемыеРеквизиты, Отказ);

	// Проверка заполнения характеристик в шапке.
	Если Не Справочники.Номенклатура.ХарактеристикиИспользуются(Владелец) Тогда

		МассивНепроверяемыхРеквизитов.Добавить("Характеристика");

	КонецЕсли;
	
	СтруктураПоиска = Новый Структура;
	СтруктураПоиска.Вставить("Номенклатура", Владелец);
	СтруктураПоиска.Вставить("Характеристика", Характеристика);
	
	НайденныеСтроки = Товары.НайтиСтроки(СтруктураПоиска);
	
	Для Каждого СтрокаТЧ из НайденныеСтроки Цикл
		
		ТекстСообщения = НСтр("ru = 'В строке %НомерСтроки% указан товар ""%НазваниеТовара%"".
		|Один и тот же товар не может являться и комплектом, и комплектующей одновременно.'");
		
		ТекстСообщения = СтрЗаменить(ТекстСообщения, "%НазваниеТовара%",	НоменклатураКлиентСервер.ПредставлениеНоменклатуры(Владелец, Характеристика));
		ТекстСообщения = СтрЗаменить(ТекстСообщения, "%НомерСтроки%", СтрокаТЧ.НомерСтроки);
	
		Поле = ОбщегоНазначенияКлиентСервер.ПутьКТабличнойЧасти("Товары",СтрокаТЧ.НомерСтроки,"Номенклатура");
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения,,Поле,"Объект",Отказ);
		
	КонецЦикла;

	ОбщегоНазначения.УдалитьНепроверяемыеРеквизитыИзМассива(ПроверяемыеРеквизиты,
			МассивНепроверяемыхРеквизитов);

КонецПроцедуры

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, СтандартнаяОбработка)

	Если ТипЗнч(ДанныеЗаполнения) = Тип("Структура")
		И ДанныеЗаполнения.Свойство("Владелец", Владелец) И ЗначениеЗаполнено(Владелец) Тогда

		ДанныеЗаполнения.Свойство("Характеристика", Характеристика);

		Основной = Не СуществуетОсновнойВариантКомплектации(Владелец, Характеристика);

	КонецЕсли;

КонецПроцедуры

Процедура ПриКопировании(ОбъектКопирования)

	Основной = Не СуществуетОсновнойВариантКомплектации(Владелец, Характеристика);

КонецПроцедуры

Процедура ПередЗаписью(Отказ)

	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;

	Если Основной И Не Ссылка.Основной Тогда

		УстановитьПривилегированныйРежим(Истина);

		Запрос = Новый Запрос(
		"ВЫБРАТЬ
		|	Таблица.Ссылка КАК Ссылка
		|ИЗ
		|	Справочник.ВариантыКомплектацииНоменклатуры КАК Таблица
		|ГДЕ
		|	Таблица.Владелец         = &Владелец
		|	И Таблица.Характеристика = &Характеристика
		|	И Таблица.Основной
		|	И Таблица.Ссылка <> &Ссылка
		|");
		Запрос.УстановитьПараметр("Владелец", Владелец);
		Запрос.УстановитьПараметр("Характеристика", Характеристика);
		Запрос.УстановитьПараметр("Ссылка", Ссылка);
		Выборка = Запрос.Выполнить().Выбрать();
		Пока Выборка.Следующий() Цикл

			Объект = Выборка.Ссылка.ПолучитьОбъект();
			Объект.Основной = Ложь;
			Объект.Записать();

		КонецЦикла;

	КонецЕсли;

КонецПроцедуры


////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

////////////////////////////////////////////////////////////////////////////////
//Прочее

Функция СуществуетОсновнойВариантКомплектации(Номенклатура, ХарактеристикаНоменклатуры = Неопределено)

	ТекстЗапроса = 
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	1
	|ИЗ
	|	Справочник.ВариантыКомплектацииНоменклатуры КАК Таблица
	|ГДЕ
	|	Таблица.Владелец = &Номенклатура
	|	И Таблица.Основной
	|";
	Если ЗначениеЗаполнено(ХарактеристикаНоменклатуры) Тогда
		ТекстЗапроса = ТекстЗапроса + " И Таблица.Характеристика = &Характеристика ";
	КонецЕсли;

	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.УстановитьПараметр("Номенклатура", Номенклатура);
	Запрос.УстановитьПараметр("Характеристика", ХарактеристикаНоменклатуры);
	Возврат Не Запрос.Выполнить().Пустой();

КонецФункции
#КонецЕсли